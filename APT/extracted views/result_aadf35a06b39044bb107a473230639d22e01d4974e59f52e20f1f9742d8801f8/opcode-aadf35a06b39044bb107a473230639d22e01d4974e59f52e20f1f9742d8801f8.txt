push call ret ret ljmp inc add sahf lahf jecxz,pn pop xchg out cmp imul pop push rcl mov call imull popf daa jno or adc mov add mov mov aas fwait sbb inc or pushf aaa mov add mov popa loopne outsl xor int sub arpl jg notb imul jbe ret or lock lret les sbb sub lods xor mov pop ja add cmpb test pushl push lds hlt rorl cs aas int3 and or andb mov xor jae fwait in cli mov xchg mov pop inc mov in mov mov dec iret and fidivr sbb aas inc testl jne cmp sbb xor dec mov mov stos mov mov sahf adc jecxz addl rorl mov hlt add sub pop mov mov push lret add xor cmp or push add pushf xchg fdivl adc sbb fsubs loopne adc notb and cwtl sbb (bad) in jmp iret pop fbstp or pop je mov dec (bad) push pop and pop rcrb lea pusha adc xchg and clc inc mov cmc js jns mov jp ja dec sbb sbb adc fidiv aas inc mulb ja inc sub loope shlb aas (bad) or push pop dec jo mov sbb (bad) aaa xchg mulb cmc fimul ret jl dec js je dec pop ror hlt adc sub xor (bad) fcoms xchg sub jb das fistpl mov sub (bad) clc sbb lods or push push mov stos dec mov sub ficom aam sbb adc xchg pusha inc into pop or xchg or lret xor xchg push jg pop lods mov out int jge outsb repnz mov fsubrl pop xchg dec pop push dec xor xchg loope xor lods stos adc xorl into mov repnz and xor cmp adc sub and or les jl jo xor or js or xchg lea xlat xor (bad) add pop xchg (bad) push lret push out mov jae inc add test mov cmpsb rorl dec std jp push sbb repnz sub movsl pop mov aaa outsb (bad) add gs xchg jecxz lcall xchg stc (bad) dec cltd and ja (bad) leave les js push fadds dec sub gs mov ljmp pop call in pop push movsb push cmp dec or inc xor int int3 jecxz cmc push dec lods xor mov pop adc cwtl fistpl jmp pop imul cs (bad) or movsl stos mov push push inc test sub or jp sub push movsb inc pop (bad) inc sbb clc aas mov lds in xor mov das inc mov xchg lret int lods dec dec xchg hlt or mov cwtl or cmp jno fsubr gs dec (bad) adc dec (bad) xor stos push out inc xchg pop jo mov pop cmpsb aam addr16 pop jb cli sbb pop in cli xor push jb push icebp and cmc dec scas or adc sub imul dec pop lds or or into test leave mov sbb std add and aas shll xor jns add daa ret sbb and dec adc push pop xchg cmp sub mov loop fnstsw in js (bad) sub das sbb dec test sbb and pop gs fldln2 (bad) ja adc mov (bad) jle out enter mov ja add jge es xchg outsl (bad) cwtl fistpl mov cs or mov test or outsb repnz ds fdivrl arpl sarl inc sbb test push push cli icebp outsb cmp add cmp lcall out sarb jecxz lock rcr or sbb dec popf pop out loope lcall push mov lods vmwrite mov mov and mov dec mov pop push fmuls cmp pop imul add jmp ret xor repnz cld sbb cmpsl mov enter cmc nop fcmovnbe aam push push movsb mov (bad) xchg push mov xchg inc dec add aaa pop xlat push mov mov jmp mov rcrl xchg mov cs adc call test lahf lods xor in mov int3 mov cmc push mov daa ffreep sub incb lods lcall push xchg jnp roll in adc cs test out and cmp sbb sbb xor js out repz or push xchg stos pusha (bad) jns pop cmp push aam (bad) insb popa fwait enter push lds jnp dec xchg sbb push lods in push hlt adc fist js mulb pop xor inc imul push daa out (bad) ficoml fdivrp xor test xchg inc jg ds hlt add sarl cwtl cli jg in inc loope jmp in test cmp dec cmpsl or stos or mov cs loopne pop (bad) shlb movsb mov pop pop enter sti add xchg xchg ds add lock adc xlat xchg bound jecxz dec push mov mov sbb inc fsts mov mov lock cmp pop data16 (bad) pusha push leave repnz in shl mov (bad) stc fld xchg push mov icebp lret cmc lret bound inc das xor pop les inc xor push test out orb xor test mov lds cmp (bad) sub je pop out and ss mov inc adc bound das xor insl sarb fwait mov xor jg xchg mov jle in aas cmp push dec xchg pop mov push iret adc or arpl jno lahf or in pop inc aaa pop mov inc lods mull and outsl imul int3 or sbb inc jle or shrl and hlt pop nop (bad) out xlat push add inc add mov insl jl je cmpl stos push int mov ror es add in aas and mov and scas insl inc jae mov and dec inc sti aaa std out adcb push mov inc xor arpl insb shll push jmp pushf add sub ror pushf xchg mov mov and pop enter lret xor mov adc or fxch adc jl sub ss cmp (bad) lock in rcrb add mov mov xor test insl xor xor mov outsl aad lods loopne leave sahf sbb cli cwtl pop cmpsl outsb fcmovb negb ss orl in pop popa jg and sarb out (bad) fild fbstp xor ret dec cltd inc push pop mov mov push cmp fdivrs pusha or mov dec pop fldt jno shll cmpsb pop mov fidivr dec or cmp imul popf sbb jbe in push and movsl adc fs aaa insb adc add rolb loopne xor movsl test inc sub mov xchg adc jle sbb sub test adc in aas lods mov popa cmp xor in jno in lds jns aam outsb jbe xchg dec test jp js cltd lret nop imul hlt inc mov mov adc lods and das or mov fistpl aas sub out and or xor jae mov pop add xchg inc (bad) mov pop fcoms mov iret pop ret jo fcoms popa mov or mov sub inc data16 mov push jb arpl push leave out test or mov test in les ret ret add scas cwtl mov sub xchg jnp out dec enter fmull sub jmp mov (bad) cmp imul dec add lret mov inc in pop or sbb xchg cli jno mov bound cmp orb xor dec ljmp dec cmp aas fisubrl stc inc jmp sbb mov or dec xchg jb xor sbb daa add test sub xchg loop pmuludq sub lds or jbe or push in outsl loope push jmp (bad) dec cltd mov mov mov es dec add xor mov push pop cmp ret jne test xor scas sub cld jb ljmp les cmp adc outsb sbb rcl adc lock inc mov lret fstpl idivb fsubs jg push or cmp addr16 and test push mov xchg xor mov jb push pop enter mov (bad) mov in stos add jb icebp out pushf ss jae jmp cmp (bad) jno scas cmp mov in dec mov arpl adc dec mov imul mov mov lret xchg mov jg fisub std mov mov mov sub jns xchg out dec inc rol pop pop dec enter test fcmovne and sahf lods dec fmuls addl jno lcall enter inc je and lods je cmc push incb lret sbb pop rcrb aas cld (bad) and mov cli xchg loopne jns ljmp mov jg movsl adc mov mov mov (bad) cltd cmpl mov lods popf (bad) fimull call enter push add jge div inc jns or test inc int push (bad) lret xor jbe ret cld mov adcl push fs xchg mov mov mov lds pusha mov dec add and cltd out jge xor fbld mov inc lds fimull sbb inc inc pop inc je ret pushf repz cmp lahf xor dec in cwtl addb imul push mov icebp mov (bad) je movsb in test pop addr16 mov aaa push sub test (bad) mov call add aam data16 lahf jl leave add fucomi stos dec add sub or addr16 cmp sahf pop mov jno dec les pusha pop icebp std cltd add xor jp shrb out (bad) mov roll adc stos sbb push add aas outsb pop mov adc inc xchg aad fwait push mov notb in mov into lods mov mov mov insl push lock ficom idiv (bad) lret dec xchg sub aaa dec cmp pop add pop lahf adcl lock mov ficompl cmp mov pop pop insl dec hlt loope inc mov cmc jb idivb jl pop and mov enter or and shrb mov in xor mov cmpsb into jbe in shrl mov es fild lods pop stos scas sub fstps add mov ret mov cmp fcompl and mov mov mov imul nop mov fiaddl xchg jle dec cmp mov dec mov daa imul test sti les js inc lcall test add std jne scas lods mov sbb test imul inc hlt bound mov adc int jecxz pop (bad) xor xchg and dec js lods cmp pop add pop (bad) xchg shr jge or jns jmp cmp call xchg loope mov xor clc pop rorl in xchg xchg call mov xor dec mov adc pop (bad) jmp or sub out sub cmpsl scas fiadd leave push adc pop mov mov xchg or xor sar cmp mov adc (bad) lcall loop sub es shlb inc das pop lcall push lods mov ret pushf and mov sub dec bound pop xchg or mov jnp mov xchg clc movsl pushf iret ja sub repz aam mov sub push punpckhbw in push sbb jl cmpsb cmp mov inc lds xor aad rcrb adc mov mov mov mov sbb and sti xchg movsl jge xchg jns insl out scas in idivb inc ret mov imul movl xor sbb jno,pt int mov jl push lea popf and xchg and dec mov or mov jg icebp sbb dec xchg lock (bad) jbe lods ss add rolb adcl js icebp imul loop lds push and or xor add push adc fistl sbb mov mov std (bad) adc push call in ljmp xchg ret arpl es dec adc add gs and push push or aas loop sub (bad) or test add mov xor add sub dec mov sub outsb cli adc jecxz jne xchg mov lret dec pushf repnz (bad) mov in lea js pushf dec xor enter nop dec mov pop aaa jns lret (bad) cmpsb testl repnz push test and (bad) in cmpl inc xor sub mov mov add rolb pusha xchg inc lcall sub call xchg ljmp (bad) fwait mov mov aas push int3 push inc dec pop cmp pop in xchg cmc fdivrs das (bad) movsl xor xchg stos adc dec lock xchg fldt and xchg (bad) insb adc (bad) xor adc add enter out dec push mov and cmp mov decl out dec mov xchg imul add call dec adc out cmp mov adc imul mov repnz sti pop jns sub mov xchg mov dec int cs arpl rcl push push fisttpl xlat outsb pop loopne gs test xlat (bad) fwait mov lret push out movsb test enter mov mov mov aas or stos mov push inc fimull movsb jae mov jp pop mov js xchg push mov dec sbb scas sbb aad (bad) jno (bad) jmp cmp int3 pop pop jge clc sub mov inc movsl or mov mov sbb imul imul daa ret or sub push pusha push lods mov clc adc cmp push int3 xchg (bad) mov add and testb inc jge or inc mov lret push es mov adc xchg xchg fldenv add movsb cmp xlat (bad) (bad) scas (bad) push les scas xchg fild pop fstpl movsb pop out adc mov mov sahf in push adc sbbb nop stos aaa rcl and mov lds je loop insl pop addl pop add adc push mov sbb iret sub mov and stos and repnz sbb lcallw sub (bad) je out out inc call testb ljmp pop lds xor rolb push test or mov sbb sti xor out push inc ret add inc das loope in divl sbb mov cmp nop test mov lahf mov inc and popa shrb ja das sub inc dec decl lds jno rorb jmp repnz jp pop push mov popf je or adc pop jg les iret std mov hlt jl out adc incl or dec gs add jmp (bad) adc xchg fiaddl or xor mov daa loopne jmp les fabs sbb int3 push inc push js frstor je,pn mov cs pusha in fwait xchg (bad) jmp bound mov fldcw jmp test push or std outsl dec cmc gs dec pop xchg jb ret imul or cs xchg push dec sbb sahf mov adc jb add push jle (bad) jmp dec shrl adc add cld mov aam cmp and rep or mov in mov mov popf (bad) xchg loope mov outsl loope loopne mov sbb pop push pop cmp xchg mov aad jl into stc inc mov shrb sub test scas daa (bad) insl jl and push cwtl fiadd pop jo fldt mov mov je popf pop loop xor imul mov jp jo mov adc movl out ret repnz (bad) push andl sub xchg adc imul mov cld sbb xchg cmpsb jle sbb test (bad) xchg leave into jno sub xchg sbb mov shl int3 push xchg orb sub xchg cmpsb icebp push andl std fistpll roll pop mov adc lcall mov mov pop in fcomps xor sti sbb dec mov movsb lret mov cmp aad ficom ret and fisubl lahf jmp jecxz xchg imul sub fs xor mov popf mov adc in jg dec test out loopne stos cwtl push stos xor push orb pusha out mov imul jle fdivrl cld lret mov aas add or lret iret xor in jp and pusha mov mov loope andl dec cmc cmp xor add add and rcrl scas clc and xchg shll in mov push pop cmp addr16 mov mov push iret call imul jae fwait mov rol fs std scas (bad) mov and mov scas mov xchg jno xlat pusha (bad) mov aad into test dec (bad) ficoml imulb dec dec lcall pop jae les (bad) es pusha mov sub sub or les sbb imul mov ret or popf cwtl or dec xchg les fcoms jp inc jbe clc dec push (bad) ja jp repnz sahf in push xchg lret dec shll ret loopne fucomi mov aas inc push and fcmovbe xchg or lods xor jno and and call gs adc pop pop ror rclb cmpsb xchg jo xor sub xchg xchg mov xchg push cld xlat les out sbb sahf jno pop xor cmp jl push test adc int dec push push andl leave roll jo ja dec add shl push xchg test pop pop lods add xor sub inc dec mov dec aas xor sti mov push add sbb pop cmp fldcw xchg jae arpl aad and push mov ret pop repz data16 adc adc icebp (bad) cs inc inc ds (bad) xchg jmp iret movsl pop imul aad faddp dec ljmp inc dec mov mov cmpsl sub in sub xchg pop adc shrb and and cmp loope pop test lret mov js in adc int3 adc jmp cmp cmpsl xchg jge cli inc mov or std lods push mov jge cmpsl cmp and cmp sbb mov arpl outsl pop push xchg mov lcall pop jns mov pushf lods lret push pop dec sahf dec and divb popa inc mov (bad) (bad) (bad) stos inc pop dec test mov push ds pop lret sub inc mov cltd inc push adc test mov lods pop fcmovnu in or jnp in xchg aam pop sub jecxz or lcall cmp rorb or dec in je mov jns ret aas (bad) mov adc jo dec (bad) fisttpll loopne fisubrl bound fiaddl js cmc idivb sahf outsb dec cli jp sbb mov test sub add mov jns test adc push dec aam mov lock xchg fadd (bad) sbb cwtl push mov or stc cltd sub sti add cmp rcrl inc clc mov daa outsb cmpsl test scas add cmp orb push and mov ss mov push mov cmp stos xchg sub pop jl sti or aas addr16 rorb push mov cmpsb xchg pushf (bad) xchg nop inc xor je ficom (bad) xchg fbstp stos jae mov push cmpsb mov jge pop jbe insl xor cli push sti clc (bad) cmp add inc lods popf inc push test cli adc mov pop loopne sbb cmp cmp popf mov stos dec push aas xchg (bad) popf fildl lret mov scas mov mov ds mov xchg test in sbb or add and mov sbb popf movsb xor bound jecxz xor adc fwait imul je ret adc xor mov xchg jne adc sti add inc cs push loop fmulp pop inc cmp jo push lret movups inc aas aam js data16 adc repnz sbb mov (bad) std lock xchg add sbb call sbb mov or into data16 test shrb cmpl pusha clc popf mov or cmc fnop push dec repz test leave imul arpl sub inc jl lods sub mov loope xlat negb popa jb pop jns pop jg mov fstps push fsubrs mov mov test xchg scas and lret mov adc cltd jnp (bad) cmc adc push cmp leave ss inc mov mov lods insl adc pop add pushf mov roll xchg in hlt idiv pop mov aas push cmp cwtl movsl jb inc mov icebp pop scas scas jle das or scas or dec in lret imul iret mov cmpsl jp,pn shl rorl lds jne adc imul ss dec dec pushf test xor icebp stc cmpsl std sub dec jl or and div sbbl das fmuls cli dec xor jns mov adc popa xchg jle repz mov es xchg imul push mov rcl leave dec xchg adc lret movsl aam mov decb xchg pop cmc out scas xor adc arpl (bad) mov xor jle je push movsl jl xchg push add mov inc imul sub lock mov sahf cltd fs pop fstp sub flds and add add xor jo cmp push add popf mov cld lods lods dec and ljmp xchg and lods ror pop aaa aam mov outsl int3 in call jo push push xchg jns or cli aas sbb int3 sub faddl fwait pop mov clc add fildll cmp cmp xchg imul jecxz sub loop jge not lods mov mov comiss inc mov cmp cmpsb mov cmp xor mov jecxz pop (bad) loope lret mov (bad) dec xor xlat outsl mov hlt jae push aaa mov inc test mov inc jb inc pop aas mov mov fdivr push xchg sbb push out push sbb sbb jl dec lods mov pop mov mov movsb xor jns test rcrb (bad) or push ficoml mov (bad) pop push divb pop pop adc insb std inc je iret push mov clc ret out add xor cltd (bad) mov dec aad xchg xlat js imul push lds cmp jmp sub mov mov jbe test outsb xchg cmp sub je sub fdivrl lods cmpsl outsl aam stos jl ss inc sub mov ja xlat push int mov mov shll insb inc sbb push loope fwait xor cmp arpl repz nop pop imul enter in cmp inc add mov pop cmp aaa insl push ds movsb mov imul adc adc push and mov cmp lods iret lods cmpsl outsb popf mov jns dec jno,pt xchg pop ss xor int (bad) or addb mov iret jae mov xor lahf mov dec imul loope add push or mov jne std xchg movsl lahf es mov pop icebp shrb add ljmp cld add mov test aaa mov (bad) leave pushf sub dec fcmovne jg sub pop sub xor jmp fsubs stos les mov push sbb jmp (bad) cmp ficompl adc ss lcall fnstsw aas jns mov push xor ss sub pop cli pushf push cmc adc test pop sub scas and fisttp dec dec aam outsl mov push fsubrl fcmovb int3 jmp push bnd add mov xchg fdivl sub jmp enter std jmp sbb dec push cmpsb test in jmp push lcall fstps aas xchg int3 ljmp pushf push loopne mov (bad) out test dec shrl mov push push xchg pop leave std pop das adc cmp mov adc (bad) stos lea (bad) mov or mov icebp lahf add lods ljmp push (bad) adc jle mov sub mov leave int3 inc les sbb cli aaa out fnstsw pusha pop sub cmpsl dec push outsb jnp mov test outsl jnp fidiv icebp gs rorl in jo int inc mov mov and les mov leave jb aam sbb xchg mov sbb clc loope ljmp ljmp and cmp and mov push ds bound das push adc aaa pop mov inc add pusha negl add in test les popa aad jle mov inc dec dec mov pushf pushf and subb jmp out jmp loopne clc push es pop dec mov lea pop scas sahf push test (bad) test pop std aas mov addr16 div push xchg and and into (bad) out sub scas push lcall fidiv call xlat xor popa push scas jecxz add inc jo cmp xchg jl nop xchg jo mov or sahf and call insl dec and imull dec lret push adc or je ss sub (bad) and or sub ret mov mov shll cli daa (bad) xchg hlt (bad) lock sub pushf adc sarl cwtl ret push mov lret jne push cmp mov jb and inc aas fidiv sub cmc xor push test xchg mov dec (bad) insl mov pusha stc add dec xor mov dec les movsb stc push mov mov lds test inc into cli dec add sbb mov cld or mov push xchg iret mov mov divl jle sub daa mov dec lret lods shlb icebp jmp fdivs iret sahf or dec cmpsl push test (bad) push inc sar in mov adc test aaa inc fimull or inc out dec cmp ret jp (bad) or push cmp scas pushw sbb lahf push lret movsb sahf jns roll inc iret adc out js adc mov inc add mov movaps mov dec (bad) mov icebp fdivrs or dec jo xor and in mov lcall in push jbe cmp mov sbb std leave inc lret jmp xor inc repz scas lcall dec lock mov push loopne bound sarl adc sbb std cmpb xchg (bad) jecxz xor ret sbb jp mov jno xchg mov jo xor cmpsl jbe aaa push ret ret sahf insl add pusha mov fldl negl nop pushf push loope mov shr (bad) imul push movsl pop mov jnp aas test shll cmp loope mov jns movsl cld test aaa inc push fwait mov (bad) test add movsbl sti mov inc xorb shl hlt jno ljmp (bad) mov in (bad) test xlat int3 and mov mov pop xlat dec xchg in mov xchg repnz xor test dec mov jne jae mov jo lret in inc pop and and (bad) hlt and aam adc mov mov hlt or or aas dec dec cmp imul lahf aas mov test xchg pop xchg mov lret mov add sbb mov fcoml push push aad call popf jnp sub add xchg clc or (bad) insl mov pop pop lret and (bad) mov loopne popf jno rcr orl dec pop test xor mov (bad) out mov pop hlt jb sbbb pop lds (bad) int push cmp sub dec mov roll add cmp cltd out cmpl jl or int3 int3 mov (bad) and and inc inc nop mov daa in arpl imul out aas mov shrb push adc in shr bound aam push jne adc jl cwtl push mov jp mov shrb cmpsl add lock dec (bad) aad jne inc out ss ljmp rclb or add mov sub (bad) adc test insl jl fstpl outsb cmp nop mov pop repnz xlat out xchg in and icebp mov fwait out jae dec inc push xor jl pop cli lock jl imul fdiv fwait push jge inc dec cltd mov jl fldenv dec jno sub mov cli stos push push dec adcb pushf xchg enter mov fbstp pop xor ds sbb jns mov mov adc add repz rorb xchg jmp test pop mov aam dec pop ss lds pop adc adcl fisubr jno push mov or jmp cli mov adc cli popf push mov std lods mov cmpb mov mov (bad) jns jbe outsb sti cmp ljmp outsl cmp es int mov pop and and mov xchg push dec cmp fcmovnu mov movsb adc adc dec sub outsb xor adc inc inc adc repnz nop mov shlb insl dec add xor jae cmp mov das out inc sub jo leave sbb fs inc mov popf adc and jg or movsl mov pop mov sbb and leave mov sbb insl mov push add (bad) and sbb inc addr16 into in ja inc clc stc insb and dec jle jp sbb sti je push xchg cmp pop jecxz out mov add xchg out repnz mov js add mov and sbb int3 lock push push fxch lcall mov outsl adc jno mov (bad) bnd cmpsb es (bad) jb scas xor cmp jbe and addb in mov lods jno inc push mov xchg pop mov into arpl mov test xchg cmp mov insb xchg xchg shlb cltd and nop fwait out (bad) or je xchg or or xor and jb pushf inc and or add xor pop ja xor push push mov int das hlt sbb cmc icebp pop pop jb lahf mov sti mov outsb push pusha mov inc mov and mov xchg xor add inc (bad) xor movsb loope pop je fimull xchg dec out pop fiadd dec cltd push adc sub (bad) lret dec pop mov (bad) dec xor dec push hlt mov push mov sbb andl cli shll shrl popa mov or ljmp sbb fs pop add mov add nop lods data16 mov mov and fildl mov jno add and scas rol cmpsl lret mov mov bound or jns xchg stc xchg jbe (bad) pop fbstp fmuls inc call scas pop xchg and jmp (bad) sub mov add pusha sub jmp adcl sub jno in pop mov (bad) jo xchg sub rorb inc repnz jl sbb push sti xor xchg xor jle mov jnp mov (bad) jo and pop jl loop mov stos cld (bad) addr16 xchg aad cmp inc pop adc mov fs pop inc fldln2 loop push push addr16 sbb es mov aad pushf pop and dec ja mov dec inc lods insb jo or cltd leave iret push loop cmpsb insl rdpmc imul ret xor movsb ret jns sbb mov cmp dec add pop fist int or mov xor push mov scas mov xchg pushf push fsts pop aas fsts jo mov fistp jae out loope orl mov jp jmp jae dec jnp out lods addr16 stos dec mov notl mov push dec push insl test mov outsb outsl xor (bad) outsb leave dec push push cli pushf xor pop aaa in arpl shrb pop lods push jge imul jne mov mov xor (bad) aaa push mov cltd movb xor pop sbb int3 pop aas or sbb adc mov clc das movsb insb arpl int insb (bad) stos pop add iret cmp push les ss push out mov and jg sti pop mov adc fisub test push pop jmp sti add sbb or fucomi int into pop aaa dec (bad) cmp lds popa and scas xor je inc xchg and (bad) (bad) gs in rorl and push repnz (bad) jle mov sub insl pop jge fstl xor mov xor mov or inc pop out (bad) ljmp dec test sti mov repz fcmovnb das inc xchg and gs loope scas ldmxcsr mov inc es push leave adcw mov mov (bad) sub sub dec out dec sub mov bswap inc loop das push xor iret out mov mov xor scas popa fsubrs hlt mov shld sbb jo dec cmp int push mov int (bad) xchg mov popa mov push nop xor jg cld inc and jbe dec scas xor adc jge stc xchg mov dec lods call cs clc dec mov jnp push test mov lods arpl in les movsb pop pop (bad) aad lods mov repz lods cmp rcrl and lcall cmpsb jns dec test mov out mov push sub push sbb clc xor fstpl or xchg adc stc jp push bound sbbb cs cmp movsb xchg test fs movsl jge (bad) cltd in daa push pop loop out mov jp add jge add ja xchg or and adc push aaa push and leave mov and daa sub cmpsb xchg into mov sbb or js jl xchg or dec sub daa mov movsl xchg fbld push ret mov lods sbb icebp shrb or mov ror xchg and xchg cmp xchg ret mov into push sbb jbe jecxz ret mov pusha stos ret das mov pop mov andl push aas (bad) cmc xchg sbb popf ja add out add sbb es or or push sahf push subb out mov icebp xchg inc adc (bad) mov icebp outsb adc push (bad) clc or das enter mov pusha repz mov repz add add in adc sub pusha jmp sbb int sahf and test mov sub push dec lret adc scas nop jp pop dec push jbe inc divl mov sbb (bad) sahf xor int add pop sub inc stos test cwtl (bad) cmc push pop inc out test push xchg or rcl or (bad) cmp gs cmp std cli mulb mov mov dec inc lret test mov dec jmp cmc (bad) jnp std cmp and mov add inc dec pop rcrl xor mov and mov pop aad pop pop lods dec in mov ljmp cmp mov je (bad) call sti adc out loop out pop jbe (bad) cli xorl cs lcall mov call iret bound imul adc pop sbb fbstp or pop cld xlat (bad) jns dec ds mov adc or lds ficomp xchg cli mov pop daa pop xor adc mov push sbb mov iret mov mov mov pop testb and inc imul add lcall jecxz mov xchg es or inc adcb sbb pop xor mov xor test fisubr insl std xor sub paddd out mov xchg mov icebp rcll dec (bad) stos push in hlt mov fcom xor mov sahf jnp mov imull in imul lea and out sub mov iret jmp or nop or cmp fwait xor push add mov jae (bad) int imulb lea jg inc mov jns pop fdivr xor or loope jnp mov repnz aam add fcomip (bad) notl (bad) mov leave cmp (bad) mov lcall and ret sbb (bad) cmpsb sahf push dec sahf pop xchg xchg loop add jae mov rclb addr16 in jmp jmp jno aam subl pop jp imull dec test mov sbb data16 in inc fwait popa daa jns repz and xchg push xchg pushf clc test in cmp xchg ljmp mov sbb pop sbb jmp xchg int mov daa loop and sbb mov dec pop aas (bad) dec addr16 inc int (bad) pop (bad) cmp ss inc sub adc mov xor mov in xchg bound shl loope addr16 jne sub adc dec push dec xchg add or sbb into notl xlat lock pop adc pushf xor xchg leave sbb jmp push lret rorb dec out mov jp std pop iret dec repnz scas addb les popf nop inc aad mov divl call push jmp pop lretw mov cmp or data16 push ficomp add inc mov (bad) cld outsl and icebp xor sub inc vmread lahf mov pop push fdivl inc mov push sti fwait js jnp leave out pop mov cmp loop xchg and or insb mov push clc jge daa pop pop lods push movsb dec rcl add or rcll mov (bad) cli test or in dec mov (bad) cmp subl (bad) push out (bad) lea dec fildll test rcrl adcl jle cmp cld adc lock inc jo mov aaa cmp cltd inc test lock pop test mov jmp push test stos or mov sbb and sub pop add pop icebp or popa cwtl subl push dec pop jmp (bad) fldt mov aad mov push loope imul and out push mov ret imul adc pop lcall sbb movsl push popa xchg (bad) xor add rcrb addr16 pop bound call sahf jmp js in dec shrl xchg jle mov out mov lea push add sub es ret lock cmp pushf pop rcrb stc and and loop inc out mov xor jle fyl2xp1 mov sti or cmp xor xlat and sarl daa ret mov int jb or mov (bad) dec xor or adc xor les dec adc xor and aas in jbe mov pop fildl addr16 sbb in jae loop loope outsb dec movsb in add push loop mov cld cmc mov sub push jecxz mov mov sub int mov jae jmp push fwait data16 int3 add sahf add in and push mov add adc leave mov and or aad mov repz shll xor sub and repnz inc or test das sbb inc or sub movsl cwtl rcll sub pusha aad or testb jp add pop sub ret inc jmp add pop mov gs movsl sub int3 pop mov xchg or push dec and in das in or cmp inc pop xor pop in in les scas mov mov fcomp mov sti hlt (bad) mov mov js lods xor jne cmp xor mov mov jo test dec xor xchg pop mov sbb sbb lret rcll mov ret or pop lcall push shll negb shrb int3 aam gs cs aaa pshufw xchg js inc ss inc mov lock mov stc mov rorb dec cmc cmp pusha mov sbb adc in mov test cld mov sbb out lgs mov mov sbbl cs adc pop (bad) adc shrl scas pop pop xor dec loopne sub aam sub push xchg mov pusha dec fwait mov das inc mov test ljmp push (bad) in out insb out cmpsl stc xchg (bad) mov cmp mov pusha (bad) xchg scas jnp (bad) iret es (bad) je call jle xor mov xchg jg sbb push pop iret add fbld push lahf into inc subl jmp cmp cltd fwait addr16 inc flds cli cmpsb ja scas add icebp mov jl pushf sub xchg hlt orb jbe (bad) mov hlt andl inc mov pop ret and lods jnp lea out mov lahf mov mov pop cs mov or or and jmp sub mov push adc push mov cmp xlat in adc fmull jno,pn fcomip stos sub (bad) ret cld or repz xchg je nop lahf or xor dec loop lret add (bad) das lock mov mov mov loope dec out sub ljmp (bad) dec popa std jbe in into pushf lea roll sbb xor dec adc rol jge lret mov sub xchg out push xchg shr repz scas (bad) insl sub int3 lds dec (bad) mov adc rorl sbb hlt pop fbstp or push fdivrl (bad) fsts loop,pn push dec fwait popa mov push mov push outsl out in push daa push mov jae aam shl (bad) jge fsts out gs adc sarl pop (bad) fstpl popa rclb add test js cmp bound aas pusha dec inc xor mov cmpsl loope jnp mov add mov les inc rcrb repnz push cmc andl stos ss push lea loope out das aas mov (bad) fisubl icebp pop lea ds lea or jge cmpsb jg or pop lahf rclb jp test dec mov sti jge sub ret outsb fs adc xlat or jne mov xor mov pop jge fisttpl adc rcr mov push jb jae adc jo mov fstpl sbb hlt (bad) negb inc cmpsb loope,pn cli dec (bad) mov mov lds fnstenv sbb jg fdiv in push xlat out aam dec lock lahf pop aas shll lea outsl (bad) cmc inc or scas xchg cld cmp or scas decb pop aas pop or or and sbb or loope mov jns add lahf cmp in pop dec mov (bad) mov and pop mov je cli mov stc daa mov or lret pop jecxz,pn adc stc cmp in mov mov mov scas cmp add ds dec in movsb push jp mov loopne shrb sbb push cmp jo mov std scas fdivrs data16 out jae stc hlt push (bad) sub mov fadd sbb cwtl push mov cli push xor repnz in outsl mov mov jno dec adc lods xlat mov adc bound and popl ss inc dec sti (bad) inc dec repnz arpl fistpl xor popf add pop icebp sarb fild shll outsl or lcall mov dec stos xor loop mov lea cmp mov inc xor mov dec inc inc jg dec aam mov js and addl (bad) mov les fdecstp push push sbb in andl pusha xchg int rcrb xor (bad) and cltd in xor sbb push stc dec adc jb repnz push repnz dec mov and jg or sub int3 ret das jge mov loope pop push jle xor pop fwait das bound sbb in stos cmpsb mov xchg (bad) inc adc outsb mov sub xor adc xor (bad) and adc mov or add mov out xchg mov push xchg xlat mov mov xor cmp jg add mov or push mov test sarb aad fwait int mov mov cwtl mov cwtl xor data16 xchg jl jg pop mov push jnp or push pop jnp xchg aad repnz gs mov ja jge or out hlt xchg push push imul lcall call in call cmp jp jne das mov sub mov push or cmp enter inc (bad) (bad) mov lcall subl test data16 and aaa inc sub inc sub mov pop iret or xor fwait mov aad je mov pop lea (bad) inc or (bad) pop pop mov cmp fisttpl jne dec mov hlt and pop sbb jge in sub lret mov inc cld imul push les fdivrs fucom rcr inc rclb (bad) int xor dec addr16 shrb inc adc add cmpsb xchg inc (bad) icebp hlt addb daa jbe add loopne std stos mov xlat jmp (bad) jp and xchg in fldcw nop pop fcoml jl jg adc jle jno rolb aaa jbe cltd ss cmpsb mov pop fs lds cwtl mov ficoml repnz out xlat inc push and dec fistp gs test adc push add fcomps xchg adc fidivrl movsb insb shrl and dec xchg arpl adc push std pop jp jo inc mov dec push pop cmp push ljmp cwtl daa imul daa (bad) dec mov push xchg pop scas dec sbb mov fs xchg inc or cmp jmp pushf sub add dec sub adc add out jo popa scas and pusha mov sbb lret sti push adc and mov and sbb lret or cld cwtl and pop sub mov adc adc test sub int in fadd push lret add aas scas incl and mov neg mov sbb jecxz enter adc fnop out rcrb sbb repnz mov adc push popa jnp and dec jns cmp mov out cmc lds cmp push pop mov pop (bad) fwait mov cli xchg pop xchg jecxz xlat cmc mov lret scas ljmp xor or sbb cmp mov (bad) test jo scas lods dec mov repz scas push xor (bad) jmp xchg add sti into (bad) jp adc das jp lret add and mov movsl stc insb and repz and mov mov add into mov push inc imul sub and pop pushf xchg pop pop in out int adc mov aaa movb or sub test in rcrb outsb sub mov fcomi xor in mov adc rclb les movsb adc (bad) jmp inc xchg or xor addr16 jmp xchg xor xchg dec pop stos sahf push in inc or cmpsb jp rorl inc mov ret and inc fs inc fistp inc inc (bad) mov lahf sub mov rolb jae data16 mov aaa pop cmp icebp adc test mov mov stos or fs mov sbb pop jo es add cmc cmp idiv add xchg jl mov (bad) idiv xchg sti cmp sub in incb xchg or and mov movsb sub mov jne fnsave sbb call adc xchg mov hlt dec jno mov lds das rcll add xchg mov repz das ret out gs pop cmp mov cmp or inc popa dec fild sarl cmc fnstsw stos les sbb ljmp test std cmp cmpsb cmp sbb in jae cli mov loope jle (bad) ljmp sub push mov jae imulb fbstp (bad) or arpl jp pop stos dec daa dec push das ljmp insb out sub sbb into push add pusha cmp mov sub pop mov mov xorl ss cmp aad and mov lret pushf mov mov jge mov inc dec fcomps sub dec out add xchg daa mov les adc inc mov or mov push lahf mov in js dec sub pop jmp pop push pusha push pop jge psubb repnz sar mov cli inc cmpb int3 sbb das push push enter dec stos imul dec sub outsb jne mov cmp mov inc (bad) xor mov fwait jge pop outsb sbb or aas jmp xlat mov sub divl out xor xchg and ja jns push mov xchg stc pop out cwtl test int3 push xchg or (bad) lods aas aas out mov add add and ljmp push imul loopne aad jle (bad) cmp lahf fistl (bad) cmpsl push jbe push ja repz out mov xchg fidivl fisub mov loope popf stos pusha scas xchg insb fs sbb in ljmp outsl cmp pop insb cmp jecxz xchg fistpll cmp inc stos mov add mov lods (bad) push push mov push xchg das or (bad) lret or push xchg jae or pop mov sub or adc lock add xchg jno ja mov (bad) in jmp or push ret jnp pmulhw dec js imul imul mov sbb inc sbb std mov pop int push and test popa cltd jp mov shll push ret insl test mov sti cs xor cli sbb jmp ret mov and (bad) pop scas jbe push xchg jge jp jns jge jp mov adc jbe lods jmp cmp xchg mov add (bad) gs ret sbb test jmp push mov adc or (bad) or out jno repz inc jl movsb inc icebp shll adc pop dec mov data16 aas pop js push lock icebp stc fdivrs xor mov mov push dec mov cs iret dec cs fiaddl xor push mull push frstor (bad) (bad) mov cmpsb mov inc fsub clc sbb cltd xchg jo test scas inc mov push jecxz outsb inc addr16 lods xchg lcall add repnz push pop jle push mov xor push inc dec mov out sti clc mov cmp daa dec test jl jmp mov inc mov sbb jmp xchg and in stc test sbb (bad) bound daa mov sti (bad) sbb mov ret fcomp ljmp sti shr adc icebp dec aad sbb in and mov xor mov xor cmp test lods mov cli mov xor jae outsb ja fidivr and push cmpl xor mov push in cmpsb jmp cmp (bad) icebp loopne dec xor insl dec xchg insl xchg popa adc mov or push jnp aad (bad) jno inc mov or sub ja push jae mov nop les cmovne int3 jnp scas (bad) jp mov adc and hlt outsl insl jne dec jne int jmp (bad) lret dec sbb pop scas fimull enter scas nop xor leave (bad) or imulb jl je loop lds call adc (bad) fidivrl popf outsl or add xchg dec arpl (bad) xlat cmp ffreep mov push fcompl (bad) jae fisubl clc mov fstps lock pusha mull cmp call js pop push sbb pop xlat push enter sub lret mov mov cmp aas push inc xor (bad) pushf movsl mov fld pushf outsl xchg jl jo cmp stos dec fstpt int3 sar imul std ret aam stc sbb jne mov xchg push repnz fmuls stos fisttp imull (bad) fisub repnz jnp mov or push stos imul jge jp xlat push (bad) mov sahf fwait xchg xor dec test inc xchg insb sbb inc jl mov add jb sub iret sub shrb and scas pop dec pusha sub mov loope adc loop push loopne out push mov popa mov and lods leave adc sub movsb mov shrb jb pusha inc jns pop inc in shll xchg adc xor add loopne xor popf test test mov cltd pop fst imull leave sti and sbb xor stos in test push jecxz push inc and xor call pop ret mov add pop pop es loop xchg jl jge add cmp xchg or inc cmp subb inc pusha xacquire dec push xchg dec lods js repz daa das dec xchg stc pop push out adc dec sahf aas jp push sub insl or insb ja xchg (bad) push xchg mov mov mov cli enter (bad) jg call out (bad) shrl pop dec xchg (bad) push pop sbb fsubs and stos arpl lds ss shrl in cld imul jbe (bad) repnz in (bad) push cmpb adc (bad) enter cmp jnp mov adc mov cmpsl stc test lcall (bad) rorb int3 and xor xchg jle cmp in aam xchg popl pop add inc xchg mov scas fisttp lret adc lahf (bad) pop mov xchg jl cmp mov inc or int3 xor push inc out jmp pop mov and sub rorl and push dec dec cmp pop mov pop test lods je push pusha pusha enter out add mov test mov movsl (bad) pop xor xchg test and cmpsl mov push bound ret negl xor imul mov inc sub and cltd aas (bad) jmp (bad) scas dec sbb and out repnz inc and sbb pop repnz andb dec mov cwtl movsb sbb test lahf push lcall fiaddl imul and (bad) aad inc outsb (bad) push sub mov rcll push inc mov lret cmpsb push push fs pop out pusha (bad) cmpsb pop icebp mov and lcall into mov imul in and popf xchg jp les (bad) fsubrl fimul outsl cmp and inc dec js sub cwtl (bad) mov sbb jle add scas pop jp mov pop movsl mov xchg add (bad) mov xchg mov add jne ret loop leave add push popf jl das or push jne andl icebp enter dec xchg mov dec adc sbb out and add ds push (bad) xor das idiv fcmovu mov push push clc pop mov mov divb mov call push cmp mov dec out loop mov push push adc rclb jne test pusha insl fs addr16 cli push clc push sbb scas xchg sub idivb test call (bad) xor ja popa mov lea sub das ret jno arpl mov xchg add movsb xchg and lcall jns rorb pop lcall js mov fsts inc scas cltd ljmp push add mov and hlt (bad) inc and cmp xorb arpl leave add mov and cmp outsl stc push push enter flds enter pop and icebp ja stos and out lcall or je fldcw insl mov repnz add inc enter pusha icebp cld outsb adc repnz sti sub movsb inc movsb call (bad) pop stos push cwtl add xchg push sbb and lahf (bad) dec sub push mov data16 jno call sub dec shrl adc stos insb out pop push mov inc mov xor and leave xor loop jo arpl stos xchg cli pop cltd inc fcmovne mov dec add cmpsb sub xchg fcomi aam jecxz mov mov dec cmc in push and popf out lahf mov popl stos ja jns or inc test cmp mov in xchg loope int mov cmc into lret (bad) nop fildll fwait out or das ficom cmc lods cmp imul mov adc sbb setae mov push sbbl inc cmpsl rclb mov xor or popl sbb (bad) fist mov cmpsb cmp bound pushf push adc cmp cld stc and adc push adc ds jbe insb push push push xor movsb loop adc cltd mov pop adc adc push cmp push imul fcoms pop and insl pop loope into in cmc scas pusha sub push (bad) mov data16 fsts les lock sarl add fisubl adc movsb push pop sub and out mov add int lret add pop add fwait jl lahf dec sub icebp mov pop mov into in sub sub (bad) sahf fwait stos int3 rcrl mov cmp dec cwtl dec push push inc dec (bad) ds pusha dec mov jmp in jmp arpl inc inc pop ja (bad) and jg pop (bad) clc push gs or mov pop mov ret pop push add push pop dec out jp int nop and test aaa sbb add adc movnti (bad) push or inc mov ficomp add jns mov inc cs mov fwait pop int adc cwtl shrb in xlat xchg pop mov xchg enter push test fcomi cmp out mov les daa fistpll adc (bad) push push mov pop adc jl movsl pop in outsb mov dec rcrl mov cmpsb mov sbb mov cmp push into pop lret in sub mov je pop fwait leave inc aam jle adc sub dec dec (bad) les adc xchg jo in push or mov lcall les ss ljmp aas arpl push xchg imul inc sbb dec std and and cli adc js imulb gs jo movsb mov xchg nop int pop cmp mov pop pushf cmp cmp mov js jecxz pop cmpsl test jmp inc (bad) sub jle aad jge sbb push outsb mov movl imul pop or pop movsb int3 cld add imul sarb mov out aam mov ss sub pop ja fnsave in mov xor mov cmpsl xchg lds jg add das mov lcall or jo dec std xchg loop xchg jbe pop cmpsb adc into loop shrl xchg ss mov jg add and jmp test cmpsl mov nop out imul pop rcrl nop inc sub add cltd push and ljmp xchg adc cmp xchg dec les scas push test jb aaa cmp lea xchg outsb jbe adc mov call fnsave mov fs mov out lret lar and in and outsl pushf mov jl sahf pop dec cld lds fcmove rorb jno add add add lds ljmp or les xor cmpsl lods imul ret fidivr lret fildl mov orl popa aaa pop pop in mov add loopne jmp lods cmc test ljmp (bad) imul cwtl es lret sahf call (bad) push pop fisub test rorl out int3 mov aad aaa lret js sbb adc inc jge push js jecxz fsts cli adc cs cmp xor aam pop jge adc lret cmp mov and mov inc fistpl sbb mov add adc inc jecxz mov sbb shl subb and outsb outsl nop xchg dec subl fidiv jp jo or sbb enter scas pusha pop jecxz xor pop mov mov ja fimull lret push pop jnp push lret iret dec cwtl lea clc adc repz loop pop movsb push das rorb das adcw not or (bad) (bad) xchg je jl test mov aam xor xchg data16 call add push sbb add das sub ret fwait xchg push pop imul cli es mov xchg (bad) jae (bad) lods dec inc (bad) mov pusha movb lea mov xor jne sbb insb jbe outsl pop hlt dec fsubs clc xchg pushf adc xchg sahf mov xchg ret cmc in movsb mov in add (bad) push inc lret (bad) jno jb inc mov xor inc test and pop les sub fdivrs cmpsb mov loope ss or pxor out push or lock fwait hlt sbb jp ret sub ljmp (bad) ficompl jae in call stos fstpl and cmpsl push pop sub sbb aas out jg mov idiv mov scas jecxz xchg (bad) sbb fwait xlat cwtl arpl lock or pop mov outsl repnz cmpsl cmp sbb push xchg es pop adc sbb sub add (bad) out int stos push mov out add scas jns sub rclb pop (bad) xchg jno inc aaa dec and test or (bad) xchg jg xor and (bad) and push xor inc xchg sub cmp cmp xlat push mov les and fwait push shlb (bad) dec xchg out mov outsl (bad) ljmp clc stos stos xlat or movsl push mull inc inc push cmp stos aam imul mov loope lods pop inc lahf bnd jmp (bad) push push aad int mov push aas or jbe mov jmp das ljmp lahf ja push xor cmpsl xor xor jg ret push sbb add mov jbe pop pop inc mov sahf aad lock push rcrb (bad) xor push outsb jecxz dec xchg cli hlt or stc idiv sbb or int inc add (bad) fwait push mov fstpt xchg ss jbe scas dec sub jmp scas pop sti cld jb cmp out (bad) add pop (bad) jmp (bad) jge or idiv out cwtl cmp cmp and xor inc mov clc jne add xchg push in in or ljmp test lret mov cmc mov ljmp pop icebp mov xor cmpsl (bad) mov inc rolb jle add jmp aam add lea inc iret dec bound xor push push cmp insb (bad) int sub ficom call std adc dec jne mov inc push mov mov xlat jp out push push (bad) mov dec movsl into outsl aas push loopne mov test test xchg popa psubq push nop pop mov xchg jo jnp push mov fistl push and inc xchg sbb scas dec (bad) xchg jmp repnz pop in cwtl sbb (bad) jbe lods movsb fistl xchg loop fwait dec lret add je popa sub (bad) jno inc sbb lcall pop jl fisubrl sbb ds jb inc stos scas pop sbb xor inc cmp aaa sti xchg mov xchg or sub ds out jg outsl aaa imul and mov fwait xchg pop sarl cltd je pop cmp popa int adc pop mov lret mov popa mov mov idivl xor inc aaa push xchg add stc mov mov and mov aas jnp pop rorb mov mov ds mov nop xor lock pop mov pushf dec lcall insl push mov jg mov and ds adc les push add mov sub lcall xor ss loopne icebp xchg sub and and bound or rorb ret mov outsl and je out add bound xchg jbe xor fsubp outsl mov je mov jl dec pop in cmp inc out pop mov fstps sub cli inc push or aad testl adc push pop dec or lods outsl cli pop jmp movsl pushf clc aas insb cmp push and movsb loope jle mov mov mov sbb fwait pop (bad) jno xor ret jbe pop movsb xchg std xchg data16 sbb mov jp out int je (bad) jne ret mov test push add das xor and fistpl adc inc sbb adc push xchg scas jmp mov or fsubrp lcall test jle (bad) xor (bad) dec and (bad) ss dec xlat stc xchg mov adc mov pop stc aad xor sub ja cmpsl mov leave and sub inc aas mov (bad) (bad) mov and xor nop xchg inc popf out shll mov cmp xor mov in xchg mov mov inc rolb mov cmp jecxz xor jno add and addr16 std (bad) hlt lret decl fwait xchg loopne pop rolb push mov inc cmp lret push push inc cmp sub enter std add (bad) psllw popa pop add (bad) push jge aad push xchg inc cmp movsl dec fmull jb or xor (bad) popa xchg pop mov mov push mov cmc add popa sbb xchg and dec enter (bad) mov repz fistp aad or push dec xlat mov sti push mov ds test ret das ret push mov mov adc iret mov mov fidiv popa xchg fstps enter in pop ljmp cmp fisttpll inc sub adc sarl mov sub lds and and into adc push lret fstpt test ret popa mov sbb dec pop fs push jno or jge cld dec xor sub sub outsb mov jl adc rep inc pop mov mov xlat xor jp,pn int3 add arpl mov pop std cmp pop movb xchg fwait loopne or paddw pop xor jmp push jmp pop inc dec dec push inc hlt dec xchg js,pn pop sub mov push shrb jne cwtl pop sub xchg clc popf inc and iret xlat push xchg repnz and mov shrl cli lods pop push aaa push pop push mov es pushf int3 mov and inc sbb fwait jg fild mov scas dec push hlt mov mov andl inc or jl sub test pop mov or xlat insl dec jb cmp mov pop call jg sarl cmp stc ret test mov nop loopne ret sub mov and (bad) dec rcrl movsb pop pop popa lock pop add or fistpl outsb mov inc mov adc (bad) push (bad) nop hlt shlb imul pop or sub ret (bad) or arpl xchg xchg movsb arpl enter (bad) loop (bad) xchg jg roll shl ret mov sub or push inc pop sbb xchg mov leave sbb or jg pop inc subl or sbb (bad) cs or test add xchg stc aam add sub ficomp bound andb and icebp pop clc ret and cltd test mov stos inc fs sub pop mov mov sub pop xchg lcall enter aas stc cmp jecxz stos cwtl (bad) xor mov add add xchg xor ja test es negb lret out xchg pop jno int3 out inc cwtl cwtl dec (bad) mov test push subl enter mov mov enter pop xchg lea add js pop shrb and stos scas pop pop mov lods dec sbb jbe or lds loope pop int pop and dec mov nopl cmp pushf mov aam loop mov jle mov xor cmc outsb test idivb xorl rcrb pop call in mov sti cmpsb ds enter aas xchg mov cwtl mov add dec enter xor push loopne (bad) out xor outsb push pop addl dec loope xchg loope ret add jbe int3 ret ret cmp ja xchg and mov cltd dec mov cmp shrl popf or jae (bad) fdivp cmp in pop mov enter pop (bad) fstpl adc add es popf inc ja mov clc dec cmp xchg shrl adc call push mov mov idivb add pop out std test stos push sub add rorl jg cmpsb xor mov inc adc jg xchg (bad) (bad) add xadd (bad) aam add mov movsb push jle imul cmp inc and xchg cwtl test test and dec or cmpsl cwtl int and es in push add jl adc je mov inc jmp nop nop jmp push mov jo lea rorl arpl test pop xchg xchg mov in (bad) mov pop mov sahf (bad) and mov das ja mov mov dec cltd xor push pop dec aam gs mov arpl cwtl pop test (bad) and out test mov inc (bad) movsl cwtl hlt enter out cld sub ficompl xchg stos sbb sub out ficom pop lods cmp fmulp sub inc (bad) stos adc mov dec xchg jo and cmc xor xor in shll cmpsl (bad) std lds inc mov arpl push add jno sahf cmc addr16 mull test and loop int mov xchg pop (bad) (bad) xchg or fs jp adc aad dec pusha xor and aad or fisubl out dec mov mov dec stos pop xchg inc iret inc mov mov dec mov sbb mov cmp fldl inc popf mov fcompl dec fcoml popa adc leave repz clc ss sub or pop mov dec jb out sbb push and ds push stos jl pop mov pushf lds add loope dec adc stos enter divl jae sahf (bad) and add and xor fistl mov cmp cli add and inc jnp adc pop repnz jmp icebp test push (bad) int jp sub pop jl jb jle (bad) lret jnp arpl and push or inc cmp in aaa mov int cmp (bad) adc loopne mov daa push stos dec test je das push mov push pop lea jne loope mov jmp push lea aam stos popf popa dec ret xor sub daa or rorl mov jg bound or sub sar subl je iret out mov loopne int add push pop add or dec rorb xchg faddl mov jge repz into mov test mov loopne scas shr icebp cltd lods out push movsl push push mov push or mov adc xor divb add aas push pushf xchg mov sti rorl jnp mov inc sub and dec xor rcl jnp inc mov pop cld pop lods lock or loope fsubl (bad) mov fcomps mov jl inc sbb sbb sbb adc vmovss add outsb outsb adc inc pop jle (bad) cmp jl mov pop imul dec addl xchg and jge add push push cld sbb loope fdivrl arpl jl mov inc jo sahf je cmp lahf out jp insb sbb mov std sub scas mov cwtl rcrl sub bound arpl xor enter ss mov sub pop mov stc xchg mov fxtract js mov sbb cli jo fdivrl ficoml lods xor mov pop in flds (bad) pop outsl push sbb std decb mov repnz mov lods scas outsb xor mov push cmp xor cmp rolb sbb jo and xchg imul (bad) dec out aas rcl xor mov addr16 std movb sbb clc mov xchg xchg rol in jp imul adc xchg mov in sub jg cltd in cmp lods in adc cld lcall popf mov adc push enter and mov push test dec roll arpl pop jmp dec out xor (bad) jae dec xor add xchg xor inc lods nop xchg jnp dec cmpsl jl fwait and (bad) mov iret pop clc jg dec int3 mov push cmp icebp cmc jb inc adc sti mov jmp sbb mov fdivp addr16 inc xor sub test jmp ljmp mov addl inc or pop int mov xor je (bad) push and das out xchg arpl out add sysexit push (bad) sbb lcall je or mov stc or sub sbb scas inc pop jle (bad) lret xchg sahf stc add pop fwait enter ficom pop (bad) bound jg add sub movsl mov aam mov push xor add or outsl inc cmpsb stos movsb shrb mov (bad) sub das ret lea jle icebp lret outsb cmp mov dec int lret jo,pt inc stos dec in dec push push lcall jle push iret push inc in sbb ret jmp lahf clc jge sti cmpsb ja dec in pop mov push sbb mov jp dec fmul arpl push xchg xorb mov cld ss neg cmc mov sbb stos xchg insl inc loopne stos xchg pop cmp cltd inc adc xchg mov xor lea jmp sub jle int (bad) out push imul cmp lret sti jne aaa mov mov cwtl ja,pt test jb and push dec pop push cmp xchg add mov pop (bad) mov sub in clc sbb stos inc xchg sub lret repnz hlt xchg subl or fs sbb ret cmp jmp mov sbb mov enter lods std adc int3 cmp push insb out cmp push scas (bad) push push inc out xchg nop lea adc sub sub adc cwtl repz mov mov cmp pop sub (bad) cmc inc into in fs push sbbl cmp fnsave rorl dec icebp and insb stos hlt test pop cs or mov jp hlt xor mov push movq (bad) in sbb out in jecxz arpl sbb repz cli les cmpsl dec stos imul mov or mov push movsb pop int add mov sahf arpl aad sti insb jno xchg add pop movb mov insb rol lahf lahf cltd xchg fstpl out sar es add or add xchg add icebp and adc fbstp inc adc inc pop dec xchg push mov pop pop pop mov inc fiaddl push das cmp data16 fwait imul pushf subb pushf xor cmpsl jbe jge std bound out jle popa xchg adc cld xor dec mov icebp out dec lods cmp mov mov insl call lcall sahf in int or imul stc test sahf xchg int3 and lret cld lcall push mov sbb fdivs (bad) pop (bad) mov mov sub pop push inc xor sbb push add mov cli fidiv push (bad) enter adc (bad) mov pop ja imul imul pop push xor cmp mov clc add xchg and sbb inc inc pop roll xor fdivl (bad) ss iret nop adc jge shr pop jne mov shr (bad) jb xor shrb fmull cmc sbb call sarl aas mov jecxz jmp nop and xchg mov iret sbb xor jp mov mov cli call lret xchg xor push lock or add inc (bad) pushf push adc cmc push pop push fnstenv dec loope in scas jb aas inc cmp stc xorb mov scas sub xlat popf mov adc imul aad xchg xchg fs std lret test lret jp dec jne stc push daa imul dec mov (bad) fdivrl xlat jns ljmp outsl cld xchg fldl add sub and pusha gs mov add les jp loope call add test out jbe mov movsb jmp dec aad pop (bad) xchg pop sbb aas inc jl mov loop pop ja fisubr mov aas fbld pop xchg pop clc shl cld push pop push int3 mov dec (bad) jl xor inc in dec enter add or xor and sar push sub stc sub add mov mov jb pop das gs jmp sub push mov movsb and pop cs cmp pushf dec imul pop aam pop lret jecxz stos inc movsb jne ja fstpt pushf mov fwait repnz mov fadd add push in xchg cmp jbe cmp sbb add push mov mov cmpsl aad mov xchg jnp push icebp xor push push inc fcomi nop loope icebp cmp jb mov iret sub push or xchg mov and push mov ss mov lods cmpsl js ja lcall xchg jp push and mov lock mov out dec sbb cmp ret push ja inc mov iret test out lea icebp sahf jg daa imul push xor roll lahf or gs aam jle xchg bts adc mov (bad) fwait mov inc data16 pop xchg mov int3 inc ja pop cmp je push and sbb xchg pop and mov (bad) iret mov inc test and shr fistp je ljmp pop dec out fs data16 pop cld cmp (bad) jbe push inc ja or lods dec pcmpgtw imul push push mov sub jns jae pop shrl cltd sub jle push cmpsl xchg ss jp lret or mov mov push lods inc jnp xor pop add sub and mov outsb loope adc stos fcmovnbe adc aad icebp mov gs loopne push out push or jne test xorb xlat pop fs push lods outsb fimul leave push adc sub jecxz fnstsw adc fwait mov mov je test out aam xchg out fs and dec movsl hlt adc pushf xor les inc les cwtl sub cmp ss repnz jl mov dec sub jnp mov aam cmc hlt push and lods push pop add cmpsb xchg divl and ljmp scas loop sar lods mov jb mov outsb sub fdivl or adc sbb mov sbb cld stc loopne or sahf mov imul ljmp iret add mov mov sbb jno lods mov rolb or sub xchg cmp mov rclb fisubrl in jmp cmc and or mov imul mov inc push pop fstps fs stos mov das push mov test dec call mov idivb icebp cwtl es out xor fdiv je mov sbb stos mov adc aaa loopne into addr16 (bad) ja fiaddl pop rol add sbb jl sahf leave sub (bad) pop aam cwtl fisttp pusha addr16 insb push lcall jb cmp add lahf das test xchg and (bad) xor movsl and jle test ret lcall cmp xor dec out shl lds adc lock cltd mov cmp xor pop push arpl jle adc sbb mov cmp dec mov ds cli dec mov jns add sub cmp pop jge fildll sbbl and xchg mov jg (bad) imul int3 insb pop sbb je push add xchg test mov in mov pop xor in jae out push iret or or or sahf xchg imul push dec push xlat (bad) jmp pop add mov xor jg (bad) pop or test xchg lcall sub xor pop push (bad) push (bad) aad lods dec dec gs mov fistpll fist mov jecxz xchg std shl xchg xor rcr add jns fidiv xor mov push jns flds testl xchg flds incb fucomi xchg int scas mov lds repnz mov sti out sbb add outsb dec inc adc popa mov ja sub (bad) inc in jmp jnp jnp std mov mov push lds movsl fwait jo dec sub gs in rcll xchg pushf ljmp fdiv sbb jae (bad) dec test sbb sbb (bad) notb outsb jge scas dec lods sbb insl mov test gs jge mov pushl xor negl int3 scas xchg call clc (bad) adc rol fnsave or outsb bound mov fcmove inc lds dec cmc out mov fadds and sarl test mov or mov dec in clc pop scas inc test (bad) test and repz loop pushl mov pop (bad) fdivrs jbe test jb into xchg adc jmp xor bound lea inc and jns lret dec pop mov and inc mov jb dec mull inc sbb rclb or cmp es in dec leave cmpsb int push mov dec fucomi ficom je lea jbe mov fst ret addr16 mov test loope jbe into fldl cmc in cmp sbb js push sub xchg xor dec mov mov or push jns pusha xchg mov addr16 sub sub jg mov jp lds div adc aas xor jg ds fbstp stc lret push inc cmpsl or arpl ss in ror push and adc rclb sub int3 scas icebp jle insl push pop jbe pop xchg jmp pop push cwtl in (bad) cmp inc lcall ss orb adc (bad) xchg cmp dec jns and mov fs dec mov xchg mov in jmp fdivs sub xchg and pop add das aaa or xchg rclb jecxz inc mov fs sbb pop pop push sti push les cmpsl jge push ss pop int3 mov es cs movsb sbb mov fisubrl cltd xor ret pop push ss cmp add mov scas mov jle mov xor outsl jno les jo ljmp mov xchg or push test js lds test addr16 pop lret add or fdivp pushf (bad) mov nop data16 daa push add test mov mov inc add push add cmp mov cld out sub dec jg cmp hlt adc test jbe hlt or cmp mov int cmp or xor add bound in scas sub scas push xor cli dec in std mov push lret fstpt in adc xchg mov fsubrp in cli js lret stc lret push pop test imul les sub enter js clc push or push pop movsb lods jno rorb dec hlt fnsave push inc sti pop adc int3 and test (bad) loope mov scas jp xor hlt inc (bad) xchg insb mov daa (bad) push popf pop and jle add daa mov push cmp (bad) xchg add sbb in (bad) jecxz dec mov mov and sub mov xor lds pop clc xchg fstps out gs jno and xchg repz mov (bad) movsl cmp das jae jmp enter cmp lret into jne add cmpsl cmp int3 mov adc cli inc inc js,pt xor inc inc sbb lock out ljmp jle les ret rcrb or dec movsb inc add push mov daa lock fildl adc sti mov sbb pusha or test and fidivr cmp pushf cli or rcll pushf mov shlb add sti stos sbb sti add jnp push cvtps2pd and inc rcrl cmc pop test pop mov pop mov negb cmp adc fldenv pop jbe es mov scas sahf fidivl lea std mov push xchg imul cmp xor sub imul lds xor or adc jl rcll daa aad adc rorl popa sub mov push xchg imul les mov cmp repz and mov sub mov pop sub aam stc sar sbb iret jmp xchg fmuls cmp xor cmp ljmp pop pop (bad) cli jae lock dec cwtl lret push or cmp loope nop jle les (bad) pop (bad) sti xchg pop pop cmp jg loop (bad) (bad) cs mov jns mov cmp int in sub call or inc adc mov dec in jg and mov cmpl pop imul pop test jle call wbinvd mov in jp sti rcl jae dec mov call push sbb lcall (bad) xchg or je inc lds sub mov dec pop test aam cmp lahf out dec fs pusha and adc lcall cmp xchg insb xchg call imul test movsb cmp xor add fwait jle pushf subl aad sub pop data16 xchg insb rcl and mov ret scas jg imul and icebp shr adc mov mov and jbe adc adc fnop push cmp lock cs cmp lcall insb xor popa por mov fstp fmull mov cs js sbb mov pop pop or fwait xor pushf call (bad) sbb or ds mov add push xchg xchg add inc out hlt sti and xchg cld ss cmp jno inc adc push test cmpsl andb xchg fptan call sub outsl cld stc add icebp or je or fstpt xor pop aas sti dec out test cmp lret sbb hlt leave ror leave mull pop stos popa xchg inc movsl mov mov lret pop lret push shrl xchg clc pop inc push das adc xlat add sub iret pop dec sub rorl xchg cmp jmp stos cmp mov jl or mov add mov jbe xchg std repz push or inc pop (bad) pop add adc cmp dec pop xchg pop cmp sbb data16 insb add dec pushf stos imul push mov icebp out call pushf into pushf inc sub jg xor xchg sbb movsl loope xchg ja hlt clc movsl movsl jns dec push mov in fwait movsl xchg leave retw sub sub add imul fisttpl subl test ljmp mov int3 sub jp or les lods mov inc arpl lcall sub xor hlt dec dec iret add aad and cli pop jns fistp mov add xchg jp js or push cmpsb nop or mov inc sub pop scas subb mov mov lock imul jge fldt cli jecxz in test mov and arpl fiadd cs lea popa cmp mov lret mov sub xor scas pop mov ds (bad) lods jmp inc mov stos (bad) xchg mov adc cmp movsb shlb adc push fdiv loopne jge mov and cmpsl les (bad) cld lret (bad) hlt and incl adc lea and jg aaa or and outsl inc imul xor movsb sti fildll cmp mov jmp std jno add and call cld inc (bad) mov mov loope call call orl test repz or lret loope popf sub cmc leave ret or push outsl sub xlat jmp ja inc sub jo xor pop movsb leave xor ret adc cltd and mov and xor loop inc mov das or je jecxz rorb push inc and push fldz sahf movsl push mov cli clc arpl aad add sub dec xor xchg cltd into add mov test jnp pop mov sahf mull fsubrp (bad) std sbb in lock or outsb or sbb fwait jmp xchg pop sti xchg repz in les (bad) mov adc add movsb mov sahf pop sbb imull leave jae ror pushf inc inc mov in nop fwait scas repnz jge rcrb add dec inc jecxz in mov mov xor and add popa ss cmpsl cwtl add inc dec push stos xor lret cmpsb nop (bad) or jmp pop cs loope push js or pop mov (bad) out in test or xchg mov out loope mov (bad) mov jno arpl sub insb mov or imul and lock mov sbb xchg idiv sbb (bad) or push shrl aam nop clc mov dec xchg sub and movsl adc fwait inc daa jl shrl push xor (bad) icebp cmp outsl fbstp xor adc mov pushf outsb out pushf pusha stos fsubs test fwait call xchg xchg jne xchg cmp xchg or sub mov rol repnz inc cmpl loopne les iret inc fldl imul insb cs js (bad) negl rolb cs (bad) out (bad) insb or (bad) stos cmp push and push or sub in idivb and in ret mov ss imul loopne or xchg rolb jbe inc mov (bad) sbb sbb lds add push ret sbb pop lea jp xor add ficom out lret gs sub dec inc imul pop loopne sbb jl and mov jo pop cmc flds repnz loope push les mov ss sbb or add test add roll or (bad) fsubrs bound xchg xor and cmp out imul hlt cmpsb mov je dec (bad) insb (bad) cmp ret xor sbb (bad) negl clc clc out cvtps2pi jl pop mov jnp inc adc push mov jae cmp call inc sbb or jno adc lcall sti out pop (bad) push lods jb push movsb xchg push xor iret frstor pushf cli adc cmpb dec mov mov rcrb dec insl (bad) cmp dec or xchg jecxz xor mov loope pop xor inc inc cmp adc push mov cmp push lret dec jge dec dec or sbb or imul adc in lret phaddbq push push insb int hlt xor std in hlt pop fldcw loop loopne das clc cmc mov xor dec loop scas jo xchg call pop popf mov push cmp (bad) push jb push lds cmp stos and mov stos frstor sbb mov sbb insl sub cmp inc mov xchg out add jecxz mov mov lahf pusha dec hlt jns jno iret cs jle and sbb cmc sub inc xchg sbbl xchg cltd dec jecxz lods dec cmpb lods sbb mov mov add push imul scas sbb mov cmp mov sbb test xchg lret cli and test loope stos stc or test adc xlat (bad) cld inc add push sub enter xchg dec lret cwtl xor dec es xlat out and sbb cltd mov in pop jne loope jns push sarb (bad) stos loop jmp (bad) push cs daa mov adc stos mov adc rcr (bad) and dec xchg cmpsl mov sub lock aad fwait aas jg arpl fist (bad) popa push (bad) (bad) xchg xlat aad jb cltd (bad) mov lock jae jae inc ret int3 inc pop cwtl dec sub push jb sbb sbb adc mov lahf cs inc pushf js xchg pop ljmp mov sahf pop push mov adc je or lcall dec push fdecstp cmp sub stc (bad) xor xchg pop pop sub cmp mov push inc inc lds push stos lret dec out movsb mov dec out mov jp insb cmpsl scas (bad) ficom or fwait rcr rclb or outsb cmc jle xchg cltd neg pop push pop mov or clc shrb outsl popl js pop jnp pop xor pusha fild outsb mov xchg mov cmc cmp movsb mov repnz repz aam rclb mov and pop loopne or jle dec inc add sub ret je lea or xchg mov (bad) sbb (bad) sub and movsb in sub push mov cwtl js roll mov and fmull xchg loope lock inc or pushf push cwtl lds pop pop add adc xchg mov sbb mov aaa (bad) jg lock test add fisubl out ljmp hlt fwait out movsb sbb scas mov mov imul (bad) lock xchg xor mov sub (bad) xor mov mov mov test lds (bad) popf ss or mov gs repnz jnp lods mov mov mov pop inc and imull lock add repnz iret push cltd test leave ffree cli cmpsl and in loopne movsl add aaa mov testb add hlt mov test push jmp les int or xor cmpsl dec xor sti mov sbb in xor sub adc outsb pop inc call dec pop push test fdivrp inc cmp fdivl and xor inc jns jmp (bad) pusha cmc push inc scas jle jno mov enter xlat test dec pop nop mov cmp in mov sub adc ss mov fisubl push mov push clc cmpb push and cwtl sar push add stos xchg ficompl mov mov lods or in cltd js arpl mov xchg int3 adc cmp movsl daa xchg in push (bad) pop js dec hlt pcmpeqd push jne aas jge xchg rcr lcall cmpsl cmp or fstpl and pop sub or push es outsb jb pop negl js mov int mov cmp test pop (bad) out fcomps mov jno,pn sub dec repz out loopne sub xchg fcomps lea cmp pop xor int3 dec imul mov fs and shrb daa dec mov into add cmpsl notl xchg call frstor mov xor shrl movsl cmc shll xor ret popa icebp jg pop push inc loope mov mov jne push enter fs ds cmp inc imul les outsb cwtl jae xchg adc pop test cmp mov xchg fbstp cs cmp out js xor stos inc xchg stos jns lds inc dec dec xor enter mov int ja mov out jns mov bts cmpsb shrb mov push pop push jbe xchg loope xchg lea lods fwait (bad) mov bound or cmp aad fwait clc xchg roll fild jmp lods sbb pop dec mov inc sub and cmpsb cmc cmp sarb push in xor fisttpl push movb pop lahf and test in outsl jecxz add fisubl xor call enter dec hlt cmp (bad) ljmp sbb pop mov push fcoms orl pushf pop lahf mov push xchg xor ljmp jae jae jb xchg cwtl cmp and xor mov enter xchg adc repz xor mov pop mov jb add fcmove lods jle sbb movsb int sbb repnz dec inc test cli cwtl negb or (bad) mov arpl xor hlt popf pop fsubrs xchg xchg mov sub push ljmp (bad) dec add mov iret xchg mov pop ds dec stc lahf (bad) mov repz cmpsl mov dec fidiv pop in push xchg hlt jns cld lahf pop movsl ror xor pushf sub cmp sbb out push sti fs (bad) lret xchg pop adc and push fwait in sub data16 (bad) xor fsubs cmpsb shll std lods dec xchg mov mov paddw inc mov test hlt repnz loope sub das arpl insl notb sbb aad pop (bad) mov pushl lds das jae adc mov pop sub fsubrl push push imulb adc pop add mov loop into xchg mov mov inc push ret outsb and pop popf loope add popa movsb fldenv mov add jne push test jae out (bad) nop and popf lds dec mov adc push out ds mov rol scas int jo or sbb dec repz ds mov pop sbb data16 adc pop dec jp jbe insb add mov dec pop fldenv sbb dec xchg jg mov mov jecxz mov jp,pn mov ss sbb out xor jmp sarl mov scas bound sub pop iret pop cmp sti insl fs fnstcw popa cmpsl xor inc sbb adcl bound jno (bad) in adc cmp std push mov adc scas or xchg in cmpsl mov cmpsl dec push dec clc add in adcl rclb mov xorb clc mov xlat test stos or lds xor (bad) cmp mov lea mov inc outsl (bad) repz mov in lahf pop jno jp and sbb lea ret inc (bad) xchg jmp (bad) in ret jo sbb push jno int inc jmp pushf test mov add mov inc ret and push push jmp xor jg xchg pop pop lods xchg loop sbb mov std xchg rcr lea std outsb xchg inc outsb xlat adc ss xchg scas aas ret xlat jae jmp (bad) mov xchg fucom mov jecxz lret adc mov (bad) hlt out xor loopne mov jmp add incl jae inc cmp jle jae xor pop in dec sti jno popf add out pop push mov xchg dec add adc jp,pn mov mov (bad) mov data16 jo faddl push das sub jne jge pop push cmpsl push (bad) cwtl fwait lea ss sub add (bad) lds pop cmc (bad) dec fist lahf push fsts (bad) cmp push dec (bad) cli mov or add mov mov cltd mov out notl xor adc fstpt adc dec inc addr16 std outsb int3 adc push je pop jge adc ret repz lahf stos ret and xchg iret ljmp adc push mov add out ret ret cmp outsb into jo push notb stos in push add pushf and ret into push movsb or cli and inc pop pop xchg cmpsl push ret xor popa andl mov push and sbb daa add pop add iret jg cwtl or mov cwtl sub pop divb adc sub ss lock clc lods icebp xchg nop jne dec out and mov in lea pushl nop test aam mov insl mov push popf mov jg pusha in inc cmp test (bad) sbb call push pop cmpsl nop xor push xchg xor cmc mov xchg lcall xchg and scas fldt lea or (bad) rep ds pop aaa xchg xchg (bad) aaa inc stc sbb lock and mov das mov mov loope popa xchg cwtl push xor lds xor call popa or lcall movsb mov mov pop inc mov movsl loop adc out sbb out jae mov pop mov ljmp lret push push ss inc xor frstor sub mov cli push pop fcomi in sbb mov add ret xchg test or jae adc mov mov ret repz adc stos sbbl call add negl imul and std inc fidivr cltd (bad) jb mov in push xchg jmp fyl2xp1 adc xchg mov inc ds orb mov inc xchg pop adc mov adc in cmp cmp pop push fistp or icebp xchg push xor sbb je sbb inc jne push lea jnp sbb sub daa jb in sub test outsb imul sbb aas dec das sbb sarl xchg push jecxz ss mov insl or xchg (bad) icebp cmp dec xor clc cmpsb arpl pop loopne xchg insl daa shlb mov js loop pop out jp jbe jne adc lret ds hlt in dec std rcrl pop popa rcr fisubr and (bad) rclb or hlt pop inc sbb roll ret imul cld dec adc dec and mov or jmp je leave inc outsl out push scas aad (bad) xor subl aaa aam push inc mov dec andl push sub jnp dec das xchg cltd popa push test insl mov or lea adc scas dec mov test ret jb mov aaa and fsubrs lock sbb push fcmove nop pop pop mov mov sub test xor jmp aam loop data16 or xor push dec inc mov add push push push cli sbb jge inc cmpsl mov jb stos mov repnz cmc and icebp data16 nopl xchg xchg dec sbb xchg xchg movsl into nop pushf int adc inc out push lods repz jecxz icebp dec and xchg sbb fdivp inc int inc pop inc shrb xor out dec mov ss push jle push fadd jno test mov adc iret xchg mov inc xchg out fs call int iret (bad) pop mov jp jecxz clc (bad) jnp mov pop pushf int3 mov jle add rclb outsl loope and cmp aam pop push inc test imul lods bound push cli adc cmp or lock cmp cmpl xor imul xor xor mov xchg xchg adc xor fucomp xor add mov stos scas or lds imul dec adc jecxz mov int (bad) sbb sub inc ds or or mov into mov mov (bad) lret test dec ljmp and es mov sub aam sub cmp inc dec xchg test sahf cltd sub cmp push lods xor repnz sbb jne andl sub pop rorb cld test dec push in xchg mov or out mov cltd xchg cltd push fdivs iret cmp les inc adc pop call (bad) int3 xchg test outsb mov sbb std icebp mov lea sbb adc lock sub push mov rclb push lock jmp fcoml subb sti (bad) stos repz addr16 es jmp imul mov mov in xor imul push mov adc insb jo and pop pop inc je add add in lret jle (bad) vzeroupper je sub out cmp sbb lahf test lock mov icebp lods aaa dec inc shll jo fisttpl mov inc sub imul out sub jl pop (bad) (bad) outsl cmpb push (bad) xor push (bad) (bad) faddl (bad) push jecxz mov arpl dec imulb or sbb xchg inc push cltd dec (bad) xchg inc repnz and clc and sbb sbb adc sub imul sub mov inc mov cmpsl ror jg scas sub cmp rorl ljmp test sub dec loopne sbb orl mov push or xchg push (bad) or pop sti sub incl adcb notb out and push imul mov call addr16 sbb mov inc sbb outsl add iret and mov xchg xchg (bad) mov test cmp lcall dec lock (bad) cli xor bound rcrb mov dec jg xchg cmp mov pushf mov mov adc ljmp test xor call mov dec sbb cmp adc or out lock or cmc div xchg addr16 into sub (bad) cld jo mov clc push jecxz push enter xchg aam cmp lcall pop fcomps xor (bad) cmp cmp inc mov das outsb out arpl shrb or dec (bad) sub into mov jbe jne (bad) adc (bad) movsl sub icebp flds imul jns movsb push ljmp sti dec clc cmp and xor add dec xor cltd repnz (bad) cltd sbb sti insb xor xor xor es test out inc sbb out rcll call gs mov fs fcomps fadds push mov jg insl bnd cmp fisttpll in pop mov cmp add mov ret shr xor push cwtl jecxz push lds add inc stc rol subb add or mov lods lea orl dec sbb bound add push push or mov dec cmp xchg fwait cld jg or and mov loop fnstenv dec movaps cmp pop mov add jmp mov test cltd jns mov lds sbb dec cwtl fstl mov ficomp dec scas mov cmpxchg fstpl lods pop jbe xchg xchg lock imul mov add sub pop sub sahf pop repnz (bad) dec lock add adc icebp push aam fisttpll dec mov pop lea (bad) mov jns add push ljmpw and jb pop sbb addr16 jl mov les es lea dec icebp lcall xchg mov jg push or jl and sbb cmpsl scas (bad) outsb add lcall push pop orps xlat sbb add or and jp lods xor (bad) mov or xor cwtl and imul xchg pop push repnz xchg jb fistpl stos in int3 fidivl mov lahf pop stos (bad) push lds enter inc push cli enter cmp sbb adc pop outsb jne (bad) push mov (bad) mov loop inc or inc es mov pop test mov mov and cli xorl jp mov adc mov and (bad) divb (bad) movsb je data16 js push bound popf cmp fildll stos cmc push daa and sbbb in in fld sbb push or push dec sbb mov cmp pop cmp add jno,pt mov pushw inc lea and es jg add inc lcall rolb jae lods subl aad cmp mov mov std pop dec xchg xchg inc pop jb cmpsb dec sbbl jle mov ljmp sub or xchg dec ret xchg in aaa add push mov dec push mov cmpsb cli out push push lret inc xchg jp mov sub data16 cmp or push or rol jmp mov dec mov xchg push push or cmp jl cli mov sub xchg arpl jne enter xchg and dec rcrl push roll jl bound loope pop or neg int lods sbb orl mov pop mov lods add xchg mov test pop sti adc add jb cmp test ret mov mov mov push repnz add pop addr16 mov lea cltd dec test fnstenv je mov in andl jle xchg bound jmp out lcall push cltd adc (bad) repnz in sub mov mov std lret lret daa add inc mov outsb cwtl lods cmpsb repnz repz xchg and aas or mov or lret push les mov das pop push test pop cmp jo push mov jb testl push cli cmp xchg pop insl imul imul (bad) ljmp xor add mov adc lret movsb popf lock (bad) adc push sbb and repz mov lret sbb mov cmp fdivrs inc add imul fwait cmpsl scas (bad) push dec xchg sbb mov sub jmp (bad) mov pop ror (bad) fmuls mov sbb out mov and (bad) pminub mov adc shrl icebp into sub cli rorb test jl imul cmp push out push and iret sub fisttpl jno adc sti shrb dec mov mov mov mov push cltd cmc xchg cld inc aas adc add pop scas dec jnp pop sub loop addr16 imul ss incl sub stos aaa dec idivb dec stos data16 (bad) cmp push pop inc xchg adc mov push idiv ja inc loopne xlat xchg mov mov sti int cltd imul pop stos dec lret dec ss pop (bad) cmp xor adc int3 pop inc push pop dec sbb rclb (bad) and rorl stos lods stos or adc or (bad) in adc xchg pop (bad) int notl sub mov nop pusha xchg stos jno mov jmp mov cli insl in mov mov ds push xor xchg mov out daa insl ret mov in loopne (bad) mov fisttp sbb aas rclb mov jb fisub pushf sarb inc push or (bad) fdivl push cltd xchg std push mov and sub lock lods test and xor setne mov fstps rorb adc xchg adc or add jge or test cmpb repz mov ret fucom pop add stos sub push nop cmp cmp inc repz mov fwait aam (bad) lds into lret mov das or addr16 lcall ds sbb mov mov add insb (bad) xchg inc mov mov lahf cmp out cli xchg jl nop mov mov pop sub movsb jns in jg jl or and inc sahf push into mov out xchg xchg lock and inc mov push jo pop mov rcrl xor stc jecxz jl dec fadds addl mov push mov outsl dec pop jae stos sbb jg push xchg xchg sbb pop sub out cwtl imul add cli xor shll pusha dec xchg dec rcll stc gs mov stos ret cmpsl (bad) out aas xchg dec (bad) pop clc sarl in icebp mov divb mov (bad) mov sub lcall xchg daa lock sahf aam push ds jb popa inc les lds inc inc pop sub fbld add cmp test aas dec outsl mov out xchg jb ja ret fcmovbe stos cs add gs movsb aam mov jne pop aas lahf lret arpl cmpsl movsl in lret inc repnz dec sub fstpl cmp xor cmp negl pusha cs push ret cltd sbb ret mov ds dec (bad) jecxz xchg popf jo arpl ficom lcall add cli adc adc and and jbe test pop add inc jae pusha jae int inc xchg adc push mov rcrl shrb cmpsb lret mov ror dec push aad stc clc das adc fs jp jbe iret sbb cmp add enter xchg and sub push push push xor pop dec out cltd in pop jmp ficoml cmp ds stc mov sub and daa push push xchg inc aam repz cltd loop xor lds add adc fnstenv xrelease test pop dec mov and fcmovnu xor inc adc dec push and mov mov in push push out iret cmp aaa mov sub sbb or repnz dec sti xchg sbb lret iret cli or xor out test jmp push adc pop ljmp fiaddl std ret mov ss jmp mov in (bad) jmp arpl mov rcrl (bad) dec loopne lods xor fwait sbb mov stc out cltd xlat negl leave or dec (bad) (bad) cwtl cmp ja mov jl jmp scas pop mov clc dec inc cmpsb cli leave sub lock (bad) cmp aaa aad aas cltd jae leave sub xchg mov cmpsl aas clc jmp roll shlb insl outsb pop inc inc mov es dec push ret pop inc les cmp inc push sub jne sub mov xchg dec jbe jp pop inc dec adc shlb and imulb inc mov fisubrl jb out leave add test lcall mov int mov enter data16 push sahf sti aas xor jp mov push sbb leave sti or std pop add ljmp push jmp dec lahf pop xor mov inc frstor fadds scas jno push xchg and test cmp fwait mov xor sub xor (bad) out xor mov loop inc test mov and les sub addr16 enter scas test push mov fcoml push imul bound insl or (bad) fadds xchg popf pop xor js xor mull add jb and xor add add cli aaa inc (bad) cmp pusha pop adc leave loopne jmp sti dec cmpsl cli cmp or out and cmp nop aas cwtl cmp jae ret pop xor inc pop jmp stos jl mov jg and lcall movsl pop faddl mov xchg dec data16 xor mov loop in cmp test fbld mov adc pop test dec (bad) xor cld inc mov mov mov mov scas mov test jno sub cmpsb cltd clc lea lret aam stc mov (bad) xor and insb inc pop xchg ret sub or aam mov push loope jae mov xor test aam mov sub cmp test cltd pushf push imul xchg mov notb jb or imul std sti in lods loope test push stos inc dec sbb adc bswap popf push dec ret out sarl pop sbb jno sbb aas ret add push cmc pop lret out stos cltd xchg jp pop push dec out mov or mov pop mov (bad) out inc aaa fsts repz xchg mov arpl add repz (bad) loopne ja in pop enter divb mov xchg jle call test or (bad) rcl pop stc incb sbb jns xor mov dec inc into adc clc lods xor imul stos xor sub lds fldl jno sub mov xor dec in jbe and and lods mov dec shrl sti hlt add jne xchg fadd dec mov xor std lock mov dec inc test xor daa leave xchg pop cwtl or fist roll xchg outsb adc jns push lcall mov into popa and xchg jae icebp std jns pop dec sub inc sbb mov inc pushf mov jmp ds mov andl icebp fstl and arpl add stos stc mov mov shlb pop les dec leave push add mov ret and pusha jg cmp data16 ja arpl decl xchg fsubr pop movsl roll or enter or adc cmc loop fiadd xchg idivb dec insl and lret fistpl mov xor sbb jmp aaa xor inc cmp (bad) dec es cmp xor mov mov (bad) cmpl ljmp cmpsb pop pop daa push btc pop ljmp bound mov decb jo jmp push enter mov jae xchg lahf xor imulb and cwtl (bad) in into add icebp or js loop outsl or push int3 xor outsb mov lcall xchg pop pusha and mov sbb rol push mov test (bad) adc (bad) mov dec sbb or and push mov movsb cmp idiv jb mov lret stc test stc shrl cmp pop cli lods sbb push push cmp (bad) scas ljmp aaa jp fcomps jbe add pop fisubl in clc xchg or fldcw push xor sbb lock xor dec cmp and and (bad) push shl hlt add push add and add jnp in mov lret mov jmp add cmp sbb (bad) lar mov decl leave sbb xchg and add in and test jno int jmp inc mov cmp js lods (bad) sub int3 mov or pop loope loope fwait movsl rol lock call mov int stos or outsl jnp stos ds in sbb cmp sub (bad) pop sub jae insl popf jp or fwait pop scas sub mov call fwait and inc pop xchg jne xor pushf xchg xchg xchg sub sub in cmc cmp jne sti test inc adc mov pop push hlt jle jnp mov fwait mov adc jge cli sub adc xchg gs pushf fadd add outsl icebp (bad) cli xor pop popf mov jmp mov adc enter mov cltd mov scas xchg bound xor lods mov arpl lahf mov mov (bad) jb ret jecxz xchg xor add popa pop ficomp stos ja out rclb scas jno cmp dec lret lods test (bad) subl out mov xchg sub xchg loop cmc push pop lds jo push mov adc in mov mov push out out mov sub xor pop fucomi ret (bad) xor and cmp ss inc ljmp sbb test dec popf and movsb cmpsb jb xorl hlt jle add scas das fs inc cltd test add mov repnz sbb mov cmp lods mov adc xchg outsb and mov jns inc and add pop mov mov pop and adc mov lcall fistp jge fisubl mov push and pop rorb rcl and add cmp lret (bad) lea je loope iret scas je out mov call in sarb jle push int add and fidivr jnp pmaddwd mov sar or xor sub sub pop pop lahf std test fisttpl jb inc jecxz ret push mov add popa jne popa dec movsb movnti pop (bad) outsl rcll repz shll push test xchg out in aam adc imul out dec in xchg mov jbe xlat or in rcrb ss je jnp adc outsb jo ljmp mov aad cmp push out xor or inc xchg test inc je mov jb pop sub push or ja xor add adc cld call faddl lods and adc dec or jo push in jns ljmp mov jmp lods jo cs clc scas mov lds push jbe (bad) xor pushf ftst cmpl cld stos xor adc lods imul and mov mov cs into dec mov xor or pusha adc mov jle or fdivp xlat fnstsw (bad) loopne in repz ret ljmp (bad) pop dec mov mov sub inc mov push jno or test adc ficomp push test dec out das popf test ss (bad) push cs loope push lock (bad) (bad) and lods push xor mov jmp call lcall cmp mov sub ror pop ret mov mov push mov sbb clc sub xchg xchg mov pop repnz das mov test and jno ss push inc pushf sbb loope adc mov mov mov les cmovne fnsetpm(287 push add inc adc adc mov jo jns sub dec pop pop lock push iret mov (bad) rolb (bad) xor mov sbbl adc dec fcomip nop xlat in cld jp xor jbe lds popf sbb xor negb sahf jno lcall (bad) mov pushf lcall mov pop pop jmp movl mov addr16 xchg fldt shll pop pop je bound (bad) sub ret leave cmpsl adc lea add pop js jns es xchg jns scas pop roll lret dec inc (bad) sbb sbb in xchg aad shll out jo jo xchg inc dec and aam push ret bound adc shll sbb hlt inc inc stos int3 out jnp dec or sub sarl pusha adc (bad) ljmp mov mov out dec addr16 ret xlat xchg testl jnp cmp sar or add gs lret lds and mov mov int sbb pusha mov cmpsb xor data16 mov out xchg mov push into orb popf mov movsl inc jb pop ja std stos js outsl js cltd sub fadds jae std leave test ret push xor outsl jge lret fisttpll ja cli das adc fwait (bad) pop repnz add push (bad) and aaa mov xor je xor das aas (bad) and cmp jb inc mov pop jge ds scas and popa sbb mov xchg sti xchg cmp ja cld jns fstpt lock fildll mov push sbb icebp inc sarb mov jmp pop fdivrs sahf push push sbb adc ss and mov stos xor jae (bad) mov das sbb int3 mov pop loopne movsl and in add jmp inc cmp gs add fisubrl mov cmp mov loopne popa sub iret repnz (bad) hlt mov rclb mov fild pop js dec jae ret push int scas repnz mov pop rolb jns fwait adc lock out dec sub sub and add dec mov xchg imul add or and rol lret sti mov lret test in mov mov sub cmp (bad) (bad) ja nop insl jg fldl (bad) jbe aaa jae inc mov (bad) or mov mov push adc xor std add xchg imul scas cmp std sub cmpsb jp jmp ss xchg pop jnp sbb pop cwtl cs adc xlat pop jno fstl or jle scas inc into in repnz ja scas leave mov iret adc lcall stos (bad) (bad) in mov sbb and jno and in out lds inc or jb sub inc jb leave or and adc ret leave movsl and loopne xlat loop cmp inc xchg pop les stos or mov pop jl inc pop sub mov ljmp into aas jl (bad) fisttp xchg mov mov lret push div imul pushf aaa fisubrl je pop push pop sub mov jecxz outsl out adc sbb add xor mov mov addr16 in jno arpl dec cmp aaa or icebp fist xchg fdivs xchg cmp push sub dec int3 into push aas mov jecxz clc jg out xlat in add xor sbb test push clc out adc add pop mov mov sub mov xchg adc outsb (bad) xor push adc lret sub dec mov or xor stc dec cmp xor bound or jo xor dec jg fcoml sarb ret leave dec pop mov sub add sub mov mov jl enter sub lods sbb adc addr16 mov mov push insb push push and lods lret add out push mov dec add sbb std out jns mov in push in (bad) and sbb popf cvtps2pd fstpl stos stos fnstsw icebp pushf fucomi pop dec gs iret call push icebp pop push pop leave xchg xchg int push xorl stos stos imul sub mov pop stc jmp adc fistp mov jl pop mov popa jmp rcr (bad) mov xchg ds pop fdivrl sbb cmp cmc subl fldenv mov adc pop sarb ss push std cli enter cmpsb orl inc adcl arpl out lods push icebp push add mov aam inc lcall sbb and mov sub cmp (bad) add andl push lea cmp cmpsl cmp ret pushf in jbe mov dec stos push jns mov and sub das add negl mov lock sahf popa mul sbb inc mov mov shlb enter icebp ret in mov ss sub stos push push and add jnp dec xchg cld stos cmp test mov sbb push lcall enter (bad) sbb sbb and test iret xchg adc push push or dec push inc or test dec dec std cwtl in out iret jecxz (bad) mov inc cs pop and xchg inc pop sub jl adc shll adc in hlt stos rorl repnz in inc pop or xchg imul push jecxz xchg add xchg xor sub rorl std sub dec mov adc test rcll test push pop jne mov and push fstps shr xor popf in xchg lahf jae push or xchg ret inc add pop or pop mov rorb push cmp data16 imul cmp pop insl iret sub insb or aaa mov shlb fs mov insb (bad) fcompl fwait cmpsb mov xchg sub xor sbb rcl ja loop out sbb mov fwait movsl fs mov in and sbb mov std adc addr16 mov stos rcrb push cmpsl sbb std popf std ljmp clc xchg sub pop add cmp inc ja cli xchg mov in xchg mov mov into sbb ja add cmp movsb xor pop hlt hlt outsb add push jae lods fst adc lret or xor push push pop mov sbb shll ret cmpsl fs arpl mov mov xor (bad) xor fnstcw mov jl cmp xor movsl adc sub aas loopne lret std xchg cmpsb jae arpl cld pop jp mov xchg push dec jmp nop xor dec les mov or add mov jnp je mov js rorb cwtl mov sbb add sbb dec test ljmp dec inc mov mov xchg cmp ljmp cmpsl mov scas xchg popa out les mov fsub adc orl inc fimul push or je push ljmp inc dec add push cltd push or xor jle lret mov int inc dec cs or shr into lahf lea adcl jl push fsubrl pusha xchg adc out inc icebp pop sahf lret lock push ss (bad) mov cld pop xor out xchg sub pop pop aaa inc jnp and push fistpl std inc ss adc sahf jp incl add pop lods pop lahf jns movsb nop sbb adc sub stos lods pop in push pop (bad) mov inc lahf or dec push add mov mov js outsb shl xchg jmp movb xor lcall (bad) and mov ret dec pop cmc (bad) xor xor mov dec insb rcll mov mov mov (bad) mov shll inc xor andl add adc fstpt inc and dec mov adc movsb xchg adc outsb and in imul xor sbb xchg mov outsb pushf cmp add ret jl mov cmpsl mov dec js aas mov lcall mov andl imul out jnp sti loope sub out das repz aam sbb dec rcrb (bad) cmp or test inc mov inc push imul xchg fisubr dec add and mov data16 and lds lds roll adc pop sahf insl (bad) fdivrp inc add sbb popf pop inc ret lea sti push mov hlt stc sbb fwait add xor in stos cmpsl lcall and xchg cmp cmc add mov sbb in subb out out test sub fs mov jb ja lods xor xchg adc jbe lret out mov mov es or iret aas and pop (bad) mov (bad) arpl sahf sbb sarl pushf sbb dec into adc push xchg les push mov icebp lods aam dec (bad) dec mov jae pop pop push sub push and loopne push outsl jb pop mov popa push mov hlt pop push test dec sbb push push jmp rolb cli out ja pop fwait rcl jne push inc jnp jne popf push mov (bad) jp loopne and (bad) pmulhw loopne cmp into xor fwait pop pop in test repnz and jle mov scas lods pop (bad) pop test lret lret push xor jns movhps adc xor incb jecxz push fadds or or sbb or pop add push push scas pusha repz jmp fnstcw (bad) loop adc sub stos push sub cmp jmp push xor pop test mov add dec adc add jmp repz insl inc in cmp or in int3 leave out add mov fisub daa int3 in inc fnsave mov cmp movsb xor cs mov popf loop andl arpl push ds lret mov sub pop aas sbb xlat jge add jmp inc fucom cmp xchg rorl in mov mov dec in (bad) hlt fisttpl add frstor and mov (bad) mov mov fsubl push call sbb mov xchg xor mov test pushf or add sub pop adc loop fistpl sbb push dec jle sub jmp cmc es imul cmc jl aas (bad) cmc pop pop fwait test popf gs push scas shlb inc (bad) bound fbld shrb sub mov adc in cltd mov pusha movsl movsl pop push sub add mov inc fsubrs jno xor dec (bad) push add jecxz jg dec into xchg mov pop lea jge adc pop bound jmp js aas push push lods mov xchg scas push adc mov mov aad test movsb inc cmc xchg push decb ror insb inc jg push xchg lret or repnz pop scas cmp xor mov (bad) daa stos mov pop sbb ljmp fsubr inc or inc jp rclb cmp mov sbb cmp daa and mov rcrb andb push sbb aas push xor pop pop add cmpsl mov mov lahf and lods push sbb int mov mov lods xlat jg out dec dec inc dec pop loope or xor repnz mov xchg inc in jno in jge push mov gs pop xlat dec cltd pop jmp int mov outsb test mul mov out jb popf jecxz sbb repz dec xchg inc xor add ret pop sub insb iret dec lcall inc and jno mov and jae push mov aas test arpl inc ret js dec movsb hlt repz mov pop add cmp adc mov fwait jp arpl mov mov mov sahf ret mov ret movsb inc test movsl xor (bad) xor dec push ds add xor sarl xorb clc push pop cltd sbb mov es mov xchg push out and mov xchg imull in cmp les aaa inc add mov inc xor push sub test cmpsl pop jne js sbb jo inc jmp xchg (bad) (bad) (bad) mov cmpl imul push icebp or gs inc not test mov and and pop call iret pushf xchg and cmp andl ret arpl scas inc shlb cmpsl dec mov test (bad) lea pop mov jmp or inc (bad) mov pop push adc dec aaa cmp fisttp jecxz movsl mov push xchg (bad) mov popa jmp mov in stos xorl out sub or (bad) or les inc (bad) jmp add cmc jae leave fcmovbe icebp mov test cmpsb ror (bad) mov ret lods test xorb insb repnz sub inc xchg adc mov repz jbe xor clc int3 stos and jo fwait mov dec cmpsb clc aam jbe (bad) xchg stc idivb mov popa mov mov pop sub cmpsl jno mov outsl in repz lret xor adc sbb inc fistpll pop in fwait sti sbb mov popa mov adc into xchg pop leave test imul lods xlat cmp mov jae ret (bad) push adc mov dec shl rclb cmp fyl2xp1 push dec (bad) in repnz xchg jecxz mov add aas aaa add push sbb cltd sub cmp sub jg les or push push scas adc mov cld cmp mov sub sub faddl inc cs loopne (bad) xor inc and jge xchg loope jmp jecxz fucomp sahf in jb cmp outsb pop imul xor xor adc xchg push (bad) enter pop pusha mov mov scas iret xchg cmp outsl stos pusha mov scas popa mov cmp mov outsb push add sbb rcr (bad) xchg cmp mov push les (bad) loop nop xchg jne movsb orl push dec xor mov push and int (bad) stos jne popa jnp inc xchg lds test inc cmpsl aaa lret js pop sti mov push test sbbb sub fs sub xchg xor out push and push adc xor or fstps or xor in in inc lcall xor ja outsb dec ficompl mov mov mov into (bad) pop aam add das and bound aam add push rcrl lret dec (bad) mov fwait loope cmp lds jb aam inc mov mov stc mov add dec mov pop and je jb das adc in lock out lods call push addl pmulhw pop mov cwtl fmul cmc jg (bad) inc scas and (bad) mov pop cltd in pop push pop mov xchg fimull xor push dec out mov mov lret cld pushf adc lds movsl daa mov xchg negl xchg sbb cmpsl push jecxz xlat loopne push xchg mov test hlt mov test popf (bad) jne ret sub cmp xor sub push in sarl into aaa dec dec cmp sub and test pop (bad) jg lret mov jne idivb and adc xchg sub xchg or or dec pop shlb ss mov add stos cmp and mov daa test imul popa and and sbbl insl lds cltd jnp jne sbb sbb xchg mov mov jo mov push rorb push (bad) xor fistpll xchg push loopne sbb jmp leave cmp xchg dec mov adc aaa jbe inc mov fldt call fiadd rcrl ja push xchg out push mov sarb pushl (bad) cmc cmc jp out pop push sbb jle sub push fisub test sti js push (bad) (bad) jbe addr16 add mov cmp call (bad) (bad) mov sbb push push and les sub mov jne mov in push pop (bad) out sbb fdivl pop negb movaps stc into mov (bad) jnp lcall test pop cmpsb lret add mov dec pop pop pop stos mov jo inc mov ret sbb or pop add fadd (bad) dec mov in gs (bad) stos shl adc sarl inc fimul jae (bad) mov pop cmpsl (bad) cmp add repz inc aam ss outsl mov add sbb out (bad) stos dec jge jne rep ret add cmp xchg push ljmp outsl dec mull (bad) in inc imulb xchg adc enter addl js cmp dec movsb add add (bad) outsl push dec in sbb or lock pop adc movq cmp in sahf dec je mov jg cs jne les xchg lock scas inc popf std or mov es mov xor mov aad test fcomp sub adc push dec mov mov arpl (bad) (bad) adc mov adc cmc or pop inc jno sbb inc jo (bad) daa sbb xor push sub (bad) mov sbb enter outsl push test sbb orb imul xchg xchg inc out and fstps call out test xchg adc sub mov (bad) mov iret imul xchg leave nop sbb testl loopne add cmp fwait jne ret push push sbb aas sub lds hlt add xor mov cmp ret jb adc pop xor push mov jne xor aaa sub (bad) push pop dec pop add movsl cmc ja lret movsb lea sub dec rol outsb dec add int push cmp adc lds push pop (bad) jb cld sub mov lret test daa pusha cmp popf das lret or or sbb das sbb lcall rorb mov hlt imul ja push or jg push xchg pop xor jle lock mov pop dec inc mov in outsb mov dec scas lock cs sub out popf mov adc xchg inc out sbb mov pushf or xor push mov and cmp jns sarl sarb insb jne pushf ds inc pop sub xor insb popf out aam add sub fsubrs dec mov (bad) xchg mov mov push inc ret pusha and sbb repnz pop clc xor mov int loop inc or pushf and and ret rolb mov inc mov aam adc (bad) inc push outsb ja stc popa push lahf fsubl stos push lahf xor fsts std mov or lret lods cwtl test call in andb dec mov xor mov ja xor sbb xchg (bad) mov lret ljmp aas cmp loope into pop (bad) jno fsubl sbb xorl push stos stos stos mov outsl repz jmp movsb sub add xor push jb pop std test adc fs cli sub les loop cmp or inc cmp (bad) outsl xchg mov sahf mov xchg dec and (bad) in mov mov lock shrl out (bad) lret xchg hlt repnz adc push scas or dec mov jbe daa mov jle xor adc pop enter pop cwtl dec push test mov jg into push xor psllw or or mov and pop or ljmp jle mov int ja mov xor sti cwtl adc into jp fxam and daa imul jbe jns sub imul pop js adc xor pop mov pop scas mov and xchg aad pop jle loopne mov stc shll stos and mov mov xor repz push mov sbb imul bound sbb push and cmp shrb mov sahf (bad) cmp fistp push mov pusha jp xchg dec cmp push sub jno arpl popf push push adc cmp in inc xor dec push (bad) ret out outsb xchg adc xor test adc stos imul cmp data16 adc or lret add add jne ss movsl jnp jbe jmp jns jbe add dec pop push mov push and add inc jne xchg cmp xor and fnstsw sbb arpl inc mov push lock loop pop icebp mov cmpl mov outsb xchg test mov cmp nop adc adc xchg or daa mov sarb xchg jmp flds es daa xchg mov adc or ficom cli xchg cmp add imul aam push add xor in push dec inc es mov or inc dec es nop inc out xchg xor cmp les lods (bad) mov cmpsl test imul xchg mov (bad) mov sub repnz cltd cmc push cli sub pop xor and lahf xor and xchg fsubr testb pop dec fsub inc push xor mov and fnsave pop leave fs xlat imul popa (bad) jmp mov add or mov cli mov jnp out sub faddl imul addr16 pop add mov cmp fcmovb das push aas cmpsl daa mov lock and xor inc cmp pop pop lds data16 xlat cmpsl push (bad) sub lret jecxz mov icebp das cwtl dec jno (bad) or sub daa and leave cmp xor aas sub outsb cltd cmp ds (bad) arpl in xor dec pop dec outsl or (bad) push sbb xchg das lret xor push sub fisubr lods pushl and mov ja pop dec push push xchg adc xor jle push inc ret out fsts icebp fstpl test ja mov inc push aad mov pop push (bad) hlt clc mov lds ret test fmuls mov or sbb cmp sahf (bad) cmp icebp int pop stos xchg mov negl inc lea (bad) and mov xchg jns ret js xor xchg mov call fidivrl inc mov loopne pop cmp xchg notl cltd jae (bad) sbb insl (bad) sbb jns arpl xor test mov inc mov mov pop imul jg inc ja cs dec in dec cld data16 rorl sbb pop sub mov mov andl pop cmp data16 adc addr16 arpl xor jns sbb jecxz push addr16 ja jne xchg fwait jb shll inc cmpsl sahf in dec adc cmp push std lods sbb dec sub pop sbb inc mov xchg mov jae push push ret pop jg adc cmp sti add push (bad) mov in inc mov and lock into add int lods mov lds add or add sahf jmp sub les add movsl mov push pop cwtl cwtl ja sub xlat pop sub das push or lock and rorb test les add and pop dec call lea fwait mov mov dec sahf mov ficompl sti ficoml inc cli push sti ljmp xor xchg rcr fs js push jg and (bad) jl or xchg dec or mov jb outsl cmp xchg sbb scas pop push pusha enter jae inc adc jmp sti test scas in fwait pop ja jne inc (bad) es push sbb daa in stos push idivl mov fmull aam int mov cmp dec rolb adc or loopne mov lahf and movsl inc adc orb push outsl mov sbbb add push notb in imul mov (bad) sub push mov dec rcl inc adc ja sbb ss and inc into jg and aaa popa out decb cmp int or xchg xor dec cmpsl push into mov dec jge sbbl jle inc call xchg cli cmp push push repz fdivrl (bad) jns pop lock repz ljmp clc push (bad) jnp stos sbb mov aas dec test dec dec pop push (bad) daa push int3 push sub inc insl inc dec stc aam aaa push bound add sbbl pop test pop cli out imul loopne dec push or cmp in inc pop pop pop (bad) mov inc xorl and xchg or and xchg dec addr16 inc jae jo inc mov inc gs jge mov fcompl inc xchg push gs and mov (bad) xor les or mov jno loop jmp adc imul or test sub pop jle mov add cmp and sbb shl pop (bad) sbb xchg mov push push xor iret into inc bound mov jge test push adc into je lock mov pushf dec mov mov adc xchg aad insb mov pop adc lea nop cmp mov inc data16 mov push cmovns push mov inc jnp pop stos xchg pop mov lea scas cmp jno cmpsl or adc xchg dec scas inc or mov or lret mov aas push pop inc icebp mov outsl jo addr16 sbb lret (bad) iret add pushf cmp cmpsb pushf push inc leave sahf xchg setp mov dec ljmp sarb dec insb das jnp enter mov xchg mov sahf cmpsb mov xchg sub iret into jge test cltd mov out and orl xchg (bad) popa xchg xor and repnz (bad) lcall loopne sbb ja fdivl add adc dec inc divb push xchg out ss xlat or mov (bad) xor mov je or les add imul mov bswap lock add in mov dec jmp jbe lret cmpsl ret and add call pushf js repz movsb add xor in fimul mov mov push insb sub cmp jnp push jecxz movsb push fnsetpm(287 sub mov subl dec mov xlat dec mov sub mov pop dec mov push mov xchg mov pop ret adc pop sbb scas dec cmp insl xchg dec mov (bad) pusha call cmp ret jno push push lcall pusha or lock xor leave popf sub inc test fsubl cmp push jne and or push sbb ss sub (bad) mov sahf outsl (bad) (bad) add and ret in insb cmp addl lahf push in cmpsl fdivrl mov dec loopne out push scas sbb hlt inc mov mov mov insb lret sarl hlt aaa sbb fdiv xchg lahf lods les (bad) dec cwtl dec pop jecxz pop aad pop jne sbb xor outsl add bound (bad) fild xor inc jge outsb in adc mov mov and mov bound inc in xchg adc aaa les sub and ror or and lcall xor push mov sbb shr and or add insl fwait cmp cwtl or movsb mov ja ds in pop xchg loope jbe inc rorl repnz popa jae xchg jmp aad dec xchg fbld pusha sub xchg pop xor xchg faddl adc (bad) mov lds stos xor notb add ss dec dec add push sbb add xor and lea js jmp ja mov sub imul shll mov cmp enter nop and enter xchg cs mov lcall cmpsl (bad) push inc stc mov mov or aam jbe xor cmp xchg mov bound sub fiaddl cmp repnz cmp xchg inc xchg sub mov mov lret mov xchg xchg pop divl std test ss int mov loope mov push mov mov xchg rol dec push fldcw stos cltd adc mov aaa jbe fsubrl mov (bad) popf xchg cmp mov popf test pop dec addl xchg adc and fistpl rorb push ja cmc inc push and jbe add fstp push fmull sub (bad) out mov (bad) int pop inc cmp add add cmp lcall insb mov aad rcr adc push (bad) jp mov xor cld cmp inc fwait sarl lods lcall cmpsb xchg or lock clc inc mov jge lea insl idivl sbb insb clc cmp xor stos loopne mov into inc out push pop xorl jle or enter xor in ja fildl mov dec cmp (bad) fldl pop cmp push int jb cld gs (bad) and jl mov nopl imul loopne jmp xor inc add xlat adc scas push jmp xchg iret xor inc adc clc pop ret push (bad) pop daa xchg sub call in dec out sbb mov mov inc aas push mov xor in arpl into pop push outsb dec test xor and push xchg frstor mov lods dec cmc push (bad) xor pop lahf pusha rclb ljmp (bad) jmp or (bad) fisttpl incb jnp in icebp sti jecxz lds jno and dec or push lret imul jbe test clc into push movsb cmp movsb bnd movsl xor adc mov mov sbb js and ss xor mov jne push cmp in push add sub js lahf cli jns add fstps cli sbb scas (bad) icebp inc push mov jg fs lods and add inc scas jb pop test fwait cli or incl and in jnp lret cld ja add addr16 adc out lcall pusha jns sarb mov and xor jno mov add mov xor inc adc inc fildll jne xlat fimull jae (bad) int xchg pop dec xchg pop pop or add cmpl mov dec cmovnp jae mov stos fiadd imul (bad) loopne dec addl and arpl imul cs pusha and data16 in ret ret rclb hlt mov lods xchg pop (bad) push enter jae scas xchg cmp mov addr16 lahf pop cli or (bad) xchg test jno cwtl out out inc rcrl add push test test stos stos sub shrb fisttpl cmpsb popf out in pop sub mov loopne dec aaa fcomi test (bad) pop sub sub incb scas mov adc ljmp insb sub dec jge test rcl int3 in test dec jmp lret mov xchg (bad) sbb mov mov nop test lret insb (bad) lods int3 sbb (bad) jge dec outsb (bad) sbb bound mov jg mov fsubrs mov dec mov clc and or sti pop mov es cmp add push ret mov inc pop loop outsb and bnd jmp lret in sbb repnz and rclb cld jb xor mov mov cltd pop int jp xor cmp enter adcb cmovp pxor pop sbb push push test cmc test ljmp fild jp xchg into jmp dec jnp xlat int3 int3 loop ret dec ds sub jb mov rorl pop sub mov clc push mov xchg sbb or roll sahf inc mov int inc jno cmpsl and in movsl xor push pop and loope and ret jb (bad) jle push adc inc sbb lods out enter pop xor sti (bad) fcom mov and stos lahf enter movsl jge xlat and add fs mov jecxz xchg adc jo pop sarb xchg pop jbe mov cmpsl scas or dec xlat enter les add jnp sbb mov push mov mov cmp xlat popf cmp and out xorl neg cmp out loopne sbb or ret push mov ret test mov jbe cmp and mov add mov pop push mov sahf ss cmp insl outsb mov stc xor adc mov mov mov fstp idiv xchg out sbb or push push inc aaa aam mov sub dec ret outsb pop repnz mov mov ss lahf mov cmp mov ljmp (bad) jne push xor cld addr16 xor lea and jecxz jns xchg cltd add mov je jle pushf pop cltd mov popf xchg hlt es ss sub aaa pop lds js (bad) mov scas xchg adc (bad) jmp popf and xorl leave pop add sbb push mov (bad) sbb (bad) push xchg jnp xchg cltd xchg aas hlt dec pop and stc and jle,pt loop mov mov or lahf jae je pop (bad) (bad) or push out mov push sbb and inc hlt imul mov ljmp xor mov dec pop xchg enter lods sub cmp hlt push mov orl pop lret arpl je (bad) sub mov dec pop jmp cli push add cwtl setp fstl aas aaa (bad) jnp (bad) cmp jb stos jl leave in pop (bad) mov ja push syscall ss mov mov sub sub and mov mov sbb repnz test sbb xor stos test push jns xchg mov jo push inc pop cmp js jb cwtl insl jg movb loopne scas jp adc sti xchg mov outsb stc hlt fadd pusha mull mov (bad) and pop mulb add ret push xor add or movsl outsb dec jae std pop pop cld subb xchg int3 fldt mov insb jno scas inc xchg ljmp sub js mov gs arpl push adc inc orl rcll int fsts enter cmp inc lods xor dec mov or mov fcoms or and sub pop fcoml iret ja mov push push pusha iret inc sbb dec pop fsubrl inc cmc outsl lods xor shrl xchg push xchg push xchg das insb dec scas push nop mov into mov inc mov push xchg or pop pop fisttpll xor or sbb in push stos sahf jnp mov xchg je mov jnp lret in xor jns or int3 mov sbb inc sub rclb mov (bad) outsl xor js adc imul pop sbbl out (bad) and or bsf push sti lcall in div rorl lahf or xchg scas repnz rorl outsl outsl jb add ret in icebp fildl xlat int3 push inc test xor test out cld test lods daa cmp mov (bad) cwtl test jb mov mov xor out jns cmp lret add shl roll mov insb and mov pushf jl imul pop rcrl pop and jae push push stos cld (bad) sub adc (bad) jmp bound int3 insb cltd addr16 mov inc xchg test mov icebp les add je pop mov pusha out jno cmpsb inc dec mov inc mov imul sub popf lret jle fistpll sub imul xchg pop dec pop jle lret add in cmpsb mov add popa mov into inc imul pop pop sahf imul in pop (bad) divb xchg mov and mov leave fildl add lods fsincos inc mov push stos sbb mov pop les imul popf dec fsubl pushf or fsubs mov pop xchg mov mov in sbb insb (bad) jno inc push lea push incl in pop stc int3 mov nop mov xchg mov stc sarl pusha push fnstenv adc sub sub mov xchg fisttp sub sub ljmp js cld outsl mov (bad) adc div pushf jp xchg adc insb fildl adc fstp (bad) mov or jmp cmp loope arpl call es jle mov sub int sbb adc mov out fisttpl push pop adc sarb fldenv jb mov cltd xor cmc inc addl aam or (bad) mov jge fsubrs cmpsl cmpsl and sbb push xchg aas orb enter sbb std push insl adc repz mov test cmpsl leave sbb aam dec inc outsb add je das (bad) jae aam rcl (bad) popf test sbb ret push iret popa out xchg mov rol xor nop mov lret out in jne mov inc pop pop imul and or loop das insb das mov xor scas mov (bad) (bad) aaa cli imul mov lods clc or pop sub bound pushf leave (bad) lds out ret stos cld mov jecxz mov out pop lea sub dec es pop jmp mov enter adc xlat sub jns lods xchg cmp and xchg shr jbe in popf dec or imul mov test outsl sbb or stc cs push dec sub or fdivr mov mov mov out fstpl jno sti xlat mov or popf andl daa dec dec jg cwtl hlt ds cmc out jl and xor movl and scas cwtl ja xor mov mov arpl lret pop fstl repnz cmp push xchg xchg xchg and rcll repnz pop sahf ljmp mov jp jmp insl cmc cs push add and clc icebp dec int3 or mov dec leave mov xchg mov das insb push imul inc jae inc pop stc iret rorb scas cmp xchg dec xlat std xchg xchg inc das xor arpl test stos sahf ror dec xchg and das ss int (bad) lret adc daa inc add enter push sbb out cli jle cwtl rcrl inc lahf jno bnd xchg xchg push jge pop mov and xchg add push xchg dec and add jmp push and mov jmp sub fs add and push lcall jecxz pop (bad) sub mov call pushf (bad) pop xor push cmc sahf stos outsl les clc rol sbb movsb scas fcos cmpsb testl add cmpsl (bad) stos jg inc dec xor dec das dec pop or enter push insl mov and sahf dec ror je jp adc fidivl mov (bad) jl push inc and inc mull pop sar scas push and and ss popf xchg pop (bad) hlt ret add (bad) (bad) repz jle adc jb push test and movsl sbb cmp cmpsl mov xchg lds pop fldcw cmp shll dec shr fs imulb inc out aad lret inc fildl stos add add enter gs insb loope les hlt into pop out xorl into mov and lods mov or push out xor or cwtl fldt cs dec push and xchg divl push mov rorb repz shrb js inc adc adc and clc arpl jns rolb ja jle ds cmp inc inc sti and testb out std int3 bound push mov (bad) mov fsubs (bad) mov pop dec cmp inc fidivrl mov jmp (bad) fcomps and push push (bad) test decb test pop xlat jmp xchg faddl xchg add sbb add sbb or movsl sbb ljmp xorb (bad) dec pop pop inc in lret sbb out addr16 inc loope sarl ljmp pop and push repnz sahf sbb fadds inc jle or sbb fdivl xchg push xchg pop push fidivr sub mov out and cmp cmp cmpsl push cltd and cmp pop imul jge lea add lods push mov jno pushf cmpsl dec ret pop loopne aas mov xchg xor stc jp stc fdivs cmp loope mov outsl inc movsb out rolb ret pop jno,pn fbstp inc lea push xchg (bad) (bad) dec aad cmp popa xor mov dec inc test add xchg outsb movsb or movsb inc lock loope xor or or decb mov or sbb jns nop (bad) lret iret movb inc test pop jecxz imul or frstor xor mov add and push jne loope clc std xchg fwait scas loopne xor (bad) cmp cmpsl out cmp pop lcall ret fisttp lods push mov rcr fwait add push jge pop lea jle inc or pop mov xchg lock cmp dec ret xor rcrb (bad) jmp iret pop setbe xchg xor pushf jno xchg je (bad) mov mov fidivr in pop in rcrl dec xchg mov mov idivb fadd int3 pop ljmp and outsl mov (bad) xchg in bound pop sbb jl les insb and shrl cltd lahf int mov lret in pushf aad das mov frstpm(287 insl adc fwait add popa lds outsb cmovle jb mov pop push jg popf out outsl push cmp cwtl fcoml es lahf inc in xchg daa adc repz xlat or rcr leave xchg outsb or (bad) inc adc insb ds cmp mov pop inc sub imul mov pop pop xchg mov setae fisubr stos xchg xor pop pop call sub push sub jg sbb leave in (bad) jecxz frstor fdivp mov cltd stc push out aas or in inc js mov cld and jg mov mov dec jno xor negb lods data16 pop jge push sahf jp sti add cmp test ds inc mov sar cmpsl mov pop je xor fcoms in xor dec dec add sahf dec xchg in jmp mov fs cwtl mov arpl push movsb test cmpsb out sub push xor cmpl xchg pop lods mov xor out movsl int notl or mov (bad) jb ficom jno stos call cld iret dec pop jle pusha jbe cmp mov sbb xchg fldenv push mov sbb push adc pop jmp nop cltd dec repnz pop fs fst pop push dec and and xlat and sub cli mov cmpsb xchg pop into decb loop mov xor arpl jne mov shrl std je mov testl mov mov test aas pop pop test insb lcall (bad) mov scas add subb fldt leave cmp xchg (bad) xchg xor icebp rclb stc sub arpl mov inc fdivl pop ds inc mov inc js mov ja dec add fstp push sub xchg push mov cli jno inc inc add push and pop nop shlb pop add sahf sub xor lods lret test cli out adc push xchg outsb adc out in mov mov dec addr16 addl adc (bad) jbe add jne push daa add and cli fadd and mov jmp sbb repnz inc (bad) xchg scas repnz sysret out fdivr and adc mov sub lret enter pop lock cmc mov push jp imul inc out pop div stc add adc mov das dec (bad) lock cli clc cmp push mov insb mov dec fsubp cmp sbb or aas sub cmp mov cs (bad) push jmp add dec ret in shll jg cmpsb xlat lods pop lret ds jnp lock setae dec imul cmpsb sub imul and jo xchg mov je pop fwait xor mov stos gs fisttpl mov aas xchg xor jp stos bound inc lods or inc mov mov cli add insb cmp sbb fs scas cld jle lret jmp pop xchg pop dec mov mov test pusha adc test mov push xor pop mov pop jns icebp sbb mov mov adc out jmp lods lods adc inc xchg or aas sbb or sbb adcl fmul cld sub jge mov in iret (bad) mov fcomps stos repz pop pop in mov jae inc insl ret movsl jge sbb mov aaa ds lret mov jb mov in and or fs enter mov das imul std jecxz inc push mov out inc movsl push jmp movsl rcrl push out xchg ret ret or dec inc jmp cmp and inc insb cmp int3 cmp sbb mov jp pop mov add adc scas pop xor dec push mov popf cwtl jbe add jge mov int3 mov mov mov in cmp push inc pop sti push mov xor jle sahf xchg aam mov movb movsl nop or pop sbb jmp fist mov jl mov cmpsb jnp push and out xchg mov sarl mov add repnz pop add push mov es out dec (bad) outsb int3 (bad) out into in loop xchg (bad) fisubr rol daa pop inc ficom addr16 fs fild addr16 iret and cmpsl add hlt loop imul mov test and xchg mov sub sbb pop idivb xchg dec jmp pop jne ds mov sbb adc fcom or loop,pt sbb jmp xchg cmc popa mov in sub fistl pushf add xchg out adcb dec mov test xor and test fadds mov mov mov repnz dec les das nop lahf pop (bad) (bad) int3 lahf mov (bad) out sub fisttpl out insl push or outsb pop out pushf mov dec in push pop sbb mov in pop jmp xchg jae (bad) jbe enter push dec cmp add pop xchg add add mov bound ss outsb lret xchg mov leave es aam mov stos xor push push ficomp mov or xchg cmc test push (bad) iret outsl dec pop pushf sub aas test outsl adc shlb mov fsubrl push sti ds (bad) mov mov test adc incb inc lods in mov dec inc dec arpl in outsl mov inc cltd cltd inc lret xchg test xchg in mov fwait out into lods int3 ret inc lods (bad) mov (bad) jne sub (bad) movsb or inc stos rolb add ror pop shrb sub push stos cmp fstpt les movsb pop andb das scas sub pop push cmp pop sbb ror out js in fbld (bad) dec mov mov fs pop scas jo mov icebp mov ds mov sub mov (bad) frstor aad popf lret cmp sbb pop aad mov pop inc or xchg sub jg aaa adc or pusha int push pop cmc or and mov lret lea daa sbb cmp jo mov push ret outsl inc add sub inc jnp pushf mov push inc (bad) jmp fxch mov insl test mov jecxz rolb out dec aam popf mov dec je,pn jecxz mov nop pusha inc pop dec test enter mov in sahf ret pop inc (bad) mov xchg shrl sbb mov out inc adc (bad) in in xor adc test xchg iret cmp fstl in xchg mov push inc vmovhps (bad) xchg (bad) rcrb (bad) jne xchg mov mov shrb inc leave sub ret and dec js or rorl add adc push mov mov repnz mov sbb mov pushf inc fsubrl mov xchg or sbb jp push andl ret mov jl mov movsb mov imul (bad) xor mov dec sub sbb stc movl pop popa iret out lods cs cltd push popa divl in adc push xchg mov xor push sub push adc fistl out les (bad) sbb in push repz or mov fs xor lods adc mov pop repnz add sbb lahf cmp sbb in add repnz xor pop mov imul push cmpl inc sub pop aad notl mov xchg add sub push xlat dec inc fsub xor fsubl mov das out (bad) orb nop push popf or movsb push outsb or xor and pop xchg rcll arpl add sub adc arpl test fdivs push and rorl das cmp fcompl or cmpb sub rcrb inc mov fcoml sbb nop pop mov mov or aas xlat pop push lock push fcom mov test cmp repz xchg dec rcrl cld push mov jl and inc cmp test or adc jecxz ret sub enter jne add movsl idivl dec outsb mov fild cli sub or dec std (bad) push gs adc mov hlt imul pop loope in xor ss fisubl cmpsb sub sub loope test and xlat mov or jg sbb pop xor enter mov imul mul rorb push movsl aam cmp sahf or out shll or jle mov push and hlt (bad) jge xor das imul test cmpsb mov pop aam mov pop loop mov int ficompl cmp xchg int3 pop cmpsb (bad) sbb xlat adcl jle sbb inc mov add dec rcrb jb das inc scas es daa test cmpsl out mov les adc fisttpll pop push out dec pushf mov mov adc shlb sarb pop xchg jmp jp hlt mov jno clc pop ret and push (bad) xchg das lods test dec jle (bad) pop daa mov push cmp xor adc push xchg scas push inc test push stos adc (bad) inc pop pop fcmovnbe scas mov and pushf repnz jnp (bad) repz scas imul (bad) mov adc sbb out cmp sub pcmpgtw test stos repz mov clc sar dec mov outsl shrl das jno sub mov mov icebp mov add (bad) repz imul jne sbb jnp xor test popa les xlat dec mov mov mov mov xchg mov or clc inc jp ljmp pop sbb rcll cmpsb cwtl inc scas xor xor push adc xchg loopne mov out (bad) mov out pop sub aas push in push movsb mov movsl mov in adc push mov xor and sub jmp or sbb cwtl neg lock sbb sub movsl add xlat sub ds or push out sub leave xor xchg stc push stos mov jecxz test jmp pop (bad) out push repz sbb test stc scas ljmp inc mov das jnp jb jle aas cwtl xchg push sarb jp popf aas pop rcrb pushf loope lcall sahf iret dec jmp iret jg sub outsl ss mov rcll dec jne cmp lret dec and pop andl add inc stos xchg in imul pop ret push mov gs sbb test mov hlt ret aaa inc add pop cwtl sub int into or jo in xchg out scas xor call mov sysret mov push cmp sbb je iret sub push xor int3 add inc mov out add inc lds test loope pop test mov fisttpl dec inc loopne out sub push sub mov push (bad) nop inc xchg jne jmp sub inc in pop or (bad) dec dec lahf jg,pn jecxz and jae xchg rclb cmp ja out xor test and mov (bad) cmc inc jg nop aad js daa sub incb mov and inc pop xchg mov insl cmp bound fldl into insl adc divb push pop cld cmp xor pop add jae (bad) xor fs xchg fistpl or push rcr push push (bad) mov test mov stos xchg insl pop push xchg push arpl jbe aam xchg cld dec mov arpl ret pop into dec push mov mov push pop mov scas sti aaa cmc dec xchg dec sub xor lds int3 repz lock pop pusha and popl popa sub test out dec aas imul enter fwait aas das lcall mov dec mov test pop inc xorl sarb xor sub int3 jbe jns cs out insl stc dec aam ja jl pushf xor pop dec insl (bad) push mov lcall inc lods out aam scas lea scas int inc pop jge and push dec lret mov xchg xor es xlat adcb ds into mov inc cs cmpsl xor clc and pop dec pop push (bad) and jmp lret into fld je mov pop or push mov les fistpl add inc out inc push or pop test clc fsubl fs mov cs stos ret stc xor (bad) (bad) lock enter popa sbb data16 jb mov into (bad) into (bad) push adc cld xchg or jg push fistp fwait movsb popf jp sti sbb insb movb pushf stos adc outsb inc jmp xchg pop cmp cwtl or imulb push imul push adc xor leave push jg rcr push in daa stos repnz cmp pop dec and pop (bad) iret test jg adc pushf pusha fwait fwait mov mov mov dec dec sub cmpsb mov or sub into jb fwait ret out fcoms mov into stos sti stc add xchg adc add sub repz add into xchg mov and sub iret daa daa pop test mov jae mov fcomps and cli push mov (bad) sti shrb pop pop mov sub aam fwait push rolb cmpsl in fxch (bad) mov or push mov mov das mov imul ror fs push aad inc xchg add out js jb dec inc pop fwait cmp lods push pop cmp lock into pop pop ret fdivrs jae lret (bad) arpl cwtl scas or out mov sahf push orl adc shl addl lock int adc out and xchg int sub std mov mov cmp jns cltd (bad) cmp fstpl leave xor mov push jge (bad) adc nop test dec jbe (bad) xor xor dec stc inc xor mov testb (bad) addr16 jl or call hlt add lock fsubs dec mov lcall fstp enter mov pop (bad) cmp pushf cmc daa xchg mov les stos mov xor and dec mov std clc stos or aas lods pop (bad) mov jge sbb mov cmpsl out mov lea xor std hlt pop and sbb jg jno push sub mov imul out mov push (bad) or cmp out imul scas ficoml push and mov hlt xor cmp xor inc addl ret int sbb shrb loope in dec loopne xor jae loop lcall fcompl mov fdivrl dec insl cld cmpsl (bad) push clc je cmp gs and repnz aad mov pop jecxz push sub push cwtl sub enter push icebp and out jbe test cli or fdivl out jbe sub adc mov xor sub jecxz int pop clc jecxz inc jae lahf nop add mov rorl adc jl and mov add hlt lret or and dec and cmc int3 push pop dec or push icebp push cld scas mov push sub adc lea pop adc jne jno xor and adc sar jl test ds or mov sbb fnop stos push out lods push mov mov cmp stc (bad) push dec inc jl sbb add test (bad) (bad) dec and inc push jns subb ds and cmc ret jge leave jg rcrl out lods mov push gs xchg nop inc into adc in jno mov sub mov mov test mov inc cli jmp rclb sub mov adc ss mov pop mov repz fcmovnbe fisub call jae pop push scas dec stos mov ljmp jg cmp xor or (bad) imul xchg or inc test fstl jg ja (bad) ret mov (bad) mov popa inc cmp push scas push aam leave sub mov loopne ret and gs mov xor rcrl ror cmp test xchg test std rorb jae aaa ljmp scas rcrl jae (bad) dec rclb pop lods int3 js mov add rcrl pop les cmp adc adc out sbb cmc xor cmpl mov jnp dec xor fmull fistl pop jmp push mov jns xchg or and outsb mov cli scas xchg mov adc faddp mov inc pop daa in pusha lds xor cwtl cmp jne push cmp and scas jb inc pop sbb xlat xchg test rcr push mov push inc sti std cmp imul pushf or je rcrl mov ja sbb adc dec leave cmp xchg aam add mov jb loopne or in sub or rcr jo (bad) (bad) or pop sti bound popf push or inc sub out adc cmpsb movsb loop lods adc js les add xchg cmp mov testl inc in sub inc jg loope xor lods mov sub lds mov sub push hlt add and dec xchg popa les fistp aam xchg lock mov mov mov add add out test into xchg aad stc mov xchg inc or addw clc xchg jg jp xchg inc or inc in lret mov daa jge sub std mov stc fcomp dec adc sar add sbb into (bad) jo jns adc dec enterw or fidivl (bad) dec mov scas sub imul push mov dec (bad) sbb and subb pop sahf mov mov xchg call cmp jecxz push dec addr16 add mov sbbl fisubr inc add ds or pusha (bad) repnz pop jo dec mov inc out xor jbe push std call fstl mov leave mov inc pop dec pusha cmp dec mov xchg adc push cwtl aam iret add mov inc leave pop add sbb inc loope test je mov and cmp fsts cld inc or push aam sbb add mov xchg adc outsl loopne pop imul jnp cmp in mov push xchg sub inc push jb loope push ds push dec js jmp lret insl imul cmp push clc mov xor and dec add xor dec mov (bad) loopne xchg rclb adc (bad) jmp nop int push adc fsubrl cmpsl cmp movl cmp dec jl outsl lret adc cmp and or hlt (bad) mov and out icebp push push imul jne pop insl add pushf xorb test xchg xor (bad) int shrl sub addr16 mov mov or cmp xor adc xchg pop daa mov jns inc and aas dec icebp popa sbb mov and push push or sub push adc push scas arpl inc aam mull shrd ljmp xor lcall lea cltd and icebp dec out mov bound aad push or rorb scas call ss xor pushf mov dec ret xchg pop addr16 repz ds and sbbl sbb cmpsl mov push out jb rcrb pop push in mov mov sahf loope ljmp cmp and cmc cld cmp div movsb ss inc pop inc je xor xor lret push adc sub das xchg cld inc addr16 adc push sbb jecxz or pop mov out ret cmp jbe pop int3 mov pop stos in pop xchg adc aam dec aaa int3 ss xor lods xor leave lcall push (bad) hlt and fisttpll inc push loop psubb sbb push aad imul mov fbld cld aaa shlb and mov lret push ret jns inc mov sbb in mov test mov imull pop stc hlt jo int3 or jo push loop lahf push fistpl or cli mov das jnp pop add mov jo mov pop dec mov int3 (bad) sub or add sbb push repnz cmpl mov pushf scas lahf or mov lods imul js push scas fcoml lods xchg cmpsb mov daa inc (bad) aas leave sbb fnstcw mov mov cs dec mov fcoml mov mov jae inc leave loop inc and (bad) cmc pop or mov jp sub jmp push mov inc dec pop jmp fmuls push cwtl sbb and rcrl cmp push (bad) mov adc push inc adc mov mov or jno xor inc mov add mov lahf mov shlb fmulp outsl scas out stc (bad) lods aaa jle movsl jecxz sahf pop lock ljmp daa sbb jne icebp insb ljmp shll jmp std stos xor (bad) push test cmp daa jp mov sub lret ss adc lds mov pop jno push adc rclb xor bound push gs sub dec or lods js fdivrl push in ret xchg pusha mov pop jb mov test xchg (bad) in lds pop xchg aad sub and xor out sub xchg adc add push pop fstps mov adc push sbb cld std add ss xchg in jno jp lds or shrb mov out push adc les lods rclb and fimul std cmpsl jns pushf je int (bad) xchg outsl add mov xchg jno into test in fiadd cmp in push sbb jp inc jg ret pop in and sahf jp or xchg repz jne dec sub adc xor push fwait pop int3 jae adc mov data16 xchg cmp dec sub sbb ret and push add or dec add imul mov repnz jnp lock xchg add mov xchg inc outsb out lds dec or xor aas je in (bad) cs rclb mov lahf ret mov fdivrs mov mov sbb in test mov cwtl mov (bad) aaa (bad) ficompl mov and test (bad) dec pop rcr loope ret adc ret call cmpsb lret xchg sub ss mov lret movsb inc std jmp and andl jae dec aas push rcrl clc xchg and lods lds ret mov push push or das rclb mov and lret sti aad mov in mov sbb lea dec adc sub pop movsb out subl lods xchg and push add sbbl xor dec add xchg xchg gs xchg aam sti sub pop lret mov leave ret out (bad) int3 push xor or test insb fistl and mov cmpsb in adc leave xor mov cmpsl mov mov xchg outsb jle lret jmp cmp dec int3 inc pusha xor jl lock ljmp mov dec pop sbb mov mov jp or push inc pop pop pop push sbb lret jb push iret mov cmc dec cmc stos sub enter mov xor scas push rcll shll xchg mov mov and xchg mov insb adc push dec es sahf inc jecxz sbb inc inc dec faddp in push pop test dec fldt pushf push jne cltd jecxz outsl roll fcoml ss jns stc xor mov bound aaa pop es enter outsb add push ljmp cmc in mov cmc sbb stos push xor lahf setno or (bad) jmp and fdivl sub aad shl stos (bad) lret das cmp xor pop out inc (bad) jl aas pop aaa inc andl cmp aaa iret xchg shlb adc adc fildll (bad) daa xor adc add cmpsb sub out adc push mov adc rcrl or lahf xor mov inc xchg push fisubrl notl lds lods sarw push jns (bad) mov mov mov ud1 push mov inc (bad) mov or (bad) insb pop pop add rcl fnstenv nop push outsl or push or mov mov stos mov (bad) popf inc lahf dec push ret add pop out dec pop sub das stc or or (bad) cmp pop pop sbb fnstsw adc nop pushf or (bad) sub fwait roll pop rcl fdivrs insl loop inc sub fiaddl cmp (bad) cltd add inc xchg dec push hlt lret mov xor or push xchg (bad) lret add aas cltd inc pop adc xchg sub shr dec or inc fucomi leave in mov loopne cmpsb pop inc rcrb cs adc xchg dec aam fbld loope xchg mov sub dec add pop dec xchg push pusha push sbb xlat adc jecxz ret fldenv (bad) mov xchg pop in lock daa push inc fsub push ljmp test lret (bad) cli inc push ret outsb cmpsl test bound xchg addps mov mov pop aad adc mov and cwtl inc aam jl pop pop dec pushf iret lds fbld das mov push mov in lahf xchg pop xchg incl jge inc insl inc cli jecxz xor add repz add fisubl cltd mov cmp push add push mov out xchg addr16 mov inc sub inc pop cs negl add xor int inc push lret jae mov lods sub (bad) xlat cmc rcrl xchg cmp mov and or popa xchg add jns mov addr16 cmpsl mov jmp sbb in cmp push out fdivrs call push inc push in in cmp movsl icebp mov bswap mov test pextrw cmp or inc fs push jbe cmp mov imul push imul and mov xor sub in xor add imul test (bad) mov enter dec inc movsl fcompl or sti fs lods and sbbl dec xor pop cs adc psllw subb inc add push dec jl jmp (bad) and adc adc popf sub jl out movsl push jl adc push mov dec dec cli push mov dec jmp mov mov fstl lret jmp mov insl aaa add idivb xlat sbb mov pop test out mov inc inc mov mov inc mov mov cmp mov out pop adc adc cmp mov jb (bad) cmpsl das lcall xchg adc outsl jle add jmp cltd inc lcall push aad pushf mov pop scas dec sub mov push out cmp int3 ss (bad) mov and sbbl sbb fldenv add pop pop cmp xor out fwait mull pop push es fildl dec pop sbb popf imul mov inc mov jae jbe es jecxz push imul jle fldenv add pop out cld fisub mov addr16 hlt movsb push add push ljmp adc outsb inc add ret xchg arpl mov mov addr16 push xchg dec fisub pop aas dec inc xchg je sbb ss mov jae jne push mov xchg or ljmp fisubl (bad) mov sahf inc mov pushf push mov out into push stos cmpsb mov (bad) mov loopne and pop dec cwtl fldl sbb lret imul inc jl xlat inc mov adc pop arpl icebp ret push rcrb pop jmp in (bad) fwait add lcall mov xor hlt push or out adc rolb jmp lods sbb loope mov js and jb lahf movsl add jae sahf xor sbb pop enter aaa push sti fisub cmp sub insb mov sbb xchg push jg dec js adc push cmp mov nop mov aaa jecxz mov or stc pusha (bad) dec push cmp and lret stos mov mov sti addb das mov loope orl repz test test cltd inc jo ret cmp pop xor addr16 mov (bad) out jle popa pop push xor lds and pop imul mov or icebp cli push mov (bad) sub mov xchg jb fcmovu out lret out hlt loopne aaa xchg stos inc addr16 cmpb fwait dec shrl add js xchg jmp adc mov out cli mov push (bad) or cmpsb lahf cltd jecxz enter loope in js jo inc (bad) imul cmp cwtl push ret jge pop loope mov fnstcw out mov sbb lods in xor mov lods daa push xor push repnz sbb mov dec out gs and gs ljmp sarl dec jmp mov inc adc jo dec adc mov (bad) lcall pusha xchg sub sub sbb loop (bad) pop insl pop (bad) mov (bad) lock rolb lahf pop movsl xor sbb inc jno in sub jmp inc push inc mov mov into dec pop imul ljmp mov mov arpl popa push push cmp ja insl fimul popa adc ds shll inc movsl gs mov mov sbb sbb jnp cmp rolb mov or stos and xor jl je cli xchg sbb sbb or jmp jmp out fild pop cld add imul iret cwtl sbb in jne pop sbb pop jbe xchg push push jne cltd sub xchg dec out or mov pop fimull sub cs and sbb jmp inc mov add push loopne pop adc mov gs jbe stc subb int jnp xchg adc mov lea fwait jl or cmp pop mov shrb dec iret xchg sbb popf js fwait nop jb or cmp outsl jb clc xor mov test jns push xchg cmp sti dec sti xchg mov xchg imul pushf iret mov (bad) imul cmp mov outsl fs outsl insb aam (bad) cli daa mov cli ret mov std push insl mov mov lods out adc push xor sub test pop bound inc inc dec cs inc fistpll cmp push mov cltd add add pop out pop outsb (bad) loopne cmp sub pop in push gs jle mov dec pop xor arpl push and adc in sbb and aaa enter lods inc inc cmp sbb fild xor test sub inc fidivrl lods mov xor (bad) ret rcrb push jae xchg sub push arpl inc test mov mov mov out or pop lea sub (bad) fisubrl les sub mov repnz or mov repnz jo (bad) clc sbb repnz (bad) xchg stc sahf jbe ret cmpsb jbe scas bound dec icebp mov rolb xchg cmp xor inc call leave imul push xor mov xor in (bad) ljmp push or jge mov mov aad fs insl adc mov cmp (bad) cmpsl adc jne loop jno call lret or pop mov imul lret cmp sbb out mov jle push or mov das mov push jbe subb add insb popa or cmp outsl insl jmp ffreep call fldl cld mov mov fiaddl enter or push pop sub mov out sahf movsb cmpsl jb andb sarb xor lods outsb push addr16 inc and jmp mov fidivl inc (bad) jo stc mov int in daa xor test add sti or idivb imul stos push insb mov sub inc jl cmp scas cltd xchg adc jo sbb cli push dec add std insl pushf loop push imulb mov ss mov outsb rcrl in jns subl dec add loop fs scas inc adc dec adc adc push adc mov push stos mov lcall leave mov notb data16 faddl ljmp cld mov pop call add pop (bad) adc cs hlt popa aam cmpsl loope jp or insb lods bound pop sbb cmp or stos (bad) out and out les ds sbb lea das push daa pop pop or xlat mov pusha mov or lods pop xchg mov (bad) dec and push mov xchg ljmp (bad) push jbe and and roll sbb push inc dec sub aam ret xchg mov sbb add pop push jl pop pop xlat or or aam mov lods sub (bad) jnp dec andl and out dec incl (bad) sbb popa or mov repz aas pop or mov shll and pop lods leave dec icebp imulb push lahf push decl (bad) cvtps2pi add mov jge push mov push or arpl jbe mov xchg out rcl out mov lcall jl xlat mov lods pop lahf push jno inc test jnp ret or pop test or fbld fucom icebp (bad) cmpsl mov mov add cmp inc sub push fnsave scas mov add mov and dec loope int adc xor out (bad) repz sub dec fdiv inc sbb dec cmp outsb rcl icebp mov pop (bad) jecxz mov ficompl inc sub sti aas sbbl je push mov outsb popf outsb pop shlb test dec gs fisubrl xlat repnz pop les mov jae xchg push out fcoml cmp pop (bad) or inc pop mov fyl2xp1 mov fwait cmc in in adc xlat adc clc stos or jbe inc mov and shll cli fcmovb xchg pop push add ja bound jne fadds xchg adc es insb aaa loope pop fmul mulb das xchg (bad) ja jb shrl xor dec mov cmp out mov add xchg dec sub neg or and push loope (bad) jmp push push sahf add and popa push push aam jo int popa cmp nop mov jp inc lea mov inc pusha int in lods jge ljmp mov jno clc xchg (bad) push cld or inc mov fcoml cld sbb push loop int stos (bad) adc xor sbb mov and les sbb cmpl stos cmpsl and xor addl ljmp cltd in cmp or js rorl xchg jae,pt or pusha addr16 into out cvtps2pi leave jg dec ss mov pop inc leave add dec inc lahf stos cmc push jl fsub inc imul lods nop xchg lds pop je scas aas jae stos in insl insb inc adc mov sbb lods and pushf hlt sub shrb adc js lods out dec fdivrl scas jle mov jmp outsb das outsl pop mov dec jp cltd lods into jg pop mov dec or inc mov insb cmp mov mov adc jge loope pop or jmp adc dec imul int mov popa mov adc jbe xchg push lock cmc imul push cmpsl and shrl pop (bad) cmp push gs sub mov sub bound sub xchg push das ror lret push mov scas shl jmp push ljmp cs int3 jmp js lcall xchg dec cmovb rclb lahf pop xchg and push inc push test cs mov inc add pop push leave xchg xchg ss push es and pop pop (bad) sbb es xchg stos shrb iret in lods bound fisttpl cmp es jnp jnp and xlat test fwait daa aad imulb add mov pop outsb inc fwait call inc and lahf mov cmp or sbb mov loop jge mov push mov call sub pop (bad) sti sub sti sub movsl add mov mov xchg imul push or xor movsb mov fildl xchg jb lret nop movsl xchg lret aaa push pop jmp jo xchg das cmpsb imul sbb scas sbb repz in adc adc fsubrl push push pusha jp dec push loopne negl fwait sub xor dec jp ror lahf push fidivr in adc test pusha lds test repz sbb pop pop dec lds mov jne sbb push fwait mov cmp loop mov adc push das out xor rolb push shrl (bad) xor scas dec inc xchg xchg cltd inc inc mov or mov cmpsb xchg imul xor das or pusha rcll fldcw sti mov test (bad) loopne rclb and mov gs clc bnd cmpsl stc cmc clc sti or inc and test jo xlat insl jge mov pop pushf lret and int3 das lea pop cmpsb mov jb movsl in out mov push repnz movsb jp ja in popa push push je dec ljmp and dec jg fcoms push aam insb pusha inc inc sahf ret pop push repnz (bad) pop push xchg cmc aas mov cmp cmp dec cwtl movsb or cmp hlt std push aad test dec jno dec int3 pop fisub fbstp cmp adc outsb pop xor imulb inc loope and dec lcall lods mov adc clc test in (bad) mov and and xchg repnz lea out test ljmp and jge dec mov (bad) push repnz lea mov jg lods push cmp imul jno mov stos out mov loop push push imul out dec mov jbe setbe adc mov mov mov pushf sarb mov repnz xlat testb cmpsb adc lahf push lcall sbb mov fimull pop outsl xchg push xchg fsubs nop xchg mov (bad) cmp mov adcl mov xchg (bad) or pop lret and int3 mov dec dec je xor scas test and es inc out outsb cmp sub in adc sub pop or movb stc xchg and fdivl hlt ret int3 sub dec sbb xor std repnz ret je int ljmp or sbb test adc sti lock xchg mov pushl mov scas fmull test or sbb adc mov mov ret iret (bad) in mov or (bad) mov std lahf or dec add xchg mov (bad) aas mov sub int je stc imul cmp dec pop cmp sarl mov push pop push std adc push mov inc xchg inc mov pop jecxz mov cwtl cltd or push test cs test lea bound outsl mov xchg je sub push inc incl cmp mov scas incb inc lahf mov mov imul stc fcmovu xchg call sub loope sub rorl pop sarb jecxz (bad) sahf pop or adc sbb arpl cs jmp pop fdivrp fdivl pop lds push push adcl xchg dec xor outsl mov int push sub loope or jmp cmp xchg out les out leave in and xlat pop mulb sbb sbb push pop add repz mov aas push pop dec push xchg rcl lret push jmp nop adc repz xor js add repnz lods mov pop imull (bad) pop rcll sbb cltd and inc in mov fcoms xchg scas pop pop enter xor fcmovnb push push xor enter xor lods std cmp aas cmp sub aas cli scas loope sub pop stos cmpsb mov ja rolb mov and mov pop movsl cmp aad dec jo add cmpsl (bad) loop lahf jno mov xor pop gs loope sbbb cli inc (bad) jnp ret xchg sbb and pop pop add cmpsl cmp test das test daa test xor adc lds iret or dec pslld movsl push popf int3 mov aad aam lock jbe nop or loop dec popa int cmp push aad adc stos jae jg xor shll lret add xor push cmpsl mov jle test insb lods mov dec add jecxz mov pop mov push push rcll fs xchg (bad) push xchg add lock sahf ljmp inc inc out lret loope arpl (bad) pop mov into int3 mov insb je je mov mov sub mov in shr (bad) (bad) mul nop cmpl in xchg in push or mov in cmp stos (bad) insl sbb jg xchg nop xchg push testb cmpsb ja mov adc ljmp push add in sub mov xchg mov dec cmp sbb jle xor inc insb pusha mov lods jge mov xorb cmp pop lock push ror fwait imulb add repnz es pop out sbb inc mov (bad) loop dec cmc xchg rorl ror jmp push adc int nop push adc add mov fcomp add push dec sbb push dec jge sti and outsl xchg and or mov jecxz jl jecxz pop adc stos fimul pop push insl xor and scas and push and mov xor jne push mov jmp xchg lock stc jne aad lods (bad) ljmp daa add adc test push addr16 aaa jecxz inc pop cmp stos hlt add or test pop push (bad) outsl in inc (bad) add fwait stc mov pop loopne pop cmpsl inc or or pop sbb testb mov rcrl add mov pop jmp loopne jecxz xchg aas (bad) roll ja popf xchg push dec test repz leave lret sbb (bad) jnp ss or mov xchg xor adc sbb jne xlat push cltd sti mov fnsave stos jmp out aaa pop mov mov mov in sarb icebp mov adc inc pop sbb mov add jbe cmp xor gs jge mov (bad) mov sarb out push inc lahf cli loope jb popa cli jecxz jno out add jp push das rolb outsb or fwait lret add dec bound (bad) (bad) icebp in or lahf fwait into (bad) ss add icebp jle inc nop pop ret (bad) mov xor out div imul flds cmp (bad) jl iret call push (bad) enter ljmp ret int3 mov es fiadd into insl dec dec ja and sbb cld xchg sbb push (bad) iret add mov pop stc pop scas push push jge ficomp pop imul cli in push ret (bad) (bad) or lret jb push lea iret dec dec fldt out sub cmp and sti cmpsl ds mov fcoml imul in fisubr out fs mov sub dec push pop mov fisttp pop dec movsb mov mov inc adc mov xchg cmpsl out mov pop lods xchg pop into jp xadd sbb push pop mov hlt js in test mov mov mov sub shll inc mov jne add dec sub push dec inc fnstsw stos xlat lret mov xor sbb add push sub mov cmp or mov leave lock cmc sub movb sbb push into sbb out dec dec mov xchg dec test or lods dec aam inc in lahf jl or out sbb inc fnsetpm(287 mov or (bad) jnp mov push insl insl out mov pusha lret cmp mov dec add insb cmp inc iret sbb inc insl cmc jns,pt loop add cmp push mov movsl add fs sbb nop mov jae in jle sti dec or cltd fild nop sbb scas popf pop int3 add lret out data16 cmc aam popf test (bad) cmp sbb xchg fbld xchg mov jns add push pop aad sbb insl mov cmc mov (bad) adc dec in cld jge cmp stos mov or std stos adc sbb or and xlat adc inc xchg pop clc mov lods pop cmp popa xchg dec xchg mov dec dec ret inc ja xor or popf enter ret adc cvtps2pi sub orl sbb or xor jo outsl cmp push jl lcall shll jb xor push sti jecxz pop and in jle sub loopne mov sbb mov insl adc les jp jmp mov (bad) push mov sub jl sub mov loopne and je outsb repnz cmp jmp mov (bad) (bad) cs mov ljmp jle iret in jecxz xchg aad es xchg or adc push xor and je iret fwait sarl cmp jge adc insb test or adc sbb loopne push loop fidivl pusha jo out (bad) jno das cmp popf insb cwtl dec shrl add adc sub cmp push or lods jmp loopne sub add dec shlb (bad) lret dec daa mov (bad) pop loope,pn sbb sub xchg aas xchg mov out inc xchg rep inc mov lcall (bad) rclb lods stos sbb dec cld pusha out mov dec movsl (bad) lods xor mov jno ljmp in je push pop dec dec push in inc repnz adc jmp les data16 into sbb (bad) movl jae dec xchg les or into jmp gs dec cli sub cmpsb lea ljmp push jp lods pop push insl xchg jns imul xor pop call aad idivl inc jp fisub pop (bad) rclb pop les or in cli (bad) fwait and cmp cmp inc aam sub js and into shrb adc out ljmp pop ret in lds push sub int3 fcom sti sar (bad) leave adc out xor cli xchg mov lret jb push jns or mov xchg std rcll adc lret adc push fsub jo nop cmp jle sub and popa inc (bad) cs push xor es or mov dec stc fwait sub mov (bad) shrb ret fstpt cmp (bad) loope add std xchg pusha mov sub or jg daa movsb dec arpl bound xchg ficom outsl andl xchg push pushf cs daa les inc mov jg loop fcoms cmp sahf xchg in mov jbe sub std lea (bad) dec sub xor sahf pop in les pushf loop jge sub hlt (bad) mov loopne aad popa inc jo hlt inc and jae xlat fmull jg repnz inc add imul dec scas repz push shlb shlb and mov outsb mov fcomp mov cmpsl and sahf and mov inc mov mov mov into (bad) cli add dec sub aam dec mov adc pop pop mov jle cmp sub ret sub pop pushf xor and sahf add ret in or jnp out int3 cmp cmp adc pop push movsb fisubrl mov (bad) and jp pusha je loop (bad) repz sbb pop dec in out pop inc lcall std les in adc cld cs mov in fcmovne jmp shl pop fldcw sbb ja or aaa in cmp adc or in sbb scas sbb mov cmc or stc mov pop sti shr adc cmp cmp inc sub lcall or add lahf sub xor add xchg or dec repnz mov movsb std test jecxz inc adc fistp fdivs jae pusha imul mov mov xchg cwtl aas mov sar mov pop enter fs cli cmp xchg lcall bound icebp add scas mov sti imul (bad) pop adc outsb mov loop mov sti push and sbb mov cmc inc lds out out cmp outsb (bad) inc scas (bad) notl dec dec mov ret push or dec je jnp inc (bad) sbb and inc or push mov xchg and add ffree enter icebp adc cld out adcl ss sbbl repnz std mov stos in (bad) into js jne or mov inc aad add sbb cli sub xchg dec lcall fs dec andl xor repz das push sub sbb clc push cmpsb fs std scas addl adc dec pushf aaa inc cmp mov mov daa out inc outsb (bad) pop addr16 and sub mov (bad) je sahf in (bad) add jns cltd jmp sub out fildll push jbe into xchg sbb sub dec adc mov cmpsb inc mov jecxz mov sbb xchg gs outsb cli push aas jne cltd jne imul pop imulb sub xchg cmc push lods jnp outsb cmp dec sbbb (bad) xor jo es fwait rcrl leave ds add (bad) repz data16 xchg push mov mov pop cli mov push dec or lret sbb sub aas iret lods jmp repz call (bad) and test push ss fsubs outsb es popa dec sbb cs iret fcomps mov xor test ljmp pop lahf push cwtl pop lods push js adc dec mov mov pop jnp push xor into adc adc inc mov sub sub hlt jbe scas (bad) cwtl push loope loopne pop sbb inc out push or pop jg fcmovu xor js sub (bad) je pushf cld icebp add xchg push pop adc mov xor test les xchg jo sbb sub pop dec pop add repnz orb xlat pop sbb cmp sbb mov cltd xchg leave lods sub daa stos xchg or adc insb dec adc imul (bad) cltd push adc loop insb mov in and xor out push mov xor fisubr aam lods (bad) in dec (bad) pop lret fstpt adc inc std rolb dec pop rol (bad) ds call test jg and rorb pop jge push xchg (bad) inc push dec pop js mov cmp xor ds xor pop lods data16 push dec out adc ficompl (bad) xchg in jg clc test pop pop sarb and imul and mov adc sahf lret ret mov (bad) bt loope ret out mov in int3 or pushf (bad) bound fdivs scas lret dec je xor mov xchg jge adc mov pop and jbe repz pop jne or push lods dec imul popf jae test jmp jp dec and sarb push jbe data16 ljmp int jl fmull sar push add call popf mov in fsts and es insb cmp mov leave fildll sarl loopne pop scas sbb mov dec push (bad) das xchg es lret and mov std repz cwtl inc insl sti idivl movsb xor call popa hlt ret inc pusha xchg lcall jb rorb cmp sbb jnp mov pop add jge gs insl fisttpll fisub push movsl movsb and lods jp,pt cld xchg testb pop xor mov inc loope ret xchg jno dec xor into mov fmuls mov xchg out push mov (bad) repz lock insl decb jmpw mov stos fidivrl fdivs addr16 aam sbb lcall dec cmp daa lods or cmp push pop sub es (bad) mov cs push fcompl fs mov (bad) adc rcr pop xchg enter and lds ja gs cmp inc pop out and insb movsl add adc cmp adc jne test push cs pop jge push clc adc decb repnz in push push or pop dec test inc pop push jns mov mov push scas sbb rcl sti movsb xchg dec add mov addl lret (bad) adc cli pusha ljmp ret clc xchg (bad) out adc lret push sbb or scas fdivrs cmpsb stos data16 add mov sbb cli std test into gs cmp xor ljmp arpl xchg in sub sub add rcrb sbb xor jb idivb scas mov add js cmp call mov sub and add mov cmp mov (bad) sbb insb lds mov mov sub jge fdivrs xchg lock stc shlb xor mov into mov (bad) xchg or movsl cmpsb es fs mov cmp cmpsl xchg shl sub mov mov xchg mov xor xchg jge or and in add push fwait cli sub nopl loop and fsubrs cmp notl pop loop nop enter cmpsl dec jg inc jmp outsb loopne ret popa movsb inc nop cli or push js mov sbb xchg adc or mov sbb loope js mov lds xchg out add popl lret inc or enter mov scas scas icebp rclb je les pop das adc xchg jnp pop push nop (bad) jmp cmpb and pop sub adc das sbb hlt into fisubl arpl scas shrb std out cmc sbb and pop add push (bad) lods frstor pop scas jae cmp cmp pop out pop ds pop cs icebp add sahf jae pop xchg fldenv adcb jno pop bound repnz pop mov xor add cmp sbb or mov clc data16 mov dec lcall cmp shlb dec cmp pop jno cmp xor sahf dec imul ss mov add call int lcall sub imulb leave ret in mov adc xchg jle bound push je gs push sbb or and test sbb mov subl shrl in pop mov nop fdivp test scas in daa testb mov dec in sbbl mov gs es add push sbb dec or add mov scas lods divl mov test mov pop cld repz jns mov pushf mov xchg lock push push jge lds xchg jno pop jnp lret cmc lahf jecxz movl xchg add ss addl aad inc and or and imul push loopne inc push sarl movsl mov mov cmp cwtl mov test sarb mov shl lock jne jg and adc jnp push ljmp stos ja or inc jb mov bound loope dec xchg fwait xchg sahf in repz addr16 jbe push and fsubrs shlb popf dec cmp nop jb testl bound mov sarb jns (bad) fistl imul les jne pop mov call call aas sbb inc call push jb sbb add inc xchg aam and cltd mov and orl shrb aas loope jle int mov push cmpl (bad) (bad) fsubl sbb frstor sub sbb cmp js das (bad) mov (bad) mull mov push push push shrb data16 inc add (bad) iret jne mov ss int3 popf lea dec insb shl test dec outsl sbb hlt lret in rclb sbb sub stos cs shlb in push bswap dec mov out adc out cmp loop xor xchg rorb fstl mov cwtl sti ljmp cmpsl inc lahf and rolb sbb rclb arpl or gs repz pop dec jno cs pop jp push mov (bad) sub mov scas test fwait insb jmp and push in xchg pop mov add mov (bad) xor fstpt dec ret cmp jg xchg inc jle mov lret xor sbb mov loopne ret call sarl lret (bad) sub sub mov xor sbb cmpb push (bad) popa inc pop sub inc cmc xchg push dec (bad) repz push xor (bad) lret (bad) mov out in adc xchg int jb imul lock mov into adc xor pop mov xchg cmp dec test mov pop xchg mov cmp sub fldl cltd pusha lock sbb inc cwtl xor adc inc inc jo jge sbb xor mov (bad) repz or mov daa jnp cmp jae inc movsb cwtl (bad) or push nop xchg repz jnp inc push mov jnp (bad) and jo lock mov mov aam cli daa fwait iret jb mov push mov outsb leave mov ljmp inc bound push fcmovbe fwait shlb (bad) std cmp inc test push cmpsl aaa xor lods movsl add movsb adc mov xlat push mov sbb mov aam jno cmp ss add (bad) cld test les ljmp sti pop pop fisttpl sbb fstpt fnstenv pop sub loopne cmp mov (bad) jp cld in repz inc push fidivrl lds inc stc adc imul dec sub jl das out (bad) out aas inc inc mov adc mov pop (bad) sub jno xor pop rcrb stos sbb pop les (bad) sbb and inc ret mov or fdivrs or imul in add dec cmp cmpsl dec repnz aad pop dec sub mov rclb bound jo popa cwtl mov or mov (bad) inc xor in adc leave add xorl sahf and ret lahf cmp ret (bad) fist sbb call push lcall mov xor sbbl pusha push and hlt jmp notl adc loope mov mov fcoml repnz mov test cmp arpl popa fs cli sbb flds outsb mov add je push adc ror sbb ret push pop (bad) push or rolb adc and cltd dec dec dec js clc lret sahf inc push es loop or adc aaa out in movsb mov xor mov cltd dec (bad) dec inc loopne stos jge dec call mov ljmp movsl xor std int sbb pop fistp test mov adc mov sub sbb sbb jae xchg subb add sbb xor ds jg jne test stos and mov mov mov aam out mov jl mov out mov cmp out xchg aam or loope push mov or dec sub cmpsb negl push mov (bad) xchg repz js mov mov adc push loop mov fwait push addr16 and cwtl out or mov jb mov lcall push mov imul cmp call mov test cltd into pop xchg lea popa pop mov (bad) lret dec lret leave fld1 lods je scas mov xchg push nop aaa add test sbb lds cmpsl icebp cmp scas in push xchg iret xlat dec mov sub xlat sub xchg mov pop adc pop arpl xchg push lret push sub dec adc inc fwait (bad) (bad) fnstenv cmp ffree gs incl xor orb bnd sbbl mov mov rcll adc pop aad mov aaa test xor (bad) data16 mov (bad) sbb (bad) mov clc cli les imul sbb jbe lods xor call pop addl mov cli sahf sbb pushf (bad) jl mov jno cmp mov jl aas clc sbb push push scas scas (bad) into test ret stos test std clc (bad) xor gs stos shlb jnp aas mov insb xchg add and (bad) sub xor inc lret in cmp jl in dec gs push sbb inc xor test inc inc lock outsb mov leave fcompl mov in fbld sub jno (bad) add imul cltd mov into sbb xor pop mov jmp insl sub mov mov jl ret (bad) cmc outsl nop pop inc jl mov sub popa jae xchg pop xor adc mov xchg and sub dec xor mov adc adc divl pusha lcall insl cmp sbb xorl or mov pop xlat xor mov cmpsl xchg jo inc rolb sarl outsb sub movsl fidivl inc xor jmp test rcrl ljmp out pop mov or mov das mov mov xchg mov xchg jae push xor jle sbb daa stos repz ds dec mov mov inc rcr sbb dec jne jle loope std jae push inc cwtl ficoml stos cld leave xchg mov add jle call test inc xchg mov mov cwtl fs cmpsl adc dec pop push int push aad icebp xor add mov sub mov cmpsl cmp test inc push imul fcom shlb cmc fidivrl mov sahf leave sub pop pop jno pop add push mov mov idivb dec push inc lea xchg fistpl daa fidivrl loopne in or mov fmulp hlt ss ss stos and cs inc icebp negl push idivl mov incb sub arpl in loop xchg stos or sub mov mov das xchg das stos scas dec insl mov mov into dec sbb outsl pop xchg xchg ds stos out outsb (bad) xor (bad) lahf lds test push dec in stc sbb mov push rcrb push cmp test mov stos fidivl fcmovbe enter mov int aas (bad) mov test add fldt mov repz aaa mov shlb jl movsl sbb les rolb mov pusha push popf push xchg loope enter jp aad fcomi or fimul pop test mov and (bad) mov insl pusha fsts push pop ja dec or sbb xor subb mov add daa mov mov mov add push divl addl adc aaa mov rcrb stc add cmp pop mov leave sbb push push pop pusha mov inc popf enter mov cmp sub add dec dec fild outsb lods repnz jle adc mov (bad) jle (bad) and sub push xchg cs xlat dec xlat pop fidivrl mov sub mov sarb mov les mov sub mov decl or cmp (bad) iret inc xor or xchg inc dec pop das loopne dec adc (bad) in pusha add leave inc and xor jmp mov push adc call dec pop add gs inc pop jecxz xchg or dec push imul mov push mov and ja inc jmp pop push sub or mov mov enter push xchg lea js or cmp inc sub out jle popf mov pop mov or mov jle mov inc outsb mov adc daa js out dec lods fwait ds les mov inc push push adc in (bad) in test and push mov or and or push and addr16 push bound jns push jge mov movsl out jl jl and fs shlb xlat push cmp dec sbb icebp push push jmp int3 ror mov sub jl dec cmc mov push enter mov xor or pop std das fdivl mov jg loop jmp mov pop iret popf mov sbb sub add sub adc jnp repz arpl mov fwait test punpckldq dec stc and mov mov fsubrs dec lret call add push (bad) icebp paddsw dec rorl pop dec cltd lock mov pop mov and test movsb into popa and in push outsl push dec xorl imul mov out cmpsb lret and sub xchg jb (bad) mov into jno clc in inc jg sbb loopne (bad) stos mov es push push xor into adc cmp dec and jnp pop adcl sub xor xchg sbb sbb inc jbe dec notl pushf (bad) push (bad) movsb loope jns cmp clc xchg pushw mov loop outsb xchg push xor sbbb mov pop out addr16 cli sahf fisub leave push push dec dec leave mov adc sbb int3 inc rcll mov popf xor sbb cs (bad) out popf push aas mov push mov mov mov dec fwait pop cmc dec add cmp addr16 in cld and sub add or clc aas pushf adc mov rcl pop int3 outsl sub sub push mov fldl2e fs imul gs fcoms lock inc mov mull dec in out push mov and mov inc out mov bound jbe inc sub xor and lret or psadbw fimull dec inc mov mov inc sar rcl lret jg addl jno sti sbb icebp aaa lods test data16 mov jle lahf mov xor cld add lret out push test adc sub movsl mov mov or cmc leave jle pop pop mov loope into (bad) or pop ret sti push mov or ljmp cmpsl lret push outsl inc sbb xor dec test mov hlt push sub aaa jmp idivb and das lret gs ja mov mov pop stos sbb sub rol fbstp mov xchg stos xchg popa stos fist (bad) mov xor adc and xchg imul mulb test pop mov movsl sbb in adc test sbbb push clc add bound stos flds mov jnp jg adc jno and dec cs test add int3 outsb ljmp (bad) out dec push xchg inc ficom add (bad) sbb and js loopne dec sbb imul jnp cmp mov add mov xlat jp or push or cmpsl jo sub pop int3 fdivrl xchg mov jnp leave lea dec push mov xor shr jbe in movsl mov fstpl cli mov dec es jecxz insl cltd jp test wbinvd inc xchg es aas leave mov xchg repnz rcll adc pop arpl bound outsb lods data16 inc jg or xchg inc stos in cmc bound ljmp ret inc call cmp cmp lds jl inc mov ss nop mov or cmpsb xor repnz sbb pop xchg sbb xchg mov push sub test add mov inc ret mov or push pop xor loop cmp fs adc adc jne mov xchg mov imul scas fist fbstp mov les cs in rorb out flds mov cmp jg jns jbe sti repnz and jno push lahf out and xchg aaa rorb adc adc xor push fisubl mov mov adc adc int insl add div mov sub fsubrl mov fdivrs sbb icebp inc pop or lods lret negb jne imul add stos (bad) out push bound movsl loopne push xor into fucomip and pusha call pop xchg ss insb scas pop addr16 std popa push mov fisttp add sub fimul or aas hlt out scas cwtl cmp inc in test out jl cli inc mov out adc cltd sbb jle outsl imul jnp cmp cmp sarl mov adc stc adc pop out xlat sbb aad cmpsl jg int enter add sub mov arpl ret sub xor fldl add sub cs pop iret and or jge ja cmpl movsb xor add mov push xlat sbb (bad) gs dec ss or dec and lods orl xor mov mov idivb mov adc (bad) pop leave mov loop addr16 fwait repz aam je out cmc mov and xor in xchg fdivrl sub dec or mov lock jecxz stos mov pop notl xchg call ficompl pushf inc mov jo add pop and and adc in dec push lahf push or in add cld mov xor mov test (bad) (bad) mov leave jbe adc ficoml scas inc ret in repz scas mov ss cmpsb (bad) jp mov xorl jns pop (bad) mov mov or ds pop dec push outsb (bad) ret jbe xor mov jp jns fstl xchg test int3 xor (bad) cltd mov mov js into das xchg inc and test mov cmp loop xor movsl inc sbb push in push add (bad) and jp stos inc (bad) cmp mov ret cwtl mov xchg and cmpsb loop xchg stos or pop dec xchg push jge popf rcrb mov push (bad) cmp push jge sbb inc dec dec push xor (bad) push pop js pushl bound mov fwait loop aam xchg pop jp,pt mov mov aaa sub mov sbb idiv pop cmp es and jo inc jecxz jg es jns cld sarb dec fdiv ret lahf push cs push lahf inc sub lahf dec add jle xor cmpsl cwtl and insl in pop imul xor dec int3 xchg in jp push sar mov jae jecxz pop gs dec adc sub jp mov mov pop jecxz cmp sbb pop and les sub push jge jp int mov mov pop dec ret push or mov cli lds inc or out stos mov inc push inc sub iret fcmovne cmpl xor jg stos xchg add pop xor hlt pop data16 std vpmaddwd sbb mov add hlt jle xor loop ret imul call sub push lret cli jl mov mov insl leave mov nop pop push push into pop in fsts xchg pop push aad ja fbld pop dec xor add mov fidiv clc sub sbb je pusha jmp mov daa adc nop sbb mov sub mov adc mov xor mov dec out cmp repnz mov pop loope push xchg push mov push jno or push shrb ret cmp je hlt mov mov mov test movsl mov popa xchg dec sub mov sub or mov xchg pusha push sub xchg sub pop sbb xchg push xchg mov mov roll ret jb cmpsb inc push xchg cmp (bad) aas xchg daa (bad) jne insb fisttpl inc push sahf sub mov push or jae sub adc in and fcompl popa cltd daa (bad) pop sub xchg lret dec movsl or inc ret ljmp sbb or frstor loope pop les sbb lret sub mov jns mov sbb frstor sar popf mov adc xorl test sbb mov out cmpsl arpl sub jns pusha (bad) cmpsb jo add jo jo cwtl arpl enter cmc jo das mov jle add pop mov or dec push adc movsl fsubs loop jmp add push mov fistp adc mov push or lods add cltd xor pop dec cmpsb sub jecxz adc in inc out xchg dec xlat or and mov jae or sub inc push adc xchg push lcall ljmp mov or jns std xor inc das xchg (bad) mov mov jbe inc aam fdivs sbb jo xchg mov and push pop push mov inc or leave sbb or out sbb adc stos dec jne cli js lret cmp and adc out jnp push dec mov push repz movl (bad) das jl adc and insl mov icebp or push and jge ja cmp xlat js stos mov pop aas or fidivrl js insl jle and xchg fiadd (bad) es repz pop fxch dec and lahf dec cmp or push aam or push rorl gs lods jp mov repnz adc jge inc push pushf scas jnp test inc mov bound or ds jb adc mov mov ret call push lods cwtl sbb inc and out scas push sub add lea in lret lods out ljmp hlt mov movsb bound lods inc pop mov add shrl push fcoms fcoml into adc add mov pop loopne mov push xchg stos dec ror xor push rcll pop rolb mov jns aaa and xchg add das and (bad) jb ljmp mov push add pop ret mov sbb sub or nop pop aad xor icebp fdivl mov xchg sbb or jae ret lds xchg mov pop (bad) bound cmp cmp fimul and push push ds cwtl loopne (bad) (bad) (bad) pop or lcall aaa and adc outsl xchg call movsb call aas data16 lods mov pop or aaa xchg lock les jl inc mov inc cli pop add (bad) loop jmp or ret mov push ficoml sti popa sbb shlb test out mov arpl mov loopne stos xchg jg add cli pop pop test lret xorb push out xchg dec pop lods in out sbbl int3 mov cmp fwait jne xchg outsb mov int3 or out mov dec mov out inc or cmp pop imul xchg scas fwait cmp lock fldl2e dec mov int3 cwtl sub xor lret fadds icebp aas popa pop ss inc call push popf in mov fmuls sbb imul or nop loopne pop jbe sti xor jmp (bad) popf cmp out sahf adc ds insl push gs or (bad) sbb push push xchg fdivl fcoml jo into out and arpl mov fxtract push add or push xor lret jle jle sub lock mov cmc ja push pop in dec or mov cwtl or cwtl add les cld jne ljmp cmpsb in sub cmpsb mov xlat sbb xor sub mov mov scas add push add daa add dec je in jae pushf dec mov inc je mov mov mov popf add imul jle ret jge lret add loopne orl dec or xlat xor inc out aaa fwait cmp mov cmc (bad) push imul jb imul ret (bad) enter xor cld das add pop and xchg and push pop cmp out test daa (bad) xchg (bad) jl xlat add xor or add test aas popa adc test pop and xor or adc fstl xorb repnz shll lds pop les xor enter leave into dec out test cmp push jae or mov sbb sub arpl mov adcl adc out not pusha bswap jo js inc dec lods push jp adc dec movsl sub fnstsw sub mov mov or sub and icebp push xchg cld nop sub sahf mov jb dec in outsb mov jno dec das xor xor adc ret xchg (bad) and inc mov cmpsb push pushf cmp loope jo dec xor sbb push inc sub imul ljmp fnstenv fildl (bad) or adc pop bound outsb lea dec jnp in stc inc inc (bad) in std test push push mov int inc or push mov push or add out outsl stos addl sub sbb test fisub or xchg ja inc adc push out rcr loopne das cmp jl or inc xor mov cmc imul popa mov adc rcrb inc icebp inc imul xor xor vcmptruesd aaa sbb stc (bad) xor mov rep jle push and xor addr16 push xchg fistl rcl adc mov popa jl add test outsl xchg mov lds cmp cmp push and (bad) ljmp or xor test sub pop in test xchg jl adc push inc mov pop mov dec pop sbb divb cmc jmp dec add (bad) mov jl stos and mov mov into sbb incb dec hlt xchg mov ret push stos lods (bad) mov icebp xchg add push int test lock mov or ficoml fsubrl (bad) daa lock lret sahf fistp ret out jne pop (bad) incl jmp mov je lea dec aaa mov or hlt mov lret jb cmp xchg adc cmp outsb push lods or ret sbbl ljmp xor jnp fcmovu sub lcall shrb push cmp adc fisttp inc leave adc pop mov mov inc cmp xchg or mov jl jno rolb outsb in pop jecxz xlat dec scas cmp aam pop cwtl inc loope loop test fsubl push cmc stos dec jmp xchg int3 fiadd jp pop xchg jge imul les mov std inc scas adc fmuls out fistpll sbb sub mov scas pushf add mov data16 and lea ret jne cmp jbe pushf jge arpl inc sub mov inc push and popa xor push add mov push xchg js and push dec jecxz inc pop pop fcmovb adc jmp push lret xchg fwait das loopne dec add sbb lea mov test pop insl insl rcr push nop sahf jnp fstpt je gs sub mov (bad) call push insl rorb xor push push aam push adc (bad) push pop xchg insb fcoms (bad) jmp call std (bad) or mov iret shl cmp fnsave pop push lcall adcl in adc mov cmp fdivs in sbb test mov insb ljmp pop cmpsl enter and jp lcall inc test ss fs nop inc mov cmpsl pop sbb scas sub jnp int xchg jl mov sub shr add sbbl sti fbld xchg and sbb lret push add stos xor fisubrl jno stc movsb test lods cmp and jmp mov mov mov jp pop into add sbb mov xchg lock cmp mov cs inc gs xchg push or in mov jle loopne xchg mov dec inc mov daa inc push and aaa movb in jns and in add pusha xchg mov ljmp xlat iret (bad) aam in lock pop out fwait mov aaa pop es add xchg loopne outsb dec xchg cmpsl fldcw push mov negl xchg jp iret rcl jo rorb xchg sbb sub fs inc (bad) push hlt stos insl xlat dec sub xor xor lock mov pop pop or push add push lods pop repnz mov mov rorb ljmp test xor mov mov jmp and out es xor push xchg je dec div add out push outsl iret lcall xchg cmpsw cmp pushf cmp push lahf es jle jnp stos cmp (bad) mov sbb adc repnz insb (bad) stc cmp jbe push in pop mov popf aad inc dec imul adc cmc pop (bad) lret movsb dec cmp pusha push pop fsts cmpsl pop inc repz sbb or jecxz int3 adc leave and sbb test sarb mov inc sbb (bad) mov cmp call or sbb imul sub mov dec js andl popa lds xor lahf sti add arpl rcl jne dec adc jmp adc sahf fwait jbe push dec sahf sbb fs add jno adc xchg hlt cld mov addr16 xchg test or inc pop xor cmp mov out rolb (bad) add push rcrl pop push mov aad push cmp add inc nop fstl jp daa insb mov fwait mov pop popf fwait push push push test int3 sbb in mov es pop loopne insl sbb outsl sbb test pop (bad) jnp notb imull mov adc inc and cmp (bad) (bad) dec mov (bad) jmp push dec jecxz cli dec (bad) sahf leave adc lea cs jecxz push cli pop rcrl das ds mov in mov xchg insl bound mov cmp pop repnz inc adc aas add movsl xchg mov inc jmp call flds shr pop inc sub xchg push mov pop mov push test add sti ret pop xor mov lcall aam js enter fldl mov ret adc xor inc pop sbb xchg andb pop xchg int xor in lcall jge pop orl call fldenv adc fmull push mov inc sub sub insb mov lea mov insl sbb cmp xor iret scas add sub pop or mov (bad) jno fistpl add das and leave xor ret pop daa lret cmp mov fistp mov sbb lods jnp mov and jb inc inc mov scas repnz insl lahf (bad) leave testb (bad) shrb xlat pop insl pop cmovbe xchg mov pop in inc test pusha faddl adc sub out mov out add dec sahf leave jp in xor insb fisttpll lcall add xchg ja shlb nop cltd sbb repz ds aad repnz inc cmpsl stos and imul js (bad) aam hlt cmp lods sbb adc les push adc lahf cltd sti cltd mov iret sbb mov sbb scas add les cmp push out js enter test cmpsl adc xchg mov or push fmul jmp and lahf roll sub xchg mov in and outsb inc pusha jle out mov xchg and mov pop lcall test and pop das add mov xor aad xor jb pop and cltd ja popa out dec xor push push aad mov cltd inc out dec push or (bad) pop inc je scas inc popf mov lcall mov test pop lods dec cwtl stos sti jnp bound in mov add popf jno mov cld stc loope call iret flds cmpsl sub cmp adc es xchg bnd push orb mov inc faddl scas mov loope xchg (bad) insb ds dec (bad) inc adc repnz bound push (bad) into jns jl test sbb sbb jno cli outsb sbb xchg pop outsl jns pop fwait (bad) or in add rcrb xor andps js or jp mov lret sub nop mov test mov mov das lahf jae inc aaa pop mov xchg loopne mov push pop pusha and scas ret je popa fldl2t push push lahf cmp (bad) rep (bad) push jl js (bad) iret sub xchg pop jb ds mov lock outsl jle adc inc stc and aad cltd loopne dec inc dec out pushf dec into cmpsb mov dec add inc add push fcomps xchg lods lret jnp xor rcll lds mov sahf pop adc hlt pop leave ja mov mov cmpsl xchg js xchg int and ljmp stos out ja int3 pop aas jl imul dec out add (bad) addr16 and jmp movsl or xchg lcall push sbb lcall dec xchg popa mov pop mov or movsl jle lahf jnp push cld fst mov out push or gs (bad) add aad and leave jl cltd sub mov imul push and mov or or mov dec in cmpsl (bad) xor push push dec sbb test mov lea mov lea cmp cmpsb mov scas cmpsb rol aam inc dec push and pop (bad) ret jnp pop test jle mov mov (bad) (bad) test popa xchg jnp jae jne sub push shrl out int3 in push sbb incb push mov inc sbb (bad) popa (bad) push inc mov out mov sub pop ds xor imul rorl popf mov mov mov gs mov out add ret mov test mov cmp sbb cli jecxz push jg sti pop stc (bad) mov inc neg nop mov cs out mov fstpl mov das push in lahf pop xlat and mov (bad) dec mov cmp cld cmp fwait rcrl push sti adc imul icebp inc push fs push je sbb stos popa orb shrl enter push push adcl es mov and jmp btc bound xor cmp push push sbb sti pop je xchg outsb jp adc jl cmp push sbb xchg aaa sbb test xchg xor pop cmp les jge xor test push inc xor mov cmc lea fildl mov xchg pop hlt arpl inc psubusw clc mov ss or mov cmpsl int and mov mov loopne mov fs cmp lods mov jno jge mov adc add in repz pop clc or jp repnz inc push adc dec pop jnp aad aas or cmpsb fwait movzbl bswap negb and mov lock repnz and scas mov mov jmp roll push dec jo shr xorl and scas mov fwait pushl mov xchg lahf xchg cwtl cs add (bad) jae,pn pop faddp sbb xlat mov popf (bad) pop popa push ljmp imul in add and add outsl mov (bad) xor cld inc pop lods jmp push cld aas jne cmc cmpsl stos jo gs fadd (bad) mov (bad) push dec es out nop xor lea cmp inc xchg inc push fnstsw ljmp aad xlat bound xchg push push adc pop dec or cmp out fistpll add push mov cmp dec cmpsl cli jb adc (bad) shr mov aaa into imul or dec add fst push cmp jmp xchg push pop xor fst test fisub mov repz sub enter xchg jg cmp dec std cltd ljmp ljmp cwtl jns and jp scas mov push and sbb fcmovu dec outsl push flds aas outsl es (bad) mov mov (bad) pop sbb pop or push xor jne push mov xlat (bad) jmp sbb lods cmp test arpl pop mov into push mov sti popf roll fcomps adc pop int test add je lods sub cmp std in shr inc incb cmp ficompl and mov adc cmpsb mov pop js adc lret sahf aam lds enter add loopne sub std loop xchg in out pusha aad adc (bad) sbb pop bound hlt popa xchg adc out hlt mov mov and xor out (bad) repz add dec rcr adc loop out mov scas pop pusha pop call movb lods loope aas push pop test xchg mov mov xchg jae movsl stos das mov gs insl ret sbb sbbl ja cmp pop add sbb sbb pop push int add jp xchg cwtl jge inc mov insb or sub cmp bound jns imul mov sbb cs add mov test mov sbb loop nop (bad) out or jecxz sub stos cmp fsubrl lock mov xchg test les outsb fstps and push mov (bad) out ret pop push xorb int out or test pcmpeqb icebp xchg xchg out decl outsb mov test bound xchg xchg loope push mov inc daa repz push fiadd push call push fwait sub inc test scas mov iret jecxz pop int inc pop sbb (bad) aas scas sub push addr16 dec mov cld and ret fdivr dec push scas pushf cmp (bad) ds jbe imul arpl hlt inc in out push inc mov push adc mov sbb cmp push popa scas cmp mov cltd or sub mov out dec int cmpsb mov fcos call inc pop cmp loope insb or xchg inc movsb sbb and sbb in addr16 push rol sbb xchg jmp mov mov inc push arpl push cmc mov jne scas lock sbb jle sub fild jg aam inc pop out lret inc dec inc (bad) dec cmpsl xor sarl pop pop test cmpsl adc jge fiaddl mov and hlt aad loope adc pusha lods mov cmp fs inc adc imul pop mov cmp jmp jge cmp pop xchg je cltd xchg in jne xchg push inc push mov mov (bad) (bad) mov jae ss shr sub jno mov jae (bad) add inc push mov fidivrl add xchg xor mov or loope stos mov rcll leave clc cmp adc jecxz inc mov adc ficomp test ficoml imul popl and jae int push jb xor jp xchg mov xchg dec cltd lcall mov adc in cwtl aaa cmp sub lock shl push mov sti addr16 (bad) in mull or push pusha or data16 js je sbb pop jae shr inc lea sub out dec leave es push repz mov lods fnstcw sbb cmpsb pushf js pop fwait jecxz push addr16 mov sbb bnd in outsl push fwait cltd stos mov repnz xchg mov jae pop bound add push sub adc iret out jle jno adc and push ljmp stos adc mov xchg es test cmp aaa xchg test inc loope adc mov mov addb imul and repz adc fcmovnu or dec push (bad) xor cmp push push cmpsb push (bad) out lret dec jns lcall pop xchg mov and mov pop add out xor cmp dec (bad) pop sub pop jae scas cli mov sarl icebp in inc adc mov mov arpl cmpsl cli mov pushf scas mov pop pop lock dec cwtl mov cs mov out push sbb mov jl repz les rcrl push dec mov popa xor (bad) sti cmp rol mov jno ret out mov sbb out cld outsb sarl jno repnz sub cltd into inc mov aam inc das inc fwait xor inc sub jns cmp dec mov xlat mov (bad) iret cmpsl (bad) fldln2 or mov jnp sub lods or lcall orl pusha cmp push ret lahf rcl or dec subb mov sti mov out push fxch lret cwtl cmpsl sub xchg outsl fcomps inc test out push pop add pop xchg out mov sbb pop stc push lret mov cli sub cmp inc inc sub mov push ljmp xchg mov subb sub loope (bad) clc mov mov out push adc data16 daa aas push or cmp and adc das movsb dec xchg jo ficompl rcrl push imul mov decb fisttp dec inc cmpl hlt dec xchg xor pop jmp sub xchg lea pushf std pop dec dec and test xchg leave imul repz dec out rol arpl xor shrl fsts daa inc add jecxz mov pusha xor inc cwtl imul mov sbb xor aad iret mov xchg sbb jge cmp shr (bad) jmp push idivb cmpsl cmpsb sub pop adc and pushf fiaddl add push pop lret inc add out cmp shlb out adc (bad) push dec (bad) js mov fs mov repnz fadds rol imul or sub mov int iret sbb mov mov mov adc pop das fsts je daa call cwtl decl xchg xor imul mov popa outsl aas (bad) int and pop out pushf movl xlat fwait ss push pushf sti ret (bad) and outsb inc xchg jno (bad) ss mov and outsb push adcl in shrd repnz int int3 sub test cmp mov cwtl enter jp data16 test adc xchg adc and imul leave rclb or outsb ss mov sbb mov mov (bad) bound pop rcl mov outsl mov inc (bad) jo mov sub in pop in or jne stc aas cmpsl xchg ret xor xorl outsl xor mov mov and outsb lret aam int inc push mov lock inc mov rcll imul test jo jnp std xor (bad) in cmp sub inc xor out fidivr lcall or ss push dec xor mov dec insl adc or lods mov adc outsb movsl and xchg mov add push dec xchg rcrb mov rcrb inc or mov add cmc jo sub test cmp inc sbb pop inc rcll jns fcoms cmp shll pop jg lcall and pop (bad) jmp push or mov jge stos adc or fcoms imul stc nop sub xchg pushf sbb adc mov movsb (bad) aaa loopne rcl lret jge dec jmp cld sahf cs mov mov outsl xor sahf scas pop scas and jmp sbb sub and pop jo popa mov and dec add or hlt lret les jo push or xor loop lcall jg sub dec dec arpl inc stos jecxz mov xlat (bad) rorb fimul (bad) out push clc stos xor pop xlat pop ret scas loope sub seta or out fistpll jb pop dec xor inc adc jae fadds test adc hlt adc cmp add and or imul push jbe test mov loope xchg dec div mov jne fstpt fistp xchg rorb cmc jecxz fcmovnu nop dec loop add cli push cs jae std (bad) or cli sbb xchg cwtl add push adc cli loop inc andb pop inc push push popf lock jne mov cwtl dec or insb ds add mov dec or sub leave inc je inc (bad) or lret aas das push movsb cmp lcall cmpl sbb das jl dec iret scas idivl xor ja pop cmp jmp pop mov popf and and lahf bound addr16 or (bad) in pop arpl jo push bound sub (bad) test push in mov sbb enter mov or add enter pop mov and aad aaa movsb std pop mov mov lret mov or pop lret pusha movsb xchg mov xchg popf or or mov dec mov add sub movsl or test (bad) sarb push and pop mov cs lods pusha mov mov or sub loopne movsl mov jmp adc in xchg loop into sub mov xor outsb lods xor orl (bad) mov cmp push xchg add imul clc stc fistpl fwait out and cli sub icebp jle jne mov dec pop fidivrl and sub push sbb pop mov xchg mov scas mov dec pop dec in into mov (bad) push mul popa dec xchg test arpl (bad) imul xor sub sub aam xor jge les sbb pop into fistl pop push cld jns mov xor repnz xorl jp rcr mov mov sub loope xchg mov or clc mov add jmp repz out mov insl cld cmp or jle out fwait data16 xchg imul mov mov repnz xchg loope mov mov xlat pop sub rorl sahf inc sbb cmpsb mov and mov or push fidivl pop jmp sbb mov push jecxz scas lret jge loope push test inc in fld mov cmp mov add nop enter ret jle cli arpl sub imul mov (bad) (bad) mov mov iret loopne xchg fsubr call push xchg lea dec xchg sub inc xor outsl inc int ljmp stos mov push xor xchg vpslld pop inc sub inc out out inc push (bad) mov jge and test scas and mov lea ljmp test pop xchg aaa inc es insb push jo ss mov pop pusha push out in in aam (bad) adc add bound ss sbbl fcmovnb sub mov dec popf out pop sbb xor fmuls je test cld aad cmpl pop jbe jmp (bad) xor jl push cwtl mov push in sub int aam insl sub fucomip cmp nop outsb jne and push xchg pop sub les or cld or outsl dec pop lods pusha adc mov sbb xchg add jo mov mov test mov pop mov xor inc or mov jo popa mov sub xchg xchg shl sbb xchg in int3 mov sub cmp or xor jnp cmp stos data16 bound pop int fwait pushf mov loopne dec stos jns dec sub inc inc mov mov and adc ret fmull lock xor jbe stos mov mov sub test (bad) cmp insb das jg push xchg or in jne sub (bad) lahf fidivr js pop mov movsb push fwait xchg jnp mov loopne es cmc arpl test dec test insb cmp sub push (bad) jle (bad) and out in mov mov mov ja inc out in mov imull xchg insb test sbb shrb xchg fadd cmp inc inc and hlt fucom (bad) cli jno imull sbb pop fisttpll ret inc aad cmp mov mov pop stos inc aad leave pop add mov fld mov (bad) in push scas call mov jmp js or stos and pop inc and in (bad) push pop decb push cli dec out push fimull ficom push lea fild lahf pushf pop pop mov mov std test add addr16 sub or popa sub movsb mov mulb sub cwtl sti loope adc dec jl and push add mov in sub push cmc movsb addb pop shr imul ret in repz mov pop jmp jo test dec (bad) pop xor mov lock xchg cmp cmc inc (bad) cld xor or push repz lea pop xchg jmp pop lock sahf cwtl cmp add sbbb mov loope aaa rolb lahf int mov loopne xor push push (bad) mov fisub sub jo add cwtl rcrl lahf or aaa ret add (bad) lea negb bnd loope imul cmpsb cmp inc mov inc sub pop jge sbb or es mov out lods mov stos dec mov rcll and fstpl push mov bound cmp hlt xlat pop inc lds xlat mov jnp dec xchg dec mov test mov lock pop clc or (bad) stos icebp jo (bad) push cmc mov lahf arpl (bad) iret cmp and orl xchg enter xchg ljmp cli scas mov clc jnp pop lock fcmove ret rcrb roll or pop mov xchg ss xchg je dec imul enter pushf pop sub (bad) jne push fadd push imul and mov mov jne fwait push mov xor add (bad) pop xor fnstcw adc push cmpsl scas ss inc mov adc mov inc xor sbb pushf pushf cli ret xor cmp mov inc cld adc aaa adc pop fildl pop test push mov fmull ret dec insb or adc adc jbe ljmp or add mov push inc pop gs xchg sbb push out (bad) es xor dec clc mov ja adc lods mov pop push aas mov ficoml cmp lds movsl cltd loop xchg test les mov adc scas inc jp adc push adcb out cmp cmp imulb test cmp sub lcall jmp and pop jns sbb in cmp js lret loop and and mov sub push std jbe (bad) dec insl sbb test repnz test sub aas jne outsb sahf push cmp icebp pop cmp and outsl test aas pop xchg and (bad) nop (bad) inc gs (bad) push imul mov adc int adc xchg dec imul jge xor (bad) mov add les add enter adc ja fwait movsl adc push sub xchg iret imul stc out out imul cld mov push sbb jne or les popl je xchg sub push imul adc into ret xor push aad cmp push jp fcomip test sbb mov and mov mov push mov imul int3 xchg or pmuludq test orl ljmp sbb jno and cltd add xor sub lahf loopne and and lahf sub cld movsl jbe mov mov adc sbb jae popa mov in xor in les jecxz push pop jb push shrl lcall inc cmp adc mov jnp in push scas xlat xacquire lods sbb inc mov out (bad) ret (bad) insb in xor mov add fdivs jecxz sub cmp xchg in cli sbbl inc sahf (bad) rcrb jg and mov adc mov notl jle stos jo jl imul loop test jle divb divl cmp jns outsl sbb mov imul cmp cmp dec add cwtl lahf jmp daa sbb (bad) xor insl mov pop mov xchg popf adc mov popf push cwtl lahf js (bad) push mov ss jle xor add add stc pop daa (bad) jmp scas mov mov nop pop aas xchg or fwait call or mov jo push mov and test jae dec sbb add fchs out imul mov int3 test or mov or push leave jnp std mov add in lods pop xchg gs cmpsl or in fistpl mov inc mov mov sbb xor add xchg test sbb (bad) adc leave push and mov adc and mov inc inc cmp mov sbb movsl stos jno mov mov cmpsb mov cmp and sub add das int3 pushf movsl mov pop mov fstl or jb mov ja jno adc sub pand fisubrl mov test jl scas pop jbe repz mov push insl sti add dec push pop das (bad) cmc push add pop sbb mov mov movsb loop cmp jg cld jecxz,pn and addr16 jbe pop loop inc nop or jbe icebp shl cli sahf arpl xor lock mov jbe jecxz scas cmp sub pushf lock mov xor lret mov stc inc or cmp (bad) aam shlb movsb mov jge or cmp push jns shlb pop dec loope mov add fmuls popf adc mov jp out add movsl test inc fwait in mov das loop or jnp inc jbe pop insl leave mov std scas sti mov sub cmp stos cld or outsb adc (bad) je les out aam jecxz aas cmpsl cmp dec je (bad) aad inc xchg dec xchg mov pushf mov push jl int3 add pop add repz shl adc sbb mov pop data16 jle push (bad) push adc pushf js mov jmp sbb loopne inc sub mov (bad) xchg sti mov jmp inc dec (bad) cmpsl mov incb xor mov (bad) mov add add and dec mov adc or inc mov cmp ret (bad) lcall inc jmp sub xor cmp fistl push fidivl add test lcall fs dec push or loopne shlb sub inc stos loope inc and jne leave jb sbb xchg push ret sbb js or sbb jle xor pop jno je xchg (bad) push int3 pop xorb add loopne mov cmp inc pop lods fildl pop sub xchg das fistpll movsl test xor fidivr xchg mov leave inc leave adc or sbb push (bad) push cmp fsubs inc xchg xchg mov xor outsb lahf (bad) jno mov adc dec enter add cs and or add out addl pusha ss lcall hlt mov stos lock (bad) test jl xor cwtl add inc int3 rcll and pop jbe (bad) cwtl mov popf mov inc sbb imul sbb cmp sti in lods push das adc das shrl mov mov test arpl cmpsb mov fsts sbb pop sbb mov jle or mov jge jo pop imul jge push shrb sbb jle data16 dec rorl int3 sub test (bad) dec mov or (bad) pop or sbb or inc ljmp dec jb les push jecxz stc movb mov pop dec jo mov ret fyl2x pop mov inc pop cmp les in xchg sbbb cmpsb outsb or loopne mov dec pop sub pop mov jl fsts popf or mov lods mov adc hlt or jns das pop mov lcall lea jae in xor jne mov stos pop lock or (bad) or adc jne cmpsb popf or dec daa inc in ret sub mov sbb inc out add (bad) imul sbb sbb sahf stos imul xchg and mov mov xchg (bad) or pop outsl icebp imul sbb inc je ja cmp scas arpl or jg hlt icebp in mov push mov xchg mov test sbb xchg cmp xchg dec lods pop sbb sti pop sub xchg or mov nop xor pop ss fimul mov cmpsl fisttpll or (bad) xor ja jg jno sbb sub sbb rcl mov (bad) cmp ljmp (bad) dec sub and dec mov xchg stc mov xchg sbb insb cmpsb jmp push popf into or nop or sbb jbe or js mov mov enter (bad) fiaddl sbb (bad) mov push pop cwtl push add test call add mov and ret ja popa push mov sbb dec imul sub popf mov mov xlat dec (bad) loope push jns xchg push xchg adc push mov je cmp dec jp lock sbb add cltd or ja pop inc push jbe mov push adc and shlb inc insl cvtps2pi repnz fs add adc cmp sbb scas xor dec xchg adc jge sbb mov (bad) jne push or lods (bad) mov jmp ja mov repz enter add or scas movsb push jo add call adc xchg (bad) iret jnp aas inc pop dec xchg cwtl adc bound repz test leave fsubrs outsl jle rol mov add daa dec adc sahf jmp movsb sbb sbb cli sub xor inc popf add cmp push dec outsb loopne fstps mov movsl dec xor loop sbb dec cli gs mov dec cmc loope addl out repz cli adc mov inc adc dec add xor jno data16 or push popa out icebp or int xor cmpsl das sub imul inc (bad) mov clc mov sbb mov clc inc mov cmp mov inc ljmp gs inc and lds and cmp daa dec pop leave cmp pop test int3 nop inc jmp pop cs dec sarl cwtl mov es xor mov loop rorb js popf fistpl inc sti xor mov mov cmc mov andnps stos mov push adc lahf push (bad) cmc dec mov and push pop mov adc lods rorl jg rcl jge loope adc lods mov push loope ret xor sar lahf popl outsl sbb fiadd xlat loope xchg fucomp lcall cmpsl jb cli mov xchg xor mov pop repnz dec inc mov sub or (bad) or dec dec mov add cs sbb outsb pop iret fs arpl js inc dec xchg js imul movsl es jle mov xor pushf fcoml xor mov repnz fmuls mov (bad) push xchg push dec lods add cmp mov mov pop push bnd fs inc lods cli data16 inc scas adc js sbb xor fildl cmp lea sbb shr jne inc test pop mov mov lcall mov mov push test in adc or add jle sub sub sub add sahf inc mov cmp jbe push pusha mov jns loope sub dec sbb add outsb enter aam adc dec add push les pusha clc xchg dec mov ret adc sbb test stos in out xchg jb push fucom out jns inc and mov loopne notb scas jae test jo fadds rcl cwtl push loop mov repz push out push sarb pushf out sub bound mov mov xor hlt push sub push cmp test inc push jno (bad) mov or mov sub and mov sub dec pop push js push push int cmp fs shll (bad) je jb outsb rcl adc cmp inc dec xchg and jge lods push or cmp xor lcall out and idivl pop fmull in pop dec sub and cld add jle fdivrs push jnp insl adcl jecxz enter (bad) push aad fadds pminsw imul fimul ss insb pop cmpsb lea (bad) outsb fadd sub daa xor xchg test call adc or mov ljmp jmp (bad) xor fimul or mov (bad) lock (bad) pusha enter mov insl cmp icebp mov or leave cs sub jg xorb bound mov (bad) push or push adc cltd stos shlb fsubs std cltd (bad) xor cwtl dec std outsl adc daa adc jne inc (bad) jb sub lea mov pop test out and int3 sub ret xchg test or and adc push call xor sti mov out add push mov icebp imul xor jp or inc push pop pushl add adc testl adc clc ret hlt sbb add loop lahf jecxz in out sub jae cmp mov adc sarl sbb xorl imul cs pop jb imul pop or call lret mov dec mov xchg outsl jl fmull xor jl jge or xor out hlt jbe aaa or dec mov addr16 cmp out stos sti ret cmp lock ljmp enter mov push cld pop lock add js or inc or fwait sti sbb int or sarl shrl xchg daa xchg popa push push mov notl cwtl or pop cmp mov movsl mulb xor (bad) mov and sahf inc jmp jo call test fwait pop iret cmp popf dec fdivs fs outsl insb xchg addr16 test pop xchg mov jae pusha ljmp xor mulb jno daa mov cltd xchg push pop xchg fnstsw and or cmp xchg call inc jge and pop mov push ror dec jae jbe sub das enter jg xchg stos je sbb fmull and les aam mov push stos sub sbb int roll hlt mov inc mov cmp sub and sbb (bad) arpl out jecxz mov mov sbb push enter sbb inc and push and loop jns ja mov xchg cmp outsb xorb (bad) (bad) or adc xlat lods sub aaa mov mov mov aas dec out xlat push mov ret (bad) pop loopne mov out mov divl sub cmp lahf pop lea xorl dec es mov add lods ficomp push lret mov int3 imul movsl inc xor pop jecxz mov movsl sbb adc je out xchg jl sbb test dec je mov movsb sti adc sbb sub mov out in addr16 mov faddl test and jg mov shll ja pop cmp sub fistp (bad) dec cs mov jae sub bound dec xor (bad) xor rolb out pop scas pusha and dec cmpsb mov and ljmp lret or rol adc xor push rolb pop pop xchg (bad) fsubrl push xchg sub sub dec mov and sbb test pop aaa or push negl lret sbb std lds rcrl and cmp and sbb cmp pusha add inc jo in ret icebp xor repz popl inc xor cmp add aas lret sub cwtl sub mov sbb pop push subb sbb adc outsb out add or dec adc inc push or mov dec fisubl mov fcmovb cmpsb stc mov lahf jo out cmp jo pop mov cltd mov or mov jbe sti out xchg mov fimull sub aam ds mov ds and mov mov push sti cmp int lds setbe and push cmp pop imul push outsb popa popf pop in inc push dec outsb mov lea xor int fdivl sbb dec dec sbb divb (bad) dec int3 scas mov addr16 mov repz sbb and in inc mov out cmp test jae inc push fs mov pop lods call hlt clc inc lds jo cmpsb pop pop inc mov out clc ret mov pop cli jp xchg and inc mov (bad) jae outsl shll jbe icebp push cmpsl pop pop jnp inc add and lds adc jns jg push (bad) int and loopne ljmp dec pop cmpsb jmp cmp xchg and flds mov xchg repz (bad) pop lea sbb cmpsl mov out mov lret xchg mov fwait out or inc popf fcomp push cmpsl xchg push (bad) aam mov iret movl scas ret pop pop add aas cld jg aad mov pop stc add pop int3 fwait inc rcrb pop pop and stc sub inc stos and xchg cmp xor adc inc int faddl sti mov cmp jo ljmp repz notl cli dec mov and cmpsb push push ds (bad) vmread test lea lcallw jmp jle rorb pop jo mov ret sti ret inc adc jecxz mov pop lods call pop adc andb add dec adc rcrl pushf inc mov (bad) adc xor cwtl (bad) jbe mov xchg jle cmp adc (bad) jo jbe or out jb xor mov or sub or lret test pop ds (bad) ja sti call lret xchg outsl sbb pop push pop sti lods or sbb push fidiv jmp fsubr fistpl push and mov or xor xchg aaa aad sti jle fcmovne or xor xchg mov movsb in inc sub add out jl push mov cld mov jg loop subb out mov fbld jns sahf push push push paddsw jnp push fisttpl ret xor (bad) in cmpsl aas icebp addr16 scas inc iret mov bound mov pop sti mov js out mov out and cs sub inc mov mov mov push mov sbb loop repnz (bad) loope xchg fldl (bad) add mov dec xchg repz dec mov adc in pop inc and (bad) jl shrl xchg push imul (bad) jno scas js movb jp jl or test mov inc in sti dec xor inc js daa push das mov jns outsl sbb ljmp stos xor mov lret cmpsl xchg add push nop xchg arpl pushf dec xchg lock pop shl jo dec clc xchg pop ss jmp jo push jbe cmp in cmpsl adc xchg cmp mov sar mov arpl loopne lret iret pop stos or jl jo stc ds xchg cmp jne lcall sbb fcoms sub aad lods or adc les sahf lret scas (bad) push xor subl add dec ret mov rol add imul inc cmp insl std inc inc ret push mov sbb sub and out fadds or jo and negl xorl dec dec inc in xor jle outsl xchg insb push push and xchg test dec ss pop dec or (bad) das push lods (bad) pop stos sub jp mov popf bound fisubr or jae xchg stos fsubrp inc and mov dec (bad) in mov xchg mov add and into mov (bad) hlt xor jle push in arpl daa loop xor lret pusha adc ja mov stos push (bad) jne jno jp (bad) sub shr xlat clc jp jecxz gs sub cmpsb jl lahf pop cmp cld popa xchg fldcw in pop sbb shrb rep incl mov inc mov (bad) je and test cmp imul cmp cwtl or daa or shll shlb lods cmp ds cltd int push jb inc push xchg inc jo (bad) call push mov (bad) test cltd das add jns inc jmp rcl jbe lock lcall xchg iret outsb inc fs stos in jg cltd cli stos (bad) jns stos cmp imul mov dec jg push stos inc insb cmp sub pop in cld lret cmp scas clc insb mov dec push icebp pop pop or (bad) icebp aad inc lahf jge cmpsb mov push outsb push enter push dec mov push test cmp inc pop in fwait cld aaa orb or or into adc jmp dec dec add ficomp ds add sub jbe jne fldt push cmp test nop dec xor xchg push dec mov aas adc adc sbb adc pop jb pop rcll sbb fsts loopne xor push pusha xor mov add scas jnp dec pushw sub inc pop mov jmp or shll jae push lcall mov (bad) popl jmp mov and mov aam sbb sbb xor cmp fisubl das xorl mov rol test adc ss jg push cmpsb sub das arpl repz pop enter dec insl add ret cmp and xor jecxz xchg mov xlat popa pop icebp inc icebp xlat cmp test xchg mov out push adc jp dec cmpsb scas test add out or lods aas ja insb mov and andl loope or xor push jb in mov adc je cmpsl (bad) xlat fdivr pop cmp pop pop cltd cmp sbb jmp push add xor add jl shrb aam pop in outsb into jmp (bad) repnz aad cmpsl mov pop push xchg dec mov out fstpl push inc and sbb loopne nop aas ja movsb les inc or shlb mov and xor in add scas cmp sahf sbb mov pop in and lcall popf rorl pop subl lcall xor xor adc popa sbb or lods loopne pop outsl dec pop dec cltd sub mov cltd xor push dec jg add cmp lret mov pop ret leave inc aaa and stos jnp inc fstpl jae pop int3 sub sahf aad ljmp in ror jae (bad) lock push out sub xor pop lret lahf jbe scas fldl xor dec mov jae shll lahf push hlt in imul adc movsl jmp leave rorb sti jl sub jmp (bad) aaa cld imul dec and sub popf ret mov jg sub mov mov andl xor lock int mov push mov (bad) cmp or and sahf push cs test jecxz repz sahf (bad) in out jbe mov xor cmp fwait and (bad) mov cmpsl dec bound aas rclb jns xchg icebp cmp sbb sub pop iret dec jle aam pop mov lods mov and add jno jmp xchg shrl push hlt call or ss push leave dec sbb push adc mov add int3 popf sub out add sbb sub fcmovnu dec test push adc push stc inc mov aam rcl add mov dec add jae dec outsl push sbb mov push idivl fbld or mov and or jmp sub sahf dec (bad) enter cmp pushf lock rolb pop jmp push inc inc sub fisttp cli imul iret imull fstpl push dec js mov jb jle loope in nop inc mov das rcrb push jb inc mov mov push mov pop mov loopne leave mov stc sub mov pop outsl sbb fistp and stc (bad) jb jmp and pop sub jecxz mov int3 stc jo mov pop add dec addr16 in cwtl lcall call outsb (bad) movsl cs aam mov push mov or jecxz movsl lock ror push int lahf call hlt fidivr pop mov xor jl pop mov (bad) jl push fsubrl sub xchg (bad) push push scas mov xchg add (bad) sbb test xor pop sub push jnp or and in mov ljmp sbb call xchg cmp js push ja pushf add cwtl stos movsb ja xchg push das pop jle test pop (bad) cwtl in cltd xor mov mov lcall cmp pop ja adcl movsb adc push mov enter int or imul in sub mov gs inc std jl dec and in jo insb es jbe sbb push bound jg xchg pop les lcall les (bad) jle stos sub mov dec or inc mov cld (bad) sub xor jns jecxz jmp pop out call adc popa (bad) not stos and clc mov in adc lods fs (bad) scas xor lret imulb test push pop or movsb lods iret out in inc out gs in push in movsl (bad) fstp sbb aad mov xlat and std or and in not and inc push out gs call mov mov sub sbb test repnz arpl loopne sub pop ljmp mov ss mov xchg push leave mov push push enter cmp fidivl loope pop xchg push movsl (bad) cmc and xor sbb dec mov sub outsb aaa pop js mov adc mov add cmp pop and fimul mov push inc jmp sbb les pop cmpsb imul iret lcall cwtl test push or inc flds data16 dec test adc or ficoml or mov scas jae mov pushf fcmove (bad) sbb cmp (bad) xlat sbb sbb push fldl jae push mov bound ljmp out jb in xor and (bad) divl xchg mov mov stos scas xchg xor or test cli addr16 stos xchg lret xlat xor test mov pusha outsb mov sbb and adc (bad) scas adc mov sub mov or push and je lret add xchg mov jno stos add pop cmpsb leave push cmp lret mov mov pushf divl fidivrl mov adc notb sub jmp cmp (bad) jb mov movsl pusha outsl xor xor mov enter std js (bad) sub inc mov shrl cld nop popf addl sub fldl iret ds lods dec movsl rcr movsb add js ljmp cmpsb sti in and cld cs mov js pop mov fs fisub dec call xchg jge adc xchg dec daa lods mov (bad) push rclb nop mov and insl je insb jl out fdivrl scas bound mov xchg jno pushf cmpl push add adc pop mov movsl xchg (bad) negl cmpsb lds xchg mov pop cs jl mov cli inc out push out hlt loop and jmp popa inc popa outsl push fild pop repz subl inc jns stc pop xor adc xchg inc and mov xchg icebp cmpsb popf loopne std push cmc push push jae cwtl xorb add test lods and xorl fs movsl ss lret mov ds (bad) sti out ret in in jmp mov es mov jns pop mov cwtl jo gs les sub addl mov jmp xchg inc push imul loop in sub jle test inc or push xchg dec jp mov push xchg movsl mov mov call test movsb jne out icebp and push cwtl test insb sbb insb out cmpl jmp cs cmp jp mov inc jle jbe idivl sbb dec sbb sbb insl into push les push jg sti fcmovnu xchg loope mov sahf scas xor movsl (bad) dec adc (bad) xchg and push push in test or or push (bad) ja jae leave faddl mov enter fst dec cmpsl adc fldl push push stos add lock sarb mov inc mov push in insl or repnz loop jae jnp jge lea addr16 cmp and scas jno inc jnp sbb sahf and push cwtl scas pop imul rolb es sbb sbb pusha jecxz addl leave ret pop jmp or icebp jge lock repnz nop in andl in in fcmovu sahf or frstor pop fldt fbld pop int dec push xor push faddl mov les lods addl sbb arpl xchg stc enter sahf fiadd mov fwait xlat sub and pop jns js out rcrl add lcall mov xor fdivr daa xchg aam jp lahf or in cld mov lcall test jno shlb (bad) je nop jmp inc out sbb fistl mov stc shlb add (bad) popa mov mov lea ljmp jb (bad) push js arpl scas pop (bad) repz sbb lods dec arpl lods mov inc fcmovnu mov loopne jae inc mov mov sahf lods jle cmpsl sbb out outsl rorb lock int3 dec test mov (bad) cmp js clc inc xor cmpsb cmp xchg lcall mov jmp fs pop ss cli sbb addr16 iret xchg clc push pop lds sbb xchg xorb cmp jg and add jge testb and pop testl mov jmp push (bad) loopne dec stos push lret sbb (bad) cmc inc negl cmp mov push inc or jnp dec rclb push dec pop pop lds mov pop mov test wrmsr mov test lods js xchg push add jmp pop out mov scas aas or pop pop in push mov iret fwait dec lds jg or mov jbe cmp add cmp lods mov push into mov movsb out lods imul call mov xchg fwait cs fisttpll test (bad) ja bound cli cmp nop (bad) je in push out pop push xlat mov lahf and and mov lcall push mov jno clc or dec or add and out repnz xor fs ret mov add pop in movsb clc ret push push in negl jecxz adc or (bad) xchg pusha imulb xchg jle int into mov cmp xchg add cmp arpl sub sti xchg push enter rcll pop (bad) xchg sbb inc lret scas ret ljmp into arpl xchg pop add (bad) push or cmc jp xor xchg inc data16 push adc aad aad and jg lock pushf jo inc dec cmp lcall xor mov fstl test mov jae xor sub mov jae push cmc rclb dec dec or sub in inc loop push push xchg xchg inc dec sbb cmp mov scas lods imul pop andl sub add xchg dec cmp lcall cmpsl mov aaa or adc mov add fnsave fisttp fnop dec bound jb lea dec xchg mul jg sbb movsb (bad) stos jmp fwait adc sbb fwait jno sbb loope in es jns lahf lahf cli test popf jno iret push outsl xor inc xchg add mov mov lods xchg mov ja movsl fisttp cmpsb cmp aas push sub xchg or sti and push mov push cmp fdivl add bnd jle cld rorl xchg lods fisub jle pop sub imul pop dec shrl pop fwait mov sub out imul and mov fsts dec fs test pop sti scas mov (bad) cli and jge scas push xchg jecxz mov lret or or inc xor dec dec lret insb push push mov sbb xor pop dec and jp push ljmp rcrb jb stc divb es pop inc add and mov cmpsb jbe dec scas push pop push aam sbb lcall js in leave aad mov sahf dec and fucomp rcll push add jno (bad) ljmp das js es out shr adc ja (bad) shufps in idivb pop xor add inc out repnz jns dec loop jle ss jns pop es sti inc fnstenv xor push and mov icebp arpl push push inc cld dec testl xcrypt-cbc cmpsl xchg mov jle imul mov pop outsl jg int sahf inc mov xchg clc fcomps stc subl pop jge je pop loope imul stos pop push sub pop in add cmpsb mov mov test rolb inc jecxz popa lods mov in cmp mov add cmc pop cmpsl out adc mov test loopne into lahf aas inc adc sub or jnp (bad) aam int3 push or je mov jg sbb mov mov and dec mov jecxz aas (bad) pop push inc pop and repnz or stos imul mov inc js or add call fild (bad) ficomp add mov xchg jmp xchg or ficoml fdivrs stc jo into test add inc sub sbb cltd mov pop xchg jmp andl pop sub xor fs xchg lods pop outsl jl fadds in adc out hlt sbb test insb int3 lods xor xorl jne push lcall stos fild les call push lret outsl or inc (bad) mov rorl fsubl sub (bad) xchg mov or xchg test cmp hlt jmp lods imul adc pop leave (bad) sub xor mov inc push add xchg xchg call xor pop fistl inc cmp and jecxz and mov sbb mov cmp lea push mov stos mov add outsl stos sahf pop jbe out test je sahf dec hlt mov push pop js dec aam and jl mov jb ja xchg mov (bad) dec in sbb test pop sub xor mov or push sahf aaa (bad) xor outsl out pop scas mov push push in bound adc mov aad lahf movsb cmp lock xchg iret movsb pop or and popl pop lahf ret jle cmp pop insb dec popa cmp jae inc xchg push and lods dec xor xchg lret leave xchg cmp scas insl mov (bad) mov jns xor mov pop int3 pop stos ret loope aam mov ret test arpl push stc shrb in cmp jmp adc insl (bad) divl mov pop lock (bad) hlt cmpsb test out ficomp insb jmp mov inc inc movsb push push sbb sbb pop jmp sub and or or fldcw out loop sub mov add sub shlb jg popf mov jmp jae (bad) (bad) out in sbb xchg je adc pusha popf sub cmp mov (bad) enter aas push (bad) sub ja lret jae mov mov fisubr mov fstl loope push jmp sets or jp mov push pushf fsubs lods lahf xchg sbb ss mov sub inc and ds stos mov inc jmp sarl pop push jo sub ds sbb imul fbstp inc cmp push mov or pop insl jg mov mov cmp rcll shll adc dec inc mov mov out xchg push lods jb mov xchg push lret js cmp lock test fldenv movsb stc (bad) fiaddl mov jns inc jle pop insl (bad) cmc outsl xor xchg and mov arpl jne push stos shl mov or jle dec jae sub cmp mov pop push mov out fidivl cmpsl dec loope in sub mov dec and mov or sahf add daa sbb or lgs sbb (bad) popf sub mov daa xor aaa and aaa sahf out and sbb cmc adc and sarb aam mov aam pop sbb fs mov push in test outsl push xlat ds sti mov push inc mov pop push push arpl in stc xchg dec and sub lea or and repz push test movsl jl mov neg cmp pop and sub cmp movsb jne mov adc mov adc inc mov push cmc cmp fldt repz sbb sub (bad) xor mov or imul xor sbbb les sub pop xchg pop mov and jle or fstps mov jnp adc inc xchg mov push mov outsl add dec sub cmp xor test xlat pop imull or aas add cmpsl or test iret popa xchg mov shrl dec and (bad) push cmp outsb scas or fcmovu pop sub sub aad dec xchg jg (bad) sbb cmc jge or xchg stos sbb inc and jbe mov push mov sub repz push std sbb (bad) sub (bad) fiadd add pop or mov adc pusha cwtl pop nopl add mov xchg cli mov jp or cmp inc popf xor pop adc sbbl mov cmc add xchg (bad) fnop insb ds or ja inc jb jge stos mov or sar test inc xor test xchg ret (bad) std into cli lcall or mov and mov shll dec mov jbe push int and clc mov xchg xchg or mov leave xor mov popa and clc lret outsb sahf (bad) mov fwait jecxz mov es or lahf or and pop push inc pop test into push sar movsl mov lcall push or rcrl xor je or in (bad) pop inc add in js push or insb movsl push adc cmp (bad) adc add insb addps push sub sbb add add icebp mov aaa or pop je js addr16 push (bad) cmp (bad) test jmp pop sub fs sbb in push call sub mov cmp lods ror (bad) xchg (bad) mov cli jmp mov test add sbb push mov lret inc sbb mov mov js fwait in dec mov and addr16 repz dec sti (bad) stos jg addr16 rol cmpsl stc mov jno mov cwtl cmp inc push insl jmp adc (bad) icebp or popf dec insl jecxz insb sub sbb lds mov jb cmp test add lods push arpl test xor in fistpl subl fldenv jl pusha cld sub cmc or cmc jo push in daa push pop fucomp sbb arpl inc enter pop hlt cmc fcoms cs mov lret add add loope ret neg addl inc xor adc ljmp dec add mov (bad) mov pop and xchg add pusha cmpsl imul cmp je pop daa push cmp adc push sbb imul out adc adc into imul outsl add add and xor fwait inc out mov fmul cmp mov pop xchg mov fsubrl rcrb mov into ss in jmp push add pop and sbb dec and xor push sbb (bad) cmp jbe popa push in pop xor dec adc xchg cmp push mov adc cmc pop mov xchg dec pusha dec jbe icebp lds int aam sbb mov ljmp ret pop mov movsl mov inc movsb mov dec or dec mov fnstenv mov fsubl fdivrs test xchg or jnp dec xor cld or or das xor dec test dec repnz js xlat adc call dec mov sti inc pop add mov push (bad) add mov mov pop (bad) xor movsl inc out dec in push push mov loop push les xor ret mov inc mov push mov sub pusha jle cmp push fwait adc dec mov pop pop sbb out fs lahf dec push ljmp dec sbb mov int stos scas test ljmp out mov jle and stos or mov adc rol insl repz mov add out scas push repz in cwtl add sti push inc addr16 inc cld cmp ss test inc pusha xchg or test ds mov push or bswap adc cmp add dec fstpt daa stos add arpl aam mov std xor sbb mov in gs jmp js mov stc add jg sahf inc cmp int3 push (bad) jp xchg jl fucomp xchg dec cmp or pop push xor jns fsubrs push add push push jg in push xor mov arpl in mov mov pop nop xlat cmpsl in mov mov sbb popf (bad) es call jmp pop jle ja push jg mov popa daa cmp and nop rcr cld shr repnz inc mov dec cwtl sti mov mov jmp xor into enter mov add cmp pop xor xchg repnz cmp inc push xchg nop sbb xchg (bad) lret or int3 cs mov jmp jmp mov or sbb mov rcr lods notl xlat mov sti mov flds sbb lds push sub inc data16 addr16 adc cmp xchg mov jno add gs add push jnp pop add mov pop cli es lahf cli sbb ljmp mull test cmp arpl sbb jmp xchg in mov movsl js fs cld dec loop and mov jb dec mov push lret inc pushf fwait xchg mov adc jb lock loopne enter jae ja mov out hlt rcrb sarl cmp js (bad) cli jg and xchg sub mov test (bad) jl mov icebp enter mov push in jb add leave mov leave into mov push or jbe dec (bad) insb adc xchg aaa ds les xchg pushf cmp adc inc jnp outsb sbb (bad) lahf mov pop out (bad) bnd lds out pop mov rcrl frstor mov xor jne mov sbb fnstsw sub xlat in adc scas or into inc cmp push push xchg dec xor lret cmp test daa dec test sbb repz test push clc cmp push jmp lahf jns test sub xchg inc pop and xor cld (bad) insl jne jo mov mov push push xchg movsl xchg (bad) fnstenv cmp mov popa or (bad) jmp mov jb lea push test or mov out cmpsl cmpxchg lods adc and push adc arpl das or dec sbb stc sbb adc add xchg push fadd imul pop test pop sub mov cld cwtl mov mov push dec int fisttp out scas adcb dec cmp push leave ret fimul mov add test mov lods icebp out fsubrs and mov outsb xor into jl sub mov outsb sbb pop mov mov sub fistp xchg das jmp bound mov inc mov fidivl lods pushf mov push or dec imul mov inc lahf icebp mov jp xor pop roll push (bad) mov push jnp pop push mov pop (bad) cwtl inc rcrb jb mov mov scas popa sbb inc mov out xchg inc mov ret adc fs or divb enter insl cmp or jne add dec jns ret loope mov outsl inc jmp sarb jecxz jge dec test dec cmpsl mov int3 (bad) loop leave inc lea dec add add stos gs idivb mov cld inc ds jecxz clc hlt jecxz movsl mov fnstsw mov xor or enter fidivr vmread xchg mov inc leave mov cmp mov in lock cltd out adc mov dec mov push mov dec scas pop jmp or adc sub inc xor xchg test xchg and loope lahf out inc sbb and jns pop cmp mov fidivrl sub add push loope loopne fdiv out push lods stc repnz xor inc add decl adc movsb andb aam dec xchg jmp cmpl pop xchg nop std jg insb in mov fsubrp data16 jl mov push cs or test sarb mov cld mov and sbb xor cwtl pop sub mov (bad) fcoms lret out mov (bad) (bad) call add in and push (bad) flds iret dec add or (bad) xadd cmpsl inc (bad) lret cs dec xor push push fwait pop pusha xchg mov gs dec jecxz stc fidiv push ret xor dec xchg loopne stos (bad) mov hlt scas std cld negb pop int3 xlat loop stos fwait cmp adc addr16 (bad) int3 xchg movb xor pop push mov movsb xor jae jp fldl int daa (bad) lods (bad) sbb inc idivl push ret iret and outsl int3 mov cmc stos notb sahf lret sti push push aaa xchg sbb in pop pop es sbb mov sarb lcall lds enter mov test fsubr xor (bad) inc stos pop jg pop ss cmp cmc lahf pop dec pop sbbb mov lret xor push xor mov or cmpsb or add lcall xor xor xchg pop add addb sub sub (bad) in movl push lret or fwait pop subl pop push lahf ljmp ljmp inc and or mov stc or push push mov (bad) fwait adc mov push push mov ret loopne mov pop pop push jnp je (bad) mov add sub cmp sub movsl arpl lods inc pop xor popa jae adc data16 mov ror stc orl leave jmp lret and in fwait dec xchg decl movsb aam clc push ficoml mov jnp xchg fisubr sub xlat rolb fisubrl jnp inc (bad) es out mov mov iret pop outsl xchg push int3 mov (bad) notl out jg (bad) lea pop pop inc push sti sbb nop testl andps inc das incl push sarb fdivr xor outsl mov into or fxch insl lret jnp inc in roll push nop in aaa mov mov out jle mov add xor push stos push cmp or iret stos je js cmp sbb (bad) stos xor adc cs xlat (bad) jmp or out and test cmpb inc test add mov jp mov push roll pmaxsw jae addl das in mov adc mov insl jle push lods push xchg adc dec add out push or insl jmp test fimull andb push add xchg push pop jb sub dec cs adc adc mov ret stos xchg int3 enter rorb dec pop shr xchg dec rol dec (bad) dec lcall sub and jp nop xchg jnp dec in test test je xchg cmpsl cs mov jo in push jbe jae mov sbb mov pop cmp jg mov outsl test outsb fnstcw dec test aas or push jnp mov je (bad) es pop cltd mov cwtl (bad) jp xchg pop test dec sbb orl jne into sub imull mov xor fnsave add ja iret mov dec bound and (bad) xchg (bad) pushf mov xchg adc imul inc lcall daa mov add lds nop pop xchg and sub fwait xor xchg push (bad) loop das idivb imul mov inc fwait mov int3 push mov in xchg (bad) in lret imul into fisubl sahf ljmp pop les in cmpsb int loope sub xchg sub add xlat sbb loope inc mov inc pop iret fmull (bad) out adcl mov cmp adc jmp outsl fstl xlat fidiv jbe pop leave mov lods (bad) daa pushf cmpsb inc adc out cltd lock jl mov ficompl xor ret push inc adc push mov sub or jb lahf jae xchg cmp cmc test mov xchg mov cmp mov and mov cwtl (bad) xchg dec and (bad) mov mov dec mov xor orl outsl out xlat adc mov lcall mov es test popf ret inc flds xlat dec lods xchg sti jle mov or dec test fadds dec incl insl mov loope in jmp cmp hlt cmp ror andb sbb adc pusha fmul mov lods insb (bad) dec aaa shrb and jno jge pop inc push fsubl or sub sub xchg and in imul mov cmc scas leave pop pop icebp bnd mov test mov cmc inc ret jge fidiv xchg xchg cmp push in mov add pop inc mov (bad) (bad) xor sub xchg adc jo sbb jne cmc push popf push call loopne jl xchg lahf inc nop cmp mov mov addr16 inc test rcrb jno push xor lock add pop rol and ds xor sub add jmp mov xor push jns mov aam pop in in xor gs insb mov or retw dec xchg xor mov pushf aaa mov xor cltd lcall or dec mov mov mov imul or jne dec xor sbb dec in xor xchg mov xor mov mov inc add mov fcmovb out and dec int aam int test pop and es cli in aaa in xor mov rclb inc ljmp and cltd ss xchg mov xlat xor lods popf adc jnp lock rcrl xchg xchg pop mov jo dec (bad) push pushf lahf int3 cwtl jecxz or setae cmpsl cmc sub out mov fildll ret xor mov sbb fs cltd pop sbb scas pop sbb jp dec lods and fildl dec add jbe roll dec xor sbb push push aas (bad) sti pop jb aam aaa jl sahf (bad) add and cmp mov aad sahf cltd out movsl xor sub mov sbb jno adc pop out jge mov ficom in or test movsb sub and mov and test mov fcomps push adc fcomi lods mov repnz popa test (bad) rol je lret adc imul js lret ljmp into or sar adc push ds sbbl sahf inc out faddl push movsb sbb sti (bad) push std sub jl lock outsb push das divl xor and (bad) imul mov and fwait jnp cmp arpl and mov jle push out or out push push subb adc out pop pop out mov lods adc adc imul lcall push xchg xor fcmovne xor mov xor mov gs xor mov dec mov hlt or repz lahf or bound aad cld sbb dec inc lods subl in or push dec cltd cld pusha nop test or cld pusha mov push (bad) cld sbb fwait movsb cltd jmp and (bad) repnz push mov jmp pop or cmp push cmp adc sub sbbl (bad) int3 jmp hlt sbb push js lahf or cwtl cmpsl sbb mov fidiv jb sub scas push xchg stos je mov loope hlt jbe inc (bad) cli in (bad) ja inc in test stos mov cmp jbe movsb fist xchg shrl imull outsb cmc mov or mov fiadd sub cmp jo ficom stos push jp jmp (bad) ret sti test sbb push push mov push sahf bound sbbl imul inc and push pop jo lahf scas orb pop mov mov push push nop sbb cmp push and lea add xor xchg mov outsl pusha adc loope in std push push mov pop or dec mov lcall dec sbb bound loop push shll test insl arpl cld aaa mov fisub jne (bad) and sti fisubrl fisub lcall and js pusha mov rcl test (bad) xlat cltd leave mov xchg mov add dec insb daa (bad) mov push call in pop mov loope xchg and cmp (bad) icebp push mov inc push ret cmpsb add adc and push in mov sub mov ret imul push sub jmp xor mov add push mov fstps xchg lods pusha mov fidivr in inc test dec lods ds inc aad sbb adc sub sub call loope loopne inc imul jp mov and sarb sbb fsubrs dec sub mov add pop fiaddl aaa shrl mov xchg cmp ret push mov sbb jle inc pop push and decl lcall into jg jecxz fiaddl call xor push add sub (bad) sbb sub rcrl ss push push add xor call jb iret mov dec aaa call xor mov cmp push jo ss or stos jbe jbe incl push push cli test scas push xchg jnp jns cmpsb lret subl rclb insl jb dec test sarb into repz add cs aas js xor rolb loope test cmp int3 sub push ljmp mov call fs sti cmc mov lods bound xchg push xor fiaddl ret out mov pop and inc cmp inc call mov fdiv cmp scas cmp rcll dec jne les int add inc adc in xchg mov mov arpl out jnp iret mov jmp test jae adc (bad) notl cmp test std xchg cmp sub pop lahf dec jp jnp xchg sbb adc je sarb hlt jg out mov dec fsubl xor dec jg stos push sbb ficom fdivr xor into pop add push jns scas mov call popa into lea mov sbb or call hlt (bad) adc xchg sbb in inc pop xchg mov in loop push jmp scas sub loope in cmp inc push mov dec dec jo jl add inc and cmp movsl icebp notb sub pop in outsl stos das mov dec fs fbstp or mov sub push mov mov add movsl jne xor loopne or add xlat dec jne push lods notb fwait popf dec xor sbb in push bound xchg or icebp fmulp inc adc mull hlt and cmc pop jno inc lods xor mov pop frstor (bad) xchg mov xchg push add adc hlt xchg push call fsubrl cli xchg cmpsb out outsb jae jb adc std xchg ds xchg mov fadds rcrl jge rcrl fwait popf jae inc jae push mov mov movsl leave mov jbe leave xor sbb movsb jo (bad) fs repz cmpsb cmovo sbb jp xor in orl fwait not add jl push push or out add xchg cld jl mov fwait and xchg sbb jle vcvttss2si iret (bad) shrl outsl outsb adc jecxz sub and lcall fmul (bad) xlat inc into loope rolb sti push dec repz int into xor jle adc or fwait sub lret lret call icebp or jne insb sarl scas gs iret mov mov jge xor jmp push addl pusha sub xchg sub sub jmp push lock jmp sahf push or pop jecxz (bad) (bad) ss push insl jecxz cmp test out mov pop mov pop negl cli cmp dec inc or scas aas movsl jne (bad) incl lahf xchg lods mov xchg insb add mov aad and fisttpll inc mov ffreep mov inc xchg into (bad) enter ficoml mov jnp and out cld outsl outsl jb shrb (bad) dec std sbb pop xorl jae aam std ljmp loopne cwtl mov mov jnp in in mov dec stos (bad) in mov addps cli sbb mov add adc mov jg rorl mov adc cvtps2pd jbe in push and fwait outsl icebp lahf lret dec sbb push das std add data16 adc jbe testl pop fildll cmp xchg popa fidivrl inc sbb loope adc mov jmp sub (bad) mov push prefetch or inc inc pop sub xorl (bad) stc leave add gs add test repz push xchg shr xchg jl mov movsb or and arpl fsts aad xchg inc mov mov rcr push mov (bad) sub jbe adc adc popf lcall aaa mov adc mov bound mov ljmp hlt push pop int add daa shlb aas inc test ds movsl dec adc call sub shl mov adc sarl outsb repnz mov imul lods jl pop js stos sub inc mov stc fiadd (bad) mov ss in sahf fwait das push sub push shl push inc add lock std leave fisubrl sub movsb (bad) jo (bad) mov jle out test mov xchg mov pushf xchg sub sub xor xor add dec mov mov (bad) rcrb mov cmpsl fisttp popa lods not or lea iret pop add xchg in out and nop (bad) inc js push sbb dec mov or hlt dec cwtl arpl test adcl and push cwtl sub and loopnew loop (bad) imul xchg jg xor subl and mov fdivrp and aas sub push cltd in mov xchg add jp jg call and lds mov mov mov adc pusha adc add xor shrl sub negl lds xor mov dec fmuls inc popf mov repz add push dec xchg push fild popf pop lcall in xchg scas mov imul roll enter push sub lahf sub aad call inc jmp dec and data16 mov adc aas ljmp adc push xchg lahf fsubl push mov push fcmovnb push adc mov xchg testl fisttp mov into ficomp sbb or and ljmp clc mov pop push movsb mov (bad) in enter xchg pop movsl std outsl sbb mov out mov dec xchg jne inc xor enter lahf cmp inc inc pop add sarl in mov sub (bad) ret mov add popa ret mov fbld push add sti inc pop std mov jecxz loopne cld push pop pop add xchg mov mov push cmp inc out adc jne in (bad) cmp leave lea push cmp movsl and jge pop sub jecxz subb xor lock mov xor stos cmpsl fwait popf cmpsl xor xor inc fcoms inc imul lcall out dec roll mov and xchg scas or push pop cli push push in movsl xor rorl in daa mov test mov lds xchg push sbb jo hlt cmp sub adc fcomps sbb mov pushf stos aas daa push jmp inc jle lcall arpl jae mov mov pop sahf jg push lea mov out or mov movsb mov cmpl pop int dec xchg and daa or fst outsl and std enter fsubrs fidivl into lret fs adc mov jmp xchg or dec lods cmp js cs sahf sbb xchg scas sub arpl cmp cmp dec jbe ficom test pusha insb icebp push xchg inc or jge out push and xor push aad jmp test mov and push inc push in shrl xchg jg,pn aad mov in in adc mov mov adc inc xchg fldl and daa jecxz in push xor nop or adc add jg je in ja lods adc call pop popf xchg dec push scas dec cmp mov pop add and jle mov popa pusha and push test cmp (bad) mov cli mov jns cli inc pusha jns jae add dec fucomip rcl popf push (bad) ret jle mov adc mov mov shrb pop xor xchg and dec fwait or fucomip je mov push insl ret dec pop mov js jb cmp aas hlt les mov xchg jmp fisttpll test mov imul outsl notb jbe (bad) aaa xor jecxz mov xchg or rcr mov xchg pop pop pop test test mov fimull xchg aaa jb push dec inc lret (bad) stc movsb push popf sarb push mov mov mov pop out dec jecxz cmpsl jle clc jnp ss int jb data16 lea je add shl adc xor int inc aad test lret pop (bad) je jae inc dec cmc pop or sti push xchg adc xor mov lret sub push (bad) js test xchg cltd mov mov gs xlat mov jne mov xchg fiaddl mov scas (bad) mov xor pop mov (bad) cmpsb das outsb adc pop inc sbb stos push dec and clc xchg jne cltd stos mov xchg jp and jmp aas cmp and outsl scas lds mov std (bad) push mov mov out (bad) mov aaa push sub repz dec enter push mov into popf test test jae adc xchg hlt (bad) ja mov or mov mov jae mov into push out rep (bad) mov dec test sbb flds jl push dec fs dec adc sbb aaa pop sub stos push jl mov pop push subl mov adc lret cwtl fwait ret inc fdivl sbb icebp pop cmp std lock loopne in jg lods cmp push xchg outsb dec jmp mov push ljmp mov dec cmp cmp mov xchg test int3 mov sbb pusha nop inc pusha sub call lret clc jne in mov lds sarb and aad or adc jnp lcall scas (bad) jmp xchg dec pop cmpsl adc inc inc fistl mov nop std daa sbb jae sbb int add xchg in ljmp bound nop dec pop jmp movsb or mov sbb lahf jae imul sub pop imul xor and inc fiadd and mov roll ds dec adc mov movsl rclb jno xchg pusha dec sbb rolb push sub (bad) xlat add cmp sarb call test jp (bad) jb xchg aaa aad jbe xor adc adc pop sub rcl (bad) jne lcall mov ficom mov push insl into cltd adc sahf in ret bound daa fs nop (bad) (bad) rcr js fwait mov ja inc movsl adc xor ss insb sbb ret push inc lods inc popf inc push imul (bad) scas push xor ds shrl lds ret mov push xor sub push ficompl mov mov icebp ljmp int3 (bad) mov ret add cmpsl out mov sub fnstcw mov faddl push (bad) mov or daa push lods or xor std les mov into push mov call lock sub push insl and js add sbb push fdivrs jo std pop and mov jo sahf jns lcall pcmpeqw push mov jmp stos mov dec lahf icebp outsb jns cmp pop pop dec ljmp scas xor fsts push (bad) leave repnz aas cmp pmaxub test mov cmpsl jb sbb sbb rorl cmpsl aaa mov mov in lcall movsl adc dec into into mov mov stc (bad) mov aam lea jg ret lahf fldt dec dec cmpsb cmp ret mov out iret gs sub in test xchg push int xor int3 cmc jge add call add loope mov dec data16 pop sahf mov push jnp xchg push clc cld fsubrl dec xor cmc cmc fwait stos cmpsb mov cmc mov dec and jecxz fdiv lods lods (bad) and cmp imul aaa cmp ficom clc scas inc cmp bound mov out dec pop push in scas aaa mov sbb and jae int (bad) cmp or mov ja cmp gs int3 mov shrb lcall (bad) push jns mov xchg pop inc pushf aam cmp dec scas and in in jae xchg aaa imul xchg jmp out jmp (bad) xchg dec cmp push xchg fidivrl xchg ret (bad) xor or pop (bad) repnz push les cmpsl xchg nop fistp mov cmpsb add (bad) jbe sbb sbb rcrb and shll dec out aad push jmp jmp div subl mov pop lea dec fidivrl fwait lods push push mov shll js ficoml pop sub loop stos andl mov fldt stc (bad) mov lods lret imul adc gs les mov mov jecxz inc xlat jp pop jae js std pop idivl daa (bad) inc call (bad) xor in and cltd out fdivl sbb add mov jae repz and stos jo cmp lret (bad) es fdivl or rclb dec fstl out pop test (bad) jb mov lret or add xor or jne jae push cs lock mov cmpsb gs adc pop adc dec je mov jbe push jecxz and cmp rcr push mov loop leave push mov and inc rcll mov sahf xlat mov mov mov push xor push mov inc call popf cmp xchg mov pop push dec loopne ljmp sub or cmp xchg inc add or mov or and (bad) out roll pusha or xor aam nop jge pop insl mov outsb adc sbb jg pop xchg mov enter xor and daa cmp or imul fistpl cltd and test pop sub sbb mov sahf inc push dec xchg mov sbb pushf jns adc push push ret test icebp ret mov into test adc lcall popf or int std sti or and and cmp and pop shrl adc lret push and addr16 mov xorl and fiadd mov jg and jmp mov mov sub pusha test (bad) aam pop jg clc lret push stos push push sbb mov mov fwait js sti aaa and out add xor shrb std adcl jae jb sub mov cli rcrl js aaa mov dec xrelease or pushf outsb fcoms push push je push in inc fidivrl or dec insb stc cmp iret jge mov sbb pop imul pop jge test lock inc xor clc mov jne (bad) pop mov leave fnsave rorl push mov sbb std or pop xchg and negb dec ficompl (bad) frstor xchg dec or inc sub jecxz out jns popf mov push pop insl mov mov mov popa xor enter inc test cwtl or sbb sub xor xor imul push mov ljmp fs hlt sub jmp iret fildll and mov std lret jg fcoms jle test mov movsb inc fwait popa jns adc and sub xor fs cmp test (bad) lock (bad) int3 inc daa jg pop (bad) psrad or lods push sbb movsl add data16 push jl repnz and ret sti bound popf sub push xchg cmp dec jle fnsave cmpsb cmp dec inc push mov push pop jb adc cmp sbb sbb add jge ficom fild jmp sub mov push int3 mov cmp jg test test aaa adc or dec je xor mov popf jecxz jae insb xchg daa lea dec stos int3 pop xor in repz add push mov push cmp mov push push sbb or nop fbstp mov lcall (bad) cmp sbb mov nop or pop in fadds insl push xor aas in inc sahf fwait lcall rol xchg xchg in (bad) (bad) sbb add push add (bad) fcmove xlat cmp xor cmp out pop xchg cmc scas stc jecxz gs and adc loopne sbb imul ja,pn into arpl sub es push xor add fsubs inc pop dec movb lds cmpsl lret jle cmpsb push bound sbb insb mov test push outsb and or (bad) lcall add add jl test cmp xlat out (bad) or cmc lods xchg inc push cmp shl mov pushf lcall xchg jp fidivl adc push lcall xchg sub notl jbe scas sub pop mov popf data16 xchg fs les adc sub xchg jnp xor (bad) aam jecxz insl fmull lea mov xchg or pop inc push xor rorl fdivs mov notl jo ds andb and out sub lds (bad) ffree pushf popf fcomps mov add inc (bad) pop jmp shlb aas mov add push jb pusha int3 sbb lods pop pushf add cmpsb or je add lods xlat fstps adc jo mov outsl stos or jle cs bound sub pop mov orb adc sub or and and stc mov sbb repnz push daa and xor xor jno outsl fs enter scas mov dec pusha ss and insl xchg clc inc stos sarl sbb push mov call stos call inc push cmc pop push xchg in call push in icebp add inc loopne das out add jle lahf cmc test fildll cmpsb add mov adc dec (bad) xor into (bad) bound (bad) cmp cmpl cwtl ds js and out lds adc daa xor adc rol jo sub ficomp repz adc ds mov mov sbb mov arpl outsl mov pushf ret cmp mov xchg dec adc pop fwait lock pop jne nop dec add sbb into jge xor adc push sbb xchg je xchg jmp mov mov mov imul leave sub pop xchg and lock inc loop mov popf inc loope int3 xchg pop or sub mov adc leave fwait jns and sbb dec push movsb sahf push ret jne inc sbb das fwait inc pusha jno inc (bad) pop jl jp add jnp shr add pop sub mov add js movsb popa rcrb dec push and std xor pop (bad) jge dec iret mov insl xchg sbb xor mov cld (bad) imul movsl jne adc cltd mov push push jmp push mov mov dec sti xor mov (bad) mov in in jmp scas or or (bad) lret popa xlat add adc movsb push insb hlt adc sub adc pop add scas inc sub push fsubl (bad) pop xchg sbb push add (bad) cli nopl dec inc daa jns out lret movsl cld arpl push in rol cmp dec loope pop xor jge fwait mov loop jecxz imul fwait and xchg inc fbld xor or jge inc cmpsl loope or add nop into cs mov push pusha test rorb imul sahf in push mov lock jne imul xor mov or mov inc and pop dec sub clc push mov pop aam xchg rclb xor sub int3 fisttpll pop or aam test sub orl (bad) jb int xor imul push (bad) stc test add mov or lcall stos mov in sub dec in cltd jge jecxz,pt rolb movsb fldenv xchg out mov mov inc cld and pop jnp pop xchg pusha mov push cmp and ret push fildl adc sbb fistpll inc push cmc (bad) int3 sub inc sti bound and pop stos leave shl xorl rcr int into fild add sub orb cmp in bound je lods rorl cmc cmp jge imull aad and addr16 insl lods gs test outsb mov in out jns (bad) jg dec and test or lahf xchg enter cmp cmpsb data16 pop dec cs jbe xor mov jne ljmp repz hlt dec fwait std cmpsl test mov iret push fisttpl addl sti pop sbbl push sub out hlt (bad) cli lods sbb pushw sub mov shrl xor xchg and push fidiv into (bad) das pop inc repnz sub js sbb mov mov testb jo jmp xor addr16 out xor repz push jl in adc inc shrl jmp ret popf mov push repz movsl (bad) test movsb pop hlt or icebp add cmp out divl jl hlt push fsub (bad) xor cld sub lcall xchg push dec out std test push call in and cwtl popa pop pop inc mov enter add jnp mov fildll mov xchg ret push lods popf cwtl mov push gs mov mov add cli movsl mov push push cwtl aas int3 mov lds xchg leave add (bad) movsb and xchg loope mov enter out insl js int mov insb push hlt dec gs (bad) arpl fcmovb dec arpl testb test pusha xchg jnp xor test loopne fistpll adc mov gs push fwait shll stc aad in push add inc mov jnp int3 nop imul add sub movsb sub popa popa ljmp sbb xlat jnp xchg add inc push sbb stos std and xchg lods imul in (bad) mov (bad) in cwtl (bad) (bad) js ljmp mov leave mov and ljmp jno les inc xor mov and push xchg dec sahf test pop sub dec aad or lods xor or ds mov pop cmp or cmpsb sets (bad) test dec xor and out movsb xchg cmpsb xlat add adc imulb (bad) push movb sub push pop jp iret push push popa mov rclb push in call fsts add add (bad) scas mov push sbb int jl pop mov adc pop or les fldl test xor lods aaa xlat lahf or mov dec stc mov popf xor (bad) cmc loopne fidiv push mov dec lock mov (bad) or inc lcall fsubs jp adc cmc push lods xchg dec mov in lock scas push cltd call fidivl add (bad) jp mov and push pop aad test sub ret pop ret push mov adc je xchg cmp outsl mov imul cmp push sbb sub push repz lods add mov test mov insb (bad) cmp out sub leave rol pop mov aam jg std jb dec mov scas adc pop jo inc and mov inc stc xchg jp xchg fld sub mov sbb mov imul cmpsb or js and push fst and arpl pop mov ret or pop lods rorl aaa test loopne roll pop xchg mov mov repnz imul mov add fisttpl sub push jle call (bad) bnd les rol cmp bound lock cmp push and cmpb mov xchg (bad) jl popf ffreep jbe inc cmpsl and fs xchg scas mov les mov xor add orl fstpt push cld (bad) sbb inc and rcrl fldenv pusha pop sahf aas dec mov rcl lods push (bad) lea je mov iret addr16 lahf addr16 sahf hlt and pop aad inc movsl fistpl push fxam cmp xchg outsb arpl insl or cltd xor xchg outsl sub nop mov sbb shll shl bound sbb jb jbe in mov es loopne iret adc and xchg sbb sbb adc pop fnstsw (bad) jo insl data16 mov cmc push leave outsb outsb push test jno mov jo jb,pt mov lds stc mov in into mov (bad) fucom mov rclb arpl xchg hlt mov cmp mov lock mov pop xchg lods cmp pop fldcw mov jne xchg push pop jnp cmp test fmull lret out cwtl bound cmpsl xchg push shlb mov push jle pop dec iret pushf jbe mov sbb mov and outsl (bad) into or inc pop pushf mov scas test call cs jmp xchg cmpsb mov cmc outsb lcall fcomps cmc jmp loop mov loop mov dec inc data16 xor cs mov sbb jle sub cltd loopne add scas pop add xor push add cmp ljmp mov mov mov push xchg sbb or or cmpb cmpsl cmp sub stc xchg inc shrl movsl in mov lds aaa loope sbb ficompl test sbb rcrl fbld jle jmp push mov mov stc jno or sub cmp jg pop jne inc or fcomp jne insb aas (bad) rcll adc les cwtl nop (bad) fcomps ret pop inc stos mov fwait test clc push jne es push xor push mov add push neg xorb pop enter cli (bad) sub loopne sub es test mov mov pop and mov mov dec xchg icebp sub mov mov push (bad) push mov xor lahf aas xchg mov dec xchg outsb outsl or mov adc rol push (bad) bound jbe inc stos in mov push ja out (bad) loop inc xchg movsb xlat add mov pop inc and cli rclb fcoml sbb aam jno push or stc push pop lds adc loopne lcall push xchg inc xchg cmp test lds loop imul push xchg negb sbb cmp stc repnz dec cmpsl outsb lcall sub cmp or mov adc add or test pop movsl mov mov aad test cmp push cmp inc aaa or jo shrb and loop adc fcmovnb aad push pop js ja pop mov push cmp sahf neg jmp call mov pop and into jne push ret jnp iret sub jb push pop imul stc js out adc call std cmp mov dec or mov aam fcoml dec imul push sbb mov or xchg je int xchg xchg push xchg cmpl enter inc sarb scas inc arpl push and mov fwait and mov xor mov mov jg (bad) sbb insl int3 mov cmp dec stos popa movsb push imul iret mov cmp dec and scas cmpsb dec pusha sbb lret or adc or les xchg sti lock scas inc mov pop dec jbe mov hlt push lret dec dec es popa mov cmp imul or ja cmpsb cli js xchg aam in iret xchg xor jp mov test cltd sbb jb roll clc lret cmp hlt cwtl lock data16 pop mov push sub ds or (bad) pop jl dec pushf xor enter enter cmp sub test in (bad) cmp imul test sub (bad) cltd or lods out mov std xor shlb dec sbb push mov insl mov push in incl cltd pop mov sbb sub in push rolb and push ljmp cld scas and or push adc and push jle xchg sarl stos add sub pop sub orb add xchg jb cmova rorb add rcrb aad and mov sub (bad) mov pushf xor push ljmp lods jo pop test dec dec lahf int3 data16 movsl rcrb adc nop push loopne mov add cld or div test dec push mov ret je das adc mov inc cmpsl xor mov mov aaa jg xchg mov aaa push adc lcall push xchg jno (bad) prefetch or mov inc sub xchg xchg subb out jecxz enter dec js aam sti insl xor lret (bad) push imul add xchg push jo daa push ds shrb cmp popf mov or pusha aam addr16 lea ss xor mov lahf cwtl adc (bad) enter fsubl adcl mov push push loop out daa dec jbe jne cmp lock outsb mov push pop inc std sti push xchg pop sti dec jo mov (bad) (bad) int jl mov ffreep dec aaa (bad) cmp xor fbstp hlt scas push data16 ljmp movsb add in leave mov jns pop push push inc push test jne mov mov dec push test xchg xchg push adc push mov das dec les inc bsr outsl (bad) or hlt xchg xchg dec push jne (bad) bound pusha sahf leave scas cltd inc dec jmp xor push mov ljmp add jae cli das mov adc ss jl fisubrl insb arpl pop mov fistpll rol lcall shl and movsb sub jno sbb inc mov sti xor dec lcall (bad) ljmp cmp stos nop jg mov jge sbb mov std xor mov mov adc cli rcr mov (bad) mov je xchg push loop add push mov scas dec sub popf out nop mov loope ss aad (bad) stos jge lea jge (bad) loope xor popa fdiv stc xchg sub and (bad) ljmp in aaa sahf jge lahf xor xchg sub push cli mov push hlt add cmc loope jns cmc dec xchg or sbb sarl orb lahf pop idivl xor out stc adc push bound cwtl int loop jns cli and hlt add addr16 hlt dec inc cmpsb divl fs xchg push (bad) mov aad xlat sbb xor es xorl mov in aad cld add mov mov out das sub enter repnz fdivrl jbe push or dec pop adc mov xchg push int3 pop imul adc push mov jnp sbb cli inc dec xorb lods xor pop fbld cmp out lret jno les pop jo xor fbstp hlt rol sub fidivl xchg sub xchg sub push mov jle mov inc ret add rolb push (bad) pop or aam or pop mov jl mov and xchg inc repnz je xchg cmp cmp lahf pushf lret dec mov int3 ret fisubl sbbb jb movsl or jle paddsb loope mov or shlb fldenv movsb adc dec cmp sahf sub sarl cmp push jnp imull rcl insl jmp jecxz or add jl inc mov lahf sbb fistpll or xor mov adc cs inc imul or sub cmpsl sbb mov mov or fidiv loope xchg pop push mov int loop pop lahf push jno xor movsb scas (bad) scas jmp or ljmp inc mov ljmp pop push mov into fimul out aad inc inc sti xor jle repnz cmp and or push add jnp pop out sbb mov jnp mov mov pushf jb shrl out dec in sti fidivr fistpll insb push aas add ret mov xchg mov rcl jne xor test lret or cmpsl loop mov mov jecxz (bad) and mov xor addr16 jno loope sar rolb stos adc jge dec mov pop adc mov sbb (bad) xchg cwtl inc sbb jb loopne fwait aam or in out xor lahf cmp rcr jo dec cmp loop mov jns mov leave mov cmc sub push or das imul xor fstp roll jecxz in jb inc cli imul xchg jp imulb iret xchg fs xchg pop pusha out (bad) lcall add inc jbe jmp inc jg ds mov xchg inc (bad) rorb sbbl outsb stc test test sbb int3 adc je nop mov push jbe xor mov repnz mov pop lods lock xor mov sti mov hlt mov sbb test lret movsb mov cmpsl int dec (bad) mov add adc adc xor sbb mov jmp test xor jmp int mov loope shll mov scas mov gs push fisubl xlat into ret or mov mov rolb or ficoml out push cmpsl sub add mov xlat insb jnp xchg subl adc les inc dec orb jb mov insl and adc lahf mov jne mov or test lea adc fnstsw cmp jl mov mov pop iret std sub sub mov daa aaa pop push popf inc fwait sub stos jmp shlb arpl add mov cmp sub lock jae push fimull and mov test dec out lods lock test int3 fcomip dec cwtl adc test or push xchg sbb mov dec int3 faddl scas cmp gs lret cmp sub xchg into cmpb jno push aas gs cmp or fist (bad) pusha inc jl ret xor jno (bad) gs cli pop les popf sbbb add cmpsb adc gs add mov jb roll enter mov xchg sub mov push add jns pop jmp pop leave push lds (bad) sbb and mov inc sti adc pop and fadds jg and push les sub sub xchg into add rcl sbb addr16 or jl mov xchg pusha (bad) mov mov test fbld cmpsb lods lock jmp and test lea mov insl rcl pop dec mov fild xor fwait sub insb xor jae aaa mov cld icebp mov (bad) jne mov mov push rorb outsb ds popa roll faddl sub push xchg fildll (bad) mov push jb enter mov sub jge mov dec jecxz (bad) xchg cltd dec imul roll mov add mov and icebp or jbe pop test push add out or rcll into push dec pop jb cmp mov inc sub or xchg adc mov xor mov js inc pop lahf mov shll and pop xchg sbb mov pop and (bad) stos aaa jno lahf push fsts push scas mov pop (bad) dec xchg mov in mov mov aaa (bad) scas and and xchg lods out cld mov cld insb add xchg test push (bad) or push xchg movsl mov or xchg mov (bad) jb sbb outsb xchg shll or or aaa jnp sub sub ret stos divl pop popa and mov rcl imul outsb popf mov out sbb or add fs fwait outsb xor or pop or inc adc std shrb leave out mov ljmp xchg jmp xchg shll push inc insl outsl fldt (bad) mov adc jmp mov adc ds test add xchg push (bad) ret and and int3 or call enter sbb cld push nop sbb xorl jge mov mov cmovae mov movntps pop mov div mov jecxz loopne insb gs cmp jne cmp pushf rcr xlat adc aad loope and mov push inc jmp xchg mov and js out ds dec insl jge out into aaa cld cs sub mov push add push int3 stc ret std cmp xchg cld xchg jne (bad) or jecxz addr16 mov adc ret xor adc push add lea push pop dec push mov outsl fdivl and das ja daa mov sbb test cmc out out jno test gs lock insb mov aam jmp cmp lret mov cli xchg xchg adc xor ljmp mov mov mov pop or movsb push jmp jp add lret cmp pop add out dec shlb ss lcall int3 les ja dec mov cmp inc (bad) insl dec dec (bad) je or out push loop jne sbb out call insl push pusha sbbb (bad) jae sbb inc jae mov iret jnp cld (bad) pop scas xchg subl mov push subb mov hlt mov cmpsb imull or imull add push jbe pop xchg cmp xchg jne fs test (bad) sbbl cmpsb mov jl and test xchg sbb mov mov test mov les stc out pop and daa (bad) aas mov fwait out and je adc icebp aam dec jnp adc out das sub jp fbld lods stos sbb xchg cmp bswap fs lods sti dec mov inc loopne pop xchg push pop (bad) mov sub inc xchg jbe fcmovu loope cmc enter adc jle pusha rcll adc fnstenv mov xor dec (bad) mov in decl out push sbb add pop mov mov pusha int mov aad add repnz hlt dec bound shrb cli xchg or mov pop dec push adc push icebp push mov jb pop inc imul dec inc ret push ret xchg mov cmp sub icebp cmp mov out xor aas cmp xchg mov pop test pop mov mov insl push mov negl (bad) xchg fnstsw out jmp loopne jecxz negl cs jl andl imul pop sub lea and lock inc mov loopne sbb jmp leave fiadd xor nop mov xor mov icebp cmp out idivb sti pop dec insb mov xchg or adc push call jmp ret xchg xor pushf in fwait shl pop ret inc xchg mov jbe dec out and in int3 sub add sbb test (bad) arpl sti les mov mov add inc xor pop mov leave mov and out (bad) xor std push pop cltd xorl push nop cmpsl imul nop xchg xor and jl xchg push and sbb xor lock insl fcmovb xchg push push in lods pop and or adc rorl xor fiadd mov xchg xchg daa js dec loopne mov fst inc pop jno movsb mov mov xor dec pand jb mov mov mov mov lds into sub jnp add popf push dec fisub enter stos jae cmp push push movsb adc int jo cmpsb pop scas jp outsb scas mov je jecxz xchg out sbb out or cld sahf xchg std cmp or jge and lret or inc xchg mov dec xor ficomp xor jae les mov inc sahf push outsb adc or in cmpsb test jmp cmp sub rcll pop jmp fmull test or icebp xchg shrl jg in inc pushf jnp fstpl neg sbb mov fidiv push jno ja out movsl add cli xchg and sbb dec sub test movsl or shrl jb push pushf cmpsl sbb push jmp cmp test icebp js les stos sbb and ficompl sbb mov arpl pop mov mov fidivr mov sub (bad) jo inc pcmpgtd cmc inc (bad) mov pop test imul aas cmp lea in lcall mov mov and bound in test inc out inc push aad inc pop into mov inc xor nop aam repnz add mov xchg add outsb es mov and into ja int3 test out xor jp rorl pop pop sub pop in mov and or lea lret repnz lods lock aas xchg js xchg jb std leave mov aaa clc add and inc xchg and icebp jae push inc repnz movsb xchg decb and jmp dec data16 mov js mov loopne sahf or push mul (bad) aad jecxz mov aas int sti and repnz fidivl gs rorb fstps daa dec adc inc pop add jp fidivr js enter arpl cmp xor cmp push mov int3 xchg inc mov jp pop enter add ljmp lods pop cmc imulb mov popf push adc jno movsb les sahf leave fsubs repz loope int3 cmp jmp inc pop or dec mov jg jae cmc std xor sbb ret movsl cli or push hlt (bad) and gs fcomps out imul in xchg icebp dec in mov xchg test cmp loope out pop xchg ficom fistpll sbb (bad) and movaps stos insb sbb mov and aaa and add push loope jnp loop out mov jg leave fldcw mov cmp sahf int3 imul fs dec pop xchg push jecxz sub pop lahf jg rclb mov call cmc jo mov rcl test xchg dec jmp in mov popa xor nop mov dec mov in push iret aad xor mov add pop push popa (bad) mov xor nop mov lret sti (bad) sub sti xchg or sti or in add push faddl aaa inc orl xchg test rolb outsb sti adc (bad) clc dec jmp dec mov or scas or mov seto mov pusha gs dec mov stos xor repz dec xor jle cmp testl mov aas mov mov sbb or inc xor push inc mov loopne fnstenv movsb mov cltd sub ficoml jo xor aaa mov pop push lret jo aam stos sub xchg lods sbb xor test (bad) scas sub test in (bad) (bad) jmp xchg lea xchg mov sbb leave inc or (bad) and fs mov pushf add mov xor cmp xchg in ret lcall mov and imul adc shrb cmc fcomps jns in sub sub xchg push lods adc jge jae inc mov iret cmpsb cmp aad sbb ficomp (bad) ret jnp fwait mov dec data16 sub loopne push out jmp mov ljmp negl stc push dec lahf add mov out shrb sub into shr data16 jle int3 or dec test jb or jg and fmuls outsb or (bad) dec leave mov out xchg pop js sub mov inc imul sbb jmp lcall call cmpsl repnz inc orl mov lcall sbb or and rorl mov lea into nop arpl mov cmpl iret sahf fdivs add pop mov dec cwtl mov push push pop dec pop lahf out cltd (bad) sub stos je jp xchg push inc int3 or jg mov jns gs rclb outsw leave dec add test cmpsl in add jge mov cs aad sub cmp aas mov cmpsb add inc cmpsl inc lret jmp rcll jns cs or xchg push push repz lods sbb push jmp sbb loope adc ss sbb and mov sbb lds mov aas (bad) push ss mov or mov xchg push mov pop add cli rcl aam push lahf stos add lds jno dec js std or dec lods daa inc icebp and add sub mov repnz push out jecxz pop mov test jno out sub lcall mov and lea cmovae into loopne push add repnz push into jge sti mov punpcklbw dec sarb or inc in pop stos xor repz mov or loope mov xchg mov sbb imul pop mov mov push aam inc nop or (bad) gs sti pop nop xchg int enter jge (bad) push in cmp sti (bad) out popf cmpl adc dec lea xchg push push mov push (bad) xor nop cmp adc outsl mov cmp sub dec lods push push mov data16 aad int3 orb or inc add cmp fwait inc dec dec sbb dec insb mov or div mov inc xor repnz (bad) test fildl fimull aas cmc dec or scas jecxz shl aam int jo iret jno and and ja inc or cmp enter fisttp inc insb test leave sub cmc enter mov inc scas mov (bad) xchg sbb adc loopne bound test lock lea and insl fist in mov notl sar inc clc cli cmp jp punpcklbw in pop mov xchg mov mov insb call testl insl ja rcr mov popf pop xlat ret outsl xlat jb jge xor sarb adc sub in loopne out pop and xchg sub fwait aam popf ss scas jbe hlt aas stos jno imul xchg and (bad) mov adc int cltd cmp mov push rep cmp jmp sub call mov fildll pop inc nop dec push jmp ret or ds cld data16 frstor stc test push inc or clc das hlt sub and das popa xchg xlat push shrb sbb ja jo xor sub lock negl cmc xor cld popa nop sarl cld movsb xor jecxz aas out insb pop stc fwait or call sub cmovbe jns add (bad) je add gs rclb mov sbb cmp pop push fidivl sbb je lahf jecxz fsubrp and or mov insb les sarb sub scas cmp pop push les es (bad) xchg push lods aad out jbe leave cltd add or cmp lret out mov ret mov sub pushf flds loope sbb scas cwtl jo pop inc fsubrs fildl inc jg icebp (bad) and dec sub (bad) mov call push sbb push insl mov pushf aam xchg mov dec (bad) (bad) add insl stos adc mov xchg stos add fldenv cltd cwtl aad fnsave and push sub dec loope es jmp sti add pop dec mov push out pop sbb push mov sahf fadds fs and mov ret inc outsl cmp mov fldl lret hlt out or jl xor pop (bad) bound leave loope js mov scas ds fwait ret mov into xor lock xor cmp fcmovnb outsb xchg xchg int3 lods mov mov (bad) addr16 push dec mov daa and lret pop stos aam jns mov jae mov push imul pop pop dec lret ja daa scas jge jmp pop decl icebp push or xor cmpsb mov insl sub pop add xor inc mov xlat mov dec add sub xor jae fsubrs and insl bound push (bad) and sbb leave stc mov jecxz fcom cld cltd lret int3 jecxz push stos (bad) lcall push test mov addb cmp dec xor (bad) mov dec xor push (bad) repnz cmp and adc jmp imul push cmpsl xchg lea negb lahf and add or fs test std out enter dec stos into push or dec jl xchg sub sbb dec push jns js jae push scas test aam gs sub fwait mov inc popa fdivl into xor adc cmp movsb fadds pop lds sub sbb lods push cs lret xchg loope fistp sahf push loope mov scas dec test mov dec fcmovnu mov imul jb jp mov lea arpl mov xchg rcll mov popa mov jl sbb into int3 cmp or pop rolb lods mov in mov lret aas and call cmp and cld in sub clc ss xchg xchg mov aaa negl icebp or outsl xchg lea es xchg mov mov (bad) cmc call sub sbb xor pop scas mov push add (bad) out cmpsl arpl int3 fimull mov es inc sub xchg xchg sbb inc repz in mov aad (bad) scas and xchg adc pusha pop cmc repz (bad) imull add test cltd adc fs popf mov dec shrl cmp sbb hlt sbb insl and jecxz aas or dec pop (bad) mov mov fimull sub or xor and fwait mov pop xchg pop insb xchg out repnz jne ficom and jle outsb and push and push iret (bad) pushf lods mov outsb push pop jae jl stos sub js aaa push stos mov test popa outsl movsb sarb (bad) mov inc out push (bad) fstpl xchg adc sbbl pop pop jle mov (bad) mov xorl stos (bad) cmc mov jnp lcall xlat inc aas push repz inc bound jge cmp mov iret cmp mov fdivrl pop adc (bad) dec jge ja pop outsb aaa jg into adc jg jg aam push loopne add or mov adc xlat xchg push stc sbb (bad) pop lods push test in cmp pop mov repz mov js fs (bad) push lcall lahf jp into icebp or xorl push js mov cmpl js lret andb dec mov andb push movsl repnz arpl mov lcall dec lret mov sub addb cs lcall xorl mov sub dec xor xchg cmp loopne loopne mov cmp inc movsb lods aad push ja adcb out fdivr shl sbb jmp ja xorl sbb arpl dec sbb mov inc jg dec jo pop xor mov push lcall jns rolb out jbe enter lock mov jmp mov mov pushf mov sbb scas jecxz pop ret test cmpsl push nop aam xchg xorl insl mov int3 dec sbb pop jecxz mov push hlt test fldenv ss push and adc cld loop jbe jl jne pop adc enter mov rorl or sti dec les push pop add aam iret add iret add aad pop cmp xor jo sbb mov ja mov lods jno fwait push (bad) hlt pop cmp (bad) push xor lahf mov sbb loope mov daa out sub idivl xchg sub and (bad) xor lahf xchg pop xor (bad) aam xor (bad) out shrb push xor xchg in sbb packsswb fs or in (bad) mov inc jo dec aam mul mov sbb inc popf insl aam cltd and (bad) push (bad) outsb add cmpsl mov sub roll fs daa stos or into xchg ds sbbb push fwait mov add xchg jns enter xchg lods fistpll and or test push push int icebp xchg or xor mov mov lret cs (bad) sub xchg mov push cmpl andb jnp loopne dec inc mov scas movsb aaa into pushf inc (bad) and rcrl pop fistp sbb jae mov sbb xor (bad) mov nopl adc les jnp pusha xchg jnp jmp clc cmpsb fld dec jl cld loop jp fcoms iret xor sbb jl mov mov mov (bad) (bad) mov icebp inc dec jo cwtl (bad) mov loop xlat pop sbb and lea mov aam movsb ja add pop (bad) mov fisttp cltd jne (bad) mov xchg xchg fcmovne dec fs scas aas in (bad) pop lahf inc jle adc movsb scas xchg mov sub ja into (bad) cmp lods iret arpl rclb lock out cmc andl (bad) sbb inc push mov jecxz sbb (bad) mov xchg add icebp sbb lret repz or mov scas xchg (bad) ficom push pop inc out in pop stc dec pop pop mov lret or cmpsl add jge jge fisubl testl int popf les or push cwtl mov mov xchg fstps shrb aaa pop xchg out lods enter and jmp jl out popa test cmpsb cmpsl xor xorl scas xor mov dec and push jl js in cmp pop or xchg faddp mul jecxz push jge xlat je insl xchg popf jmp pop inc imul pop jmp jmp stc pop int into sbb in pop adc nop popf mov jl popf ds adc push cld outsb das out mov cmp lock jmp jno out popf jno shrl push pop shlb mov addr16 xchg dec mov inc adc ret mov subl inc out mov mov mov sub mov adc and mov mov adc testb mov xchg inc sub pop imul movsb adc or jne cwtl dec (bad) jno out inc cmp jbe (bad) (bad) std out inc push arpl in lock cmp sub cmp addr16 mov call or mov sbb repz xchg pop jmp (bad) arpl popa mov sub jge push add fwait aad add add pop scas cmc fdivr loopne push fiaddl mov mov jle ds add add stos sbb lret data16 adc pop cli in dec dec push jnp test pop xor getsec popf stc mov neg jne scas and daa or xchg sarb stc lret mov sub and pusha mov sahf cmp mov jge aam leave lcall sub pop push shll mov mov ret xor sub inc sti pop and out icebp iret call jecxz xchg pop stos inc dec fmul add jo jne sub ljmp push scas stos push jmp sub clc and mov out cmp push jp jae push pop jnp dec mov pop std dec out std mov aaa shrl ja mov mov mov lock test call dec jecxz sub test and ss xlat (bad) jno inc aaa add sahf or mov mov ret sarb pop fistl and mov dec enter add push or jae adc scas das loope (bad) ja cmpsl loop popf mov cwtl push fistpl lods sqrtps mov into dec mov xor addr16 mov scas outsb out das inc test lods sub test pop mov addr16 outsb dec pop cld (bad) hlt mov mov mov jae mov sub loop jp (bad) aad jmp ret movsb push pop cli addr16 push add into insb xchg jb jecxz xchg or xchg cmp fildll icebp push xchg mov outsb dec mov xlat mov xchg ds xchg imulb (bad) repz lahf sbb xchg stc pop sahf push xchg iret xchg or sbb sbb inc mov lcall push cli insl in jno push insb jae testb (bad) ficomp cmp repz rolb imul fmull mov cmpsl add repz in stos outsl call xchg movsl fcomi sbbl fucom inc adc dec add xchg jl xor stos mov mov test lods cmpsl scas (bad) inc negb fs in ret sub sbb push xchg push xchg cwtl or or dec xor xchg sbb sarb pushf lret fildl jno fsubs push fstpt nop add pop sbb rolb xchg cltd (bad) lods push jg imul xchg add inc push out aam dec divb dec mov sahf (bad) lahf pop jbe movsl out mov das icebp out pushf xchg pop pop inc mov xor clc sbb stc inc ljmp mov push repnz push mov push jb xchg (bad) iret lcall sti xchg sahf push lret push test push dec repnz loop movsb arpl cs stos notl add lds test pusha lods pop mov fcmovb insb xchg mov adc sahf jo mov divl mov lahf pop std inc cmp cmp dec aam push add xchg in into ret fdivs cmp xchg mov and jnp outsb cmp mov pop dec cmp shrb daa in inc jge inc sbb scas cmp (bad) xor xchg push add std stc jne mov dec and rorb or icebp (bad) shrb or out pop test aas (bad) mov movsl xchg ja fs mov xor jge movsl sti enter (bad) push sbb cmpsl push xor inc and imul into repnz xchg adc mov pop loope mov cwtl fs mov leave cli jle jle adc mov xor inc pop mov test leave lret sub cmpsl rolb enter (bad) and insl inc sbb inc inc cs xchg xlat pusha mov fs push xor into fidiv cmp mov sarl mov fadds fwait clc loop xchg stos dec dec xchg inc xchg notb jp jno add or hlt sub xchg mov (bad) loopne jb mov xchg je fistpll dec adc jno inc lret bound hlt leave loopne rclb xchg (bad) or adc aaa and fcompl pop mov imul pop das movsb pop inc shlb xlat xchg push lods (bad) mov adc or cld sub push pop mov xchg inc pop cmpsb mov lret xchg add std mov bound rorb sbb pusha pop xchg cwtl push sub test cli pop mov xor cmp and ljmp sar enter arpl push xchg add adc adc jmp fldenv dec hlt mov popf stos mov pop cli xchg test mov xor pop jbe ja mov mov std jns mov lds test xor push mov mov mov inc mov in cmpl pop xchg cmp mov sbb ljmp outsb dec jg adc or xor loop lock aas cmp sti icebp jnp ret sbb dec fsub lahf sub pop mov mov mov pop fistp clc and fdivs out call fcoms pop adc cmpsb in mov cmc cmp ss xchg mov sub or aaa add sar dec loope lahf ljmp out xchg push fwait xor add jnp rcrb lcall jmp push std mov stos ds adcl packuswb (bad) dec ja sti xchg push mov (bad) lahf inc lods enter xchg dec dec jae or add cmpsl aad lahf jns xchg jne cli xor out mov inc shrl mov sub mov jbe jo xchg imul out repnz cli sub sbb imul lcall mov adc dec mov mov add sub pop pop fprem inc xor add add arpl mov jno ss je push fsubrl aad adc fsubs push fwait push (bad) (bad) in out (bad) jg leave sub mov jae xchg mov add add mov cmpsl mov sbb sbb add sbb fnstenv cltd nop cmp pop repnz dec jmp mov mov push popa dec pushf cs push jb inc lds lods movsl movsb mov mov pop fucomp adc je cltd cwtl mov and repz xlat jmp jp into and decl data16 xor popf jo out cld insl sbb fistpl notl or adc lds (bad) outsl sub (bad) into cltd lds lcall mov (bad) imul hlt nop sbb mov (bad) repnz aas or mov mov into mov sbb mov jb mov mov aad lods gs aas inc push and int jge mov (bad) bnd push rcrl cmpsb repz scas mov jge fwait rolb ljmp ss mov addr16 push and outsb pushf aam and add or mov cmp mov xchg jle clc push je push jge dec or aad je popf xor mov iret scas jns sbbl hlt cmc dec lea pop xchg xchg dec lahf fnsave pop clc mov pop sbb and lahf insl sub xchg cmp lods add and ds mov ss cmp add lods adc data16 sbb cmpsl cmp pop jo outsl (bad) or imul sbb dec dec fnstsw mov inc and jne lds nop mov cmp sbb dec sahf cltd mov test ss aas in data16 cmp hlt mov push push (bad) in jg cmp push xchg sbb pusha aad push rorb jbe fstps cmp sbb adc rcrl fidivl sti jge cmp and or hlt mov jp xor xchg loop,pt push push lock jmp xor inc mov add leave hlt mov and pop mov push movsl lcall arpl mov jge and sahf push cmovl aas fcmovnb test fwait dec pushf xchg das stos sbb lods in sbb xchg jl xor call aaa lahf xor outsl mov (bad) icebp ret push add data16 mov xchg pop insl adc cli mov in xor cli in pushf sbb shrb je,pt mov (bad) jb stos push loop fnstenv aam and jmp mov sub popa add out into mov fbld xchg push jb add pop fsubrp adc cwtl sub es (bad) adc xchg pop call mov test push fdiv pop pop cli (bad) mov scas push mov loopne js pusha jns imul or mov jbe adc (bad) jo (bad) push fstpt loop mov pop es adc cmc (bad) sub add cld or popa sbb sbb in pop adc cmp mov pusha mov push mov daa inc addr16 enter mov stos pop cmp mov mulb mov icebp xor imul bound dec sub sbb enter aam jmp push outsl adc rorb orb pop test pop mov out out mulb (bad) js sub (bad) and or pop scas ret dec addr16 insb push ds pop push loope sahf (bad) and mov mov cmp xor jbe inc imul imul push iret ja (bad) aas movsl lds or fwait enter jae add xor movsb jmp inc inc lods jae xchg aad mov mov xor and sub ror (bad) bound jo jo aaa ret fidivr sbbb push pop mov push ret scas test inc rorb in movsb ljmp daa cmp iret mov sub fmulp stos mov loop dec pop mov cmp adcl xor js outsl mov call push mov stos xchg icebp leave adc insb (bad) rcr push sbb mov enter pop inc lret jp fwait ja ss stc (bad) xor movsb into lods rorb iret jmp adc and mov push push inc icebp dec push mov negb adc sub je inc (bad) aaa nop fldenv leave lods or jne jne cmp or loopne or out mov jo adc inc cmp mov adc sub jo sahf mov pop (bad) rclb inc fnsave repz xchg xlat fildl add mov sbb cmp adc mov sti pop cmc fstps xchg mov add aas shrl je or lcall xchg in cmp out push pop dec fwait jl inc or adc adc fs and adc rorl push test xchg cs mov into lock je mov mov sbbb divw lret fcomp inc insl shrl inc out adc mov icebp push into (bad) outsl mov cmpsl mov sub jp mov test push rcrb ljmp cli push pop or sahf push int3 and add mov pop cmpsl mov sbb sbb test xor xor mov jle lahf cmp pop mov sub stos xchg mov cwtl or fcoml mov jecxz or sub dec into icebp and data16 js xlat mov mov xchg jb adc cmpsb push mov dec std loop mov bound in mov cmpsb mov inc mov in mov mov jb ret pop cmp aam sti ds loope sub test push and test adc xchg dec aad lcall lea dec xor inc xor mov inc nop mov xchg fwait push and dec xchg add jg pop test in repnz jo mov sbb ss andb and or mov adc movb fisubrl bound in sbb cmp xchg cli in sub (bad) sbb jns in pop mov inc mov aad pop dec push fs leave add xlat imul push mov cld sub mov inc (bad) call (bad) xchg test (bad) jmp fisttpl rcll lahf aad xchg loopne pop xchg jns mov mov pop test and mov ret ret mov ficomp imul test aas out lahf mov testl xor push out xor mov lret pop xor je ss xchg xchg ja mov int3 lret cmpsb sahf mov or lret mov adc cmpsl sub mov (bad) dec out rcrl (bad) or pop nop or stc mov rorl sub std pop insl xchg fs mov repnz insb (bad) popf js xchg loopne (bad) je or aas jl sbb fmul lods (bad) jae push or adc insl push mov mov inc fwait iret sub lcall rorb push push movsb jno sub sbb fdivrl sbb fdiv add jl in sub sub pop ds aas mov cmp fwait pop enter mov inc cmp inc sub popf xchg (bad) cmp (bad) add es movsb mov sub (bad) xchg xor mov test mov sub stos mov sbb enter sub push js adc rcrb dec fidivrl sub push cmp fisub iret stos xchg repz pop xchg es les in cmc addr16 or (bad) lea lret mov (bad) xlat cmp bound add xchg sub add (bad) inc inc (bad) and push std xchg or cmpsl mov inc mov mov clc out jle cmp ss dec push sbb xchg in loop lock pushf (bad) jbe mov add inc sti pusha xchg xor mov les xchg iret in repz or mov jl loope ja mov jne push mov dec (bad) sarl ret scas push das and fbld testb cli lods mov inc in imul aas dec int (bad) inc push sarb xor push adc cs mov cmp iret iret mov cmp das mov mov xchg push bound pop daa aam aaa je (bad) icebp lahf (bad) sub enter gs js in gs and lods lcall icebp xchg mov sbb sti popf fcmovnu cmp lds in cmp sbb cmp xor jmp inc mov xchg dec add call xor push pop adc es loopne xchg or (bad) mov jge lock sbb xor sub cmp pushf (bad) or sub into sub stos je push mov scas xchg out mov pop dec push mov jnp xchg fistpl jbe repz nop es rcrl test jb push lds jbe jmp jmp (bad) int pop push add jmp lret gs push xchg xchg rorl loopne mov pop pusha out call cs sbbl lock loop xor stos mov add mov pusha dec ret mov push mov dec sbb arpl loope pop pushf div xlat pop divb notl test mov add mov lock testb cltd out dec scas stos cmp inc sub cmp dec dec xor or inc adc and push test mov mov cmp and fistl lahf xor xchg inc cld add dec sub stos push xchg push std inc out xchg pop outsl or push and jmp ret (bad) pusha inc sub jg (bad) scas gs dec push or incb test xchg scas cmp jb push inc adc int movsb test pop cltd jmp or popa inc cld ds jp out rorb int3 out xlat mul (bad) pop (bad) daa sbb adc stc sbb daa xor fsubl add cltd pop and fstp rolb xchg adc mov popa jmp insb sbb sub rcrb cltd add cs adc push cmp loopne repnz sbb lea loopnew mov dec loop add adc fs data16 pop in aam aad pop (bad) dec cmp lods push in mov or jae cltd jns inc inc push int3 out mov imul es sbb jne lods daa and and cli pop mov aam bound mov roll inc push jo mov jne push jecxz imul stos (bad) push jbe mov or aam add adc loop lret jne mov mov adc jl pushf jbe iret in leave call xchg inc push ss mov jae cmp inc sbbb mov xchg jg add popa or mov sbb mov mov aaa push and mov mov or inc cmp xor sbb gs icebp mov push push nop pop fisubl and inc std scas test lahf jge movsb mov push aam bound in inc imul cld js mov mov stos and lods (bad) sub pop out stc mov sahf xchg jne lret out cmp std outsb adc fucompp lock jb jle push fisttp and mov loopne dec enter rcll lret imulb mov sbb push or pushf js mov cld and jg jp lret push xchg shr jno mov mov push dec loopne bound repnz imulb xor cmc mov jle aas xor std mov (bad) sub mov mov int3 mov jno mov xchg loop repnz pop nop aas fwait bound shll loope pop pop xlat sbb jg (bad) aaa aam imul (bad) dec movsb pop sar fwait jg mov pop daa (bad) xor mov add xchg sahf and cs clc arpl xchg mov movsb inc imul xchg fbld mov xor inc mov shlb int subl mov xor mov cmpsb adc pop jmp xor int3 pop add jl push or adcb mov in fnsave mov popa xchg dec bound iret jg dec lea mov and lock mov or ja sbb jmp xchg mov ror push lcall ret jns push leave dec lods fwait sub (bad) int mov add xlat std pop cmp pop adc aaa mov dec loope pusha and int3 add nop xchg pop xor ss push lds sbb fstpt add jmp lcall push pushf pop mov mov stos stos dec lds fwait mov cld jge or lcall add lret mov hlt push mov flds insb jns mov pop mov adc mov cmp push or push cmp sbb xor cli mov inc loop mov xchg (bad) (bad) shrl out nop add add out lds jmp xor jo mov xchg hlt jp fadd mov mov rol mov aad cmp jbe dec mull clc (bad) lea cltd dec sub xor cmp sub inc cmc jb outsb sbb push call clc sbb ja lret xchg nop lcall mov jne in pop push sbb add andl sbb lret mov insl call mov rolb (bad) (bad) mov mov dec mov in mov jno add mov mov in mov test and fimull cwtl pushf fs jecxz lcall ss adc mov xchg mov mov cmp and icebp cmpsl xchg aam mov xchg notb push std hlt (bad) adc outsb int3 jne mov dec in push cmp or rcll es ret inc cmp (bad) fs inc push out shrl fisub hlt loop test sbb clc pop mov (bad) sub inc adc jl ja into dec outsl mov pop pop jg cmpsb adc add xchg es test lcall jns push fwait push sub mov jns mov adc sbb pop (bad) frstor lcall push test test bound mov daa movsb push or cs push and mov xor push movsl aas fcoml jo (bad) scas repz xchg or sti push mov mov or adc or pop cmc lret les fimul adc rcll jno pop and loopne push cmp sbb lods aas mov pop push shrl mov cwtl pop xor outsl jnp out imul leave repz scas (bad) ss adc lret dec imul fstp stos push sbb stos ja adc imul in mov mov movsb xchg popf and fistpl adc and inc arpl pop cmpsb test xchg mov dec sub pop dec out sub pop jne repz mov scas test test sub test sub push inc scas sub je dec jae adc push shlb cmp data16 sub popa cmp sub int3 gs test cmc in out test (bad) loope xchg pop mov inc jle sub test fnstsw mov scas loopne cmc je push pop cs ljmp test int les sbb aaa jl inc pop dec sti test cmp ret cmp sub icebp arpl push jle push int3 test sahf jnp call fdivs mov push pop daa dec syscall leave pusha shrl add insb add mov (bad) xlat test aam stos pop (bad) in mov test outsl gs fisub sbb test sbb fs mov jmp aas popf mov mov cmp cmpsl aaa dec inc or in cltd es nop popa mov call cwtl sbbl mull mov int3 add xor sti push std jbe pop (bad) out mov ret sbb fwait ja push lods fidivr fidiv add mov jbe sti xchg sub rcll cld dec nop adc mov andl js xchg jno push aad adc adc push mov int adc out mov sub xor cli or mov les pop in lret inc lock sbb mov in jns mov js (bad) imulb cwtl stc (bad) xchg dec rcrb out push add mov pop les cmpsb inc shr pop jl cwtl mov push ja iret lock inc mov mov jnp xchg jecxz in cs and js ds mov mov test clc mov add stos sbb ljmp and mov jecxz rol sarl pushl sub pop mov cmp stc push hlt or mov mov int3 mov inc scas jnp push sub pop stos jg mov icebp cwtl mov push arpl and es sub orb adc lahf sub cmp xchg rcll push addr16 sbb (bad) fsubr sbb mov mov mov mov clc and or test inc jg mov and notb and and js loopne int dec pop test insl xor jbe sub fsubp mov push cmp loopne sub xor scas and and ret (bad) shl std fisubr repz iret lret inc idivl int3 or sub or push sub sti popf xchg mov movsb adc adc js or ret xor (bad) neg or in lock jae cs scas jne mov push loope xchg popa push dec jl out mov sbb call sbb inc adc sbb mov xchg fildll pop pushf in jo sti ss mov (bad) into adcb mov dec dec aam sub pop cmp and mov pushf mov fstp xchg pop aas out mov xchg ja sbb std out sub pop repnz xchg push and enter inc pop jns dec ja mov mov mov call out jne int addb dec lret outsl dec iret stos clc test jle lea xchg frstpm(287 std mov fs jg test and cmpsb inc inc rclb mov sbb insb xchg pop pop mov notb sub sub push xchg imul lods dec mov outsb popa (bad) xor int3 mov push addr16 lret sar mov jge add mov cmp mov inc dec leave fild call (bad) pop adc movsl jnp adc sbb xchg popa adc (bad) or xor iret mov dec pop lret or push pop test sbb lcall dec (bad) xor test repnz jne inc (bad) pop mov xchg add out out mov pop into nop nop add cmpsb in out ret mov je jne into or aad push mov cmpsb pop test stos and or test sbb scas and pusha xor negb jo outsl out sahf ret xchg mov inc out add cmp repnz inc loopne frstor or push bound test mov jne mov jmp out mov sbb add mov aaa mov add scas inc jns xchg xchg sti out pop inc cld pop outsb pushf xchg test aad leave jno sbb pop scas jge outsl cltd sub adc fucomi mov call xchg ret add repnz sbb in fs adc (bad) and xlat ljmp dec (bad) lcall dec jp jno jne dec scas push mov cli enter lea push inc aad push mov or push jo xchg jae lcall fwait xchg lock or sub mov ds loop pusha xor sbb pop xchg addr16 daa iret std pusha ret jnp push pushf (bad) icebp arpl inc and mov mov stos leave mov mov push lock lods lea mov xchg imul cmp cmp inc inc (bad) out fisub mov push cmc jmp xlat and sbb jbe mov mov xchg push js cld adc cs jle enter mov (bad) hlt (bad) ja popa dec cmp ds inc jecxz loop push mov pop jb std insb inc int xchg mov pop xlat fsubr lahf aaa pop and jl aad icebp inc pop inc add (bad) dec stc mov xchg daa loopne sub jl or mov cmp pop in jne rolb cltd jo inc mov adc ss push jb add (bad) cmpsl pushf jb outsl xchg cmp loop addr16 sti outsl sub (bad) cmp js cmp cmp push push imul cld movsl into xchg inc xchg loopne shr lret icebp inc (bad) dec inc inc cmp mov add out fcomi rclb pusha cltd shl mov jne mov xchg out inc sti pop cld dec je push outsl loopne jmp jnp mov mov lcall lods push ficomp cmp (bad) mov arpl pop or cwtl out ret shr mov jbe add lcall movsb jb add jne pushf mov push imul aas aad xchg loopne cs push (bad) push sub sub xchg aam mov adc mov hlt xchg jno sbb xor cmp mov xlat mov test or mov loope fistl cltd cmp add push cmp test inc push xchg mov add mov rcrb out aas sbb shrd and xor into (bad) loope dec les mov dec jmp sub jno adc mov sub push adc dec mov xchg mov cmpsb in jp mov orb lahf xchg sbbb push cmp add dec jle stos adc inc wrmsr mov cmp int3 rolb lods cwtl lret mov rorb adc cld (bad) xchg cld imul xor xchg fwait xor sub inc inc pop je fild sub test pop xor push xchg fbstp rcrb jg nop mov xor leave lds (bad) push sub and imul and cs daa repz mov mov stc das xchg xchg jae jmp xchg add fsubl and adc xor repnz outsb mov inc pop arpl negb loop gs scas arpl xor mov add (bad) enter arpl bound enter rcll push sub out adc jnp fisubl sbb sub cs cmp in icebp enter push cmp jg loop mov das out insb add int3 mulb (bad) sahf xchg (bad) pushf ss inc jle addl inc loopne addl pushf (bad) cmp out pop adc (bad) rol push aas inc adc mov movl into fisubrl sbb or inc mov movsl stos (bad) or jmp push and addr16 add das jns mov cmp xor pop lea and dec in aaa inc mov ja clc out call out sahf repz pushf decl and mov mov xchg loopne jle mov jno mov inc xchg rcl sub fwait into push xchg push xor lret scas aas lahf mov fmul aas and fistpl mov add mov push jo or (bad) mov mov lock (bad) out (bad) lods add mov dec test (bad) sbb stos mov mov mov jp mov dec imul xchg lock inc mov mov adc in jle aad lcall sbb mov mov (bad) loop or xor mov sbb das out insl sbb imul adc sahf jmp stos xchg cmc push ja pop adc jb test pop mov lods add pusha cmp cmp sahf lods bound inc xchg mov sub lcall shrl jno in push jno push int sbb and gs in rcl cmp insb mov xor insl ss mov fsubl insl xor add lock xchg adc insb and les rcl call sahf je cltd cmp or or std faddl ljmp pop out adc out lret xchg push jmp xchg adc nop cmp loopne adc xchg pop std mov popa pushf es jae movsb outsb out fwait jle jmp pop (bad) aas mov and jecxz pop or jg pop test xor mov out inc das mov in cmpsb sbb adc orl mov ss add mov cld pop dec incl sarb cmp fnstsw push fcomi out and mov int mov and rolb enter dec jae addr16 (bad) adc bound xchg (bad) dec mov jecxz into arpl aaa in or xchg cmp fcmovb inc (bad) lret mov push add int3 in int3 (bad) addr16 das (bad) mov daa xor (bad) rolb pusha das cmp shll pushl ja and jmp jp add lods cltd add xchg mov xchg add mov jp ljmp inc imul (bad) aaa test add mov out scas cs add lock xchg daa mov sub or sbb xchg lea push (bad) xor outsl dec test int3 daa pop das mov adc out cmpsb sbb mov jmp js xchg mov insl sub or icebp stos lods icebp push mov cs (bad) mov lcall outsl out aas mov lds mov jmp add xchg mov push adc (bad) adc dec into inc lret insl and les js (bad) push fistpl mov push sahf stos frstor cld pop out lock ljmp sub or jmp movl add push sub (bad) ljmp dec mov call adc inc add xor bswap cmp mov xchg push clc mov lahf repz jecxz cwtl pop out add push js pop js add out inc cmpsl push in repnz push or xchg scas ja sbb (bad) repnz mov daa arpl adc clc jne pop sub call in pop dec cltd fidivl mov sbb dec xor aaa push xor outsb dec mov sbb or mov test (bad) mov mov push ficompl xchg test ss xlat inc xor cmpsb inc cli sub add jp jb je sti mov push dec push mov out adc popa shr pusha inc mov movsl inc jae das sbb pop sbb nop andl (bad) cmp lret arpl insb or in jl test mov outsl push dec jae stos xor enter adc adc add inc jae popf xchg cmp in mov push push pop insb mov xchg sahf incb loope fldenv sbb jne mov sub nop inc (bad) das (bad) cltd push fwait mov xchg fiadd aas mov shrl out fisubrl in or fdivs ret sub in int3 mov adc sub outsl sti xchg jl (bad) hlt fisub cmp xchg jo imul adc lea push xorps inc insl out sub pushf xchg dec sub mov rcll xchg sbb push not fwait push enter int3 mov inc jae xchg or aas and jo scas ror pop mov outsl (bad) xor daa sahf jmp sub int mov dec lods xchg push add inc pop mov or test push push and push xlat out pusha sbb mov loop xchg (bad) roll ror fldl and xor ficom fdiv inc jne or xchg push fildll shrb out mov outsl mov bswap fwait (bad) negl call cmpsl mov mov mov jns mov gs popf push in cmc dec pop popa pop outsb loop pop mov dec pop stos and push push sbb hlt mov mov dec lret mov bound mov gs std cmp add inc mov lock fnsave lahf movsl flds out push jl or (bad) xor mov and cltd mov sub jb insb add xor repnz xor fcmovb fsub xchg ret int (bad) mov or push mov xchg mov fnop mov xchg inc jmp mov push hlt inc test test jo fdivp push xchg fcmovbe adc cmp pusha clc jbe mov cs hlt mov shlb fimul jl movsb mov ror decl mov adc ljmp hlt pop xor mov and cmpsl and les mov cmpsl daa add dec push test sbb mov test shlb push in in sti fwait das fadds repz shll add mov iret test jmp pop shll (bad) jnp sahf lcall and imull lret daa outsl int (bad) jb dec jmp xchg jp pop cld aad pop sbb sti xchg adc jle cmp pop imul popa lea xchg idivl and js sub push pop mov popa outsb push jae xchg mov neg pop cmp push data16 or xchg xor in iret test jne mov jne inc aas cs sub add push pop jmp jg sub imul dec cmp and or inc cmpsl int3 or pushf stc hlt lcall in out das cmc xchg and push es roll rorb sbb sahf int3 push scas or repnz dec popf addr16 test sub fisubr adc loopne cmp stos pop cwtl test vcomiss enter sub push mov jmp les (bad) cmp (bad) das sbb push shr jo jmp out into add mov xchg test xorl addb mov mov fimul and test mov daa xor stc pmovmskb jmp jae inc adc xchg ljmp pop fs sbb es fbld leave mov and (bad) daa mov in mov imul or or mov mov xchg es or lock add dec mov bound mov lods repnz ret roll push sbb ja jp jmp xor adc out ja (bad) aad (bad) mov lcall idivl add rorb xchg push xchg sub or adc xchg repz or lods mov cmp xchg and xor sti mov int inc test pop sbbl jno insl rorl ret pop (bad) hlt pop add or sub stc jle xor jno jne adc insb les and dec test and lock push dec mov (bad) pop outsl add call cwtl xor push mov inc xor inc xor mov jb push push daa push out sarl dec in out pop jle scas pop lahf cmp out int lds inc cmpsb add mov (bad) xchg jne lcall test js push jb test inc bound into ss jne or inc or pop cwtl in or inc jl adc data16 in gs pop iret lods sbb imul dec int3 cli push jo pop xor (bad) xor jmp mov movsl div fldenv clc insl pop fcoml int3 repz push lahf adcl pop aam or adc cmpsl xor push and and mov addl xor xchg pop test xchg bound mov hlt mov fsubp and roll jne mov cli hlt stos inc push adc test sbb push jae (bad) int3 fisttpl mov push (bad) xchg jp or inc cmc sub pop fadds test outsb mov test loop dec jne,pt (bad) movb cmp ss mov sbb data16 cmpsl jle dec popf loop cs int (bad) sub pop pop insl push pop sub mov es cmp leave pop repnz mov (bad) jmp hlt and mov mov add pop mov xor push flds xchg iret out jg outsb cmp dec subb mov dec cs cli inc sub xlat movsl pop inc inc mov aaa jne adc push and pushf repnz sbb je mov (bad) cltd popf or outsb cs jae xor scas arpl mov lret push xor mov sub inc pushw popl int mov iret fld loope mov inc int cmpsb fcomi pop dec stos adc cli les pop sub push fst aam (bad) fbld cmp and outsl mov jp mov scas stos adc sub xchg ss push test mov addr16 popa aas push mov push mov mov clc out xor jge lret dec mov sbb (bad) jne shr pop outsl jnp xchg push call shr cmp sbb sbb pop lret mov call pop inc lcall xchg or mov addr16 add sbb xor lods pop pop cmp repnz rcr nop icebp into (bad) xor push mul dec std outsb negb sbb cmp jno push out add arpl xchg (bad) mov ljmp inc sbb xor push (bad) punpckhdq stos idivb xor jecxz (bad) mov cmp loope push ss jp or mov adc xchg dec out push fidiv mov jg js xchg sub subl scas popa mov mov mov inc loop lds (bad) (bad) push popf jnp inc jl fcmovu jno out ds push push dec movsl in pop rcrb mov inc mov mov or add iret je std lock out scas cmp pop dec je data16 aas frstor sbb in jge push sarb cmpsl sub mov xchg ret jp adc aaa adc mov ret mov add pop lea and or int3 mov fcmovne sub cmp frndint mov adc in jae xor imull xlat xchg loope xchg ja (bad) pop adc mov add cs or dec jmp mov push inc and sub (bad) push fwait dec and or in add mov mov push jmp popa sbb pop push pop jl (bad) hlt ja inc ds shll mov mov insl push xchg arpl les loope mov xor dec fwait xor push add repnz or fdivl jae sub das out mov rorl mov xchg fistpl jne jmp xlat out jmp dec movsl das or sbb repz pop aad xor sbb repz mov dec pushf pushf jmp jne dec sarb orl jae sub add pusha add fsts push nop into mov scas aaa sub inc push add (bad) sahf imul int pop (bad) push sahf out mov xchg cs xor mov scas gs push in scas test bound push push cmp adc xorl cmp in push push or add push sub test les aad imul pop repnz shlb xor scas push adc dec inc sub shrb lea mov xor adc inc pop cld sub xchg lods pushf cwtl push hlt in pop push jbe jno mov fs bound xor (bad) mov addps (bad) jb jp adc shlb hlt out pop in mov pop fs imul add push fstp pop fdivl and or dec (bad) dec ror add cmp or push shrb xor mov xor cld fmulp lahf imul scas add sub jg lods out fwait scas cld movsl leave mov add out lahf push sub mov cwtl sbb ja xchg fmull aam adc imul (bad) mov xchg cmc pop dec inc jno test mov lock int aad ffreep push and fdivs data16 fimul stc xor loope int3 pop cmp loop outsl push cltd enter push mov add adc lahf xor outsb int3 (bad) hlt add insb aaa fprem1 leave lock fwait mov adc add mov cwtl mov (bad) or or stc or js mov (bad) jo jl sub fistpll movsb insb mov jbe jno mov push jno push (bad) push jle daa in pop popf push jb bswap stos xchg xchg stos icebp or xchg jp jb (bad) mov stos inc jae pop cmp fwait test lea in stc ja aam and sbb sarl inc jbe mov lret xchg das mov orl stos pop pop xor push ret test outsl or aas or jne push mov popa sub out dec popf xorl and mov xor add mov xlat adc mov lret rcrb data16 rclb lods mov mov mov inc or xchg dec ret push jno dec je fistpll shrb mov movsl addr16 sbb ret mov stos fsts cmp mov xchg ret scas jle lret jne ja fcmovne xchg ja and sub lods or enter dec push loopne imul icebp icebp jae cli lfs add fsubr mov add sbb loope xchg fwait lret xchg mov sbb sarl gs shl out (bad) out dec jno repz ljmp test pop leave add leave pusha jno sub adc sbb pop lods out neg and repnz jecxz cmc xchg xchg repz lcall mov mov add bound pop aam dec (bad) stos and jge mov and movsb xor inc lret mov (bad) mov pop in push pop dec mov add push jg adc dec jnp push push into rcrl lods cwtl ss into call sbb mov mov movsl mov cwtl sub in mov xchg out mov adc jg aad test or cmp fiadd test dec adc xor xor sbb daa movsb test mov mov inc scas bound inc mov jmp sbb or lea push sbb hlt ret insb lea or enter add fcmovu jl sub test xchg sti ss repz xchg mov mov jp pop test push xor fsubp sbb pop push pop sti dec aas lods clc ljmp test mov out cwtl cwtl lds sub or jg jecxz push xorl xchg xchg xchg push mov dec xor into cwtl ret fs (bad) xchg and movb out insb inc cld inc je,pt push aaa out inc sbb mov xchg xchg scas test push xlat stos rorl push xchg dec jb,pt decb adc jp jb inc cli jbe cwtl jne jge mov xchg jmp push mov xchg dec pop adc idivl xchg xor inc mov mov cmpsl aaa pop push sbb ret repz mov cmp imul inc nop inc data16 imul sbb dec push xchg mov cld mov push int ds (bad) mov mov pop icebp xor cmpsb mov les and mov push adc mov sahf addr16 out int aam fsubrl test je call pop imul loopne mov std and dec pop pop lock or xlat pop aam cmp jae outsb add xor lretw repnz push nop mov or jmp test int mov xchg pop jnp adc fsubl out dec fs mov mov jno lcall enter jne lods xchg movsl or out adc jecxz les cld dec scas iret inc sub mov inc pushf jp in ror mov mov cmp repz fsubr dec mov adc inc in add sti xchg xchg ss sbb jecxz decl (bad) hlt push adc fsubrl xchg pop cwtl sub xchg cld inc mov and jo jg adc (bad) sbb mov adc inc jp xchg sbb test inc add adc (bad) cwtl inc in mov pop out rcl cmp imul dec push jbe dec stos fnsave pop cmp addr16 inc jmp mov jne mov inc sarb cli inc push jmp and jo cld jl jge,pt pop rcrb mov mov mov lds xor xchg jae sub push scas (bad) lock xlat sti and (bad) fneni(8087 or lods cmp adc push sub js loopne mov cmpsb out and (bad) insl (bad) lahf sbb out lock push xor lcall cwtl ljmp test inc push or sbb setge shrl adc (bad) xchg xchg pop (bad) cmc mov loopne adc or or loopne lahf lcall je push test mov jl mov test adc adc jle add push (bad) sub inc dec dec out fistpll mov sub cmp enter and xlat xor adc repz pop test sarl (bad) sub mov es repnz sbb adc stos cmp add (bad) mov jne (bad) out xchg push sub add aam rcrl sub lret adc mov push lret fcompl pop and shrb fldcw xor cmp mov sub call js rcr loopne xor push aas bound push mov int3 mov lds add sbb fistpl mov xchg js pop inc mov ret stos jb icebp xchg jmp push in push lods (bad) hlt aad jne insb fiaddl mov fidivl fisttpl lcall lret dec js xor lods hlt test dec nop or mov ss push outsl mov insl (bad) ror (bad) repnz fs dec into or aam rorl loope lahf in in xor or inc pop inc push fstpt rclb or into sbb int inc sub add scas push mov leave mov fwait mov (bad) mov iret sbb inc jno rcr xchg std arpl dec jge push test leave inc or pushf ret inc sbb movsl xor jno das sbb (bad) mov aaa mov sti test push inc ja cmp jp popf sahf add cmp loop push aad int ret push jmp xor inc fldcw sub ror dec leave mov data16 shll sub (bad) sbb adc mov addr16 out in lock movsb jo push shll cli fstpl or cwtl fs pop int3 pop xchg add push cmp es out sbb pop xchg push xchg jp xchg scas sbb inc inc punpckldq idiv cmp push shrl mov (bad) jp mov lods push cwtl xor sarl jle aad inc pop add cli jp sub push icebp xor in into push scas jns inc ss call jns and cmp clc sbb arpl lahf jae jp pop (bad) icebp jg pop cld mov or fild pushf or mov movsb xor jle xchg inc in jns add mov (bad) (bad) (bad) stc mov push and push popa adc or in adc push pop pusha mov xchg cmp mov lcall inc cwtl outsb xchg lea sub (bad) and aaa pop pop test and mov je sahf lret inc jp cwtl sti iret adc inc je out mov jno push rcrl out xor dec repz fdiv jae (bad) jmp pushf lods mov pop sbb dec xor repz xor mov addr16 sub push adc mov mov jp inc cmp lds outsb (bad) cmpsb es xor push (bad) cmp xor daa xor daa iret imul jp ljmp in roll mov imul dec mov outsb xchg sbb or and or ljmp xchg xchg (bad) (bad) cld fisubrl rcrl in mov push lahf test add in and push xor fiadd add int jecxz cmp push pop enter sbb pop cs fbld push push mov fcompl mov jg movsb push lcall jp fs mov clc stc loope (bad) movsl sarb sub arpl (bad) lea push gs adc pop mov js gs adcb lahf jo and fsubrs jnp pop mov dec sub mov arpl adc cmp cmp cmp (bad) mov inc mov cmp adc fs sub (bad) into xlat xor ret sarb (bad) sahf js scas into xchg xchg adc scas fisttpl aaa mov jl aad das data16 mov cmp inc xor cmp jecxz je icebp or xchg sbb outsb mov xor outsl sti pop xchg inc dec sahf sbb fmull roll push jnp mov dec jo cmpsb in movsl jnp xchg ret xor fldt daa pop push pushl lret (bad) push shrl add mov movsb cs ret shrb popf mov (bad) ret mov cmp pop xchg xchg xchg add mov pop cli in and icebp push adc stos inc test (bad) dec out mov lahf push and stos xor fimul pushf cmp pushl jmp sahf jp jne dec jnp xor into and push (bad) mov jg mov fistl dec xrelease movsb sti add lcall or cmpsl lods inc lret shrb and (bad) add xchg rclb mov lcall xchg rclb fisubrl jns push test movsb mov int3 lret push iret jnp dec nop cltd les dec ljmp daa clc repz idivb lds nop pop test bound sub into pushf hlt lods repnz hlt and or push and arpl or (bad) imulb jbe push (bad) xor jmp (bad) imul cmpl sub scas repnz mov cmpsb enter xchg mov push sbb xchg (bad) icebp loopne pop mov adc pop sub jbe xchg and jg shll movsb xchg pop ret inc test cmp pushf add xor sbb in or adcb test cwtl mov ja,pt mov bound lret fs cmpsl shr add push mov mov push jg loopne cwtl fdivrs adc inc cmpsl jb out push or push ret movl movsl sub add mov fwait lea fistpl (bad) mov (bad) inc inc dec hlt and mov lahf mov cmp mov dec in lods push aaa inc sub fsts cmp jp push mov shll pop cs insb aaa jp movl or ja mov sti lods nop pop cmp add movsb pushf out scas mov ret add mov inc lods cmp dec nop flds or inc push or addr16 pop fcoms fcompl ss inc jp lods xchg inc lret addr16 shlb clc ds addl test push insl xchg pusha shll push mov xor adc (bad) lahf es sbb push stos in outsl lods xor mov jg and cmp and sbb ss pop ljmp repnz jg jge xlat mov sub mov ret pop ljmp cltd aam cmpsb push aas pop xor pop out dec adc lods nop push sbb jle inc adc frstor pop pop mov repnz andb icebp mov mov loopne not push loope dec pop mov mov jbe dec mov xchg add and sbb iret add sti inc mov lods xchg fwait mov push xor adc (bad) mov mov push and pop add imul push or out push push lret fidivr popf rcl xchg pop into int test xchg mov sbb das dec ss sub mov jl sbb mov popf movsl popa push ret imul lret or in repnz aad fs movsb push stos in mov in inc fsubrl jno push jl out sub rorb ds add push adc adc jne push dec push stos bound jecxz lock mov jecxz push nop dec mov pop fs add xchg mov gs sbb sarl sbb pop or jmp mov lcall fisttpll fsubrs fwait daa out sub xchg inc dec cmc push lds or psrlq ret push jg mov fisttpl mov push mov xlat ret aaa pop in rcrb push je jb jle fiaddl inc lds jbe movsb js in mov pop fbld push mov push pop push push and dec test arpl shlb das lea subb add add in xchg and jp sub mov jg push inc dec sbb sar xor daa jmp mov push fdivl adc movsb mov repz mov pusha mov dec xrelease (bad) out dec in xor cmpl adc cmpsb xchg inc ds ds cmp dec enter pop in data16 cmpsb (bad) (bad) or (bad) sbb and lods push imul dec sub mov out fcoml js stos stos push fisttpll add scas dec ret inc mov sbb into sub outsb rcl add in inc jne jl mov cmp inc and push subb sub hlt inc (bad) mov mov test je cmp add movsb sub ficom call mov enter (bad) je (bad) cld lea xchg xor jae in (bad) cmc pop outsb in mov xor dec mov aad mov (bad) ffree popf adc nop or mov pop outsb lods mov sub pop mov cld sub or rcrb clc lea pop cmp dec push ret pop ret or push sbb ss cmp xchg mov xor jae cmp dec adc out lret dec xchg pop sarl or inc jnp sbb pop mov lds add mov addr16 (bad) mov mov (bad) fsub addl cltd sar cltd cmp sub imul sti pop mov sti dec and and movsb and outsb mov pop lock jecxz mov popa test cmpsl std gs fwait scas call in sarl ret loope mov repnz pop xchg mov xor and mov inc cmp icebp cmp pop ss (bad) jle mov mov stos cmp shrb sub add xchg bsf imul cmpsl inc dec adc aaa xor je rorl leave dec cmpsb bound cvtdq2ps cltd mov mov imul and cmp lret loope jmp pop inc add jg nop decl lret push and arpl mov lahf fdivrl sub movsb pop ds fwait shrl add mov iret or mov sahf test xchg lahf lret lods dec xchg push fcompl dec out stos ficomp cmp inc stc mov nop popa iret jl or pushf and jnp xchg arpl lea mov jb add cmp mov mov stos pop push push sub mov dec push push aad push inc subl mov push xlat pop fisttpll jg sub int sub imul sub mov es and in (bad) xchg or in jnp xchg add aam notb sbb ret inc iret cmp pop jl in icebp sarl sbb data16 es sub xchg imul push clc jecxz cmp in xchg jne aaa add mov jp inc dec lea leave xor rol test and sbb rcrb (bad) or nop jae xor icebp test out mov pop mov mov push (bad) jmp push mov mov push in jge or cmpl aas mov ss add push xor xor ficompl vpmaxsw movsl enter fdivs add inc lods lret ljmp inc inc push mov xlat ffreep rcl mov loopne pop and sbb pop jmp sahf out cmp test std jno dec jns add or dec dec pop lret cmpsl push mov push mov inc or mov enter inc cmp xchg mov sbb sub mov mov cld add cmp or ja add sbb inc inc pop insb cmp mov ja,pn add shlb ss jmp int outsl xchg dec add xchg pop pushf inc lea out and fdivp leave gs inc fisttpl push add push std sti test jno and (bad) xor addr16 ret test ret push mov jmp pushf idivl pop xor subl mov out dec sbb lock pop mov int mov dec and je jnp xlat addr16 fstpt adc insb cmc xchg pop insl xchg testb adc mov pop out cmpb lock jb push inc imul into dec pop pop fidiv jle lods sbb loopne jg pop lret pop pop in jecxz mov mov and mov pop xchg leave aaa aam xchg test int3 adc (bad) leave mov (bad) pop cwtl es adc hlt out xchg sbb popa iret cmp dec ljmp out pop lahf push sub sbb les and mov xorl leave data16 stos fldenv cmp ret or pop out jge adc cmp inc sbb push pop push movsl orb adc push or sbb sub loopne cmpsl push or leave es in and push xchg shlb or dec or das in jle mov call dec mov cmp dec aad pause mov (bad) pushf xchg jb dec clc scas aaa adc xchg or sbb mov mov dec adc lds push ljmp inc mov xchg nopl (bad) xor xor insl test insb or mov pusha andb hlt push or ja mov int3 inc or nop mov cld add cmc and int xchg call mov dec repnz sub roll dec in jle js and push fstps mov adc dec jno (bad) scas fmulp sar mov lea cwtl mov push pop mov mov fistpll dec movsl aas add mov mov call lods mov mov loop jns pop and mov or fdivs cld cmp out fs mov xchg cmp inc pushf (bad) pop sarl sbb ret jmp adc aas es add mov xchg pushf push mov sub or mov push ds scas or test out jno push mov mov nop or ficoml std scas sbb jmp jmp push je test (bad) push push push (bad) out and ret scas xor vfnmsubpd jecxz jge push jl lds and enter mov jbe lods mov sbb add sbb fdivr (bad) scas in cmpsb sub adc push pop pop adc fsubrs push lock test jp xor ss das pop ljmp ss jg mov xor push dec or and fldl fincstp pop push mov jecxz sbb data16 inc sub adc lods mov push stos and push bts cmp lea or pop popa pop or or stos aad sbb leave xor cld xchg mov daa jnp jbe fldcw dec repnz dec movsl add push adc rcrl sahf inc xor flds clc lea inc test cmp les jge (bad) ja loopne adc add cmpsb inc ja xor daa lock mov mov adc out jae into lcall cld (bad) dec es pop xor je adc stc not test das xor mov iret push inc push (bad) fcomps push or xchg mov pop inc and es shlb pop xor aaa xchg push cmp (bad) xchg ret (bad) or pop in out push push push imul mov xchg cmc repz xchg cmpsb insb (bad) sbb ror sahf sar mov shrb jge gs sbb lcall out sahf in cmp lea fmull adc add pop out push sbb mov jl or popf (bad) or inc jae loop mov jl adc inc xor xchg movsb add or mov ds into push loopne dec ds scas (bad) jbe push dec std cmp js notl mov dec out mov xor jg xchg icebp stc xor jb and outsl lret xlat lret inc into cli pop push dec lret fimul inc enter mov pusha cwtl and inc std (bad) jo sub mov push jmp mov lock rcr inc fs mov repz lods xlat add pop push stos ss mov movsb loop mov or loopne rcr mov fcmovnu call push fiadd data16 scas es lods mov ljmp jp in adc xchg cmpsl sti and push es ds faddp popl (bad) mov stos lods mov out xor outsb jb pop inc hlt cld adc dec pop add cmp in dec sub out dec inc jmp sbb xor (bad) sbb cmp fisttp je imul inc xchg xchg ficompl inc pop js rorl jae loopne jmp ja sarb int inc popa repz ja repz popa fucomi cltd lds or mov inc test ljmp lret mov or xchg cmp push add mov dec sbb xor or dec cmp sbb add outsb out arpl jno scas or sub cmpsb mov pop push (bad) adc cmpsb pushf fldenv outsb xchg add inc mov in mov imul dec sub sti dec adc rcrb call cmp jno sbb mov mov pop (bad) leave pop and rol sub adc (bad) pop mov mov inc faddl jle push fistl insl das xor and setns jnp loop jne loopne (bad) dec fistpl bound scas mov jg fisub sbb xor outsb in mov frstor insb call mov ret (bad) imul (bad) mov pop daa and adc call iret inc dec and pop add ret cmc push jmp mov xchg imull cmpsl rorb (bad) jmp test mov test sbb mov mov pop jbe mov adc jnp and push cli or mov cmp xchg push jnp shl add nop fdivrs stos push sub mov push or pop inc add xchg out jmp scas jle inc (bad) std and out int mov arpl mov daa add out outsl clc mov ja push ret mov or cmpsl mov jns (bad) jae adc adc icebp clc inc mov and (bad) repnz jo shlb into (bad) pop decl (bad) ljmp mov and xchg or push in fistpl gs sub adc (bad) sti outsl clc mov xlat cmpsb xor addr16 add push inc sbb in add sub inc sub inc push insb sbb jl idivb xorl push sbb mov add movsl push sbb leave cmp lret test cltd adc mov mov adc (bad) movsl push sarb sub xchg xlat fisttpll pop lods lcall (bad) pop in xchg jno add push out adc outsl faddl cmp add cmp add notb fs mov cmpl cmpb lcall jne dec popf loopne,pn xchg insl pop lcall dec lret jecxz popf or dec mov push in pop inc fcmovbe push lock out sub arpl xor push cmp lds sbb or sbbb pop xchg push inc push xor and in adc and outsl xor ja es and test ret sub or nop xlat push mov mov loopne fsubrs push adc and lcall or lods (bad) add push jns pop fisttp add or push (bad) mov dec ret cmpsl cld adc mov xlat fbstp ljmp sub test adc dec hlt ret and js (bad) fsubl sbb sub shlb ret or mov push sbb cs adc dec xor xor fldl pop (bad) adc pop (bad) jmp jo lret mov dec pop push and jge outsl shrl int (bad) idiv xchg cmc sbb out adc outsb fs mov sar pop daa cmpsl pop mov imulb pop outsl push and ja mov fwait shll adc inc fwait adc sbb bound push fs jbe add insl aaa testb jmp push popa mov (bad) (bad) pop lds mov icebp mov loop xchg mov adc xchg mov int3 adc pop lods cld xor outsb jnp pop (bad) div (bad) (bad) jnp (bad) xor xor cmpsb and stc push adc jmp sbb and inc outsb rolb adc ss nop push mov dec mov push aas mov ss xor lret orl xchg scas mov mov divl mov jp xchg push mov cli dec ret lods xchg pop jbe and xchg mov into adc (bad) jmp mov dec rcr and clc and mov or ds out pop dec add imul sub pop add push popf test pop add xchg (bad) je mov add stos and cmp insl jne data16 xchg fild dec dec jae roll movsl pop (bad) jne int3 aad sbb scas test pop jo cmc sbbl gs xchg ret rol push xorl sbb mov sarb jnp mov push jge pop mov into mov popf andl fnstcw in dec adc dec jmp or mov and cli (bad) aam sar adc test cmpsl jecxz sti outsl sarl loope sbb mov xchg lcall loope icebp mov add js or notl stos jl push xchg push ja xor leave cld dec sub fwait lods pusha mov push (bad) insl jo sbb inc arpl jl ret inc (bad) inc xor into sbb sbb mov daa iret pusha lret ret sbb pop in mov lods pop add and fwait jp or xor (bad) negl push aad andl scas xchg out mov rcl loopne mov push jg jne add mov ret in lret dec mov inc lock addr16 xchg insl inc out pop or add push bound rorb dec mov mov inc outsb mov lcall inc xchg repnz loope popf loope add out push daa loop into addr16 xchg sub call mov cmp jbe jle ja js pop jbe,pn jno out dec in mov dec lock push cmpsl sahf cmp leave xchg push imul lods fiaddl aaa cli sbb scas imul scas sub (bad) test xor mov sahf sti maxps sar xchg xor push lret or sub icebp stc lret arpl inc out sbb je data16 outsb jl sub mov lahf xchg jmp jnp push add jns inc int cmpsl mov lea repnz sbb mov test add fs adc xchg sbb xor subl add mov jne call bound repz sub push movsb lret icebp lea lds pop mov xor cld sti (bad) imul sbb mov (bad) int3 out movsl flds imul adc ss mov pusha mov ret (bad) mov stos aad xchg push inc cmpb sub sub stc lcall sarb push or jns in xor push sub inc push xchg ficom mov inc or pop (bad) lds aas (bad) sbb loope int repz scas rorl mov push jl stos sub scas dec inc dec cld aam xchg mov inc push lods dec sbb out xlat scas adc outsb jecxz adc xchg fistl cmp mov scas imul pop ja jbe mov xchg out inc imul or dec dec adcl movsl fwait mov arpl lods clc sub popf add inc lods push int3 lds push jl and decb sbb lds push aad rolb ret jecxz in (bad) hlt mov das dec mov dec lret (bad) sub xor insl xchg xor into insl (bad) pop xor cmp cltd pop xor and cmp inc mulb outsb adc or mov (bad) inc push ret cs mov cwtl mov lds mov jg outsb rclb adc adcb fidivr add jae xchg out popa xchg lret rcrl mov out or mov repnz mov pop jmp add out nop mov or stos jae sub int (bad) xchg push icebp int push data16 (bad) and push dec je jge mov aam mov loopne leave lcall pushf inc jnp ficom pushf xor lret js xchg icebp sbb cmp stos fiadd fild (bad) inc pop and xor jp jb sub fisubrl xchg popa adc mov mov lods out mov sbb add mov jmp inc outsb xchg test mov fist lret xor insl dec decb dec (bad) in mov addr16 xchg cmp loope,pn fnsave (bad) cmp xor cli jp jae mov push jb repz adc fidivrl and jnp xchg insb cmp sbb push ja roll push sbb jb lcall scas sub lahf insl lcall stos lahf das inc cmp and (bad) inc mov push mov adc test insb les jae push jns pop add int3 ret in stos test out xor mov mov stos jmp lea sbb in mov xchg andb and adc adc dec fsubr and lock pop xchg jae ficoml mov push (bad) jmp in adc out sub pop pop sbb shll lods xchg dec (bad) or clc add cmpsl divps ss (bad) push or mov pop mov xchg adc das jg (bad) in shrb jo dec add or adc fimull jecxz push jmp mov pop mov mov jns xchg jb cli js adc jnp sbb in leave jmp and jmp call je stc adc add fs loope mov int jno pop push or xchg (bad) fadds and das or gs xor push sbb lods stos mov fld mov push pop push fs lret mov ss insb stos (bad) xor and mov inc or jmp adc jns fsubl cmp sub sti cmp sub mov int3 mov mov and xchg jg xchg or inc nop fistpll fwait inc cmpsl std push jl mov clc push mov push scas or test bound iret jp bound dec std imul shrb call mov cmpsb sub dec fist lea inc and nop jb jmp push adc cmp mov outsb mov mov push ds xor cmp fs test mov das mov xchg int call jo push mov cmpsl sar sub loope (bad) mov pop gs sahf mov sub rcl jle cwtl (bad) pop out mov outsb in dec adc ret mov add stos leave adc pop mov cmp jo inc dec xchg in or xor xor jbe sti push adc hlt aad dec js push addr16 xor fnstenv repnz xchg stc test inc dec das jbe (bad) cmp outsb add pop fwait les addr16 dec stos lret out daa imul pop je sub push adc ds dec imul adc sbb sahf iret cmp cmpsb out pop xchg push push sbb sti mov inc mov push sub std shlb mov cmpl push xchg add pop movl and int sub test and ficom push jmp fwait rcll fwait lds dec jge scas out xor mov mov test (bad) aad xchg push aas movsl (bad) mov popf cwtl pop popf insl dec sti xchg xchg dec push fbstp push mov mov lcall cmpsb out jo mov add xchg sub in adc sub in gs test int inc mov imul mov xor add in jg test sbb sarb fsincos add push fisttpl push gs adc and lods and push shrl int3 xchg jae data16 mov out xchg add fcmovu xchg push ja aaa mov stos add mov and xorl imul xchg aad jbe ror push adc call pop ja out jl sbbl lods xchg or jno jno cmp dec push std pop push gs jae out popf repz fist pop (bad) mov or das cmpsl pop push xchg cmp sub mov (bad) test (bad) andl dec inc mov xor shrl (bad) fnsave add mov test icebp jns pop fdivs mov xor mov or fisttpl insl gs les insl das push or inc imul and es test lock mov ja addr16 xchg adc cmp mov mov outsb jg push mov mov (bad) addr16 int mov lret faddp jl or push mulb dec std mov mov ret ljmp ja mov scas (bad) push mov or jl rcrl adc xlat or xor into xchg loopne mov adc xchg dec mov add push xor fisubl jmp push mov mov pop inc pushf adc inc inc mov inc jnp lods xlat scas lcall pushf pcmpgtb into mov push jl sub adc stos aad push loop (bad) pop push decb and jns xchg imul xor mov add mov test mov jne insl mov mov lods cltd sbb xchg test dec inc test adc stos stc repnz jo in fldt xchg pop fcompl das addl jl mov sbb push dec and gs adc pop push dec mov aam mov stc (bad) loopne (bad) sar js lahf aad xor or mov jl dec xchg sbb addr16 push jns fcmovnbe dec mov (bad) arpl clc and pop insb dec (bad) sbb mov cmc lock mov cmp and or mov xor sbbl in jmp iret movsb (bad) (bad) xchg nop sub lods movsb inc push flds push mov jl jb aad repz cmp add mov sbb pusha cmpsb (bad) ljmpw (bad) popa or popa (bad) lock adc loopne sarl push or add pop push adc mov cmpl aaa adc mov mov repz imul mov inc inc std mov inc pop mov or cmp pop stc movsl dec push mov cmpsb (bad) mull xchg call xor mov jns jne inc popf mov (bad) stos mov xchg out (bad) hlt rol ss ja or and test xor test iret cmpsb (bad) mov aaa fdivrl mov addr16 xor push mov xor lds and mov js xchg cmc inc or cmp jmp mov mov xor add adc out jecxz shrl rcrb xor pusha daa imul outsb push push stos outsb mov fdivl leave loopne dec mul test mov je dec notb (bad) pop je mov adc mov jl pop ret lret add mov and pop sub mov xchg dec jno mov xchg sbb lea pop lock push jmp stos or fcomps cmp push mov ljmp ja lret loop xor out xor (bad) xor xchg dec in add sub adc cmp stos lret mov mov jmp cmp jne ret jle adc mov fldcw pop jge outsb mov scas mov xchg (bad) mov loope add (bad) out cwtl sbb add mov rclb and jg (bad) call mov cmp imul test mov loop dec cwtl add mov mov gs mov (bad) mov movsb cmp cmp inc push xor or and push loopne mov jge (bad) mov jge push (bad) frstor adc in and out mov and mov in aaa dec mov push lock adc sti lea cmpsl movsl xchg mov sub cmp xchg dec xchg adc and inc xchg or jecxz loope jns les test mov loopne ds (bad) or call dec data16 arpl push out rorb cmp mov fnstenv xchg rorl push inc adc out pop or jo jecxz out popa out icebp jmp ja lahf mov sub sub inc fs lcall jmp aaa je xchg negb bound adc mov fs pop cltd int3 sub dec xchg jae dec adc push das and pop fisubrl shrb mov inc mov fcmovb mov scas pushf arpl outsb sbb pop in cmp cmc dec xchg cmp mov pop add sahf data16 and ja cli pop data16 jp push mov (bad) hlt ret je rorb movsb mov into pop pop lods fs pmaddwd add (bad) mov lods rclb mov dec or mov push sub repnz mov adc sbb add arpl lahf insb aaa std aas movsb dec popf adc (bad) divl or mov mov les popa aas lods mov jb or jge cmp add xor xor stc lea jne or jae mov testl push out mov cltd jp push adc push out lcall inc lods je scas push or push and cmovnp aas bound mov jp repnz out jge dec mov and aam sbb sbb popa jo xchg add cmc mov sub scas scas mov repz hlt sub mov inc cltd sbb (bad) (bad) xchg ja cli scas fdivrl add (bad) mov mov imul (bad) and push inc in mov mov fldl pop aas dec and mov repz or xchg push push in lret addr16 neg dec mov ja shlb imul inc inc inc push js loope add shr xchg mov lcall mov push and das cld inc imul shr cmp out mov xor ja mov mov pop sub (bad) notb and mov data16 sbb and sbb pop enter sti push movd or dec inc xchg sahf xchg inc mov xor wrmsr xor lcall adcl mov lahf sbb push repnz std rclb mov das xchg outsb sbb inc push (bad) rol push and dec mov push dec ds mov decb cwtl lock cs mov imul sahf sub (bad) cld fs xor mov fild scas adc (bad) xor iret sbb cmp es data16 sub mov sub lret dec jg,pn repnz dec mov popa (bad) mov int3 aam insl nop push cmp sbb cs mov fsts push rolb pop and mov aas addr16 test dec xlat cwtl repz push and mov cmp adc push inc adcb movl hlt outsl jge mov sbb ljmp cmp jecxz sbbl inc or xor or jo xchg mov lds cmp xchg mov loop sbb int inc push cmp xor mov pop jae pop pop imul xchg cmp mov or stc leave insl mov notl adc inc or cltd add cli push cli and mov push add rcrb lret sbb and mov in dec test dec mov jge push scas xor out push lcall lret sbb mov lds lds add repz jp ficompl inc and xchg cmpsb out into adc cmpsb sbb outsb enter fistp dec sarb dec loopne aas add scas mov push inc adc adc dec enter cmp (bad) clc aad add cmp lock repz (bad) pop dec lods push or mov or jg or arpl (bad) sti cmp rcrb invd jmp lea mov lahf mov jmp out lahf dec add nop fwait mov cmc loopne mov and repnz ret pushf inc stos js sbb mov push jnp (bad) int jmp jne cs fdivl mov iret adc loop out mov add sub in xchg insl add sbb out inc decl xor jge les mov scas ret imul iret mov pop mov mov rcll cmp dec jecxz call test divb mov push add dec sub mov repnz data16 fisubrl mov add popf iret mov sub cmp loopne push popf jmp int pushf icebp movsl (bad) rcrb mov jbe cmp xchg push sbb ret jbe pop fstps in clc mov push icebp call pop mov addl fsub pop or lods mov inc sbb int xor inc jle push negl push pop push sub insl jg imul gs pop sub sti adc push cltd int3 and mov mov sahf pop add mov mov xchg or ljmp rol push sub push cmp test test iret jno add insl sub adc cmc pop popa xor adc cmp pushf in lods xchg pop cli adc mov or sub xchg jle jnp sbb cmp jne daa fadds js dec insb sub in sub fldt stos mov fs gs push lahf inc push aad adc xchg call dec bound mov hlt mov cmpsb stos jle ret aaa (bad) mov ret shlb ljmp decb jle lret call aam popf mov adc jno cmp jbe or cmp xlat dec mull dec imul sub jae fimull xorl mov xor call dec jnp ss jl test std test pop fdivp push mov xor xchg xor dec stos ds cwtl jbe leave cmc mov mov fsubrl lcall or rcll inc in into dec in cmp push mov mov icebp aad xor insl adc push sub hlt and push enter or cli mov cmp leave into lea mov mov mov adc jmp push push mov lock push popf cmp cld (bad) in jg adc xchg (bad) mov movsb subl pop adc xchg jae add hlt xchg in mov imulb push fdiv pop xlat cmp mov mov or pushf xchg lods push out jnp and adc mov mov jmp and add mov push push dec pushf sbb (bad) sub cwtl mov mov mov movb mov cli sbb (bad) into pop or or xchg pop push jmp sub scas rolb mov fisttp (bad) fcmovnbe mov fscale xchg call gs fcomps fsubr rorl loopne add adc lea or test sub jecxz in or stc ja aad ret dec bound subb mov fnsave lods or js test dec aas sub loop push test pop mov add mov movsb movsb pop mov inc out inc mov jl cwtl mov sub repz inc adc inc test xor cmc pop mov les jbe mov inc mov dec repnz ss mov adc pop ret leave add inc dec add jmp notb loop dec outsb and nop inc inc (bad) dec xor je popf sub lods fisttp in sbb dec shrl cmp inc addr16 sbb incl xchg pop sbb out mov or xchg ret decl popa mov push jb insb outsl jne in push int3 adc mov jle xchg (bad) in pop dec lods faddl jl fbstp rorb mov inc scas pop mov xor push xchg insl fsubrp mov jo and inc add and stc mov add vshufps mov movsl push comiss add out mov test jmp inc mov sti pop test das in xchg mov daa mov (bad) ret adc je in pop movsb out push and push loope ror sbbl xor ret sub inc pop mov mov mov push unpcklps jmp add sub pushf push out inc int3 and xchg inc cli xor gs fcmovnbe dec mov sbb xchg imul js mov jp iret ljmp xchg movsl xor pop pop sbb ret pop (bad) (bad) icebp jle (bad) xor in popa inc arpl pop sub add dec mov push nop loope dec insl fcompl jne lds jbe lds fwait pushf hlt dec loope cwtl mov inc add clc dec mov bswap and jmp sub lods and fstpt or out mov mov cmp adc cmc push call sbb insl jg test pop loope in aam or push lock lret inc aad into sti cmpsl lret dec and mov das lahf outsb xor fcoml pop lods or insl imulb add (bad) daa imul push movsb sahf add bound scas push push pop adc jge pop (bad) push sub mov inc fstpt cmp cltd jnp add mov aam ficoml imul lret ds push xchg push add into test adc pusha cmpl pop jne sbb or ficomp dec inc add dec (bad) dec push cmp std fwait jg and aas (bad) in add mov out ret lock mov lahf inc sbb aam nop std add lret and dec sbb frstor jmp aaa stos rcrl sbbb jecxz jne xor add sbb add enter cwtl dec (bad) roll fldl std out adc push mov add cli in mov xchg pushl mov sub and dec sub (bad) inc test add into les cltd cmpsb ljmp test bound daa mov in out adc sbb pop js ljmp repz jmp std sbb lcall jns popf xlat xchg insl iret dec add cld adc pop pop xlat sub cmp les push push or jmp xor pushf jp pop aam lret inc aas jns js in es fmuls stc jns cmp int jae sub mov sahf jae lret fpatan xorb out cld int dec into aas jae xchg jnp rcll addr16 pop subl repz pop scas nop push addl out test pop pop fldl pop adc cmp mov int3 fsubrs sahf xchg jmp jmp movsl jl jne pop aad mov bound inc das (bad) lcall imul pop pop jae sahf mov push mov lcall add jbe jmp lods xchg or add aam iret and test and inc cltd call fisub or cli xor jns and pop das push and aam lock sub push (bad) add and push rcll xor mov in pop les mov push in push push push adc pop push ss inc fdivrl xor mov cmpsl ret movsl daa repnz out mov pop lods xchg cmp scas das and shrb scas mov fistpll pop (bad) jae (bad) sar push clc in add ljmp mov mov lahf cs cs fstp (bad) xchg stos fwait sub jge int int jge scas lahf pop mov mov and push leave fsub xchg adc xor rolb in enter or cmp (bad) mov data16 std pop mov xchg loope or ret mov lods push sub arpl xchg aam lea in jo lret mov sbb test or xlat hlt scas imulb fidiv lret and xlat and into mov out scas jg ret pop cld xchg dec sbb cltd rcll test enter xchg inc das pop and je and loopne icebp jl xchg loope enter jbe mov and mov jb xor mov outsb mov bswap enter out cmp pop (bad) dec (bad) iret push aam test push mov (bad) mov mov pushf push push iret mov xchg and xchg lahf xchg cmp mov scas imul popa or js xor add (bad) push mov mov push mov gs lret in stos in mov sbb push push (bad) cmp pop cmp aad es outsb mov jmp sub add (bad) mov fidivrl (bad) test inc jmp mov pop jb pop pop lods or mov add dec or xor mov movsb xor lods or pop mov or and sub cmpsb dec dec jmp std imul dec pop jo push (bad) sar inc sub test mov cmc and in sbb push cwtl adc add mov out inc push test sbb fisttpll pop adc xor fucomp mov mov in mov adc push mov mov mov xor jae pop mov push dec add or das aad inc mov xor pop mov or scas sbb fs sub sub sub in daa sbb inc pop and or inc pop loop cmp call loopne mov loope inc test inc stos inc xchg fidiv lcall inc lret outsb inc mov fucomi imul mov test push and jno mov lods pop jne xor xor je jg fisttpll test inc dec ret push sahf sub inc sub xchg stos sbb and push pop cmp je shrb push push fldz outsb out push (bad) (bad) imul cmpsl sar xor in out repnz push call es data16 enter repz cmp jnp jnp xchg dec dec lock and adc cmpsb mov mov sbb jg jmp (bad) sub loop pop iret or mov pop jecxz cmp iret push outsl (bad) fistp aaa pushf cwtl loopne mov jle xchg sub fnstsw xlat mov adc aam or mov xchg (bad) xchg mov cmp sbb gs aam mov mov fimull pop mov nop cld test or inc xchg cmc jnp cmp add stc jbe out dec mov out dec es je pop xor and add (bad) mov mov dec fs pop pop popf cmp jbe add push push lcall aad push es outsb repz mov xchg push iret stc jmp fstpt je sub jne and lahf push or popf push das popf xlat mov leave cmp je mov vsqrtpd rorb xchg or loop test cmc jg push mov daa aam cmp in push cmc pop add in cmp lock push das call imul cmpsl bound cmp inc jge xchg pop test pop push push xchg js xchg pop pop xor cwtl lock cmp dec add jl lret fs or (bad) pop push pop sub jns mov mov mov pop ss xchg inc push sbb or xchg mov cmp mov push adc xor or mov shr fcmovu inc push dec push lods rcl js in push fst popa sub sbb popf pop leave pop in js repnz push in adc mov mov push push data16 fwait movsl push sub xchg dec sahf addr16 pop add xor fimull xchg out test dec (bad) sub enter imul imul add aad mov roll dec ljmp outsl call mov adc addr16 rolb pop bound jle sti in imull mov mov shlb xor enter pop stos int3 xlat dec fwait dec jmp daa jnp or aad cmp scas cmp sub mov xchg jae dec repnz push repnz adc add and mov xor shrl cmp cmp inc hlt and xchg and push fadd fcmovbe cmpps movsl sub es addr16 stos xlat repnz inc inc shrb push call or cmp mov lahf or xchg push mov jb out (bad) js into incl cmp dec insl pop inc lock adc iret pusha (bad) or das cmp insl test fcmovnu adc into (bad) mov adc leave cmc sti iret dec (bad) scas push jge or fstps daa rcrl cli lcall pop fwait mov push shrb outsb lret push add inc pusha lret aaa jno aam test jno cmc (bad) inc xchg or add mull sbb xor xor test imul inc inc dec in cmpsb inc mov jae ss int3 sarb test push outsb in inc fbld push push ficomp xor mov adc inc cmp (bad) cli pop sti and adc dec hlt in xor pop ret fadds dec push popa sub mov bound cwtl bound testb loopne aaa aad addr16 sbbl mov arpl xor out cmp push add jno mov cmpsl dec jecxz imul ds pop movsb sarb leave in cmp push pusha rorb (bad) test adc in jle pop inc repz cwtl lds inc negl and and dec and popa (bad) int3 push adc jg xchg pushf es add xchg jge pop (bad) pmulhuw sahf cmpsl arpl dec inc adc push nop lret xchg mov mov mov cltd pop mov add or mov out lods push outsb std (bad) jmp xchg addr16 ret jo mull sti xor jl dec cmp cmp adc out loope fildll xlat lcall add pop aad jbe pop push in and cmpsl pop shr cmp out out dec push mov and test cmp ljmp insb jnp lahf adc into aas add pop sbb mov mov enter daa mov scas cwtl pop ficomp pushf std test mov mov lock es das clc xchg ds xchg adc add mov mov ret push cmc push push aaa aas jle bound iret cmpsl mov dec pcmpeqd push inc mov inc sahf push loop cmp repz pop cli adc jle jecxz out xchg mov faddl jnp pop mov or xor mov cmp pop test popf test jo jb cmp outsb lahf push aam sub mov sti fwait cmp test jge inc and push lcall pop jecxz fptan xor adc test popa (bad) cmpsb or lds xchg mov (bad) icebp sub ss rclb adc (bad) les imul add test popf or jne loop loop das sbb std sub imul inc movsl cmp sub movsb in mov mov sub cmpsl dec pushf outsl lahf (bad) aad mov outsl test push jge cmp scas add icebp push arpl pop (bad) lret test pop mov (bad) push js dec jmp push sub jp test or ret cmp mov mov repz outsb push popf sub fs sbb dec notb mov cmp shll xchg cltd je sti push out daa lcall adc insl in pop and lods ret pushl jb mov cmp (bad) xor push outsl lret vcmppd fst or or cmpsb xchg and push sbb add dec push jb stos subl mov js outsl push mov jnp and addr16 inc mov fstl xor jmp mov (bad) cmc outsb sbb mov jno and adc mov lock sbb lcall dec jl mov cmp and test repz into lds shufps add fnstcw xchg push or mov push xchg sub scas in push pop subl mov mov dec pushf add cli je mov sub clc jbe fs xchg movsb cli jecxz jo insb dec scas fcmovnb imul (bad) sub popw leave xchg sbbb sbb test mov xchg adc jne push ja lcall enter decb push pop in daa gs push inc stos ja xor sub mov dec cs loopne xchg and or mov repz loope faddl adc roll arpl (bad) fisubrl (bad) mov mov fiadd cs ret (bad) xchg insl sub sub jnp aad pop stos das sbb imul int xchg je and movsl sbb mov aas in mov lea inc (bad) test insb cmp cmp xchg pop movsb incb lret or mov shlb adc or cmp test movsl and jb aaa out in inc add sub sbb in sbb dec jno daa hlt loope and pop jmp iret inc icebp push (bad) sub icebp xlat fistp push push (bad) dec push jns test fbld js jnp,pt inc in (bad) into mov push add (bad) popa sti ljmp mov push cmp jecxz,pt adc or mov insl sbb and ljmp mov inc mov cmp xor mov in or mov jmp mov sbb inc jo add dec fs lret add insb xor inc xchg jg shll pop adc pop cmp test arpl in lods int3 fcoms stos sub mov mov pop test xor call shlb scas (bad) push cmp xor jmp jmp inc insl fmuls xchg fs mov xor sahf jb int3 pop mov adc mov jmp lret jle faddl (bad) push aad add add push mov insl inc imul push ret movaps push and scas and adc mov lcall mov push inc or fistpll hlt dec fs out xor in (bad) shr jne xor (bad) rcrb jne int3 push sub sub cmpsl push dec add mov cmp movsb inc pop dec jnp jo jbe xor cmp xchg addb clc cmpsl ret pop inc push mov push dec adc inc jmp cmp leave push rolb dec jl nop inc int jg (bad) jl mov and movsb mov sub pop jp iret rcrl pusha aad in xlat pop cmp xchg mov cs sahf insl mov pop dec int adc sbb mov xchg cwtl and push jl xchg enter fwait inc movl incb push das bound sahf mov jns mov dec repz mov (bad) gs repz mov mov mov sarl sahf xor fmuls dec out sub movsl xor xor pusha mov stos sbb xchg hlt cltd lea cli cmp adc pop cld inc xchg xor mov sub xchg sti addr16 movsb ja fadds push cmpsb xchg ss push adc repz jg push sub callw jle add int3 cld int3 xor add cmp leave inc insb div (bad) mov mov or cmp sub daa or (bad) push mov push jo jle js inc je scas arpl out xor mov clc pop mov (bad) and inc in in fldcw incb cltd xchg fildll test ja aaa pusha ljmp mov call and jno or cmpsl fcmove sbb and lods sub jmp fmull pop movsl imul xchg sub adc and inc sub mov pushf subl jne mov adc icebp stos lahf sbb pop cmpsl mov icebp in test ret mov dec xor outsl xchg ja mov sbb cmp test shr repz roll sbb adcb dec xor jo add or test pop fmull into sahf xchg xor and sahf add adc cmp dec in dec adc inc aad pushf jo jae xchg sub (bad) ss mov pop addl jp sti outsl sbb xlat out push adc lret daa mov aam and xchg movb cld xor out pop aaa adc int3 adc lcall lods pop test fdivl into lods push and (bad) mov push pusha jns aam adcl or js lret push cmc dec adc jmp int3 mov sub imul xor daa pop cmpl xor aas inc xchg hlt jns cli mov movsl int xchg loop sub (bad) jecxz or jb pushf jne mov push add pmulhuw sub aas rclb js or jp lret pop lea push out inc add xchg inc mov nop (bad) ja sub and mov rcrl (bad) push ljmp sub (bad) fsubrl fisubrl test push sbb lahf pop por xchg jne jne push cmp ljmp fwait iret lods xorl outsb (bad) fstpl popa cwtl dec jmp push mov xchg arpl xor enter inc add fs imul fmuls pop jle iret xchg movsl loope push jle cmp out repz pop pop xor or outsl fisubrl imul xchg iret sub fsub xor or and sbb test push adc arpl out pop jae repz add or mov dec call lahf addb mov sub or cmc lahf repnz pop lods pop xchg xchg inc mov mov dec mov stos sarb cmpb mov sbb lods mov mov ja (bad) sub lods and inc pusha dec and xor cmpb and jmp xchg xchg stos fistpl daa mov push mov and jl cmp iret outsl pop outsb (bad) lret in jno mov popl sub call scas hlt push xor push pop popa cmp sbb jmp out addl xor dec out dec sub repz add jnp mov pushf inc and jb sub push or mov or and in fistpl mov cwtl aad cmp aad lods sub fnstcw sbb popa outsl pop and leave data16 inc insl jecxz mov xchg cmpsb ljmp sbb lcall int3 and xchg aas enter in shll xor addl cli insb lea movsl inc xchg lahf test enter ja in sbb jecxz xor insl dec sub in (bad) jge loope and or cmpsl in int3 inc in (bad) push push jle push (bad) fmul dec xor and iret mov jmp lea out mov xor fwait popf cld mov into cmpsl das imul popf jmp insb mov pop or insl inc mov dec xor aad pop cmc sbb mov mov cmpsb pop dec insl and lds sbb sbb sbb fcmovne (bad) leave sbb sbb or mov aad push dec loop jmp outsb mov nop push out xchg mov jbe popf js mov loopne fnstsw lcall jmp ret mov arpl mov (bad) (bad) jecxz ja (bad) mov mov mov push insl imul sbb aad jg cwtl jmp lret fimul ja cmp jp or mov in fld mov loope xchg jb in xchg adc mov lods push mov add lcall iret std cmp jmp push enter les sbb popa icebp pop lret insl mov mov icebp adc cmp data16 pusha mov push mov push pop mov mov fidivr jbe cmpsb inc sbb inc sub pop ss pop aaa jbe inc test or cmp sbb les ja jle dec mov mov arpl subb notl push and pop pop leave icebp stc (bad) mov nop jge pushf int3 mov orb add ljmp and jp push xchg or or xor sti adc push dec mov je inc movzbl push xlat sub mov push loop push (bad) mov repz js lcall test int3 and or or outsl negb (bad) sbb or mov push sub lods out das bound cmp fildl movsl mov push fistl inc push mov pop cmp xorb mov daa mov dec (bad) aam cmp cli cltd insb (bad) loopne sub or out sbb rcr or aas shl cmp mov fdivp scas outsb sub jge inc mov cmc fsubr or jnp jge fisubr xchg cld popa out add insl push outsl outsl addr16 push int3 xor sbb sbb dec fsubrs lret add popf dec dec mov push dec or mov daa orl out add dec push inc jae jp insl push push mov sbb cmp cmp mov xchg inc gs sub shll daa aad into bound dec rorb popf scas out test neg or sbb das dec mov sub rcrl ljmp push aam cmpsb out jp (bad) lock and sbb mov out ds sub add xchg pop mov pop cwtl sbb sbb fimul jbe fucomi dec jecxz aam shrl adc sbb lea sbb idiv jne mov dec test lret movsb call out mov xor mov and orl test xacquire in es push add mov add push inc insl (bad) dec xor lea (bad) mov pop cmp cwtl xor stos in mov mov (bad) testb (bad) xor sbb arpl dec lock popf dec and mov icebp call sahf (bad) out mov dec xlat mov subl cld shll ret jp or jecxz addr16 repnz inc pop repnz in cmpsl mov mov fnsetpm(287 iret mov or adc add pop testb push mov adc in lret mov lock and push xchg xchg cmp push scas loope sarl cld les mov pop xchg aas push jmp lahf imull push (bad) mov mov xchg push sub sub negb scas jnp loope repz dec js cmpsb into xor gs in jecxz ss cmc dec sbb inc mov mov popf jle shrl dec call sbb sbb xchg pop xchg mov or shlb push loopne mov cmp or scas mov mov sbb out push (bad) add js cmp xchg xor xchg and repnz inc add jb lahf mov and dec inc aam sbb test fldl cs outsl ds insl pop arpl pop pushf insb push push cmp and xor cmp rcr rcrb pop or push lret sbb cmc inc int3 xchg inc mov lcall cmp dec sbbb into divl into je fldenv add xor dec cmp adc inc and fsub jmp outsb xor mov out inc sti cmp xor jae and ret sti xchg loope test jle cmp scas adc in cmp into add stos call movsl stos dec es adc cmp mov cmp insb or dec in out addr16 lods and mov cltd add scas imul pop outsb cld inc lahf adc inc ret push jns notb jnp xor orl jmp (bad) mov adc mov arpl or mov loopne popa sub es mov orb and inc pop movsl sbb loop (bad) or imul loop pop and xchg inc cmp sub rcl cmp cmp addb jg popf xor lock add cmc push cwtl or dec sbb pop mov mov dec std ja cmpsb ljmp and nop push cmpsw and add pop mov addl mov pop add (bad) mov fstpl cltd daa dec out js add fsts sbb pop add fstps lret add push loopne loopne add and enter pop and pop push xchg jg data16 pop pop pop sub in (bad) mov cld shl data16 mov cmp sub push or int xchg in (bad) sarb jo push outsl jecxz cmp out push aad ror mov pushf loop jns adc and imul xchg mov xorl pop std ucomiss ljmp dec fcomps lea cltd adc add dec or in dec or or xchg test mov mov fldl icebp xor test adc (bad) hlt pop push jg jge push fwait dec clc or into jae in lret and pop shrl dec aad lahf dec pop jmp mov add ldmxcsr dec sbb mov inc das cwtl clc aas push mov aam or adc xchg scas mov mov pop fs leave mov sub int3 daa xor lcall sbb mov jg cld mov jmp pushf int xor push adc add lods jb jp dec in inc jae sarb je jne fstcw js dec andb jg shll add cmp aad (bad) (bad) mov xor mov icebp in pop xor fld clc scas jno xchg fiadd (bad) xor cld (bad) jo imull stos fisttpl cmp or xor repnz push insb mov (bad) and aam mov stos das jge popa movb out faddl push or pop in lret lods insl lods pop cmp xchg sbb inc inc int3 sub add dec inc cmp test hlt xchg mov lods push das sub mov ds mov jno (bad) add mov adc mov repnz mov cli ja mov aam sub cmpsl in mov mov xchg pop ds ljmp je cmp outsl outsl push in adc sub or pop or push xchg movsl movsl pop mov mov adc xchg or rol and xchg arpl ds hlt insb push ss into sti xchg jns inc into loop mov cmp das incb ret push loope mov mov adc push mov iret movsb lock cs jae pop and cmpsb rolb pop xchg pushf lcall jl mov mov push mov sti test mov mov test add fldl roll sub sub in or inc push add sti inc add hlt dec jecxz dec in fsubs push sbb outsb stos pop shrl nop je mov enter or lahf cs orl xor jmp and bound push jmp aam mov pop sahf sbb addr16 pushl or inc ljmp sub addr16 lcall xor mov test and mov inc int3 outsl pop push cmp mov ds xlat das sahf dec iret cli divb icebp je fstps cs adc cmpsb cmp cwtl rsqrtps in inc cmc lds mov push rcr add inc mov dec (bad) pop mov adc je sbb pop ds ret js jne ret mov inc loop lods (bad) mov mov cmpsl scas pusha jmp outsb jb adc arpl xchg imul shrb cmp aam dec lcall and lret enter pop addl lea mov sbb shl inc jg adc mov scas xchg imul ror adc cmp jae repnz sbb xor push inc cmpsb dec rclb sbb jl ret jo movsl jg mov popl xor pop xchg and sub mov aaa xchg add push (bad) cmp aam inc rolb and in xlat and sti mov or lcall ja or lcall cmp cmp sbb mov pop and outsl push and pop test dec dec jne stos sub jle scas inc leave jle (bad) jbe cld lret stos cmc xor shll (bad) (bad) les lds inc sarb push sbbb fnstsw cli (bad) cld pushf xor subl mov fistpl and pushf adc mov mov inc jg stos ret adc jns fistpll cmpsl adc clc in int3 sub dec pop aaa sbbl xor lret cwtl and pop sub aaa dec cmc xchg in scas arpl mov jmp stos loopne push mov cmc xchg xor lods fs push (bad) and push lock and mov scas hlt cltd cs hlt cwtl bswap add xor push push dec jbe mov xchg and mov shr dec mov mov bound mov cmp imull push xchg pop popa lahf mov imul imul dec mov (bad) sarb mov and mov push scas pmuludq dec mov jl loop cmpsl pushf mov les or mov xor insb iret jmp sub xor pop jge icebp (bad) and dec lods pop in fimull xchg dec call mov xchg inc enter dec pmaddwd dec mov gs xchg jge xchg inc add mov xchg aam add cld inc mov inc pushf and dec or mov mov pop mov xor sbb mov or push pushf out aam sub mov sub stc xlat or jge scas pop pushf (bad) stos jmp enter sub jbe inc sahf xchg outsb jns and out pop mov jbe sub adc in fdivl jb addb divl andl jecxz cmpsl push popa mov (bad) fisttpll les scas dec mov mov mov jg inc jns pop xchg ss and mov mov pop loopne js jb jp movsl out or into inc shrl xchg insl xchg fistpll outsl dec mov in sahf xchg fmuls sub movsb lret mov pop fldcw xor pusha xor addr16 xorl jae and icebp xor mov test stc mov scas ret or add sahf jnp mov mov mov scas pop xor out out or fildl push cld or mov fbstp inc inc pushf cmp pusha test adc jge mov enter pop out and push jmp cmpsl pop mov test mov (bad) ljmp mov in add movsb in adc add in mov pop int push pop test cwtl xchg sbb addr16 dec lods bound call arpl mov fwait popf out stc push mov mov test adc jge iret cltd pop out roll jno call mov push xchg arpl lock push or xchg push pop fldt (bad) or pop pop sbb stos loop loopne jo enter cli cmp xchg (bad) jo xchg cli mov sbb mov test fildll int jb (bad) xchg es xchg inc cmc cltd out mov sub mov add mov lahf cli repz cs mov lret sbb push xor jnp inc enter sahf (bad) sub add aad insl pop sbb mov mov sub lea cmp daa ret push and pop cmpsl cmp into xor add xor sub ss inc xchg sbb vaddss movsl xchg pop enter movsl jnp mov adc cwtl jb push lret xor jno movsb aad mov stos idivb popa adc push cwtl or and sub (bad) sbb aas fchs mov incb pop loope jg out xchg ja dec nop cmp mov in cmp lahf rcll cli pushf xor fildl addr16 loope adc test scas stc stc in dec in outsl sub dec jno inc pop cwtl sub inc lods sub movsb xchg dec je push cmp fdivr ja les push loopne sbb lds sahf sbb call adc insl fistp fmuls insb roll and mov into or xor movsb sbb mov fs mov std loop and fsubs xchg insb fcom dec mov push pop pop aad (bad) cmp (bad) xor bound sbb addl or jno mov popa fs loopne dec jns imul in push cmp mov add add add cld xchg and (bad) add aaa mov paddusw and hlt in rcll fisttp push push jne int3 dec cmp icebp outsb push test pop (bad) sti lds mov (bad) mov mov sti xchg inc sub sbb mov pop aad jp lea (bad) mov test xlat lahf mov adc or hlt cli lcall push jle mov mov mov mov popf push mov mov inc fmull es incl add addr16 pop jae (bad) adc rclb inc data16 mov inc push sti cwtl outsl push call adc inc das inc pop movsb mov les cmp std xor insl lock scas mov scas jmp lock pop fisubrl push jl (bad) jb outsl mov jg push mov imul (bad) es mov fldcw hlt repz mov je jb push mov inc pusha mov ret ret mov or aad cld leave (bad) hlt (bad) stc (bad) cmp sahf mov dec mov adc jbe fild sbb rolb cmp hlt outsl iret (bad) dec adc mov or lods sbb push push pop xor int3 sbb add js and pop dec inc popf jae movsb fidivl lahf scas sbbl loopne cltd xchg gs (bad) hlt xchg sarb dec lods hlt mov inc push adc add cmp pop push lods mov mov gs mov aad (bad) jbe jg push jns mov bound hlt xor push fdivrs in stos inc ds fs mov or out or jo ror loopne cwtl mov adc inc mov inc outsb xor aas xor dec adc fcompl addl leave sbb dec bound stos and mov pop pop out sbb jns out mov or pop sbb mov dec push adc push adc aaa std xchg pusha sub cmp enter push ja arpl imul xchg nop inc xorb sti push cwtl jg push and sub or inc xchg aad (bad) loopne mov mov dec push lods stos cli cmc inc rol xor dec xor movsb jns arpl pop xor dec cmc xrelease scas inc xchg sbb cwtl fimul ss adc lret imul cmc cmpsl daa cmp mov xor cli mov pop lret cmp test insb dec cmpsl mov idivb lcall pusha mov sbb adc inc mov lds adc int clc jg rolb add (bad) out mov aas pushf (bad) inc push mov push sbb mov cli push inc cmp xor std das xchg cmp out mov jae dec addr16 dec sbbl cmpsl lcall and aas add cmp xchg push int3 outsl push cmc or nop inc scas cmp ret pop xor shrl and sbb ret pop xchg outsl test xchg mov jecxz xchg inc ret sahf (bad) push add es insl fwait inc sbb mov add cli push mov gs jo adc mov push (bad) mov dec push popf pop sub sub dec push cmp rorb push cmpsl andb sub xchg fbstp loope nop rorb jl and mov cwtl sub cmp xchg dec and dec in dec jae xchg xchg jg pop jo jno sbb mov or mov aad movsb mov xchg insl les popa mov sub cmp mov je (bad) mov xchg inc jne or leave lahf out cwtl fiaddl ljmp fwait inc scas aaa cld lret int pop mov mov pop add adc jp or mov push ljmp repnz jmp jge repz arpl jg and mov xor mov movsb inc mov pop cmp xor xchg or lcall dec cs push scas dec loope mov push xor pop mov lret scas push and pop add loope jb jb test pop mov sub dec push ljmp js sti push fdivs mov jmp mov sbb push jmp stc pop jnp fadds (bad) sbb pop sbb dec mov cmp dec and jle mov movsb push mov mov and nop dec jl rorb xor cmpsl (bad) mov add pop por rol cltd push xchg cltd xlat loopne int xlat fadds adc test sub add pusha rorb xor fcomp sub (bad) mov cmp in lret mov mov (bad) das aas dec mov and mov mov sub pop (bad) sbb pop out and xchg xor (bad) fidivrl (bad) popa scas inc rol and nop dec fwait daa into xor fsubr aas xor rcl mov adc jl bound popa mov sbb sbb add mov ret add shl clc out cmp cmp (bad) jbe sbb repz psrlq push (bad) sub inc enter pop mov div xchg pop pop adc xor xor sbb add sarl cmp inc call dec xchg outsb data16 push or popf lahf mov ja repz imul movsb imul (bad) push xchg cwtl push pusha and sub hlt xchg sub out sti add jne dec stc shlb stos leave je ds sub sub (bad) sub in mov mov jmp out mov add int3 stc adc fstpl push clc add cmpsb mov das or andl or mov add push mov mov cmp je jp inc test sub ljmp std ret loop push and repz sub push bound adc sub xlat stos call xchg or sub fidivrl rcrb cli sahf adc fbld cmp sar mov adc jp lock dec ret aaa jp xor pop lds mov xchg sbb (bad) dec ds mov in jae into fcoml xor xchg or pushf pop les cmp xchg adc and pop cmc add cld jmp je add movl mov imul fcoms js cmpsb call popa mov orb test mov cwtl inc adcl sub fidivl sub sbb mov pop lock xchg nop jo xor aaa outsl mov jmp test ret and xor bndldx jnp mov loope adc and add incb in cmp sbb mov clc pop and dec pushf add lea aaa addr16 cmc pushf cli mov xlat and imul and repnz imul cs jae sub mov das jle aas mov mov adc jno pop inc xor sub ss push bound jle ds and in (bad) in imulb (bad) lahf loop inc repz (bad) repz jle dec add test js (bad) dec iret cmp xlat push inc jmp pop fnstcw insl sbb mov xchg outsb ss pop call cmpsb imul leave cmpsl xchg (bad) cmp cwtl jno xchg push ss xchg popf fwait fwait pop movsb and in cmp jae pop sahf pop inc dec out mov cmp add rcl jle js lea lret fisttp movsb cmp pop aas insb xor dec fisubrl mov cmp leave lcall ficomp cli lahf (bad) inc mov lret pop jbe icebp sub mov pop xor or mov mov pusha cmp pop adc cmpsl xchg lahf lods lcall pop jno adc xchg dec cs lret inc cmp mov adc pop mov sub les inc mov aam mov inc mov adc push lcall pop outsb bound ds cltd jnp jns push and repnz or lds adc sbb lea dec es lods in jae in movsl std mov aaa sbb out sbbl arpl dec inc loop scas adc in add rcll insl or fmull mov cs add jno les inc out daa in jl in jnp gs fidiv lret leave decb cltd shll fsubrp push dec mov repz ror cmp sbb sub cmpsl repz in hlt clc pop inc xor and xchg cli or xor pop les adc loop aad cltd (bad) jle push fistp fcmovne mov push not in sbb dec (bad) sub mov xor sahf mov mov xchg pop mov rolb xor fwait ljmp pop sub das push mov xor jmp lods xchg adcb cli add adc in mov mov jl cmp add pop lret dec cltd testb and xchg pop mov into and (bad) in xchg pop mov repnz out sub mov adc xor addl clc add out ss mov rcrb inc (bad) test ljmp es dec enter jmp test jno repnz sub xchg dec faddp scas xchg leave arpl xchg addr16 stos dec cmp xchg sbb (bad) jg sub and mov dec dec out xchg sub add cmp cwtl jbe xor push int or add cli (bad) enter jbe mov mov out xchg xchg xchg lcall jo mov iret gs mov inc sbb scas fld lock and cmp cmp fwait mov lret mov jmp mov mov mov jecxz leave and jns cmp fwait mov mov jne pusha lahf jp fdivrs push mov jle mov es pop stos pop inc push leave jnp sbb xor and fistl inc popf jno dec daa mov mov rcrb shll fs mov push adc icebp add scas test xchg xor arpl ds sbb (bad) leave imulb (bad) std pop and mov mov and scas dec bound mov rorl xor sub and das inc lret sub cli lock mov push adc movsb push shll repnz pop outsb lock xchg jns push add push push imul movsb repz test cmp dec inc jbe pop adc insb notl mov xchg (bad) out (bad) mov xor and fwait mov outsl jmp cmp bnd rorb fistl loope enter or popa mov gs sahf flds hlt fsts mov lret adc clc mov dec and into jbe jle (bad) movsb in fimull test stos xchg fldt (bad) xlat lods enter fist ror and adc icebp pop jno cs aas sti call jne pop lret mov mov push mov iret cmp fwait (bad) aaa jo popa mov and jmp test push outsb int inc ja ja jp into out pop adcl sub jle dec mov call outsl jmp add jg out movsb inc xchg fcos jne jns mov cmp out inc aam (bad) xor sbb mov movsb and mov imul cmpsb pushf push inc mov lock adc loop call call fcoms rol out push add dec sbb aad xchg scas cmp mov fmull mov push aaa aad add dec fs scas call dec cs cmp push sbb scas aam adc in out and inc adc clc push in outsl and cld int3 outsl dec jmp gs fcmovnb inc mov rorb mov and sbbb mov push fucom mov jge (bad) dec (bad) or out ficoml (bad) xor jmp fisubr inc lahf pop (bad) aaa fldl ret xchg (bad) std adcl daa push push xor enter jne (bad) int3 les addr16 pop dec inc xchg (bad) clc cltd and lods movsb loop repnz fwait cmp jg rorl mov mov repnz rorl out mov das mov sbb into jbe mov cmpl inc test je testl loopne (bad) dec test fstl xor call shlb insb dec push ret (bad) cmc pop (bad) call and mov cmp test lahf mov or cmp aaa (bad) jecxz dec jle (bad) xor add jno jnp inc push jg jne gs insl loope dec clc sbb aaa aad loope addr16 xchg or mov sub jmp mov and aas pushl aaa push (bad) xor mov lret movsl xchg mov ja dec pop jp pop mov mov cmp mov xor or dec dec insl fs aaa pop insb mov ret inc inc mov mov sub dec icebp mov aad mov xor cli adc aas xchg adc sti test test mov sub mov mov mov rorl mov ds push scas push xchg mov pop xchg lret xchg sbb xchg xchg pop mov push pusha pop rorl and mov aam lcall lods dec cmp fmulp mov xor adc xor cmpsl (bad) mov test addb stc pop das mov pop pop pop jb xchg cmp pop adc xor jmp outsb mov xchg sbb add cli pushf hlt arpl leave out pop mov jns fcmovnu lea mov push and pop pop sub xchg inc leave (bad) jge out push (bad) adc xor shlb xchg and xchg push out rol sub pop leave jne shr ja xor xor popf xor out ds xor xchg mov rcll pop cltd jge pushf faddl or test stos addr16 and ret push pop mov lock pop jg push scas dec rolb jecxz test sbb loop hlt xchg icebp push ret and push inc leave mov pop es add jno or hlt ss push loopne test mov cmp arpl fcompl repnz xor pop test mov out popf ja cmp adc xchg pop test push cmp scas clc sti and cmp dec mov add xor outsl sub jle js std lods scas sub xchg pop outsb negb cmc out xchg rolb mov mov lcall shl imul cmp mov jl push lods inc sbb jmp sti push mov dec or add andl mov sub iret xor mov std dec push (bad) xor data16 push lret scas and fnstcw stos enter pop sahf pop dec adc hlt in ss dec outsl out add call push jns inc or inc imul into mov push jbe ret xchg push push xchg cmpsb mull les sub fisttp (bad) cmpsl xlat lock aas add icebp es xchg arpl out mov imul push (bad) xor jmp adc jbe pop movsb and xchg mov inc insl popf imul cmp mov popf je push and cmp sub fsubr cmc cmovb mov xchg (bad) sub mov dec repnz es xchg jnp inc sbb push (bad) hlt jg imulb jae push (bad) or or jle dec mov mov mov lods adc sahf addl js fidivl cmc cmp jns push xchg adc mov enter lea aam inc inc lods cld ss (bad) fsubp loope push dec loop jno lock push ja gs cld movsb (bad) fcompl adc lock int3 jmp in jl or int mov arpl sbb ror in add jns pop daa ret xor xlat mov cmp cli cs mov mov push and mov pop dec and mov push push mov mov sbbl add rol sbb inc fs les pusha pop loope xlat pop jbe mov fnsave pop rol jp into jg int3 loope xchg and sar icebp adc stos fidiv movsb or ss jns arpl inc nop/reserved ljmp push push adc jbe sbb in aad sbb sbb cmpsl fistp cmp (bad) nop scas pop adc pop sub push cwtl xor fdivp daa push fidivr pop fucomi xor daa inc xorb arpl push loop jecxz cmp enter jae pop inc popa push loopne mov (bad) loope shlb or mov sub push and mov lahf mov mov repnz sub mov aam in lea add in jmp out out aaa sub bound rorb push xor out and jp call sbb mov add push dec xchg shll xlat xchg adc repz loop inc lea ret push add jge test lea mov lcall leave cltd mov push sub imul orl sti fmuls sbb and rolb ss push arpl push push pop push incb stc shl fs cltd jo sbb pushf mov xchg or adc fimul adc insl push test lcall dec sarl lods outsl sbb and inc bound scas out xchg sub push sbb and or loope cmpsb ret mov sahf lcall or out xchg les xchg mov les cmc xor add (bad) addr16 xor fldl push mov pop or jecxz call and fwait pop and stos cwtl push jg push fbstp or fbld movsl or mulb (bad) stos xor xor xor dec rcr xchg jne fwait cmp pop inc dec aas (bad) mov push repz dec jno rclb sub pop add mov stos add cmpsl jecxz mov mov mov add pop fdivrs dec out mov movsl adc insb into pop (bad) mov adc or pop shrl push add push lret shrl fidivrl jno jbe test (bad) cwtl xchg jbe mov mov rcrl add das mov add xchg pop addr16 aas loop add cmp daa pop ljmp cli sub js sub loope mov or add sub cmp std js sbb xchg sbb lahf dec mov out movsb rorl (bad) test stos pop insb add pop sbb popf fistpll das rclb push (bad) stc mov jo int3 lcall icebp mov test xor mov xor mov lock test cmp nop out sbb aaa inc xor mov clc pop hlt lods hlt rolb test xchg push jae out xchg mov pop leave and movsb loope fs mov lret sub cli movzwl insb adc inc jnp data16 pop xor mov (bad) (bad) int cmp inc jecxz pop xchg adc rclb and xor dec mov push fcoms (bad) pop mov icebp fidivr xchg lret fcmove and stos xor add sarl psubsb faddl inc jle dec (bad) sbb sub lods mov jle,pn mov es xlat shlb popa iret fs ftst jge xchg leave pusha add xor ljmp mov and xlat fisubl xor cli imul inc jne xor ret fdivl cltd (bad) fstl adc test test add push lds cmp movsb jmp dec ja jp add popa fistpl les cmp out push movsl cmpsl mov ret xor or push cld push jl adc cld fidiv out cmp (bad) data16 stc loopne enter and sub popf jnp jne jmp fistl sub cmpsb bound iret cmpsl pushf aas ds (bad) xor mov cld test jnp xchg inc je cmp or sbb xor pushf les xor push cs xchg (bad) or xchg movsb lods dec inc or outsl sbb jp add outsb addr16 out cli fisubl scas sub adc cmp aam mov adc sbbl (bad) std xchg daa mov into clc leave xchg mov pop daa sbb sub (bad) fdivl add mov jp (bad) and gs scas mov ret sub incb pop adc adcb mov jle cs negb pop pop pop cmp lahf sub das xchg test shlb inc pushf or movd and lock leave fildl sub add xor es addb movsl sbb jp sub ret je es lea loope push jge mov and sub jp jnp inc (bad) mov loope push pop addr16 pop frstor xchg jne jl or in xor cmp jno xchg push jmp or pop fdivs ret xorb leave mov cmp pop lods out adc xor movsb rorb das or mov int3 sub adc mov or add addr16 ret imul imul sbb xchg mov iret cmp loop push scas fiaddl xchg add push cmp cs sbb iret je mov fist xor int3 scas or aas inc and mov stos xchg shlb mov jge xor inc hlt mov push out adc cwtl or cmpsb ljmp call mov sbb mov leave rcrl jno lret jge and lret and push push sbb mov out das mov ffree sbb test dec test add inc jg cwtl mov insb ja sahf inc pop (bad) jae cmp outsl frstor and add xor mov jmp icebp pop dec rorb lcall and cs scas leave jl sbb jnp sub outsb jge sbb idiv or lcall hlt je xchg pop push clc mov push cmpsb mov cs movsb lret pop sbb add aas pop xor lods dec enter pop mov adc cmp or jns hlt rclb cmp add cwtl lods push jo (bad) repz dec xor loope aam cmpsb (bad) xor pop dec fsubp dec or hlt rorl dec xchg sub xchg pop cmpsb movsb ficomp cmpsb roll jmp inc (bad) rorl adc inc xor push push ficoml mov cmp and adc push cli leave dec (bad) jmp xchg repz mov gs mov sbbb sbb jge xlat or mov jnp lea jns arpl icebp dec dec jmp hlt sti hlt jecxz sub aad adc mov ljmp push mov jb adc pop aam xchg and and push or aam cmp sarb mov je cltd pop xchg cld mov push arpl ret mov ja sbb push gs mov pop test mov imul sub notb (bad) push subl xor fistl xchg sbb jmp sub decb sub rep hlt clc xchg add scas (bad) jno adc jecxz fistp scas notb (bad) mov fucom test xchg pusha outsl (bad) test cli mov add mov cmp cmp idiv int lock add repz sub fistl inc mov ljmp mov jl into in aaa nop sbb or daa xor push adc or scas fcmovnb add and repz jbe arpl mov mov push cmp js pusha int test fs enter xchg out mov fndisi(8087 aas or lods sub lret dec ret imulb neg mov inc push leave fwait cmp nop push out jp nop dec jno and or adc es popa (bad) mov inc sbb cltd pop cmpsb sub sti mov fwait inc std push cmpsb imul or xchg cli les xor fidivr ret or stos lret jo loopne inc popa mov je xor fmulp (bad) repnz stos jg sahf fisub enter jne mov fmul jne xor dec adc sub (bad) lcall push push mov loop in sbb mov pop push lds and cmp mov adc mov adc jmp cltd fs jne rcrb mov std cmp jnp aam mov xchg scas fistpl daa loopne daa shll iret fistpll cmp cmp inc jg ljmp insl bound mov fsubl test xchg pop dec pop or pop addr16 jmp movsl jno or cmp sbb outsb fs (bad) subl fldt icebp mov sub mov push jl loop sub cmpsl cli push dec fildll cmp add inc gs mov or inc inc popa inc aad (bad) stos in inc rol cmp and iret sbb out movsl fwait mov out movsb mov aam xchg push fbstp in roll in inc fadds fdivs scas lods jb push imull inc cld call lods cmc subl add dec xchg rolb pop pop lods inc fwait mov cmp mov movsl out or xlat rcll rclb insl and lahf enter cmpsl fnstcw daa mov mov sti push test aaa adc inc sarb cmpsl cmp mov shrd or mov push push push cmp add mov add pusha jae jp push adc mov ja jl mov sbb lods in repnz mov mov sbb mov mov push lcall mov jne cmc mov (bad) and out add adc push jbe push jnp cmp cmpsb scas mov out pop adc dec mov pop icebp outsb fstpl xor addr16 cmp (bad) sbb inc lcall mov data16 jno sub mov loopne gs or dec sarl xchg xor adc mov sahf aad or popa xchg sbb pusha sub sarb mov mov adc iret jnp aad lahf icebp jns add incb test test cmc daa mov arpl xchg mov mov cmpsb cmpsb mov dec dec or sbbb sbb mov add push push mov loop test jno mov xor subl sbb xchg movsl dec rolb test mov les scas mov cmp sub sbb scas pushf inc pop jmp repz in mov mov push out jbe loopne mov push xchg es scas cmc (bad) in outsl aam fwait sub (bad) xchg xchg adc sbb cltd adc gs mov addr16 add mov mov insb rcrb sbb jno rcrb xor (bad) mov sub jb dec pop mov mov std adc and (bad) out mov std lcall pop mov shlb adc lods cmp js lods xchg or pop cs (bad) add cmp in aaa or add call push aas pusha testb repnz push jae mov xchg and fmulp out mov mov call fs in fwait imul sub mov test repnz xor aas sbb adc xchg popa sar mov rorb test js mov and jo jecxz jno aam addb pop test dec jge scas adc div add mov cmpps (bad) leave cmc adc sub mov gs add test in out pop cs mov sub lret hlt pop mov fidiv inc jle xchg int xlat pop jmp je jnp push mov sbb cmp outsl push sub (bad) stos pop cmp data16 ds push lods inc hlt jg lcall cmpsl lea dec sbb in pop fsub dec lds dec mov pop jo hlt mov negb push notl in outsb pop xor call jnp addr16 roll xor mov xor mov jg sub xchg or inc push lds add inc sbb inc cli mov cmp fwait push negl (bad) mov (bad) add adc (bad) repnz pop pop inc movsl jmp call scas pop sub (bad) in xchg lea movsl and cmp adc cmp pop adc movsb mov mov sahf xchg cmp and sbb std mov pop cmp dec pop and in lods add js pop push mov sub or cmp xor xlat fwait inc ror (bad) fildll sbb pop add ss aaa mov in mov dec daa cmpsb ljmp sub imul jb mov addr16 arpl lods push psubw aaa dec push mov jo mov orl jo mov or sbb jne (bad) dec mov push mov out cmc dec out mov repz pop push dec pop (bad) movsb adc movsl adc sbb jo xor mov lea xchg js xchg mov mov insl sub inc push or jl cli (bad) into dec ja rorb xchg sub pop into push lock loopne jg jb cmpl pop jae inc outsl jno mov jbe repnz xchg sub roll add push push stos loop into repnz sbb je hlt out lcall bound out (bad) hlt jae mov jb xor pop mov pusha sub jno dec test fwait adc test psubq jg out push xchg nop mov push and jmp jge and jnp das pop ret jp xchg and dec daa xor movsl fcompl and addr16 leave sbb stos inc sbb jecxz je enter out (bad) pushf xchg lahf outsb sbb fnstenv cs or mov jp dec pop push push mov les out pop fnstsw icebp out int pop jae fnsetpm(287 jns pop (bad) stc (bad) mov jne sub gs sbb mov pop outsl sub mov test dec mov ret out ret mov sub push (bad) loop gs push rorl fmull xchg and mov roll int in inc out sti mov jno inc inc inc push rcll cmp aas dec shrb cmp dec dec jle add xchg aas or rcll stos xchg lret js pop pop mov mov out mov push xor lods mov pusha lods loope mov xchg aas inc inc rcrb mov jae (bad) xor mov mov pop icebp mov jg lods pusha (bad) pop push out in repz push (bad) (bad) out jl sarb in and cli xor gs dec inc adc cld or scas sub mov cmpsl mov lods addr16 out out pop inc or fldl cli scas test or xchg aas xor daa fdiv push cmc jl mov xor iret pop imul daa push ds pop js push sbb and lret popf push lahf or or pushf scas cmp loope lods mov jb ss cltd sbb xlat dec dec hlt lcall lock repz xchg jns outsl add add cltd lock pop scas cld icebp pop mov aas jns jle imul out pop dec inc hlt mov fildl mov add loop lods fstl dec add out and dec mov int cli movsl cmp or cmpsl jecxz mov inc je sahf into mov jae and sub (bad) mov test inc xor adc nop or jl add test ss xor es xor aaa fild imul (bad) cld push arpl mov outsb xchg daa cli xchg pop push xchg nop dec loop jl cmc imul jbe popa and lahf ror dec (bad) mov les pop jb (bad) outsl mov les or pop outsb cmp pop lahf adc rorb rolb xchg in mov (bad) adc ret repz mov and and outsb test adc mov lock add inc out (bad) ret add add push push roll dec xchg fdivrl xor pop popf out and pop sbb fxch sar dec and mov inc push adc cmp imul jo adc push rcl dec and pop lods add xlat push nop add in push addr16 fst jne xchg dec clc dec js cmp mov popa push jp mov jb cltd lods dec push or mov addr16 cwtl push push stos and mov test push pusha movsl (bad) pop js hlt outsb and xor sbb in push leave add jle xor (bad) dec xchg pop stos cmp fild mov ror cwtl insb push jp lea mov cld mov es cmp jne dec popa pop rcl jl sub dec inc scas or cli dec loop es push dec jne add or lds pop loopne xchg pop les inc cwtl cmc in cmpsl ret mov add mov fwait ret repz test or adc sub (bad) push sub scas (bad) loopne inc test ss addb popa lds xor (bad) and shr mov jnp sti insb sub xchg mov loopne mov nop lahf dec sub add pop mov add nop sub rclb (bad) push mov push pop lock sbb fcoml inc into insl lock dec inc jns xchg movsl (bad) cmpsb mov push jecxz call mov xchg sarl sbb and ds xchg subb (bad) sti mov into ljmp pop sbb (bad) in bound and add mov sub sbb xor mov xchg mov lods rclb cmpsb ret stos mov stos adc scas dec or sub decb popa inc jl mov adc mov test xchg pop hlt jno adc xchg dec cmp aam jb jge inc push add nop (bad) es fdivrl inc cmp (bad) jnp xchg sub inc loop adc push pop imul pop outsl movsb push mov mov inc cmp ror sub (bad) cld imul mov ret cs out cmp idivb daa or loopne cmp lea adc dec lods push sarb push out ljmp rclb sub inc mov sbb aaa into xchg ret stos (bad) cmc aaa pop aas in and shrb xor enter xor mov xchg imul or dec jge inc push cmp subb mov xlat roll cmpsl jle shrl xchg sti in pop cmp cmp icebp imul cwtl je mov incl fistpl icebp jne sbb push xchg mov jmp jecxz mov in mov stos pop mov cmc mov inc subb test mov or insl ljmp and (bad) insb adc xlat inc xor inc out mov mov push js mov jnp fldenv mov clc xchg lock cld or inc add or add enter sbb clc insb sub iret jo add mov push push and popf sbb pop andl shlb xchg lea mov xchg outsl mov and push jns xchg popa inc or sbb or rcll push (bad) ret pop sub (bad) push adc stc add (bad) pop mov movsb jbe xchg mov out mov test or mov mov dec sbb clc stos cmp (bad) ficompl movsl fcoml pop fldcw jg rolb jp daa jle dec add add add xchg jo mov cli xchg lock push and (bad) pop in outsl sub test xor std sahf pop in cltd mov mov (bad) lock add insl push mov adc and mov fidivr adc mov lahf test rolb aam push fs dec mov adc xor jl xchg repnz mov in cmp pop outsl xchg and adc and jg hlt mov push add (bad) movsl and imul sbb xor int scas les mov inc lcall (bad) dec push in loope neg aad js fsts add mov add push mov mov push scas sub imul test xchg inc test and xor pop pusha mov outsb rorb cmp stc push in ds cmp fcomps jmp mov movb pop push push js out lock sti (bad) sub loope insb jecxz (bad) lahf js jns pop xchg and sub imul pop iret dec mov insl (bad) adc and addr16 pop inc mov ficompl or jns mov inc (bad) sub int inc push inc popf mov cmp push cmp jp cmpsb gs sbb (bad) mov cmc pop push es les mov pop loopne sub mov insl (bad) outsl jbe mov mov cld xchg inc int imul into fcom xlat inc dec xor ret cwtl pusha in cltd xor fimul (bad) sub push pop pop xor ljmp jmp (bad) pop (bad) movsb mov xorl add iret pop dec sbb and mov xchg in fucomi fnstenv pop (bad) mov scas test sbb mov jne mov imul test das lods mov pushl rcl add cmp popf aam jl,pt mov pop dec pop fcmove bound out sahf sub jne jns clc mov sti xor or mov pop rol leave imul sbb cwtl push jae ljmp mov xadd ja or std mov dec and push pop dec cmp xor or stc jmp and mov test imul ror js mov bound in jl dec dec (bad) popl nop test sub movsl xchg jae lods mov lods bts scas out mov daa je mov xor mov xchg int stos fadds or (bad) aad pushf inc aad pop shll jnp xchg xchg or push push std mov pop pop mov lcall in cld push insb adc add fisubr adc pop xchg jae scas leavew mov aad jecxz ret stos dec clc sub xchg aad mov mov mov push jge mov cmpsl adc push push mov out mov jno xchg xchg fdivl dec inc scas stc dec push cmp inc fmull push xchg or mov xchg pop pop mov and jecxz movsb push and xchg cmpsl cltd mov sti pop stos mov outsl movsl and jl (bad) sub movsl pop andl cmp ret add test cmp sbb arpl fidivl (bad) cli mov mov movsb add sub not or daa and shrl jmp jmp stc inc dec sub pop adc call mov fldenv clc bound lds pop js cmp je subl jae scas pop cmovo add loopne in mov enter xor push jl jge fsubs push (bad) cmp les adc bound imul sbb xor push cltd adc push add aam mov jl je pop cmp lock mov dec xorl cmp adc xchg mov and mov mov mov gs jbe xor pop xchg fcompl (bad) mov jbe int3 aaa icebp mov fldenv mov sbbl mov sbb mov mov es and jmp push fistl test mov xchg mov shll std (bad) adc (bad) xor xchg aas cli mov icebp out pop jmp jmp les adc stc out cwtl pop popf push stos pop adc sub aad std xor and sub mov and sahf sub sbb (bad) mov cld sub push and sub mov sbb ret fucomip ds stos lds jp push or and sub jmp inc call sbb jmp inc ljmp fisttpll dec mov lcall adc add mov movsl adc outsb cs sub iret hlt movsl pusha mov mov xor xchg pop push fstpt xchg enter jne fcomip dec mov mov push xor xchg fs sub negb lea mov int imulb mov ja sub (bad) xchg or pop jne jge out ret xchg lods aas addb (bad) jns mov out or sub icebp sbb push cmc pop addr16 insb dec mov movswl ljmp mov ficoml lret lods fucom imul sub into and and test (bad) das ljmp sub jne cmp pop adc fisttpll test call push mov bound mov push in jne mov jno in jns mov test das pop xlat adc dec jae insb iret outsb or fdivs (bad) sub jb xor aaa ja xor arpl mov fsubl cwtl xchg mov fnstcw and mov (bad) in notl adc icebp xor cld int push pop sbb (bad) ret sub or jg pop das or or cmc jge adc movsl lods pusha dec jns in cmpsb dec gs dec sbb jle dec jb fiaddl rcrl jmp dec (bad) fisttpl dec fcmovbe jge and int3 fstpt sub fsubrp add adcl or cli xchg (bad) adc inc sbb add push in jnp jge xor push lods xor mov inc lea insb push in sub in push jb sbb and jg sbb pmullw and out inc xchg inc scas hlt cmp cmp hlt mov gs inc mov xchg add sbb pop or xchg ljmp dec lods sbb ljmp lock jns bound addr16 sbb mov lret mov jo jne dec and mov (bad) inc out xlat cli fldt rcl push sbb xchg jg push fmulp xchg jp xchg sub sbb insb stos aad popf das xchg add aas and jge jnp mov push leave sahf andl push lret mov sub das fistpl loope mov cmovs scas push mov scas fwait and iret je xor pushf pusha jle scas add jno xchg inc icebp mov mov sbb xor hlt jp daa sbb dec sarb jbe mov add stos test adc adc jbe xchg aam push jns lret or jnp icebp sbb sub mov loope mov (bad) or push xor jl pop add jge inc mov lods mov sbb std cmp xchg imul ficomp fistpll mov repnz hlt pusha push xchg xchg mov push push xchg (bad) stc cs test sbb out xor add ficompl cmc in cmp imul mov push fwait dec and add dec popf xchg xchg mov jp sub loope xchg adc out mov pop fiaddl cmp inc inc out pop xor add lret sarl inc fdiv xor xchg inc repnz stc adc mov (bad) outsl enter bound xchg lods mov nop inc int xor pop stc mov jbe repnz das lds cmp mov jo out aaa lahf cmp test daa lods sbb mov xchg movsl lds adc popa cmp movsb cltd adc and jae xchg gs fcoml inc jne pusha cmp add ret jno out push xor jle adc repnz jbe mov dec call gs mov andl or inc xchg in stc gs stos cld jg popa cmp inc pop or pop popa xor sti mov inc popl leave test (bad) (bad) mov adc fisubr jle mov pop movl out pop ljmp mov (bad) mov cltd testb loopne mov ja adc pushf xchg or sbb add jmp add rorl push adc fcomp pop xor repnz dec push inc lret in sub adc cmp mov hlt jmp dec fcoml (bad) mov cmp xlat loop cwtl call xchg xchg arpl pop inc push sbb nop cmc push dec ss fnstcw pop add cs dec mov lock lret push jo and mov imul fist xchg scas jl cmp pop sar mov ds pop cmp das inc ror call cli xchg repnz cmp in xchg push insb fcomi hlt fsts mov mov bound iret (bad) mov push lret adc pop jl hlt insl lods mov mov iret fs xchg andl cmc dec stc cs push jl xchg std mov mov ljmp jmp cli shlb incl push int3 mov dec push jp mov out jecxz rclb pop orl outsl mov xchg and loope or and add loopne xor fstps mov dec outsb push cwtl dec push ja jbe jge dec mov je pop push int jp inc push clc sbb push in mov call cmp in jns lahf test jb js (bad) and mov inc lret mov jb sbb test rcrb test inc insb out dec push stos lcall adc inc mov (bad) bound insb cmp push nop dec dec mov inc fnsave mov icebp xchg imul mov arpl adc fs jae icebp clc mov aas mov inc les in inc xchg add hlt mov add mov into pop xchg xor mov sbb push fcoms push loopne adc enter adc mov add push xchg outsb pop jne notb pop push push loope repz and xchg cmp mov hlt (bad) mov cli and inc subl or inc dec and dec xor sbbl mov imul les push imul pop push jno add (bad) lcall dec xchg jno imull jl push int mov mov push xlat fs call cmc jno pop or pushf popa sbb push out or sbb loop fwait xchg mov and popfw jbe jmp stos dec je mov aam jbe movsl ret pop shrl into jne test inc jo rorl fsubr sub or xchg cltd call lahf stos mov mov xor xlat test aas int3 push jno mov jno lcall dec mov mov mov insb cmp cwtl pop ss push mov fnstenv rcr or out sbb dec (bad) ret cmp cltd subl jg jle push push subl imul fistl sub jg sbb aaa lods popa pop fwait (bad) hlt inc sahf push sbb (bad) jne adc aam xchg lea jb xor or addl mov or push push ljmp mov xlat into out lds stos mulb int sbb or sub lds ss cmpsl bound xchg hlt inc pusha lret and aad inc movl mov or mov mov xchg pop or sahf into and shll out push (bad) mov inc rcll mov sti jb or push dec out pop sbb lret adc jle scas and ror push pop aad insb repnz movsl mov dec jmp jb fmull sbb jnp (bad) je in push add mov movb dec bound movsb inc adc cld push add sub mov jecxz xor cmc (bad) loop insl sbb js mov and (bad) inc and mov sbb cmp jnp jge mov jnp dec outsl imul test lahf adc rorl pop add lea loop jecxz fisubrl mov insb jp inc cmp xor sbb mov or dec jo ret jecxz xor jo mov not rcr mov sub mov xor cs lret or mov dec push add push jp mov ret adc push and add cmp lods mov fsubr in jecxz push lock pcmpgtw daa push jns mov adc dec ss (bad) mov sbb xlat cs add cmp icebp test in push gs divl je push adc cltd pop jb nop add out jmp movsl jo sbb dec std cmpsl int jns and loop jg jge out outsb test loope pop imul movsb inc scas cmc inc lcall mov mov clc popa jno (bad) sbb shrb lea adc jnp push sbb in fild gs je xor or adc fidivr pop mov jle and push jns stos add jmp test clc imul xchg xor push xor pop ss cli jne cmp movsl insl mov (bad) sti call and repnz or dec mov sub jb out fnstsw push push mov mov out sbb xor out jecxz xchg pop fldcw int3 je in repnz in (bad) leave in jle inc (bad) leave dec shrl lock dec push in (bad) rolb int3 out xchg outsl cmp push test cmpsb fistl mov xchg icebp test inc les pop test pop dec mov sub arpl or xchg scas push ret xchg push ljmp xchg test push inc jno jnp and pop jmp (bad) into int3 adc mov sbb das aaa test push push xor push (bad) int3 xchg or loope jne or and cmp sbb jle mov (bad) mov jnp xchg mov outsb dec pop push sub dec sub xchg dec inc jg add (bad) dec cmp lds iret push (bad) cltd subl mov (bad) mov arpl (bad) enter push shlb add add movsl (bad) dec (bad) dec (bad) mov push dec cli mov js mov adc pushf push (bad) sbb jle lcall or mov mov test je je stos cli or or imul frstor xor jnp jbe cltd jmp inc lods imul inc mov jmp lea mov addr16 cmpsl ds shl mov jl repnz ja jle or sbb loop mov xor cs cld jbe rclb push xchg or insb or mov or pop pop and cmp popa repnz or (bad) (bad) aaa or data16 pop aaa sbb lds into sub xor cmp inc std popf adc xchg ds divb (bad) mov mov fadd jnp shrb test movsb lea stc leave jnp cli mov inc adcl pop iret in icebp jp pop xchg shll inc sbb push call shrl mov dec mov cwtl fidivl add arpl sub mov fcoms and jle jns mov dec mov xchg cmp (bad) lea pushf out cltd sbb movsl mov dec mov xor ret jo jae in popf inc test adcl inc loope adc (bad) in mov xchg xchg jmp lods add pop dec in mov lret bound mov imulb rorl std mov daa mov fisubr and cs mov out dec bnd inc mov (bad) repz lea insl cs movsb dec xchg inc loop das iret rep enter pop into (bad) stos andl pop cmp jb outsb jg mov fsubs lret imul pushf adc ret imul xor roll inc adc loope lret sbb das addr16 cpuid or mov ljmp movsbl data16 pusha xor incl add xchg out sbb insb pop mov lock sub iret shr sbb in (bad) rorb xor xchg inc and dec pop inc pushf sub sbb xchg in loop sahf sbb push roll psrlw sbb lret andl (bad) xor (bad) fist pop and dec shl dec in mov cld jmp pusha push mov inc or add and jge pop clc negl push pushf add adc push xor xlat or sbb jae dec dec notb lahf lcall ja sbb insb les dec popa fist push inc fldt cmp inc inc push sbb pop sbb add aaa add insl fld dec sbb into imul lahf cmp lret stc jnp cmp cmc mov (bad) js adcb jecxz clc das mov xchg jne icebp mov jle enter jge in lods fnstsw cli dec xlat fildll inc dec loopne loop mov addr16 loop jbe stos add xorl xlat cmpb lret imul xor pop fild cmp mov out mov sbb lret insb add (bad) idivb rorl pop andl pop ret fwait or dec xchg xchg inc dec aas adc or and inc push pop mov stos mov int3 mov cmp sub mov inc rcll pop push (bad) in push ss (bad) bound mov ds and (bad) mov (bad) pop daa or push sbb leave imul mov push jno insl and or xchg jnp dec mov in cmp mov arpl push pushf mov cs cmp iretw push add roll int3 adc cmp movsl imul pop mov ret xor scas mov jmp xchg in and and ret jle dec test outsl mov push icebp cmpsl out (bad) enter and inc and imul ljmp jg jp xchg pop push fcomps dec sbb xor mov xchg jbe dec dec ror fabs jb adc lea aaa nop cmc mov ret aad push or lret and test sbb fimull int3 cmp dec cmp lahf inc sahf out pop (bad) fdivrs mov jg ss cwtl loope push mov mov pop iret fild push aaa and mov xchg adc sub jae test or push in (bad) xlat xchg mov jns and add mov inc stos push sub sub sbb arpl rolb cli jb lret push cmp mov dec and out adc sbb ja and push gs jne inc (bad) not pop mov into cmp scas ds dec into cmp dec out gs pop out dec cmp or mov std outsl xor fsin mov subb adc xchg insb pop movsb jg and cwtl mov mov dec fstps xor int3 or mov loop loope pop decb int3 push fcomi cli mov cmp adcl aam ffree movsb mov and fwait sbb mov into (bad) icebp andl icebp mov jmp push ljmp jns notl stc jl cwtl insl or into sub inc adc push loopne jecxz stc js cmp mov mov mov jae jge xorl (bad) stc adc cld jmp sub mov subb xor imul cmpsl daa pop icebp adc inc das fist and jbe lcall andl sub lds leave lds cmpsl ds xchg pop movsb bswap rorl clc imul (bad) mov fbstp add mov jno stos jp push inc xchg lods sub xchg xor push pop mov test mov loope jmp scas dec push outsb and scas xor mov ljmp (bad) mov lea nop push sbb xchg insb lahf lret loope push xchg repnz mov fcompl out sbb xchg enter mov fnstcw mov inc push out mov sbb push jg adc mov mov loop call push negl add enter xchg mov adc jmp int fnstsw sbb sbbl scas pop xor fbld mov sbb inc dec mov stos cwtl outsl das fwait mov enter roll lods xchg add js cmp mov test pushl push cs lahf nop pusha scas (bad) dec ja das xor (bad) mov inc mov and mov mov push icebp out mov repz sub dec test pop xor enter in pop fwait mov ja pop sbb jecxz,pn mov (bad) push lahf jp outsb add cmc flds in dec loop in mov ja out cmpsl dec pusha mov cwtl (bad) xor fidivl push mov add bound push repz lock add fisubrl push es push out jp cmp pop outsb xor dec loopne std clc out push (bad) (bad) (bad) nop (bad) jbe cmp data16 cmpsl jbe popf int3 or mov cmp es hlt test lret ficomp scas adc jecxz jmp imul gs or loop in jbe push adc xchg lret dec rol stc mov out stc dec inc mov pop mov stos popa xor adc gs pop mov push pop jmp pop gs cmp int3 jp ret mov lods mov pop adc orl push add (bad) add inc pop jne push pushf ljmp pop daa push lret and xchg cwtl stos (bad) sbb shl outsb dec sub jg or inc cmp jne je mov imul jb mov aad scas adc jb add jne and push adc pop jp icebp imul ret mov cld andl nop and pop pop or mov inc lcall mov push aam xchg in add (bad) icebp adcl add (bad) repnz xor mov cmp or (bad) or mov mov inc stos pushf fcomps outsl mov bound sahf cmp dec mov jbe je xor gs or mov lea pop out orl and lock add aaa pop ss cli les adc jl pop ficomp mov cmpsb sub or mov je hlt ss int3 arpl fsubp ja pop and mov xchg outsb mov (bad) xor push cmp pushw mov fs (bad) adc cmp cmpl adcb xor xor mov push jp cmp cmp jmp jb and and inc mov addl out jecxz outsl bound cld mov and inc jp mov jb inc ffree mov push mov jl xor into xchg aad adc cmpsl je jge fistpl cmp loop dec or cs out xchg or jae sahf jl mov cwtl pop and jnp or mov xchg repnz shrb mov lret cmp (bad) gs xlat adc push lret xchg scas fsts in fistpl jne pop or or fildl mov cmp mov (bad) xchg sbb add mov jle std out xchg inc pop rcr sbb mov sti lods test xor add stos adc dec or pop std lcall push add popf ficompl mov mov and sbb add pop mov mov jne int push int jo inc adc repnz inc pop ret jg sbb mov mov sub loop pop pushf popf (bad) movsl data16 inc fbstp cmp jecxz cmp and adc mov data16 fstps outsb or lods dec or pushf push dec pop jnp mov xor test mov test mov rcrb dec and in bound (bad) lret enter push sahf xor push push push mov push add push adcl idivl mov mov cli fnstenv sti clc loope pop and shrb shrl xor jne add ss (bad) mov inc pushl push and das dec mov dec int3 shr push pop and outsb (bad) push cmp pop (bad) mov push adc fcompp fisubl es jmp and ljmp adc adc enter fdivrp ret jne mov push xchg jno,pn inc dec ja mov push jae add jp dec jnp add dec addr16 repnz inc mov fldt enter or ja jb ficompl scas enter push inc fcmovnb ret jg push and stos mov insl cmpsb mov lret cmp dec mov sub dec call mov mov cmp das push pop jp push pop or add inc and fildll (bad) fbld jbe fiadd outsb lahf mov mov xchg push cmpsb arpl (bad) std iret in inc xchg sbb xchg (bad) stc icebp imul push imul jns test fldt sub mov xchg push subb xor lds loop sub ljmp mov jp inc jg ds sub arpl movhlps sbb cmp cwtl adc ds dec jnp ss addr16 or adc pop fs outsb js mov xorl repnz (bad) pop mov rcrl divb test jp mov dec shrl mov enter notb add add scas inc dec sahf rorl adc dec pop push icebp ja and mov (bad) in mov test sar dec movsb js out mov leave call mov pop xchg xchg cmp xor mov aad ret jnp int dec rorl pop xchg cli mov dec pop jp test jg mov mov pop ror sti inc adc ret stos push cmp in xor orps cmpsl jbe or (bad) popa fstpt pushf sahf fcomip mov push roll cmp and sbb jmp xor arpl das mov sbb xchg jnp shrl sub push xchg inc mov mov repnz ja add (bad) xor xchg push test jle jmp fs xor or cld mov popa cmp (bad) dec jl jae or les pop fstpl mov gs xchg mov jp xchg mov pop insl repnz ret xor leave call sbb loop push arpl (bad) fcmovnb pop insl aad xor dec jge xchg mov movl and push rcrb and movaps stos sahf lahf mov jns repnz pushf les push pop insl push (bad) and and test fs mov or loopne adc inc fwait xor movsb loopne mov outsb jbe aaa pop loopne js int mov inc push jae std loope es fcmovnbe xlat inc push test inc cmc lds inc sbb or data16 cld jbe test push push jnp addr16 or ret sbb cwtl sbb loope sub lahf lock mov xchg push dec sub mul ljmp xchg sbb push out aam xlat popf mov fsubr popf int daa subl cmpsl mov mov (bad) dec cmc mov adc imul mov xchg jae mov sub sarb lcall scas mov scas (bad) and ss mov loop push adc arpl mov lahf divb ret aad add mov mov (bad) popf sbb push addr16 xor xorl adc sub test jne lods addr16 cld pop or sub cmpsl mov sub aas sbb pusha push mov mov lods adc lds shl mov pusha ja js push push ret add test xor xchg imul jnp repz aas or jmp add jmp aaa xor movsb int cmpsl clc mov push das pop or insl jle iret cmpsb mov sbb stos rcll dec (bad) out nop iret dec (bad) adc (bad) fwait jle fcomip (bad) out fs cmp aam pusha inc push mov iret (bad) xor (bad) addr16 mov call dec ret bnd adc mov inc shl jae jns lret fwait es push xor lret mov or pop mov pushf nop pop in jae popa test sahf (bad) mov incl cli add int3 push loopne stos inc sbb cmc or cmpsl aaa xchg jb inc mov mov sbb daa mov lock mov (bad) sbb and ret xlat test inc add inc rcll pop lea divb es in sub fdivrs in mov mov outsb or adc jge push add jnp ret je loope das mov insb adc xor adc mov mov (bad) cmp js (bad) in mov jns mull cmp pop rcr push inc xchg cmpsb mov sub inc mov ret dec (bad) daa icebp rol lret and mov mov rcl xchg sub sub xor lock stos xor jge cmpsl push pop mov mov sbb insl movsl push push mov pop cmp rclb pop cmp js call mov jp js sub lods data16 daa pop shrb adc mov mov pop or aad aas lahf or pusha jl clc or bound movsl stos xchg xchg jne insl rol (bad) push add insl mov daa ss mov popf add in inc cli inc js and xlat adc (bad) inc mov loop sbb jo lcall pusha jle fnstenv mov movl mov (bad) in pusha xor sarl inc xchg les adc fbstp xlat fadds add loope xorl push mov or pop jl out or (bad) pop mov sub ljmp loope addr16 inc out jne gs pop cmpb cmp mov loop and sub scas push push loope adc lods test sub outsb or stc bnd (bad) pop cmp jb pushf push dec dec or sbb jb sbb mov lahf and mov adcl pop ret dec vpaddsb mov jo pusha lods jp xor jge sbb mov add mov (bad) outsb xorb and (bad) jno cmp pop jg mov mov jae push stc jb lahf call call push jmp bound das inc mov mov ja sbb or test jo sub and cs out cli dec sahf mov cmp mov (bad) test es cmpsb xchg dec mov sahf cmp out and cmpl popa xchg test jl pop xchg and sti or loop cs in sub mov out lock dec (bad) fstpl andl mov test callw aad cmc mov cli mov adc jl outsb aaa inc mov xchg adc jmp add push les mov add insl push hlt lods push insb cmp pop arpl push mov mov fistl cli das xor xor and clc in xor mov sub pop mov in std xor xchg xchg loop repz loopne mov pop pop mov pop addr16 dec xor je bound aad js imul lcall pushf jnp pop pop sbb clc cmpsb loop xchg mov push sbb xchg mov std xor outsb sbbb imul dec fstpl jge loopne aam cwtl out cld push mov sub lret sub cmp out fisttp shr jne sbb (bad) std jmp out sub mov inc jecxz mov movsb in insl out push lock xchg movb out scas negl rorl (bad) out rolb pop xchg loop fistl and lods or rorb dec aad inc sbb push mov mov mov sbb dec xor mov inc daa loop cmp fisubr xchg es sahf (bad) adc in mov push (bad) mov jae mov mov inc jae mov daa sub lds loope adc cmp sti and pop pop aas pop pop lret inc mov ret sbb adcb test dec mov mov adc fist (bad) inc xor sub and jae push cli xor ljmp cmp mov cmp sub jns das or mov xor enter xlat mov lret xchg sub mov pop inc and sub stc cmc cli clc mov or clc popf ficompl lcall and les cltd jecxz and inc je pop mov pop icebp mov fstl aas push pop xlat push repnz loop dec push pusha or xor jae lea rcll icebp xchg sbb mov add outsl aam fstpt mov pop sub fsubrl cmp push lock mov pushf jp mov jp dec mov cmp ficom lds adc or inc mov adc sti test mov xor sahf dec xchg sub loop inc in stos sub cmpsb clc jno push pop adc js inc in test imul repnz xor lock xor xor cli jl add (bad) adc lcall nop sahf push jnp mov popa mov and dec lret lods mov dec rcrl push cld adc inc jecxz notl cmp hlt add mov arpl clc outsb sti andb pop xchg pop jmp (bad) sbb xor (bad) jo mov cmovge lahf (bad) sarl jnp and dec mov test and fwait push inc add sub inc pusha push add dec and insl test ja lahf cmp notl inc push nop fidivr movsb nop sbb clc je punpcklwd jl lods inc aad loop jecxz inc xchg inc pop pop aad mov mov (bad) lea flds adc outsb jb sti xchg test dec inc mov (bad) jae iret mov jmp mov sub fsubrl mov mov aad roll (bad) outsl xchg jbe in pop fcmovb lds xchg dec cmp into sub push sub jns dec dec shrl (bad) sub (bad) loope test sub insb cmp jo cmp insl add movsb push sbb in or aad fisubl loope movsl lods stc inc pop dec lcall push pushf sbb adc sub mov jmp cli insb xor lcall push sub (bad) out ljmp scas dec mov outsb push mov mov out daa inc stc fcomi lahf cld sarb add push jmp mov (bad) sbb scas popl (bad) dec mov test push mov xor jge push push xchg ja (bad) and ret mov repz inc sub mov push inc ds mov push mov mov mov adc cltd or lret dec mov scas mov sub push (bad) xchg or repnz inc mov pusha pop jmp push test xchg lea mov arpl out push in jbe mov lret xor pop jnp out dec jbe pop nop push lods mov sub leave push fwait xor hlt mov cmp cs subl int3 (bad) sub jp sbb and dec negb repz xor xchg inc (bad) (bad) push pop jno out mov iret mov fs loopne aas mov shlb cmpsl push xchg (bad) sbb stos jb sbb and outsl in and repz outsb and mov hlt lahf push lret ja mov cld inc inc fild fstpt or lea daa mov xor inc mov sbb mov mov or gs dec int3 mov addl (bad) and mov mov cmp or pop daa cld jl lret sub push sub enter sbb mov (bad) mov fcmovb add js jmp xor cmp outsl cmp sbb rcr fs sub dec bound mov push add stos repnz ss pop adc stc pop and fldt mov push inc push incb mov inc test push mov lret inc (bad) mov rorb mov jmp (bad) jge xchg iret sarb cwtl mov (bad) fdivs imul cmpsl sahf and xor jge fs out repnz mov or push sbb (bad) (bad) pop (bad) sti out sarb arpl (bad) arpl sti aas frstor imul mov push push das push dec test ret inc (bad) cmp sbb rdmsr scas add mov mov subb mov (bad) insl mov insl in sub and out jp fidivrl hlt push stos push adc xchg adc ret pop or outsb imul jle test cmp mov rcr mov inc enter pop xchg xlat cs xchg in sub and mov mov mov mov movsb ret sti (bad) push leave inc xchg scas pusha rcr pop inc pop aas cwtl xchg sti lods xor xchg mov test in fisub frstor pop xchg mov push inc scas aaa rclb sarb adc lret clc or outsl push pop pop int or and clc push movsb lock pushf rcrl loopne adcb addr16 fwait dec rcrl ret lods or xchg inc lcall movsl pop ss dec mov add ss add mov push cwtl cmp ds pushf cltd ss pop les lods jg aas test jb xor push inc dec and push and dec clc dec pop mov cli jbe xor inc lods xchg mov xor xchg test outsl fildl pop clc icebp add sub loope and pop push (bad) sti jmp xchg and mov sahf pop cmp (bad) leave das dec xor jns jecxz add es mov js cmp and mov cmpsl lock (bad) mov mov push ret lds xor push mov jp push xchg aam test stos out sub xor push mov mov sarl jnp mov inc movsl jmp mov jl imul dec int3 jbe ret inc fdivl cltd mov jmp push sahf pop (bad) push in sti push hlt mov mov and les mov pop xor sub jge sub out mov fidivr mov lods out jns mov mov cmp pop (bad) es loopne into push pushf rcrl in lret inc push les cmc jae fdivrp inc and mov adc rorb xor mov stc adc xor push jmp imul fidivrl and leave out dec in in adc inc xsha1 dec mov mov aas adc dec jle jp adc test cmp test out ds repz pop into sbb mov mov cmp scas movsb mov sbb dec jne pop popa xchg push pop scas add (bad) mov xorl out ret and stc ret popa rcrl and pop scas (bad) scas lods repnz fcomi mov ret push ret cwtl mov push iret aaa pop pushf adc push adc sbbl sbb jp lahf call imul push aam inc xchg mov mov add scas add sti xor inc es cli ffree ljmp icebp lcall sbb jae mov lcall mov int3 sarb lahf sti xor loop ja mov hlt inc stos push dec scas adc (bad) pop lret pmullw enter xchg sub imul cmp jg scas inc sbb (bad) mov shrb loop and and int3 (bad) mov add into mov aad push mov popa lock (bad) cmp jge (bad) fs loop insl orb sahf sub stos xchg jne scas daa xor je stos ds test (bad) xor mov mov sbb xchg jmp xor loopne fdivr sbb add aaa mov or jge pop aas push icebp fisttp and ds lods lahf es dec xor push lds cmp cmp fbstp icebp push (bad) es movsb xchg add and repnz popa adc add sbb jg cli gs imul call xorl dec ja jecxz imul pusha push and lret adc xorl adc andb sti or sub loopne cmpsb fbstp stos cmp roll sbb lds xor and bnd sti fs sbb shll loope pop inc pop (bad) sbb cmp or js call sub fiaddl xor jnp or pop je mov movsb sub pushf out in fmul clc jecxz xor mov aaa fldenv add xchg scas sbb push add fidiv popa fidiv pop shlb push push dec int rorb cmp push fs jge inc mov push mov stos std addr16 (bad) and ret test push shl push (bad) xor (bad) out int3 dec ja cs sub push ret dec adc add push fstl add mov iret jb enter mov push mov fwait mov dec sub inc push ja and dec int cmp (bad) inc (bad) pushf pop sbb xchg rcll dec mov lahf (bad) xchg add adc lcall das add jo mov scas push sub leave je mov mov sahf mov cs or call jb,pn adc in inc enter pusha or pop mov sbb jle scas fnsave imul (bad) push ds pop mov into cmp sbb cmp mov mov push jle push inc int pop subb xlat pop adc mov push push std fldl push pusha inc jnp xchg mov adc out out mov roll adc and daa adc inc or in lds outsb out jge mov or mov ficomp mov push lea jno mov push mov add pextrw pop gs pop push xor aas das nop rol adcl std js test cltd lahf mov pop mov (bad) pop or je cmc xlat sarb movsl lods insb (bad) imul push jl add xor inc sbb test dec imul adcb pop pop aaa inc pop mov pushf mov enter clc jecxz rcl xor sub pop mov mov sti mov or inc rclb movsl stc mov sbb mov cmp ss stc fstps push shll mov sub mov mov xchg cltd lcall push insb mov shll xor subl cmpsb jl clc (bad) mov es popa not in mov je addr16 scas push insb xor pop pop mov mov stc add fisubr cmpsb or pop or push cli sbb push and int mov insl jbe loopne push sbb call cmp xchg xlat add lahf or jnp rol push cmp test cmp (bad) xor popf shll stos mov ror lods lock in cmp adc in dec inc mov adc int3 jle sub cmpsb pushl out in push aad adc pop mov xor pushf pop es xor and push jp pushaw xlat aad ds aad loope and jmp mov sbb addb or sub popf mov arpl sarb aam mov cmp sub jo mov mov push aaa xorb dec push mov sbb inc fnstenv xor cmpsb popfw add inc mov arpl scas cltd push inc les fsub cmpsb mov ds xchg jo imul (bad) inc in mov je sbb lcall mov pushf pop add fisubl mov int mov cmp xlat push jge insb jne dec gs xchg xor xor (bad) fimul cmc lret stc lcall mov push sti jge,pt fiadd sbb test mov lea sub inc les cmc xlat adc in pop pop popa mov add mov outsl cmp jb mov rorb push das and aad out test pop cs arpl ss imul mov push pop inc dec icebp ds out xor mov and aad sbb sub lret xor inc insl loope loopne subb (bad) sub mov adc inc aaa mov idivb lock jle addr16 int3 sbb jecxz pop loopne ss repz inc (bad) xchg mov pop sbb notl adc ljmp loop mov (bad) addr16 gs mov and dec fbstp cmp inc in sbb loop xor stc jg mov or scas xor jo sbb enter hlt mov xlat mov lea in sub lret test (bad) sbb (bad) stc push icebp cld mov lret mov popf divb call ja lock pusha scas push dec shrb insb sub loop std pop stc rol out aaa dec push pop jle mov fdivl icebp pushf out mov mov idivb pop lods and push adc (bad) or lcall ja cmc push jnp dec dec out mov jmp test lcall jle sbb inc je xchg inc mov ret xorl test mov or cwtl dec cmp inc mov ret or (bad) sbb and rcrb and inc repnz cltd lock pushf lea loop cmpsl add in les movsl dec xor into pop sub aam jle enter das bound fstps outsl in add mov dec leave jnp test arpl sub cmp mov inc or push xchg ret jb lfs sub scas (bad) movsl xchg enter test mov insb sti push cmc lret ljmp test push adc les popf mov dec pop or mov mov aaa fist push rcrb mov adc ret fwait push xchg inc sub jb push shrb push or jbe jae outsb (bad) adc jo,pn bound xchg dec loop lret push mov test (bad) xor clc mov mov (bad) nop inc divb cmp repz mov xchg push push movsb mov mov xchg mov mov lcall dec (bad) clc xchg clc bsf mov push add and mov rolb insb fs mov dec and lods xchg cmp sub or (bad) loopne les jmp jo mov or adc push jns push pop loope pop (bad) (bad) or cltd inc clc xor sbb add shr in push (bad) out stos cmc cwtl or mov faddl xchg sti jge icebp std aaa cmp dec mov fs push addr16 mov push out (bad) in add fs clc ficompl leave shr sub mov xor inc lds lcall addb jle mov ror gs arpl out dec xchg daa out imul or jg dec arpl scas int3 xorl ss outsl inc lods stc jb dec sub sub jl rcl jnp test jne xchg mov in add stc pop test lock sbb mov jge ret mov sub inc dec inc xor add xchg cmp adc cs jae xor xchg cmp dec and pop stos in xor xchg or or add pop test pop loopne mov stos and leave loop adc inc sub add xchg cwtl mov aam dec xor adc mov test jge hlt jnp xchg sahf mov jne ja nop jnp in jb lahf imulb jmp sub jmp test sbb insl mov mov fidivl mov xlat loope jbe cmpsl int sar fs jbe (bad) dec mov mov js pop cltd mov sarl lods aam push popf bound and xor mov mov xchg (bad) scas cmp test inc cwtl in inc sbb mov ja or loop sahf sub lret out mov scas push movsl loope mov sub sub jmp (bad) sahf xchg cltd or repnz push pop repnz jg sub push sub push cmp in push jmp test cmpsb lods mov dec jg test push outsb cmp sbb (bad) or in in xlat cwtl mov ret inc mov test stos jl fsubrs movsb (bad) ss test sbb in mov imul hlt xchg fstpl dec jb sub mov into sbb inc lock out je pop mov insl add sub pop sti xchg fnstcw dec je jl pusha test loop add cmp gs jae in fdivp shlb std sbb cwtl ffreep ljmp push mov adc clc dec push or add and ljmp cmpsl out sub loopne mov test push and add jb xchg ja adc sbb out idivl (bad) cmp dec adc test hlt sub rol xchg push lret pop pop sar popf mov dec jbe stos adc cmc adc sbbl scas lret sub fwait push mov popa xor jae jp cs sahf cmp sub xor out sbb enter stos pop sti fist dec into repz fldenv mov jp dec sub sbb into ss sahf xchg inc push shll inc aaa aad insb push nop mov mov pop and mov lock cmp subl mov cmp pop xor adc xchg lcall add iret xlat mov mov cwtl pop lcall test mov pusha mov lcall out push cmpsb je stc or hlt jg and pop sub (bad) insb xchg cmp pop xchg dec es int3 push scas loope cltd movsl sub gs mov data16 (bad) mov jp pop push stos xchg aam push (bad) out or xchg imul mov jge pop xchg dec jg repnz rolb insl jbe mov pop pushf pop je aad stos mov jmp aam loope jg jnp adc cmp popf xor in mov fisubr jg stos ja int jecxz mov sarl push jge dec xor lret and dec jg xchg outsb mov loope scas (bad) fnsave add leave rclb xchg xchg mov jle cmp push mov cmp add les lret adc adc add or add rcrl xor leave fs test mov daa imul push rorb pop in lcall mov shrl sub test lahf adc ja (bad) xchg ficomp je sub jb fnstenv popf (bad) imulb xor add jo add lods jle insl cmp dec shrl ja inc sub lds jl movsl call adc aaa mov sbb in mov sbb mov inc mov out pusha mov dec into arpl cmpsl pop aaa (bad) or daa js pop jb out mov bound adc mov imul push in (bad) xor sbb xchg mov jns add outsl pop push gs mov pop adc pop jmp push outsb add jmp adc mov in lods cmp xchg fdivs push and push pushf xor inc mov arpl add add lahf add push adc jns in repz xchg mov cmp push jg mov (bad) jne scas cld mov out je fistl int3 lods scas (bad) hlt xchg cwtl repz mov cli aam push jns jnp add cmp add aas push scas push mov fisubl int3 ret jg jno xchg mov movsl adc lahf inc lds stc mov aad and mov mov fsubr in xchg cmpsb les mov insb dec sub xchg cmp int3 inc adc add repz call mov dec pop rol pop jl add fisubl or or ret into xor push jns scas or testb fmulp mov rorl xor xchg out adc jg mov (bad) in sti mov xor sub adc ljmp add (bad) dec fisttpl mov outsb push jl adc sub repz enter jge jp aam sub mov mov lea add cmp repnz addl push push pusha sbb (bad) or sbb jno ret or mov mov icebp cmp mov das xchg adc pop adc inc movsb sahf jb jno xchg cmp cmpsl lret gs jmp xor test xchg scas cmc sbb xor mov mov sub mov ds xchg rcll aad mov pop mov fwait divb je ss popa adc in call sub pop lock jae xchg mov aad inc add (bad) fimul insl adc mov hlt nop subl cld lahf out test jmp mov push lcall sbb cmp xchg in int mov push dec cwtl xchg pop inc xlat (bad) out lock out out sub ret mov int3 pushf aad imul lcall push dec je mov push aam mov loopne jmp int3 cmp jns out fs pop psrad or pop mov inc cmc inc in jbe (bad) repz arpl push adc dec xor xor into cmpsl lock in adc adc fwait cli mov jp jl adc pusha add or mov inc xchg fcoms jmp shrb and add push mov out sub ja insl lahf stos hlt jecxz add sarb xchg ljmp ret push jmp adc mov fisubl gs lods or lret or jae fs lahf into push leave or (bad) push lock fistp test xchg sbb mov push mov sbb cmpb jne test and add ja mov sub or addr16 scas adc inc mulb scas test jp xchg cmc mov mov xchg fcomps jl lret (bad) mov sub stos add cmp sahf fdivrs jnp cmc insb mov fs push test scas cmp mov dec adc lock inc cmp (bad) ja xchg jmp sbb orl mov mov sub enter jo subl jmp jp xor ficompl sub mov repz mov loope pop pop andl imul (bad) bound fs (bad) sbb (bad) jg mov push push int3 stc cwtl into nop add pop mov add stos cmc mov push call in xor (bad) into pop push ljmp int3 sbb dec iret bound mov mov pop call fldl mov mov adc xchg lock hlt sbb repz imul jb movsl mov rcll jno or pop stos fidivr sub (bad) stos push or jne ja jl repnz fldt int pushf sub cmp push add (bad) cld push mov movsl cmp rcrl mov cmp adc dec sub sub aas push outsb call loop dec cmc std into adc adc inc cld inc lock jl pop pusha inc dec movsb push (bad) mov into loop or aas icebp test sbb inc jno bound fwait jo lds jmp push pop divb xchg sarl test or jl cmp lahf jmp ret pusha pushf movsl mov dec (bad) fstpt imul cmp fmull xor stos push dec mov repz test cli (bad) (bad) mov add in or push sbb adc xor sahf xchg inc data16 xchg out test hlt push xor fldl sti and jge into lahf loope mov jge dec sar cld arpl adc dec in cli xor loope ret loope test fsub sub sub mov sti fsts mov mov xor cli dec das mov adc addr16 js push mov out shrb mov stos outsb mov push xchg xor or xor xor loop test xchg inc sbb and cmpb in arpl loop int jmp lahf int mov pop and jmp lock mov movsb int3 daa inc jno stc pop out jmp nop xchg outsb fiaddl inc add nop fidivl (bad) repnz mov mov add inc add mov in adc (bad) aad and add (bad) sbb adc cmc pusha push pushf mov jae int3 loop xor insb (bad) mov ljmp pushf addb popa aad cmc adc arpl adc sbb addr16 adc ss (bad) or into sub out dec adc (bad) cmc inc and mov cmp xchg adc and jne mov xchg dec rorb mov insl scas sahf push ret jp test inc adc mov sbb sbb xor repz (bad) call orl and xlat mov mov add lahf pop cmpsb xor outsb add sbbl dec in adc xchg add call sub sub (bad) hlt scas pop sub jb sbb movsl leave insb mov shl inc mov xchg lea mov (bad) push inc cmpsl xchg inc mov push rcll (bad) (bad) daa call sub cltd mov out loop imull aam out rcrb jp push sbb jg mov gs inc pushl daa (bad) xchg fisttpll pusha insl mov repz rcrl cmp loopne repnz in shlb js (bad) mov test mov dec mov sub aas mov push push pop mov sti call inc bound (bad) push fs sahf stos jbe mov jg add (bad) mulb negb pop push mov mov and push mov (bad) (bad) fistp or inc pop in in cltd xor mulb fmuls in mov pop push (bad) jnp jg je cmp or (bad) popa pop lock scas mov pop cmp jne mov push gs jle jb jbe rcrb mov inc aas je sahf mov cltd pop cmp cli sarl test adc mov mov or push jecxz pop sub sti pop jne aad jp and xchg jg sub cmpsb adc xchg divb test fsubp cmp add and cmpsl cmpsb mov popa xchg adc aas cmc dec sbb rolb mov scas (bad) fistl negb pop xchg cmp andl jae fstps lret pop cmc push pop aas aam jae lds or loop jecxz out xchg adc jbe mov push mov dec dec movsl or fcoml into in inc mov jp jp and push fnstsw fnstsw inc fisttpll fsubrl fwait cmpsl push dec fstl cmp xor hlt add iret pop jge nop scas loop pop stc jecxz (bad) std movsb adc and pop sbb and dec (bad) push cmp sbb mov cli inc mov in cmp (bad) fnstcw popf xchg sbb sbb hlt mov dec in fwait mov shr pop inc add fisttpl decl andl sub push mov pop mov imul cmpsb mov ljmp pop mov jne mov shrl xor je mov add popf movsl arpl mov ltr fs xchg mov push fisttpl out and inc jns sarb mov stos js fidivl mov (bad) xchg jl push xchg fwait sahf ljmp mov xor push scas mov sbb hlt xchg adc repz dec push mov jmp cmp and lahf adc sbb jecxz and adc mov or incl jge ja cld push jmp iret dec mov inc cmp pop fistpl (bad) push int insl fistl push ret leave lcall inc cmp mov sbb shlb in flds aad xchg fs mov sbb pop mov jmp jle xor cmp mov add mov cld cmpsb mov sti push inc loope iret or leave imul (bad) icebp out push dec inc out fldenv (bad) aad or (bad) and adc loop mov add cmp mov addr16 aam or dec jecxz xchg inc cmp lods jae add test aaa popf mov pusha jp xlat lods xchg pop mov cwtl fisttpll aad cwtl test jb adc les cmpsl rorl jns mov jge add dec and dec pop nop divb adc dec sub arpl int sbb insb jne xchg mov fmuls lcall xchg add lahf in int mov jne adc icebp cltd mov sbb sub aas mov mov jo ss mov imul xchg je in (bad) aam scas sbb inc mov add sti inc mov loope std xchg jo negb sub test (bad) xchg int rorb les dec insl in repnz addps jbe xchg andl mov push loope loopne test mov jge jle add dec fs jg push loop ds xchg inc jl inc scas mov mov inc les mov je movsbl add arpl sbb hlt mov xchg jmp fsubrs mov (bad) testl or enter std sbb sub stos mov lock aas enter in mov pop data16 orb dec adc fidivr lea enter dec mov xor jno sub jb adc ss sub mov adc cmp les lds xor pop cld and in sub jge push cli dec std mov jnp imul aad (bad) lret jo and ljmp hlt cwtl adc lds pop sahf mov dec or mov adc mov rcrl pushf xchg pop scas sbb outsb jbe int3 add push iret mov mov test in xor repnz pop arpl daa sbb insl add insb addl aad sbb mov lret stc inc sbb mov push cwtl sbb sub aaa push leave xchg dec mov add inc mov push pop call rol and (bad) mov jle inc adc jae pop jmp jle and jno jae mov aas clc lock mov popa inc sub xchg iret aam jnp (bad) cmc sarb add jns sti mov add xor das shlb fnstsw xlat inc imul (bad) icebp and ljmp dec cli enter push pop inc push jae push sbb push imulb jbe int ret (bad) push mov out mov insb fist cld rcl fcmovbe push add (bad) in pop sahf jecxz outsb sbb xor js hlt pop pop mov pcmpeqb sbb mov pusha movsl aas data16 paddb fimul enter sti sbb jno pop inc in aas jmp mov mov das sub dec (bad) (bad) repnz notl and cld or xchg push loop fcompl push orl ficompl xor pop jo pushf mov xor cwtl js loop fdivs cmpsl (bad) pop push movsb xorl imul repz addr16 rorb loopne or std cs in ljmp sbb and jb mov pushf les push daa push popa aam or jecxz iret test call xor lahf inc jg pop mov (bad) fadd lods sbb dec lock stos push add xchg jl adc sub rorl jb out fisubl mov sahf and jb add mov pop icebp sub xchg int loope jmp shrb dec add jnp das int inc push popl into rcrl adc mov lret jmp in rcrb jle adc lds js,pt inc push loopne mov (bad) scas mov mov cmp scas xor mov push add sub add push popl jae popf daa div mov push xor mov add fs fcomps pop loope jp and loop cmp enter add inc dec insb mov cmp lcall mov push add into mov loopne xchg or jge mov mov dec cmpsl out popl fwait adc adc bound dec mov add mov sbb cmp mov fsubrl enter sahf inc repz mov mov add dec ljmp aam (bad) testl scas incl xor sbb mov mov fdivrl fs (bad) mov in mov sahf ja xchg iret push stos sti lea mov lcall repnz fistpl out inc aas mov sub cld dec div pop fadds rcll (bad) pop imul stos mov addl and ljmp pop inc fistpl rcll test jno mulb out xchg rclb jb sbb sbb lret mov sub out dec in lret das mov shrb xchg insb sub leave push stos scas jb add cmp sahf xorb pop test cltd nop cmp adc scas mov or cwtl dec pop jle mov xor inc loopne jmp mov dec not enter mov xchg mov std mov cmp sub push stos fadds pop and mov mov jge mov jmp xchg jge jne cmpsl push adc or xchg xchg xchg mov mov xor enter pop sti mov and mov nop test push push rol cmc fimul stos aad or fs aam stos sub popa add shll fcomip (bad) and xor xor push mov adcl lret mov sahf loopne jmp lret add pop test sbb add insl ja pop inc add mov enter insl pop dec out mov int insl xor cmc xchg sbb sbb enter sub lock sub adc jp jl out or rcl (bad) adc lods xor arpl and cltd addb sbb std int and clc add insl int jb jmp push insl mov pop mov and sub adc pusha movsb add popf fwait and and iret or lods and cmp lret sub (bad) mov repz cwtl adc mulb jnp mov hlt (bad) popa out pop xchg cld push adc dec mov nop push stos jecxz add inc out inc divl jp ja lods dec es dec jns js,pt sub sbb push mov pushf or bound cmp mov scas push mov xchg iret cmp mov push sub and xchg (bad) sbb jns push mov and adc sub inc addr16 sub jns xchg aad int3 pusha (bad) loopne jg (bad) jae mov push adc mov push fwait jmp clc stos or fsubs inc aad mov loop ljmp cmp mov ret inc (bad) js add mov jo sub adc mov dec enter mov in loop sti scas dec aad jbe adc push cmp test fbstp mov lds jbe mov cmc sbb add inc sub xchg stos push pushf negl repnz arpl lds push clc push add mov add out and lahf or in scas out and xchg xor orl movsl cmp mov (bad) imul xchg leave inc out jmp mov mov notb sar mov cmp and and jp sub cmpps jne cmp in push xor jne (bad) loop adc imul int movsl jp pop jns mov dec out push xchg das adc inc fsubrs sbb add ja imul (bad) sbb xchg into ja cwtl jecxz shll add and (bad) or sbb adc (bad) js bound popf pop dec cmp jnp std mov insb pop mov dec pop mov xchg jecxz in nop add mov cmp sub push push aas mov popf jl mov inc ss cmp sub scas dec adc pop in out mov sbb (bad) xchg pusha sti mov lock add pop test cmp pop adc sbb mov jl rcrb mov int adc jno xor loop lods movsl mov out xchg pop (bad) push and ja xchg fstl in out mov mov inc pushf xchg repnz mov pop repnz jmp dec incl in rclb dec outsb jecxz mov sub mov dec call out sub daa sti sbb fs imul lret fs push (bad) pop rolb imul sahf (bad) xchg fisubr or out call icebp sub dec jecxz mov (bad) xor insl testl dec mov test (bad) loop cmp or pop (bad) out sub jmp pop dec ja bnd aas dec add pop dec mov mov dec cli or out xor xchg adc xor pop vmwrite aaa cwtl cmpl sub cmpsl lds inc fnstenv aaa inc mov aas and stos and (bad) outsb lea sbb mov rsm (bad) and mov mov jns out sub jns fldcw pop cld fdivl push dec sub outsl add popf push jecxz mov inc fiaddl xchg cli pop dec (bad) sub or sarb lcall pop mov push test test or ds test leave stc mov cmp hlt sub dec mov mov icebp inc lahf fs cld inc mov mov test or ljmp inc xor pop and lea roll push (bad) mov sub inc push inc pop jge lcall pop dec jp data16 or fs pop arpl sahf repnz loopne or xor cmp es (bad) outsl mov in loopne mov inc dec jns push popf test test push xchg test mov fstps adc mov in std mov stos (bad) test mov lds imul push divl mov cs push popf jne jne out xor idivl or movsb gs pop inc xchg testb insb rolb inc pop sub ds xor sahf pop and stos aaa jno xor les sub adc push mov add xor arpl sbb inc dec pop add pop sub jns dec pop add loop xor repnz mov push xchg or and mov cmc xor outsb aad push stos mov std mov stos sub enter into cmp stc imul aad stos dec shl sub push test jecxz lods mov mov add leave jecxz sti cmp add lret jg popf cmc cmp sub ror cmc mov or add daa sbb jmp cli je ret push pop jmp adc pop nop jns arpl or xchg pop je push sub jnp jge ljmp pop push out repz add sub dec icebp adc pop inc aam icebp push mov outsl aaa mov pop je ja or fidiv mov sbb pop inc loopne mov and dec pop add sti es imul mov dec shlb dec inc (bad) in ja incl mov add xchg (bad) test addb mov jge outsb pop xchg sub int mov ja aad push fdivl rcrl pop imul je outsb sub (bad) pop out enter dec cmp into clc loop push ljmp mov loopne nop and mov push xchg movsl dec pop adcl mov dec movsl lock mov add jp xor sbb xlat out popf inc testb std push out dec or push dec or movb push gs add jg adc push icebp jnp push or imul push mov inc fcoms lret and pop or sahf xchg dec xchg lahf add push lret addr16 fsubrs mov test sti or cs xchg fisttp test push or xchg loopne sarl sbb fcoml fdivr sub sub jnp pop or (bad) cli jno test cmp lds push movsb mov insb (bad) push mull out aam (bad) out stos (bad) shll xlat daa jae and test js (bad) or xchg mov aas jns dec lahf xor data16 enter cmc je test (bad) push or cmpsl dec test jnp push cmpsl sub add push mov mov subl adc and into sub dec call cmp loope xchg mov xchg mov insl and (bad) call pusha fistp insl pop (bad) cmp jnp mov int3 icebp xchg and sarb mov hlt stos fistpl outsb aas in jle jae mov cmp or mov (bad) mov jmp notl sbb xchg jg scas repnz enter lahf stos mov incl push and outsl xlat repz lret ficompl mov mov cmp or add inc pop pushf xchg push xor scas pop add adc int3 xchg icebp repnz lods roll mov mov add dec int pop rcl jbe dec shl jmp test das dec dec push pop (bad) in jmp daa add lock lods xchg and lods (bad) cli stos adc add mov lods and ret pop mov dec mov stos test cmpsb pop pusha push inc push in dec shrb lahf push movsl lds add std repz loopne rorb fwait jmp icebp jecxz sub cmpsw mov les inc jb mov adc sub popw lahf xchg outsl in int3 jmp pusha sbb cmp dec inc push push mov cmp test in fldl mov jne sbb jp inc pushf xchg aam mov jle ja cwtl sub stos mov (bad) xor pop push mov push cmp fistpl test sti icebp jnp es out out and add add adc cld orl pop and leave out mov xchg push (bad) mov xor out add icebp jle std jmp sub scas rcrb xor bound or icebp fdivl stc aas std mov (bad) ja mov lea mov xorl shrl mov aas imul ret psubusb add push ret sub sub mov jmp cmc mov adc dec jl xchg (bad) scas lods cmp cld push mov (bad) adc bound mov xor fisubrl sbb or jae leave cltd lahf jg adc adc cmp push jnp int3 cmp loopne xchg cli das dec call push mov add lods sbb sbb aam das repnz jecxz cmp icebp (bad) decb imul dec xor push into ljmp cli je pop ret aam jp xor loopne mulb stc mov mov mov xchg (bad) cwtl aam add rclb (bad) scas or fiaddl mov inc xor mov (bad) fwait sbb sbb jp mov lret xchg (bad) mov pop sub daa lods ffree jbe mov or mov jae and neg jno ret inc inc inc (bad) xor stc fwait jmp fucomp sti and mov mov mul insl orl mov fwait repz mov or inc lods cmpsl cmp ja inc xor inc xchg cmc stc cli xchg fwait divb push inc mov data16 prefetchnta cmp out ficomp daa inc hlt mov pop dec int3 rolb adc cli lahf mov out movsb in or test cmp ret jle stc fwait aad in cmp mov or cmp jo push adc call pop push movsl scas daa jbe jecxz mov call push mov (bad) rcrl aad xchg jg mov and sub leave pop sub in mov and or sub or or and pop and mov sbb cmc jne push jo (bad) into ret (bad) hlt std lea mov std shlb out or mov mov aaa sbb addr16 or or cmpl in jne mov lea in dec xor and scas jmp sub mov jmp stos sbb dec xchg data16 lods sbb ret outsl mov mov adc mov dec mov lret pop out call (bad) push mov inc mov int inc inc lods mov fucomp test lret push ret nop fidivr xchg rcl mov add dec push jmp aaa test fstpt in xlat inc dec jne push pop mov lcall push jmp sub or pop jmp ja xor imul dec dec test push aas repz xchg je (bad) sbb pop dec les out mov out xor enter or psubsb or jb fildl and adc mov in ljmp jmp nop int3 (bad) (bad) xchg inc jmp xchg cmc inc xchg push sub push fs icebp imul lods loop mov lahf pop rcrl jbe lret loope adc dec cmpsb popa jae or lock or adc push dec fwait xchg xchg add lock dec mov and out dec (bad) cmp push inc inc ficom mov aaa jmp jge in sbb jo cs push push inc insb push enter cmp sub test rclb push pop lcall mov mov lea aam mov loope mov ljmp mov dec dec loope aas aad add cmpsl xchg mov fadds gs xchg adc push in mov scas sub jne ret aaa insl push test push dec das hlt std pusha pushf (bad) call lret mov pop sub mov gs ss jle enter loope mov repnz cmpsl xor and packssdw ja daa insb adc jne cmpsb add sete (bad) addr16 lahf sub adc jns or jbe xorl fistpll cmp enter fnstsw pop sub push and jns fldl add data16 pop dec or mov lods out jl mov lds jle adc jns mov fbstp mov pop push mov jo mov cmpsl dec sahf dec nop insb push sahf mov ja mov jecxz and out push jle dec dec insl test mov popf rolb mov add cmp pop sbb xchg (bad) push or dec sbb add jno sub in movsb mov insb xchg aam (bad) das loope shll mov mov aad js push scas or add sub sub mov pop bound les (bad) sbb push cmpsl xchg sub fucomip sbb push jo cmc and insl xchg iret push sbb arpl mov pusha xlat mov mov xchg mov outsl in rcl (bad) or into push cmc pop scas call mov lock repz xchg or test fs push dec fnstcw jo xchg push cmpsl rcll xor stos out mov in mov jge ja push notb pop push mov (bad) and sbb jl pop std xchg mov sub cmc shlb cwtl dec fstpl jne sub cmpsl sbb mov jge sub push and arpl scas das daa or and mov mov pop (bad) ss mov (bad) fcoms fildl aam popf (bad) pop mov push sub and mov aad scas push push mov adc pusha and (bad) xchg and iret sbb test and icebp push jmp pop roll imul je repz push sbb mov test dec push pop fimul lea insb jb ret (bad) dec or cmp add mov das cmp jns sbbl mov and les (bad) mov xchg lods cli mov sbb mov jno inc fs sbb lcall movsb cli outsb sub or inc clc pop data16 mov rorb cs cmp fdivr stos add imul mov stos arpl push nop in (bad) pusha jo ss test mov add lods into sbb rcll xor movsb ret pop test stc xor cmp mov pusha lahf fistpl cmp pop cwtl inc enterw lds lods sbb xor jmp cld lds xchg xchg pop inc xrelease cmp mov in and pop add jg dec push adc ja mov dec mov or sub adc fist mov push imul xor adc (bad) add inc jne jbe dec sub lcall aad pop sub in xlat mov cmp pop ja xchg pop sub and push (bad) jae subb cmpsl mov sbb jno inc jp test leave movsb cmc mov (bad) aam xchg out aad lods xor dec pop push cmc aas xchg mov (bad) jmp rolb pusha mov mov pop mov scas ja mov aam cmp jae xlat sbb pop push fmul xchg ja cmp xchg fcmovnbe pop pop lds push fadds jge inc mov mov sub mov fldenv sub cmpsb cmp push and sub in stos jb and jp imul cmp cmpsl push jl inc dec jb mov js insb sub repnz idiv adc or ds and loopne add test mov incl les dec sub inc test mov repz adc imull insl cmp lock mov jbe and xchg sbb cld or imul gs repz movsl push and lret mov jbe loopne cmpsl imul fistp and stos jg mov roll ds aaa icebp out inc inc mov pop sbb adc div popa inc pop push dec (bad) xchg aam imul jecxz imul aad sbb cmp out ffreep adc or sub jne fnstsw sbb and clc jae mov mov imul sub jge in dec pop std data16 cmp sub pop incb mov mov xlat mov mov jp sbb fistpl pop sahf fildll hlt nop inc cmc inc jns xchg cld sbb (bad) loop fcos and idivl movsb xchg adc sub das or push and aad lea mov (bad) jo stos push dec push scas mov fmul inc jp,pn aam mov xchg sar (bad) cli sar out stos cmp inc int3 cmpsl jp fdivrp pop stc stos leave push jmp mov das arpl push ss in push add mov xor out xor pop loop (bad) mov loopne addr16 out inc lcall adc inc sub hlt (bad) les mov fwait fwait push out lcall orb mov push out add idivb aad sahf ds mov jno fnstcw mov mov nop shll sarl adc sub jmp fs or xchg pushf pop jg cmpsb push jbe dec inc addr16 mov push fnsave dec repnz icebp adc push or cmpsb dec add dec pop call loopne cmpsb xor or inc mov mov push sbb outsl cmp push scas bound das insl popf insl add icebp ja mov (bad) mov mov (bad) repnz mov sub pop (bad) outsb sbb (bad) push mov je sbb xchg icebp mov and cmc stos test (bad) inc sahf jle push xchg aaa lods fcomps fldln2 add scas bound fldl cmp sub cli or insb xchg ja dec jae or (bad) gs sbb cltd cli mov push mov clc cld aad jmp out les lods sub roll divb outsl push rcr movsb xor lds addr16 ss push inc xlat jg icebp cmp (bad) repz (bad) cmp push test test or por rcrb call cmp push pushf pop push dec (bad) mov and adc push push mov clc je adc xchg pop adc clc sub mov pop and stos pop enter lret fnstsw test lahf movsl es xchg add mov jecxz inc das cmpsl aad or push lods aad lcall fdivrl xchg inc scas (bad) push jnp sbb pop test in mov out (bad) push lock xor lods adc ret in orl enter jge imul or ficom icebp and push fcoms cmp push outsl (bad) xor adc scas dec out pop repz subl jbe in pop jg movsb std add les push (bad) and ja test and rol lods xchg daa dec inc jmp fucomi call into mov add adc cmp shlb sub ret (bad) lods inc sub pop test loopne ds mov mov push push loop nop mov data16 ss jne clc xor das pop mov xchg in adc push adc dec repnz test addr16 repnz ret and out or push mov ljmp mov test sti (bad) xchg mov fild sub xlat pop insb sub and pop arpl dec mov cwtl inc cli push cmp xlat addl ja shrl lcall sahf pop cld out test (bad) pop cmpb cmpsb bswap cmp push push push fwait (bad) movsb pop or pusha dec fstps sbb (bad) jmp cmp fwait mov aam aas mov push inc mov (bad) lock pop jae je (bad) out (bad) pop xor (bad) or call mov push out inc sbb dec dec std jno and jb sub (bad) mov out jl stc rol into mov ror inc pop outsb (bad) (bad) push cld movsb sbb call and movsl pop in or in push push sub and pop and mov push popa xor mov cwtl xchg out lret jl outsl into addr16 push dec xor add xorb enter enter out inc jne icebp pop cmp xor test push (bad) fiaddl push add faddp mov jmp shlb xor mov dec mov je jl and leave aad (bad) test mov cmp cs cmpsl out loop mov repnz lcall mov mov add inc das jle inc lahf pop test xchg insl cmc fisubl outsl dec nop (bad) pop mov push arpl sbb mov jnp scas jg or jmp loopne out stc cmp xchg xchg loop es in mov fsts cmc sub adc lret (bad) cmp mov xchg or mov cmpsl mov jmp lock fwait cmpsb mov jmp jmp and adc dec jle (bad) cmc sti jmp and in sahf mov pusha icebp popf inc clc pop mov add add mov mov mov push int ficom icebp mov ret xchg push cmc sub and pop lahf aaa push jnp pop movsb lret mov pop inc push out or adc push xchg scas into inc cs out push ret jne mov xor mov (bad) cmpsb fimull dec jb jmp jae xchg (bad) aam mov movsb rclb sub xchg pushf ljmp adc mov mov inc xchg (bad) outsb cmp add xor mov inc jb jmp push fildll sub stc lret push mov stc std jbe mov (bad) mov stos mov pop adc test mov xchg rorl mov xor push push push das add dec loopne xor adc push mov sbb xchg iret aad jl rclb push icebp xrelease pop sarb or fisubl invd or (bad) inc ficom ret dec popa repnz jp ret xlat inc into push out addr16 aad mov insl push inc sbb jecxz cmp mov outsb push and or xchg insl stos scas sub loopne stos dec mov enter or dec inc mov rcr inc inc js dec std bound or xchg mov dec popf mov cli mov mov mov rolb inc jo push in repnz jae fdivl inc mov loop incb int xor aas cltd sbb clc imulb insl or jno xchg xor hlt add or daa cmp test cmp sub add (bad) lret pop negl xor fs lods and cmp ljmp or sahf dec in out xchg sbb fwait dec jl sub jmp mov or mov mov lds inc xchg inc xchg incb add test addr16 jp mov add inc mov out adc mov lods mov repnz les dec add inc aad cmpsl pop aas repnz mov dec inc rclb repz mov lcall das pop hlt lods push and bound insl mov les in test jg int frstor xor lret xor rolb push pop push popl mov movsl arpl test mov jp xchg into rcr jmp stc push ss and mov cs push adc push aad xchg imul ror jae lahf stos (bad) xchg data16 addr16 push scas cmpsb ljmp ds ds mov scas mov sbb jg sub xchg das (bad) aam inc jae test rcll xor sbb fcoms popf xor mov sub in ja pop jge sub xchg jno test jae data16 dec (bad) or movsb fistl mov ret mov lock je xor cmp cltd lret mov lret scas push pushf sarl popa cmp js xor mov and lods xor jo lods stc sub test fldt ret mov or int3 std js pop into in xchg test xchg xchg pusha mov push xor mov fsts idivl xor repnz jo lret fistpl (bad) testb addr16 loope xor push cli inc sbb jb das jnp sbb pusha sbb pop repnz imul jns lods test jb pop jne repnz xchg rcrb cmp outsl mov lds dec fldt rcrl inc (bad) insl cmp movsl ret or mov xchg (bad) aad pusha and mov mov pop pop xchg sub jnp subl inc sub ret add in scas mov jbe mov jae fimull (bad) (bad) and inc and inc shl (bad) je sub dec xchg (bad) xor into les mov jns mov ds notl jnp sub push lock andl jns orb fild in (bad) mov lcall imul rclb inc (bad) sbb jo mov push adc je and stos mov insb and cwtl outsl push (bad) int3 shrl clc or les jg dec (bad) movsl xchg push bound addl cmp sub jecxz movsl rclb inc pusha sub mov mov cli inc rcll (bad) fsubr jno ja jnp push and xor jnp pushf icebp imul jge pop and pop jne jmp sbb imul cmp lods in dec test fs movsl scas mov sbb loopne inc fs iret push sub mov xor xchg in mov loope loope lret jl inc jecxz or lahf push enter cltd add repnz int pop lods pushfw push mov hlt jmp pop add in test ja mull dec popa ret cmpl pop mov adcb ret out push cmp bound pop adc aaa mov inc jno cmc hlt fnsave enter gs outsb mov (bad) dec pop addr16 insb (bad) lods push or pop addr16 cmp sarl sub add aad ljmp dec xor jle ja push mov xor dec pop add jne or inc adc (bad) outsb jbe push cmc push imul sbb cmp push inc pop (bad) fimull (bad) mov lea outsl ss cs mov fstp push adc test xchg outsl shrb (bad) rol dec sbb out jmp lds mov push scas adc inc and jl push dec cmp je or pop add pop xchg out inc jle jbe adc ja pop pushf repz loop call js push inc push sbb adc mov add popa das sbb lcall imul imul shrl ret jno into inc jge add dec jns sbbb inc mov imul ficomp cs outsl push (bad) imul mov fwait mov pop cmp adc jbe fisubl mov popf (bad) fsub xlat cmc xor push jmp cmp cld shlb jae jl lods int push enter pusha jne bound add lds lcall lahf cwtl pop and cmp jecxz mov dec out cwtl cmp mov nop lret adc int3 or or add shll dec pop insl adc stos push popf add inc add test ss scas daa pop (bad) repz xchg sbb pop cli jmp dec dec mov inc xchg pop notl pop xor pop dec (bad) and les call aas jb jno in sub sub xchg push in les pop pop dec aaa mov and pop in jb adcl push push jle (bad) jns mov xchg ljmp jae jg stos int3 (bad) mov std aas repnz jg test loop inc lods enter adc add inc nop rclb lret loopne xchg arpl repz cli icebp mov jno iret stos adc xor movsb outsl jnp sub popf push mov pushf xchg repnz imul jno mov push leave xor jae jns loope cmp jnp dec popl int iret sarb dec xchg mov jb cmp sub pop xor xor xor adc jns (bad) insb lea sbb jecxz cmpl movsl sti scas loope popa enter mov stos ja call xor shrl adc push popf fstl inc xor and mov aam adc int push scas pop xchg nop mov (bad) pop out int movsb sub lods (bad) cmp sub push xchg push addr16 call push das or mov push push jmp in imul movsb orl lods push hlt mov paddusb jmp fstpl in mov cld paddusb sub xchg jno push adc or call adc loop dec dec aam mov jnp add sub pop shlb jmp or or pushf popa icebp push jle imul test shrd jae ss mov es fistpl adc inc jne movsl push aaa jnp mov mov mov jae pushl loope pop xchg xor xchg add jecxz lahf inc jns jecxz loopne ja dec dec or mov out cmp das outsl imul rolb movsl inc xchg add aad mov adc rcll imul lahf out push data16 call enter rol inc pop bound shl mov inc push xchg fbld push fwait xchg and cwtl or xchg add fsubs xchg push loop mov adc mov or inc xchg hlt pop push dec xchg xor mov movsl add jge aaa inc mov mov in sub faddl and pop inc jmp xor or inc lret cli mov mov inc sbb sub cli xorl movsb inc sbb inc rcll insl and pop xlat xchg cld mov jno stos shrl jp mov lds xchg pop xchg rcrb jo dec das ficompl inc int xchg cltd setne or mov mov icebp sbb in (bad) imul push pavgw (bad) stos push (bad) xor in jne lahf (bad) imul cmpsl pop je dec cmp in xchg push repnz dec rorl fsubrs sub subl dec loope or mov adc xor (bad) insb mov sarl add or out or sti lret xor test push pushf xchg jnp adc pop xchg push push jno mov daa cmp mov cwtl dec les stos inc xor movsl sub dec dec mov jle xchg xchg dec jmp (bad) imul push sbb cmc dec das mov or shl (bad) in loopne xor mov jmp mov add pop inc scas adc ret pushf pop adc (bad) pop ret mov mov cwtl cmp mov adc pop jg xor push not add add in arpl lahf inc mov arpl sub cltd xchg and mov jmp fwait lcall xor test inc pop fldt movsl test pop (bad) sbb cmp or jge jmp and sub les insl pushf je mov xor loopne int repnz fildl daa mov outsb mov imul and push mov mov dec out (bad) mov cmpsl in insl fs adc addl and push jno fs mov pop or and push rolb leave in lcall call mov inc lds sub in pop push pop pop ret (bad) lock or stc std mov sbb arpl mov clc aam (bad) (bad) repz insb and fidivr subl test les mov xor pusha clc mov add mov lds (bad) mov (bad) sub xchg sub in adc inc imul inc xchg cli dec lea jo pop or push cmp xchg mov push mov adc mov xchg cmpsb imul fwait jmp pop aam pop movsb fidivrl shr movsb mov and ds pop mov fadds loope mov cwtl pmulhw lock pop fmuls sahf lods push push sti pushf cmc jl les xchg push xchg ret xchg pushf sub or sbb neg lret inc into in pushf or in lea faddl mov les hlt out dec lods repz mov repz jbe cmpl pop ret aas dec sub mov imul cmp jecxz fstps int3 xchg imulb jae and push mov pushf mov aad idivb mov xor xor cmp jp insl cwtl jo inc scas mov bnd adc repz sbb cld aaa ret push mov decl popa mov gs fild xor jl leave xchg dec xchg (bad) vpunpckldq or mov rclb push pop aaa cmp inc rep add xchg sbb outsl test and dec cmp clc ss nop cmp xor repz mov sub call mov or sbb in adc lret pop hlt pop xlat jae ja outsb xchg adc sbb adc lret addr16 out pop sbb lret adc push popa push jbe fdivs mov mov call jmp xor aas push xchg ja imul sbb enter fsubl adc mov movsb and mov les xlat xlat icebp outsb (bad) xor scas cmpsl fmull push (bad) mov rorl add push cmp into pop decb and xchg (bad) sub xchg mov sub adc cltd sbb add (bad) imul stos cld repz cmp fbstp daa push insb hlt dec sub cmp pop sub inc jns cmp jb pop jb insb fisub cs jmp inc push out addl mov xchg cs ret xchg ret sbb push mov mov rcr and xchg cld (bad) mov sbb adc jno lods sbb sub lcall mov pop pushf push fnstsw imul adc sub fmulp mov add push shrb mov repz mov xchg sbb cmp fcoms sbb out mov jo iret and cmp into xor sub lea and cli rcrb lea mov mov das sar push mov mov insl lret jge add out call aad mov mov and inc lcall jge jl dec (bad) aas push icebp (bad) mov add push psubusw mov scas fndisi(8087 popa push cmpsl sub mov xchg insb sbb (bad) je imulb (bad) sbb (bad) fwait cmp cmp hlt cmp aam mov negl inc lds xchg jae sti push mov dec cmp xchg pop scas push (bad) jnp or mov out sub pop mov push dec mov cs push fcomip dec lock jle dec movsl or in dec mov fcmovnu das (bad) and sti (bad) cli cmp ret pop outsb xchg sbb pop fld xchg lods xchg and push mov xchg test xor mov ss mov dec mov mov mov push repz and sbb dec push loopne pushl adc or push jl dec iret addr16 push adc aam (bad) push mov sub adc imul jp (bad) in adc push es mov inc arpl fldt pop int ret xchg sbb out cmp lret xchg or mov mov jle daa push dec imul fcoms and clc sub mov mov adc int3 or mov dec test imul cmp shrb sub in repnz or inc jne cld cli or add arpl and jecxz dec adc or pop xlat or jnp sbb mov stc cli lods adc lock sti loope fisub pop and outsb lds sbb popf mov sbb or xor adc rcl push in add xor xor loop je popa movsb in stos test popa imul inc dec jecxz (bad) jae add pop (bad) lock sbb iret call outsb push (bad) repz fsubs cld addr16 jp loope pop add lcall mov jnp out adc or jnp fistp cltd aas cmc stc or mov mov jmp sarb xchg xchg push xchg rclb mov dec pusha mov mov fs push fidiv dec pop insl (bad) mov addr16 mov (bad) or sbb inc pop inc adc inc fnstsw lods sbb cmp test jmp sub icebp pop inc rcrl xlat mov rcr mov movb and lahf and sarl jmp xor push xchg mov fimul bound fwait push cmp or xchg not cmp mov stos ficom ljmp sbb lahf mov inc imul mov out pop mov fsubrs pop mov enter mov cltd mov test in (bad) dec fidivr insl popa sbb cmp jne mov sbb aad (bad) lock adc out (bad) lret jle add (bad) gs adc out cltd jmp arpl add dec jne bound les jo xchg push adc mov mov ja mov jns cs dec ja and (bad) xchg inc sbb dec mov movsb adc mov push jl xchg mov mov sub outsl lds shlb fmulp aam in adc in enter dec cld or mov sbb jns stos in fsubrs push insb inc dec in mov (bad) xchg pop outsl and jno sbb ds (bad) xor push stos pop ds pop mov xor sub xor mov add mov int mov pusha jle sti icebp outsl loopne pusha and and addr16 xchg (bad) ja cmp pop add rorb stos mov or and and and (bad) aas rorl rcrb pop or sti pop push xor xlat arpl fidivrl pop fwait jle int3 adc iret xor xchg mov xor inc rolb js jae je adc add outsb adc ja in pusha mov xchg mov or sbb mov imul ret xor sub or pop inc cmp and lods adc icebp (bad) rclb sub cltd stos arpl pop aas xor push xor nop icebp out or rcl shrb mov roll jg,pn aaa mov std mov mov popa adc inc test inc repz push adc sbb jns xor inc les cmp cmp mov mov sbb cmp jp frstor inc lock xor sub aaa rcl sbb frstor fstl test lahf inc cmp sbb sub in ja popa sub push push clc push mov in lret lds mov adc loop ss hlt cmc xchg ds (bad) hlt xchg cs aad out stc add pop sti dec mov clts in dec es sub (bad) xchg pushf cmpsb or mov push and stos mov (bad) in xchg jo xor push test js lods stos imul pop rcrb xchg das movsb sbb enter leave rcll jp xor fbstp push repnz xchg mov xor dec arpl add pushf jbe jne dec and repnz and push cld inc push ljmp es xchg adc daa lret ret test das xlat xor std push dec jp sub stos into lahf js xchg cs stos mov or jnp adc sub xor cmpsl pop outsb push fmull jo pop sub push pop xchg xchg sbb testb mov sbb rcrb jp loopne (bad) pop and jbe test xchg cmp mull fs inc push push mov cld in push jl out cltd jmp adc cwtl dec and stc adc pop pop mov cmp loop aas mov popf inc cli fsubrl dec cmpsl jl mov sub sub aad lock jg (bad) jbe dec dec or pushf jbe ja (bad) aad fwait dec jbe arpl bound mov shrl push mov stc push xor das push dec mov pop pop jmp shll add and test lods add and mov leave data16 lret mov push movsb push add xor dec (bad) mov das je popa repnz pop cmpsl push mov repz jno jecxz jno cmp fnstenv roll lock sub and cmpsb int inc mov xlat inc scas js lahf cmc sti lods pop xor sbb subb das enter sbb push shld or cmp outsl pop pop mov hlt jbe mov or xchg out dec mov sub mov stc mov or ss fldt push js push sbb sub loopne cmp je jae addb dec jb jns (bad) int3 push and (bad) jle cmp xlat and xchg adc dec insb bound inc out xorl pop cmp (bad) push or clc idivl daa ja rcrl push ficomp int or add outsl in mov sbb mov (bad) (bad) out lea pop lock push test mov cli divb jb add out cmp push push movsb mov subb push sub push and sbb int3 jnp pop lods (bad) cmp mov lea (bad) mov scas jne mov imul enter inc or cld xor xor cmc movsl ds mov mov repz ljmp js lods push aas stc push shrb xor into mov dec sub (bad) push or and icebp out mov stc pop pop (bad) jo aas mov and fwait push jl dec jne add mov sub imul ss sub rcll mov mov sbb xchg (bad) jno movl es adc and push jne in adc mov enter mov call add xchg clc lret and lahf addr16 mov ret cmpsb cmpsb or in into sub movsb mov cltd mov in imul sbb inc fwait ds push arpl sbb mov cmpsl sub cmp push ret test inc call out aaa cmp pop jmp fiadd sbb hlt pushf cwtl mov sbb bound mov lahf mov jne xchg dec inc mov imul outsl iret mov push pop push mov mov jbe (bad) dec aam push lret or (bad) pop cmp xor sbb jne sti and repz sub inc dec (bad) and mov decb lods sti iret mov rorl jecxz push lea adc aaa dec mov loop jecxz pusha or hlt sub ret mov scas arpl loopne inc (bad) mov lods (bad) and and test popa jl into scas jb stos xchg repnz decb xchg aad push push push cmp mov dec pop mov pop shr icebp cmc dec repz add add mov mov push lahf add sub out (bad) in shl jnp inc lret dec cmp add xchg sti xor int3 xchg dec push pop push ja push adc aaa push rclb jge add mov sbb sbb inc shrl xchg stc sti jmp (bad) pop cmpl or jg sbb push pop arpl out incb popa in push push push cbtw add xchg mov add stc out or xor popf mov repnz shll xor sbb stc sbb mov test std pushf test imul mov loop add lret and imul push adc add jno xor dec sbb jmp div daa xor pop arpl lret mov ljmp (bad) sub adc iret into or nop insb adc aam (bad) insl jp add and and in push cmp jecxz jmp loop mov sbb sti (bad) (bad) jl mov sub cmp test in mov dec leave std lods test and rorb aad jno xchg dec and popa inc fisubl fstpl or sub sbb jecxz sbb dec lret loop sbb adc mov iret jp lds jge dec dec or fildll pop mov mov jo sub jp shlb xor lods lahf sti mov xor cmpb mov pop mov enter dec xchg mov das movsl mov dec cli cltd push ret jo push lods icebp addr16 shrl xchg sub outsl sti and test scas add dec or jmp jbe cmp insb popa out popa adc mov ds ret gs jb mov std out mov adc jbe jo pop mov lret enter outsb out test cwtl sub dec dec fdivl add dec lods sub jmp fsubrs dec fistpl mov (bad) xor jns and insb adc inc cwtl jge or int xchg xchg (bad) mov sarl push in cmp lea pushf in andb in call mov cwtl dec scas cs pop stos pop vmaxsd test sbb push dec (bad) (bad) mov push inc mov mov xlat daa dec ja mov mov out jo cwtl mov pop sub adc inc pop das pushf mov mov add jl xchg ljmp mov inc clc pop inc push push dec mov pop popa fistp pop mov mov jbe aam data16 ljmp icebp arpl add and add call stos lret push inc mov push fbld loope fidivrl xor lods and loope jmp rolb jge outsb add adc neg shr movsl in mov push dec dec daa add (bad) aas inc pop dec ja and mov fadds and mov cmpb in cmp icebp xor movsb lahf xor inc mov ja loope dec push outsl jmp jno pop and ljmp dec ret dec inc (bad) cmp out mov lea es je xor int3 and pop or out nop sbb xchg sub mov jb inc sub and pusha test mov and sbb stos loope push jb into fildll orl out add adc and xabort xor and mov or dec pop mov roll sub push fisub sahf das (bad) hlt pop jo mov cmc dec push mov iret mov jbe pop (bad) popa add cmp xchg jne adc pusha inc lahf leave dec dec and mov sbb push push and cmp xor mov mov xor das clc jae pop mov pusha push pushf std inc mov nop dec (bad) push cmc fbstp lcall mov movsl (bad) lds lret les lret dec je sub push (bad) sbb push xchg cmp pop inc jmp inc in or leave jae add or sarl mov jae sbb cli lret cwtl sub movsb jno (bad) xchg rol es mov out scas outsb inc cmp ret repnz aaa enter mov call pop jecxz fildl imul scas sub cmp sahf push addr16 shlb dec aas hlt xchg mov sahf fcompl hlt xchg pusha mov in aas imul or (bad) push jl xchg pop sarb cwtl les mov inc mov push or adc nop fbld push orl xor imul imul lcall js ds mov mov cmpsl inc insl mov popf push adc (bad) repnz pop sub (bad) outsb xlat inc mov lcall dec xor inc adc fucom push faddl cmp (bad) lods lods dec add pushf lock mov mov scas test or in iret (bad) loop test (bad) call xor int3 mov in mov in or outsl enter xchg dec push mov testb iret and idiv fcomps pop cli cmc jb loop lds xor das sub call insb testl inc and mov pop stc aad mov add out stos add mov fnop xor dec adc sbb sbb test cmpsb cmc leave or (bad) sub jae in test shr hlt add and cmpsb aaa cli jp in jl xchg aad add pop mov dec adc adc jle scas xor pop cs repz stc mov mov cmc or cwtl pop rcr lcall mov scas lcall push sub pop pop jmp out push stos scas ds and mov (bad) jbe (bad) aad inc aaa ret mov dec or (bad) outsb loop push add lods mov lcall mov jge pop xor dec and jl pop mov sbb rcrl imull mov push mov fistl leave push adc adc inc aaa imul enter add mov pop data16 cmpsb sub jae loopne enter out or mov xor mov add jl,pn and cltd (bad) leave lea adc jo and mov inc lahf mov cmp dec movsb test rclb mov enter out ja xchg lret incl (bad) (bad) fnop fisub (bad) push iret std jecxz pushf lret into or sahf mov cmpsl call pop fisubr add aam gs aam lahf push movsb pop lds jp sbb das mov fwait mov pop xchg sub aam loopne push negb cmp push jmp inc js and lret lea lods out mov fidivr xchg jbe cld add (bad) ja add xlat and aas dec dec lock mov sub xor dec pop mov mov test loope imulb out pop test fadd or cmp js mov and ja lock pop js setl enter repnz xchg outsl sahf mov cmpsl or xchg mov fdivr jmp adc stos xchg pop mov xchg push or inc jg jecxz mov nop out aas mov fmuls fchs enter ficoml sbb inc fstpl mov movsb imul icebp inc mov fs fcoms out (bad) out pusha adc fcompl mov mov push adc mov scas clc cli mov lea jo subl fwait push add xchg jge es aad sub sahf das les and pop push jbe cwtl pop scas arpl cmp (bad) popf xor sbb adc (bad) cli test jb test fiadd or mov push dec xor or jbe imul lcall iret cltd jmp pusha push sub dec fsubrs xor (bad) pop rcrb shrl icebp test push inc cmp out jmp aas push mov adc mov cltd cltd add mov or mov scas mov out xor ds ss xor fndisi(8087 inc (bad) xchg jecxz mov cmp xchg jae fldcw jnp push shrd movsl pop jmp mov (bad) testb lods decb call loope ret pop test fwait int sarb xchg lock xchg adc ret out paddusw iret (bad) sub mov add adc in sbb fsubs jge mov mov fcom pop mov mov mov loope cwtl gs mov and popf pop test mov pusha sbb sbb push and imul or shr mov iret fsubl inc sub adc stc pop jb cmpsb repz (bad) fiadd add loop fidiv jbe outsl or stos test cmp mov orl and mov das add pop cld insb xlat test out mov push in push (bad) mov jl inc repz pop stos jnp fwait adc xchg mov arpl aaa sub jecxz addps mov xor pop stc mov jp outsb movsb xor fcompl movsb adc mov push cmp test adc in popf xchg cmpsl push fdivrl lcall xchg push fcmovnb dec inc xchg jbe daa mov not cmpsb adc or push aas inc inc adc dec mov loopne xor fsts jne movsb lods cwtl test into call sbb sbb loope sbb push sub in jg fstpl pop icebp lods pop pop push dec dec out imul scas (bad) testb dec mov scas popf sarl sub (bad) xor insb rcr addr16 push jge nop push xor add dec cli test mov inc popa leave xor (bad) sub xor cld mov push add imul ret ret stos (bad) repz mov xor jb imul jo icebp add fwait inc sbb scas jmp add (bad) (bad) jne mov pushf mov flds push pop jge dec pop daa mov loop xor (bad) xchg sarl add xchg add (bad) (bad) loopne cmp xor cmpsb out lds dec out aam jmp sub push jb xchg xor stos inc or daa popa jno pop jb shr jns or outsl scas adc imul rclb cmc test inc inc xlat and test dec into (bad) sahf aam jmp lods adc popl jl,pn (bad) xchg cmp ja mov icebp (bad) jae jae dec sub add jb mov cmp push mov rep imul xchg aas cmp mov pop imul fdivrs xor sub xchg add les mov push inc shlb dec jo leave cmp (bad) pop sub mov mull popf popl fistpl rolb imul out jge add std adc in daa mov fstpl pop es jne inc and mov ja mov iret lods (bad) lock mov rcr mov ror mov adc cs cmpsl cmp mov loopne push sub je popf add ljmp outsb outsb mov pop scas cwtl int adc enter cmpl push mov xlat mov out xchg mov icebp cld dec mov xchg hlt sarb jae sahf mov mov aad std mov sbb inc push test shrb push fwait xor push sub pop cmpsl sbb inc iret or aas mov cmp mov lods push push out int add out jp adc xchg pop pop and sbb mov insl push push adc ds add inc popa (bad) leave jne pop jg mov inc scas mov push (bad) jbe lret inc (bad) cmc outsb fsub mov shrb fldenv fistp leave scas pop divl mov arpl enter and outsl in dec inc std add cmpsb xor (bad) xlat int fisttpll jbe jl js cmpsl (bad) (bad) fnstenv adc mov jmp mov bound movsb addr16 test xchg repnz push (bad) in adcl lock clc cmp jmp push dec add icebp (bad) pop cmp mov mov movsb mov lds xchg (bad) cli enter cmc xchg pop pusha rol mov jbe add push dec mov ret btc sub pop add std daa push bound xchg sti das jl and or out adc and and dec std test insl and test fisubrl test sahf sbb bound xor jge inc pushf andb std add icebp testb push pushf out inc pop lahf cmp out stos and pop sbb fwait lret outsb cmp pop mov call pop ret jp push inc fnstenv jae jae inc xorl pop clc jecxz pop in mov inc pop bound (bad) sub popf cltd leave or or arpl jl fcmovnb and popa mov lds movsb mov push cs jecxz (bad) sub cmc pop (bad) sbb insl hlt add mov xchg inc mov and xchg and fdivrp cmpsb push das sub imul jo int3 pop mov (bad) (bad) lea ret and test adc push stos cltd xchg or pushf nop mov adc fxch inc lods cmc fwait pop add jge adc sahf dec shll flds int3 aam mov clc pop loopne dec setae xchg dec cli lret dec imulb mov (bad) mov imul dec pop push sub mov jmp xor xor add fwait leave mov loope,pt inc loope pop test stc popa jbe test sbb scas lods ljmp mov adc push mov mov fsubrs adc push adc push js jecxz (bad) mov mov data16 sbb aam popf lods or pop dec inc aas aaa cmpsl jg fsubrp or repnz (bad) xor pop sbb cli pop ljmp add test xor add lcall insb jle push hlt (bad) mov cmp mov stos in fcompl inc and mov sahf fsubrs aam in lret or roll sbb rolb in jle mov ds and loopne sar jnp pop cs mov dec mov xchg popf xchg sub jg push cmc clc in fbld ficomp and cli incl dec mov test add add jne cmc insl insb dec push imul adc dec in or out inc adc xchg test rol jg add int3 sbb loop jne cltd push mov xchg sub lods aad mov es xchg add lods pop int3 xor int mov movsb mov add xor fisub hlt das push test jl mov addr16 xchg cmpsb repz push and jmp mov cmc test push mov test jne xchg mov das sub enter dec fisubrl add or cli (bad) mov and cmp fcompl inc test and push movsl jns ret inc (bad) mov inc push jae js iret dec cs xchg popa je pop cli scas inc enter adc lret mov lret inc add outsb ret push mov add jmp cmp push or adc cmp ja stos andb xchg popa add movsl sub decb (bad) std xor pop or add cmpsl adc popa loope and lea adc push mov scas inc rcl aad inc in scas sub or jge mov inc in xchg and mov push mov lahf mov xchg adc out or ja pop enter inc pusha test mov out add xchg loop xchg subl mov pop jns and loop dec and mov adc mov (bad) pusha mov pusha push (bad) out xchg mov test add sbb fcoml pop cmp mov push in ret push jg ds repz jge pusha in sbb inc adc dec ret jg dec repnz and decb lock adc xchg sub lods (bad) daa push aam ds adc cmp fcomip inc aas lahf dec jl jmp sti jo dec jae dec jmp sbb xor ja sbb mov push mulb jo cld scas fwait cmp mov add divb pop and fwait jo mov xchg mov arpl icebp pop movsb outsb out pop xor add and aas fs ret iret rcll pop in test cs mov test cmp xlat mov sbb roll fisttp mov es cmp add pop movq sub jns gs loope xchg xor cmp pop mov pop pusha xor divl sub add ret imul sbb pusha mov mov mov jo lea ja mov hlt fsubrp xor xor repz testl push pop pop xor dec pop out mov xor scas (bad) mov mov push pushf movsl and adc xchg jmp insb adc push sub fsub inc les pop shrl das add push sbb ss jge std call adc inc stos mov mov xchg sbb xor dec fldt ljmp mov mov xchg gs inc ret rol enter stos and daa daa (bad) out (bad) mulb xor and mov cwtl push arpl add pop call mov xchg sahf imull mov mov pop rcr cmpsl (bad) dec push icebp jno adc sbb loope dec jo push push test iret xor imul hlt xlat or add stos pop enter nop cmp pop in pop mov sbb inc cmp adc push outsb xchg loope out outsl or xor lods cmp xchg je,pn pop fsubrl mov aas fsubp or jl push popa out daa out and pop and arpl jae cmp xor pop test mov enter arpl pop sahf mov mov lock cmp (bad) mov mov cmpsl jne cmp jp adc mov fsubrp mov cwtl rcll adc mov and mov lret out jae and scas push jl xchg pop stos and shll xchg cs subl lret nop (bad) xlat or jle add mov inc pop mov push push or fdivrl pop jbe pop xchg inc cmc sbb dec lahf sub dec in and mov cli lock andb dec mov pop or xchg test mov mov gs mov out add insb lret jl jne fisttpll mov repnz addl adc adc les xchg adc inc (bad) ficoml daa pushl lock ljmp push fisttp pusha lcall dec shl fisttpl out mov adc xchg push add and pop psubusw punpckldq loope add cmpsb jb test or or inc loope jmp add push aam daa jb cmp fnop nop cli push out add push cmp xchg out mov mov std in in sbb cli in sub add roll pop inc ljmp jg pop xchg pushw fisttpll jl out loop xchg and cmp mov adc mov imul xor test cltd xchg mov mov inc test sti lret xchg push xchg sbb orb test movb inc lcall xor lcall iret pop out jmp inc out lret movd (bad) and mov insb xor mov and sub dec mov test lock aad out sti push neg in lret pop jmp sbb cmp and fnstsw (bad) sbb mov sub jbe fmul loop daa out adc and or cmp int inc test and xor inc jbe mov mov (bad) adc xchg loopne push (bad) lret ja arpl pop inc jp xchg xor dec mov shrb shll ret mov pop lret or xchg mov lahf cmp ss fistl mov xchg stos push insb cmp mov mov cmp mov outsl cmc subl add push xchg lcall lcall mov ljmp inc add pop push jbe bswap adc out and leave loop sbb not imull out mov jno lcall fsubs or sti ret es stos orl and popf and pop jecxz icebp jp jb dec dec out mov test xchg jle inc inc push mov xor pop leave insb mov cmp insl shrl fdivl loop sub inc inc push jp sub dec jmp pop cmp mov push inc cli fisub sahf bound adc lret sub lds push data16 push cmp mov ljmp push push or xchg fisubrl jae test xor sbb adc scas push add add mulb cmp adc test sbb add sbb cmp jge or mov mov loop dec test mov dec push mov sbb scas loop sub (bad) and or fildll xchg add enter (bad) xchg jle or scas ss cmp mov sub jo fadds dec ficom xor mov or dec out imul mov enter int add stc aad std or mov pop hlt mov lea jns repz add push dec lcall pop sub add sbb mov mov aam or xchg fdivp nop adc pop dec jl fs cmp cld mov cmc inc sbb cmpsb stos test mov out insl pushf mov jmp sub xchg lods xor adc cli pop lea inc jne push mov jge sbb sbb jge test pop mov mov mov ja sub mov dec aad push leave dec push das sub scas pop mov fs sti loope test lcallw adc cmp or and jl jae (bad) aaa test int3 xchg xchg (bad) and jge fmuls lods cmp repnz fstpl andl movsb out outsl idivb cmpsl ja jmp inc sub sarb mov repz mov je test cmp mov mov and jp in jge (bad) stos add adc cmpsl xchg imul xchg or ljmp fdivs pop sub inc into dec adc js push mov loop daa in jp jbe mov arpl addr16 mov (bad) cli cmpsl push sahf mov xchg sub add pop fldl sub cmpsb mov mov and and pop out (bad) cli mov fs push sbb or scas pop push (bad) adc inc sbb adc sbb xchg mov je fwait lcall xlat cmp cld cmpsl mov aas shr push aam xor cltd mov xor push push add lcall negl (bad) repz cmpsb out push dec sbb lds decl sbb mov cmpsb (bad) mov lds aas jb mov cli fdivrs cwtl jge push cmp repz or leave add pop or les mov das sub mov jg int3 mov loope pop js pop (bad) nop fbld cli push test cmp into dec adc jmp int mov dec (bad) or lcall in xchg enter cmp gs xchg lods popa fsts xor pusha xchg into adc xor xor and int sub mov mov pop jle sub mov mov xor mov sarl pushf sbb fistl lret into xor sbb loope dec pushf mov adc push (bad) faddl fucomp pop mov add mov push push jns ds add cmpsb (bad) in xchg mov push dec mov push add int3 ja xchg pop cmp sub inc xor pop push dec insb ret dec movsb mov push imul aad pop cwtl push adcl cmpsb test dec ljmp and or cmpsl ret push sub xchg loopne popf mov push shll into aas mov es mov or mov mov inc jge push cmpsl daa outsb int3 aam jp sub nop push and nop sub in mov (bad) fmull (bad) mov sahf and clc xor addl mov (bad) and mov xchg test test insb sbb gs mov sub jle or les mov mov mov xchg outsl inc add out mov pop and lret adc (bad) sub ja or testl adc add inc cmpsl mov gs adc insb mov hlt or outsl mov mov pop scas xlat aas pop cmp addr16 psrld insl gs cltd call jge imul xor and (bad) lret mov cmpsl (bad) jmp imul adc shlb mov xchg idivl faddl (bad) loopne add sti fwait mov xchg mov stos sbb cmp pop js mov sarl nop stos imul and dec call je pop ja cwtl popl jo imul cmp push mov out js and (bad) or push adc jmp pop jae (bad) or (bad) ds es pop subb jne imul mov scas ss jmp fstps mov lret stc sbb stos out pop outsl faddl adc add adc jb es ret cmc adc inc sub push cltd jge pusha or in out adc push fidivl ja cmp mov cld rcll enter push jg je cmc les in test mov popf xchg ret pop stos imul outsl fdivrs in insl jae sarl dec pop sti les push shrb xchg pop negl (bad) cmp mov neg leave jp ljmp js addr16 and push or dec pop mov out cltd mov mov inc leave aaa test xchg jns call in xchg out test add jge,pt cltd movsl and enter xchg pop sbb cmp xchg lcall clc (bad) mov insb cmpsl (bad) cmpsl sti (bad) jae (bad) js out (bad) cmp pop push stos ds xorl icebp mov xor (bad) ss inc lret and pop out xchg push adc dec enter movsl and ss (bad) test stc ret push into xlat jl push push pop mov adc ja xor jp sbb sahf inc pop push cs jnp and push outsl repz cmp insb sahf mov inc mov repz and dec jne lret inc insl ret xor adc xlat mov jae mov inc test and dec dec mov push (bad) jbe push scas xchg adc mov pop add aad xor ljmp cmpsl (bad) jl mov push cmp daa std mov lea rolb adc sbb jne xlat push nop inc hlt int call lods pop mov sbb and subb jnp cltd mov mov cmp mov (bad) aas inc mov push sbb arpl movsb sbb (bad) jbe mov xchg cmpsb pop jne or loopne (bad) inc pop push jns mov xor add dec or lcall dec jb xor xor sti and push stos aas jg into sub test mov insb lahf sbb jo aaa dec xlat out int3 jle repz movsl in rclb dec dec adc jge imul inc push xor popf mov add xchg out insb nop mov pusha mov fwait xchg or (bad) mov jmp cld sti std je insb inc pop mov adc cmpsl jne pop mov loop shrb mov sbb dec pop into mov jae inc mov stos jp push mov iret push mov xchg lcall addr16 cmp sub add dec dec and lock scas lock pop jbe sbb in les sahf and repz sbb inc outsb rcl mov and stos inc push stc sub dec into mov lahf mov ds nop pop gs adc ror jo sbb loope jg mov notb stos pop mov cmp data16 mov mov push out fsincos insb cmpb pusha pop mov pop fwait and outsb jne jae jg,pt xchg rcr cmp loop call xchg in pop mov cmp jb sbb cs bound jl insl popa in lds popf pop adc sub test lret in xchg inc cwtl daa jo jle mov aas enter fwait and dec xor es arpl nop adc fwait jns enter jp or lods testb cld or scas mov sahf mov or insb dec cltd sti sub push dec cmc stc or jle mov push aaa test xor mov ds pop fimull xchg lods fsubrl imul adc shll addl mov inc in cwtl inc cltd mov cli lret mov lods fidivr clc pop push mov adc ja or lock jle aad push mov test jb jmp adc inc pop ljmp jno cmp add xor jnp nop cmp lcall cmc gs arpl sub or fmul rolb mov imul mov mov xor jp cs mov imul loope and cmp fsts nop out xlat dec movsl mov jmp or shl xor jne fistpl adc out xor dec (bad) aam arpl (bad) adc xchg add sbb inc and dec movsb aad push and dec mov jp xchg mov out dec (bad) pop popf mov fsubp xchg out inc push lcall mov (bad) rcrb sub sbb sub xchg push ljmp lods add jge dec test xchg shrb ret and out sub xchg inc mov pop icebp (bad) aas sub sbb (bad) sbb into fstps dec mov out sub or iret or or sbb sti ljmp out scas mov push xor es test pop xchg repnz push imul lret int3 and fiaddl mov mov rolb xor xchg ror imul lock cmp cmpsb cld iret aam adc inc jp mov cld mov enter sarb or aad xor sti notb dec aaa in push adc ret or lods dec jae pusha sub negb xchg outsb ljmp hlt sbb je ret (bad) insl pop pop push dec call js (bad) jp sub inc inc sub mov add hlt dec xchg divb fwait lods mov mov pushf jmp (bad) pop test add jne dec roll outsb add cli xchg movsb jo xor push mov lods repz xchg or fbld sub je xchg clc xchg fstpt push cmp or push xchg sti fmull lods ljmp lcall cmpsl sbb mov adc xor daa push xor push fnop lock int3 mov push or cmp push mov repz popf ucomiss jmp push add (bad) cmp lret insb (bad) js mov fcoms std adc sub bound push pop movsb sbb pop aam jnp test ret adc jg cli loop in adc ds adc lock pop mov (bad) jne push inc lret dec cmp (bad) jle scas push js xchg dec push mov sbb sub sub jecxz or or jne std mov dec arpl and jmp cs movl std mov aaa adc insb adc inc push fs (bad) sar lret add push jmp mov adc in push out rcrb bound pushf loop mov xor push adcl lahf mov add andl (bad) sub pop addr16 popf pop ljmp mov cli mov out (bad) faddl outsb xchg sarb xchg pop js sbb adc push out add jbe std cmp cld (bad) mov enter mov push mov adc adc fiaddl push lock xchg nop int int3 pusha mov jecxz push jnp inc mov and mov adc mov add in xor (bad) mov xchg stos js test je and sbb (bad) sahf mov popa pop lods push and inc les bound cmp jns int and lds push into std sbb loop push insl xchg add shrl mov sbb add stos mov arpl lret xchg sbb pushf xchg push test jae xor cltd movsb out mov sub out lds push mov cmp rorb push add roll nop mov rclb inc mov inc xor mov jecxz dec insb pop lcall stos xchg xor push movsl jmp lock or aas cmpsl push nop lret sbb push push or cli repz loopne add out push mov xchg call imul aad jnp (bad) jp mov lret icebp or outsb pop cmp out fmulp xor ljmp or and cld rclb cmp jmp dec cmp and mov sbb cmp imul cwtl (bad) iret xchg mov inc cmp aas repnz push jae cmp inc sahf dec cmpb idiv (bad) shrb sbb inc xchg or jbe xchg mov add dec scas and jmp ret les repz dec jg xor mov mov fdivrs in sbb adc sub sub sub push in xor addl jmp scas jmp sub rclb movsl insb cmp add dec jecxz jb hlt shll jb,pn bound mov loop dec xor mov dec mov inc in and enter dec pop fnstenv fldcw pop call enter cld and jae pop xor mov push pop imul inc fbstp and xchg insl cmpsl in push ret inc loop sbb jnp sub cmp xchg repnz iret int3 cmp or sti dec (bad) popa mov jnp stos insb aas call mov pop jge mov int3 ljmp out popf enter add fs lret ss push fdivl test adc mov add roll xchg jmp mov jnp shrl stos lcall dec xchg hlt (bad) push hlt (bad) scas push cmp cwtl mov jmp add fmul pop jns aaa xor scas xchg test stc stc insl (bad) jb xor outsl fcompl out pop adc jne sbb jns jmp rolb cmpsb (bad) mov or mov mov das insb (bad) dec inc lahf inc lods jmp adc rorb fs push cmp mov and scas loope and lea or cltd adc mov (bad) repnz mov sub popa add add pop ret or or mov clc (bad) jo push mov sti hlt pop dec mov popa dec out stos pop pop and les xchg xchg mov lods roll enter xchg mov jne push or lods insl mov xchg sub cmpsb mov xor adc addr16 mov jnp (bad) adc mov jge cmp ret mov shr adc lods sbb cmp and jmp or pop or lock add push cmp adc push push and out xchg fbld mov cmp nop xor out pop lea imul gs repz enter push stos ret insl dec or add cmp jmp sub sub inc scas into push iret mov and fist and jo and iret xchg inc push popf jecxz ss mov dec lods outsb jno push cwtl test jns mov lock xor jnp cmpw jg fisubr mov imul inc shlb sub mov sbb bound add sbb inc repnz dec mov jmp pop inc xor pop stos dec lahf cwtl xor test sub adc mov dec adc xorl stos inc fs inc lds stos adc xchg sub inc mov ret lds mov hlt sub and cli jbe pop into (bad) cs rcll pop mov add and sbb push jle push scas mov stc jmp mov and sti leave (bad) ret imul sub add mov mov pop dec or (bad) iret clc mov and jp cmp out aam adc adc fcomps adc out in pop pop cmp movsb ret fdivl hlt (bad) icebp leave dec mov ds xor jecxz out cli rorb imul xorl out lods cmp rcrb setl push mov or lods dec adc cmp test in dec push es push (bad) push loop aas and lods mov xchg pop xlat sbb mov mov in imul xchg jle inc xchg je pop xchg or or fwait mov cmpl jb dec or and jne cmp aaa sbb or sbb outsb xlat stc mov add jg fabs mov pop push int3 jo (bad) mov push xchg lods cmp push inc sub (bad) sbb dec cld xchg je bound xchg mov aam call push clc in into aaa push push test jno lcall inc lea mov jle jmp dec or mov sbb ds rcll das cwtl cmp pop push push adc mov jns shrl gs out and jl loop test daa inc sbb (bad) pop out adc pushf (bad) out (bad) mov mov pop arpl ds je pop movhps mov mov xchg sub push in jecxz cmpsb or ss jmp mov out xor in mov sub sub pop xor add jne mov cmp or (bad) jmp iret lods test push pop lret sar fmuls lods clc or mov mov jp mov stc xor roll inc or clc testl mov cmp mov jl rorb insb mov dec jnp fiaddl cmpsb fdivrs sub and pop aaa ret inc or cs test pop mov mov add push jbe inc xchg inc mov jo insl jge hlt dec mov cmp roll or add dec pop xchg dec (bad) dec or (bad) mov std dec test mov arpl test cli movsb push cmp push fdivl mov in xchg ret jl int inc je movsb dec js fldt dec test mov mov push inc dec or shrb cs xchg mov mov aas rcrb sbb or push cs xchg mov repz jns or popf scas sbb int cmpsl xchg cmp mov jg inc test ljmp outsl mov into mov rcrl mov fisttp add ror lret sub sub rclb cmp (bad) ljmp mov dec or mov aad (bad) sahf xor adc mov icebp adc xchg xor outsb cmp (bad) sarl pop push cmp jg dec aas cmc xchg sbbl xor push ss ja lock mov mov add inc or and sbb dec xorl sub mov daa jge lea add mov loopne lods andl repz cmpsb int jbe std dec sbb push jg jp inc fnstenv iret jge stos inc scas cmp xor xchg lods rcr ficoml mov mov int movsb sub jae sbb pop adc xor sahf pop stos push aas xchg roll or add neg cmpsl .byte mov add add add or add add push add addb add cwtl add addb add addb orb add adc add xor add js add nop add addb add add add add add add pop add add add add add add addb add fadds add lock addb add and add cmp add add add add add add sbb add add push add xorb add push add add add add add add add add add xorb add loopne add clc add cmpb add adc cmpb add sub cmpb add inc add cmpb add add jo add mov cmpb add mov add add add add add addb add add addb add add add sbb add xor add dec add add pusha add add js add add add add add add add clc or adcb add add add add add add adc icebp sldt test add rolb add add add lock add or add and add cmp add push push add push sldt addb cmp add cwtl push add mov add enter decb add loopne add clc push add adc add add add add add add add adc subb add inc pop add add add add add add pop add jg add add jo add mov add mov jg add jg add pop add call add add add add add add add cmp addb add add add add add add add add add and add add add add add add add add add cmp add add add add add add add dec or add add add add add add pop or add add add add add add push add add add add add add add add add js add add add add add add add mov add add add add add add add cwtl or add add add add sbb add add add add add add add add add add mov add add add add add add add add add enter add add add add add add fmuls add add add add add add add call add add add add add add add add add clc or add add add add add add or add add add add add add add sbb add add add add add add add sub add add add add add add add cmp add add add add add add add dec or add add add add add add pop or add add add add add add push add add add add add add add add add js add add add add add add add mov add add add add add add add cwtl or add add add add add add test add add add add add add add mov add add add add add add add add add enter add add add add add add fmuls add add add add add add add call add add add add add add add add add clc or add add add add add add or add add add add add add add sbb add add add add add add add sub add add add add add add add cmp add add add add add add add dec or add add add add add add pop or add add add add add add push add add add add add add add add add js add add add add add add add mov add add add add add add add cwtl or add add add add add add test add add add add add add add mov add add add add add add add add add enter add add add add add add fmuls add add add add add add add call add add add add add add add add add clc or add add add add add add or add add add add add add add sbb add add add add add add add sub add add add add add add add cmp add add add add add add add dec or add add add add add add pop or add add add add add add push add add add add add add add add add js add add add add add add add mov add add add add add add add cwtl or add add add add add add test add add add add add add add mov add add add add add add add add add enter sbb add or add add add add or add or add add add in add add add sub add add in add add add mov push add add in add add add call add add add add add add push add add in add add add push repnz add add in add add add test push add add in add add add nop pop adc sub add in add add add test adc call add add add add add add add add add add sub add add add add add movlps enter in add add add call push add in add add add shl adc sbb add add add add add (bad) adc test add in add add add or add add add add add rcll test add in add add add adc add in add add add or add in add add add mov add add add add cmp adc arpl add in add add add xchg or add add add add add adc mov in add add add in adc sub add add add add add add in add add add hlt adc add in add add add mov verw add in add add add in verw add add add add add add add add add add in add add add cmp verw add in add add add xor or push add add add add add add add add add add add add add add add add add add add or call add add add add or pop add add add add add add or enter in add add add xor add add add add add add add add add add xchg add add in add add add lock add add add add add add add add add add add add add xchg or xor add in add add add insb xchg or in add add add add add add or mov add in add add add or or in add in add add add lock or pop add add add add add add or mov add in add add add cld mov add add add add push add add add add add rorb add add in add add add clc rorb add add in add add add or push add add in add add add and push add add in add add add xor push add add in add add add dec rorl add add in add add add pop rorl add add in add add add hlt aam add add in add add add loopne lldt add in add add add test ltr add add add add add add add push add dec add dec add push add push add add dec add dec add push add pop add xor cmp xor xor xor add add add add inc add dec add inc add dec add add mov and add add sbb adc inc push push or jnp mov xor test fildl mov stos nop cmp ss aaa aas test cld rol pusha and adc inc cmc inc and pop mov dec popf leave mov scas int and cs sub sub shr iret jl in push cmp and inc out inc in iret cli and mov negb jbe jmp scas bnd add sub xor xchg loop dec (bad) repz inc lods cmp xchg inc call mov cs movsb xor stc xlat add cltd aad daa mov dec push in xchg test xchg pushf fs pop out inc xor rol xchg xchg (bad) out pop or pop mov mov jl adc movsl repnz fs fcoml popf cmpsl orl outsb mul jg mov outsb adc mov in jno xor mov ret jbe mull xor inc test adc inc dec sar pop (bad) mov pushl repnz int3 aaa push mov in push xchg cli fadd push jl fwait cmc adc xchg pop push out or xchg test test jp pop jno mov cmp test jge lods xchg push or outsl sub sbb and cmp (bad) mov mov push xor mov arpl mov mov test fiadd aaa mov out (bad) repz (bad) mov icebp or loope or dec pop mov or enter repnz fildl mov sub nop mov inc aas inc arpl mov pop mov mov cli push jb loope add lret std or add mov push insb repnz xor inc dec and fdivl inc dec inc adc add mov dec imull adc xor cwtl test arpl or cmpsb pop test mov insl mov insb xchg ficompl lret sub inc sub mov icebp mov mov pop sub mov je mov cltd ret dec (bad) popf aad ljmp aas stos dec dec (bad) ss aam repz insl sbb sub aad push pop test repnz sbb xchg (bad) in and sub xchg jge pop pusha pushf loopne dec adc pop cmp sbb inc in nop mov inc in int xchg clc movsb dec (bad) mov pusha jae lods loopne (bad) movl call pop js fstpt adc inc fnstcw push cmpsl mov das lahf or addr16 jge mov (bad) push jno aas dec pop add out mov inc rol mov adc dec shll jnp xchg popa jb (bad) clc insb sub cld dec and clc (bad) push xchg dec jae addr16 (bad) fidivr sub jmp adc loopne jge call jae fwait jnp push sub and mov out sarb sub jl mov mov cmp and mov inc or lahf sbb fstl (bad) not lret cmp mov lods fidivrl into pusha jmp add das dec fistp test pop cmp je ficompl and xchg fsubrl mov cli movsb mov adc xor out fisub (bad) jg scas loopne xor mov shll sahf dec add mov pop sub cmp add insl mov or jge sbb fstpl mov inc inc sbb or add outsl jnp cmp dec sbb sub mov mov cmp add xchg inc out or jg cmp into xchg outsl divl mov cmp lock shll out les mov sbb pop daa add push pushf mov sub mov call xor or jbe (bad) mov hlt rcrb mov cmp loopne roll jo into (bad) out fxch push popf mov pop fisttpl pop lahf push or adc sbb jle mov leave lods sbb inc or push xchg fs mov jl imul jb and and jns cld imul push cmc xchg aad jge addr16 inc or jmp jae jle mov (bad) push fimul push sub mov cmc shll and daa das (bad) leave mov ds gs clc call rorl add cmp ret or push mov negb rol push dec inc inc (bad) fild jle cmc pop jns push rcll sub addr16 clc dec xchg das pop dec jecxz and add jp and lret aam ss lcall adc sub pop push adc mov js jno lea les push sbb and mov lret test popf push lods and outsl dec add mov dec sbb mov inc mov jne sti shr inc out jbe pushf xor movsb xchg and je mov test mov pop js cmp xor cmp push mov pop mov jp ret cmp adc cld inc mov ret lods sahf dec insb fiaddl int3 push and pop enter pop stos mov push xor or dec sub sub mov lea call inc out xlat scas add (bad) jbe fsubrs clc fmuls fdivrl lret jmp ja lock jmp outsl fwait or lea cmp (bad) outsb sti cmp lret rcrb jae shll sbb pop xchg bound lock lahf xchg jecxz (bad) cs sub popf test cmp jl dec xchg int3 cmp aam cmp push cmp aad (bad) imul out jmp (bad) mov stc enter ret push aam mov sub adc lret jae faddl xor xor pop jmp call vpmacssdd test mov fwait push or xor aas ret mov mov lea inc pushf outsl int3 popf rol out xchg push dec inc jle xor jbe gs das add aas fldcw mov adc mov jbe cmpsl add fbld out js loope addb xchg mov out mov cmp or pop inc ret in mov xchg mov sub xchg movsl mov sub test mov push jne (bad) jbe ljmp rorb insl push pop mov xchg sbb (bad) pop mov push or add pop std cs call rcrb xchg in sub iret or outsb sub sbb cmp into pop or dec add ret jae into adc ret call add inc inc push push mov or mov pop inc movsb adc jl or jg jb push and out dec mov jmp jne mov outsb or out rcrl fcomps sub in outsl sarb repnz jb pop (bad) or jno mov mov inc scas movsl enter push mov fs out aaa lret sub add add jle fwait lds mov lock sub fwait or fistpll mov xlat mov ja daa fidivl out outsb jp cmp and pop sub negl push dec cmp cltd or js int inc mov xchg mov push mov test subl jmp or negb int (bad) out lahf loop rolb dec pop mov popf lods imul push pop mov push mov mov imull out out jo lahf jo (bad) mov dec loopne pavgw les call mov mov mov xor (bad) out aad (bad) dec and sbb int3 loope idivl frstor nop jp es daa (bad) call sbb aam jmp cwtl lret mov xor fs (bad) push xor daa xor outsl pop mov sbb dec scas lds out les inc out xchg and lcall inc out js jg into pop jo shll adc setne jno inc imul out psubq aam int3 sbb mov xlat sbbl mov push sub jmp (bad) mov pop ja cwtl call mov mov (bad) pop cwtl jge xor outsb mov and add add (bad) cmp insb inc xchg push mov xchg jmp push inc jno or mov cld jmp pop add adc or xchg jno outsb jae mov out add subl fdivrp xor call pop push jnp cmpsl aam pop ret dec jns bound mov inc mov jg jle lret pop fnstcw mov cwtl xor or movsl lock popa cmp repnz or xchg or loope dec in iret (bad) pop ret in aam mov jae dec aam (bad) mov nop aas mov add test lret inc sbb sub xor mov insb aaa movsb aas incl dec jp (bad) stc aas loop popf push sbb add adc xchg loop pushf pushf repnz shlb pop sbb lret inc xchg arpl sbb cmpb mov js fwait and test push push cld sbb mov xchg push xchg push mov iret in ljmp mov enter hlt (bad) mov or fwait or dec xor movsb mov jmp and aaa xor xchg sbb out repnz xchg jl xchg fmuls mov nop jns and pop addr16 adc pop (bad) lret jg sbb adc pop (bad) or adc xlat scas pop outsl clc js ret adc xor leave adc jmp adc jb scas fisub (bad) or lock adc out mov inc pusha xor xlat inc enter ss popa icebp sbb xor ret incl test cltd and sbb fucomi adc out xchg arpl mov les pop test jg cmp adc sbb push adc sub pop mov sub addl pop cmpsl mov outsl mov mov or push or rcrl mov int3 (bad) pop ret loop cmp call nop (bad) out jo stos sbb push mov nop cs xchg dec stc fisubl xchg bound inc pop int3 pop daa mov shl dec xor (bad) insb mov icebp inc adc add lret es mov sbb insl push lds cmp mov sbb pop cltd mov jno and dec inc mov shrl aam inc movsb adc jns sub jmp push rorb pop inc cmp outsb mov mov xchg cmpsb divb jg pop outsb sbb pop jge in in push dec imul jno sarb or (bad) xor rolb call sub pop mov addl pop pop push add add and jns (bad) jae loop arpl sbb jle daa sbb lret and pop add mov je,pt xor add andb jge dec sub roll in ss ja pushf (bad) add insb loope cltd arpl sbb ds imul push jge adc cld mull loope pop out addr16 icebp cmp pop pusha fadd dec push mov jb test adc push sbb sbb xor mov aaa pop xor (bad) cmp int imul inc inc push ss je je jns mov arpl jns cmpsl js movsb jbe hlt fidivl popa push out leave int3 pop mov pop outsl movl in add sub sahf int3 lods ljmp test lcall and jmp cmp (bad) test jnp test (bad) jbe push push aad ds out out add cmpsb xchg fwait fwait pop pop frstor jl out pop (bad) cmp pop in xor imul xor insb iret xor data16 out xchg and sbb loope cli cmp popf pop js jb fwait xor ret xchg sahf mov mov sti mov or loopne mov dec mov inc dec cmp jecxz scas shl mov add and outsl ss scas call (bad) jnp inc fcmovu mov or sbb inc insl pop ljmp arpl fistp xchg rcrb mov mov aas cltd adc ss cmc cmp lret sbb repz pop arpl test fwait push and push and dec jecxz mov ljmp xor rorb or push insb lahf cmpsb loop or cmc push fild adc push popf sbb in mov mov pop push jb sbb fimul mov mov cld sub fisttpl test sub fcmovbe es mov movsl outsb int jb leave xchg data16 mov rcrl lcall push movsl fstpl push pop sub jne movsb stc lahf sbb inc add ljmp xchg cmp cmp pop std mov xlat loope (bad) aaa or pop inc xor adc fsub push lods fwait clc mov jmp mov cmpsl xlat pop (bad) fisttpl pop lods subl lods cld les push (bad) sbb enter cmpsl rolb cmp sub add scas loopne mov mov pop fwait cmp mov adc aas cmp cs mov nop pop mov js sub inc xchg add add adc sbb (bad) aas cli mov out pop repz nop adc repnz xor cmp test sub push or into cli je push pop shl push add loope jne aad add (bad) idiv xlat arpl mov repz mov sbb inc pop aas adc xor add dec xor pop ljmp iret dec loop mov inc lea cmp adc popf sub push in nopl (bad) (bad) and pop jp pop or leave scas aaa adcb out clc push das pop push ret sub xor aam xchg je push push rcr (bad) rcrb lret jmp test push popa test mov popa scas xchg sbb out mov jno cs mov lds push lahf push stos ss test cmp mov dec rcll lods (bad) xchg lods mov cltd jge neg add cmp xchg jne xor pop sbb in out jge pushf cmc fistpl sub (bad) int3 pushf mov in and repnz leave cmp add fs loop test jg sub xchg out mov jns mov cmpsl push mov cltd xor dec das lock mov mov sub xchg loope mov das (bad) cmpsl xor test add adc ret adc adc inc pop add xchg sahf or in (bad) scas orl repz mov jno out ljmp jne xchg inc fcomps pop sub repz or inc imul fcomps push mov inc lods emms iret and jo mov sbb rolb and aas jns jne xlat std inc stos add pop imul repnz push cmpsl ljmp sbb mov fucomp sbb xchg out (bad) fidivrl inc mov movsb xchg clc xor movsb js adc add push test jb (bad) jno mov dec or les repnz test jecxz outsb jmp or sbb movsb pop dec xchg inc jnp rcll and ss push mov mov insb pop leave xchg jmp pop mov xchg add cmpsb sub push pop mov scas cltd loope iret (bad) (bad) adc or lcall or idiv jg mov push jne sti jmp adc outsl andl jb imul mov aaa and jb adc in sub mov adc stos fdivs dec ficoml movq scas (bad) dec insl push lods sahf xlat or test repnz bound pop out sbb cmp jmp (bad) movsb add jge,pt xor or dec arpl jecxz popa (bad) fisub dec lahf pop sub (bad) push jo cmp sti mov into or inc inc mov imul loope clc aas sub mov hlt (bad) dec pop aad mov imul jns stc pop sarl mov mov inc push jle movsl jmp push (bad) sub mov ret (bad) adc lahf mov cmp test fs pop sub cmp mov (bad) jl pop inc adc fiaddl in sbb dec pop push xchg jmp or jmp pop mov dec outsl imul aam add jp stc sbb fwait sbb cmpsl out push aad and pop jnp mov sahf lea pop cmp das xor and cmp push aas in add push jnp imul aam sbbb cmp dec jo xor adc ficoml rcr jb xor cmpl adcl jle jmp mov cmpsb ds adc sar clc mov adc mov dec (bad) ror ror (bad) fmuls enter add shrl mov sarb daa leave adc loop idiv mov dec fdivrs pop jbe ret mov adc out lcall lret (bad) cmp sahf cmc (bad) and lret aas jno mov xor fldl sub dec and push xor (bad) cwtl lds inc mov ja std inc fcoml fisubrl jle rcr pop daa (bad) mov pop test push and mov imul mov fnsave pop fwait cs je,pn ret mov xor push xor gs cmp js fs cltd insb add lahf scas jmp por loop lods sub xor sub dec add or inc (bad) cs push (bad) stos or cld aam jns icebp adc lea or inc mov mov jnp aam cs jg lock jg sub xchg jns imul and aam push cmp adcb outsl or in jae cmp imul fsub imul loop adc scas or cmp mov in leave lea mov dec icebp enter mov mov mov pop aam xchg fcmovnu cmp repz outsl mov rolb xchg ja cltd adc imul inc mov mov lds pop pop or jp or mov std jecxz call xchg jnp sbb out jl mov pop lret and repz (bad) xor es mov sahf bound je cmpsb dec dec xor in insl popf add cmp je fdivs fdivs repz mov ja nop clc pop mov enter dec or cld addr16 in shll jmp mov out adc dec lcall push imul ds xchg lds aaa mov pop sub pop lahf pushf jnp mov push mov stc negb mov mov mov jmp lea adc stos das lcall dec adc imul jnp not pop cmp or dec es pop mov push out test and gs push and xchg je pop enter fmull mov imul mov sbb arpl roll cmp loope sub mov inc fsts sub loop into test clc js leave inc dec inc and pop leave add andl fcomps cld jno xor mov into cmpsb jno xor add ficompl cmp mov and clc (bad) sub lock inc loope or fsub lock and push gs adc cmpl nop fwait (bad) iret jl jge xchg mov sbb or notb sbb loope sub aaa push inc (bad) fisubr sub push ss (bad) push stos (bad) cmp mov stos enter mov cmc mov sbb fidiv in mov and push mov xor jo daa fcmovnu and jecxz sub jp scas inc ds clc mov pop jne decl repz cmp repz add test jg cwtl ja sbb dec out jne or add inc add push or xchg lods fs int3 cmp sub leave cmc popa out dec mov fwait push ljmp cli push in xchg or sub (bad) enter push dec mov inc sar and add loope lret or mov mov xchg xchg popa fisubl rcrb das nop lret jnp test xor cmp lahf mov test add xchg mov inc lahf cltd inc int (bad) xor dec mov jno call mov in clc dec mov jg inc sbb add scas add adc push push mov in mov jno push scas arpl js cmp int3 les aas or in insl dec loopne lahf enter xor or aas dec loopne mov cs mov jb dec add mov notl jbe ret mov mov jae xchg orl cmpsl adc cltd cmp push mov or adcl (bad) cmp je cmp (bad) fisub adc idiv jbe xor push das test jg addr16 and stc jns inc mov enter sub add sahf pop leave xchg out push mov mov mov jns sahf into cmp nop jmp cwtl and adc xchg sbb iret mov push pop or adc int3 into daa out xor jecxz loop loop inc push cmp push mov jmp dec or jecxz fcompl xor or inc in call mov in xor stos jl xor xchg int nop mov cmpsb sub gs test jne (bad) stos stc sub call jle inc mul ret popa or lret aam xor jg mov jecxz insb fmull rcrb cmpsl mov je add aad cmp in pop lods inc jnp test (bad) test push cmpl sbb fsubrs cli jmp xchg loop inc xor cmp xchg clc mov data16 lds fdivs sub adc sbb insl inc int3 jno mov scas lret xor push mov movsb jb dec outsb xor call and sub xchg push iret inc stos xchg xchg call adc insl out sbb jb sub jo push pop fbstp (bad) sbb xlat fmuls cmp movsl jns jecxz (bad) loope mov pop lods (bad) adc in aas push leave mov sbb sub into dec sbb fildll ret ja inc insb jl sub movsl mov int3 sbb in mov aaa mov sbb push call mov fsubrs cli jle daa and (bad) repnz aas sbb inc repnz or dec outsl cld pop loopne push lods loopne xchg sub jge and dec jle jge sbb popf repnz mov imul xor mov pop outsb out data16 notb lds xchg dec jno test stc xor rcrl dec push and xor push popa xor mov push dec out jae ljmp sub push sub fistpl mov dec sub jp sahf into xorps push dec sbb jmp cwtl jne jo aad outsl dec imul (bad) std testb sbb shll (bad) out fdivrl jb in fistpll int3 jae cmp and mov adc pop daa dec push dec fidiv dec mov lock push out or mov mov mov pop sbb xor xor arpl cmp repz xchg sub sub mov sub mov cmp ds mov xor movsb add adc cmp mov aas into jmp cmpsb pop fbld jecxz cmpsl and mov out mov cmp cmp mov inc push cmp mov int3 cmp jae in cmp pushf scas inc jnp outsl sub es (bad) int (bad) push mov pusha iret dec int3 ret cmp (bad) sarl mov shll scas es shlb std mov aas stc adc inc xor cmp cltd jl and jae mov cmpsl pusha fisubl enter adc sbb aam dec aad gs mov (bad) mov push lcall roll xchg (bad) insl out and sbb inc mov push sbb sti scas add cmp dec push bswap or je pushf dec mov mov mov jge jmp jmp or sbb ret repz jge mov lds inc xor sub jns mov fildl ljmp (bad) (bad) leave stos ret push mov es or mov out es pop xor mov mov ss pushf cwtl imul shlb jae xchg dec xor and out movb pushf hlt lds and std sti out xor insb repnz (bad) shlb stos mov jl cmc movl mov scas inc xchg outsb xor xor add dec push stc inc mov (bad) movsb mov cmc mov mov shrb sti xchg mov inc call jp inc xchg xchg inc enter mov das sub cmpsl out mov negl (bad) xor xor mov cmp xchg jecxz in add mov push dec subl (bad) rcll (bad) cmp lea sbb pop fisub jmp ficompl arpl adc mov and mov (bad) pop jle or outsb pop sub cmp push mov cwtl adc push cmc js shrl dec rcr push ret test test movsb pop (bad) jno jo dec lock jp sub xor aad add arpl daa xor inc jle mov adcl xor es std dec xor cs aad leave insl jnp mov mov xchg stc lds pop into and cmp test test lock push pop sti mov jne jl sbb (bad) pop jne adc adc loope push ret and aaa push std mov shrl cmp bound pushf cltd insl hlt inc (bad) push add add inc faddp mov push imul ljmp sub pop pop sbb mov (bad) mov hlt inc movsb push mov mov xchg daa sbb inc movsl mov fnsave dec cmc dec xor dec mov push insb (bad) shr adc cwtl ret lock lret (bad) jl,pt jne mov testb int jp pop sahf xchg lds inc adc rcrb stos in pop dec add dec push jns jge in jg sahf das ret push mov sub testb repz push ret xor aaa cmp into insl fist cltd fcompl test psraw pop icebp adcl fdiv dec pop add outsb sbb imul push outsl lret cltd cmp push pop xor test inc rclb (bad) jmp test cmpsl aad add mov outsb sbb insl jmp leave cmpl mov sub (bad) lock sbb sub xchg imul movsb out int3 jne and mov push adc fistl sub and (bad) and add stc mov add lahf loop loop sub (bad) es xchg jge ret adc out ror pop insb popa or stc ret jne insb inc add stos cmp stc xchg pop js xlat movsb faddl and insb sbb mov outsl je mov aaa enter fcompl outsb cli shr mov hlt (bad) cwtl xchg jecxz insl gs popa adc (bad) call jno sbb pop sub cmp mov ret jae sbb adc cmp or call sub push fldenv and jmp aad sub mov or dec sbb popf xchg fadd test jbe cld icebp cltd pop pop adc (bad) call add aam incb mov pop adc outsb jae imull lock (bad) stos repz xchg pop test xchg imul cmpl addr16 push sub cmpsb jne arpl pop stos roll jno mov out or (bad) add int jle xchg jb sahf jns xlat les push pop xor lds mov cltd inc stos sahf cli xchg and gs jecxz lock mov lods daa mov xchg fidivr mov cmp pop lcall mov iret loopne clc popf imul sbb lea data16 pop xchg add test gs cmp dec adc es repnz les leave cmp jmp scas jae arpl jecxz mov out sub inc stos mov push stos rcr mov cld loope mov inc ja adc movsl fwait dec or push call xlat xchg and insl out rcll push inc data16 sti adc mov fisub jo sub jl in mov adcl adc aad sbb bound cmp dec jg stos mov lcall add fistpll lcall hlt jp pop xchg das (bad) in imul ret mov pop jp pop dec xlat loopne adc pushf ret sarl xor sbb inc shlb mov mov stos or mov mul int3 mov mov push loop lods xchg xor or imul xor adc inc and sti nop fidivr (bad) adc lcall nop mov bound pop arpl (bad) es incb ja cmp rorb (bad) mov scas in (bad) cli inc sub pop mov push fs cmp add xchg inc sbb nop mov pop xchg repnz ss xchg add insl fstpt pushl push mov pushf mov movsb xor leave sarl ja pop and or gs sub push inc push mov stc lcall lret jmp push dec adc cmp pop jno in sbb sbb test cltd (bad) (bad) out dec daa ret cmpsl int cs pop lret rol jp dec scas cmp test fdivrl jp mov pop inc mov mov xchg int sub pop call roll jno xor ret sahf jb insl icebp shrb into test arpl arpl (bad) shlb pop into push jmp aaa and aad push mov adc cmpsb mov jg adc xor les aad sbb (bad) es dec inc mov mov jo call sarl dec or xchg in and and in popa dec add js jns outsl or jno xchg adc test jle xchg jns je cmp (bad) stos sarb dec add mov repz push sub nopl mov out stos (bad) mov mov and xchg cltd mov pop cltd movsl in xchg movsb sbbl or adc outsb inc xchg dec paddsw lea into and icebp lret xorl enter cmp dec add sub inc test push test fwait sbb arpl xor mov in bound mov addr16 xchg fdivp cltd sub cmpsb xchg stc xchg mov pop pop adc xorl sbb popl in (bad) fnsave xchg call mov into test movsl addb pop mov adc push icebp cltd imulb lcall test inc add inc int mov adc jnp mov out gs fldl movsl sbb movb mov add in mov fnstsw lret sub stos and daa or repz inc push inc jo rol lea loop push push repz daa popf xor movsl cmc mov mov (bad) es lret mov xor inc adc push pop jg insb pushf cmpsb inc in daa repnz mov and adc mov leave imul fidivr fisubr or xor sub dec or inc mov pop (bad) (bad) into fiadd mov push in bound insb icebp lea add dec fldln2 ljmp cmp in add mov jbe adcl push test mov sbb mov iret xchg adc jo hlt mov adc mov decb jns sbb mov loope es pop gs add push insl (bad) jl data16 pusha mov outsl outsl pop bound lds lret cmc (bad) and (bad) ds in push pop pop xchg xchg jl jns int xchg xlat test nop or dec out xor jmp rcll xchg shlb sub lret andb or mov mov in push mov test movsl mov sbb jae int xchg or shll aas fsts int3 cmp adc insl jecxz adc movsb dec dec inc sbb aam or aam outsl sbb std scas js inc adc es inc mov and testl mov sbb jmp cmp and pop imul cwtl add xor repz adc adc mov int3 xor inc lds mov or pop lods cld adc sbb pusha jmp sub imul mov mov add add dec pop stos mov fsubl push jmp dec loopne call or add mov and shl ss pusha sbb jmp sub repz les xchg cs fadds ljmp pop pmaddwd sub les cli jb push ret mov dec xor in mov push xlat inc imul mov movsl xchg jmp dec (bad) adc xor lds push inc lock mov (bad) insb push and cmp dec pop into int rclb sbb pop btc scas sub add sub xor push popf mov xchg ds xchg pop sub idivb adc pop add stos rcrl sbb sbb mov iret fild test pop push jns cltd inc cmp rcr mov push dec lahf fs clc jno out int3 adc mov jns stos aas mov jo lods in push xchg enter adcl or aas rolb in aas inc ficompl ds (bad) jge rol sbb out icebp push lods fcmovu lods or scas out mov shll mov pop xchg pop jge mov insb pop push jl mov adc inc xor icebp mov aam jl aaa cld lds subb add mov inc (bad) sbb add push bnd loopne lds pushf push jno (bad) mov call mov jecxz mov mov pusha adc dec cmc js sub (bad) mov daa mov iret cmc outsl jns pop loope into ret outsb jg pop loope inc sub imul or dec icebp in aam imul lock es ja mov rclb dec mov mov pop mov (bad) in ror mov cmpsb xor int3 cmpsl idivl xor fcoms xchg cld loopne ja test mov cmp lods push shr sbbb (bad) scas out das push push lds jns inc lea imul mov push xlat repz or ss add loop jmp inc cltd dec (bad) insl loop mov xor in jecxz sub mov cld dec paddsb lock push je sub clc lret dec loope mov jle fistpl jle push add dec adc jmp mov es sub and popf push add pop iret dec adc insb xchg ret jge cmp iret xchg lret and out push pop enter xor adc dec in jbe js jns lods lea mov and lds aaa cmp xor mov fiaddl int3 adc dec (bad) ss push test push cmp addl jecxz and sub push fwait adc bound movsl mov (bad) pop pop out sub pop lea outsl scas jae (bad) inc test sbb jae aas iret std mov jbe iret mov and mov test test pusha pop nop iret or dec pop push rcr sub cwtl inc sub vpmaddwd xlat inc lock push (bad) clc mov shlb clts sub lds sti test or and outsb adc mov insl dec xchg int mov lret inc xchg and pushf sub or jl jo sbb add pop sub iret outsl jbe inc fild push add pop mov (bad) les adc jecxz out int3 jge lea xlat mov fdiv outsl daa movsb imul jge push fist idivl scas push in lahf xchg pop iret cmpsb jmp push pop outsb mov xchg stos fadd cmp mov push icebp stc add jg ja (bad) lock aad (bad) insb sbb (bad) xor les lcall sub fwait xchg cmp stos add dec dec seto xchg jno sahf or (bad) sbb push sbb xor push movsb mov push cmc push lret jl test pushf add (bad) sbb xchg jg jne pop js scas inc mov pop bound jg cmp sbb sbbb dec fstpt adc out adc aas lock jmp mov lock mov sbb xlat inc imul dec mov cs adcl mov jg xor test in xlat insl ret hlt and xchg addr16 xlat jge call dec jns jecxz lods push iret mov lcall dec cltd sbb lcall sbb stc mov (bad) fsubl push mov mov rep stos fisttp xor mov jnp insl imul sub (bad) fidivr dec push push sbb jmp cwtl mov out jp jb jp outsb adc js adc aaa and and adc adc jg dec stos dec xor outsl add call mov rorl dec (bad) int in and out cmp dec cmp aas pusha mov pop scas in add adc mov mov orb or aaa stos push fwait sub faddp xor sbb xor icebp jo xchg out pop mov rclb pop pop insl sbb mov xchg xchg inc aad (bad) call pushf test xchg dec and cmpsl xor cmp call mov add pop adc aas or mov out (bad) xchg mov out or mov jp lods mov add xchg and lock popf fadd out push outsb dec (bad) ror call pushf or lock mov mov cmp lds lods pusha push push push in dec or mov pop popf cmp push leave mov nop pop or jg cmc popf loop pop mov adc scas jge pop out aaa add dec mov mov and mov add sti push cld (bad) popl pop cwtl gs jbe xchg adcb cmp push jle out adc mov and into ret push repz or jmp mov push pop mov ds leave je jmp aas loop lock jmp and or popa inc data16 pop jp or pop into lea mov dec scas pop aam cmp sub cld jecxz cwtl mov into clc ja push (bad) cmovae leave scas xchg out das fsts sub das mov les cmpsb pop andb (bad) xor or and sub test add outsl xchg fs pop fsubrl inc sbb or and cld mov mov outsl ret inc aas mov inc push insl daa insb adc pop cwtl mov jp sub hlt add stos scas fcompl sbb jnp push mov jge adc test data16 (bad) xor mov (bad) and mov mov scas jl xchg (bad) sbb das fldenv jp fsubl add loop sbb insb or fildll popf aam (bad) fmull adc push and push into push nop mov int pusha fisubl in add xor (bad) cmpsl and jg mov sbb jnp xor arpl mov mov std rorb xor mov jns mov adc jmp dec or xchg fs imul xchg (bad) fsubl sub insl push negb in or add repz xchg stos jo push scas fdivs shrb push xchg fwait in adc xor pop xlat stos imul xchg inc jae leave movsb push (bad) (bad) fldcw into adc stos or cmp push inc aas lods sbbb xchg mov jmp leave leave pop pop adc cs xchg outsl iret dec inc into ja xor xor inc inc mov insl pushf pop mov push cmc test add dec add mov movsl xchg lret fadds pop cmp rorb gs add jecxz jo sub mov arpl adc inc int3 dec mov loope aas adc aad (bad) pop jge insl (bad) sub lods or sbb pop sub testl pop push inc dec fs bound push dec lea or sub daa dec idiv shrl adc stos je loop dec xchg sub les shrb pusha push push dec pop jo inc inc jmp jmp lods ljmp repz sub inc mov mov out pop hlt leave les jnp push fisttpl jae outsl push scas add sahf push scas fwait sar or add xor in dec push pushf cmp pop lcall lock pop rol ds and or mov add shrb inc jno sbb mov lret pop sub enter push inc (bad) xchg (bad) pop inc adc insl outsl out notb repz cmp sbb push aaa lret push ficoml push insl mov cmpsl cli lcall sub mov or rcr mov (bad) fnsave outsb pop or addr16 scas cli mov dec mov in cs lret lods arpl mov xchg mov cld icebp les sub test jne add lcall (bad) aad mov fwait push and mov and loopew push push sahf js cmp xchg aam xor movsb (bad) lds sahf push leave mov cld or movsl mov mov (bad) ljmp sbb adc pusha dec idiv push faddl add add sub xchg pop lods test sbb call jo scas xchg jnp loop hlt cmp mov push fnsave fwait es and int fwait xchg clc jecxz and mov adc mov in outsb adc xor add lds sub (bad) out in jnp adc mov mov jae ficomp jbe lret xchg pop imul jns in inc push or cmp call jo mov mov push ss xchg jo and pop gs js sahf mov add lcall popf xchg shlb das adc sub imul cmpsb cmc mov adc xlat insb dec ss cmc arpl imul test hlt or mov fs in jnp sub sub repnz cs fnstcw jecxz jg xchg push (bad) (bad) hlt mov repnz pop lds fdivrs ds aad push adc test cmp jne mov xchg cmc pop ret mov imul add jne dec inc pop rorl add inc clc in push pop mov mov mov add mov rcl lods popf cmp xor pop cmp fstpt sub add or lods or fdivs scas adc push cltd stos xchg imul rcr adc or call dec addl or aam imul int3 push pop or xor xchg jmp mov fcoms ret dec jno sub ss mov inc loopne push cwtl sahf ja or jns xchg out bound ds ret push cld and push adc (bad) mov add xchg out pop aas jbe mov and xchg iret cmp insl cmp out in fnsave in cmp imul push jecxz pop cwtl aaa ret dec std cmpsl inc and jae mov movd xor cmc std ss pop dec xchg pop lcall or hlt pop jno pop (bad) mov in mov xchg cmpsb mov es xor push xchg clc inc mov or mov popa scas (bad) xlat out aaa mov add out adc mov scas lds mov push xchg adc sbb into jno scas mov and (bad) mov sub jne mov push sar add xor out xchg push ret cmp push push xorl inc rorb push pop cmpsl outsl mov mov cmp cld insl dec jnp test (bad) and dec fst and sti fwait jae and lret inc cmp sbb je lods fs ffreep lods sbb jnp popf sti in mov test aaa gs outsb add ss pusha push fstpt push xchg and xlat sbb add jb mov test mov pop rol gs (bad) cmp clc pop outsl out sub pop popa dec int3 adc (bad) pop ljmp scas cmp fstpt mov push popa push repz ror fstl sub add gs sub sbb mov sahf push into sub fucomi scas lods call insb arpl faddl xor jge bound cmp stos scas lods inc pop shlb cmp push sbb add push in (bad) jl push push sbbl scas lret subb rcrl inc xor popa arpl cmc jo cmc bound add adc inc jmp ljmp leave push icebp xchg arpl cmp das sbbb (bad) dec ss aas xchg cltd out jne or ljmp fiadd mov add cwtl cmp in les insl popl add orb insb and jg mov mov dec xor xchg das iret cwtl ret rcl sbbl pop jl std cmp jmp imul (bad) mov mov aaa ret repz inc or insb movsl xor mov mov subb clc ds xchg out call inc sbb jg mov loopne outsl push aad jnp xchg xchg out and inc inc sbb push push add dec popf popf fs mov std aam call mov sub adc adc icebp (bad) sbb mov lock mov addr16 nop sbb jno (bad) lret pop cs movsb sub dec jbe mov add push out ja stos push push jo cwtl test js and mov sub jl test adc fs dec push xchg insb sarb pop sbb mov or fldenv outsb xchg dec sbb inc aas out ds in popa jnp jnp outsb lahf jl xchg into mov dec dec lods pop leave cltd aad xor add cld imul les fcmovu mov jp and mov ljmp xchg pop sub pop mov stos mov push sub xchg jmp or or or scas lahf add mov or out mov mov (bad) (bad) push push out cmp mov ss lret sbb loope aas rcrl sub in mov fimull lock ret les jb repnz cmp subl loopne push imul cmc insb lahf push nop sub dec lret mov outsl adc sbb dec inc lcallw push rcr lds mov out pop lcall cmp js dec icebp xor shlb sub pop cs pop jge mov xor mov jmp hlt aaa dec call dec lcall movsl ljmp jp outsl lea jp adc and mov roll jl subl sub rcl fs movsb inc in lods mov imul dec lds (bad) gs movsb in pop or xor cwtl dec shlb mov jge or ljmp popf fldcw mov inc fistl jno push jno mov or jno dec daa js addr16 cmp loop clc mov jnp cmp or mov test in push jne adc sub dec sbb test stos outsb pop test loope xchg std add push icebp pop js add pop xor xor sbb or mov pop xchg jle popf cmp imul insl jo into jbe (bad) mov lods mov cwtl mov mov fcomip jle int inc clc sahf scas stos fsubl out pusha inc decl jnp fdivr pop aam xchg adc sbb add adcl and loopne ret pop jecxz fcoml cmp sti fwait (bad) scas cs cmpsb (bad) jmp lcall (bad) (bad) mov cmp lock (bad) in xchg mov xchg icebp sub repnz movsb movl cmp sbb cmp and or js xchg js push outsb add sbb aas jl js ret sbb sti and xchg lods popl fild xlat xchg jbe out jns pop (bad) outsb or lahf cmp ret dec ljmp int mov lock and add daa arpl lea je adc loopne,pn mov (bad) mov add pop cmp leave lock lahf sub pop inc cmp aaa js inc fldt js orl (bad) cltd vpsubusb xor nop adc and pusha lock push inc mov popa inc cltd xchg test fbstp mov ja mov dec and mov iret or call cmp negl pop lds mull (bad) pop in in mov cli notb pop leave ljmp cmpl pop jmp lret or test ja fcmove mov jge int push pop adc (bad) push movb mov pop rorb mov or fs inc mov dec std pop jnp pushf repnz jns jle pushf bound das outsl mov stos and sub iret sahf inc jnp inc imul adcb or inc in mov mov clc in inc xchg shlb inc inc insl bound out je out mov pop or out mov (bad) xor mov or stc aam jno and jb inc xor scas aas inc pop cmp push mov sbb mov imul (bad) fadds outsl sti out xlat out or sub dec or pushl jne loopne pop cli loop mov or adc imul sbb push leave jb nop add adc mov fwait xchg xor clc (bad) cli add and xor cs mov daa xor add fisub popf mov (bad) mov out test jmp push jne clc sbb pusha xor xor ret xchg ficoml xchg mov or mov ret cmp ss mov xchg lods dec dec sbb and ds shrb int add or sub movsb jl mov jmp push (bad) mov push push movsl xchg jno into and mov xchg jmp inc push (bad) pop sbb mov aas mov in es negl imull dec out cmpsl fisttpll hlt dec xchg scas pop mov notb mov push int lods mov fdivs add xchg (bad) mov sub clc pop shlb jo pop insb and push cmp outsb (bad) in in xor lahf mov lods sbb push jne sbb sbb dec pop sarl sub lea nop sub or repnz cmp inc lret jb das in iret pop sti les dec xchg inc mov ficoml xorl (bad) es bound pop jbe fbld pop fs daa cmp push fcomps mov mov pop sahf lods pop roll inc xchg push pop shrl enter push or ljmp nop push push aas lods mov dec jo nop repnz add add sub cwtl mov jp inc fst dec mov cmpsl icebp sbb int out push add or hlt roll sub push pop cwtl jo les xchg aam adc sbb inc inc jecxz mov mov lock pop mov test loope pop jle ljmp in outsb (bad) xchg es xor loope repz cmpl inc cmp add and mov lret pminsw xchg add pop mov fstpt lahf rolb insl xorb jmp lods mov mov push dec mov stos mov push and fimull xchg mov mov in in dec fwait mov es jns insl adc cmp jp sbb dec ljmp sub jmp outsb mov push imul in fisubrl stos inc mov xchg jo sbb (bad) cmp jmp fadds mov aas rorb inc test push dec mov push inc ret mov lods sub (bad) int mov aad in daa add mov lret (bad) mov mov pop mov (bad) in xchg and mov cmp inc fadds aam pop ss mov loopne std rorl add or aaa fwait push jno (bad) or xor rclb push mov xchg add jo stc and pop out and es mov jmp add sti (bad) rorl scas cltd adc stos pop ss jl data16 stos adc fcmovnb dec adc mov aam sahf cmp test data16 sbb arpl shlb mov mov dec imul xor add in push (bad) jecxz adc fwait ss sub div in bound push xchg sbb push dec ret mov and loop in jecxz jl pop adc add daa mov ja lods add dec inc and pop dec daa jle (bad) out lahf xor sbb mov dec mov push pop push cmp adc addr16 mov mov and sbbl lahf jb mov mov je push pop xchg dec adc jecxz jns sbb push int3 adc push xchg sub jge cmp (bad) arpl test xchg clc sub std aam or adc pop fstpl cmp dec lods sbb or push iret push stos rorl stos jmp (bad) aaa adc (bad) repnz out (bad) loop mov in sub ljmp xor iret outsl sbb in fcoml mov lahf ds insb mov shll call xorb stc sub push xchg pushf outsl push inc mov dec push xchg fs in push push es mov jo mov jne gs ffreep push lods out lret ja adc cmpsb mov xchg or (bad) lahf int out ret cmp repnz shrl in icebp js adc imul leave fstl es aad dec cmp jle mov inc push mov adc pop stos fs add xchg (bad) stc bound pop cmp lcall or xchg jmp outsb ret je cmpsb div ficompl push or test gs push jg jne pop cmpsl mov int fistpl test out mov pcmpeqd rcl sbb sbbb mov negb mov mov nop shl dec add shrb aam cmp pop popa mov stos clc pop je sarb xchg push (bad) mov push cmpsb les and mov les stos (bad) xchg popf cmp cmp push add scas pop lods jg mov pop test inc jo subb cwtl sub mov test push and cmp mov loope jb movsw sarb ss js and (bad) xchg shr repnz lea or push inc or imul jg push mov xor les rcrl sub xor test aad push xor add rcr sub rcll fwait jmp inc dec rcll jno adc inc stc mulb cmp push (bad) pop inc adc ss dec xchg cmpsl fmull in insl adc leave (bad) hlt in ret push dec pusha cmpl stos test sub cmp push jae mov mov pop movsb aas or popf (bad) cs out in stc (bad) out cld test (bad) nop test mov aad jmp cmp jl mov clc jmp (bad) dec js loopne cmc stos das movsb (bad) mov ret test inc das xchg lcall add (bad) into cmpsl cmp push mov cmpsb mov jnp fwait or pop idivb push sbb daa fist inc lret shrb (bad) push (bad) and in push sub lahf push imul sub aaa bound and xlat (bad) fiadd dec xlat mov aaa xchg test aas pop mov in int or rol clc xchg mov in iret sub shlb insl mov mov lea popf inc jle out cmpsb pushf in aas cmp ret pop shr addl jo jns sbb rcll sbb adc sbb int push (bad) jns xchg imul in or xchg jno or in pop ja int3 adc dec pop (bad) ffreep fcomps mov fidivr add ja inc add push pop push lods and xor mov cwtl pop mov xor xor (bad) loop lea cli sub push add jle push fisubrl xchg je pop mov lfs es fwait out addl cltd sub push fwait test (bad) mov mov bound loop out movhps add push xchg data16 xor shll add or xorl leave or fldcw repz push roll sbb jmp mov shl push cmp mov mov stos stos mov mov in cmp mov or jle and push jmp mov scas xor inc inc sub cmp xor jmp mov inc out xchg cltd in pop addr16 clc sub inc sahf xor js scas mov pop les adc fldenv stos mov rcll add jae mov ljmp scas call adc je xor dec hlt dec push (bad) mov jo cmp iret add mov stc pop jbe out mov pop push (bad) js sbb out ja sar jp divl nop jbe inc mov out jecxz (bad) test add (bad) dec fwait gs pop std imul and or mov fisub mov setne aas lret and loopne ss mov add movsl aam mov leave mov aas dec adc pop scas pushf mov test pop sbb xlat dec ror fwait loop insb je mov sbb mov push test sarl and test push rcrl inc iret loope test dec std int3 cs sbb adc hlt dec movsl ret or sbb sbb test int3 jns lahf xor fwait jne inc jl xchg jnp inc mov or lret fcomp icebp scas test rorl jne jge jne mov and adc pop jp push sar psubusw (bad) jp ds inc adc push or fsubrp lret xor loop sbbl int3 sbb sub inc push ss insb jle movsl lret or mov not jnp aad adc sub dec imul flds imul jg adc ret sahf xlat aas jecxz leave fldenv cli mov adcb gs lds push xchg (bad) clc cmpsb pop push int3 repnz cmpsl mov lret and adc ret push ss shrb cmp (bad) sub fldenv sub push js mov int xchg dec ljmp ss lods fistl test int jle (bad) icebp ljmp or es xor jecxz in inc lock jge add divb data16 mov ret jne jbe leave sti mov std loopne or xchg mov mov mov mov adc test gs sub ss mov add mov inc add mov (bad) or cmc jb es sub mov or (bad) arpl pop inc xchg cmc add jecxz xchg and fwait xor aas test mov mov jne cmpsb mov pushf and sbb jbe aas scas das out cltd lea mov dec jb in jo aad repnz sbb inc or iret lret lret fcmovb push or sbb out lea jae adc mov mov mov pop inc push adc out test and jl out mov add arpl lahf push stos xorl mov ret lea inc hlt rclb (bad) stc dec sbb ret gs in (bad) pop popf sub add jo and shrb mov fidiv fistp jno fsubrs stc mov push mov enter adc aas leave adc incb and sub mov pop mov ret subl jae pop cmpsl xchg fistpl pushf jp and loopne mov inc test and lret mov pop push cmc inc fistp and xchg lods dec loop add shl mov scas mov leave push mov mov sub and rclb lret xor ret pop repnz pop loope sbb inc xor imul out inc ret sbb out xlat xchg xchg int3 and pop mov nop shrl cld mov test push dec dec pop add aas (bad) aad dec decb sahf repz ljmp add push or imul and sti jb dec fdivrl inc out in scas inc test out cmp mov adc insb adc mov jp mov push test scas mov lock xlat les bound int mov add jle adc int3 ret xor mov mov mov std in cmc xor jecxz outsl mov clc push pop fwait ds or add xchg jl scas lahf inc jg (bad) addr16 mov mov iret add mov add jno notb (bad) ja popa stc (bad) int dec add iret push aad mov sbb or mov mov pushl fmul cmp pop adc in jns pop inc (bad) push push sti and pop cld mov mov push xchg cld stos test lcall int3 lahf sub fldl ficomp jnp sub pop inc invd adc fisttpl lds push mov jg mov cwtl les adc add push push icebp out imul stc cld inc jae in outsl lret mov jbe aas push cmp pop ljmp call jbe lds out leave xchg inc cmpsb fldt push mov xor inc xor mov in and lsl rorb lret mov mov imul repnz and xrelease dec mov or fwait bound cmpsl ret fnstenv addr16 (bad) cmp dec mov and pop xchg mov es lahf push (bad) xchg push sbb mov je outsl pushf pop xchg xor (bad) icebp adc push xchg and xor adc ret xchg mov push test loope aad or inc xchg pop je rcr sub addr16 js mov xor push cwtl into mov inc pop test daa movsl jmp mov js push sub or rcrb jecxz sbb dec andb sub push sahf mov jl lahf iret push (bad) sbb sub scas lock add mov fldenv test pop (bad) xlat pusha sub (bad) in ficompl jl pop inc dec pop and mov inc fild out mov je sub lcall mov xlat fistpl mov push cmpsl and hlt sub lret ret dec scas add loope pusha stos or (bad) xor divl aad loope aad dec lea mov gs sahf in push and pop push xor stos adc insl inc fbstp inc icebp movsb jns inc jg data16 in in ja sarl shrl popa stos in push fs stos mov (bad) scas sbb aam sbb scas mov ljmp inc faddl mov mov jmp sub add push xor popf sbb iret out sub insl ret gs sbb int3 adc pop and add adc enter xchg add sbb or jns movq pop adc push xchg js jo xor sub sbb fstps out lcall fs xor (bad) lods loope and pop loope sub clc (bad) adc cmpsl mov aaa pop outsl and outsb imul fucomp sarl push cld lahf test leave (bad) and (bad) jp loope daa mov loopne pop and jnp in jb into test ret pop fucomp rcrl add sub cmp (bad) mov das sbb pop inc insb push xlat je (bad) testb stc lock (bad) out jmp ss lock int sub xchg push push lret jle gs cld xchg mov mov and mov mov push in inc sahf ret inc mov mov pop adc xor jne mov stos and inc cmp sti jns and xchg mov sub aas fadds test and and int jne sbb jle loopne push inc stos pop loopne push int sahf out scas push dec push imul mov sti out (bad) out pop fiadd sub sub movl daa fsubrp mov sub rcrb sbbl lret pop xchg mov mov push daa mov iret in outsl push push roll pop jbe (bad) fidivrl cmp dec rolb (bad) stc fbstp push addr16 inc pop lahf imul pop popa and out insb scas scas xchg and pop sarb pop jle cli loopne cmp shlb xor push push in idivb jge cmc out or or fistpll icebp iret xor xor lods int3 rcrb push mov xor js and mov into mov test cld add jmp lea sbb clc and inc add lods data16 das out mov in push cld jmp pop push out cmp xchg cmpsb loop test loope sbb inc mov inc movsl or inc pop jnp or lret and out inc mov mov insl pop jns lahf test mov inc sti rorl adc dec cmc or sbb arpl mov std (bad) adc jno sbb cwtl (bad) xchg fwait mov jl stc daa inc aad ror aam loop adc mov jae xor cmp and mov mov mov call jno insb push scas andl or bound outsb fnstsw mov add or addr16 loope pop lea xor and mov pop les sub ret (bad) dec repz ljmp les xor mov mov dec cmp adc sbb mov loopne dec in adc inc gs xchg cmpsb push cmpsl or insl cmpl xchg mov arpl xor sbb loope lahf add adc pop add mov or mov jne sub imul mov jp std pushf mov sbb insl popa xchg icebp push int3 fildll adc lds and negl out inc stos shrb fwait xchg inc jnp add out es cmp into (bad) pushf mov xor and dec test add xchg xchg sahf divl lahf jb pop je dec mov mov xor mov imul xor subl lahf les push push inc iret pop adc repnz int3 mov cmp or ds (bad) mov sub inc push inc test test call mov add (bad) stos add push ja enter jmp xchg push enter mov popf jae xchg dec mov xchg aam jg loopne fildll fcmovnu dec xchg nop jecxz cmp mov adc cmp and subl repz dec mov in stc (bad) pop shrl lret jecxz loopne add jae sbb stos insb pop fnop dec xorb push cmp pop adc pop sub (bad) mov jg loope outsb sub and loope mov fstpt adc cmpb push sub cmp pop adc adc sbb push pop pop mov cmpsb adc push lods adc in lret stc push mov rcl inc cld pop inc jb adc jmp out aas mov arpl mov inc fdivr repnz sti inc and mov or mov mov int3 ljmp pushf lds jge arpl in pop sbbl fdivs (bad) clc enter pushf sbb inc jl add out mov or add pop (bad) inc xor jo repz icebp cli sbb cmpsl scas pusha xchg jg ret aaa jb xlat xchg imul jg xchg cmp pop fdisi(8087 push dec arpl inc std sarl push out xchg fucom (bad) ljmp out into mov sub mov add movsl inc jl stos jecxz (bad) push das sbb pop das add push rdpmc int xchg inc cmp (bad) enter ja pop xor pop fwait cmc pop dec scas into jno mov add (bad) cltd cld jle (bad) imul mov mov jns dec inc scas xor insl jle or and pop int3 mov inc adc add jg jae jle pop pop push adc dec fnstenv push clc adc add aam mov mov jne dec sub mov xchg xchg insl pop mov test loope subl mov xor jns js lret loope dec xchg push out sub add sbb rcrb xchg xorl jnp dec notl sbb rclb popa cld pop push cmp push pop leave test aam fidivrl mov lahf mov lock movsb adc mov jl xlat pusha test repnz jg xlat test xchg lret cmp addr16 pop mov mov or std fimul data16 js in jmp dec (bad) lahf jnp loope dec out push test ss adc enter jae jl cmc ja sbb (bad) xchg xor jb pop or sub idiv or inc add fs out insb (bad) jne sub inc int dec sub add mov call fisttpll and mov cmp mov jns aam push pop jle (bad) pop mov add (bad) mov sub movsl add pop pushl int3 push sub xor mov rclb xor and push (bad) adc lcall xchg mov push mov aas lods jge xor sti add xchg mov xor or mov dec xchg push inc ret pop icebp push (bad) popf adc push push mov xchg mov and jae scas repz and jae inc out xor repnz cmp push daa adc scas xchg jge mov (bad) mov add xor pop andb cmp movsb push fnstcw fidivl push aad aaa fmuls pop js icebp pop push mov jecxz mov cmp jle leave mov daa divl in ret sub imul cmp dec xchg lds mov sub sbb mov dec sub scas mov stc pusha ret jle (bad) shrl mov insl mov xchg push cmp jle movsb cld pusha cmp cmpsl outsb lahf sbb mov or cmpsb and pop sbb mov clc std push push sub (bad) pop push (bad) in mov and out bound jb popf xchg pop xchg dec pusha jo fs sbb pop or aam ret push dec inc sar ja or sbb mov inc mov cmp and cmp pop jmp mov insl dec mov sbb jno cltd test clc loopne (bad) push jl (bad) hlt jnp arpl sub sbbl cmp add pop add (bad) hlt and or push add jb ret je test hlt or dec (bad) es mov mov mov and sbb ds insl pop cld scas nop scas pusha (bad) aam (bad) sarl push adc push jnp sti in int3 pop xchg jb shrd sbb aam mov adc insl xor or sub xchg sbb sbb out fnsave lds sbb cmpsb push jnp jle rclb push (bad) and lahf test icebp pusha test xchg add push inc fldenv mov lcall and movsb or jae mov pop aas js jb or enter cmc insb dec xor and sbb jecxz or pop enter or xor lock jb mov cmp (bad) sub imul data16 xlat jnp inc mov mov adc mov fidivr (bad) (bad) mov ljmp ficoml mov and call mov ja or mov cmp cs xchg and jnp sbb pop (bad) cmc je and test setl aad pop xchg loope pop jne fldl por xor inc dec jae out push fidiv int3 leave sbb dec mov mov push jo dec mov (bad) xor rcll cmpsb inc dec loop mov push mov push movsb add (bad) lock jge inc pop movsb ss stos adc mov pop test mov mov sub fcoml sub lods pop ret and in mov scas aas xor aaa push into or scas dec inc pop mov (bad) mov or lods add jge pop push ror roll shl xor cli nop insl push add ret pop ss mov jne hlt and lahf inc movsl mov ja leave daa xlat xlat jae xchg imul push arpl (bad) or (bad) cwtl testl jmp jle adc mov shrl sbb pop mov pop scas dec push jne inc mov pop adc jb push fwait outsb mov jecxz mov pop jmp fwait mov ss jle inc xor adc jl add aas in mov cwtl xchg and ljmp mov dec scas xchg mov or sahf loop cmp inc mov mov out adc int3 add sbb pop push andl mov xchg push sbb in mov xlat pop lahf into int3 push lret fcompl dec ret pop enter mov and and fcoms (bad) jp inc out popa nop stos fimull addr16 push repnz cs jb jp fistl rorl out ljmp data16 mov test push inc rolb mov inc lret or xchg ja out mov es pusha mov add movsb fstl sub lret les add pop cli les insb or add imulb std addr16 cmpsb pushf test fsubrl movsl imul imul sub xchg call in outsb inc or cmp cmpsb dec fnstsw xor dec (bad) cmp adc nop pop xchg mov stos xchg inc sbb divl xchg jg cld out jb lret roll xchg lods inc lret push loopne xor cmp mov inc cld negb mov mov push test test jmp add cmp adc fistpll push sbb push inc nop into fldl (bad) js fwait iret jb mov and or daa jmp fisubl (bad) push push lcall push testl imul cmp inc inc fsubrs mov xor sub lret push int3 xchg pop clc push roll dec adc mov or mov rcrb in mov pop (bad) clc ficom shl inc je pop jmp ds cld outsl insb clc addr16 add pop (bad) pushf sub into inc mov hlt mov push (bad) pop fldcw mov arpl mov or push cmp adc movsl rcrb cmpsl (bad) notl cli inc xchg mov cli (bad) xor ljmp shr (bad) call ret insl add jae sub mov xor sub mov ror (bad) xor mov imul or mov out fnstenv jl xchg lcall inc mov bound (bad) mov xchg dec es mov test mov mov xchg sbb cmp pushl mov aam clc (bad) in mov das fisub repz ja lock sbb push inc gs push fwait lea mov out repz and jb loope push or push cmp mov sub test test pusha mov in lds in push pushf scas loopne (bad) arpl nop das ror pop arpl (bad) in scas inc cmovle sahf lea shlb mov xchg xchg jae mov xchg cmp loopne bound mov push xchg mov xor fistl inc nop mov fcom sub loope pop in fnstcw rcrl add dec mov stc (bad) lahf pop pop loopne call lods pop pop pop pop int3 lahf lret jbe aas ljmp test or push xchg xor xchg cmc aaa push lcall dec in sbb je jl mov jne mov xchg xchg xor std jge in outsl lcall ja cmpsb test mov fcomi xor frstor lods or mov jnp inc dec mov stos jnp cmc xchg jbe scas xchg sbb inc fdivrl inc inc loope push cld jl push negb lock mull punpcklwd test adc or sahf (bad) mov push jp out xchg mov data16 je mov mov jne cs or xchg mov ljmp cmova mov cmc push pop out fs sub fld les (bad) cmp fcmovu cmp pop insb adc and aad dec test sub jno addr16 add jns stos or mov insl lret jbe fdivrl (bad) loope add loop arpl sub sbb inc in adc test pop (bad) lret mov and jae jb or jp imul enter mov and cmc (bad) daa out loop sbb xchg ljmp lds and mov incl ret jle mov mov (bad) push out adc fldt or dec mov adc inc arpl outsb repnz cld mov test cs cmp cmp lock out xchg mov ffree (bad) or js add ds jae ret hlt fdivrs xchg mov ss cltd int3 jo add and fildl xchg out cwtl lcall sub repnz xchg pop mov or sbb imul xor xchg (bad) test mov jnp sub mov mov mov inc stos pusha add mov iret jmp or sbb je in repnz mov push fildl in sub pushf inc dec xchg daa mov mov call adcl addr16 jae test insb out dec push jl daa sbb pop (bad) pop or sub orb cmpsb idivb xchg ljmp hlt mov mov adc rol ret pop fisttpl mov cmp push rcrl (bad) loope mov mov jbe adc aam call daa and mov nop mov lcall inc rclb sbb adc dec xor pop mov push fs sub xor cs push lods ss xor push push lret test xor cs adc out dec cmpsl daa into loopne fmul test fsubrl jbe loopne fsubrl pop gs and lock ret or (bad) lds fbstp lock jne jae xchg mov lds aam push iret cmp pop xor aam xchg mov ljmp xor cmp sbb push add addr16 xor imul pushf fisub add push lock pop std mov mov (bad) enter add mov mov add mov adc cwtl das mov sbb sbbl inc mov out loop cli iret clc or sub das fisttpl xchg add jmp (bad) xor mov add add ds movsb je pop pop mov xchg das mov fs jae rcrl sub dec jp addr16 and dec sbb testb call mov inc jecxz push add cmpsb dec jge test fs or cmp ret fsubl sarl and pop mov push leave sbb out adc mov xchg outsb cmpsb ret pop mov xchg movb sar loope cli add fwait iret lret aas xchg push dec cmc popf imul sub in cmpl je mov fildll nop rcll cld mov popa jmp fnsave xchg dec pop pop add jb shrl jnp dec out ret arpl sbb ss loop,pn mov lock icebp mov imul ret in mov push xor ja sbb pop mov fcomp pop mov xchg sbb js divb lea inc imul ljmp sbb sbb sbb mov aad xor lods sub dec inc cmp and sub xlat xchg pop mov out sbb xchg in adc jecxz fbld pusha ja call mov out or adc js inc subl loop gs movsb mov es fistpll ret pop sbb mov test xchg scas testl jle xchg aad pop incb pop imul mov xor sub mov mov cmpl pop int int3 or adc pushf mov loopne adc loopne push mov push pop inc push xchg pushf mov lret hlt push repz sbbl or call add cmpsl pop lods jb push test insb sbb les es and mov cltd cmpsb sbb lock (bad) icebp xor add incb fimull sarb mov jne sub idiv sbb aas mov sbb xchg or push adc mov gs jmp movsl push xor cmpb add xchg jg add es push arpl out ficom mov loopne inc or pop pop lods fdivr cwtl pop data16 arpl lea outsb xlat stos roll aad xchg and jne cmp jo ret cmp push or xchg test cmp les sbb mov pop inc jmp cmp lds rcrb mov xchg lcall insb xchg aas mov mov sbb add insl jmp cmp sub fs dec and or roll jl mov daa sbb (bad) subb (bad) jbe repz in in in in mov sub outsl pop xchg das outsl daa mov shlb ja cmp mov or dec jge icebp xchg jg out xchg add sahf xchg jecxz out push dec mov ja sahf insb scas jmp (bad) cmpsl ds mov push aad movsl sbb mov pusha scas xchg das adc mov pop sarb and in pop mov (bad) lds mov pop mov lahf add mov pop pop stc insb xor out jp in xchg adc loopne jmp fisubl out xchg xchg pop mov stos pop clc and pop or addb subl ror loopne vmovups pop inc ljmp sub out cmp fsts sub jno stc sub mov sbb ret push ss iret popa js add loope repnz pusha bound add test ret testl sahf in outsb pop lods or ret mov dec lods mov pop ret pop decb jle pop jg imul mov mov int3 or cltd lods inc pop sbb fs mov mov xchg push mov sbb push push cmp ss pop insl ds sub (bad) and inc ds imul pop sbb xchg enter sbb aam mov es idivb mov push mov clc xchg mov sbb push cmp jl or jo cli pop fcoml mov dec jo add int3 loop hlt cld push clc loopne fimull sbb add mov add mov mov or adc hlt jo and inc fnstcw dec stos loope loop adc (bad) fsubl pop nop xor push pushf fimull push out andl cmp leave fisub xor mov sub mov mov out ret and adc std jne mov out push cmpsb lcall push push shrl xor add rclb outsl push ret jecxz add imul xchg add sub je (bad) xchg sbb repz lds xor pop (bad) and ja lds or das lcall jae movsl rcrb inc scas adc bsf pop sbb and addb jge js iret daa stc and loop fs sub push test clc jb xchg xor xorl fsubrl imul lcall les push or out or (bad) jge cmp mov mov stc xchg cmpsl sahf push mov jecxz inc je test test movsb cld cmp fildl inc xchg clc mov pusha je add xchg inc (bad) (bad) sti jg mov in mov push fmull lods mov or pop ja rcr pop dec sbb cmp (bad) mov xchg dec mov jp sbb xchg xchg fsts cld ud2 adc insl fisub mov sbb in sahf (bad) std jmp pop adc jbe mov push call fstpt clc add xlat lret mov pop je add xchg add xchg add pop jnp dec stos movsl jp push mov enter mov loopne or cmpsb mov add push hlt push mov pusha or test sti xor ror iret out cmp and mov aad mul stos lods sbb xchg daa loopne xor pop adc fbstp sbb cld fucom shl stos pushf mov sbb lock cmp insl lahf sbb xor pusha add ljmp inc dec ret xchg (bad) cmp sbb lea or push mov jmp mov adc repnz jae mov test out or cmp sbb sar cmpsb in push stc mov call sbb bound add adc (bad) cs or dec adc les mov dec cmp cmp repnz mov add jp mov pop dec mov push lcall jg cli mov jmp inc adc imul (bad) push cmp test repnz sub mov mov dec adc jnp add leave jmp sti daa xchg pop xor aaa rcrl and dec xchg fild push fwait mov (bad) xor adc dec or mov ret cmc mov xor aaa mov clc notl addr16 inc dec dec and stc out ret aaa pop lret ret test push mov mov dec lret fnstsw in and and roll ljmp loope (bad) and jge inc imul inc mov jns sub pop mov cmpsl xor (bad) xor (bad) nop xchg mov jp jg stos push push push mov inc out popa sub daa sahf fistp pop dec outsb pop inc lea ficom jmp xor inc (bad) gs in xor ret stos popa stc sbbb xor mov in add adc fcoml or or jne or test test ficom movb in lahf (bad) jg fcoms jno jecxz dec cmp addr16 addr16 lods sub dec in cld mov pop loope jno hlt sub xor test adc ljmp inc add lret (bad) testb sbb jns loopne test jp int push out add in lret test and inc fnstenv jmp sbb adc pop push cltd outsl dec in or mov adc test call frstor pop lods push jge and jecxz mov js outsl or repnz shlb insl cmp stc loop sbb adc xchg cmp xor push fstps inc jmp mov ss ret cs fstpt movsb pushf adc aaa loop or xchg jns sbb and fwait push sbb push aad add (bad) xor push movl mov addb ficoml sarb or repnz pop push pop push dec push test sbb rcrl out inc cld lods fucom add jge adc push pushf rcr xchg push adc cmc fs (bad) mov int or pop adcl aas inc mov cwtl dec in mov cmc sti mov mov mov push mov out xor pop sbb dec out inc js fcoms out dec push lcall imul pop in sbb or out cmp (bad) in (bad) out xchg pop mov testl jmp jle popa cltd sbb xlat add mov sub fxch or sarl cmpsl dec mov jecxz cs pop jno bound aas or out cmp lahf xchg add mov sbb icebp fdiv mov cwtl popf jl fwait outsb mov mov jle mov xor lcall pop pop popa adc (bad) frstor out add scas int3 lods hlt mov mov jno sbb in mov inc jmp sub and inc out and jbe push in mov inc mov adc fnstcw push xor mov or mov sbbb mov push inc inc jp xchg js iret into (bad) pushf push out inc sub popa adc pop cmp (bad) in in scas add sub ja dec jle ret jmp pusha mov jbe (bad) mov out inc adc shrl clc cwtl and lods mov arpl jl lret and fcmovnbe mov addl push jmp push xor mov sbb push iret push push (bad) fstpt adc jns sbb enter hlt cmp adc pop in cltd add aaa push and mov fildl and pop mov ret (bad) jo andb and hlt mov xchg xor or nop xchg and xchg stos mov mov inc stos jae jg insb pop ljmp ljmp imul fwait test je mov xchg movsb or inc push push or lahf pop mov fs ficom aad jne dec sub and and sbb lea xchg clc int mov ret sarl mov cmc sub insb aam dec mov fsub jno jae xor into lods mov fcompl mov jne (bad) mov and daa js andb inc xchg ret rorb sub mull sbb push mov (bad) pop sbb aaa rorl sub xchg (bad) cwtl pusha dec xchg aas dec inc je in xchg fxch adc sarl pop pop leave xor ja testb (bad) (bad) aam sub addl xchg imul dec dec pop lock pushf js rcll data16 dec stos pop mov dec cwtl test xor cld xchg adc les leave inc je fs jno loope (bad) hlt repz rcrb iret decl and ss dec cmpsb dec push test insl cltd mov or mov cmpsb mov dec and movsb inc es (bad) (bad) int3 shrl push pop aam lds std mov sbb test in gs or clc ljmp inc push xchg (bad) fild lret insl jle adc movsb mov inc or lret sbb rclb inc xor loopne lea aam (bad) mov test mov je mov (bad) lret andl cmpsl xchg stos xchg xchg js jmp cmc cmp call and xchg lds decl dec jo jo sub nop jnp xchg dec stc movsl jns xchg jns pop out pop pushf add cmp xor mov sarl add sahf (bad) ljmp scas stc mov (bad) push xchg sub xchg push inc (bad) cmp push mov pop add enter cmp repnz fistpl xchg dec or or (bad) or jno add movsb inc push es in les ror xchg cltd inc fdivrl rcl xchg imul xor outsl jmp cwtl and imul xchg mov outsl out (bad) ljmp adc xchg mov sub adc ljmp push dec push mov inc (bad) mov cmp add fdiv xchg mov pop cmp sbb test mov xchg dec in aaa test lret adc pop sbb test dec stos mov and jle ds repz pusha pop lea push and in pushw push cmp jnp dec adc out jo (bad) push mov frstor cmp fistl sub imulb cmc popf iret cmp and test fild push mov xlat gs cli sbb (bad) cmp imul push pop into inc jp jmp adc in sarl push pop inc push xor out repz int3 sbb jne notb inc mov loop lret (bad) dec lea in push cld pop pop addb imul movsl cmp cld pop rclb inc out frstor fstl (bad) and (bad) repz mov jns faddl daa scas dec arpl xor jo sbb incl push les int xchg cmpsb lods out out in push int sti rcr in repz in imulb das add and mov sti mov mov popl subl ret lahf ret fimull shrb push ss cmp mov or ret push loopne rorl jne clc adc popf rcr imul (bad) inc cltd and gs jecxz sbb rcrb outsl add jp mov idiv dec dec mull push loop test or adc aaa (bad) negb xchg jo jae fdivrp icebp inc and add fwait xor push mov mov fsubs or pusha cmp insl adc loopne cmpsb cmpsb push repz xor push ss sti pop jp out xchg mov sub inc jb dec into jno inc mov inc sub adc js cmp into adc imul (bad) addr16 test dec jg test add mov add mov (bad) rclb inc hlt aad mov es mov cmovb hlt shrb mov jle mov shrl and (bad) leave mov jle sahf sub xor js lahf dec and (bad) icebp addr16 xchg xchg in (bad) add cmpsb out fdivs inc sub push dec xor jmp sub cmp inc or mov xchg mov adc and popa pop into jmp cli enter mov std mov lds pop inc out sub sub mov and scas addr16 push xchg insl pop test lds mov arpl in inc pop jg push popa in fstpt lret sub dec es out sub ret jge or mov push fwait lock sbb sbb xchg fwait js jmp fdivp push imul pushf (bad) aad adc imul mov push gs jecxz sbb outsl mov push data16 clc negb push (bad) dec sbb sarl data16 mov cs sarb and sahf movsl ss add add cmp and enter lahf bound xchg or push push mov ds fcmovnb sub or sbb nop jns pop adc jbe pop dec push das and out and daa mov out pop je and imul pop mov xor and xor out mov and (bad) cmp adc mov mov mov fwait xchg pop sub data16 jg sub mov pushf dec loopne adc les in xor sub aaa jle cmp jo and lahf movsl sub xchg rorb pushf cmp in xchg jns jae mov pop xchg add int xchg nop cwtl and pop lods sbb pop test mov mov (bad) das push loope jno xor in (bad) and sbb pop stos loopne pushf pop mov cld xor dec mov sub leave adc xchg arpl into add sbb sub data16 cmpsl jno fs int dec outsl and push ficomp out fdivs outsb fiadd ja fprem1 stc inc stc std xchg and cli bound xchg dec (bad) mul push mov mov in movsb enter aas aam scas (bad) xor adc je in (bad) pop push std je jnp fmuls push mov dec lock xor nop push sub lret movsl fnstsw fs add lahf inc fisubl fldenv scas inc cmp adc xchg cmp std or inc jle lahf mov je outsl cmp in xchg jmp sub ss sarb lds aam mov std jge int out mov aas mov pop ljmp xlat mov subb xor loopne mov lret pop pusha jno ss lds mov jno pop mov adc and divb nop and lret xor mov sbb push jae cmc push sahf outsb adc add cmp (bad) dec dec pop nop mov dec movb cs into cmp dec test int3 adc sub out inc inc shll mov (bad) out push mov pop xor push xchg (bad) std cmc js data16 push or cli mov movsl repz sarl pop cmp mov ret push lcall cld jb je sbb clc stc push push maskmovq negl cwtl fisubr iret std xchg int mov add gs int mov dec xor popa push mov leave sbb or fidiv (bad) jbe xchg int3 dec jo out add inc pop cld fcmovnb sti loopne pop loope xchg add rcrl frstor inc fnstenv push jl test sub add mov sbb lahf (bad) dec enter and test lahf push mov inc push dec jne es and rcr jno,pn icebp push lret movsl jns or inc scas jle mov mov dec sbb cli pop lds pop inc fidivl f2xm1 adc inc popa mov cmp add mov (bad) loope lcall push cmp mov test xchg repnz cmp cmc ficomp aad dec movq jnp (bad) dec lods xchg (bad) sahf mov lret mov dec jno mov mov loopne push imul lds fmull test fwait pop sub (bad) ffreep pop cmpsl enter outsl pop out fildl cmc xor xor sti js aaa pop (bad) mov xorl or lcall jle (bad) jmp mov xchg cmpsb fwait clc or (bad) jbe add lea leave lcall mov xchg jbe pop addr16 insl out cmp xchg stos test inc jae mov ret push inc mov push fdivs inc out xor aam enter pop pop cmp jno mov jb out sahf in pop jb and cli dec (bad) jmp jne sbb popf aas jp push sbb sub sub movsb cmp imul add lds jecxz jecxz mov fcoml mov es rol sbb inc ljmp add es js lds lods cmpsb rcrl insb push sub mov mov xchg add adc (bad) xor add mov inc mov fwait repz jbe fcompl or andl lds and mov lcall ret inc and imul push mov dec and sub or sub jp jne push ficompl rclb push bound and push int3 mov ja and jmp push sbb in mov loop adcb fstpt js mov xor mov pop sbb gs mov and push xchg jg lcall and sub movsb negl dec icebp sbb jbe mov test sbb arpl mov mov mov jne add pop lds std pop inc andl out sbb imul mov (bad) fimul and sub xor pop pop cltd jmp xchg out insb push bound cmpsl and mov das out pop in cs iret jg xchg push mov push inc and xchg bound hlt push mov scas cmpsb fstpt dec mov outsb push dec or add xchg xchg in cmc push aas or addb imul add lea push ret out or rcll movl inc add fcmove movsl icebp orl xor fstpt dec mov jmp xlat fcomps mov adc ret xchg add (bad) inc insb movsb scas in jg mov js pop stos subl nop in sbb test in int3 into lds fdivrs out or pushf fs mov rorl frstor cmp dec adc pusha add cmpsb or lcall or dec push insb mov loope inc xor adc jno stos iret nop adc sub pop lret jecxz xchg mov daa mov sub mov mov push mov (bad) fs mov push jne dec arpl aas popa (bad) in lcall pop xor in sbb in sbb cmc mov add cli rcrl iret in and out mov hlt sbb cmp and ret into mov mov gs push movsl sub jmp mov inc sbb inc negl xchg das sub stc pop or imul sahf pop ret jmp pusha fs or add (bad) hlt jge outsl jmp sub mov mov sub jp das outsb jmp sbb lret test mov arpl jns sbb xchg xchg dec shl inc add push adc pop popa (bad) pop fcmovnbe adc mov cltd mov cmp or or outsb push aad pop mov daa test movsl mov adc scas fadds add ret jl hlt adc int iret mov cmpsl xchg mov lcall push push mov (bad) shr push es mov std fcoms dec jo adc in add push imul jno xor sbb jo loopne dec and xor jle mov pushf push mov push jne lea les sbb pop adc pop xor call aam fs jle mov (bad) not pop fbld flds sub sbb adc push mov sub inc or mov sbbl lahf lret out in jbe mov pusha fs sub mov arpl and je cwtl xchg jmp cmc (bad) in dec mov add repz inc jns repz jg fldcw stc pusha add fimul push dec sbb pop divl lock jp mov out in add repnz pop or xor nop or cmp fincstp ja dec mov mov ss jbe leave hlt sub fcomip in push testl sub lcall push mov jb mov adc push pop cmpsl xchg mov pop and ds cmp and repnz push (bad) or mov xor and dec fsts xchg jbe sub dec lock enter add iret fisubl jg fbstp dec mov test imul sbb lret out xchg fmull push enter inc shrl dec jne pusha rorb xor out shll cmp popf out cs or in dec adc xchg push cld mov and leave push and or pusha insb in stos test mov dec sbb mov add dec test leave jbe aaa mov jle sbb insl lret int jb xor hlt or pop adc ret cmc out pushf add sub mov lea lcall and dec cmp in pop repnz fsubrl std jle aas test and mov out aas push cld dec repnz lret in or aaa xchg fisttpl xchg daa dec xorb call add or push add fmuls stc repnz (bad) mov mov out pop jb jmp cmp mov decb enter mov push inc cmp sbb loop out scas add xor xor cld cmp ret cmpb icebp mulb jge mov add imul (bad) lret mov pop or pop push mov jmp ret push sub push jp int jb push bound (bad) or jne faddl lret decb push ror push sbbb in call pop and roll mov sbb sbb mov fcompl lcall data16 aam sub lahf and jnp xchg notl es mov jae mov mov mov xor mov call out nop ja (bad) ss sbb scas cmc pop dec sbb ficompl pop xlat je cmpsl or out jecxz les dec mov lcall outsb push stc xchg sub (bad) mov data16 imul shlb clc lahf scas sbb rclb loopne pusha push and push les adc out jl adc xchg dec push aaa leave inc adc pop push pop (bad) lret xor aas stos dec cmp cld out mov xlat mov mov pushf inc mov ljmp pop or mov lea mov pop fimull insb (bad) mov mov ror fwait jecxz cmp out call mov ja sub mov aam inc pop and jl scas mov adc (bad) jno das lods sub call inc fs pop push mov cltd push jmp (bad) sbb mov sahf push fild ret stos xor inc scas jg jbe rorl test ret jp add dec ficom js pop fwait popa mov sbb shlb pop in fs lret or xor mov jg pop inc int pop xchg add icebp push xor daa clc enter cmp outsl pushf dec mov xchg mov adc mov and xchg outsb stc fidivrl pusha push movsl mov mov add ret adc xor int mov movsw pusha lds sbb aad fnsave sti cwtl dec jno sub or and (bad) aam cltd les pushf fs repnz sahf sbb cwtl (bad) fwait dec je mov rorl sbb aam xor add xchg adc dec dec fnsave es das fstpt (bad) ss dec fs xor imul ret pop scas ss sub mov mov push fimul and and inc rolb jle xor dec sbb ret or lods or sub (bad) cmpsb rorb call xchg mov bound movsl pop dec inc and dec inc sub push push adc dec xchg jle cld lods inc cmpsl mov adc jmp cmc fprem1 mov mov add mov push dec cmpsl mov out pop jno xchg pop push xchg les xchg add dec jne hlt inc ret enter ljmp lea xorl or clc (bad) mov clc add adc aad fstpl loopne push xchg xchg std fcmovnu je leave push arpl push repnz dec xchg movsl cmp inc add (bad) lret xchg cld pop mov dec (bad) std mov bound pop stc add ja ret fildl push push mov push and (bad) test jecxz out aad xor sub sahf mov jno cmp pop imul mov jbe dec mov and and push push and dec xchg pop outsb add mov or push fsubl mov or out and shrb sbb insl sbb xchg rcrb add (bad) fs lods rol addr16 adc loop in xchg leave add clc fs addb mov fildl push rclb and adc push int test scas inc xchg test test clc pop in mov aam ficoml ret es mov adc js jae mov int3 mov jmp xchg pop in xchg insb popf lret push or jge jle sub sub int out test dec inc add cmp add (bad) fstpt iret xchg pusha ret fsubr add ret mov out call cmpl les ficomp pop jg jne and xchg icebp xchg cwtl stos aad fdivrs xchg cmp in mov idivl add xchg addr16 and mov jne fcomp jnp lods mov ljmp push mov (bad) divb mov into jg pop pop addl nop jmp xchg xchg jnp xor xorb insb dec icebp inc sahf ret scas xchg dec pop movsl (bad) popf mov mov mov push lret dec add pop sub push and arpl xlat pop loope (bad) (bad) stos out jp test loopne ja and push dec or or xor xor mov and (bad) idivb (bad) sti sbb adc jns lcall pop out ljmp (bad) into test icebp bound jo xchg repnz out stos (bad) (bad) mov cmp in and dec punpckldq mov pop rol stos int stos cmpsl xchg cld mov mov inc mov subl cld mov lret sbb (bad) (bad) cwtl xchg or push popa mov aad ss std cmpsl sub sub mov mov sbbl sbb sti push mov js insb (bad) pop adc adc (bad) push sbb sub cld and mov repz adc jmp push dec sti pusha mov data16 mov push xor insl add aad fcmovne cs (bad) or mov jb lds xor (bad) insb hlt mov add jg jo out push (bad) mov lea xchg maxps (bad) notb push sub pop repnz scas sti lods out push mov pop jle (bad) or leave pop enter mov push mov nop gs enter mov insl jo push aad cmpsl scas js inc lock sbb insb jo cmp pop inc inc push sbb cld xchg and or movsl cmp cmp or ret mov pop pop jg xchg lds adc int out lods sub cmp dec sub int3 aad pop outsb push mov or pop add aas cmp lods adc sbb lock fstpl add xchg xchg addr16 push mov sub rorb sahf mov ror push xlat jmp std push out cli mov push sarb in out roll xorl rclb cmp int dec scas xchg sub outsl repz ret ja into imul (bad) call jge cmp sub mov test add jb fs mov mov jbe xchg add cli and and les and scas dec mov arpl inc xor mov mov cmpsb sub jl (bad) fs fwait rcrl divb sbb xor push sahf cmc add test out mov fcoms insb push xchg cmpl sub jl ficompl jb ret in popf scas push stc test mov add repnz xlat fldenv clc sub bound adc (bad) cltd pusha inc adc pop sbb adc adc mov adc cmp jae out js pop into sub (bad) out call lret pop xchg (bad) arpl mov cli lahf adc roll js inc pop xor xor jbe or incl incl into ljmp loopne push and cmp call (bad) je mov dec inc fwait jle aaa sub dec popa dec xchg (bad) xor adc popf sbb jbe sbb sub fs cmpsl jbe push push stos inc lret sbb mov mov notl sub test stc pop pop or mov or xchg jecxz dec fldl fildll jg lods bound push xor sub outsb push jns push or xchg push xchg ss jb and xchg shlb jb sub xor (bad) stc xor cmp and jle,pn inc loope fdivrl xchg jno sbb shlb sbb jo dec cmp inc dec stos test and decl cltd std adc jmp test push add rolb pop iret (bad) dec rcl cmpsl addr16 iret pop mov pop jl cli dec add add mov lods jo mov in push xchg xor mov es mov ret mov sbb je xchg cltd push nop int3 mov stos int3 pop call jmp pop xchg mov les xchg nop dec call and cli fwait push jmp pop popf jp or add pop add test xor jne and cmpsb jae jecxz pushf lahf xlat mov bound sbb mov xor push push lret data16 les dec add xor or das stos data16 in mov mov push mov jg ret jl fsts call and xchg adc lock ret fsubp in xor dec or outsb xchg dec and and aad mov in push mov dec out data16 scas test sarb jbe cmp ret cmpsb push dec cwtl mov xor jns ret movsl sbb aas mov inc cli mov mov jnp jns push sbb sti adc jge pushf sub pop jnp push inc dec clc dec cmp aam repz lret xlat stos ret lret jge add fimull ljmp fcompl adc and sbb insl mov cmp mov cmc shl cmp push ja std insb sbb pop mov inc ror xchg mov aad cld jno adc push sbb (bad) xor fadds popa (bad) scas xorl xorl mov imul pop lret and inc mov fmuls mov sbb inc add repnz out insb mov xchg into data16 jge or and jo cmp ds pop andb sti push mov scas inc inc or adc mov push xor stos stos leave cmp jmp pop dec loopne (bad) jle xchg ficompl cmpsb pop popa out mov aaa rcl sbb jb sbbb gs mov pop push push sub pushf mov cwtl das push jnp jecxz push daa pop lea add push adc jmp xchg jo cltd xor push push push orb mov mov cld insl push arpl outsl cmp push push pop xor enter inc movsb pop or xor inc ficompl sbb icebp push xor out lods or or adc adc (bad) (bad) sbb sbb mov mov xor leave mov dec adc adc test clc bound test cmpsb (bad) mov push popa fildll orl cmp in int3 pop fcmovnu cltd push and fistp scas test push test dec icebp ja add pop mov js adc orl std push mov or and lcall fsts fs sbb xlat push cs lock adc xchg insl fdivrl in add rcll cmp mov push lds add inc fimul lock sub sbb cwtl into (bad) imull xor cltd push xchg jmp mov test jge cmp push das jmp inc fwait popa dec cs jge cmpsl mov push movb sti mov adcb in loopne cmpsb add cmpsl fcoms mov hlt out stos adc insb inc lret and test testb sbb test jp (bad) or lret jns lea aam lea lret js repnz xor in aad pop sub or pop loop cmc jle call imul pop out mov mov rclb gs pop mov les xchg pop sub mov roll bound lods sti in sub scas push mov xor dec or mov jmp lret mov push inc mov fs mov mov roll repz mov adc aam cmp call or mov testl push repz jae insl ss loopne xchg jbe jmp mov sti mov leave xchg movsb or loopne pusha rorl ss inc xchg cs fiadd xor icebp test mov or or push les out daa lds lcall or mov mov aad or pop adc inc xchg inc out xchg out push pushf fisttp pop add fwait dec ret loop and jns inc mov jle ret dec sub dec (bad) cmp dec test addr16 pop mov jae push mov lock pusha mov or arpl inc hlt clc xchg cwtl fwait mov es les (bad) pop test ja jns hlt and lea xchg arpl cmp pop or call daa js lea sub imul mov ljmp ljmp add jo adc movsb jns mov add add leave mov add (bad) test jae jg inc pop mov cli or loopw int push int and push mov insb dec mov mov bound add and mov cmc sahf sub mov into adc lds cmp mov xchg xchg or add and push movsl lods pop and cmp cmp gs cld cmp sbb and cltd (bad) std dec adc xchg and or arpl jo mov sbb sub xchg jle imul or sbb dec test xchg push gs nop push test dec iret cld push (bad) push test loope ljmp push push mov push test sub outsb lock test (bad) lods lret dec ret fbstp fwait aas jne jns mov (bad) xor int shrb sub cmp (bad) int in test and inc push pop test cmp mov in fdivrs (bad) dec mov je fcompl fmuls mov icebp and mov out jo popf rolb scas pop ja shl xchg xchg xor das dec jae std int jnp push popa in or ss stos pop xorl das addr16 or mov scas inc leavew loop int3 lock cmc mov aam cmpsl inc cli (bad) xor rclb xchg cld jne popa jno aad je ss std icebp mov inc xchg int jle add inc addl inc int or outsl mov cmpxchg and andl push push cmp push inc push insb repz outsl lods cld add cli leave rcll inc xor sbb sbb adc test add sub test out adc sub cs fisttpl push cmpsb out insl cmpsb or jge sti jp or and jae in xchg mov sbb add sbb repnz out call aas sbb sub cmp or in lods inc mov jnp mov push xlat push (bad) fstl push mov or sarl clc ret stc sbb imul loope or lock bound (bad) cld in or popf cmp int3 jecxz icebp jle aam sub rorb shlb ret or mov push jo and or lock or sub push (bad) jo mov xor push mov vshufps jmp mov mov cltd out pop fildll jg adc jo cli or jne xchg or mov add mov xchg cmpsb es jnp add add (bad) hlt orl mov ret sub and add test adc cmp aad out mov iret inc or adc loop sub xor pop mov sbb in mov loope xor xchg ror test and outsb mov jle outsl sbb sbb ss (bad) fidivl pushf (bad) popa jge and test push add mov fst or daa cmc push (bad) mov inc mov xchg push jp (bad) sub jge fsubrp cwtl ljmp mov popa mov cmp cld test jo push clc shrl xor pop (bad) cld and aas movsl mov jle pop dec or push je bound or cmc jno dec iret aad mov mov lds leave mov mov loope outsb rcrb mov jne mov scas repnz and rorb cltd inc mov out shll dec lock sti cmc jns inc mov les outsb addr16 orl mov stos mov (bad) sbb fmuls dec add jg stos adc or ljmp add (bad) push mov adcl mov push mov jae jae and add enter jnp fsubrl mov popf leave in in xchg cwtl aas stc add (bad) popa xor fistpl andw aas out push add out in je mov iret pop and add repnz into xlat in pop incb add xchg pop out stos ljmp jae push in test adc inc in mov lcall in jmp in sub push cmp imul in lahf jo or sub or cltd repz inc pusha mov jnp mov pop sbb add divl leave xor pop pop sub addr16 dec dec movsl mov in sbb pop popa mov movsl fwait jnp cmc in ja fs add loopne rorl pop mov pop mov xchg mov dec iret int and ret or sbb inc add mov cmp cmp arpl scas push mov and in push cmp cmovnp mov fdivl sbb jl lods add dec push inc repnz mov cli and cmpsb sbb xor stos adc adc cld add push push and jecxz lds xorl inc xor (bad) cli lret and (bad) popa imul cs inc call (bad) int pop xor mov mov lahf out add in scas xorb fwait mov popf repnz insl add jmp cmp ljmp rolb (bad) xchg std jmp repz enter in cmpsl cmp pmaxsw sbb int3 inc push loope sahf cmpsb fcomp aad arpl jge pop and mov sbb stos lcall adc lret push ret add testb enter sbb adc jl push inc pusha pop dec and jp in jbe in ror out push and jno insl push mov out xchg jp hlt fisubrl and pop outsl lods pop mov sbb xchg jle cs movsb call out sub sbb dec cli pusha add cli js lods int mov data16 leave or pop lods scas dec loopne pop inc fstpl std xchg pop sarb data16 sub call dec clc (bad) aas in mov add mov jae test mov mov xchg push pop fcomps fstp fdivrs pop jno rcll (bad) mov (bad) xchg and cmpsb xchg imul sub pop je scas inc xor or fidiv jno vcvtps2dq arpl lret out add mov dec das in pop popf pop test stc xchg sub sub and inc dec stos jecxz mov pop or repnz mov xor pop test adc xchg inc mov cmpsl jg fs out bnd mov mov cmp cld lds imul sahf std leave in pop (bad) cmp lods das xor (bad) xchg rorl inc (bad) pop call shlb rep ljmp cmpsl jnp or bound enter sub aaa lret and mov mov jo xchg and dec jno mov dec add and je mov dec decl mov cmpsb aaa mov pop rep xchg xchg xor (bad) out adc out fldenv ljmp loop jnp mov push outsl and ja sbb push add jo pop orb gs outsb mov out cmc xchg dec cmp das mov xor adc cwtl pop jae aas hlt or cwtl jl jno nop mov mov fwait stc inc dec jbe cld adcl push mov das jae loop stc sub pop fisubr and out shlb das sbb int3 push jno pop pop rcrl mov loop outsl dec stos xor jmp xlat rcl adc cmp mov push mov xchg pushf push ss push addr16 push dec inc jmp into fsubrs repnz cmp pop jbe mull and mov and or rorb into xor cmpsb or in mov mov mov and xor movsl fwait xor cwtl or daa test sub popa adc xchg les test mov clc push and inc in mov xor (bad) mov or fbstp adc imul mov daa xchg rcl idivb (bad) cmp xchg fdivrl pop dec (bad) ss lock notl mull xchg sbb cmp or fsub sub xchg test (bad) rorl cmp mov mov ficom xchg mov out cmp mov jne lcall push into fist pusha mov faddp out popa xchg xor inc sub xchg and in fsubl outsl mov adc cwtl fistl push ljmp add xor mov mov test jno jmp xor push int adc mov aad mov add xchg gs xor add ds fs cmp push pusha push popa jns jno sub pusha cmpsl insb scas je push test or push rorb (bad) sub int3 push mov rorl push push mov or push push arpl mov pop xchg inc pop flds das add fisttpll xchg add enter sub (bad) sbb sub mov dec push rcr pop (bad) in pop mov pop xchg repnz mov (bad) outsb rcrl lock test mov ret sbb jnp lods xchg test cltd js sub mov jnp int jmp icebp push sub and pop leave pusha out xchg xlat adc xor lods mov inc inc inc imul fisub enter mov shrl ror mov pop in dec push stos out loopne mov mov lcall int3 sub aaa fcmovbe repz lods mov adc mov lock inc and sub sbb xchg int3 mov aas aad outsb fs test shr movsb push sbb jmp bound (bad) xor jge or push std std and mov mov push adc mov jno rclb mov fist dec lret stos (bad) sub jecxz mov inc inc rcll (bad) mov xor xor (bad) dec mov xor push sbb fldcw inc sub mov jns or jnp loop push mov arpl dec fmuls int3 es cmpsb in loopne add (bad) dec xchg dec imul push adc aaa aas jbe pop jo mov in add test cmp sarl cmc loope jp je lock dec jmp out fcmove (bad) testb push das imul or add pop push mov cmp outsb dec xchg mov sbb (bad) adc mov sbb push insb jns push stos mov lds cs mov cli cs adc mov in sbb cmpsb lds lahf sbb sar mov int test dec dec and fbld cmovns clc aam jg mov lds mov loopne (bad) sub ja sub (bad) in popa jecxz (bad) enter jmp sbb mov mov push arpl jge repnz xchg pushf ss mov std inc fldcw les mov das cmp iret xchg data16 jmp inc mov out (bad) xchg mov inc mov dec cmpsl js popa cmc mov pop test adc pop ret pop orl data16 mov leave loope inc out xor mov loopne stos mov (bad) ret push adc pop loopne sbb mov fstps mov in rcl jo sbb adc push rorl sbbb xchg xchg mov jl call mov mov mov and xor scas adc test inc add adc fs std ja sbb jecxz imul lods lock stos xor inc mov repnz test adc xchg dec or pop cs lret add adc push je lcall mov and cld inc fwait lock pop (bad) xor mov (bad) aad (bad) mov loope shll xor or inc jo clc ljmp jae subl xchg dec fbld mov mov mov mov mov sbb (bad) xchg lret xchg aad sbb mov and and jns sub test lds add cmc call cmc comiss out ret rcrb fadd fistl test out test pop dec xlat or addl adc js ss xchg mov mov mov mov xor in sub add cmp loope jmp pop movsl mov fisttpl pop (bad) jnp inc ret adcl push in scas mov dec sar pushf rcrb pop adc pop in lods dec add hlt cli mov (bad) lret mov fsubl push repnz sbbl rolb dec xchg inc fucom shl pop push lahf jno pop pop rclb xor int cmp cmp jne xor (bad) mov jns pop cli sbb xor mov mov int or je sub jmp popf orl incl fwait rclb or test clc pushf lret scas mov add daa sbb int3 inc out and xchg in lods and mull popa xor lds fwait pop pop dec pop mov pop mov sbb stos loope dec arpl jg movsb mov and (bad) mov mov xlat ljmp sbb in pop call mov sahf ficompl xor mov stos mov test outsl loope mov ja dec adc call cwtl iret dec into and (bad) jg mov xor pop jns imul push shll ja (bad) mov push rcl js push pop js nop aad or jbe push ss gs insb shll mov xchg das lea pop addl mov mov loope sbb jb les xor mov fisttp repnz ret imul imul and (bad) mov xchg mov gs jb mov sbb (bad) loopne xor fdivl pusha mov fisubrl cmp fwait push lods jg fld in popf mov imull pop push pop insb popf push lock jne in push pop adc sub xor out mov inc gs mov xor or mov adc mov into or adc mov int3 jo lcall je (bad) fimul jge or cmp in negb cltd xchg stos call les inc xchg cmp (bad) in push cmp mov cmp loope xchg cmp adc xor cmp in dec (bad) jmp stc sub xchg out add sbb jbe cmp jno repz mov and add cli rorb jno imul and or outsl mov outsl xchg push loop push imul push lahf or in lds mov xor or dec cmpsb sub das push mov jno aad sti dec js clc mov insl mull (bad) push test mov insb xchg hlt fwait loopne mov add mov inc pushf dec adc sahf dec or sbb pushf (bad) mov vpsllw pop xchg (bad) aad mov cwtl cmp pop jp mov insl pop xchg jge push adc jecxz test out mov pop sub cli popf push call xlat imul insb adc jns clc push xchg and icebp fwait and jns je stos cld and les and movsl repz aaa xchg push bound lods loop mov enter and es je sti test push adc fcoml (bad) push mov imul ret pop fcom movsb aad cmp mov and xor insb sbb cmp (bad) adc aad and sahf pop (bad) outsb movsl (bad) sub sbb jmp sarl (bad) loope popf lahf popf call cmpsl pop inc sub bound aas jno mov mov test and cmp ret pop aad and nop ret in inc pop jmp movsl imul mov hlt sbb adc or xchg xor sti repnz mov mov mov lahf lock scas rcll js imul pop sbb mov dec orl (bad) repz mov dec sahf dec or pushf imul sbb cmp test cmp xchg push pop mov mov cwtl in dec jge stc xlat xor sarl mov mov dec jno inc (bad) movsb rolb arpl push (bad) out jg out add mov pop jo bound test or sbb mov sbb aaa and jl pop cs insb je xor mov insl mov sti cmpsb pop fbld test je aas jmp mov test cmp xchg mov in xchg xor xchg push nop int push inc (bad) out cmp in stc aad outsb (bad) shlb sbb test bound or movsl adc cwtl xchg popf in mov push movsb (bad) push add push into sub jo out push xchg sbb out andl push xchg (bad) call jno sub push aaa fdivrs (bad) das lods jnp push mov add adc jb sbb and add lock adc sbb add lods and lea xchg mov fiaddl (bad) mov push (bad) fwait dec adc bound pop into imul adc cwtl fwait xchg xor mov (bad) (bad) in ret aad out (bad) mov push push mov push (bad) add mov iret push push mov (bad) je (bad) xchg cmp xor inc sbb add clc mov cmpsl mov loop pop jno lret stos movl lock xchg cmc in jp test iret dec mov cs jecxz sub arpl and adc jmp cwtl xchg clc ror inc or insl lods cmc call or mov in inc nop icebp push cmp arpl push jo cmp mov sub xchg cld jp icebp mov push pushl pushf adc fsub xor pop or xor sbb imul or jno sbb inc adc lahf or arpl push (bad) mov xchg dec js,pn imul es mov aas dec mov nop imul dec leave mov mov arpl in cld popa sbb les shrb ds mov loopne mov mov jle push les (bad) ja push sbb into mov mov insb sub mov or subl dec fwait xchg arpl jge ret (bad) pop jecxz mov mov loope cmp jmp sbb dec dec (bad) stc mov pop lds mov cmc out jnp mov icebp movsl icebp sti mov jle fdivrs out push jno (bad) or (bad) arpl mov cmp xor xor mov (bad) push sbb leave xchg mov push cmp and mov stc lods iret fnsave aaa mov xchg push in ds jmp (bad) lret mov adc movsl fwait inc xor aaa jge and ljmp inc jg sbb mov (bad) clc leave cmp mov clc and js dec ja cmp mov aad cmp dec xor ljmp js mov fcmovnb punpckhbw adc stc add xchg jo insb (bad) mov pop push cmpsb xchg nop mov js into pop cwtl push sub fwait lahf fdivs sbb jbe movsb mov cmp shlb or mov mov xorps cwtl flds jmp clc lds xchg aam xchg and adc repnz adc pop mov movsl add stc aas dec sbb xor cmp adc xlat paddusb mov jmp (bad) aad xchg dec dec mov add or mov cmp pop jle (bad) movsb lcall loop fldt and and push add jge mov repz arpl jg sub js fcomps out js sub lock lods mov dec mov icebp or cmp mov xor jne dec dec lock rcrl aad ror sahf xchg daa test test loopne loop inc imul sub notb inc cltd int3 push mov mov mov add push and mov fisttpl out xchg cmp (bad) cmp inc pop lods dec xchg (bad) insb inc not insb jbe aaa test loope sarb push sbb inc adc fmull pusha outsl aad (bad) mov push scas cs test addr16 into dec pop xchg popf adc mov lret xor aam add lret ret push imul data16 sbb lods xchg inc and mov addr16 sub lcall sbb cmp xchg sub xor sub dec mov pop xchg push scas cli cmovbe aam and push add iret enter fiaddl orl sbb out daa sahf ljmp outsb cltd jbe mov or sbb loope out mov xchg bound cmp cltd lret sbb test lea mov iret dec lods xor xchg aaa xchg lret jb (bad) cmp and aaa cmp sbb sahf out dec fld fdiv inc inc jns xor dec xor out jp fbld std (bad) jns xchg mov (bad) dec pop aam pop fwait out mov ret jne sarl inc movsl cwtl or jp addr16 pop idivl pop xchg fs push push sbb sbb mov (bad) stos pop gs or and sarl mov cltd sbb xchg jl cmp mov pushf sti aad xor pop cmp or pop fisttpl cmp mov pop gs out pop jg sbb test sbb mov push xor ja lock sarl test jmp xor test lahf into jns rcrl loop fcoml push je cmp add std cmp ret sub cmc jp mov mov inc pop inc std int3 push jle and sub mov outsl cmp dec repnz rcll in bound mov mov lods fsubr sbb test jecxz pushf or mov sub dec mov adc les pushf daa and adc ljmp stos cmpsl mov aaa gs adc inc inc lret divl shr mov scas push leave cmpb xor ja cmp dec pop jecxz sub adc outsb mov jmp adc fildll insl jg add outsb sub ret scas or lcall pop sbbl (bad) mov xchg mov mov test data16 mov int fbld add movsl lds std mov ljmp nop mov lock mov test int scas push outsb cwtl add fmull dec mov ror int3 push cmpsl inc xchg sub inc inc xchg push movsl inc add movsl mov mov es mov clc cld xor test in sub mov imul pushf cmp dec aad push mov fwait ror ja and sarb rcrl loop xor mov fimull dec fnstenv add call cmp dec enter jmp in (bad) mov test or xchg addb sbb sub imul hlt dec cs mov dec ret (bad) pop fwait cld fbstp xor (bad) mov fwait addr16 rcl or jne dec data16 movsb fisubrl scas (bad) mov jecxz add mov inc pop cli ljmp test mov mov fcmovnbe aas push sbb (bad) and pop cmc mov cltd cs sbb dec or shr cvtpi2ps mull (bad) arpl jns xor inc jb das inc adc (bad) jg inc lds imul in jae out mov sub xchg mov repz push adc sub or sbb loope les clc lret arpl xchg scas repnz (bad) xchg out scas rolb sub xorb xchg insb sti inc mov add (bad) dec adc cmp addr16 push or div imul or andl mov jns dec call into mov (bad) in push pop hlt cmp jmp popf (bad) or add xchg mov insb mov jmp enter sbb std or enter xor jmp ljmp mov loop pop pop out push bound movsl movsl or cmp std xchg lahf in sti pop in clc dec fistp pusha out and lods push mov sbb jecxz hlt (bad) bound in cmp test outsl (bad) (bad) andl add enter jo loop adcb sub and test cmpsb jne xchg clc mov mov push xor cld mov mov jg or mov xor out popf inc sub pushf cmp test adc dec shl stos add or sbb adc test mov cmp sti add decb mov jb int3 adc jb mov and inc xchg xchg daa add push cmp call sub mov scas (bad) aam mov stos push iret popa add mov jne cmpsb outsb js fs ss stos ja mov iret jge enter outsl repz lcall or (bad) lods jae push nop pop xchg sub cmp pushf mov test (bad) sbb pop push mov in xlat ja nop push aad push cmp xor mulb iret imul push das (bad) xor lock mov repnz or add lahf test pop xor (bad) mov sbb sbb mov ds inc frstor cmc xor add sub xor aam aam jmp lds jp fdivrp mov pop adc stos (bad) mov mov adc cltd sahf aam fild insb fidivl and rcrl pop ja out scas test cmpsb mov jns adc inc inc or or mov and test je and ljmp lret push das add adc push mov and rcrb push pop push icebp loopne mov and (bad) out jb pop push jae pop jmp add sbb or daa bound mov ja ss pop xchg mov repnz xchg popa mov lods out adc test rol popa sub es push push pusha lods pop ds pushf outsb imul (bad) call and scas and cmpl (bad) imul gs lahf jge mov adc cmpsb dec adc jne js jg sub adc xchg add nop xor es lea sub test je push mov clc mov dec in inc enter (bad) xor sbb cmpsb mov push sti sti jns dec cmp sbb popa stos add popa jno scas stc pop and repnz ret sub ds mov out mov sub out call inc repnz mov mov stos ret mov push and in les mov xchg fidiv jge (bad) cmp std mov sub push daa mov xor cli test adc fistpll xchg dec lods ret jo cmp stc sub jp sbb dec inc lret cltd (bad) cs mov xlat stos (bad) leave jle dec lock scas lock aas add and sub adc inc arpl leave push jbe adc mov jp xchg xchg testl and lea in dec jns jnp movsl inc dec dec push sub imul xor sbb dec mov or xchg dec sbb push rcrl repz lret mov pop cmpsw dec and inc daa mov std xchg push iret in inc data16 scas ficoml push sub clc push rcll mov cmpsl shl ljmp je add sbb inc stc xchg mov arpl add (bad) jbe mov push xor push pop push icebp fildll stos cmp mulb bound stc mov mov pop jbe (bad) shlb ret out lods cmp dec xor imul cmc push fadds mov stc xor mov js das push ds add lds sbbb push adc test clc cmp jno and inc xchg mov nop adc inc repnz add inc repnz cmp fmul mov cwtl mov ss movlps dec (bad) push aad and sbb or add dec pop adc xor and add das cmp mov jns mov pop mov (bad) loop unpckhps cld inc fwait sub orb and push fwait mov push cmp xor cmpl lock add inc jl (bad) jo dec cmp xchg inc (bad) cmp clc sub jb cmpsl mov push in xchg sbbl adc xchg sub mov roll cmp mov and out icebp shrb cmc mov jo dec or fmul inc sub mov rclb popf (bad) jbe add shrb in push arpl iret sahf mov stos mov hlt pop xlat fist fisttpl (bad) cmpsb mov cmc xor leave shlb cmpsb aam sub movsb shrl push loope push push push jle inc cmpsb pop sbb popa gs subl inc rcll imul insb add mov lods fstp and das and jbe bound ljmp mov and push jmp xor xchg pop das sub popa loop in out movsl movsl aad lret popa jp dec mov sbb enter out dec add mov add cmp je lret decl cwtl mov (bad) test notb inc xchg mov inc mov mov (bad) ljmp loopne sti adc xchg cmpsb xchg out xchg and int inc into jp in (bad) mov lret mov jp push push ljmp aaa inc sbb popa lds js cs jo dec mov stos cmp jae mov repz sub lret les repz mov (bad) push xor inc lea pop les fiaddl jg dec add fiaddl loope jbe pop push adc xor or cmp sbb xlat cld sbbl xchg dec mov fstps and gs xchg cmp xor sub insl sub inc (bad) lcall shll lcall popa cmc dec cltd jecxz (bad) clc jb mov add lret mov les jp xor jp inc shll xor push xchg popa iret push xchg call sub sbb jle xor add jp data16 mov cmp jmp push sub (bad) jns pop scas rolb sub cmp in pop or stos out adc (bad) mov xchg add mov xor lret dec mov test pop pop cmp mov stos xchg ds sbb cmpsb std sbb mul mov (bad) in mov add lods mov xchg mov das mov cli mov mov mov ss aad xlat aad sub pop and insb icebp sbb pop mov mov mov jmp repnz push or push daa push punpcklbw stc jp test cwtl fnstsw shlb mov cmp dec mov pop aam hlt popf movsb ja mov insb add lods cltd xor push xchg mov lds aas rclb adc and lods subl fwait fwait into leave or in and jecxz movsb testl mov jg pusha orb aaa aaa jl mov mov hlt xor sbb cmpb push dec jp movsb daa into subl cltd adc xchg leave out clc inc lods jp sbbb aad add fildll icebp fcoml pop mov shrb inc and aaa and or test pop xchg pop pop in pusha inc rcr stc mov sub xchg dec add (bad) popa adc xchg mov negl pop mov dec insl movsl mov aad push jae or daa jge cmp cmp in sbb dec lea xor insl push sub jo mov pop shll jmp mov sbb movsl rclb jecxz mov jb and mov or xchg icebp sub and dec hlt repz addr16 pop sub push out hlt dec ret inc xlat in pop cmp mov jmp add push and ret pop fstl cli arpl out dec jns addr16 pop mov push push ret or dec mov aad nop es out pop inc add mov bound sahf test fsubrs mov mov pop int ffreep inc sbb xchg insb or mov xor mov out out lods jecxz or pop jmp xor cmp arpl arpl mov and roll xor xor js xchg nop or fsubrp lock fisubrl mov mov mov jg cmp jo adc cmpsl xor out pop gs jo pusha pusha xchg jb push mov cwtl cmp cmp sub outsb cmp dec or or (bad) xor cltd in add cwtl fiadd test adc lret stos push jmp pop int3 lods jo push (bad) in ljmp jg aaa sahf mov jp ljmp xor clc aas lcall cmpsl xchg xchg in dec cs mov sub pop mov (bad) sti adc (bad) out mov imul sbb fucomp out sbbl out cmpsb das outsb adc inc aaa jo test pop jno xor xlat lret je insl push inc jecxz lods cs stc xchg pop or jmp mov repz not cmp add lock stc adc (bad) mov jns xchg out or cmp out xchg pop es fwait add (bad) (bad) sub and mov mov mov mov outsl adc add das jae mov add repnz fyl2x push cmpsl into mov cmp je divb iret or adc sub or add imul jl (bad) hlt inc movsb adc pop inc xor in add fstpt lahf push sbb pop add stos jno sub in ds gs cs test xor shlb pop int3 lcall lret or (bad) lea cmpsl push pop push je add push sbb cmp lods xor cmp mov dec add ljmp test stos xor fwait and vmwrite out and adc sub push dec sti in jnp lods dec daa cmc push push dec sub fnop jp enter arpl pushf xor pop iret xchg pop sub fidivr or and psubsw insb gs imul (bad) and adc push mov (bad) jb cmp xor lock scas or data16 jns cmp inc jmp inc outsl cmp jns movsb leave cmp loop cmpsl idiv je mov push xorl cmp sbb mov sahf jge jo int3 xchg (bad) cmp xor ds (bad) sbb popf adc andb mov push cld xor mov je push jg cwtl scas loop cmc xchg dec mov jnp pop aaa adcb mov jnp cmp rorl popa or insb in sbb stos jge cmp jmp inc sbb and stos cmp addr16 lock in daa jmp sbb lea ret nop xor pop adc pushf in test sti sbb pop inc out xor jl fsubrs xor mov aas push repnz movsl mov mov fsubl sub jns and arpl lcall cmp mov je (bad) fmuls inc dec fistp or in lcall pop push daa les jl or cli add xlat (bad) and mov inc out fldl jo jmp subb adc sti inc mov cld cmp sbb xor push data16 (bad) popf (bad) pop (bad) or test push dec push aam gs pop add cmp addl pop fiaddl jne sarb cwtl xor cmp push dec imul fistpll jp inc fcmovbe sbb cmp enter pop dec push in pop sar xor mov addr16 pop xchg push int3 lods cld adc (bad) cwtl cmp cmpsl (bad) xchg mov outsb fsts pop push push jnp xchg pushf mov jmp fimull ds xchg xlat push movsl (bad) xor addr16 pusha push es xchg inc lock sti out adc xchg push repz dec push imul mov insb cli push (bad) aam test mov jno cltd das lods inc xchg shld das inc jb (bad) (bad) popl aas insl cld lcall xchg (bad) in rclb mov xchg lds fstl add aad out or adc cmpsl enter lahf pushf sub add js roll jmp dec fcoms in dec aad push and arpl xchg data16 dec gs mov jmp lea aas mov fmul std cmp pop movsl adc bound imul lret fldenv iret push jmp sti inc popa push addr16 je xchg movsb mull push pop test or push cmp out push inc (bad) rorb gs jecxz iret cmp arpl ret pop mov cwtl inc (bad) stos mov sub cmp cld push aad je ds pop int3 adcw (bad) mov cmp xor push or and pop mov stos call std lahf mov xchg pop daa fnstcw jo push push dec jecxz add loop popa pop lods dec mov pop ret rcrb js mov test lret clc sub or mov int (bad) mov sbb (bad) cmp (bad) into icebp addr16 jmp dec in aas out add movsb pop pop adc (bad) int dec testb pop gs fwait push pop enter inc nop sarb jg int popw or cwtl std or xchg adc add cmpsb insb shlb jbe rcrb mov add ss aad add dec jl cwtl (bad) hlt clc push in mov popa out out int jns dec (bad) hlt mov inc aas add adc sarl dec push rolb pusha pushf int (bad) out cwtl ret adc push cmp pop (bad) jb fmuls insl adc (bad) jbe push outsl test fldt cltd sti mov popa sbb jno stos aam nop mov into cmp push xchg cmpsl fldcw mov push movsb out xor push jo sti data16 in inc rorb mov mov mov repnz (bad) mov test dec pop mov iret inc into negl cmp ss aaa hlt mov dec mov or cmc test cltd std push ss xchg mov mov out mov or mov loope inc insl add lods push pop jae xchg and sbb cltd int3 mov add lret xor sub aad mov pusha stc lods xlat jg add fildl mov sahf pusha mov out add mov push (bad) jge jge mov inc adc inc mov inc xchg bound daa sub xor adc sbb imul ds dec fidivl xchg nop repz and pop popf and std insl sub stc popa sub or imul leave fwait or fiadd (bad) cld fucomip fistpll js cmc insl movsl js and and in pop insl pop pop push lret xchg mov sbb imul xor push jnp mov (bad) push xchg (bad) ljmp cmpsl push in aas cmp sub jno jl loope loopne xor inc cmp sub push jnp mov and lret lods sbb mov in shll mov lret daa dec lahf sub ja mov dec mov loop cmp dec inc cmc gs push fidivl repz jg add xor inc lods mov bound sub std mov cmc xor loope das ret je arpl xchg and in lret pop pop gs mov xchg jge inc xchg stos fmulp lfs mov and pop aas xor xchg imul add dec cs adc push aad lahf pop pop add push mov stc loopne xchg jecxz jg or and cwtl push push sti inc sub pop movsl adc xchg (bad) inc hlt out xor mov shrb mov out leave loopne push xor movsl adc or insl mov mov fsubp xchg mov fidiv mov mov mov test in sub into faddl notb lcall mov push test xchg and pusha ret movsb mov xchg cli iret sti pop inc bound or imul inc aas lahf in push cmp pop xchg jne lods (bad) repnz xchg dec nop mov xchg in jp cmpsb dec fist dec mov adc push adc gs sbb xor sti mov xor in fdivrs xchg daa mov imul mov dec adc fcmovnb mov jae mov enter sarb jge (bad) jmp or out push out mov xchg test mov mov push lods lcall and and inc es inc push xor push xchg lds (bad) out repz mov sub inc in out lret fdiv xor cmp push (bad) test add inc cmp lods test fbld fstpl sbb ss or adc js iret jp mov xchg xchg loop jmp mov xchg sub xor pop ffreep or mov and xlat pop inc cmp dec pop sub or cwtl lods mov fisttp adc add movsb add cmpsl jb fldcw imul shrl fucomi push es dec or lahf xor xchg negl sub adc enter add add xchg popf cmp cltd push je adc icebp int dec mov testb mov push or lea test mov mov aam inc inc nop and xchg loope xchg test inc shrl outsb jo (bad) xor mov stos xchg aad outsb out pop notl jmp out inc sub mov jmp icebp sub add (bad) outsb insl cmp xchg ret pushl negl mov (bad) aas in mov lods sbb ss jg icebp adc adc pushf sub mov xchg stos sbb gs dec mov push xchg orb idivb dec xor add xchg faddl incb cmp cmp push loope pop sub pop lret add cmp and test aad xchg dec or outsl push stos xlat lods icebp jne xor pop inc (bad) popa sbb out outsl mov pop loope lods xchg xor sbb fsts mov int xor and adc ss leave test pop dec clc in enter stos xor ja mov jmp pop (bad) jecxz push sbb test mov jl comiss (bad) dec rorb (bad) fldcw push or and into lods enter sub stc loope fstl dec aaa lds daa subl mov cmp aas mov insb hlt xlat add fwait inc or daa jle arpl xor fdiv push (bad) mov pop popf push mov xchg mov addr16 sbb iret jp mov jl cwtl imulb pop out sbb xlat mov xchg (bad) mov cwtl xchg sub jmp movsb insb add jbe ds inc dec into xlat jb mov inc nop jbe mov bound dec pop hlt aam pop lods (bad) (bad) or repz sti inc aam movl push jmp and (bad) shrb cmp push leave out out or cmp push rcl xchg push int imul add mov mov inc bound cwtl sbb jecxz (bad) (bad) fnsave pop and adc cmp int sarl fsubl cltd or jo xor inc push sbb cmp lahf enter out xchg cmp mov cmp dec (bad) lods and pop (bad) mov and mov mov cwtl jle push sti (bad) mov jmp lock aaa clc daa or incl mov fldcw xchg imull lds or je dec into cmc mov pop divb bound js mov sahf jp mov movsb sti loopne push cwtl out mov pop loopne mov fdiv gs out pushw add repnz push ss xchg insl ret sbb mov (bad) notl jge data16 fdivl fsubrl and jmp push cmp mov add leave sbb in cmp sbb sub rcr incl mov cltd mov cmc ret mov pop sub imul lret rdtsc popa push dec ds ret mov push or mov rcl inc inc cmp lahf xchg sbb dec std or xor cwtl adc push stos add pop fisttpll xchg icebp loope mov fisubl cmp ja sti cs ljmp and aad arpl push mov fwait repnz mov notl dec ljmp xor xchg pop loopne popa imul enter jnp sub jmp test push pop lea ja mov fsts xchg mov pop xor movsb cmpsb mov outsl push cmc or les xor fwait (bad) push out pop iret and sti das test or cli leave addr16 xchg xchg xor sub xchg fstpt and sbb adc test push dec mov mov inc pop dec movl push xor xchg mov mov mov loopne mov ficom das in xor enter or mov adc add imul repz lds or ret es insl pop arpl fstpt mov inc das hlt sbb popf or inc jmp adc pop scas add xor aad pop and add xchg addl mov jno pop adc mov mov shll or push jp mov or nopl fcoml das ljmp inc and add fsubl fidivl mov jp sarl dec scas movsl add test and mov xor pop sbb pop dec mov std ljmp push loop or add sbb push (bad) ja ljmpw into add scas leave testl popa or orl repz out mov (bad) mov push sub jmp and fcoms push push inc ljmp push cs pop cmpsl xor inc les xor insb enter xlat fsubl imul aaa xchg fimull fdivs add out mov sbb xchg jge jp or addr16 xchg int3 scas cltd hlt sbb dec pop adc mov sub jecxz stc cmp xchg dec push dec call test inc lahf daa sbb cmp movsl in sub sbb leave ds xor scas sub dec fwait out inc ja cmp inc mov dec xchg ljmp sahf dec add out jo aad ret push repnz push mov jmp out xchg sbb ss jmp mov mov xor scas (bad) cmp adc adc mov loope enter clc xchg sti mov hlt dec enter in xor in mov hlt jge sarl jecxz mov xchg lret ret xor mov pop mov inc add xor push push adc cmp xchg mov stos rcll les adc jae (bad) aad pop stc jg jg stos mov rolb rorb fdivl daa (bad) sbb inc mov inc stos in mov leave add into mov pop loopne jo jne stos inc ds pop sbb mov or icebp dec sahf popf outsl pop or dec sub daa xchg stos sbb cmpsb adc push xor mov test or jge loop enter mov arpl jns push mov icebp icebp mov sbb cmp pop imul push fsts adc aaa cmp cli mov ljmp sub dec ret mov ss xorl gs jnp push fidivl or mov cmp jbe call ljmp dec test icebp lret test icebp (bad) lock rorl or mov xor jle mov ljmp pop leave cmpsb sbb and test dec cltd jmp in cmpsl repz aam mov sbb and add mull jb xchg and mov idivl negl das add test mov scas pop cmp loope rol sarl lret mov dec sub sbb out sbb and push roll xor mov push mov mov cmp enter pop (bad) scas push mov push or (bad) mov mov mov (bad) xchg adc mov jnp adcl cmp xchg push pop ret cmp push or mov repnz les test (bad) xor push xchg push push sub les jb pop std (bad) mov ret subl int3 movsl xchg ret enter sub lea loop (bad) xor repz push gs cmp decl (bad) or mov lahf fidivr pop popa in inc (bad) negb pushf xchg adc aad aam adc sub inc ds int fsubrl lods cli sahf mov dec pop stos inc cs (bad) sub stos out addr16 dec mov sbb inc into out jecxz jbe mov into adc or mov cmp (bad) imul negb in inc cmp out out fs xlat mov in and insl mov mov jno cmp in push ja mov insl dec (bad) push fwait lock dec sub sbb and xor or dec jo sbb pop jno fistp sbb (bad) sub add jg fisub gs pushf jp mov xor test mov flds pusha les rolb adcl lret sub lcall aad shrb mov sahf outsb adc xchg aas jo xchg cmp sub jg js mov xor fwait nop (bad) sub or les mul fldcw loop sub jnp (bad) (bad) stos fisub cmp dec lea push xor fwait jbe jb movsl in jo fdiv lret insb repnz scas je and fisttpll (bad) jmp inc xor or xlat bound mov cmp sub add dec out jmp inc push lret mov leave jg js out daa aad std xchg jnp outsb xor rolb data16 aam inc push xadd xlat cmc (bad) fs or pop int mov pop fs add dec dec imul dec test jmp movl add sub and cwtl and mov in js int3 mov movb mov pop mov repz lea sbb sub push daa sbb scas xchg inc dec popf push addr16 stos or ds stos push jg rep test fild push xor fldt pop push loope adcl and nop outsl lret add xor sbb (bad) jne,pn inc clc add cs add adc rcl jb jg push cmpsl xor inc push aaa mov push aad lret jg jl push (bad) (bad) cmp mov xchg lea xchg scas pop (bad) gs mov xchg mov rolb les xor out add aad lcall dec sub test in lret nop mov pop rcl cmp jne std adc (bad) pushf insl ret mov mov gs sbb mov push and mulb adc rolb jge mov testb out in sbb loopne testb cmpsb lock mov sub scas sbb inc xchg aad dec pop ret inc jmp (bad) shrl in adc jne add rorl ljmp push fsts lret dec jmp insb stos cs popaw sub pop arpl scas pop call stc jne,pn std jecxz xlat daa inc out fwait arpl mov lahf jne jo fsub sbb pop je add mov loop loope jg adc fs (bad) shlb cmpsl pop out (bad) jbe lea xchg pop hlt aad pushf in and (bad) dec inc in or sub in cmpl pop clc popa mov pop push xchg push popa lods xor cmp sbb xor mov popa dec ja xor sub add insb mov sahf insl push dec clc repz mov (bad) mov push repnz fcmovbe xchg jo into loop popa push mov sbb inc sub sarb add xchg mov stos scas lds lods pop shrl push scas push sub xor or ret imul xchg insb scas pusha push jl jae repnz jmp inc ss pop pop pop mov incl je cmc idiv inc add (bad) or mov out movsl fs jg sbb int3 xchg outsb cmp pushl jnp cmp js leave xchg fnsave jmp mov push lcall inc mov cvtpi2ps pop jno inc and dec repnz mov fcoms mov stc fadd dec and loopne or dec mov icebp int stos loop les dec lea cmp cmp mov aam jno leave pop and fildll inc push xchg xlat insb stos xchg mov mov roll cli sbb lret stos add pop imul (bad) mov popf cmp leave add pop lea or in lea loop sarb paddq stos xchg clc mov adc or fdivs and mov fisttp mov cld add lahf inc sbb push xchg mov push mov push int pop xor mov orl mov xlat add lea test mov outsl imul xor dec pop sbbl cmp outsl sub push xchg (bad) lods mov cmpl mov push sbb nop sbb movsb add lcall repnz dec mov or loop es fnsave or test js jnp push sar mov xchg in and sub cmpsl sbb and sbb imul xchg inc sub cwtl jmp pop fwait lea repnz dec out or out mov sbb mov movsl fnstsw mov lea cmp pop or es xchg jne push mov test xor push aad push xor mov pusha push xor test clc dec push (bad) int3 add dec or (bad) mov dec or into loop sbb jbe (bad) xor pop and jp ljmp js and or int shlb pop lahf or push ljmp loop pusha pop in mov stc jge xor aam mov xchg mov daa (bad) push addr16 cmp popf adcl mov and out mov add aad ds and xchg mov sarl or jge loopne cmp jae movsl shrl sub adc add imul and std pushf sub push adc jge out lcall scas and pop fidiv cld push adc cmp fsubrl out inc adcl cltd (bad) cmp cmpsl xor movsl ret sub jg dec rcrb add js add popf addr16 ds mov pushw in ja gs stos lds leave jmp pop cmpb arpl loopne mov inc cmp mov in pop mov pusha insb pop inc mov sub (bad) movsb lock cmp inc sbb jb fdivrs push je stos cld out mov push cmpsl mov fbstp jmp xor iret std dec fidiv lods jmp (bad) fisttpll mov rolb clc pop (bad) adc das nop or inc pop mov or pusha dec das stc pop das cld pop nop lods mov insl and lret sub icebp xorb and aas ror ja pop cmp (bad) xchg pop push jle and adc mov out nop in inc repnz sti outsb pop add xor test sbb fsubs lods insl jp xlat cmp mov sarb and and cmp or mov dec dec push hlt adc cmp push push sarl add lcall test idivl out jae sbb mov test add fwait or call fmuls arpl adc das clc out pusha jne lret arpl popa out xor jmp mov iret mov jnp xchg and inc or sbbb inc jb xchg pushf cmp jmp es rcll push aas adc lret (bad) mov jnp and cmpsl cmpl divl ja mov sub rcl in (bad) enter cltd xor xlat (bad) jae lahf pop lret (bad) cmp xchg pop jecxz dec (bad) nop das pop lods test fbld jne outsb fdivrs jl mov (bad) fstl (bad) and stos cmp gs test mov pop jbe cli jl pop adc pop mov pushf adc lret stc xchg js imull jle inc dec fs push and jl leave aam aam jns jns test push sbb cmc sub (bad) or xchg mov imul into mov mov loop mov sub shl xor cwtl pop mov jg or push adc add mov push push adc mov dec mov daa add nop pusha vunpcklps out addr16 pusha dec (bad) jae aaa fistp dec cmpl add xchg pop andl out mov loop dec test and fmul mov jae push xor sti sbb (bad) clc ds jle mov ds rolb lret iret lds cmp or and ja xchg les lds loope hlt inc jb pop into mov fwait adc jmp fistpl (bad) xor cmp loopne pop hlt jb mov sahf add jp in push das push (bad) imul inc mov jns mov sub xchg lods sahf fs mov lods pop icebp loope loopne (bad) aam and sub mov cs rorl (bad) mov pushf xor xor pusha jg pop sub and das adc fidiv cld lcall push imull enter add or iret xchg stos mov mov mov stos push fyl2xp1 stos rcrb (bad) adc iret fidivr jne jp sar les sbb push pop pop cmp cmp negb jmp test jg loopne xchg and les jge or mov cmp (bad) sbb test insl jp inc fldt lods inc xchg repz je movsl lret clc xchg push inc les cmp nop sub loop push jne imul rolb inc lds inc ljmp pop mov mov scas and adc sbb pop sahf pop mov adc addb mov in xchg or jmp shr push sub inc std inc movsl and sbb dec or shl xor loop xchg repnz sbb lock mov hlt cmp pop jnp adc aam in enter lret stos sub or dec and cwtl (bad) int3 outsb xchg mov lods cmpsb push pop xchg int mov leave adc repz in (bad) aam xor adcb insb xchg cwtl out jae jl cmp jns loop les movsl or stos push jo and or imul mov sbb jp out mov xor mov les cmpsl fsubr (bad) pop out cmp mov rol push inc inc (bad) icebp jo ljmp jb hlt push jns and fsub popf or std xchg lret aam push mov push fwait shlb push jbe adc adc cli lcall sub ljmp int cmp adc lahf mov push lret sub push jnp cli xor dec jb or or loopne (bad) in xchg call ja or shr xchg (bad) sub inc and adc test xchg movsl xchg or mov pop or fdiv call sub xchg loop jl adc mov imul sub push fninit (bad) lret scas mov xor add push orl push dec nop enter push mov xor dec hlt (bad) adc push in lret mulb or (bad) in aad jp (bad) dec adc jnp fnstsw mov add adc daa test jle insb (bad) jp mov sarl lock je sub cwtl leave mov or push cmp xchg mov jge jb sahf mov mov repz rorb mov mov fistp adc xchg cmpsb les in xor int3 int (bad) hlt inc mov lea stc je inc sub pop adc out mov movsb mov adc cmpsl subl aam inc mov push int3 cmpsb pushf push repnz jge aad jp loopne pop xchg mov or xchg jne inc scas divb mov dec das lock (bad) jl lock pop in mov ds cmp add and push lcall insl and xor ret and jns sbb ss push (bad) mov mov sub add and mov mov sbb cmp es and dec pushf add lock adc test dec call sar es push movsl inc enter in push push mov push add xorb dec adc repnz ljmp fsts pop mov fisubrl push or xchg dec sbb jno lock ret adc xor add cli sbb les cmpsl cld loopne pushf mov sub mov push mov js fcmovbe in jmp jge fisubl mov cmp xorl sub dec mov push sub add mov test lcall outsl je mov ja jl scas xor push je lock popf push push mov xor mov daa ret xchg push jle int3 cmpsl adc or ja push jge lret out xchg movsb jmp mov aaa sbb xchg mov pop or cmp ss icebp sub mov inc mov (bad) xchg gs stos mov mov pop mov or test cmp cmp xchg inc testl pop or lret sahf and inc mov sbb int (bad) xor test out mov xchg add mov pop mov push je mov inc sub gs xchg hlt (bad) je dec outsl test nop inc jp test sub (bad) mov add xchg mov push push stos (bad) cmp add dec sbb clc mov sbb sbb shrb add or cmp cltd xchg pop loopne inc mov push xchg pop jmp inc xor and sbb push sbb pop jae scas gs je scas fcompl subl dec xor gs les mov push fidivrl fiaddl fdivr je or cmp mov cld push (bad) sbb inc xor sbb push (bad) mov ja aaa mov fwait or (bad) pop xchg pop mov int3 loope mov jb stos mov xor push dec fcoml cmp cmp cmp imul in mov pop mov cli fmull sub sarl std jmp int test iret in das pop loop cmp xchg mov insb (bad) dec jmp lock test ret mov fistp sbb pop inc lret jne jecxz stos lock int3 xchg cmp push adc inc js xchg lods pop sbb cmp mov jo xor mov gs nop mov shlb xor testl clc xor int3 add int3 dec dec jns lahf inc push pusha mov xor xchg push fs lds test sbb iret (bad) push in ret sbb push dec nop push add mov outsb push push call cltd lahf lods (bad) mov push fcoml mov adc lret sbb fdivrs (bad) or pop mov dec xor pop xchg push out addr16 add xchg mov add bound jae test mov cmp iret arpl orl jbe sbb (bad) mov cmp outsl pop iret mov sbb cli push mov dec daa (bad) int add inc sbb xchg dec pushf jne leave or ficom fild stos imul mov (bad) or push pop cmp gs sub and or mov mov push movl mov cmpsl push cmp mov pop sub mov enter pop movsl push mov cmp xchg push stc fstl inc mov insb xor out (bad) lods stc dec jb rcrl push sub push inc dec jb out fisubrl xchg cmp ss movsl xchg out out movsb int3 fwait pop pop mov sbb lods mov mov push sub add sahf rcrl mov sub ss in aas cmp dec repnz (bad) aad enter movsl daa cmpsb stos mov push push mov xor or cld and cmp push sub inc sub ja or xchg mov add loope dec addr16 (bad) loop mov and test mov lds push xchg cmp dec push fiadd xor sub dec in pop mov push int (bad) xchg xchg jl sahf jbe dec psubw sbbl xor pushf jnp lcall add loopne sub (bad) gs push pop pop push insb (bad) ljmp mov inc imul insb out mov fisttpl frstpm(287 sub js adc pop or or andb fs mov cmp mov cmp fistpl mov xor and lret cmp in mov aad dec mov sub inc inc xchg adc inc mov cli sub ficoml (bad) loope jne aad push out movsb xchg into add push dec lock push movsl je notl in hlt lock inc mov xlat mov ja shrb icebp cmp cld js inc lea ror xchg adc dec lahf jmp divb pop leave xchg stos and mov dec push fucomp pusha cmpsb call sbb add fildl xchg aam es jge mov fisubr rolb cli test negl stc fs gs pop mov xchg mov and sub and xchg or dec mov cld out dec fwait das sub push call insl push cmpsb xchg lock jg adc das cmpsl dec popf or div cmp and xrelease xchg mov lods xchg and daa jo aaa sahf lock add (bad) mov out jnp std pop sub push repz xlat into cmp push fcom jl aaa inc jecxz andb fimull mov inc xchg (bad) aaa arpl (bad) ja mov push sti ja dec std (bad) fs daa and adc addr16 stos mov mov push or and xchg and dec test or aam jge lds inc (bad) out rcr xchg fsubl adc push (bad) dec mov (bad) xchg dec mov and ret into flds push cmpsb cmovge jae or or jecxz hlt out xor repz icebp bound pushf aam rol (bad) sbb jmp sbb or (bad) mov cld and pop (bad) sub into xor push stos sahf cmpsl outsl cmp ror ja add jae negl xchg fdivl or mov mov push lahf jle mov cmp jp pop sarb movsb inc test je aas iret nop cmp out movb std jnp sbb lods or dec test lea inc (bad) jecxz arpl ret xchg mov mov add xchg leave xor (bad) out sub and add mov inc xor std mov sub mov fnsave inc (bad) icebp repnz add rcr push pop fwait lods stos iret sbb jbe fidivr repz aam pop jbe iret jecxz mov loopne adc adc insl inc (bad) jmp in xor mov icebp (bad) fistpl mov test (bad) ds (bad) int3 call dec mov clc in mov push faddl mov jne dec (bad) mov sub test jmp adc mov xchg and add mov and push xor cmpsb pop mov add aad fildl push fcompl adc clc lods (bad) out es pop mov arpl cmp jns pop je daa sbb shrl jne repz popa sbb xor xlat aad jne sub lcall arpl cld notl pop in std test dec sub inc mov insl out cltd lds gs push repnz sbb or jb (bad) pop jg dec xchg or icebp repnz xchg mov cld ficom imul (bad) fimul xchg add sbb sbb ds ja dec scas lret insb cli and fs lods into push test int ds pop hlt xchg out xor jle jo movsb or dec fwait in adc rol jmp mov or popf pop (bad) adc cwtl bound sub scas arpl mov int3 and imul jo cld jno decl jne and dec out cmpsb movsl in lods sbb stos (bad) in dec repnz leave pop shlb adc popa outsl cmp pop int3 push test les sub pop cmp mov pop jno orb xchg in mov notb cmp fadd add xchg mov xchg sbb push lods lock dec inc popa jge (bad) xchg sbb fs mov imul cmp sub cmc lahf leave dec add cmp push bound fisubl jne cwtl add xor push xchg mov dec je mov jmp xchg out rcrl jmp aaa pop cmp jg sub rcrb lcall push adc ret (bad) mov add jecxz xor and jl cld int3 mov pop les jo cmpsl jbe fisttp int fmuls ljmp sarb jp movsb and clc mov cmc or and mov mov jge ss sbb adc push dec jge inc jg repz in xchg pusha (bad) std sub js,pn loope pop iretw hlt std or and es dec mov inc int3 dec fdivs js fucomp xchg adc sahf dec sbb xchg insl sub and pop data16 and lcall in in push xchg stc inc inc js push xchg fdiv jno pop pop ljmp jecxz stos push xchg inc arpl xchg mov rcrl push mov ja cmpsb pop pop dec or rorl jg pop add popa lods (bad) jle mov movsl bound insb or test xchg adc adcl pop cwtl mov es mov add frstor in sub movsb aam inc sbb add sbb (bad) fdivrp push into data16 cltd lret repz add popa mov xchg push (bad) lret push mov sub dec gs outsl cmpsl mov in jecxz mov push (bad) test lcall xchg shll movsb test js stc xchg clc inc inc sub fisttpll loope ret in xor xchg sbb out xor imul dec je stos jp add pop xchg push ds shll mov push xor lods cs imul lret imul test or mov lret iret popf lock cmc xchg push fnstsw in test (bad) rcll adc cmp aas test mov insb push xchg fsubr lods leave int3 fstps (bad) lahf inc jg pop push dec xor xchg cmp das js sbb jns inc sbb fnstsw in adc stos or or xor dec lods movb jmp icebp rolb xchg popl int out fldcw rcll aas and push jnp bound fwait push lods out popa inc dec data16 mov sub insl lods xor mov in dec ret std sub pop out or test stos out int std stos shrb adc cld and sub inc xchg dec ret cmpsl xchg stos imul shrb nop jmp loope lods fisubl incl ficomp sub nop mov loope outsl add xchg sahf stos lods fmul cmp (bad) loop xchg pop das sub imul and imul mov jnp xchg (bad) and andb pop jbe repz xor xchg jmp fdivrl xor rol mov cld outsl mov sbb (bad) mov dec and jne fnstcw mov cmpsb and pop les jns pop mov movswl pop andl popa inc pop jns fcomps pop or sbb or lcall enter div sbb mov and fstpt hlt fistpl out stc addr16 stc and sbb dec cmp pusha jge inc lods pop into test cwtl mov (bad) pop cmc mov rcl subb xchg mov mov adc mov sub ljmp in cmp add orl icebp jge push pop cmp clc xchg pop (bad) pusha aas or bound push out out call xchg rcrl sub addr16 inc push xchg push pop cmc pushf pusha rorb sub and pop push fidivrl data16 sbb inc xchg cli sbb lds leave insl lock dec jmp xchg call stc test ficom cltd icebp ret pop in xchg arpl fstps dec or mov dec pop inc ss push adc pop add jnp xor (bad) fistpll lock fisubr pop and xor mov cltd mov xchg sub dec rorb clc or lea jnp out push aas push int3 adc clc cmc out ljmp int3 and in sub cli in push sbb mov outsb out and cmp mov inc lods out in fsubs add xchg jb jno xchg sarl jg adc xchg jp fnstenv arpl push in enter add lret jno lods outsb cmpsb lds sahf push fistpl inc sbb les mov (bad) jmp or cmp ss add popa cmp add mov lods fldt (bad) mov arpl jns test pop mov stc nop xchg push in out divb fcmovnbe xchg inc inc xor int3 fsts xchg fsubs adc and movsb cwtl xorb sub stos push cmpsl dec pop jg sbb sub xor loope lock (bad) pop xor out mov fldcw and lods add sbb sti cltd inc jecxz lret jmp adc stos insl or icebp jnp aas mov aam dec lds aas and test hlt roll mov popf xchg pop sub mov xchg jne cwtl lods inc inc mov iret fdiv xchg sbb leave mov pop ja (bad) add int3 imul jg out and repnz sub in push jg fmuls push fdivs add jg mov shrl inc pop aaa ja add mov mov insl add inc (bad) mov jmp cmp mov stos xchg insb fimul loopne mov movsb jl jp jb push pop movsb xchg fstp jl adc or cltd pop nopl dec scas sub rorl or mov push (bad) cmp xor mov test test cmp xchg outsb fcmovnb stos jo sub jbe aam sbb xor (bad) stc sub or sbb out adc sbb notl pop push (bad) jae push cltd jg xor aas std xor (bad) add (bad) adc negl sbb (bad) imul sahf imul sbb cld push aaa enter sub sub (bad) mov add sbb data16 xlat mov pop out pop sub and mov mov cmp sub mov push add mov roll xor inc inc stos dec cmp sbb push adc cwtl mull mov aas es (bad) cs xchg or movsl addr16 push aaa jbe mov mov enter bound ftst out jmp cs ret push xchg (bad) stc and sti movsb pop mov scas push hlt push mov lahf lret pop es shlb cmc inc hlt cmp xor cmpsl xchg sub call dec ret stos push and inc xchg push add cmpsl mov sbb xor xor popa push or repz sub xor push jmp jo add movsb push movsb cmp out xlat cmpsb mov rcll fwait out sub sahf int sub inc out pop dec jne out adc mov out fild xchg pop popa repz outsl cmp pop out pop sbb jne xor pop push sub mov hlt arpl lret adc cmp cld shll and lea push sti jl jne sub xor ret mov movsb daa push enter sub sub xor outsl jge js pop stos dec xor sub aad cmpsb sub lods xlat sub jo pop push (bad) mov cmp push out sbb jne shrb shl out lods jnp cld dec loop outsb icebp xchg lods inc and jno lock ret pop adc jmp lret stos and insl push ret xchg testl push popf mov movsl lret xor stos sbb pop xchg gs or xchg repnz aaa mov popa or xor std mov loop pop xor in into dec ljmp in int3 xchg rcll loope sbbl dec addr16 mov hlt pop int cld push (bad) inc les (bad) xor add clc jmp loope xlat push cmp in cltd inc sub scas or fisttpll cs lock lahf imul cmp imul fldln2 shrl in push (bad) repz mov mov lock ja sbb fldt aas jg push xchg (bad) dec jge lods mov cmp push lea inc and push push je dec or jecxz mov aad sub cmp in mov pop iret addr16 inc sub and lret mov jb popa test pop jne cli call xor pop mov and jno adc (bad) stos shll sub jmp insl pop repnz mov fdivl (bad) pusha sub or dec xor push (bad) fstps cmp cmp insb fldenv cmp mov lret adc and cmp pop fwait ljmp jo xchg push xchg jle,pn cmp fbld movsl dec inc ja cwtl cmp mov clc pop movsl or aaa std movsl pop or mov push xorl lock adc add dec sub jmp xchg popf fistpl icebp jl lret xchg mov lret dec push mov leave lret fidivrl mov sbb int3 rol mov leave add or sbb sbb xor lods cmc mov aaa lcall xchg lods fnsave out and mov inc jmp push jae cld push xor push rcrl adc mov (bad) out xchg cmp mov repnz (bad) xor xor in inc mov nop out xor mov into int3 out cmp mov mov pop inc xor mov std daa xor or lahf loop es test hlt sbb xor into test jmp divl sbb jecxz xor xor push inc das sbb push or test pop in in xchg sub popf mov clc mov push and or mov in push scas jle lock jnp ljmp mov repz out xor cmc push xchg xchg ret sub insl aad jae xor into adc (bad) cmp mov std stos xchg in or out in lods pusha and adc imul pop mov imul aam inc out ret inc push mov (bad) dec mov negb and xlat mov adc repz dec stos cmpsl aad repnz ds in mov dec pop push mov repnz dec pop and arpl push jno ds ljmp ds gs and lcall decl xchg cltd sub cs call add fcmovb cmp xchg imul rcr out jno cld out or cs out rclb pushf sti sbb imul jbe sti mov dec jae addr16 xor xchg or data16 xor hlt leave pusha jbe lock stos and sub clc dec lcall sub mov popf mov imul scas xorl (bad) aad sub cltd jge push cltd pop cmp clc movsb sbb fisubrl inc aad (bad) lret repz cld test adc sub pop pop inc sbb shl sbb mov scas mov test add xchg xchg fsubl mov jb or leave and push test pusha jecxz fisubr sbb adc imul mov imul mov dec (bad) int3 jmp notb cmp pusha xchg xor xor adcl adc dec dec lcall ljmp out push (bad) lods or cmp roll adc repz pop ljmp scas or mov inc sub shrb mov sub or scas gs pop popf nop fsts jl mov jl les sbb push mov rorb aam aas bound and ret leave cltd aam cmp out ret stc in and dec inc ret fdivs lods negb xchg roll (bad) loop loop mov add lahf (bad) popa pop out add mov fildll cwtl push out popf fiadd test push adc arpl pop or xchg mov adc cs pop inc cmpl mov int xchg in xor xchg popf and sub cmp cli inc cld pop pusha outsb and inc cwtl xchg sbb js mov sbb adc sarb xor scas jg test mov pop rcll insl mov mov mov popf adc test (bad) in lock (bad) fidivr push mov pop lcall mov cmp sbb hlt imul inc adc jnp ffree fadd jb mov mov ja icebp sub je xchg ds and sbb or mov pop fsubs or mov and xchg jle dec je in dec add ficoml inc jno movsl sahf insl mov jmp cs adc lock mov hlt (bad) mov (bad) rorb dec inc inc (bad) pop in xlat jmp add outsb rcrb or int3 inc push imull stc cmp mov shll enter movsl bound dec adc pushl pop insb dec ss jae bound cld inc cld cmp sub mov (bad) cmc xchg imul xchg sub adc sub lods addr16 cmpsl movsl lods xor sub icebp inc testl add or in fsub insl xor dec cld imul xor xor inc xor dec add lcall jp outsb lods jp hlt std imul stos inc and sbb out mov mov jmp loope mov lret sti imul cmpsb iret jecxz (bad) ficoml fs das iretw cmc dec pop les sub or xchg (bad) jo repz lret js mov xor insl arpl pop loopne mov imul xchg add out inc sub xorl fsubrs es dec idivl mov xchg fwait jb or cmp sbb (bad) rcrl out add inc xor xor sbb in and xchg push (bad) jne pop iret dec repnz test cld jbe inc jmp mov mov xchg or jno leave xchg mov fdivp rcl dec iret inc mov neg insb inc (bad) aaa add fwait cmp data16 cltd pop jmp push cltd (bad) rcrl hlt mov lret lods xor (bad) sub push fmull cmc ret add or jno mov cmp push mov scas xchg ret js jecxz jp hlt call mov jmp test mov mov imul orb xor ja aad data16 pop mov lcall mov jne and or pop pusha in das adc adc roll sbb jns sbb adc add xor nop in adc inc cmc xchg popf jb push fsubs decl sbb (bad) pop mov xchg xor push jnp out sub insb jmp jp and pop or jmp push push outsl inc js mov mov cmpsb mov and push push xchg aam sbb outsb fisttpl fsub in in movsb jge cmpsb jl push mov notb (bad) cmc sub cmp pop das sti inc sbbb sahf sbb inc inc inc mov dec aam fs test sbb leave popf lock sbb (bad) cli iret inc cmp cmpsl and mov or es jp xchg cld adc dec xchg test adc adc hlt push (bad) push pop lock and inc push sub iret dec scas sbb sbb mov mov push testl inc add push fwait ja hlt scas dec testl ret psrlw scas inc or inc cmc dec mov fwait out add mov xchg (bad) mov aaa mov cld mov jle dec cmpsl (bad) repnz jns ljmp xchg jb inc js cmp sub mov ds dec fsubrs scas cltd aam push call pop ja outsl scas rdpmc jno push inc dec scas add ja repnz or je push inc dec je jl pop jns lahf mov pop (bad) cmp imul xor outsl and mov test or (bad) mov mov popa andl or xchg add cli push push add jl or or hlt bound jecxz in push out negb loopne int les es std jb (bad) out stos out push xor lahf jge rcrb daa inc lret pop rcrl ret loop cmp loop lods sbb mov int3 jle loopne out loopne fcoml out gs cmp jns add in lret push mov jns orb mov sti xor or jae pop fsubrl mov out fcomip cltd mov mov mov xor scas sbb sbb mov arpl lds mov and xchg incl daa loop add sahf xor xlat inc pop popf xchg pop lret sbb adc mov and ds movsb jo scas std fxam mov (bad) jecxz xchg test test adc (bad) sub bound loope es inc (bad) lock (bad) add jno pop mov add int xlat or fldt lahf subl adc push sbb and xchg dec push leave pushf dec cwtl out push setb push lea pop in mov inc lods and cwtl add pop and stos mov rol xor aad mov adc push adc pop das and adc das bound fmul fdivrp pop add fwait mov mov mov pop pop pushf sahf fist adc jno ljmp (bad) in test and xchg and ret (bad) fdivs or bound iret int pop dec adc loopne cld addl mov mov popa scas add cmpb mov cmpsb xor dec fmuls mov insb xor out fwait dec mov cwtl ds cmp adc imull jne xor movsb lock fstp or (bad) sub loope stos repz mov call mov aas jmp test xlat push adc loop pushf lds xor mov xlat (bad) xchg pop ret mov lods cld das sbb jns bound cmp xchg (bad) and shrl mov stos aad in fidivrl xchg cmp lcall lret jbe,pt sbb xchg push lods fdivl (bad) (bad) mov mov in popa or mov sbb xor xchg test mov pop or sub scas leave mov cmc test dec inc push sti push add or xor push dec mov mov dec cltd jae xor pusha mov cmp shl leave jnp addl mov xchg inc jns xchg mov hlt mov pop (bad) shrl push pushf out mov cmp mov mov jbe jo test jmp jo sti cld ret push pop stos testl xchg mov sbb dec out adc out push cs jns dec pop jnp ret mov inc in pop (bad) aaa ds das lret jecxz leave pop ss data16 pop xor or iret cmp add pop stc popl jg jmp xor push test xor push mov xchg scas pop sbb jns rcrl cli fdiv mov dec fcomps pop in xor ds mov push scas mov test outsl sbb sti or mov lahf insb es cli xor sbb lea test hlt adc and std in divb xchg jnp jmp aam pop jae jp ss das cmpsb mov mov js imull leave inc jecxz outsl (bad) das popf icebp xchg mov rol mov jle in xchg xor sbb sbb scas mov xchg int3 stos sbb jmp int3 addl (bad) aad aas loope jl inc jmp repnz pop dec jl (bad) test cmp mov sbb push lahf inc push jl (bad) ja cmp out int3 sbb dec lds push and jecxz dec daa push and arpl push in sbb loope pop clts rorb (bad) dec push sbb mov test jl in sub ss jo jne repz hlt out pop pop pop sahf mov push push jne call pop pop mov clc cmp jo gs das cmc in js (bad) loop xor addr16 test out jns push sub pop lcall jb inc pop in jnp bound jmp popa insb sbb daa fdivs sbb leave arpl ljmp les inc mov test cwtl mov stos push mov push xor out rcrl int mov pop neg jae pop lret dec dec mov add in (bad) jbe out ja (bad) cmp cmpsl inc jl adc ljmp enter gs push es mov shll dec xchg sbb push lcall call mov enter (bad) aad popf outsl pop xchg jmp rclb jg adc pusha (bad) jmp fprem1 and mov cmp mov dec adc inc add clc repz movb seta fwait test into ja push add ret sbb lods arpl sub mov bound sbbl aas into loope mov pop pcmpgtw or lock push push fwait dec test fstpl push test aam mov std mov xchg lods mov mov mov and pop fcomip mov rcl jg mov es pushf and scas add lods jnp pop push imul dec faddl (bad) push cs rcll cli mov imul mov xor xchg sbb les or mov test add fwait jmp or into xchg mov jbe lret lahf ss dec cmp iret sbb stos mulb inc push sbb xchg jecxz lods stos lods pop inc in (bad) sbb adc push xchg lret pop xchg (bad) in cmp push jbe xchg test add xor imul add ds insl (bad) push and icebp adc (bad) aaa iret add dec inc test mov icebp lods jmp xchg mov sub imul push repz mov int3 mov add movsl mov xchg addr16 jns push and lds fcmovbe (bad) mov jnp scas push out das mov mov gs xchg sub aaa jns jbe jae inc mov xor mov dec cld pop mov gs mov and int3 adc add imul push pop scas fs cmp xor int lea insl arpl lds pushf sbb mov lods mov inc push cmc (bad) push adc ret insb int push inc bound mov mov pop or rclb mov sbb push daa in aad mov pop jecxz (bad) mov lods (bad) mov jmp jp mov and (bad) out stos inc enter add sarb xor mov mov and rclb pop iret pop (bad) daa mov clc outsb jecxz out push mov clc push dec int add push add sahf inc xchg mov pop aam in mov mov xchg jle cltd and mov sub lds in ja xor mov jge lea ljmp or push cwtl pop push (bad) das pop repnz push in rcrl lock cmp mov dec adc adc add mov or jg lret movsl pop push in ss fistpl mov ds jae jbe cld add stos mov push mov adc lods dec mov out shrb lock (bad) cltd or xchg mov xor xchg rcrl cs shrl lcall daa xchg add jnp xor mov js jne mov adc pop popa push sub and scas (bad) mov lods mov adc aas rcll push push test xchg inc gs aam lods insb lds mov pop add cwtl xor jbe lret sub in mov adcb dec mov scas mov mov test mov pushl aaa in push and (bad) jmp jp lods and jbe cmp mov cmp jne hlt outsl pop mov ret out adc gs mov push movsb leave into bound pop pop fsqrt xchg cmp sub pop fiaddl aam fdivl outsl mov jb movsl test rcll movsl (bad) arpl xor push aas inc jg and mov xchg test outsb cmp mov cmp cs mov mulb inc push (bad) out addr16 bnd (bad) inc sbb push or mov lret int scas dec xchg int movsb pop loope dec and mov jno and mov pop push dec mov xchg inc sbbb ret lcall (bad) sub push out mov lods es cmp in cld popa fcmove jle enter fs mov lds and mov cli adc into notl or call sbb jle fwait sbb and or and fsubrl cmp adc jle cmpsb mov mov cmp or lret sbb and and sbb sub scas (bad) std (bad) jge xchg daa sbb adc push xlat repz pop push mov dec cld lret mov cwtl insl lcall mov fdivrl push or iret mov inc inc cmp je adc or sub iret inc aaa movsl repnz aaa dec mov push jnp pusha fldenv (bad) gs popa and sti lods and pop mov mov mov or cmc xchg outsb xchg clc pushf pop out inc xchg cmp mov dec dec ljmp xchg mov mov dec dec sbb cmpsb fmuls push cld or cmpsb push jp mov scas fidivr inc mov pop ja jecxz icebp repnz repz jo jno dec add movsl outsb test jnp jge mov push inc jge push mov cmp test mov idivb adc push lret aam repz pop cld jo dec add ds sbb lcall imul pusha mov addr16 or fsts dec sbb pushf push (bad) sbb add add cwtl inc jmp cmp pop leave shrb out dec cmp mov jbe mov xchg push adc cmp push dec xor cltd push xchg pop fs loope or repz add sahf xlat fwait dec test and ret test and mov add or shrl and nop mov daa mov cmp fnstcw in out ret insb (bad) cmp rcr mov mov pop (bad) jb sub nop (bad) sbb aas dec mov push or leave pop add mov jp mull mov imul and ficom pop ds into into add out outsb out xchg mov jl or jns jno,pn loop scas lds jp add jg clc stos lock sti pop adc dec add roll je in mov push xchg sahf dec ds dec push call leave call mov fwait es push test push cmp call lock test xor cmp test push in xchg dec imul pop idiv xchg inc lret jg jne test add dec out push sub fistp das ja xchg mov mov inc pop dec (bad) xor mov fnstenv lods rcll dec mov add xor push push cld addr16 repz sub mov clc inc (bad) xor pop mov jae mov and shll mov sub jmp fisttp dec js fwait add mov dec dec imul push fidiv icebp inc xchg int imul lods sbb fmuls inc inc outsb mov (bad) mov stos push insl out cwtl xor sub in pop insl or dec mov jb (bad) mov sbb and or sub sbb jbe shlb movsl jnp xchg call mov (bad) jnp aas call push lret pop call insl sbb sahf outsb lock push gs xchg fldl2t in inc sub xchg repz cmp insb mov cmpsb (bad) test movsb dec xchg xchg jp das mov mov shl push push out push test shr ss ret cli lahf lods jae mov mov add or aaa pop add xchg mov mov lods test repnz xor or sbb push shrl jmp cmp push gs cmp xchg mov scas dec (bad) mov xchg outsl or stc adc inc mov cmp sarl jmp add push (bad) push lods pop push mov bound pop pusha iret leave adc pop sub out (bad) ljmp mov pop les and cmp cwtl repnz call popa jge xor iret push ret sahf insb adc jmp ss ret fs (bad) jo jmp jae jo shrl dec test fsubrl stos adc ss xchg inc xchg cld mov jmp rep test cmc out (bad) (bad) insl ljmp movsl push les cmpsl imul jne fdiv sti sbb adc out xor xchg push mov js or iret xchg lock xlat fildll or fdivrp stc iret insl gs aad popa mulb mov ss mov data16 sbb sbb das xor sbb (bad) push mov lret adcb adcl push in mov sub frstor insb popa cmp jg mov cld sahf adc int3 jl cmpsb push xchg gs sti mov outsb das sub push dec pop pop push jge add mov sbb out mov test xchg enter (bad) int pop sahf fs jno leave xor (bad) sbb mov sti inc and (bad) stc ja and jg pushf add stos sub push mov stos insl jno xor jmp repz add sbb sbb cmp int3 cmpsb push (bad) insl inc nop les mov jp cld or sbb pop pusha lock add jecxz jge push out enter pushf jg jns lret jl inc jnp es cmp cmpsl adc mov inc mov loopne adc arpl fninit sbb cs pop xchg mov sbb sbb mov mov push ljmp cwtl ss pop (bad) stc jle mov bswap inc in xchg xchg lcall mov jnp pusha (bad) mov loopne or or adc dec ret test mov xor jns cmp and cmpsb and dec insb adc stos or jne mov inc cmp push or outsb inc jns test repz jbe out inc ja loop (bad) push fist rcr test loope icebp mov fistp ret and xlat cmp aam jns xor (bad) fsts mov pop icebp sub lret xor mov repnz push movsl xlat xor sbb sahf lods push aam add push jb push jno mov leave shll add pop jno pop fcomip movsl psubsb int mov fisttp out push mov leave mov push fist xor iret in test xchg loope das mov mov cmpsl mov xor add fildll imul sub call ficompl sarl scas sbb lahf mov roll mov (bad) jmp jns add inc cwtl inc mov arpl adc dec and jg imul pop or sahf mov jo loopne shrb cmp adc push pushf fs jb fistl mov jp sub repnz xchg stos loope xchg push les and popf popa mov jmp stc inc mov insb imul leave jmp in cmp pop sub es dec sahf jb mov repz hlt jmp adcb dec movsb jl incb stos enter pop sarb imul inc lcall mov lret repz bswap sub jle and mov les xchg sub cwtl nop xor (bad) outsb sbb inc sub cmp sbb jle sub hlt xor addr16 dec or ljmp dec jl roll xchg push add insb push xor adc outsb and xchg pop pop mov popa popf nop scas add cmp pusha leave call movsl lcall addl ljmp rclb leave cmp push sub frstor insl jbe insl test cmpl pop dec and cli fbstp mov insl adc enter add push mov inc repnz repnz and jns in add out jnp arpl nop call cltd inc push cmc pushf or sbb push iret push sti mov adc (bad) leave dec sarb xchg enter dec icebp xchg out sub adc cmp fisttp pop or bound sub lods adc add loop xorl test sbb or std sbb shll inc jbe ret loop (bad) adc inc mulb mov cwtl xchg pop and sbb scas dec dec lock mov jmp jp fisttpll scas cmpsb push mov add dec inc adc adc sub rcrb jae pop sbb push mov jge cmp das (bad) and mov cs enter ret test pop es clc mov addr16 push popa and jl fisttpl cmpsb sub mov insl or jg out mov mov xor sbbl push rorb cs pop push sbb daa cmp fsts (bad) in mov xchg stos inc stos jae dec insl push roll test enter cmp mov in mov add sbb rcrl xor push stos cmp mov inc push inc xlat jo push movb xor mov cmp xchg cmp cwtl out add jbe sbb xchg in sbb sahf inc push sbb iret icebp loope (bad) adc xchg aam add test scas mov push es test add mov test jnp loope out mov (bad) pop sbb pop dec popa mov pop push cmpsl call fadds add xchg addr16 mov dec xor es pusha lods (bad) pop dec cmp (bad) mov iret mov jge testl lret cmp sub ss scas sbb subb je enter inc (bad) nop sub inc (bad) or dec jecxz lods (bad) jmp lcall push inc xchg fwait adc mov inc out (bad) sbb out xor jnp dec cmp dec xchg lods adc sub sbb fcoml mov aam cmp mov mov inc jl xorb movsb push call imul adc dec js mov in and xor iret and mov call or jge xchg add mov iret sbb sub (bad) es dec sbb aad test pusha xchg and les mov out inc dec cmp cmpsl dec sti dec and mov nop or sub out stc pop sbb pop fiaddl (bad) int inc or cs inc cmc ss aaa fildll iret inc mov xor nop pusha in mov shr out xchg mov shr push push mov xchg mov xor jb les mov sub xor repz adc popf gs sbb imul xor imul pop pop lods xlat mov lock sub jne add mov inc sbb scas cmpsb mov (bad) ja les or or fidivr and xchg inc xchg pop aam adc mov dec add out arpl sbb iret sahf xor xchg xchg xchg ret xchg jne xchg std mov sub or nop mov popf mov and mov andb jp jle adc bound stos jp lcall or mov add insl cmp xchg sub and jge or jne mov xchg push aas cli es (bad) dec cli popa sub sub and add mov pop mov gs add xchg daa mov orl lahf sbb push sub jecxz daa mov fadds mov lds adc jno rcl xchg roll nop test push out xchg sbb icebp push bswap cmp test ja daa push nop dec fimul cmc loop push cli jecxz xlat dec cwtl mov rclb or add pusha xor cmp inc mov int aaa (bad) mov dec popl shl pop loope sti mov and (bad) cmp and stc (bad) pushf mov add int das add inc arpl addr16 or mov mov add fs xor sbb dec fadds dec scas fnstcw mov imul aaa and add in mov (bad) cmpsl fstpl xor test frndint mov jno loop daa jecxz xchg addr16 sbb fs jecxz aas (bad) in pusha sub movsb mov xor dec stos pop sub inc mov and dec and pop js imul shrl ss into daa popa mov rorb jp,pn repnz (bad) int3 scas jp push sub mov cmp push xor mov sbb sub (bad) int lret je lcall subl pop pop cmp js mov shrb fldenv mov (bad) outsb xchg mov insl fs cmp mov arpl cmp out sbb adc addr16 cmc xor or ret pop movb inc int data16 (bad) mov imulb outsl xchg stc es lock mov in inc mov pop sbb test jl dec sbb xchg popa (bad) jo lods clc sbb (bad) add iret repnz call xlat lret in add jle inc push mov (bad) test mov sti and or test or pop pop and lahf add jmp pop andl in mov mov adc sbb je fistpl (bad) je or cs shrl xlat push xchg es or aaa orl test imul enter xchg xor dec lods cmp test or cmpsb mov jb jne mov xchg (bad) or sub in repz pop call jns std pop cmp insb pop enter pushf add call test push lea xchg imulb movsb fbstp lcall mov movsl int and in fldt shrl xor mov out push loopne cmp add add inc sbb xor lret gs std out mov jle jbe mov scas clc mov in sbb dec mov loop or dec idiv xchg pop add add push push xor addr16 mulb sub adcl pop sub mov pop and (bad) sbb push test push int3 std mov jo dec adc jp inc or add mov push sub dec les outsl (bad) pop es sbb and cmpsl inc addr16 ret xchg sbbl xchg (bad) lds outsl sub test jg xchg mov into lahf adc hlt cmp aaa scas mov sbb bound (bad) push mov std jns stos adc or jnp enter xchg roll test mov mov add pushf cmp inc push mov add adc ret mov call cli xchg bound push (bad) jne inc shrl jo fwait pop push xor mov jbe lods xorb sbb mov and int3 inc xlat jb and (bad) jecxz add adc sbb xor in dec add push push shrl push inc mov cmpsb iret add lods cmp daa shl jl (bad) mov fsts es push inc int3 adc (bad) jno cwtl jmp push scas data16 and push fcmove xor pop xor push xor mov call sub addl icebp jns lods jmp xor mov add sub lret ror aam dec pop mov lcall mov test xor mov xchg inc mov add xor mov mov (bad) mov movsl push xchg andb mov dec lret cwtl xor jno ficomp pushf inc mov sbb cmc lock and mov lock cs pop pop test cmpsb int3 fdivrs cmpsb mov lahf mov adc fwait cmp adc xor int arpl jns ds test mov add lahf cmp push push movsl mov and ret jmp (bad) jno add jge pop push fistl or add fiaddl loop das fistl pop ficompl bound pmaddwd stos pop loop cmpsb sub dec sub sub dec fisttpll rclb or xor ljmp test aam out sbb loopne xchg pop gs (bad) lods aaa jp xchg and (bad) dec lods popl sti xchg cmp push adcl mov push aam sub jno btr cmp fs dec repz jno sbb inc or add and push (bad) out in mov sub aas or iret outsl push sti orps pop push outsl (bad) cmpsl and fnstsw cmp jne mov xchg adc inc mov mov scas movsb add pop loop pop pop and mov fimul fwait es nop sub push adc loope mov mov mov movsb xor and lcall xor sub push xchg xor popf xchg ret sub mov xor cltd leave and out mov push push pop pop fidivl jns and sarb inc mov mov test inc and mov xchg shlb jno dec cmpsl mov pushl js mov adc mov (bad) insl xchg out dec adc orl mov sbb adc pop push and lods adc sahf mov testb insb je and xor std sti lods (bad) popa test push (bad) or add push jg cmp stc rcrl xor cs bound rcrl lcallw sbb insl pushf or clc shrb cld data16 jb and mov (bad) daa test pop mov aaa pop jo adc fdivr pop dec sbb int3 jno dec fnstenv mov sbb mov dec lods jne aas jge inc push jne sub (bad) aaa or popf stc xor imul fistpl sub fs leave mov cwtl lods imul (bad) xchg cld icebp int xrelease hlt scas lods (bad) mov mov mov mov jo (bad) ds or addr16 sti popf fcompl jne xchg int cmc push andl mov inc shlb add bound push into mov mov jne mov mov or loop daa and es cmp fstpl and push dec and and clc mov cmp aad pop jecxz,pn mov mov (bad) je and sbb rcl or pop inc aad dec cmpsb push stc mov adc pop ret lea mov mov jp jmp sbb clc out in xchg mov mov daa mov inc lods pusha add pop jbe mov mov mov jge mov cmc push jl inc cmp add cld adc test loop xlat sub lret or dec fiaddl push jne inc adcl mov push stos movsl adc rcll (bad) mov dec ret mov and xchg mov dec fstps xchg fisub mov mov xchg xor sub out jo mov xor divb enter jge dec add (bad) fild ss out xchg xor cld sub in stos ret pop hlt (bad) sub int3 popa pop lahf ja push test mov xchg sub ret es xchg inc fdivrl (bad) rcll je rolb mov or lret pop (bad) popf fstpl mov sar dec dec gs lahf in stos mov hlt (bad) out mov mov loop or sub xchg clc ljmp or pop ljmp enter imul xchg xchg cmp repz pop mov outsl pusha adc test cmpsb add clc xor and push add mov aaa icebp sti int3 inc pop xchg push aaa adc out sbb jmp pop jg push xchg rcl xchg push shrl pop daa daa xchg (bad) mov inc mov fcmove stos fsub add add pop adc push movsb and mov push xchg rcrb mov outsb pop in xor iret jmp and sub fdivrp mov sbb fldl mov es adc fimull sahf aaa xor dec leave lods sti (bad) lret and mov jns (bad) jne loopne mov cld xchg mov cs pushf dec dec or inc adc fwait push outsb (bad) insl pushf dec jbe mov mov mov mov mov fwait dec fwait push xchg pop or mov repz shll jo sub sub repnz sbb mov mov hlt cmp popf cmp out jg std rcrl pusha mov fs sahf sbb mov (bad) ret mov rclb rcr add out cmp or mov pop push sti mulb mov inc or repnz jb cld call sbb hlt jmp fidiv imul cmpsl jge xchg pop out add test arpl out jg loopne cmp in cmc or lahf (bad) cmp cmp into add bound out xchg cmp scas xchg call push jmp jns (bad) dec cltd popf aaa mov jg or cmp fisubrl mov push lahf xor xor scas jnp es jbe mov lret stos cmp inc inc add ljmp push enter mov scas out frstor pop inc ret (bad) lock dec test cmp mov adc sarb lret dec clc cmp jae jno jnp pop pop inc inc movsl push xor mov out in dec (bad) jno xchg sub loop jg arpl adc dec iret push jns mov cld mov push je or incl mov inc imul addl add xchg and lds (bad) test icebp fidivrl outsl sbb jg fwait mov mov (bad) faddp arpl aam mov cmp mov jbe mov cld andl mov aas cmp inc pop lods dec cmpsl insb mov aas (bad) (bad) (bad) xchg push pop sti js shlb fnstsw adc sub setge andl or ror test pop divl push mov and dec push into mov rcrl xchg faddp sub enter pop in mov (bad) out xchg xchg and loop sti dec push adc mov xchg fisubrl jmp lret cmp pop sub mov push repz scas mov inc pop mov test frstor scas dec nop (bad) sti cmp rep test sbb cmp outsl dec xchg mov adc out (bad) cld ja (bad) jns pop push enter negl hlt sbb jmp sti ss (bad) lock popa push xchg mov mov out mov movsl sub repnz aas sarl cltd imul sahf movsl fwait push cwtl call (bad) jne les ret (bad) push xchg stc fistpll lret pusha mov adc xchg mov inc lods imul nop fwait jns dec jmp push mov dec mov push dec clc lds mov sahf loope int and jns push dec in (bad) add out mov mov aam addr16 icebp dec add enter xor jmp sbb hlt sbb sub or std jnp lock xor mov movsb fcmovbe mov xorb and divl dec arpl out test sti xchg popa xchg jb xchg inc aad fidivr xchg cwtl add and mov lds xor repnz jno lock push or subl inc adc lret push repnz loop cmp outsb fistpl push add and fstps jmp aas adc mov sbb adc push mov lret mov xchg pop inc jns shrb lret add addr16 or xchg mov stos pop mov pop or mov pusha into and in mov mov cmp out mov (bad) xchg lea mov movb xchg push sub jno jge mov andl sbb mov jnp insb pop or outsb mov aam out sbb and jns cmp insl sub or cwtl pop push call inc add jg inc jo adc xchg push push les lods dec lahf pop and mov in or inc push outsb ds (bad) out sti mov dec mov pop cmp sub mov xor iret outsl adc jg mov xor movsl out lods test push jns pop dec cmpb push (bad) mov push or in pop jg lods mov mov mov push sahf pop decb loop lods dec mov gs inc inc inc stc push pop add jno lods and lea aas pushf fisttpll je mov dec imul pop out mov int3 fisttp in jmp xacquire (bad) test popf mov (bad) int3 push movsb mov out lahf cmpsb cmpsl sub cmp mov in (bad) js jp jns (bad) ficompl mov jns and leave jne (bad) out xlat sbb es mov loop mov adc jge les pushf movaps pop (bad) fdivp or sbb xlat int mov mov cmp icebp jnp rolb aas add push pushf aaa dec mull sti jle mov imulb iret cwtl push pushf mov ret into cld mov sahf std cwtl or mov lds mov xchg push js js aas dec and xchg sub cmp or jmp mov and test and fisubl push sbb test sub push ja stc mov popa fldenv test mov cmp xchg mov inc shll mov push jmp sti xor mov or pop popa adc cld and mov mov sbb test sbb sti push mov rcrl jae adc lahf jo movsb add pop in loop (bad) xlat jl xchg bound or ds lret push bound mov dec inc repnz lret adc rorl push xchg push movsl cld push in push call sti adc cld aas pop push pushf cwtl mull shrb rolb jmp in inc adc das add das mov sub pop mov les (bad) jae scas jae enter insl call sbb dec das (bad) jno icebp sub inc dec dec sub cmpsb vunpcklps jmp lahf xchg push lahf xor lret repnz add xchg loopne mov test pusha aad ja or lcall imul lods sub sbb inc fist fiadd or rol fildl addl and and add shl xchg xchg loope into out jbe mov or inc xor xchg imul mov mov (bad) cmp addr16 ljmp ds cmp xor jns pop fucom je fwait sbb int aad jbe dec sub sub aaa mulb mov paddsw push pop push jg dec sub push jge cmpsl and gs fadds aad inc shrl repz sub jnp cmp xorb test sub into mov pop test pop and xchg and xchg fsts sub push mov adc pop xor lods aas (bad) pop jp push mov cmp sarb inc fimull push pop pop les and (bad) fadd stos aad jb clc xchg push push push inc cmc inc xchg pop movsb popa xor gs mov sub cwtl sbb std sbb (bad) jns cli js jl mov ds pop jg mov les or mov (bad) xor sub sub mov nop dec ja pop sti jecxz lock in int out test mov dec insb hlt clc outsb int mov jbe insl into push ficom mov call and cmp lahf mov add or cmp pop adc jle jl mov xchg mov sar loope data16 imul xor int3 push lret fdivl (bad) adc ret mov repnz call add mov cld das imul lods lahf ja imul notb mov gs dec andl aam or xchg fstl aas shl adc fiadd in mov arpl pop or jno faddp pop je pop inc mov ret jge push mov iret call mov xchg cmp loope cmp fcmove stos dec mov ss jge lcall lret (bad) mov push sbb jmp in or stos xchg int js pushf adc loope inc mov jae addr16 arpl inc adc dec sarb loopne pop scas loopne mul adc pop sub adc dec xchg mov pop out stc push sti mov inc pop or cli adc push mov sti pop lods mov mov bound gs fnstenv lret popa jo cmp cli cwtl mov xchg loopne or mov popa pop push icebp sub add jecxz push inc (bad) push in in cld dec push ret pop push adc and dec jbe div stos mov adc insb arpl movsl aas xchg dec sub or icebp ja lods pusha pop dec push cmpsl pop mov repz dec das aas inc lret jno mov mov sub scas insl mov add (bad) sub pushf pushf adc bnd insl xchg stos mov sbb pmullw cmp pushf pop cmpsl inc cmp mov enter ret pop imul lods xchg outsb add jns or fbstp sbb mov sub ret mov loope fs andl cmc call pop xor add nop fcoml pop cwtl xlat (bad) repnz faddp cmp or pop mov and jbe dec imul and dec jle push push mov sub inc inc imul jae inc adcl (bad) sub ja lahf es je mov pop outsb inc cmp popa and or mov bsr clc adc in adc mov xchg push ret jp in addb or xorb popa iret popa popl popa cmp int3 movsl sbb imul mov jge push sub pushf ss add xor pop int aam popa in fldl jmp call push std jbe lcall adc xor shr mov xchg and lcall fcom loope push mov cmp negl cmp inc js js fidiv inc (bad) fwait or and ret mov jnp xchg mov jp test xlat jns sbb lods inc sub lods adc xchg lret (bad) daa iret inc ss lret mov dec je icebp xchg cltd rclb cs in push scas inc rolb cwtl lds (bad) jns xor push (bad) les sub cmp movsb out xchg fucom adc fs push iret mov sbb ss int3 out mov ljmp mov push scas dec jle nop add inc inc lds aaa subl jg mov pop call cltd and icebp inc inc mov aad adc clc jno insl lcall addr16 xlat mov push dec enter jmp cltd xchg paddusw dec sub cltd dec xchg mov jl or ss ret mov loop or pop cmp adc arpl gs enter mov mov xchg ss mov mov push cmp xor arpl and packuswb imul outsl imul xchg or inc xlat testl mov addb xchg jbe push into xlat jne stos jb in in cmc pop test fs cmpsb insl dec stc je sbb imul jecxz ljmp data16 fnstcw xchg and into rclb int ja into (bad) aaa jecxz insb cmp orb in add xor cmp (bad) jno inc xchg aam repnz insb imul shl insl and mov sub jmp adc and push je (bad) (bad) push push and add decl decl and repz mov or push stos imull add leave popf jo jmp jbe mov pop xchg rcrb mov push push lahf mov dec sarl jmp cmp imul inc dec pop push dec mov push shll pop cmpsb (bad) ljmp jnp lds cli fstps push repnz xor jle shlb add hlt mov lcallw pop fs nop data16 leave jmp xlat adc add pop or (bad) cmp repnz pop and or stos cli inc cwtl test mov test pop lcall jo jns fwait pop inc dec adc clc sub inc mov push xor (bad) mov sub push cmp cmpsl or mov ret adc (bad) sbb mov arpl daa inc jmp add jg clc call mov loope cmp and cs xchg leave pop ret ds mov jl jne fdivrl inc or shll shr jge iret pushf push add dec sbb jge movsb iret pop gs inc dec cltd fsubrl jmp inc push in mov xchg stc pop sarb roll nop mov sahf jns dec scas push jle dec (bad) insb xor pop adc dec fdiv ret outsb aad or jge repz sarl fnstcw stos mov dec inc loope xchg inc lret push addr16 in cmp mov call (bad) (bad) xor xchg fld mov stos pop xchg sub and movsb or addr16 pop pop add shl mov out les mov subb jno adc lock fistpl pop test mov lahf jl inc pop popf inc cmp ljmp cmp mov mov cmpsb mov dec adc add pushf dec int push or pop xor dec xor test push jge fstps bound leave pushf test test mov sti mov inc sub push jns pop div sahf pusha shlb sub scas iret imulb cmp jg pop inc es mov int3 aad fistp mov scas (bad) mov jecxz cs mov jg std fs mov pop or bnd push mov dec mov sbb or (bad) icebp dec into mov mov dec (bad) ss cwtl mov pop pop fdivrl cmp (bad) jl push lds xchg cmpsb sahf mov xor test aaa and (bad) dec (bad) mov sbb sub arpl fcoml and jp cmp mov mov lods adc add jle adc xor jl pop movsb or out push (bad) sbb pop flds negl sub std mov add or xor adc outsb out loop rorl dec jne out push sbb sbb jnp dec mov call rcr movsl leave inc loopne les pop (bad) mov ds lahf jmp push faddl xchg lret lds loopne test out fdivrs enter ret and push addr16 mov mov xchg lret movsl shlb es scas push lds dec repnz idivb ret out (bad) fs mov mov or mov jnp dec shll xchg jg adc call aas fidiv inc cmpsb outsl popf push rclb inc orl popa in inc repnz adc inc fst arpl inc ret and pop pop aad inc pop add fwait pop aam add cs add insb es repnz es stc cmpsb sub ss mov outsb sub sahf cltd mov es test aad loopne xor dec xor xchg xor outsb in hlt cltd insl jae in inc lods (bad) adc mov mov pop mov or sbb dec lret ret and inc sti pop hlt stos xor dec sub std sub and mov stos jnp xor push cmp cld xor aas ret stos notl loope sbb stc push add in popf lret sub stc pop pop in scas pop push add iret (bad) mov xor jmp cs xor test leave xor push lret cmp xchg pop test jp dec push pop cmpsl jbe cmp ljmp loopne (bad) stos lret cmp xchg lahf sub icebp push imul mov (bad) jae sti cs outsl fildl and divl addl adc and or add xchg (bad) adc sub lock stos cmpsl clc mov xor xchg pop jne cmpsb or mov pusha cli fiadd les dec fiadd out xchg jns sbbl shrb inc movsl mov push mov cwtl std pop repz mov gs sbb leave (bad) or and inc lahf popf pop mov push fsts sub or ds fsubl mov iret ljmp test imulb fcoml pop xchg pop pop lock cmp ret movsb lods pushf lods fwait sub rolb ljmp mov rorb xlat add call test jge or push push or call mov call inc in icebp lods inc xorl lahf pop jmp mov xchg popa fidivrl insl pusha mov push mov mov push push mov xchg (bad) aam push push pop xor call jns ljmp jge xlat push fstpt mov loop loop mov sbb stos inc les cmc inc hlt inc out rcr inc cmp rclb cmp lds and es and sbb dec dec ljmp mov ret dec cwtl cmp test pusha mov sbb xor sub or or sub dec mov dec inc fisub popf pop adc movsl pop cltd enter add sub dec in mov shlb int fisttpll push xchg in jmp mov mov aas adc jecxz xchg enter sbb and andb movsl lret negb adc mov data16 cld add mov xchg in dec out lcall cmp test sbb enter jbe aas xchg mov sarl or inc fisttpl add out inc imul lret jnp pop pop mov imul push aad and fildll mov ja sub or jmp jg pop inc push or inc add push inc jne lods xor lret xchg push jmp cmpb mov ret pop shlb imul ja pop test jno std mov jge jns je mov not xchg pushf pop loope or sub movsb lret adcb bound dec and pop (bad) ljmp push aas inc lods xchg sub or int inc inc cmc or xor loope outsb cwtl bound test dec cli cwtl inc fisub popf fmuls mov dec aam push pop in inc mov lcall jo jo jecxz (bad) and movsl icebp push lahf aas pop clc add cmp scas (bad) test call pusha push repnz addl push dec pop andl dec cmp lahf push xchg ja std pusha or subl sbb mov jmp fsub pop hlt jge and jbe cltd lret movsb xor aas repz addl shrb iret pop push xchg loope pop xor push jmp popaw xchg dec popf adc stos and invd or sbb popa (bad) jg pop and jnp push inc sub icebp pop jg dec jbe mov or stos dec in in ret sbb fistl inc mov repnz test lods pop jp fiadd add popa mov push (bad) or add mull push cmpb dec mov ljmp clc mov ss das push fwait push inc out mov mov jnp test adc push pop ficomp in cltd mov adc incl sahf push xchg dec cmp (bad) bound xor (bad) xlat fidivrl sub dec (bad) mov nop aam pop sub pop inc and (bad) add dec dec mov lcall jle (bad) lret inc (bad) xchg lret or xor xlat (bad) fisubr fmull ss jp add sbb das xorb jg adc cs sub jge push inc xchg sarb add negb leave movsb cli push lods mov loopne or adc loop mov fwait inc add mov cwtl or es inc gs mov cmc movsl loope subl cwtl lea mov movsl test push mov inc jecxz (bad) cmp pop fistpl data16 lcall add lods add in push enter out push dec xor lret addb clc mov mov cmp and mov (bad) mov or aad daa les rcl inc jl mov (bad) cmp push fucomp pop hlt iret (bad) cmc jl bound addr16 popf int3 push aad sbb push adc stos cmp pop pop jmp jmp or add mov sub sbb cmp mov out dec pop in pop ss dec (bad) int3 add out insl fdivl es jno fadds dec mov xchg cmc stos push cmc xor mov sti cltd out xor mov dec std and inc dec add jp int3 movsl xor in gs cmp stos cs mov imul (bad) invd nop adc cmp in fsubrl stos dec add (bad) mov sbb in cmp std xor add jg mov es fimull sub andl xor and jno ja mov (bad) in aas lods hlt into lea cmp sti lahf xlat (bad) mov daa push cmp xchg jbe or (bad) ffreep dec add push cli rclb cld lcall hlt cmp add or sbb loop pop jbe cmc addr16 mov js cs adc jmp fucom push loope sbb xchg jne stos adc push ficomp mov repz mov push inc aam inc es test mov pop inc sbb stos cld and mov xchg pop (bad) jae in xchg and sub sub mov dec rolb movsbl fdiv fstpl das nop xchg ret dec lds cmpsb dec movsl cmp adc dec push mov mov dec mov and mov icebp shrl adc push outsl xchg push xchg sbb mov std in test add sub sti popf mov dec repnz sub ja test push nop sub push data16 jg test push or pushf sbb add add cmpsb push dec xor daa ret fwait jecxz fcoml push mov jno xchg cli adc push pop push addr16 pop add jne sti (bad) sbb loopne ret mov adc hlt scas inc mov (bad) mov imulb sti loopne loopne push (bad) xor imul testl arpl insl rorl iret inc mov test xchg (bad) push push mov imul shlb mov push inc imul push dec mov out int dec xor push mov dec lock js xor lds aam ljmp arpl or notl fistpl pop jl cwtl cmp (bad) jnp imul push xchg xchg into fstl ja test push or add and sbb lcall push repnz jmp sub out ljmp or clc push das xor xchg xchg cltd fcomip sub test cli inc stc add push lahf shrb sbb mov xchg cltd jns shl mov dec mov int mov sbbl jno push mov mov loopne in jae,pt cmp adc loop (bad) mov mov push sarl sbb js push pop jne inc rcll insl mov xor cmp cmpsl xchg dec add adc pop int3 in std xor mov or in int3 lret dec inc rorb outsl repnz jle and push fmull jmp fimull dec mov and jge mov fcmovnbe fs in in push adc std jo jns stc (bad) movsl dec dec clc call mov mov fwait aam rorl scas mov inc sub and test mov in xor out mov aam push rorb insl cltd arpl insb jnp hlt pop or sub mov jecxz mov mov jp stos push (bad) mov pop mov clc imull out icebp pop mov jae sub and xchg mov in loopne adcl jmp jp repz jge jno jge jns mov jae push in pop jl bound xchg push pop es popf hlt fdivrl lret out pop test sub nop jne imul test insb dec inc (bad) enter fbstp jp sub xchg xchg pop ljmp sar mov into mov xchg hlt into inc xor imul mov imul dec adcl pop scas test xchg push xchg dec jl loop pop sbb (bad) in lods xchg and cmpsl cwtl aaa adc ret stos ss or add add push sarb stos lock mov out inc sub and fs sahf jb cmp and enter repz xchg and dec movsl popf (bad) ffreep shrb ret bound outsb stos (bad) stos xor lods out (bad) cwtl xchg dec adc mov lahf lret pusha fs xchg pop (bad) iret xor inc mov mov mov daa xor and ret xchg nop dec cmp pop pop into jecxz les cmp jnp adc sahf fisttpll adc xor fwait repz inc imul pop rcl je roll add inc jle repnz sub sub xchg (bad) lcall lea xchg jp mov sahf sti test sbbl sub lods or dec mov inc mov cmp cmp push mov aaa dec scas xlat outsl cmp repnz xor loopne (bad) pop add test inc stc jp adc xchg out inc (bad) (bad) lea ret popa or mov js mov push xchg inc popa outsb outsl aad lret xor fimull lret ds dec add inc rcr inc dec fwait inc and mov cs inc popa cmp out cmp pop fsub test fbstp arpl fist ljmp jp xor xchg cmp push (bad) std bound enter pop add inc xor addr16 or mov sub ret add aaa cmpsb jge push mov lock jno shlb xor pushf dec adc add insl adc add aas pop mov nop enter mov loopne mov mov mov xchg stc adc lods loope adc lods fsubrs (bad) jl add (bad) nop mov pop test std hlt loop pop or or ss cmpsl push call add pop mov pop add push jne mov fidiv mov add cmc pop lahf addr16 outsl pop rcrb daa mov mov lahf inc fdivrl lods mov popfw mov fcmovu out std sahf or es popa add inc xor dec or (bad) mov lret jo adc test mov mov jnp cmp stc daa jae push or scas jno cmp shrb ja pop scas movsb cmp sbb push jno mov add and insl mov inc inc subl add push mov jle in sar sbb add popf aam jbe cmpsb sar pop call mov sti lds (bad) movsl cmpb jo jle pop gs cmp xlat aad das inc dec cmp sbb add ja ss add aam push (bad) jmp push test add inc inc mov stc xchg jb jns jne mov std xchg loop fisub out out inc add je (bad) leave dec jmp test jl insl cmp xor fs pop jl mov push mov inc and mov xchg cmp hlt lcall push inc test jmp mov push loopne adc cmc fistp dec mov shr test mov mov inc dec push xor lcall (bad) fiaddl mov push pop lahf dec cmp mov mov nop orl mov outsl and inc das fs dec stos add (bad) push sbb out mov daa push (bad) mov adc js cmpsl cltd std sub xchg mov repz dec nop pop jl lods pop test inc xor add and sbb xchg jbe sbb mov repnz mov add jge test std mov andl jae push jl adc lods popf mov xchg add clc pop mov shrl incl cmp xchg cmp sbb mov les inc cmp loopne mov adc insb xchg push mov daa sets popf pop fsubr xchg lods sbb jb fimul and rorb inc mov es (bad) repnz adc rorb jle gs cwtl cmp ja or jg ret in loop or jnp xchg cmp mov adc sbb mov in sahf test daa or cwtl outsl pop push div aam jmp rorl leave jnp push dec out jno ja fldenv cmpsb rolb gs push fstpt std insb xlat les add cld adc imul pop mov lea das or xchg mov mov adc mov (bad) dec test or xor je stos das shlb jb repnz mov (bad) jno add lahf lods test add inc add lods in add pcmpgtd or imul inc mov repz cwtl mov mov push lret cmp scas into bound mov and push fldt inc cwtl push stc xchg incb outsb inc inc mov add cmp mov out sub adc or daa pop dec iret je lock fidiv das add inc gs xor lret dec sub and lcall repnz (bad) jl push stc jno sbb cmp dec push aam or jo ret (bad) lcall or movsb int3 daa lods mov aad xlat enter lds and insb popf in mov xchg or cmpsb sti lret enter movl push push xchg cmc mov xchg and xchg or cltd mov (bad) jecxz fistl inc inc call (bad) out test add test mov adc addr16 and push les add xor fdivs xchg cld adc xchg mov pop xor aad pop (bad) sbb and xor push roll xchg inc and loopne mov inc push xor sub je or adc cmp repz stos jecxz xchg int3 and lea push xchg lods jbe shrl inc push and cmc mov repnz lea push mov adc and inc daa push xlat mov dec scas inc ljmp arpl jo xor andl (bad) inc pop jae dec pop mov cltd ret jns cld adc int3 mov ja xor nop test push pop int3 mov xor jne push mov test in sbbb cld jmp daa sbb rorl sub sub xorb leave dec les sub (bad) cmp dec ret sbb lds lods inc push (bad) pop aas dec fldl fadd pop imul fdivl push push mov add sbb mov fiaddl mov jnp loop aad cmp jbe popf out adcl movsb push loop cmpl (bad) bnd adc aas adc dec bound bts push nop cmp fwait int3 xchg xchg insb and pop cmp int add jp xchg pop cmp push pop xchg xchg inc lea pop push lds mov pop testb xchg xlat dec leave pop push aam cltd add push (bad) imul in das call or mov nop cmp sub popl mov mov push mov sub xchg movsl jl aas jle iret fidivr dec xlat jp lcall push popf adcl lock mov xchg es pop lret hlt push push add pop hlt int3 mov jmp cli add push shlb (bad) mov push jmp jo mov dec jae mov xor push add or sbb pushf dec and pop mov das xor aas dec repz stc mov aad (bad) lahf hlt sub leave (bad) fidivr jo jge xchg jl dec jo aam (bad) xor push dec (bad) push pop adc ret xor push shrl xchg sub and mov and fcompl lods pop mov sbb mov iret cmpsl lcall sub les sub (bad) inc arpl adc push addr16 xchg int sub or inc pop mov add enter loopne jg daa loop dec cmpl xchg mov daa mov push cmc cmp cmc les popa add popw iret dec xor (bad) aam pop mov push popf jno imull push in lahf les inc out leave cs xor sub inc dec test fldt and (bad) pop xchg outsb cs pop inc mov mov jl pop scas xchg std jns push pop mov dec mov js fidivr rcll push sub (bad) repz std push in lcall mov sbb faddl call mov jecxz mov sbb in mov sub push jg sub xor ljmp sbbl jmp fs push insl adc fsubrl or push loope rcl dec cmp dec add add sti and sub iret inc and xchg iret xchg or lret push cmp repnz faddl sbb or pop sbb cs lods fmul add mov clc inc mov (bad) rolb arpl push jp pop repnz dec mov adc dec js (bad) jne pop lret fdivp and mov movsl sbb push lock lahf sub sbb enter (bad) repz ds imul cmp shrb dec mov outsb sub (bad) (bad) inc adcb les iret push inc into push repz mov jmp mov adc xchg or mov (bad) in push xchg jp cmp in js mov mov xor les sbb fimull cmp cmp mov mov pop cltd adc pmaxsw lock faddp test fwait mov add cmpsl add (bad) (bad) mov arpl rcll lock out ja fwait popf push cmp cmp out inc inc loop ljmp push ljmp inc (bad) mov sbb inc leave popa stos ljmp mov aaa inc push js mov fcompl and inc daa pop fwait dec xchg jmp inc pop pushf aas xor data16 data16 adc imul repnz test out or fwait mov or pushf pop nop mov jl add lods jecxz add xor jbe pop or pop cltd cli mov inc inc inc jo adc fisttpll jecxz jo push ss push rcrl cli jbe movsb pop add xor and movsl arpl mov out in icebp mov (bad) or inc cmp adc cmp fimull push ja and or cmpb subb xchg jo or xchg cmp jne fadd andl cmpsl jno (bad) mov popa and xor stos sub lret sbb sbb sub pop std push mov jb movsb and lds mov outsl adc jl and pusha dec xchg dec mov push and add and lret mov sbb mov clc ljmp cmpsl sub sbb loopne dec jbe push xchg movl cltd xchg cs pop push xor (bad) movl cmp xor les mov (bad) and dec cwtl enter or jb inc pushf loope add xchg icebp and adc or mov insl das loop dec lods mov int3 cli sub mov sbb jle fs call leave (bad) clc test imul sub jge test pop xor es inc pop je daa in push pushf inc inc pusha fwait inc fldcw stc test mov mov adc outsb insb add repnz mov loop inc mov iret sbb ret lds repnz jb ficom repnz out leave push adc mov loope dec dec std imul dec xchg lock hlt mov xor dec mov sahf mov out xor sub inc dec xor adc int3 push adc or inc stos mov mov jae shlb push cld xchg movsl push jmp cmc movsl mov lods addl xor dec hlt cmp xor mov xchg cmp sbb fwait lcall aaa pop notl pop sub mov xor movsb stos sub sub and out jecxz movsl mov dec insl pop test fisubl (bad) dec xchg js sub jl xchg mov mov lahf push and daa out lea inc repnz outsl push push push cltd loop shlb jmp mov or or in fisubrl mov adc sbb imul aaa pop mov sbb sbb rcrb ret sarb test dec es xlat add scas sbb test mov lea push (bad) cmp cmp jae sbb mov in or mov and popa jle clc int xlat scas mov arpl or mov out les dec mov inc outsl std out xchg mov cmc sub test push test out call outsl lock test and and into (bad) or cmpsb push adc jle xchg push xor cltd enter dec jge out push xchg cli cmpsb out fwait imul sbbl mov xor and outsl pop lds xchg inc adc mov xchg add dec xor and sub sbb pop xor xchg (bad) push bound movsb (bad) mov aad or (bad) mov mov dec lock xor rclb push pop mov addr16 jl and xchg adc cs ror sbb fdiv in test insl inc and rol jne jle pop mov pop mov scas mov sub jne sub or stos pop xorl sub xor fidiv lret adcl inc movsb inc mov add sbb mov dec xchg mov test movsb (bad) movsb repnz sbb dec mov lcall sarb mov lods cmp lods sub test or adc add bound (bad) adc sahf pop lret xchg pop pop lahf mov aad lret fdiv mov push sbb pushf sub lods and add outsb sahf add lret stos cwtl rep fild je sub lods jno mov dec test xchg and lret inc sti testb xchg int lds loopne iretw push (bad) jb push jne insb and and push or xor xor adc pushf fs mov sbb ljmp enter push jecxz lods in add in pop (bad) pushw jecxz out test fstp mov or push xchg ret cmc xchg xchg push mov in dec mov mov sbb pop or inc popa dec daa in or mov imul loop stos mov xlat and mov jb or mov mov bound nop es cltd or les mov xor addl in ss fs iret push mov sbb repz pop jbe scas jle or ds xor mov ret pop pop cmp fucomp fidivrl xchg jno xchg push mov rclb xchg dec rcrl aaa (bad) mov sarl out fldenv xchg nop movsl das push and leave adc xchg or sbb cmp mov xchg mov mov sub outsb or je insl jns aas imull add (bad) jl adc adc in aad pushf add lods popf dec inc loop cs clc nop test dec dec ds push imul out rolb fiadd xlat xchg test jo sbb xchg push cmc movsb flds inc pop inc mov inc jecxz push adc cmp push and addr16 loopne les pop cs addl mov push sub stos aaa bound jle cwtl int sbb sbb (bad) mov lods (bad) imul add and hlt xchg mov std mov pop outsl xchg pushf adc add jle jecxz cmpsb sarb jns (bad) lea xchg test mov addl repnz or xchg cmpl fcmovne and outsb cmp int3 (bad) test mov leave cwtl test cli inc mov push push or xchg fsubs cmpsb xchg xor sbb insb ret mov mov or mov push xor inc mov xchg dec mov sti ja das dec sbb or arpl out xchg das cmpsl push ja mov insl arpl rclb das add andl out xlat shr out je insb push lea jp adc inc inc es jb js (bad) and call adc (bad) dec outsb push sbb (bad) push cmp scas test dec sbb or rcrl lret and inc add mov out pop xchg test xchg cmp add cmp xchg icebp pop icebp jbe in cld ja subb xor sti sti sbb and adc (bad) in sbb push in (bad) dec mov (bad) push dec icebp xchg loope xchg or xor ja pop and or icebp mov jnp in ds insl out mov les mov push jmp inc ljmp scas sbb ss jb jne rorb fcoms sub sahf sub dec lods es pop sti scas cli jb mov push gs push (bad) icebp loopne icebp mov inc daa adc shl mov sbb aad inc mov cmp cmp rcrb mov fildl psrlw scas rclb mov ret shrb lea xor push push or aas enter mov xchg dec dec mov pop mov insl ds add je add jns dec cmp shr dec jge lods ljmp mov jbe aas mov test mov out ljmp dec test je adc mov test xor mov inc push rcll jno xchg sub in or pusha negl scas call loope (bad) jno sbb iret adc mov push scas push (bad) (bad) pop rcrb inc xor int3 nopl adc cwtl pushf and shr and xor adc cmc cmp adc ret sbb (bad) insb iret cltd lock fwait jns push mov and es push sub in loop imul rcrl xor cmp xor xchg jmp push mov (bad) xor aad xorl xor dec imul mov sbb mov add fsts aad add inc loop inc xchg lret leave xchg dec sahf pop jns ds pusha pop push cmp pop dec mov mov xchg out fwait push aam push inc int3 jns and test mov pop push cmp pop xor sbb lock (bad) out mov dec out jmp insl outsb jl data16 sti stos dec cmp push pop inc fisttpl movsb daa scas dec (bad) lods jg lahf insl enter dec js stos adc mov in xor cmp in add mov push mulb nop int3 push into ljmp cwtl mov imul xchg loop mov hlt mov add jb mov jnp push scas lock iret pushf jns dec imul and popa adc pushf stos cmp xchg mov dec and adc in or inc mov push frstor sarl out mov adc test jns pop iret add lcall insb pop adc jecxz mov inc jl and outsl inc or int3 loop ret cmpsb test xchg xor mov js mov mov loope dec cmc mov mov (bad) mov gs sbb adc mov mov mov mov shll cs cmp push loopne cwtl mov arpl jne aam mov inc jb fwait ss ret inc jne mov jecxz inc jp arpl jmp inc lret std add mov mov cmpsb leave cmp test out ss pop test add out push rolb in lds roll or ljmp push in scas stos pop movsb xor xchg (bad) fnsave ret lcall add (bad) mull test adc ljmp pop dec out fldenv pushf gs inc stos out xchg aas sbb cltd loopne mov jae cmp add arpl call popa loopne (bad) iret js or xlat push aas call xor daa push (bad) fstl and jle and xor mov mov and dec lods push push lret aam mov fucomi repz add jge inc cmpsl mov sti push xlat outsl inc jns sbb std jns es xchg jnp jp es cmp ret pop mov (bad) push dec xchg add inc mov dec mov mov insb (bad) (bad) jbe call xchg sub cmp jae repz bnd sarb rol pusha mov dec gs out cmp inc inc pop mov xchg sti mov lock mov pop in xor lahf bound pop lea mov fsubrs out adc mov or fisub ja rol stos xchg icebp jle (bad) in sub cmp mov xlat mov clc mov int3 xor (bad) ror jnp inc xchg fwait inc ss aad lcall (bad) ficom insb push mov cmp lea popf inc sahf insb fwait jne ds test rorl xchg pop movswl (bad) inc cld mov cmpsl xor mov bound mov jns call enter cld and sbb cwtl repz sub arpl pushf jl clc fisubrl (bad) jnp and add ret je xlat xchg mov out push and js jns jne mov and xlat test mov add pop cmpsb dec arpl (bad) lods lds movsb add dec sub and ret xchg pop addr16 jecxz push cmpsl xor or test cmc adc mov outsb ficom inc push inc jno call mov ret fmull pop clc insl pushl jno xor test cld push sub fadds mov dec pop out push jp arpl adc andl cmp pop inc adc imull sbb adc pop ja sarb push cmpsl xchg jp mov mov stos cmp aaa dec jns mov cmp jnp jecxz iret lret mov sub push jbe adc loope nop pusha fs add sbb sbb or pop sub das cltd mov xor push mov inc rcll cwtl test sub push pop sbb cmp mov pop jns dec jl dec jno inc xor outsl call push inc xor movsl cmp pusha jo xchg cmp pop push shlb jmp nop xchg add lcall xchg mov loop mov fcompl push sbb cld ret call (bad) cmp sti fs or mov lds dec inc push rcll test or mov jne cmp int mov or mov sbb scas (bad) and jne mov frndint jbe loop and cmpsl xor xchg dec rolb pop pop and mov sbb sub and or loope mov inc call jo mov mov xor mov cs sbb adc std int test mov ret xchg imul or mov mov push sub (bad) sbb test add jecxz,pn dec roll add add mov (bad) mov scas dec xor repz arpl jg cmpsl xchg cmp (bad) jmp xor xor (bad) xor sbb clc stc dec jne shrb lea push xchg (bad) mov jns sbb pop pop inc cmp sbb inc dec add adc or outsl push lret ret inc mov cli stc ss sbb bound jge lods cs popa and xor mov xchg adc leave jo and xor loop in pop inc lret popf ds dec adc inc (bad) mov mov cmp popf jo mov cmp insl and mov push jo inc nop stos xchg inc repnz fisttp sti mov xor aaa and sub (bad) mov loopne mov (bad) mov mov es test (bad) fsubrs cmpsl lods sbb or loop,pn faddp aad lods xchg xchg jne inc sbb call data16 sub sbb push int xchg stc pop pusha imulb xchg stos adc mov ja push rorl sbb (bad) xor mov out cwtl repz xor outsb loop xchg inc sbb xchg push dec jns xor rorb pop push (bad) mov xchg popa or pop cmpsb adc jle rcl int mov dec test inc pop ror sub test mov repz xchg push scas std outsb lret out sbb lods lret xor jge test cwtl loope aad cwtl mov sbb (bad) mov fcomps idivl test test mov sahf lds aas pop movsb mov xor lock push in fisttpl rorb mov inc jne into pop adc dec aam lcall sub push leave add cwtl pop out lret sub cmp stos sarl mov ret dec jmp pop xchg pop mov jno lods cmp adc push lret mov xchg cli fisubrl xchg jp arpl (bad) mov lret daa ja lods push lret mov xor push xlat cwtl cmp mov mov or bound test xor cmpsb mov je inc cmp pop cs out push push sbb scas fs cmp sahf fidiv clc decb add inc popa je xor mov out out sub xor aas repnz push mov push (bad) stc shll mov inc jg scas loopne notb fisubrl xchg cmp je cld ret jne mov pusha cmp push pop cmp hlt (bad) in add pop xchg bnd cwtl iret xor repnz and out xchg mov add xlat (bad) cltd into daa nop push mov stc addb test popa jg (bad) in mov neg cs mov daa leave pop xchg adc fwait xchg push pop fidivl in add sub fistl popf and or mov push jbe mov pop sahf out aas scas add cmc add clc pusha js and fnstcw out jp push cmpsl int3 and add and fstpl pop jecxz and addr16 cmp test dec std lds jnp addr16 lret or incl pop loopne jns imul xchg sbbl fbld (bad) jecxz pop mov and std xorl lds lret push mov movsb lret inc jnp mov sub inc inc sarb call mov icebp popa push adc sbb jle inc mov addr16 jae pop (bad) pop (bad) cmpsl inc int cwtl jg jg rcrb shrb xor frstor stc mov xchg push cmp xorl bound dec push cmp movq repnz sub jmp rcll shlb or (bad) jbe add imul xchg (bad) shll mov xchg es ret push nop aas xchg enter aam test in rcr sahf mov mov daa and inc cli mov fistpll test ret add jne sti test loopne jo fnop mov push xlat pop ds idivb xchg movsl mov jp icebp inc and jle enter (bad) inc xchg movsl add dec lahf jbe icebp mov ja cmp int or dec dec pop ret mov mov (bad) rcr out mov pushf mov push push cmp cmp sub push sarb loopne icebp mov or mov pusha in jle push loop imul enter aas test (bad) sub lahf movsl lahf xor popa inc mov sub push (bad) and mov movsl call xlat inc repnz repz leave (bad) rclb movsl pop pop js fimul pop pop sub lahf pop add lahf cwtl sarl mov sub inc push inc pop (bad) xor push add push out fmulp dec insl cmp cmp pop add cwtl jae fndisi(8087 adc sub sarb fisttp (bad) jo xchg (bad) xchg sbbb outsl test nop cmp lret pop push sbb xor bound xor cmpsb ja aam rclb dec pop push jns xor enter subl add out adc jno iret and mov sub xor icebp cmp xchg dec scas pop xlat gs fistpll pop and xlat pop jbe test push lods lret icebp fcoms cmp jnp sub xchg pop sub jnp scas inc mov stos sarl inc (bad) jno push into in daa mov cmp xor insb sahf xchg lcall jno out sub in cmpsb cmp pop (bad) xor mov xor (bad) repz (bad) lods xchg sbb adc pop daa scas das mov (bad) leave scas std pop inc and pop js ret out push jb sbb cmc dec push in jae popa stos or pop cmp imul pop push stos pop sbb mov sbb lcall mov imul les mov testl fs scas (bad) cmp push jno mov push fs adc data16 adc loop fucomp cld fbld mov push in pop adcb inc jnp (bad) icebp push sbbl push xor add test jecxz xchg cmpsl sbb roll sbb mov (bad) aam mov outsl pop fs mov inc (bad) shrb es mov pop cmp or int3 imul cmp les add gs mov xor enter test js,pn rorb mov call (bad) jmp add pop pushf test aas movsb jo pop inc mov dec inc es inc jb les out sub in dec pop adc sub mov push xor jo push cmpsb push mov xor stos jno in stos mov inc into ja mov add jo inc push fwait movsb push cmp mov cmp sub negl int3 push lret movl push pop xchg xchg cpuid push hlt loop mov dec leave jns adc cmp jne adc dec and and mov call sbb dec jmp dec in lret in dec mov push cwtl pop xchg add sub movsb jno mov decl loope stc and mov mov push or pop push hlt fmul loop lods push xor and push loope mov das push xor jbe push outsl push addl test mov push xlat insb add lods icebp inc ficoml es mov and rorb int3 rcrl mov or push xchg push data16 xor rorb andl jb pop mov fs mov push ficoml jmp mov pop dec icebp fwait loop adc ret leave lds jge push notl test std (bad) aam xchg lods cs (bad) jle xchg and nop stc les mov int jmp pop dec ljmp out cmp test ja out sub xchg mov je mov clc inc inc push cmp dec (bad) mov pusha and loope mov pop les mov mov or dec enter cmp gs pop or loopne sti jo ss leave mov pop mov jnp out mov daa or or je ljmp fwait dec icebp fs (bad) xchg inc cmp pop imul add cli pop pop push mov in repz mov int3 cmc imul addl dec addr16 jecxz cmp adc cmp subl jl and addl mov sarb das iret insl cmp cltd daa mov sub add (bad) cmpsb cmp push out ret loope sbb mov daa push das in mov lahf mov leave mov and inc imul fstl (bad) clc sub pop push sti mov or inc jl out jae loopne cltd mov lcall fidivl mov mov inc jp aas test or xchg jb adc mov adc and stos ret sub mov lea jge es popf js loopne cmpsb xor mov imul in push dec mov mov cli pusha movsl int3 dec and jecxz hlt xchg push jne cmp pop insb cltd sub sub jge test inc out stos mov movsl stos mov pop (bad) (bad) jg movb jmp sbb mov pushf ret (bad) dec pop or dec jo repz sub lods pop jae mov push daa sub push push rorb gs pop (bad) popa loopne icebp inc or aas (bad) (bad) je out pop inc imul stc jecxz mov sub xchg xchg xlat enter sbb dec lret xchg pop mov and push jb loopne cltd lret loop mov out lods pop lahf out jo xchg std pop mov int icebp aas push sahf jecxz mov lret pop iret mov (bad) stc fdiv repz and cmpsb fld pusha (bad) mov pop xor mov ret mov dec popf adc or stos lock mov test (bad) lods mov ds stos inc lret pop sub pop push sbb addl les pop push mov (bad) idivb cmp sbb jb mov sub pop hlt jno add ja clc add lods test cmc int mov push mov jno pop (bad) aam sbb add mov jno mov fsubr jge or xchg lea sbbl cmovg pop iret jl scas inc fsubrp mov push leave fild enter xlat push and sub jmp lea mov rcr loopne (bad) cmc cmp lods popa outsl fabs lods and out adc jl fwait (bad) mov mov cmc adc leave jbe xchg cmp (bad) cmc in repnz cld sub arpl or negl jg stc movsl sub cmpsl rclb push jno leave cltd cmp cs (bad) adc add or push xchg or xchg cmp xlat ds push inc or add dec imul es fs dec adc fstps lcall sbb xchg mov cmp or loopne push push mov rcrb cmp mov push mov add int3 int jp and and jle xor cmp ret fstpl inc jbe ljmp mov or es (bad) sub mov inc cmp stos sbb adc (bad) sbb fisubrl loope pop mov push add pop sbb cli fadd xchg xchg fdivs inc sti fldl push jmp jg push inc icebp cwtl or mov fiadd inc in sub movsb popf inc fmull icebp (bad) adc add sub inc mov std push std movsb outsl xlat hlt dec lods inc cmp push imul mov sub sbb sub jns pushf mov pop cld or rcrl es push aad add int3 push mov xchg jmp cmp inc sbb pop mov mov popf push das loope lods xor aam inc xor lock nop pop daa addr16 pop lret push xor xchg push cmp mov or dec scas int3 inc mov popf mov data16 xchg stos xchg shll adc jecxz stos xor and mov pop insb divl fstps push movsb jp out add cmp push pop scas fsts jmp inc jb xchg sub sbb ja mov jno les push mov push fwait mov pop push scas lds sbb das leave mov fdivrl dec cmp movsl cmc push inc cmp sarl std mov or movsl lock or ss (bad) push xchg jp,pt je sahf ja js cmp adc or sbb je cmc xor mov test lods cmp ds loopne in cmpsl pushf cmpsl (bad) aas js pop mov mov push mov cmc daa lock lods lds iret cmp mov inc rorb rolb roll mov icebp xchg stos iret push movzbl jno lahf lods imul jp jo or mov sbb sbb push outsl or xor ljmp loopne add jecxz ret inc xlat ljmp sub inc dec imul dec push int jmp sahf stc rcll xor xor dec fcomp fdivrl xor lret popf push inc xchg fsubrl xor pushf dec loope lock dec and push hlt push and stos mov push add test loopne into pop cwtl mov dec push dec dec jo jb shrl aaa mov push pushf inc mov sbb imul ljmp mov xchg ds mov sub out mov cmc cmpsl mov aad mov add lret ljmp movsl imul out ljmp (bad) fs test aaa (bad) rorl out ficomp mov xchg mov push xor movsb xchg or lock lea int3 mov cmp iret pop scas mov pop push addl inc mov inc xchg push dec aam outsl and mov pop sbb outsl add add and out arpl imul add daa stc lret je or outsb outsb or lds pop push scas into in inc ret ds mov movsb dec jl xchg incl push mov shll into leave or imul jle jg fs fsubs mov sahf mov mov dec and add xchg sub pusha mov iret push pop dec outsl dec xor sbb cmc xlat clc clc or push cli ja repz js pop stos (bad) pop imul jae mov mov cld adcl (bad) xor cwtl jg and in stos adc fs stos xchg cltd inc xchg (bad) (bad) repnz test mov bound loopne mov pop fsts daa and ja mov stc adc in mov xchg push and or sub xchg sbb fs and nop les xchg xor cs inc push aas add icebp sti mov cmp pop aad dec call pushf lods xor pop jbe pop or sub mov add repnz push jp int3 add aas pop cmp int sbb repnz jge cmpl push out icebp cmpsb mov movsl jge jb iret cli inc movsb scas pop cmp mov sub xor ret gs enter mov stc cwtl mov mov ret into out ret add cli push in add xchg call imul dec pop out je into pmuludq inc xor lods xor std gs mov pop arpl aaa pop lcall fldlg2 call daa mov push jecxz mov int3 inc push aaa jb lret push add mov repz les dec jbe repnz mov or push stos mov call fsub aaa ljmp sub int3 ss repnz cwtl cmp push div sub sub push sub jns (bad) stos mov xor fcos arpl or mov (bad) mov inc xlat rol jmp imul outsb xor nop add cmp push hlt cld repz ret scas jle inc xor addl fldcw inc inc out data16 (bad) faddp movsb pop ss jmp mov movsl mov jb add push pop cmc lret add and cmp mov ss cmp pop lods mov fmuls aad xor (bad) inc xchg ret push test adc ljmp xor mov je aaa in adc adc shrl mov add fildl or aaa push push push push or and xor adc bound enter popa inc stos mov scas push and xchg mov xchg ret xor push push pop hlt jle xor imul mov lods (bad) xor (bad) push into add pop and push fsubrl add sub sbb xchg outsl int jmp push add clc xchg jecxz push push push ret cmp int3 mov or dec sbb jns and insb push mov cmp shrl push dec (bad) stc stos jle fsubr inc hlt pop les mov fild pop pop push les jne adc pusha (bad) dec enter mov (bad) xor push rorl flds movsl sub les (bad) hlt xor pop push dec mov ja stos mov fs xchg push add inc mov add mov out ljmp dec arpl loope sbb sub out inc add add cmpl jmp mov (bad) iret fsubs xchg inc pop cwtl in cld and pop lods xchg cltd xor cmc pop mov jecxz into in popf mov repnz leave jle push pop je pop dec loopne ret or xchg aad cwtl iret mov xor or bound mov jle dec xor push inc std notl (bad) push fbstp xor popf mov shr icebp mov daa pop call sti or push push scas ret add stos (bad) hlt mov lahf es in cltd stc imul xchg mov mov mov out push mov sub clc dec ret mov not or cmpsl mov cmpsl cmp clc sarl loopne jl test and cmp in mov cmp pop aam daa iret sub push bound sti hlt mov pop scas int push int stos jl xchg xor in xchg scas mov xor pop mov xor lock jecxz mov jl xchg sbb in loop movq out lods (bad) sbb roll xchg xchg ret in lods out push sbb subl mov jnp mov xchg jmp push sub fsubrl push dec add pop mov loopne into imul or repnz std fldt add mov push imul loopne mov jo out mov cmp clc cmp dec cmp repnz das adc clc mov lods pop pop dec cmp cmpsl push or iret inc xchg pusha sbb outsb roll xchg add jmp rcr insb test rclb fnsave mov jl mov ret lret add pop or lret aam push stos dec cmp jge lahf arpl mov es (bad) xor xor xor cmpsb stos adc stc mov aas cmp dec pop lahf stos dec lcall adc sub sarb push mov faddl add xor cmpsl loope jb add sahf or and in mov icebp jb xor neg leave outsb mov aas in mov iret shrb repz mov or (bad) int in or xchg mov and clc pop fbstp sahf or pop mov jne sub sub xchg or sbb pop mov jae or cs adc iret mov adc rorb aad out sub mov dec cld test dec dec aas mov adc out clc fwait stc xchg jmp pop dec cmp paddsb std fistpl mov cmp loopne cmp out inc cmpsb pop gs inc inc rclb (bad) sahf mov es adc mov cld aas out push imull add adc enter adc popa cmp xchg cmp jbe push mov ret pop xor cmp bt mov mov cli adc pop push out push inc popa lcall mov sub xlat mov rcrl or notl sahf mov push lods cltd sar fs push xchg and int stos xchg popa cmc and stos mov xlat lods in push mov inc jp cltd testb in decb jnp jae notl or push imul test add cmc test mov das decl sbbl dec cmpsl jp arpl jl lea inc sahf push call xchg xchg cmc adc dec push mov fsubrp and nop repz or jno hlt enter cmc mov scas sti daa sub xchg xor mov pop sbb mov fiaddl js cld dec jmp mov rcll stos aaa mov imul push aas aaa cwtl ficom cmp mov jecxz xchg push cmp js jmp mov pop mov (bad) sbb and push test jl pop mov jge fcmovnbe test sbb cmp push (bad) ficom sbb lods adc cmp and xchg pop pop rolb cmp movsb pusha sahf leave mov add jne call insb lcall ss ljmp jg lahf fimull push out or pop in sub mov jl or add out popa cmp (bad) out cs add sbb fincstp dec add stc cmp inc mov and insb cltd pop and pop and and aad inc daa fwait jnp push inc jo lods fsts sbb adc xchg bound out xchg push nop cmp fisubr dec lods add inc bound rcrl sbb adc fwait test scas xchg push mov push enter jmp pop sbb mov roll cmp mov lea pop adc iret sub cld adc rcrl test loopne push sbb push inc gs cmp sahf dec int cltd xchg jl mov das enter cmpsl mov pop outsl sub test loopne faddp xor or inc push add xor in pop and imul movsl add ret sub jbe mov rclb mov sub shll (bad) cmp push lcall pop jne pusha xchg or push push ret enter jns lods mov inc mov mov xor and pop (bad) shl stos mov fstp push sub inc icebp test lret xor jnp push or adc ret leave lea scas jge push cmp xor fistpll xor nop mov cwtl mov mov aad icebp sti push fnsave fsts add (bad) mov out cmp scas loopne push push cmc out fsubrs mov lcall jp xchg add test test rcl outsl jecxz mov jns aas jne cmpsl (bad) cmc mov and mov pop xchg stc xlat ss (bad) fsubrp inc scas lea sar adc (bad) xor aas insl popa cmp xchg repz ret jmp and ss insb xchg adcl insl lret enter xchg arpl and pop or add push push xor stos sbb inc mov pop popf mov lret dec stos (bad) adc dec test inc call (bad) xchg test shrb mov xchg mov stos popf arpl repz mov mov push xor stos jno jle popa fldl inc mov aas and jnp lea xor push mov les pop cmc adc cmp stos push movsb das fsubrl fcoml sbb pop arpl popl cmp dec aaa rcrb jg in push jne pop cltd mov popa mov rolb (bad) mov xor cmp jp scas jne frndint ljmp outsb xchg fcoms loope or ucomiss xchg add idivb pop aam or push inc jbe pop sahf and mov or in cmp pcmpgtw mov mov sqrtps lret test add ret jg xchg and adc pop and fisubrl stc cmp loope movsl mov scas imul call push lret xchg sub cmpsl into icebp add sarb (bad) cmpsb pusha sub (bad) jnp and mov push xor jl out push sbb (bad) sub in aam loop cwtl addr16 clc outsl xor lods dec xor test adc lods xor sbb dec aad mov (bad) mov sub loope mov sbb arpl scas movsb fidivrl pushf jns xor pushf cmpsb sbb clc sub lret jecxz sti imul jge xor aad push lahf ja or call call fimull js mov jge pop push fdivs mov push push repnz fiadd mov lods add add jmp sbb push add jb pop aam xchg mov pop icebp pusha mov pop mov mov gs jno inc lds paddsb inc (bad) pop mov sub jbe clc xor gs and cmp mov leave testb inc out in lcall or loope xchg pop and pop mov leave add xchg mov mov xchg jp das cwtl sub cwtl inc xor jns xchg fwait arpl mov mov mov xchg aaa mov mov rolb cmp loop int3 rcll xor cmpsl repz push jle jge sub sbb popf jb push inc in mov jge movsb mov push pop jbe xchg cli and pop hlt xchg jno mov sub je test pop cli inc push repnz pop add mov sub jae xor pop cwtl inc popl testl inc lcall movsb inc pop cs pop fwait and mov xchg jle fstpt movsl cmpsb mov (bad) ljmp mov repz and mov inc add and sti jg pop pop (bad) cmp pop pusha ds sbb lcall scas push add les xchg sbb mov subb xchg mov jo sub adc in cmpsb inc inc ja xchg mov cmp dec fst fwait or ds notb xchg jnp pushl mov insl jl jmp fsubrl (bad) jnp adc push jge scas cmc cli orl aam mov jno jae jno push lcall jecxz mov push fmul mov dec shlb inc mov xchg mov xchg addr16 (bad) arpl cmp or es data16 fs xor sub in jne cli mov mov and js jge inc mov add outsb shl out jl rclb hlt add mov push push push push adc popf aam stos jmp loopne jl in cwtl add push mov inc stos nop jle xchg pop inc flds add mov sbb add fildl pop mov jmp cmp lcall aaa pop adc and lock out mov (bad) test fldl jbe fmull std cmpsb inc out aaa xor out mov jle mov (bad) xchg xchg push rcrl jecxz fs sub and cli mov mov test xchg je cmp pop hlt shlb sti mov push test movntq add mov cmp lock cmp push ljmp loopne icebp gs pop mov stc outsl mov sbb xor lods push sub pop jb mov sbb call mov mov fadd out mov mov fbld jg add mov mul scas cmpsl std push subl push fcmove dec cmpsl mov (bad) mov mov xor push testl mov add out mov jg call mov mov ds xchg jb mov imul (bad) add xchg or inc dec (bad) loopne push xchg mov xor clc or faddp add add or dec dec in mul jmp sub xchg test and adc or shlb jl mov xchg into popf cs mov cmp dec dec mov jno fwait xchg call test movntq mov pop scas repnz ss ljmp fstpl mov fwait cmp jne idivb mov out (bad) repnz dec inc pushf jmp dec inc fisubl pushf or mov fwait lcall (bad) xor in mov (bad) (bad) xor pop mov xchg aad sti aad jno repnz mov cs loopne push inc inc out arpl inc mov out lahf shr xchg iret push repz and add pop int dec pop loopne dec mov mov push pop adc cmpsb push dec pop out imul stos xchg push pop mov out jle push mov and jp add fnstcw lcall stos (bad) repnz mov movsl push or (bad) or mov daa dec push cmp mov jno push xor push loope aam mov pop xor pop sbb push xchg cmp pop clc mov sub stc sub add push and inc (bad) inc pop adc lcall insb std sub hlt sbb in mov mov add dec and outsb xorb notb mov pop loopne jecxz es movsb or xor loopne xor jp or adc jbe int3 aaa mov pop fsubrs mov gs mov lcall cld add cwtd inc pop lahf mov push test push jge fs loope cmpsl outsb cmpl mov fisubr sub push cmp rcrl pop mov imull sbb rcrl test int3 mov add jp pop or lret fstpl add mov fs adc ss pop mov jns lods push dec push iret sbb jg sub ss scas scas sub lret test jns mov icebp lret mov loop mov sbb fisttp sub xchg lds jg andl mov subl or fcmove add scas push imul cli and cmp cmpsl dec ret scas push adc jae js ret cld mov lret and int push (bad) cmp in sub cltd aas xchg sub sub adc fcoms rcrb in or div and or mov mov out fmulp push pushf (bad) mov xrelease dec sub lret sub popf loop popf (bad) outsl dec arpl insb inc into push mov adc cmp das jecxz sbb adc xchg and inc fwait inc sub xor inc mov dec test dec mov xor sub push mov std stos add add sbb call ljmp sbb outsl jnp js cs sbb stos mov in sti hlt dec rcl into push or and pop outsb mov xchg lcall (bad) push pop fwait pop fwait pop add out int3 mov test or mov push movl xlat jnp or nop mov inc and push push jge imul add push dec mov xchg mov adc fnstsw fisubl call pushl fwait (bad) dec jle loopne pusha loop mov inc add xor sub xor jo adc mov xchg xor in pop test mov scas rclb scas push push push xor aas dec out lcall push push jle out jecxz int dec (bad) out xor fmull icebp adc inc scas sub movd and lret xchg mov hlt mov fst dec dec cmp outsb cltd movsl lret xor adc gs mov jnp ds mov add (bad) lret adc xor mov lods dec pop je push push scas sbb cli xchg mov aas lock std mov push or es insb je add test pop sub leave push sub jne movb sbb aas jge mov lods cmp cmp negb into and aad jl pop add adc sub stos sbb push and (bad) lds outsb xchg mov cmp xchg cmp sub sub push js adc jle adc daa mov mov jl aas aam mov out scas out fldl2e cwtl push arpl mov sub popf int xor hlt std xor loopne leave iret out mov jecxz cld xchg sarl insb and sub call loopne fwait aas sub daa jp or scas lods mov jl call jl or inc fildl adc out imulb (bad) data16 int mov out and mov push mov ficom mov nop fisttpll fistp call repnz add mov xchg (bad) in clc sub mov lret cmp inc xorl movsl inc fsubrs movsb adc movsl ret in fdivrl adcb ret xchg jg in sbb adc aam int3 ret mov xor push push pop lock or andl cmp cli pop mov lods or (bad) in pop fcmove inc ljmp (bad) lods lret out sbb jge stos mov push lcall hlt data16 xor xorb dec cmp pop mov mov stos lods lds inc loopne cli fldl pushf lret enter push outsb outsl adc and add xor push (bad) sbb push mov mov pop stos add pop xchg and lret inc fidivrl mov test jo mov loope inc andb iret inc push cld stc mov cmp clc cmp push mov movl xchg es lods push dec les adc mov mov or fbld jns fldcw mov adc and dec je insb insl gs and xchg aad pop jae and outsl iret pop fcmovu sbb mov mov repz push mov shll cmpsl insl and popa dec test popa cmp fwait dec cltd push sbb (bad) jmp test mov in (bad) je cmc and mov sbb adc insb cltd sbb jecxz,pn mov mov scas sti or cmp ret orb test fidivr ss mov cwtl dec adc jle xor mfence mov push adc sub fadds xchg inc xor cmpsb dec sub es mov iret and into rcrl jl add clc pop lcall xor rclb outsb inc sbb xor add popa sbb (bad) sub and xor push xchg daa incl loope jl shrl jg xor test dec loop test stc (bad) in stc lahf pop addr16 sbb lcall dec sar rclb push cmp pushl movsl repnz (bad) icebp imul push dec adc lods jp loope lret jae imul sub and data16 cltd add push or not rcr test out scas mov adc jno test pop add leave sub movsl nop and leave out pop inc imul add dec xchg mov push dec movsl adc mov cmpl push jmp push mov xchg lahf xchg int3 sbb lods stos cmpsl pop inc xchg pop sbb imul orb ds inc (bad) in dec outsl lret pop shrb or add jecxz push scas negl sub dec mov mov push mov add xchg fistpll (bad) mov es push xchg xchg sub xor mov sub cwtl insb pop orl (bad) (bad) mov jb mov ret leave insb enter pop xchg popf enter sub icebp test jo rcrl (bad) stos (bad) lods sub mov test and dec mov ror ljmp sub xchg dec fisttpl out xor jl nop dec mov into inc pop test cmp mov (bad) fistp xlat xor aas into sub shll inc sub adc dec and xchg sub or pop push jne loope push xor (bad) push add mov mov leave lds notl into int3 std push cmp adc bound jbe pushf rolb inc sbb call push and les mov movsl push push (bad) mov lcall or sub or inc (bad) xchg shrl jp,pt repz mov rcrl call cld ret xchg push lret cmp xchg mov xchg xlat jecxz std shrl mov xchg mov popf fnstsw xchg adc mov and dec mov out adc sti sti sbb cwtl push adcl test in jge fsubrs orl cmpsb andl scas dec mov push inc pop jle add arpl xchg jg cmpsb xchg dec lds nop in lahf push cwtl fsubs test sub jl pop sbb dec in adc jb lods mov sbb std mov cmpsl out jb call sbb push sbb add das insl inc call out dec scas in (bad) enter repnz data16 out fldt pusha aad inc popa mov cmp loop jb fmull dec data16 inc icebp fdivrs mov rcll in jne sub fst cmp pop cs aas fist push or sarb jne mov fwait es fistl xchg sub inc add pusha lahf mov jnp mov push xchg push mov dec scas inc sahf test notl arpl aaa sub cmp gs inc es ret or sub shrl xchg sbb lcall test test push and xor jb cld mov arpl xor das fs arpl out push fwait jl xor scas sub jge xor out add push mov lret sub fldcw xlat fistpll jle insl jg ljmp sti xor das imul pop (bad) rolb push pop in add mull xchg clc sbb inc jge (bad) adc jg dec scas test rolb pop pop fnstcw or inc stc mov xchg popf je fnstenv testb xor xchg and inc fdivrl pop sub pushf sbbl lcall xor test iret cs push push jns add mov add mov idiv testl fdivs jo xor inc sub and sti adc xchg clc outsl cmp dec cli mov into push jne pusha push pop pop stc mov inc fwait inc or add bound pop or fldl imul sub into inc xor push push jmp pop jecxz loop mov pusha sbb jecxz sub jg insl in cmpsl pop lret dec jae jno lea stos fldt ljmp xor or adc jp shlb inc vpshufd xchg js sub repz xchg dec pop mov hlt inc dec fisttpll push inc incl lods decl cmp xchg sub adc nop mov jb xchg maxps add mov insl mov push mov push nop pop add sub mov sub adcl idivl xlat mov pop insl mov pop cmp insb push xor mov sbb js mov sbb sbbl clc dec data16 fistl scas pop pusha adc imul (bad) inc push rolb sub push leave mov jno dec sub test jae shll xchg push repz jle ja (bad) lahf ljmp pushf fimull push mov add cmc push xor push repz pop mov sbb test imul and mov sbb cmp es dec mov mov dec sahf and and pushl in (bad) pop stc lock dec sbb in sub jne addr16 mov inc and data16 inc and inc sub push addl xchg int3 push fstpl cs add fdivrl faddp outsl daa daa mov mov jmp pop je push stos dec mov gs int jae imul inc int pop int3 popa sarl out stos fnstsw lods sub pop cmc push dec cmpl std sub aam push jl lahf out pop cmpsl fildl lret jo loop pop lret fcomps imul inc cmpsb addr16 cltd jne sub js cld ds inc cli or add mov (bad) fistl push mov mov outsl xor aas js mov arpl jns xchg sbb sub adc popa push or test pop jno imul mov xor cs pop mov adc lret imul sub xchg push outsb test pop test add mov (bad) mov dec pushf add mov or push rcll cmp and (bad) jo mov std pop pop negb clc mov push fdivp (bad) sub (bad) stc dec pop rorb xor popf and test lods aam xchg cmp aas cmp (bad) jmp repz pop pop pusha sbb (bad) int clc shr mov pop xchg or xchg mov movl jne out push cmp out repz inc (bad) mov fcmovne (bad) push out je out faddl cmc pop mov sbb and mov pop inc lcall ret sarb push das fdivs aam lds cmc loope imul dec mov xor popa subl cli fist adc cmc push ror mov mov push add lahf pop aam ds and mov or xor sahf mov sub movsb and je leave das pusha jecxz mov and dec test cmp sub dec lea cmp jnp dec jb mov push dec or addl sbb jecxz inc jmp vhsubpd add cmp idivl lret pop mov cld sub push insb adc or aam sub mov mov int pop pop mov cli xor pop jle pop sbb lods xor jae ret mov sbb lods (bad) mov sub shr rcrb faddp mov jno lods mov stos lea and mov mov push push adc xchg nop sub aad push lods leave loopne icebp xor ja js sub push pop dec sbb movsb push xor rcrl mov stos inc cmp hlt dec mov (bad) xor or and lods xlat add in jbe mov das cmp int3 cmp jbe and jl mov dec sub or aad pop repnz push dec sbb daa cmp xchg fwait xchg mov xor sub clc adc and mov xchg cmp xor mov cli pop pop xlat frstpm(287 scas adc and and clc mov in push (bad) push pop fbld dec (bad) pop dec or das xor lcall pushf xchg adc in cmp jne xchg sub popa stos cwtl fbstp mov fisubr jno sbb clc pop lret test test inc enter sbb sub int3 fnstenv jmp mov fistpll adc fsubp punpckhwd sbb jg lcall std dec jmp adc movb mov aas mov daa push pop testb in lret mov pop into xor mov inc pop jae data16 repnz push adc sbb cld lret test mov addr16 ficomp in mov adc pop lods mov orl js popf cmp adc cltd dec loop aam add aad inc in insl mov test loopne or movsl addl cmpsl ret mov sub cs lcall push fistpl lret pop insl adc repz fildl pop inc jae and aad mov cld xor lret mov inc push subl sub scas sub push dec daa rcrl pop je movsb mov dec pop dec bt jbe adc xchg insl or jno bound jnp jae jecxz and negb mov push sub test or js and xchg pop push je dec pop xchg inc jno leave les add loopne je hlt ret pop outsb cmp enter ficoml (bad) shrb (bad) jle idiv push xor aam bound inc xchg mov test imul aaa loope (bad) repz (bad) cmp ret inc dec cli or mov fwait adc mov and fmuls (bad) or cmp test lahf inc outsl sarl aam pusha lds inc in mov dec insl test pop push into sbb inc repnz or nop jnp pop loop or xchg insl sbb imul pop iret out jne shlb out xor xchg jnp outsl stos les or test mov popa rolb and pop pop mov pop enter jo stos sahf adc jbe pop imul jg mov sbb sbb fistl mov test in js aam movsb pop shrl sar (bad) outsb xlat lds xchg enter lds inc bound xchg fwait lahf mov fdivr xor fs mov push test jecxz mov rorl arpl shr mov xchg imul xchg or (bad) jno xor and mov imul mov jbe push xchg mov jne xchg fnstcw cmp ror rol jo mov dec leave pop data16 pushf cld js popf dec (bad) sbb sub or aam andb pop pop (bad) sti jne test aam mov repnz and fdivr mov mov (bad) mov (bad) repz adc inc (bad) jo cltd mov loopne ds pop cmpsl lret es xchg jge outsl adc ficom lcall mov hlt imul ret repnz insl push or enter ret xor dec ss shr cmp hlt mov divl xor sbb dec aad pop ds push inc fstl scas pop (bad) cmp in pusha out mov nop adc addr16 adc mov ljmpw sbb ds or mov scas add subb lds xor nop mov pop pop es sbb inc sub ret lods dec stos or adc icebp push test iret cld pop cwtl or jge xor mov jae flds xchg repnz enter jbe test pop fwait scas cmp test adc out push int and and push and rolb mov fist enter ljmp shl mov cmp jl or adc insb fnstenv (bad) in sbb inc dec sti decb xchg (bad) push out dec add mov xchg mov imul test add xchg sub sub jne xor mov push xor ficom dec mov loopne jg lcall lcall lret aad adc flds insb xchg push sub xor sbb (bad) adc sbb push aas mov sub loopne fstpl daa fsubrp out les dec cmc jmp (bad) sub sti pop fbld hlt pop and jge xor mov mov push or fnstcw loop mov scas aas (bad) or loopne out es popf movsb sbbl sahf inc pop in testb xchg jne js std dec (bad) loopne dec aam clc loop push xor aad scas jecxz enter mov sub inc push mov xor jmp bound push add sbb aas hlt pop mov xchg ds (bad) idivl or jns movsb enter sub sbb jae adc cmp out testl int3 mov inc push mov or cltd dec sbb adc adcl movsb mov pop add les rcrl dec push imul insb xchg cmp (bad) sbb xor and or cmp lret jge dec adc and dec sbb xchg popa mov lock aaa inc or and insb popf sbb (bad) pop lea test call rolb pop (bad) jge mov jle cmp popf fistp es pop mov jmp lea stos add cmp cmpsb lods sub or out mov mov pop mov ret in jnp cld sbb pop ret xchg sub (bad) adc xchg outsb adc fcoml xlat pop in ljmp dec rorl mov stc cmc inc pushf bound mov (bad) lods mov fisubl sub idivl outsb adc adc test lcall mov jl xor fs iret xor inc sub cmp rorb movsl pop mov in cmpsb jbe sub cwtl aas push je lods mov fstp leave pop stos xchg outsl mov xchg ret add pop bound dec dec orl pop mov andnps inc std insb xchg movsl push fs in mov test cwtl popf cld inc jg fidiv (bad) imul mov gs dec inc push fldenv and mov decb cmp in fs iret repz lret mov test sbb das bound sti mov aam adc or dec imul sub rol mov add lret rcl lret ret dec mov mov outsl enter pop cmp or sbb ss insb rcrl xchg sub pop ljmp mov pop add sti loopne jno loope (bad) fisubrl int out dec add add fdivl pusha inc test jns xor cld daa push xor pop popf test repz xor or cmp jnp loop xchg mov scas add test xchg or mov mov lock inc fisubrl inc int mov mov jae sbb dec aam mov bound cld jp mov in add cmc stc mov dec and pop sbb mov scas dec mov cmp es mov in cli cmp mov push pushf add inc pop dec jecxz push ret popf dec fadds dec mov inc and sub mov leave movsl pop cwtl repnz or jnp div and test pop in scas movsl jo inc dec jle ljmp (bad) out fnsave fdivs mov ds repz daa pusha lea inc sbb call loopne enter pop cltd int3 cmp cmp dec aaa jmp sub cld inc add imul push punpckhwd add frstor cmpsb push fwait jns mov out mov lcall inc add (bad) pop out or dec pusha (bad) imul jecxz mov fidiv icebp mov inc lcall xor cwtl mov sbb mov fsts lret lret pop roll fbld inc jle cltd xor jno xor loop fistl shrb or (bad) adc into test cmpsl push cli sbbl dec psrld arpl fs lret lcall out jb sub mov xor call mov xchg fucomi push push dec or ds mov roll loop inc push enter xor xchg ficoml idivb sahf sbb fsubp jmp (bad) jae fistpll cmc repz jmp (bad) lret pop mov iret dec call cs jl,pt sub test push and add addl out mov insl cmp dec pushf pop shr inc add adc fistl pop adc or sarl xor sbb jmp ds outsl mov mov sub data16 movsb lcall push loop inc push mov push pop dec in in sub jo daa inc adc mov jle and jle xlat mov mov push cmpsl ljmp hlt test int3 mov and push data16 fsubr fnstcw xor ret push xchg sti ljmp push dec mov mov or outsb popa cltd ljmp bsf inc enter and stc jp cmp adc (bad) fidiv sbb insb mov (bad) mov lds mov scas mov mov push jp mov mov repz sbb mov in xchg jae mov mov pushf dec dec incb push pop call mov mov xor out addb aad es cmp xchg insb lahf xor aad cmp insl incl cmp ljmp jge imul js ss sahf lcall jecxz jg popa sub pop sahf imul and loopne fwait dec pop and cmp pusha mov inc aam xor dec mov mov fisubr mov cmc xor sub sbb js iret outsl jecxz dec aaa fdivrs out addr16 mov lock dec mov scas push mov mov mov into repz test mov mov jmp xchg pop xlat xchg stos daa clc xchg repz cltd out negl repnz pop sahf js dec aad and cmp mov lock xor and pop pushf gs add pop fadds out push sbb mov mov icebp std fistpl or repz inc in test movsb (bad) imul negl jnp inc mov rclb jle loopne arpl pop (bad) insl cmp push ss popf cmc or push int3 dec in push insl xor cmp pop push clc nop arpl xchg pop sub sbb jns xor mov xchg push (bad) xchg enter xlat js jo adc mov pop popa mov mov add mov fs insb lds jae sbb or enter jl jge ja shlb loopne add mov xchg jge cwtl sarb test in xorl mov xchg jle mov sbb fldcw out (bad) js arpl pop or fnstcw insb add xor sub lret mov int mov fiadd imul mov xlat mov push ja mov jo imul dec cmp ret sbb and cmp repnz fildll scas and pop ffreep and xor test xor mov dec jle pop popa pushl mov gs sbb pop fdiv jle cli adc clc inc push mov dec stos jg dec sub pop mov adc shll mov stos and sahf stos push push or out popa xor sbb fnstsw ja test mov and inc sub insl adc mov push sbb imull mov fisubrl arpl adc loope fldcw (bad) cltd nop dec mov call jno cwtl js or stos dec bound and (bad) sbb lahf orb sub repnz or xchg mov divl arpl fwait enter dec and (bad) cltd ret mov add xorl add ret sbb mov loop mov sbb sahf sbb add sub inc xchg inc add or movsb in adc and pop mov int3 sub cs sbb insl sbb scas mov dec xchg mov and xor cmp mov leave pop sub sbb pop dec adc pop sub fwait inc and mov xchg lea dec cmc push inc sbb (bad) cwtl lret xor and or popf bound out push ss jle rclb mov jl incb fstpt lds xchg mov int3 sti xor adc sbb test push sbb ret jmp test mov xchg aad and and xchg mov movsl std mov xlat and sbb mov xor mov mov lds shlb out fsubrl cmpsl mov add out mov scas or push ret sub int3 into fisub or data16 xor mov (bad) cld add in xor add seto call and push mulb dec ret int data16 mov or scas adc push cltd daa das out loop jl pop cli int3 loope xorl jne sbb lods inc sbb test popa test or fsubp push cmp dec ret mov cmp or sarb adc stos xor ss in sub inc bound ret hlt pusha cmpsl fsubrs push out adc (bad) cmp xor daa out or push jmp pushf dec sub flds in cmp aam in repnz movsb inc les mov xor and jnp adc out push lret enter cmp lea movsl aas pop movsb mov loope mov addr16 push es lea mov fldt ret jo test jp sbb jmp rep ljmp add fcmovnu pop fldenv cmpsl sub in in imull movsb fadds inc mov push adc sub xchg pusha test cmp inc (bad) in incb push or (bad) aam bound (bad) push ret and adc mov jmpw icebp js push xor aaa mov jg dec leave in lahf enter mov fs test cld orl repnz test ds dec inc or out daa xchg jle (bad) aaa cmc pop push add sti cmpsb js bound xchg add push (bad) cmp movsb pop jo mov pop inc mov pop out cs mov mov cwtl push jg inc test in adc mov mov in rolb push daa jge mov in scas push call xor arpl mov sbb pop lcall das cltd lret push mov popa (bad) jg fsubl pop inc mov add scas xor sarl mov sbb cmp fwait dec icebp xor shl ffreep ret sahf inc imul dec cmp mov ret xor orl mov jmp sbb dec push stc jecxz inc mov push test xor shll ja pop call (bad) out lahf lods pop pop mov fcomi daa push je lret mov inc inc mov arpl adc mov clc enter popf push insl and inc mov pop repnz mov mov lret inc and fsts lods jae or outsb dec int mov sub push inc (bad) push xor jp jge pop arpl stc loopne jmp sbb push stos int lret sti je xchg mov pop andl movsb dec cmp mov lret shll sbb xlat mov mov xchg inc cmp adc test push imul shll jg inc dec or inc inc mov fldenv (bad) adc inc push and mov outsb pop test aas ljmp cmp or sub mov inc cmc and leave jo and mov roll loopne or mov or leave incl mov pop fnop mov push js xchg push int3 cmpsl jg or push arpl arpl xchg inc into push out std sahf (bad) ret dec cmpsl jbe fistpll adc std sbb or cmc pop hlt push dec cmc cmp out clc je mov lods (bad) ds adc lcall das mov jle xor inc xlat jnp stc in inc mov push scas mov ja fadd sub and hlt push mov (bad) mov imulb roll enter mov or insb (bad) mov jo std adc jg loope mov xchg and into xchg dec repnz cmc mov test mov lods add out pusha in and fdecstp shrl xchg (bad) repnz mov add jnp pop jo jg sub scas jp stos aaa imul ret adc lret inc inc push sub cmp xor ljmp cltd in data16 scas popf fcmovnu sub ljmp leave xchg lahf jno int pop ret clc add lret pop test xchg jns icebp or mov inc imul addl es cmp mov jno arpl jle mov ret lods mov fcmovnbe cmpsl inc sahf xchg mov mov gs push adc pop pop (bad) inc fidivr aaa push xchg addl mov push and pop test mov out mov xchg iret mov fisttpl add stos jae jle jle mov cmp sbb sbb movsb pushf out rcrb imull add inc (bad) ss aam rcll mov lret sbb lods jo push pop jns out std xchg mull imul inc aam cmpsb cmovne jp int3 jmp in fwait mov insl popf movsb aam pushf or leave aad int sub rcl push arpl fisttpl iret pop pop lods ljmp pop push rcrb or (bad) lea mov dec pop sbb mov ret cmp in pop push and (bad) ja imul (bad) int3 ljmp adc sub gs sub cmpsl test in fisubl cmpsl pop cmc insb jmp ja cmp sti or fucomp cli push daa dec (bad) (bad) xor les lret mov std inc ret dec or xor dec sub imul and popa icebp cmc pop rclb mov inc xchg or xchg (bad) mov lds icebp xchg push xchg mov push xchg clc cli xchg jo loop or icebp push ret hlt in xchg scas xor inc sbb sbbl and mov lahf cs dec inc pop xlat jns roll pop push sbb ss or fmuls ret lcall gs repz pop cs loope stos jl mov pop xchg mov jb push adc ficom mov into or lods sub lret sub leave adc inc int3 mov push pop jg mov popf mov or pop inc fild and jg addr16 cmpb and jle loopne incb cltd (bad) aam sub std jo xchg sub or mov push (bad) jb sub xchg or mov sub fnstcw cmp lds xchg out jno mov mov sbb loope adc mov in iret mov xor sub cmp pop insl pop dec mov mov push mov leave fisttpll lds in pop sarl mov in inc and add mov adc push out xchg push jecxz add mov aam imul pusha adc bound cmp add xor cmc test ja jno pop leave dec pop cmc pop cmp mov rcrb mov jecxz mov rorl mov inc or (bad) xor inc test insb in push orl jbe xchg or nop in repz xchg inc sbb cmp or sahf xor sbb ret inc push fsubl clc and sbb daa outsb mov cmp mov push in in mov adc subb hlt insl cmp pop lods sub jp dec mov dec dec cli dec dec mov dec or xor lcall cld aad fadd std dec scas add lods push outsl rol push les jecxz sub setbe push xchg ret cltd pop pusha or lret ljmp orb push adc mov dec repz mov adc imul pusha mov cmp aam imul pop push add inc jo jae push sbb hlt add mov sbb in or inc ss mov das jle push in sub pop std jmp mov push sub divl cwtl cmp cmp loop xchg rorl fsubr repnz test and jge in dec mov scas xlat mov lahf push xor int3 aad pusha add mov pop jns out mov and bound push lock cmp sub cmp pop cmp imul mov enter push roll outsl xchg loopne call jb sbb fcmovb out sub (bad) (bad) loop inc aaa push bound scas pop sbb bnd rcpps loop sub sbb cmpl adc dec mov cmc push std icebp bndldx pop and or and xchg push jnp cli add insw in aad pop lret and pop popf cmpsb and lret pop sub adc cmpsb xchg jmp cwtl xor ja int3 cli iret lret pop pop cmp mov and mov in outsl outsb fs shrb mov push popa aad adc mov or pop (bad) popa outsb jne test pop pushf and xor iret cwtl inc cmc cmp mov jg cltd mov xchg jg (bad) icebp lods (bad) iret int fwait (bad) push scas pop shll dec mov call popf and insb (bad) and jbe cmpb pop sbb add pop iret inc sbb sbb inc mov dec data16 and loope dec jl arpl add jo and (bad) jmp pop cwtl cmp aad fild cld pop sub sbb cmp bound push fisubr xor jecxz dec lcall scas cmp in mov adc test pop out or jnp mov inc shrb add mov cmp cld lcall fnstcw mov jno fisubr stos mov mov cld cmp mov ljmp xchg jo mov push cmc fldl add add fldenv add adcl rcll int or push int3 jnp push out pop clc js and pusha jns mov xor out dec out jns xchg mov jp mov sbb insb scas cmp sub pop xor (bad) xchg xchg mov test add mov (bad) xor arpl (bad) jnp sub insl mov stc xor jl dec mov jmp in out xor int3 or nop les mov jmp hlt in xor shrb push pushf adc mov jg and imul int3 (bad) mov cmpsl push fs stc and sbb mov insb stc (bad) mov (bad) mov xchg movsb imulb fldcw insl pop or mov xchg push in push jl je pop pop pop jmp ljmp mov fildl gs stos pop jle fwait addr16 rcrb dec pop fnstcw add sahf addr16 cmpsl sbb jnp jbe mov cwtl cmp pop fisttpll jo xor cmp xlat push mov jecxz and push into cltd or jbe and insl jg mov cmpsl jnp xor and stos adc mov retw repnz cltd sub inc mov shll cmp xchg pop sbb push mov mov cmpl mov cmp fildll mov clc fs jl int3 sbb out cmp pop (bad) adc xor adc fistpll insl pop adc mov xchg jnp and mov jo (bad) mov mov jae lock inc test inc std call imul gs jl pop test mov xchg iret (bad) stos push aaa cmpsl pop mov flds loopne mov data16 in loop jg lcall cmp mov fsts cltd mov jg and icebp and int outsl inc and pop lret data16 rcll testl inc hlt xor testl jae jnp xchg cli cmp xor dec cmp mov mov sbb pusha or adc scas cwtl (bad) outsl xchg cmp notl push and sbb mov lods data16 (bad) hlt or xor lret mov xlat push mov sub dec (bad) call lds sbb sbb roll and das lods sub mov movsl pop xchg in inc mov aad mov aam int jmp fs xchg dec xchg ljmp mov cltd das cmpl sbb pop jmp cmpsl push xor aam out decb pop fisttp insl xlat mov fiadd pop mov hlt and adc jnp insb cmp loop dec adc xor xchg cmp ja dec and aaa loopne xchg repz push push xor push pushl es rcrl int3 jge inc ret ds (bad) sahf xor int3 push cmp mov or jle int ljmp scas pushf addr16 iret adc out lahf sub in add out cs and ja mov dec jl push lret call pop std xchg movsb (bad) loop mov test outsw mov es jp aas sbb (bad) push cs sub in dec xchg fstps ret jo loopne je xchg xor sbb test cli les mov cmc add test adc loopne xor sub cmp loopne mov movsb or inc (bad) dec (bad) mov inc insb jecxz ljmp (bad) push (bad) call mov iret fwait jecxz cmp lahf shlb ljmp jg lret sub scas insb push pop call jno icebp (bad) call pop and push sbb data16 lahf dec jmp jae mov pop iret addr16 ficoml out insl pop insb adc jg out xchg jne ret dec cli mov add fisttpl and iret mov jg iret popf xor pop (bad) pushf and sbb (bad) sar mov jg cmpsb xchg outsb outsl cmpsb dec mov fidivrl lock sbb pop rep fsub ljmp gs pushf fucom xchg jg in ret cltd enter push sub pop repnz lret loop dec inc into adc push pop dec jbe fisttp push (bad) fstps fwait adc push stos pop popf mov in cmp loope test sahf inc popa mov gs add rclb scas ret rclb and shl dec js cwtl jp adcl push lea adc xchg mov mov movsb jbe cltd test ficom and add push enter es mov cmp inc (bad) into test pop mov sbb pop pop lds lret in aaa rcr orb js stos jge cmpsl adc fwait inc imulb jnp js cvtps2pi insl insl in pop bound lcall and jmp ret pop (bad) rcrb pop sbb dec pop mov jo shr inc push and gs sub push pushf negl movsb into in mov push push pop xor sbb das adc fdivp lds xchg jns pop movsb aaa inc mov or jnp mov xchg test fwait sub or int ret hlt jle sarb faddl push mov int mov jecxz adc daa and cmp sub shrb mov inc and sbb nop pushf clc sub (bad) rorb adc xchg sbbl jmp cmp mov test test cwtl cmpsl mov imul jl or rcrl jnp inc jbe and mov ja adc xchg lcallw xor push mov movsl enter into jecxz mov xchg xchg pop leave xchg push stos or mov loope push lock sbb mov in push popf inc xor jns test sbb push push add push push lret dec out pop icebp push mov mov sbb push sub icebp or cwtl cmp sub xchg mov xchg jg xchg mov jb mov out lahf push outsl test out fwait mov push data16 pop lock stos jmp mov sahf or cmp adc sbb lret mov cmp adc (bad) cmp fnsave inc inc pop lret out dec loope sbb daa fiadd mov int3 in iret lods mov adc cli icebp pop mov js out sbb mov or rcll adc aad outsl inc xor jne mov data16 ss fwait outsb jp sbb negl loopne inc mov loopne popa inc jp mov ds add dec jecxz mov pop add shrb add ss mov cmp es lods pop push ljmp mov push cmp mov ret cltd ret sub (bad) or mov or fdivl lret pushf xchg push adc pop int3 xchg aas ret in stos jns in inc mov movsl mov mov vpandn fist aad pop sub lock ficom mov faddl insb dec xor mov sbb push aas std mov cmp cld sub cmp cmp lock std dec jno enter repnz pop shll test mov aad and pop lea test mov lods clc daa (bad) cmpsl fcmovne ret inc jae data16 fist jns enter dec leave stos sbb adc or or inc das iret jbe call in loop in mov inc fdivs nop nop push inc xor cmpsl insl imul dec xor iret (bad) test push ret inc in (bad) dec ja push js test jg inc (bad) mov lock sbb pop scas mov sti repz (bad) stc aaa inc mov scas mov push popa scas xchg adc out in pop imulb (bad) xlat cmc inc data16 (bad) mov dec cld dec mov in imul sbb mov jb xor in mov in xor lods or int3 pop push cmp fsubp cmovs lea fmulp fcoms dec scas lcall addr16 mov sbb sub and dec dec int3 jnp dec add or mov lds in outsl popa push mov out cmpl push xlat push pop ss mov and mov lea mov inc push mov mov or cmp loope push popf test xchg pop pusha or jecxz jle out les jo into push pusha in mov movsl lods test in push sub addb call div jbe mov inc ljmp rcll ja pop gs into mov cmpsl sub mov push add push and dec mov inc xor push mov nop sbb in lret cmp stos fs jns (bad) pop pop add sub fstps (bad) lret mov add or inc adc les js lods aam xlat pop cltd inc fnsave xchg (bad) jmp dec or adc fsts mov test or jg push sub push mov jns fcos and movsb sbb xlat enter add or movsb xchg xchg enter xor shlb clc mov out iret add loop mov mov (bad) and mov jne (bad) fsubrs sbb cmp push movsb adcl movsb sbb fs loopne shlb jo sbb xchg mov je lods dec insb and (bad) repnz cmp bound int3 arpl movaps xchg pop int das xlat and and jbe or cmp jg add pop and stc test dec add out cwtl push adc push jae fwait add cwtl fnstenv scas adc imul imul inc aad sub rcll push xchg cmp mov (bad) mov or mov pop xchg push mov push setge dec sahf out icebp cs sub sbb jne lock imull dec (bad) mov mov mov out out bound fwait add in push inc imull insb (bad) loop xchg and sub push sbb and jno pop sbb xchg clc (bad) loope frstor jmp test scas faddl icebp rcrb sub inc push fisubr mov stos sbbl jae ret imul lds mov sub cmp inc lea lock jne add dec iret sbb int3 lea outsl push ds sti or cmp and inc insb mov mov push das pop xchg push sub je lahf mov mov les ja mov orb xor xor sub or in mov bound test mov mov aas and (bad) jmp dec push sbb (bad) aaa mov mov mov fmuls jle add sbb pop shll fdivs sbb push xor pop xchg xchg arpl push cmp aaa push adc test mov jle decl sbb das sbb out jns mov (bad) or (bad) jbe and add fcom std daa iret mov stc and adc loope mov fnsave push aad cld pop mov leave inc mov aad scas cs daa xchg jg pop sub (bad) loope ja cmp jno pushf bound mov fcoms dec cmp js sbb xchg outsl test xchg inc rep xor dec scas daa andb or in dec popf sbb movsl add test push xor std sub inc inc lcall loopne jl jmp sbb and addr16 nop sub cmp or jae adc xchg test imul das in lea dec (bad) pop cli in mov in pop call push mov mov dec es test push push in aas popf xlat and cmpsb shr mov aaa sahf sub lahf fidivr mov xchg movsb xchg pop dec flds push pushf (bad) and cltd imul int3 or (bad) mov fild mov (bad) ss rorb xor lret cs mov xor jae ljmp fidiv push inc (bad) adc mov out xchg aad loopne or aas out scas pop repnz inc arpl sub icebp test cmp xor int fiadd dec mov outsl add mov mov test outsl mov test xor cmp (bad) lods and sbb fsubl and aaa pop push dec stos add das fsubr movsb inc aaa (bad) clc in xchg lret imul (bad) hlt mov pop out dec adc mov xor xchg sub or dec mov dec inc jnp daa or pop scas in jg dec cltd pop (bad) fdiv mov stos cmp and rolb loopne in rcrb sub bound inc and aaa stos adc pop (bad) call cmp cmc add lahf or das ja fst xor shl movsb adc out inc or popa pop cmp mulb cltd lahf arpl mov mov imul inc jmp (bad) icebp and imul pop xchg add arpl push sub imul nop sub sbb lods ljmp test cmpsb inc stos inc pusha mov jne jae daa and aaa pop cmp pusha bound cmp stos test xor clc mov xchg lcall aas sbb ja in je jnp push xor rclb out cs in (bad) jl cmc in js pop lret mov (bad) stos notb sub dec ret in inc jle push inc clc pop loop add pop rcrb dec insb lods sub rolb in fidiv hlt push outsb into inc sbbb sbb mov loop mov mov lahf jo into dec clc add jle and scas nop rcr push gs (bad) add push daa outsl jg movsl fisubrl call jnp cmp movsb fiaddl das xor fsubs insb xor mov dec mov fimul test fwait and ja inc xchg inc push mov fcomps out jle add bnd out inc ds stc je mov fisubl xchg push idiv fdivrp lcall nop imul rcrl pop fcom mov lods mov push fdivrs loop cwtl ret bound sub jl daa mov mov or (bad) js je cli aad pop cmp mov fbstp loop in xchg jl push je dec jo addl pop jo ret pop inc aam in divl pop adc pop scas xchg es iret sahf call add out xchg cli push movsl jnp out (bad) lcall lahf jmp xor xchg mov in pop jmp mov push fstps imul loope es scas mov mov testl xor pop (bad) pop in test andl xor bound xlat sbb (bad) dec jb sub pusha inc lds add or imul pop push mov push push (bad) dec fs jns dec mov jecxz push js jns je and notl or mov in lret xchg add aas lret test cmp xchg nop fdivrp into mov in jno out loopne icebp ret pop and xor push lahf push orl es mov mov insb sbb dec popf push cmp ss inc loopne or movsl enter fist sub scas dec push lahf pop data16 jnp loop imul add clc mov shrl gs popa insl les xchg jo mov jnp lret in cmpsb sub mov repnz cli inc jnp andl cli imul jg cmp rorl jbe gs push data16 xchg cmpsl addr16 and inc fnstsw test inc out clc out out into mov (bad) mov (bad) mov imull popa test cwtl mov mov push fisttp lock xchg into mov push add inc xchg aaa jmp les je sub cmp out (bad) ja jb dec add dec jge ds mov cs xchg xchg lock sbb rcrb imul xchg sti std mov push frstor jbe jns lds fsubrs mov push mov sub jo push aaa dec jnp sbb or (bad) ljmp andl test (bad) mov jno jne fwait addr16 cmpsl adc adc cmp cld mov inc (bad) mov repz popf ss cmpsb lock rclb outsl sarl hlt rol repnz js aad sub mov das and loopne out sarb jne cmp push mov mov shlb scas in add (bad) mov mov inc mov pop mov rolb dec pop sbb lcall nop add (bad) out mov mov insb popa arpl cld jmp mov in lods fsubrs push popf and sub mov loope and (bad) je lcall test addr16 addl mov daa or pop sbb xchg and or shlb outsb mov dec mov (bad) jne dec scas mov movsb fucomp test mov aad mov inc fwait iret lods shlb sbb jecxz sti cmc add mov pushf push loope clc add inc pop fistpl into movsb mov fcoms lea imul lods and or cmp adc add push dec popa cmpb lea xchg cmp fild stos cmp pop jp stos mov adc js sbb mov int3 repz push and dec xorl dec pop test adc pop cmp mov movsb xchg cmp mov (bad) in sub mov int xor pop inc pop mov pop xor sti mov sub sbb iret div pop sub cld jge cmc aam inc (bad) cli mulb push xchg clc fucomip (bad) (bad) repnz aam push pop (bad) enter dec mov loop and movsb shl sahf movsl xor sub test adc mov add int3 pop movl mov call adc adc mov jnp scas or push mov xchg xchg pop imul iretw xor sarb loop push mov and mov cmp push fldt aaa inc cwtl push mov inc ret jo int outsl out nop dec or dec insb pop dec cmp inc or stos out (bad) icebp movsl mov cwtl dec negb dec lret dec std ja outsl dec sbb sbb es inc orb jmp and sbb mov roll stc and dec nop jo out inc ret aam lret jmp aad loope jae inc push lret (bad) or xchg pop out jne loope (bad) push pop pusha push cltd cmp data16 clc incl cmp mov xchg cmpsb mov gs in movsb imul call orb pop lods or xchg mov xchg xchg enter mov jno int insb fcoml push insl into mov mov bound mov sbb xchg test iret mov pop stos cli (bad) inc inc pop rolb jns bound (bad) sbb mov xor dec inc popa insb and inc stos mov (bad) repz data16 xor mov aaa enter ja push out fcomp stos popa lcall add push sub (bad) xchg (bad) movsl sahf mov fldcw fwait lods cmpsb pop mov push inc cltd mov lods xchg into lcall xor fs clc and int3 jo sbb loop mov ret add and jne push in push insb or mov cs loop push loope aaa loopne lds push pop push mov pop dec in jl sahf rcr push sub loope sahf push and dec push fwait test inc sub xor xor mov in fmull add push push loopne addr16 (bad) dec mov inc or xchg icebp xor ds scas jne push jo cmp scas stos fistpl sbb jp stos jp (bad) push lea sar jns mov ret decb out js test rcl add jp mov icebp sub dec jns xchg xchg popa in aad pop mov scas push ljmp test jno popf fcomps cld mov push mov fmul (bad) xlat mov sahf cmc dec cmp inc cmp push xor (bad) enter pop movsl js sbb adc add daa pop aas or nop mov daa inc out aam pusha xor lcall ss push inc js pop int stos mov out shrb in push xchg lcall repnz inc rcrb cmp lds jle les mov dec fnstenv popf xor mov repnz aad aam lret xchg pop das pop push adc std nop xchg xlat push push jnp sub clc loopne mov mov call insl mov xor out cmp xor cmpsl dec cld loopne movlps aas pop js mov cmp or leave inc mov mov pop pusha (bad) (bad) lcall (bad) jo stc cltd jne pop cltd dec mov fisubr fistpll or scas dec and xchg out add pushf or or call ja stc mov mov das inc or out or fsubl in mov (bad) (bad) jg cmp lcall aam jmp das push cmp pop xchg xchg or jg add scas and or pop dec xchg push and icebp insb jnp sub jae jno pop jge out into mov cmp or in add push lock sbb add or cmp aas jbe ret scas xchg cmp inc xchg insb sarb test out xor inc jne pop test xor je aaa fidivr xchg fs and cmp loope inc adc push mov leave push push dec leave ja push lds jnp gs sti inc mov jno (bad) pushf pop xchg and roll lahf outsb les insb xor mov and cmc cmp ss xchg data16 dec inc shrl jp add add fimul xor cmp mov xchg inc jle cmc (bad) std aad dec xchg arpl mov pop mov popf call pop lret pop and loopne in push ljmp inc leave out jmp and push or arpl jecxz inc in jl (bad) repnz cmc add xchg out int3 fistpll insb gs inc movsl push add jp xchg fucomi lods fwait add pop clc repz cmp jmp jmp pop leave xchg enter jl pop in cwtl cwtl jb faddl popf pushf dec inc invd mov jns mov xchg testl xchg mov shr loopne imul mov daa test icebp cmp add lcall cmp push cpuid xchg or xor cmc mov or xorb jg sbb adc lret rol (bad) add mov (bad) cmpsl add sbb (bad) cmpsl push jo jbe and ds mov inc hlt sbb cmp jge (bad) xchg hlt test arpl pop into mov inc or push imul pushf cltd xchg je daa int3 js (bad) iret xchg xor test dec sub sbb cwtl mov (bad) or sub xchg movsb push or shrb mov sbb pop push in pop in loopne jnp lret frstor jp fcmovb int3 and fmul int3 jb cmp xchg push xchg mov scas fstpl mov add xor mov les and cld jnp (bad) cmp dec mov mov sbb ja mov stc pop (bad) std sbb push jns sbb xor push (bad) ja subl sub data16 sub mov in jle xchg inc jo ja dec inc fadds sahf inc inc xchg mov arpl dec lods fildl rclb inc loope xor pop iret in cmpsb popf sbb jecxz or adc fbld sbb xchg push jo imul inc les out loopne les dec fdivr sbbl (bad) mov mov sub js cmpsl add xchg movsl mov fcmove add sub mov fwait inc popa push lahf sbb mov sbb sbb pop popa fwait leave xlat lods jecxz pop aaa popa and or mov in mov popf adc fwait or and pop push ljmp hlt cmpsb xor xor popa mov and std xor pusha addr16 push enter push mov mov dec int out sbb inc repz lcall subl inc cmp adc push push les or test jne popf stos cltd scas leave lds mov loopne jmp jg and add dec in dec mov xor push add imul fs outsl add xchg cmpsb aad mov cmpsb stos push sti xor jge sub ja rcrb stc fcompl ds mov jae js cli data16 pushl dec xor insb insl mov fwait sbbb mov in add mov cmp syscall sti xor loop (bad) shlb inc loop ljmp es addr16 jno fisubl or inc xchg mov and push lods mov test mov outsl xor sub imul jnp sahf push cs loopne mov inc mov repnz data16 mov cmp push mov mov (bad) push sub push into leave add rcr in int add rolb or mov jmp xchg cmp (bad) sti jp mov jecxz lea xchg int3 je out mov xlat icebp mov mov xor ljmp or and mov or xchg fs mov pop adc aam sub cmp fcompl jb add jp (bad) movsl xor insb notl mov ds add dec ss mov pushf movsb lods dec add inc xchg xor inc es push dec fistl fs int inc mov stos loop pop fwait pop xchg mov jmp mov xchg xor push xlat pusha inc out pop mov jle divb xchg loopne aad cmpl sub pop shrl subl in mov (bad) enter insl cmp xchg fiaddl inc adc push (bad) mov (bad) sarl fistp loop int outsl fisttpl mov mov popa mov adc mov xchg add mov cmp lret lret sub sub mov test insl ljmp mov push insb insb push inc sbb jl out cli popa inc sbb and cltd js stc jb in jno jne and (bad) adc dec and ds sarb xor popa sahf inc jo std cmp sarl aam mov insl adc std movsl push jecxz je add out mov fcomi mov mov sub adc and mov mov fisubrl mov sbb mov inc jmp popa xor in aas in test pushf jl push pop dec into cmp xor sbb sbb out das push into pop ret dec mov jae jbe pushf sub cmpsb (bad) cmpsl std movsl sub out es add leave sbb fidivrl out lods and mov sub xlat push xchg mov xor gs add movsl mov pop pop lret cmp mov xor fsubrs push sub in je lret pop cmpsb inc add into add out ror std mov add pop ret push pusha jp in jb (bad) pop sbb fwait mov scas out add shr (bad) and push in sbb js adc xor scas xor jnp test imul push dec lock rcrb pop or mov mov aam mov insl mov addr16 stos jo imul cli jb jle iret fidiv je je push sbb cs in mov adc jge aas rcrl negl add mov icebp sbb dec icebp jmp inc push add xchg dec cmp sub daa fnsave leave or mov sub sbb std push push fdiv cs (bad) push jbe mov dec mov mov lret pusha sub inc inc stos mov insl jp loope xchg push js mov insb outsl cmpsl sbb ljmp mov or lock xchg sbb jge (bad) repz fdivl imul adc push enter repnz pmaxsw int3 xor dec jb mov stos dec mov xchg leave test sub push lret push lret and mov or data16 inc jmp fdivl or aad or cmpsl pop mov sbb (bad) in and mov sbb sbb xor inc lock nop jmp lcall aaa inc inc leave or sub push cmpsb dec ret lret (bad) sbb pop lahf fbstp jmp xchg popa out and repnz cmp test pop lods out in cmpsb mov push pop jno divl mov int pop mov fidiv jmp jge repnz push insb inc nop mov sti jae lds add and mov ss push cmp sub dec clc xchg pop mov push push sar dec dec mov pop mov int3 jo dec pop mov jb jb dec xor xchg xor mov jb aaa fwait inc push lods bnd jge leave push push jne xchg loop mov lahf outsb push and dec dec or jl aam in push insb scas shrb insb push jecxz lods outsl insb jno dec xchg pop xchg mov popf pop dec ljmp popl (bad) xor rol push cmpsb mov adc jg mov mov push fwait jb cmp mov mov imul add sub add adc (bad) shr or cmp (bad) dec (bad) pop arpl into cld xchg push out xchg ficompl daa insl xor pop stos mov mov jnp jecxz loop mov jns and or xchg das leave jle lret gs mov pop adc rol aas lret ret add push mov add inc into push subl push xchg pop jmp jl dec sub push jno and ss (bad) call test sbb dec sub push and ja sti jbe dec call mov loop sbb pop push cmp das shll mov fistp sub dec xchg push (bad) imul sahf push fs jne iret jae push push inc hlt push imul data16 sub ret mov xlat loope xchg ds mov and inc adc ljmp add mov cmp mov push into fiaddl adc and cmp je jmp pop mov pop ljmp sub xor (bad) pop pop sub sub jmp inc or mov inc xor lret push mov or popa addr16 or repz sub hlt mov sub add sbb add jmp xor std inc pop sub adc mov int3 mov cmpsl mov push push adc or pop mov stos popf xor mov (bad) xchg repz pop sbb ds xor lcall idivb (bad) mov cmp clc fucomi loopne je loop sbb (bad) jns das insw jbe (bad) lret rol test mov lcall loopne insl cmp mov lea es mov sub enter aad fwait mov lret sbb into cltd xchg lock aas add cmpsl xor cmp add mov (bad) dec stos cmpsl xlat int popf fcmovu dec mov xchg xchg fldcw js cmc mov lahf cs clc push dec or std jecxz stc into into dec arpl cmpsl dec lock aam cmp push (bad) cs cmp add xchg xor adc xchg xor repz fisttpll fisubr dec movsl divb push movsb inc or cmp sahf cwtl pop xchg mov pop cmp jns insl sbb inc andl nop push cltd mov dec jne inc cmp out inc hlt stos xchg lret jg popa aaa xor push movsl cmp enter jb sbb sub outsl insl call push repnz or icebp je dec stos xor movsl movsl lret (bad) jnp orb jmp sbb out xor sub pop shrl shlb and lods dec ds (bad) or cmpsb (bad) mov mov ret (bad) jmp sbb add cmpsl scas test push mov push scas popf repnz or mov shrb adc jp xchg mov fdivrl mov mov (bad) sub add mov push scas in jo mov jns push add mov rclb or movsb out and mov mov adc ss lahf mov bound and xlat add cmp popf repnz (bad) gs adc sub adc jne pop (bad) pop pop jp (bad) push jecxz pop pop and inc inc add pusha or in andl gs jmp dec sub (bad) sbbb rcl adc cld push pop ds cwtl adc push sub out mov dec ds scas sbb (bad) pminsw jae xchg dec push in (bad) jae rorl mov mov jnp out lods mov sub icebp cli pop arpl sub sub or flds add mov and insl mov mov (bad) aam movsl ja xchg pushf mov mov (bad) jo fstps outsl notb aaa cmp sub xchg add and push cmc hlt lret sahf nop xchg add mov or out pop adc outsl sbb addr16 push cwtl or xlat dec movsl test test (bad) iret sub sub dec lods sub xchg jo push and jmp pop ss lods inc mov xchg mov xlat xchg lods push jb cmc xchg repz inc push xor pusha lahf jg lock cmp rorb fs repnz cmpl jmp aad jae into je inc and pop push lea adc mov jle xchg pop ret xchg test adc push xor pushf jae add arpl out inc inc mov stos rcll or aad push in (bad) jno (bad) mov cli cwtl scas mov (bad) sahf movsb push jne or sahf fidivl xchg testl movaps sar mov ja lods out sub sub jecxz imul inc daa andl popa (bad) rcr dec dec jl sbb loop inc xlat sldt int sbb push cmp not xlat fcmovnbe adc jns pop ja mov imul fildll or and mov push inc sets jbe push pop cmc (bad) in sbb mov sbb and lahf outsl jg xchg lock or mov stos sub lret outsl enter sbb call or push dec inc push adc xchg sub bound sub push mov ljmp call jmp push aam sbb inc repnz repnz into inc xchg iret fwait cmpsb fdivl xor jge aaa cmp push cli shl sbbl test bound xchg mov jmp loop cmp lcall sbb or dec mov nop pushf or push cs and or hlt mov sub cld fcomip arpl inc hlt mov fnstcw mov dec lods mov or and cmp sti sbb rcll add addr16 cmp xor xchg cmp push push stc mov or xor jle sbb sbb cmp xor popl jp sbb dec out rcrb push add xlat lea pop cmpsl add daa mov push xor hlt adc push mov notb pop xlat fsubrs adc movsb out xor aad push inc adc pop push out pop aas data16 push mov into out pop stos inc sbb ret xchg rclb in test mov adc out sbb std adc inc je jl adc lahf add mov fnop adc push (bad) push cmp outsl lea ror jno into xor loopne stos inc push xor xor fdivrl std sbb cs in (bad) jb inc cwtl ret adc div adc pop lea add push xchg sub scas sbb ljmp into xchg jle jmp nop repz pop lret xchg cld inc sti fild ficomp sbb sarb sbb call cmp adc ljmp push push push cltd dec iret fdivl icebp repnz cmp mov popa mov int mov orb je daa or xor inc outsb out push repz pop mov ja adc inc mov (bad) clc mov test jb cmp loopne or push pop cmp mov push (bad) cltd fwait out push std popa xor or fisubrl cmpl int3 jg clc bnd into or push ficompl sbb mull jae das imul aaa sub lods das pop outsb cltd outsb push adc cmp push (bad) jecxz std (bad) sahf cmovno stc adc push out or fs push into sbb xchg scas leave and mov mov sti mov (bad) xor mov nop push neg mov add jl fwait repz push dec cmp loop mov aam clc pop cs testb divl jb pushf adc ss pusha mov das je mov dec bnd adc lahf lcall dec dec cs and out hlt jne fsubr xor fadds xor inc add arpl sti or sub jecxz or xor les push aad das sbb stos xchg (bad) xor das push pop cmp jnp js jecxz mov movsl pop mov mov (bad) jb (bad) dec adc fdivrs jae lcall mov je scas or xchg inc addr16 push push mov sti (bad) mov in xchg pop notb lea jae insb sbb jle jecxz xor int3 insb test sub pop pop clc mov mov insb jmp or cmpsb inc jl stos xor pop pushf and leave movsb ja data16 adc adc fldt stos mov inc cmp sub add add sbb js jecxz movsb adc adc fisubr jo out jg xor (bad) jecxz aad inc xor cld fnstsw bound ret std push sbb sub xchg fimull sbb cmovae outsl mov imulb cmc mov repz cmp mov lods add rcll mov cmp adc lock push aam fisubrl mov pop jle xchg movsb int3 inc shll cpuid mov outsb mov add sub inc bound ret stos int mov das (bad) cs fmuls sar cli repz je imul fcompl mov pop int3 mov cmp dec lea fstpt jg out lcall adc mov jl mov (bad) sbb in shlb (bad) push mov lea mov pusha jmp out int lock dec ds into jmp jb jg mov push xor push dec jns and push ret dec int jnp rclb inc insb cmp pop push sar sub add add stos jbe push and mull add in sub or and cli add sbb jo and inc xchg lret and inc mov inc scas dec pop cmp shll loop mov ljmp jb mov stos dec out mov divb pop sub mov dec mov dec (bad) and pop add pop pop or xor loope nop add cli out push aas ficomp sub bound ret cmp sbb xor inc cmp pushf cmp or ds bound jecxz mov cmp push (bad) jecxz push bound push nop jns lods fnstenv pop jae xchg sbb xchg add test mov loop das and mov iret outsl mov pop movsl mov mov aas in xchg jecxz dec je push (bad) jecxz loopne scas aas das push fist adc scas fs pop adc xchg mov insb pop inc out outsb push sub and cs iret push jno sub out iret adc xor push pop cltd insb or loop scas lods int loope pop jno push jb scas xor int3 cmp clc and pop ror sub xchg fwait scas in sahf and andl or push mov sub or pop sbb aad sub jnp push out js xor mov jbe dec or nop xor xchg lahf xor fsubrl lahf xor mov adc inc xlat sbb aad inc inc cmc xchg enter pop sub pop inc jne adc popa movsl dec lahf nop daa aas pop pop sbb sbb into fildl sbb xchg test mov jecxz dec int3 daa ja push sti in pusha sahf fcoms popa mov movsl sbb movsb mov stc mov mov rcrl push call add lahf jbe jg addb sub pop mov int3 arpl ret add imul sti aaa ss scas push xchg test and call pop cmc test mov jnp dec push cwtl nop rorl jne sbb imulb push inc pop mov daa mov sbb loope fldcw jmp fisttpl inc mov nop mov mov jecxz cld xor popf adc call jmp mov (bad) inc push mov mov pop jle push inc cli push xchg (bad) dec mov ret cld sarl xchg mov lods dec sbb scas (bad) fcomp xchg movsb and sbb xchg push pop pop inc sub mov cs movsl or dec sub inc loop xlat daa ljmp xor (bad) sahf fwait jnp loopne (bad) mov sub into dec addps (bad) fmull andb and lea in or or xchg fmull mov add popf add inc lahf lret xlat dec ds inc sbb cs pop fdivrl out les sub ret not pop xchg mov scas pop clc aam das popa inc or fsubr (bad) fiadd sbb int3 lret xor fildl xor lcall fiaddl jno pusha pop push jp mov addl rcrb add aaa cmp rep loopne out shrl into test iret daa xchg dec and xlat aas mov out cmp mov and jge push pop gs cmpsb add shlb pop std inc cmp in push fidivr pop adc push lcall cmpsb add ret sbb mov jl mov or dec pop fnstenv in pop xor push imul lret (bad) cltd xchg inc fadds or nop mov dec xorb mov cltd pop (bad) ffreep push les rorb sbb dec iret ja push clc mov adc jno arpl and inc ror xor dec (bad) (bad) cmp add sbb in mov jne dec not fcompl or sbb push shlb cmp mov aaa lds or mov push ret cld fsubl and dec sbb sbb pusha je cld cmp out dec outsl je test sub xor mov imulb int3 jae mov and pushf cmpsl out xchg jae cmp jp xchg rcl push xchg test dec jno ss dec cwtl clc xor (bad) shl mov hlt icebp and and iret pop pop mov ret mov addr16 push mov mov (bad) ja pop (bad) lods call sbb mov addr16 xchg (bad) repz movsb aas and cmp push xchg jmp jl shld int mov inc mov in (bad) and dec int sub les (bad) fsubrp and cmp cmp fidivr sbb add mov or cmp lea repnz adc jg push (bad) mov sbb sbb popf dec adc adc xlat cmpsl (bad) cmp push js scas popa and mov xchg mov cld xor lods push test inc xchg dec push xorl add je sbb fdivrp outsb add add cmpsb pop dec mov movsb outsb (bad) mov mov scas push sti xchg test inc outsb xchg sbb lahf mov and pop adc inc lcall push shlb xor fst mov js std aas aam int ds xchg mov popf fcmovb dec mov or pusha sti imul mov insb or push jbe fwait add push add cmp rorl inc mov push push test jg push dec test push cmpb pusha fisubl sub jmp mov push jecxz cmpl je mov adc scas xchg sbb aaa sub (bad) mov mov int sbb mov sbb mov shll scas mov mov sub stos in adc clc xchg cmp imul push adc imul aaa shll test ja,pt or stos push sbb decb stc divl lea imul cmp add jecxz test push sbb sbb pop cltd jmp hlt xchg jo fnstcw sub inc sub hlt lret int3 and push jae cli lahf orl (bad) add sahf xor repnz dec bound fidivl sbb loope (bad) (bad) insl push mov rolb mov aas and (bad) cmp (bad) inc mov adc jae stos inc add add lods lods adc enter or sahf xchg imul loope mov lds push adc xchg mov adc movsb and fmull xchg add (bad) lods mov push or (bad) pop cmp and inc dec pop cmp jg insl fdiv into loopne dec xchg (bad) in xchg inc mov int3 lods adc and (bad) test mov js jmp std nop push fs xchg push push scas je xchg pop fsubs pop fiadd gs aam jb fidiv (bad) nop in adc in sti scas aaa dec rorb fcmovne mov mov adc test bound dec (bad) lock frstor and es scas add movsb or cmpl xor lock xchg jbe sbb into mov push test imul sbb scas pop xchg out shrb mov push test and xchg test lock push jmp dec imul mov das imul shlb data16 inc push je xor mov mov xor (bad) mov mov in fs jae movsl insb xor jge lock sub movsl inc pop daa sbb fwait cwtl cmp xor dec adc push enter int3 enter mov lret (bad) or fiadd pop and push add rorl mov mov push aaa addr16 dec adc sahf je or push push aad pop mov (bad) in mov lcall js or or mov imul mov pop xor jne,pt dec (bad) outsl std xchg jle scas (bad) mov arpl vcmpsd or daa push pop lods aad sub int fbstp xor xchg mov push pop cmp aaa les lret repz das sub push inc daa push pop inc call test stos mov lock sarb loop shrl adcl sti pusha mov or xor xor rcll movsb enter mov loope and ret add adc orl cmp loopne dec cmpsb fdivr ja in fwait fwait stos stos loope cli into inc pusha bound pushf cmpsl push jno lock inc pusha dec adc insb out fs icebp lret (bad) jmp jno cld ret mov sbb mov add sub loop mov xorb inc add rcl mov rorb push dec pop dec mov es pushf add leave ljmp stc jp xor cmp adc outsb aam mov sub adc xchg das inc push je ss mov imul adc cmp cld test pop cli aas mov aaa lahf lcall xchg sbb and cmpsb in sbb inc in cmpsb lods mov mov pop cs mov add (bad) fstp std mov cmp pop mov mov sub xor inc popl mov add jne repz or push adc sbb push adc rcrb lds inc out xor nop mov outsb and mov jo out xchg daa cmp xchg in mov sbb xchg into ds pop int3 xor cs cmc pusha in ret fild mov cmp inc mov mov notl mov adc xor mov xchg pop xor ds bound out mov mov pusha icebp jae mov inc lcall xchg jmp outsl add or jle jecxz push jecxz mov fcmove mov test lcall enter loopne stos or push xor out data16 fnsave sub mov stc jp xchg mov stc or hlt ret push cmp cmc in mov (bad) aas pop pop call into xor (bad) mov (bad) push imul push xchg sti popa test mov jp cltd or mov testl ficoml xchg lcall (bad) loop sbb fisubr nop pop nop xchg daa adc scas inc mov jge imul or fcmovnu xchg mov dec aas xchg cmp loopne test outsb je fsts mov sar dec test dec (bad) adc sub mov addr16 dec xor lahf add cltd popf movsl or aaa rcl xchg enter pop icebp push jmp dec incl js js cld andb adc lahf fucomip xchg sub cmpsb push xchg jns and loope inc or jbe and loope push dec xchg es sub mov rorl jb shrl cltd out mov lret mov jp (bad) jb cmp lock and jae movsl mov cmpsb les mov adc sahf es xchg xchg sub pop std inc ss adc fsubrl mov adc and mov mov adc sbb pop cmc test (bad) test fcomp add icebp sub add imul mov and xchg iret movsl mov fldcw dec push shlb lods nop pop pop inc (bad) pop into int3 stos pop sti and in jle push mov pusha rorl mov mov bound sbb mov push jmp fistl fdiv sti cmp imul sub jne jnp push sarb ret ret inc push and cmp sti sub push rclb push xchg loop push dec inc subl fdivl and popf shlb dec rcrl pop xchg jmp loopne sbb sub les mov sub (bad) xor lea jno push xor jae aam and and add push push loope fmul fadds sbb iret stos fwait ja cmp inc or rorb mov enter jno stos push jecxz clc add mov fisttpll dec clc and rcrb cltd xchg and mov movsb (bad) pushf fsubrl or jmp es in cs jmp xchg push movsb (bad) push in and jle pop out jae rorb mov aad repz push pop cmpl fbld repz and into stos lret (bad) ljmp outsb mov cld cmp mov lds outsl adc leave call push sbbl cmp stc in sub sub cmpsb sub roll push mov push les mov (bad) int fidivrl loopne outsl in loope pop scas ljmp xor outsl sub scas adc (bad) iret testb xchg adc push dec pop movsl lea and repnz fs sti sbb lock and sti add (bad) dec and mov cmpsl xchg fs ljmp jmp fdivs inc loop,pn mov mov out in sahf mov jnp dec pop xlat clc outsl pushf cmp icebp cmpsl pusha and cwtl enter mov jmp sti push adc sub sbb adc mov dec xor xor repnz lret xchg pminub scas clc sub ja popf sti (bad) std dec or (bad) aas aam and inc add adc pop add sbb loop mov jb jmp popf pushf ret decb mov push mov test les mov cmpsl fiaddl mov loop out insl lea jle test aas xchg xchg lahf xor notl dec inc cmpsb cmp dec push mov dec pop sbbb fs mov aad cs (bad) xlat clc cmp jp jmp push in mov gs insb mov shll insb out xchg in sub popa push push add xchg mov test out cmp jle jecxz push lret test jbe inc adc jle pop ret subl imul movsl cld and fs imul popa out inc sub pop mov or out push ja gs xor cld mov sbb mov mov mov push mov inc mov xlat sub xchg fbld mov movsb add std and imul js mov insl xor mull or xor pop dec mov dec sbbl (bad) ltr add jo push fcmovb popa dec inc jns and add cmp sbb mov and loope dec jae sbb mov pop mull lret and xor out pop xchg add mov nop xchg xchg cli jno jmp (bad) jmp loopne jne cmpsl lcall jle xchg cwtl mov or fwait jns popf mov (bad) pop sbb xor stc in or in daa loope jl divb das test clc lahf push call or mov push lret mov sbb (bad) stc lret repz add loope mov (bad) int sbb movl xchg mov hlt loope aad xor pusha in pop xor xor sbb pushf sbb pop loop push and inc imul xchg xchg out stos adc sub inc ds out daa adc cwtl iret sub pusha dec ret (bad) or out jmp add xchg inc cmpsb pusha lods jbe pop sub into lods jnp and cltd xchg ret jg sub cmpsb xor in and shlb mov sbb ret in dec cmc stos bnd or imul jnp mov les mov sarl lcall mov xchg (bad) fs int3 sarl mov cmpsl and outsb cmpsb pop dec mov and xchg nop ds pop repz lret lods cmp adc mov (bad) cltd pop inc ss popf dec add push inc (bad) push enter scas ljmp loop pop and jno cmp xchg pop data16 mov fdiv sub and mov dec outsb orl mov (bad) hlt push jbe sub jb pusha pop lea push jge sub enter xchg jno addl fmuls divb sti cmpsb pop xchg imulb xor mov add mov cmc cmpsl cmp ret iret or popf mov and (bad) mov jl shrb fcmovbe lcall int3 or inc ret inc movsb jmp mov sbb add aad mov in dec cmp test jmp es xchg adc arpl cmpsb jne (bad) jbe jne pop xor fwait stos jnp sar push or mov int inc imul (bad) addr16 movsb mov cmpsl es pop jle movsb cwtl out ljmp (bad) mov test les lret xor mov jbe adc jg in jp les pop add mov jns push out mov inc mov pop lods ret das xor bound (bad) xchg and or lret bswap dec sbb dec in enter sub cmp imull stos push ret bound cmp adc pop pop sub out add fxtract mov cmc sub es jnp xor rorb jge jmp pop test test xor ds or and pop push sbb ret mov push sahf jp bound ret negb inc lods loop add out inc adc mov sbb and test cs jg inc push jb jo mov xor insl jne mov pop xchg lret mov ret xor xchg sub fldcw inc nop cmp daa pop rcll mov out mov hlt js lcall int3 (bad) out nop (bad) jo fildll jmp clc add cli imul mov mov ss in in test fstps js mov jb dec in mov lods sahf (bad) stos fisttpl lahf lcall mov loopne nop je dec mov loop xchg inc stos out aas xor dec lods jl bound mov sub dec cwtl mov dec faddp mov push test fmulp insb mov popa cmp dec les icebp mov mov out pop adc add sub adc test test ret mov and push lods jae dec div ror add mov cltd test aaa mov mov mov aaa leave mov mov into pop xor cwtl inc sti std and (bad) xchg stos cmp mov or movsb xchg jns xchg inc scas leave out inc sub or dec aaa out test in push bound mov add sbb dec stos scas push cli sahf cltd push pop sahf sbb mov (bad) shrb mov pop push divb cs inc pop and in imul inc mov adc clc inc cmp (bad) mov mov lcall mov mov dec iret (bad) dec int3 dec cmp mov div push add jmp and mov jg mov cli jae inc xor cmp or and daa or stos xchg leave adc ja cwtl in jae jp inc adc jg pop xchg sbb mov pop push push xor arpl mov mov mov pop jecxz and sti es not sub xchg cmp out xor adc dec and icebp stc add sahf ss call jns xchg sub xor xor aad (bad) adc adc mov inc cwtl add repz add rcll daa insb out jnp movb in test mov int mov push fucomi rcl clc dec add cli push addr16 cmp subl push adc pop icebp add ja xor stos add dec inc push in or call cmp loope add pop mov inc mov pop cmp push movsl or xor jp out sub fwait stc sbb add mov imul mov es andl fcompl mov adc xor pop mov cld adc mov bound gs icebp inc shr lock (bad) pop adc enter jb popf out ss fcomps push mov aaa adc lcall test movsl in loopne sub pushf xchg mov lods pop xchg push cmp sbb xlat mov mov test mov jp mov mov sar mov mov loope mov shrb rcrb mov dec and stos pop add jge cwtl sahf xor mov ret mov pusha jae dec xor jnp lcall or incb mov cmp fwait andl test gs fisubl movsl push xchg jbe popa jmp je sbb fldt or (bad) jae lods leave push lea sub dec in shll cmpsl daa test mov adc and mov add pop jbe mov or popf sbb mov mov cmpsl loopne cmp push out mov jmp iret je or mov fldl sub xchg aam mov fstpl xor fcmovnbe mov xor dec xchg sbb imul lahf (bad) xchg out xchg gs jae out aam sub pop cmpsl and negb pop lds push (bad) or pop jl lea dec pop loope jns xor out mov mov or mov in xor mov in add (bad) xchg jbe cmpsb rol les pushf rcll or or mov pop cmp push adc dec sbb shrl cmp push cmpsl lea push add iret dec lea stos frstor dec xor sbb aas hlt repz adc push pop fsts popf add mov mov xchg (bad) aaa cmp shrl mov add dec icebp bound arpl mulb mov xchg push lock jmp orps daa jmp movsl (bad) sbb mov mov unpckhps mov cmc data16 pop jns xor test pop dec jo inc add (bad) cmp shrb ret jle sbb daa xchg loope fistp outsb or decl into mov adc pushf sti sar push (bad) outsb xchg neg sahf jno stos (bad) lock lea lods push mov mov sbb jbe ret jne inc jge cmpsl repz cld ds (bad) iret shl cmc cld mov ljmp inc repnz daa mov mov movsl in sarb push mov mov hlt jae pushf dec xchg les mov enter ret jmp scas xor pop out dec clc (bad) aam add (bad) jno nop xor enter outsb cmp inc jle xchg lods and insb (bad) mov mov ds mov jb ret pop push or adc test into mov into jnp nop mov or pop repnz mov xchg xchg lcall sbb jb popa rolb (bad) or rolb call mov pop push xchg jg cli inc xchg cmpsb iret sbb jecxz test mov pop scas repz imul and stc and loopne mov inc int lret das sti mov cs xor aad lea ljmp enter push dec sbb sbb inc push inc adc xchg xchg repnz mov lcall in lods std mov lahf pop rorb pop fnsave (bad) cmp pushf bound xor mov jb (bad) cld adc das pop sbb xor cmp push mov in dec push push add (bad) sbb pushf xchg mov iret (bad) dec pop xchg fisttp cmp es popa push xor cmp push fldcw int inc mov xchg pop (bad) xor loop and mov mov push inc cs (bad) sbb (bad) fldenv xor in nop xchg mov fcmovnu adc xchg cmp (bad) scas dec out or sahf movsb sbb cmpsl int3 ja xor xor mov imul stc arpl add clc aaa lock jb call int3 nop mov insb sti test add movsb int3 pop int3 imul repnz call dec loope pop js adc imul xor jo nop scas jl cmp daa pop inc rcrb adc inc jmp xchg sysexit sbb jnp gs shr inc retw insb (bad) shrb mov sub mov int and mov (bad) ja lods movsb mov sub push cltd in cmp aad and lcall and xchg inc inc cmp ret mov outsb xchg push dec lods pop loopne je cs and stc lods bound js popf test mov or jmp dec sbb jo popa mov mov sbb movsb push inc adc faddl out rorb cmp aad insb xchg and outsl scas pushf mov and nop stc xchg imul aam mov xchg or call adc dec mov jl popa mov hlt loop adc ja sub add in mov mov jge pop popf or stos pop jl mov xchg mov out das iret xchg lret out das fistp sahf mov rcrl and xchg (bad) jae pushf insb pslld xor push adc sbb jbe xchg mov pop adc xor stos out inc bound xchg mov hlt mov or int3 test xchg jl aad call inc or (bad) inc xchg add mov out je push (bad) mov fs add cwtl (bad) jmp add dec (bad) adc jnp lret fs ljmp stos out (bad) fdivr in jl popa push fmul push add nop shr or out in xchg dec add jmp cmpsl stos call bound ficompl lcall int stc push jae fsubl imul cmc jbe popf xchg pop or dec push cmp xchg mov or xchg out add pop mov pushf out jl push addr16 iret popa mov jnp mov or lcall cltd inc xchg mov sub inc push push fldcw inc pushf and add loope xchg fs lods (bad) cmpsl xchg pop out or lds outsl or addr16 outsb xchg test (bad) jge lret xchg mov ret lret sbb ficoml jns and pusha xor leave dec jnp in cmp mov flds add pop rcrl lret sub add jae cmp decb fnsave out (bad) xchg push inc std jno lahf loopne mov or clc jecxz push rcrb mov cmp out cmp sub push push mov std adc (bad) lea ja pop ficom mov ret (bad) out sub cmp add lret adc pop out add pop shrl mov cltd test sub lea addr16 imul (bad) ja pop pop lds arpl jecxz jnp iret cwtl pop xchg push das mov mov shlb arpl xchg lcall mov inc repz push pusha mov mov inc add jmp sti test stos fdivl xchg sbb or add outsb sbb sub cld cmp movsb or test mov sbb add lods imul out mov jmp dec pop ljmp shrb xor jno lods fimul loopne negb fiaddl jg outsl sbb das xor out cmp mov mov xchg stos scas or mov roll insl add sarl xor push movsb loop repnz mov push sahf xor and out sub ja xlat mov int3 imul (bad) rolb mov lcall cli dec int insb mul mov or ret add inc adc cwtl lea ljmp mov imul jnp movsl xor rcrb mov adc mov ficompl dec cli pop lods mov pop or push (bad) (bad) bnd jno dec stos movhlps shrb mov mov push xchg or mov add loope insb jmp je jno mov pop sti xchg lods xchg outsl adc cwtl dec loopne out (bad) lret repz mov jmp jno sub xchg rorl cwtl mov mov pop gs or mov push sbb sub sub (bad) out dec ljmp lea loopne pop inc rorb (bad) mov mov enter add out push xchg scas int stos push pop mov mov inc aad sbb dec rorb call std sub dec push sarb sahf add and std stos inc jmp mov cmc dec adc out rcr pop adc ja push pop cmp fwait (bad) (bad) popf pop pop (bad) mov cmp xorb in lods int fmuls pop into les jl xor insb inc addr16 sub sub pop sbb inc xor test pop into sbb dec adc push sub xchg push nop dec mov outsb int3 jge adc dec loop ret xor mov inc dec test push xchg mull cmp enter mov (bad) jg sti addr16 xchg dec (bad) adc lret rcr jae sub insb mov dec and cmp jg jge sbb xor jge lret dec in adc and jno xchg inc push pop (bad) addr16 lahf xor lret pop ds jo sub stos lahf popf xchg sbb inc mov add xchg jmp sbb xor and dec fild dec sbb in adc addb mov adc pop in popa mov mov add dec jae inc test jecxz in xor ficoml mov ret adc ret sub add (bad) sbb sbb pop pop popa ja or and pop sub std push into pusha lcall sti pop push and (bad) loope jnp jns cmp push leave mov cmp push cmp icebp aam loop adc cmpsb std aas add xor or in test push inc out mov pushf lret mov lret pop mov mov cmp ja sbb mov outsl inc fsts sub fldenv shrl fs sub dec das enter sub mov sub push mov lock jb push mov pushf or xchg aad xchg sub rcrl in dec loop das dec mov fmuls and lock mov dec lock cmpsb insb lock push xor mov add addr16 loopne jl push sub mov jmp jno (bad) repz push repnz jne jbe pop in stc adc movsb data16 jmp test andl or mov jle push jmp bound cmp hlt add jb cmp (bad) mov mov call or movsl push add pop inc jmp mov mov or decl (bad) std lods inc jns dec repz ja fcom lods lods xchg mov divl pop gs mov pop iret mov int3 lock dec and cwtl mov (bad) out sbb mov adc lods shrl xchg xor dec mov jns jb lods sbb movsl aaa adc sar pop gs add xchg cmpsb shrb ljmp aad cmp pop push mov stc jnp inc mov mov dec std or js xchg sbb cmpl cmp push pop repnz test inc iret inc xor mov notb in push mov push out sub or pushf arpl rclb mov mov ss jecxz ret stos cmp xor push ja xor push test iret mov (bad) jbe sarl leave xchg fstpl mov les pop cmp (bad) and hlt sub add lock leave icebp sub pop or dec push add leave jp in dec cmp cmp aaa stos cmc and lret icebp movsl (bad) lods dec xor pcmpgtd sti sub xor lods ss imul test (bad) jb add incb jns lds xor (bad) out inc xlat and repnz fwait (bad) xor out pop imul jg xorb lret testl inc inc sub cmp mov add jbe and mov jnp mov jnp xchg xchg sbb inc inc and pop adc mov add cmp sub sub cmp cld fstp hlt jbe (bad) pop xchg test ret ret mov icebp jmp and inc fwait (bad) jle insb fnsave sub hlt add lods and push push sti in xor bound mov push cmp push test and jnp mov ret imul imul push mov dec or or lods fiaddl jle and dec lcall or push in lock xchg lret mov xchg dec cmp in cmp in mov pop or subb mov fiaddl les pop mov adc mov lods xor xchg cmc mov push jg pop ret insb jbe jl,pt adc test cld fistl in push je push dec scas jns inc inc pop stos cmp lock inc lret mov cmp adc sub (bad) jno insb dec outsl incl and push inc dec cmpsl rolb lds (bad) out cmc jl or lahf out mov dec popa sti lods int3 mov inc push jmp mov pop mov adc sahf or in xchg leave cld cmp adc fwait rorl insl add in pusha mov das lret adcb mov pop jb stos out das adc scas xchg mov xchg fisttp out cmp cmp sti mov int3 push jg fwait mov rcrw or js arpl add sbb adc (bad) sarl or push mov jae xchg ds sbb pop (bad) loopne mov jb pop int3 mov sub es (bad) sbb in jmp jb push shrb data16 xorl lret xchg fbstp fs push daa arpl leave scas ds es test add sbb mov enter outsb pop or sbb aad gs mov jae mov xchg lods ds add jmp push or aam lds mov inc les adc push jb sti dec push xchg xor lret or xor imul das xlat dec pop mov mov sub imul push mov push adc std out adc push sarb sbb jbe pop sti (bad) pop nop cmpsb sbb mov rcrl cmp add lods mov aaa push notb cmp add lods push subps into pop outsl adcl lds in scas mov xor psubusb add js out mov dec and sub pop aam insb push repnz aaa pop mov mov xchg imul or lret mov dec adc mov out add jo inc mov dec fs xchg into add add addr16 sbbl mov mov shrl sbb jae jp inc mov pop cmpsl add push icebp push adc xchg jge mov cli insb out jb cmpsb ret pop mov pop or lea aam lods loope mov xchg sub dec scas sbbl shrb jl sbb out push leave pop jmp int sbb mov add test cmpsl mov call push popf sbb xor aaa iret mov mov push cmpl insb imul pop pcmpeqb out push mov movl cmp pop dec clc add je aaa pop jnp xchg sbb inc sub in int3 test int les aam inc mov mov movsb (bad) mov sahf hlt mov pusha bound rorb dec lret inc sub call fldlg2 sbb push fdivrl push sbb loope push fnsave xor inc and mov dec mov (bad) cmp das add adc adc sub mov mov mov jmp das add sub int jg addb stc xchg xchg jmp sahf hlt lcall push pop cmc popa add scas cmpsb int3 out push xchg push sarb loope inc daa pushf test fbstp out jp fndisi(8087 mov pop addl jb push xchg mov adc rcll stc add (bad) insb push ja pusha outsl adc in scas cmpsb mov pop in inc xchg fsubrl ja call (bad) into jp cmp push push cld add lahf mov sbb add cltd dec popa fs das lcall push movsb cli xchg or adc mov xor aaa sahf hlt add test (bad) xchg (bad) sub jecxz repnz inc pop mov mov insl mov mov repz xor inc mov inc push push lcall mov mov mov int lret jecxz inc or adc ds fdivrp jmp jl jnp jns mov dec push adc (bad) xchg shrb adc push cld add popf xchg sti stc push dec mov xor xchg call sbb sbb out clc mov data16 (bad) sub gs or dec cs loopne in add aas xchg aad insl fadd pop lcall js jge xchg adc loope and cli lahf mov pop xor inc lds cli mov das push mov (bad) cmp dec jle andl in jns testl leave inc data16 jle cltd add mov pop adc sub into fsubs pop inc rcrb push push add outsb popa or ja lods or push fwait inc xchg test xlat out icebp daa jg sarb in jae inc sbb jge clc jg stos sub out inc aam inc sub xchg mov mov hlt xor and jns fidivrl xor cltd and mov std xchg pop and mov sahf cmp or mov mov (bad) (bad) ret das in pop sbb das dec mov or out popa flds std scas jecxz sbb clc arpl (bad) mov dec mov xchg addr16 sbb push mov test lret popl cmp mov int3 sbb add imul xor xor jmp mov xchg pop ret sub pop cld xchg sub (bad) pushf xor out mov mov and xchg or xor cmc jns sub pop dec in into daa loop outsl gs mov (bad) in sub fwait out arpl add ret xchg mov idivl incb add inc mov dec sbb dec jge and cmp push (bad) lret xchg in iret push add xor cmp jnp ljmp mov xchg add or pop arpl (bad) pop inc movsb imul adc inc in into lahf cmpsb cld pop and xlat lock cmp test or xchg dec das push in xor pop pop adc pushf test outsb inc mov cs sub xchg outsl dec push cmp mov inc xchg outsl mov cmp sarl lds fdivr jecxz mov imulb jno (bad) sub mov outsl inc idivl mov fs stc push adc push arpl dec test sbb or sahf xchg shrl jbe push sbb inc lret bound sbb (bad) cmp out sbb (bad) jb notl ja xchg orl mov adc sub add cmp imul mov shr bound arpl jno fiaddl pop inc jmp fidiv or pushf loop push div xor dec jns mov push cvtpi2ps outsb enter stc or popf test pop mov and jb leave inc push jmp fisttpll (bad) movsl mov sti clc push fs sub mov add movsb cmc jo repnz iret jmp dec ret cmp push sti repz je cmp test lods clc shr mov cmp and and lcall ret pop push or push imul dec inc add or or lock xchg iret inc lea bound push xchg leave mov pop out cld or (bad) cmc add test mov pop dec sub lret in jle jno add pushf lcall loope cmp push push or add pmaddwd pop mov mov add scas fwait cmc sbb cmp ljmp ss (bad) sbb test xchg fimull pop fild outsb pop ret and cmp int adc jp inc sbb in adc cltd sbb int3 xchg ret jg fwait mov inc shll xchg popa gs cmc mov push test outsl mov sbb pushf leave scas imul mov repnz inc cs jb enter xchg in or mov and neg xor jnp add rcr mov push rorl sbb xor ret (bad) es loopne (bad) rcll lcall pop inc lcall daa scas (bad) xchg inc xchg leave jb jb xadd cmc xor popf adc into ja sbb jns dec push or dec sub (bad) mov fcompp call mov inc xor push push push sbb xor and outsl call mov call push dec add or xchg sahf aas xchg lods inc outsl clc mov stos popa fsubs sub int3 jne stc into and out and fwait stos push adc mov cmpl (bad) sbb (bad) and cmp inc or in push addr16 sahf jp fsts push les pop pop adc pop fistl dec pushf adc incb cmpsl daa lahf xchg insb in sti insl xchg addl mov xchg or addr16 cmpsb shll fnsaves inc sub add addr16 xor scas movsb pop data16 pop pop (bad) push lcall (bad) xor sub adc xlat xchg xchg push test popf bnd into jo ret xchg mov jmp fs and cmp dec jl std les xor xchg push mov cmpsb jecxz inc idiv out mov shl cli xchg pop xor gs sahf pop or cld loop daa or or xchg nop stos jb mov data16 in push adc je imul pusha push in mov shrb sub xchg mov push movsl popa adc jne repnz push cmc pop es adc (bad) jl xchg fwait rolb push sti add xchg scas adc roll cmp cmp outsb cmp mov mov cwtl in and test add clc js inc jne pushf xor rorb xchg push jbe cmp mov in xchg rol shlb jo es adc mov movzbl int (bad) and into nop adc sbb (bad) fldl sbb add (bad) repz pop add cmpsl sub mov or inc sahf sub loop sbb jo (bad) xor std and inc mov lock adc push lds repz jns cwtl or or cmp ss rolb (bad) in cmp repnz lock cmpsb shr sbb jbe imul push push add mov xor or movsl (bad) mov lcall repnz lock push scas bnd adc roll dec pop arpl outsb adc dec add push cmpsl out push xor push push jmp mov sbb fistp (bad) and imul out fdivrp std inc dec jmp ljmp pop cltd cmpsl pop xor (bad) xor sub adc test sahf jbe pop jno,pn (bad) or sub out dec push pop inc cs xor in mov and sbb in loope aad push mov mov jmp cs (bad) mov add cmc sub out cmpsb or ja inc sbb cld rclb arpl negb shl sarb mov paddusb xorl mov outsb repnz xor (bad) cli inc adc clc adc dec in mov mov decl adc ffree int3 sub (bad) fisttpl sbb out ja test movsb cltd je push es dec cmpsb pop imul es (bad) in iret xchg xchg enter sbb dec movsl push or cmp repz pop push adc je and dec outsl jge out or dec (bad) xchg nop ret cld sub xchg mov aam cld or push jmp or inc std push mov or (bad) lret cltd into mov lock xchg add in inc sti (bad) mov push jnp jne push iret sbb pop test dec sbb rorb xor out xchg fdivrs mov sbb into adc mov lret orb add loopne lods (bad) push call mov xchg clc stos jno or aam sbb adc fxch (bad) and loopne shrl ret outsl test mov mov xor mov ret icebp test lea jge popl stos jnp roll xchg dec or outsl mov and xlat pusha nop mov xchg out int3 mov cmp mov dec sub xor add sub test xchg mov dec dec hlt out xchg (bad) hlt std ljmp js test mov sbb mov mov xchg cmp and in mov mov mov jle pop stos jge xchg leave cmp xchg data16 mov stos cltd popa inc mov jg in cmc push push fs cmp loopne icebp sub add sbb in rorb mov xchg test out push xor jno pop jg push xor jl mov cwtl test adc push ficomp xchg pop cmp adc mov push mov dec pop sbb inc sbb dec mov xlat sub cld mov add xor jnp pushf add mov mov mov icebp jg jg,pt xchg pop decb cmp mov test xlat pop sti (bad) mov mov daa lock pop les movsb mov mov push ljmp or mov inc pop lds jbe dec xor mov (bad) seto sub jmp outsb push mov stos pusha (bad) sbb mov es cs sahf jae rcl jbe subb insb dec fwait shll lock movsl mov ss sbb inc clc adc les dec popf or aad and jecxz loop cwtl out dec add or add dec push lea push adc pop add lcall mov aas push adc adc scas jbe mov call fadds mov pop mov cmc js loopne cmp xchg lods shl test sti lahf adc pushf lock xchg pop sbb adc push inc popa or into lods pop scas sbb inc cwtl mov mov adc cld xor out pop push out mov loop mov fwait das sbbl adc mov in jne nop pusha call jmp push ret call jmp mov add sub cmpb jne mov cmp mov jne lea push push pushl lea push jmp add push push add pop test je jmp call movsl and rclb add jne call pop cmp jne xor mov test je push push pushl call mov test je push push pushl call pop or popa jne push pop ret xor neg sbb inc ret mov call and fstps mov pop jmp add push dec dec outsl jl pop mov es mov add js mov mov movzwl mov adc add mov sub xor push push mov pop pop mov movswl sub xor dec mov sub jne push pop jmp add and pushf movsl jp or jmp mov adc fnsave xor sbbl aaa dec mov js pop pop mov jmp push daa out add fisubl adc lds out test test mov loop popf insb push add dec push add mov sti xchg xor inc fimul or inc and arpl push mov cmp and test push dec and add daa lods sarb sub jbe out scas inc notb mov add dec lds adc lds in or adc xchg mov push xor imul mov pop sbb popf fmull jl (bad) std sub movsb or fidivl sbb pushf mov mov lcall xlat push gs mov shll call sti in imul fsubl xchg lcall lds xor in inc inc mov push into fcomps test mov mov movsb add xchg ret mov cs ja mov lcall mov test popf push sub sbb paddb pop xchg jecxz xchg jne movb dec xor cmp lret fucom push ret sbb je daa aad sbb adc mov lret test lret rorb roll inc pop sbb xchg rorb mov push out cmpsl lret mov lds loope sbb dec fld or test jg (bad) sub pusha mov dec jle adc jns nop mov js (bad) divb inc sar fsub out sahf call out jle arpl xchg and loope scas lret mov jl inc sti es jl,pt push mov mov inc pop pop imul repz sbb cmp cmp add addr16 jl je jge addr16 fidiv adc lock imul jmp loop out cs test jl decl xchg dec call sub addr16 aas decl aad imul out je (bad) (bad) push ljmp jbe aad lods cmp jl jl pop or inc sarl pop fs pushf adc jl addr16 mov xchg leave rorb jmp push xor notb fwait jmp sub mov das in les xor xor sub stos shlw mov mov fildll mov dec call mov bound daa xor aam mov dec call daa xor jmp xor jmp rcr test fdiv (bad) and xor xor into jmp jnp sub sbb jmp imul cmp cli cmpsl test rcl mov stc sub mov daa xor js cmp jmp xor iret jmp mov in daa xor push es jmp stos shll push xor jmp mov int sbb (bad) cmpsl es jmp enter xor jge cmp jmp mov in daa xor pop bound iret push test mov jle daa xor fisubrl xor lcall iret (bad) out dec lcall iret push xchg inc inc jle cmp jmp out lret pop lret jmp xchg push in daa xor shr (bad) ds sub in inc les aas int3 xor iret jmp call mov mov ja adc dec test xchg in daa xor bound jg jmp push inc add or iret jmp cmp push cmp jmp stc lcall mov aam jmp sub pop push test mov pop in daa xor lcall iret lret vhsubps or sbb into imul (bad) push inc cmp xor mov xor jmp xor jmp xor jmp add xchg inc into mov dec bound cli inc mov sub fisttpll jle test inc xlat loope call jge sub rcrl das iret jmp jle test inc xlat loope dec (bad) icebp add repnz and jnp,pt cmp sub mov add mov sahf scas sbb iret jmp xor and jnp,pt cmp sub fdivrl inc push int3 mov daa xor and jnp,pt push jge sub fdivrl jns imul or fisttpll mov daa xor icebp add repnz and jnp,pt cld or shlb fimul fidiv jmp out lods js imul or mov mov mov inc xor fs movl sub loope xchg bound sub popa movl and and add das xor jmp xor imul push push test xor jmp xor in daa fimull in xchg aaa xchg iret (bad) mulb into ret sahf mov cmpsb mov pop shr daa fwait and add iret xor xor jmp mov iret mov stos stos rcr daa xor jo cmp aad pop xor xor jmp out clc lds pop mov mov test sbb cmp dec (bad) jbe jbe outsl imul loope ficompl (bad) ficompl adc iret lea inc jnp sub aaa cmpb xor insl push out or rcll jl dec je cltd xchg inc sub add dec fwait add ljmp jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor test int3 add daa push (bad) in daa xor cmpsl es jmp xor jmp xor cmp xor iret or xor jmp xor jmp xor jmp xor jmp xor (bad) xor gs xor insl in xchg (bad) push in add mov mov pop mov xchg addr16 in or mov xabort lea jg ret xor and test and pop pop jp mov popf je mov mov cli jo cmc or (bad) inc mov add movsb enter mov (bad) pop xchg or pop jecxz cmc test dec cld test xor std jmp jno xchg mov xor mov insb dec pop sti xchg dec iret cld hlt inc pop mov ss imul mov pop inc cltd lea fisub cmp das test inc rcll movsl inc sti hlt insb repnz movsb add and (bad) jle jle sahf pop cmp inc add add add or add add add push inc add inc add lret inc lret imul gs xor cs insb add add je jb arpl fs jae add add je outsl fs gs popa outsb fs gs add add fs imul add lret cld leave sldt add add add sldt add add int3 sldt add add sldt add add int3 sldt add add int3 sldt add add int3 sldt add add lret str add lret lldt add lret ltr add lret verr add lret verw add int3 (bad) je sldt add add int3 (bad) jl sldt add add gs xor fs insb add jbe jo xor cs insb add gs jne xor cs insb add jbe jo xor cs insb add jb imul add imul insb add gs xor fs insb add gs jne xor cs insb add insl arpl xor fs insb add gs insb xor cs insb add insl fs xor cs insb add gs jne xor cs insb add jb gs xor cs insb add add xchg int3 sldt add add add add add add int3 sldt add add int3 sldt add add int3 sldt add add int3 sldt add add add add add add sldt add add sldt add add sldt add add add je gs outsl popa jb push jns add add addr16 jne jb push popa insb jne inc js add add jae jb gs je imul gs gs popa insb jne inc js add add jb jne jb push popa insb jne inc add add jb popa insb imul arpl add gs je push imul inc add add gs jb popa jns je dec dec outsb fs add dec insl popa addr16 imul dec arpl push imul dec inc gs jo arpl insb inc outsl insb fs popa je inc add add je popa jbe inc imul add add jb popa outsb je push push jns gs js add push popa imul jo imul lods add add push add pop add inc add push add dec add pop add dec add dec add add add add add add add add add add add add add add add add add add add add or add add push add add outsb add inc add insb add dec add data16 add call add add xor cmp xor xor bound xor add sbb add add inc add insl add add je jae add inc add add add outsl add jo popa add jns dec add insl add add add inc add je jbe imul and dec add insl add je add add and add inc add insb add inc add jae arpl jb imul imul add add inc add je jbe imul and push add dec add add insb add add je and arpl outsl add je jb outsl add add je imul je jns add add xor or add inc add insb add push add jb jae imul add add aaa add add add add add add add add or add dec add je add outsb add insb add popa add add add jbe push add push add insb add add add add add popa add add jo jns jb imul je add inc add jo jns jb imul je and sub inc add add add add add add add add add add add jns and inc add je jbe imul and dec add insl add je add add add add add add add popa add add popa add add popa add imul add add add add add jb imul outsb add insb add imul outsb add insl add add inc add push add push add insb add add js add add add add add jb imul je add jne imul add inc add add add jb outsl add add je dec add insl add add add inc add je jbe imul and push add dec add add insb add add je add add add add outsl add add je push add jb jae imul add aaa add add add add add add add jo add imul inc add imul add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or add inc xor add add add adc add add sub add add add add pop add and add add call add adc add add sub add xor pusha pusha add add or test add xor dec dec add add or enter xor add add add push add add add add or sbb add add xor add add add add sub add add add add and add add add add sbb add add add push add cmp adc add add or or add cmp adc add add or push add add add add add add add add add and test add aas add add add and mov inc add add add and sub add cmp add add and dec cmp add xor add add and test add inc add sub add add add add inc add and add add add add sbb add add add add add add and mov add adc add add add add dec add add add add add add add add add add add add mov pop das mov pop outsl mov pop lahf mov pop iret mov pop incl add add jno (bad) mov pop mov mov pop pushl jno pushl jno incl add add jno pushl jno pushl jno pushl jno pushl add add jno aas mov pop pushl jno pushl jno pushl jno pushl jno incl add add add add jno iret mov pop pushl add add jno pushl xchg push dec xchg push dec xchg push inc mov mov pop pushl add add jno fbstp jno mov add add mov pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fadd pushl jno incl add add jno pushl jno mov mov pop movzwl pushl jno (bad) (bad) (bad) (bad) (bad) in fadd (bad) (bad) jb mov pop pushl add add jno xlat mov pop mov mov pop pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) pop pushl jno pushl add add jno pushl jno pushl (bad) (bad) (bad) (bad) pop pushl jno pushl add add jno pushl jno pushl (bad) (bad) (bad) (bad) pop pushl jno pushl add add jno pushl jno pushl (bad) (bad) (bad) (bad) pop pushl jno pushl add add jno (bad) mov pop das mov pop jg jno out mov pop iret mov pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) pop pushl jno pushl add add jno iret mov pop scas mov pop out mov pop lahf mov pop pop mov pop pushl jno pushl jno pushl jno pushl jno incl add add jno sldt add mov pop pushl jno pushl jno pushl jno pushl jno incl add add jno (bad) mov pop mov mov pop pushl jno pushl jno incl add add jno outsl mov pop lahf mov pop iret mov pop incl add add jg add jg add jae add popa add add add inc add add add jl add jl add jl add inc add add add dec add add add jg add jg add add add add sub add add and add add nop push add mov pop das mov pop pop mov pop lahf mov pop iret mov pop incl add add jno dec mov pop jg jno mov mov pop pushl jno pushl jno incl add add jno pushl jno pushl jno pushl jno pushl jno pushl add add jno pushl jno pushl jno pushl jno pushl jno pushl add add jno jg jno sldt add mov pop pushl jno pushl jno pushl jno pushl jno pushl jno incl add add jno (bad) mov pop pushl jno aas add add mov pop pushl jno pushl jno pushl jno pushl jno pushl jno incl add add jno lahf mov pop iret mov pop pushl jno jg add add add add jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno incl add add jno out mov pop pushl jno pushl jno scas mov pop movzwl pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno incl add add jno movzwl aas mov pop aas mov pop dec mov pop iret mov pop pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno incl add add jno fbstp jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno incl add add jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno incl add add jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno incl add add jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno incl add add jno pushl jno jg jno iret mov pop pushl jno dec mov pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno incl add add jno pushl jno lahf mov pop out mov pop lahf mov pop pop add add mov pop pushl jno pushl jno pushl jno pushl jno pushl jno incl add add jno pop mov pop pushl jno pushl jno pushl jno pushl jno pushl jno incl add add add add jno pushl jno pushl jno pushl jno pushl jno pushl add add jno pushl jno pushl jno pushl jno pushl jno pushl add add jno dec mov pop jg jno mov mov pop pushl jno pushl jno incl add add jno pop mov pop lahf mov pop iret mov pop incl add add pop lock pop lock pop adc add add adc add adc add adc add pop addb pop rolb pop rolb pop addb adc add adc add adc add pop lock pop lock pop lock pop lock add add add add add add add add add add add mov pop movzwl aas mov pop jg jno scas mov pop fbstp add add jno dec mov pop jg jno mov mov pop pushl jno pushl jno pushl add add jno mov mov pop pushl jno pushl jno pushl jno pushl jno pushl jno incl add add jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno incl add add jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno incl add add jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno incl add add jno lahf mov pop sldt add mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl add add jno sldt add mov pop movzwl scas mov pop pushl jno aas add add mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl add add jno out mov pop das mov pop fbstp jno pushl add add add add jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fadd pushl jno pushl jno incl add add jno out mov pop jg jno pushl jno pushl jno mov mov pop pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fadd (bad) in fadd jmp rcrb jno pushl jno incl add add add add add add jno movzwl aas mov pop mov mov pop mov mov pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl add add jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl add add jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl add add jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl add add jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl add add jno pushl jno outsl mov pop (bad) mov pop fbstp jno out mov pop das mov pop pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl add add jno pushl jno das mov pop jg jno mov mov pop pop add add mov pop pushl jno pushl jno (bad) in fadd (bad) in fadd pushl jno pushl jno pushl jno pushl add add jno mov mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl add add add add jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno incl add add jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno incl add add jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno incl add add jno mov mov pop pushl jno pushl jno pushl jno pushl jno pushl jno incl add add jno dec mov pop jg jno mov mov pop pushl jno pushl jno pushl add add jno aas mov pop jg jno scas mov pop fbstp add add add add add add add add add add add add add add add add add add add add rolb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add and add add adcb add jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc mov shlb stos push in (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc (bad) cmp into popf fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl in jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl popf fs (bad) sub mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jns jmp rcrb (bad) (bad) dec xchg push pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) jmp lret repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jns pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl popf fs mov xchg push dec xchg push dec popf fs in (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno (bad) mov in jecxz (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl mov (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl lret (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno dec xchg push (bad) (bad) (bad) (bad) push in jecxz mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) (bad) call scas cmp mov push in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec popf pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) (bad) dec popf fs lret sti div jmp lret rolb pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) call cmpsb jb mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl cmpsb jb mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl in jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc (bad) cmp into popf fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov shlb stos push in (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl add add add add add add add add and add add inc sbb add jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc (bad) cmp into popf fs (bad) mov (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov shlb pushf (bad) in fadd (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno dec xchg push call scas cmp lret repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl xchg push call scas cmp jns pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno call scas cmp (bad) (bad) (bad) (bad) (bad) (bad) dec xchg push pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div (bad) in fmul (bad) in fmul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno pushl jno pushl fmul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) sti div inc (bad) cmp loopne pushf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div (bad) (bad) push pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno pushl jno pushl fmul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) (bad) inc mov jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) cmp mov pop pushl jno pushl jno pushl mov (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jns (bad) sti div (bad) sti div pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno (bad) in fadd (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno (bad) in fadd (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl mov (bad) (bad) (bad) push in jecxz mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jns pushl jno pushl jno pushl xchg push (bad) (bad) icebp (bad) (bad) (bad) (bad) dec popf pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div pushl div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpsb jb mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl fadd push in jecxz (bad) (bad) (bad) push in pushl lret in fadd (bad) (bad) cmp mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl popf fs sti div push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl rcrb jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno dec xchg push call scas cmp lret in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov shlb mov in fadd (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc (bad) cmp lret (bad) (bad) mov (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno incl add add add add add add add add and add add andb add jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov xchg push (bad) (bad) mov (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) cmp into popf fs (bad) (bad) push in jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc mov shlb mov in fadd (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov shlb pushf (bad) in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl xchg push dec xchg push pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div (bad) in fmul (bad) in fmul (bad) in fmul push out in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl (bad) cmp mov pop (bad) mov lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fadd pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl jno (bad) fdivrl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div jmp lret les pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl jno (bad) fdivrl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpsb jb mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl fmul (bad) in fmul (bad) in fmul push out in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl popf pushl jno pushl jno pushl jno pushl jno inc (bad) cmp (bad) (bad) (bad) (bad) (bad) (bad) inc mov mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) jmp jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno call scas cmp (bad) (bad) push in jecxz mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl popf pushl jno pushl jno pushl jno pushl jno (bad) mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div pushl mov push in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div pushl sarl (bad) (bad) (bad) (bad) push in jecxz (bad) pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno call cmpsb jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div inc mov mov pop (bad) mov xchg push inc (bad) cmp mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl popf fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in inc mov mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sarl push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) cmp xlat scas cmp jns pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov shlb pushf (bad) in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc mov shlb mov in fadd (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) cmp into popf fs (bad) (bad) push in jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov xchg push (bad) (bad) mov (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno incl add add add add add js add add and add add and add mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc (bad) cmp lret (bad) (bad) mov (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov into popf fs (bad) (bad) (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno dec xchg push call cmpsb jb loopne pushf (bad) in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov xchg push call scas cmp lret repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) jmp in jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov in (bad) (bad) (bad) (bad) dec popf pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl mov imul jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) call scas cmp jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno inc mov sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) in fmul (bad) in fmul (bad) in fmul (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno call cmpsb jb (bad) mov xlat scas cmp jno dec popf fs sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno pushl jno pushl jno pushl fmul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div jmp lret mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno pushl jno pushl jno pushl fmul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) push in jecxz in fadd jmp rcrb div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div inc mov mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno (bad) mov xchg push dec xchg push dec xchg push dec xchg push push in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno inc (bad) cmp mov pop pushl jno pushl jno pushl jno pushl jno dec xchg push call cmpsb jb sti div (bad) (bad) (bad) (bad) push in jecxz mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov div (bad) (bad) (bad) (bad) (bad) (bad) pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov (bad) (bad) (bad) (bad) push in jecxz mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl popf fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl in (bad) (bad) (bad) (bad) push in pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno call cmpsb jb lret pushl jno pushl jno pushl jno pushl jno pushl (bad) cmp in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpsb jb mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div pushl popf fs in fadd push in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div (bad) (bad) pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno jmp lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div dec popf pushl mov (bad) mov shlb sub mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div inc mov mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno call scas cmp (bad) (bad) (bad) (bad) (bad) (bad) push in jecxz les pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno dec popf fs (bad) (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) jmp in jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov xchg push call scas cmp lret repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno dec xchg push call cmpsb jb loopne pushf (bad) in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov into popf fs (bad) (bad) (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc (bad) cmp lret (bad) (bad) mov (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl add add add add add addb add add add add add inc add mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc (bad) cmp lret (bad) (bad) mov (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov into popf fs (bad) (bad) (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno dec xchg push call cmpsb jb loopne pushf (bad) in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov xchg push call scas cmp lret repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) jmp in jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov in (bad) (bad) (bad) (bad) dec popf pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl mov imul jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) call scas cmp jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno inc mov sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) in fmul (bad) in fmul (bad) in fmul (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno call cmpsb jb (bad) mov xlat scas cmp jno dec popf fs sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno pushl jno pushl jno pushl fmul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div jmp lret mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno pushl jno pushl jno pushl fmul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) push in jecxz in fadd jmp rcrb div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div inc mov mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno (bad) mov xchg push dec xchg push dec xchg push dec xchg push push in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno inc (bad) cmp mov pop pushl jno pushl jno pushl jno pushl jno dec xchg push call cmpsb jb sti div (bad) (bad) (bad) (bad) push in jecxz mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov div (bad) (bad) (bad) (bad) (bad) (bad) pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov (bad) (bad) (bad) (bad) push in jecxz mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl popf fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl in (bad) (bad) (bad) (bad) push in pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno call cmpsb jb lret pushl jno pushl jno pushl jno pushl jno pushl (bad) cmp in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpsb jb mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div pushl popf fs in fadd push in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div (bad) (bad) pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fmul pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno jmp lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div dec popf pushl mov (bad) mov shlb sub mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div inc mov mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno call scas cmp (bad) (bad) (bad) (bad) (bad) (bad) push in jecxz les pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno dec popf fs (bad) (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) jmp in jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov xchg push call scas cmp lret repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno dec xchg push call cmpsb jb loopne pushf (bad) in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov into popf fs (bad) (bad) (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc (bad) cmp lret (bad) (bad) mov (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl add add add add add nop add add add add add add add mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns dec xchg push (bad) (bad) mov (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) cmp into popf fs (bad) (bad) push in jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc mov into popf fs (bad) (bad) (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov shlb pushf (bad) in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno dec xchg push call scas cmp lret in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl xchg push call scas cmp lret repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno dec popf fs in fadd call cmpsb jb mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl cmpsb jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno call cmpsb jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div (bad) in fmul (bad) in fmul (bad) in fmul (bad) in fmul push in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno jmp lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl jno pushl jno pushl xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) (bad) cmp (bad) cmp mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl jno pushl jno pushl xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call scas cmp jno call cmpsb jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fadd inc mov mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl jno pushl jno pushl xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jno call scas cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpsb jb mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) fdivrl (bad) (bad) fdivrl (bad) (bad) fdivrl stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) push in jecxz in fadd jmp lret mov jno (bad) mov in jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec popf pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno dec xchg push pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns call cmpsb jb sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl cmpsb jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno push in jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno jmp lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec xchg push pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno call scas cmp mov mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl xchg push (bad) in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp rcrb jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jns pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fadd pushl jno push in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div jmp lret lret pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno inc (bad) cmp shlb mov sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno jmp lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno call scas cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno call scas cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fadd (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) mov scas cmp scas cmp jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl xchg push call scas cmp lret repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno dec xchg push call scas cmp rcrb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov shlb pushf (bad) in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc (bad) cmp into popf fs (bad) (bad) (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) cmp into popf fs (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov xchg push (bad) (bad) mov (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno incl add add add add add rolb add add add add add add add jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov xchg push call scas cmp rcrb div (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns dec xchg push call scas cmp rcrb div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns dec xchg push call scas cmp rcrb div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns dec xchg push call scas cmp rcrb div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns dec xchg push call scas cmp rcrb div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns dec xchg push call scas cmp rcrb div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno dec xchg push inc (bad) cmp mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec popf pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns push in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fadd pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc mov imul jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno inc mov sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) in fmul (bad) in fmul (bad) in fmul (bad) in fmul (bad) in fmul (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl jno pushl jno pushl jno pushl jno (bad) in fmul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno inc mov sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fadd jmp rcrb jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl jno pushl jno pushl jno pushl jno (bad) in fmul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno jmp lret imul jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpsb jb mov pop pushl fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fadd inc mov mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl jno pushl jno pushl jno pushl jno (bad) in fmul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div pushl jno (bad) in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpsb jb mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl jno pushl jno pushl jno pushl jno (bad) in fmul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in jecxz mov pop pushl cmpsb jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpsb jb mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl mov (bad) (bad) fdivrl (bad) (bad) fdivrl (bad) (bad) fdivrl in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in jecxz lret pushl jno pushl jno pushl jno pushl jno pushl jns dec xchg push call scas cmp in jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec xchg push pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) sti div (bad) (bad) cmp mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in jecxz mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno call scas cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpsb jb mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl popf fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti div pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl popf fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno call cmpsb jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpsb jb mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl cmpsb jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in jecxz mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno inc (bad) cmp mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) mov cmpsb jb in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec popf pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) sti div jmp rcrb jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) in fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp rcrb jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in fadd pushl jno call cmpsb jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp rcrb jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec popf pushl cmpsb jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in jecxz into popf pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpsb jb mov pop pushl fadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in jecxz jmp cmpsb jb mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno jmp rcrb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl popf fs sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push in (bad) mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrl pop pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno call cmpsb jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl cmpsb jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno inc (bad) cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno dec xchg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jns dec xchg push inc mov mov pop pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno (bad) sti div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns dec xchg push call scas cmp rcrb div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns dec xchg push call scas cmp rcrb div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns dec xchg push call scas cmp rcrb div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns dec xchg push call scas cmp rcrb div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns dec xchg push call scas cmp rcrb div (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jns dec xchg push call scas cmp rcrb div (bad) (bad) (bad) (bad) pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl jno pushl add add or or add or add add add add or add add data16 add jo pop jae add ret add push ret add outsl test add push adc js in fisttpll fwait addr16 (bad) icebp fildll icebp dec js mov mov and and jp cmc cmp pushf shll cmpsb cmp adc cs jo stos popa int3 xchg push xchg arpl and and and test out pop add push xor aad mov scas fidivr lahf out out es std adc jle ljmp pop aas cmp (bad) lcall hlt and add outsl (bad) push add pusha add xor add or add adcl shlb xor add or add adcl shlb xor add or add adcl shlb xor add or add adcl shlb xor add or add adcl shlb xor add or add adcl shlb xor add or add adcl cmp add or or mov movsl pop sub hlt mov cld lods pop mov loope pop add aas push or mov lahf jo addl (bad) push cmp fldenv cvtps2pd cmpsb in mov add rolb dec or sub sub inc or cmp mov sub xor and add inc inc rorb orb sbbl call mov popa sub push sbb loop sbb les roll push je add iret mov inc inc xchg lock faddp xor cwtl enter mov add addr16 in aas scas add out add xor sarb loopne rolb jg or pop cmp cmp add sub jmp adc mov in push or push add add add xor add or add adcl shlb xor add or add adcl shlb xor add or add adcl shlb xor add or add adcl shlb xor add or add addl inc mov lods jecxz fwait mov dec mov jne lods sbb enter sbb cmpsb test xor out add in xchg xor lods mov mov js jmp pusha mov pop dec xchg repnz or or cmp jle fst out int xchg lods in pop push inc and lock in xchg cmp fmull or add adc add inc add sbb add sahf fsubrs add inc add mov loop (bad) iret insl inc loopne fcoml inc test stos pop idivl jle mov jecxz sar mov dec and inc or cmp fldcw iret aas addr16 xchg or add xor xlat lret in add (bad) jae xlat lret mov clc fwait andl add xchg sahf imul rcll pop sbb mov jae add cltd shrl (bad) lret add arpl and add add adc add or add pop lea sahf sbb cli mov push out adc or cli imul xlat pop jnp cmpsb jg jmp shrd fadds xor dec push sub test ja mov mov jb mov xor addr16 jg incl dec xchg push scas mov ljmp fwait in mov jp xor mov bound shrl sub in sti out outsl cs dec add lret cld int3 push push adc push push js cmp jmp adc mov aad mov fwait mov fnstcw mov jp (bad) jle jns jecxz out or xor int mov ds lret add int3 dec mov icebp int3 push dec mov lret jle push idivl xchg ds cmp jnp aas fisttp add imul adc ja (bad) fstpt hlt or add test scas push in or inc add pop xor (bad) iret hlt (bad) add lods outsl (bad) add std push mov addb jb jmp jge jl call pop and pop ljmp xchg add enter out inc cwtl xlat xor add jae neg mov xchg adc push pop inc mov lods adc call inc push mov imul (bad) jbe pop out call imul push xchg inc xor jae xchg lcall adc xchg or (bad) xor int3 or add mov push (bad) push sbb pop movsb insb and lock mov out lret sub stc cmpl hlt fistpl ja nop popf scas or push loop add add int jp sbb ds or mov mov out push sub ror dec daa sub jns jge jb mov je mov dec push pop cld dec push push out inc loop fildll mov lret mov neg outsl idivl sub sbb sbb cmpsb clc and lahf insl mov xchg xlat push jnp int3 fs xor flds addr16 (bad) je outsb lds out mov add jnp into sub popf cmp call jp jnp jo es pop add add fnop in cmc cmp pushf jo inc sbb ss pop mov orl pushf fisub jns insl cmovbe push add pop ss (bad) push in and add stos imul cmc repz xchg int or loopne sbb jl loope dec push inc add (bad) insb (bad) mov outsb inc mov (bad) out out bound add lods adc jne pushf jbe lcall mov shlb and mov xlat lods iret mov lods outsl outsb ja clc mov add push and add add add js fwait mov clc inc imul add push repnz aaa adc shlb cltd out outsl out sub js xchg (bad) or loopne dec pop pop mov mov cmp notb sti std fsubrl sbb pop outsl and sahf or lock out push cli in add push out outsl push ljmp loope xlat iret pop cs add mov rol push sub jp lcall movsb lods sub pop jmp xchg xchg cmp add cmp addr16 cld pop mov jne add cmp mov std jb fcomi xchg (bad) or outsb and jo dec sar push insl xorl mov jl subl std sub add lods iret aas jo pop mov cmp xchg (bad) jg xchg movsb jo stos test mov stos stc pop and pop push sar test cmp js (bad) ja mov shlb dec inc dec xchg adc push jmp pop lods push fwait decb jne dec rcl lds fldcw clc dec fist mov add popf mov ja movsb out popf xchg hlt push imul dec fcomi call cmp movsb leave fdivl (bad) pushf mov out jg lret adc cmpsl int dec lahf out popf aam movsl cmpsb mov inc repz pop lods insb xor leave bound fcomi xchg fisttp cld aam mov hlt mov pop cs push dec (bad) adc sub xchg dec std out inc pop rcl or jmp lret testl popf in adc jge xchg div xor push dec ftst pop xchg movsb fistp jae pop jge outsb lds pop std repnz (bad) cs sahf or pop int3 sub pop sub pusha fcomi xchg adc rorb ds pop shr jl and pop adcb int3 sbb aas cmp iret inc pop mov outsl test loopne cmp inc pop jb push xlat lret scas fisttp aad (bad) std or loopne in xor cmc mull add lods test mov push (bad) xor add inc test dec aad cmpsl int3 lret lds sti cli outsl mov inc mov mov loopne xchg loop gs sbb xchg (bad) fnstsw mov add xlat insb insb (bad) hlt leave cmc cmp cmp jb js pop in mov jp stc pop movd loop lods fdivrl fisubrl jo in in adc jle movsb cmpsl aaa arpl in subb imul out jbe push stos stos clc mov ret jge outsb jg add pop xor or loop xor outsb inc pusha mov test fwait mov jl scas lret dec add lahf test sub jmp push pop jg xchg mov mov pop adc cmpsb insb sub lahf (bad) ja add xor mov stc ljmp in cli jmp mov ret je out mov stc es addb call daa pusha (bad) sti rcrl or ret mov imul fidivr mov cmp xchg jbe push loope add sub xlat lret push jo add repnz outsl lock add arpl add cld loop cmc lds cld cmc adc orb add arpl and add add jns or jp movsl dec daa dec mov add (bad) pop adc and shll add add cmpsb cld leave call pusha adc and sbb sarb inc and or mov dec add mov inc add xorb je pushf in jp push pop sahf adc sbb mov mov fsub cmp add dec sbb sti out push je rolb je icebp scas (bad) jae push pop daa (bad) (bad) sub dec push fnstsw cld cmp cmpb sbb push and add add add sbb add add add sbb add add add sbb add add add sbb add add add sbb add add pop add stos stos push stos cli stc sub sbb xlat lea scas xchg jne lods sub dec or sub (bad) icebp test jo jecxz mov push gs scas lret lea or loopne shrb (bad) sub dec pop jmp mov (bad) loop ds sbb inc sub fwait xor fcomps cmc dec add xor mov or inc cmp jge pop imul pop sub hlt mov enter popf in lahf ja sti ljmp xchg jno push xchg jno sub mov or inc dec (bad) pop lret push enter add adc sbb dec ret ret sub inc popf test jnp data16 inc addl mov mov sbb and dec sbb cmpb jge jo add push add ret inc ss adc (bad) add jmp clc add dec cwtl out (bad) aas sti std pop sbbl cli push push push gs push hlt xor add xchg cld std popl add and add add add sbb add add add sbb add add add sbb add add add sbb add add add sbb add add add sbb add add add sbb add pop mov lds adc add add dec inc scas inc pusha (bad) add add add add add add add add add add add add add add add add add add add js add jle add (bad) cmp ret add mov leave xchg push add popf gs cmpsb jb (bad) scas addl in fadd add (bad) incl add add add or add add add add add or add add add add add add add add add add add add add add add add add add add add pop add add add or or add add add add add (bad) decl add or add add or add push or add add add or add add add add add add add or add add add add add add add or add add add add add add add or add add or add add add add or add add add or or add add add add add or add add add add add add add add add add add or add add add or add add add add cld jg add jg add jae add arpl add inc add add add jle add jle add jle add dec add add add pop add add add jg add add add add sub add add or add add nop add add add add add add add add jns add (bad) cmp les push add popf gs cmpsb jae (bad) scas addl (bad) (bad) incl pop add add add add add add add add add add add add add add add add add add add add add add add or add add add add add add add add pop add add add add add (bad) (bad) incl add add add add add push add add (bad) (bad) (bad) incl add add add add add pop add add incl add add add add add add add add add incl add add add add add add add add add incl add add add add add add pop add add (bad) incl add add add add add add add add add incl add add add add add add add add add incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop lock pop lock pop lock pop lock push xor add jo add adc add addb pop rolb pop loopne add rolb pop rolb adc add adc add pop lock pop lock pop lock pop lock pop lock pop lock add add add add add add add add add add add add add add add add add mov pop add (bad) cmp leave xchg push add popf gs cmpsb jae (bad) scas addl in fadd add (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) decl add add add add add add add add add add decl or add add add add add add add add add (bad) incl add add add add add add add incl add add add add add add add incl add add add push add add add (bad) incl add add add add add add add incl add add add add add add add add add add add incl add add add add add add add add add add add or add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jmp incl cld add add add add add add add add add add add add inc add add add add add add add add add add add add add add add add add incl add incl add incl add incl addb add add add jecxz add add add add add add add or add add add add add add add add add add jns add (bad) cmp les push add popf fs cmpsb jb xlat scas addb mov add rcrb sarl add in add in jecxz sti div add (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or incl add add add add add add add add add add add push or (bad) incl add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add push or add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) incl add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl decl push (bad) decl add add add add add add add (bad) (bad) incl add add (bad) (bad) incl call (bad) (bad) (bad) decl add add add add add add (bad) (bad) incl add add (bad) (bad) incl push add or add add add add add add (bad) incl add (bad) (bad) (bad) (bad) incl add add add (bad) add add add add add add (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add add add or add add add add add add (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add add add or add add add add add add (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add add add add add add add add (bad) (bad) incl add (bad) (bad) (bad) (bad) incl (bad) decl or (bad) incl add add add add add add (bad) (bad) incl add (bad) (bad) (bad) (bad) incl (bad) incl or or add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl incl add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add push or (bad) incl add add add add add add add add add add add add add add or incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add sub add sub add push add add add add add add add add add add add add add mov pop add (bad) cmp les push add popf fs cmpsb jb xlat scas addb mov add rcrb sarl add fmul add in add in jecxz sti div add (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or incl add add add add add add add add add add add add add add add or (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add (bad) incl add add add add add (bad) (bad) (bad) (bad) call push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add or decl add add add add add add add add (bad) (bad) (bad) decl add add add (bad) (bad) (bad) incl call add (bad) call or add add add add add (bad) (bad) (bad) (bad) decl add add add (bad) (bad) (bad) incl (bad) incl (bad) (bad) (bad) (bad) decl add add add add add add add (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add adc or add add add add add add (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add adc add add add add add add (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add adc add add add add add add (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add (bad) (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) (bad) call add (bad) (bad) incl add add add add add add add (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or or add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push adc add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl decl add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add or (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add sub add xor add pusha add add add add add add or add add add add add add add jns add (bad) cmp les push add popf fs cmpsb jb xlat scas addb mov add mov pushf add lret jmp fadd add fmul add in add in jecxz imul in sti div add (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add push or adc (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add or adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add (bad) incl add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add or decl add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) (bad) movups (bad) (bad) (bad) (bad) (bad) incl add add add decl add add add add add add add add add (bad) (bad) (bad) (bad) (bad) decl add add add (bad) (bad) (bad) (bad) (bad) (bad) incl adc incl adc (bad) (bad) call or add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add add add (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) (bad) incl adc (bad) (bad) (bad) (bad) (bad) incl add add add add add add add (bad) (bad) (bad) (bad) (bad) decl add (bad) (bad) movups (bad) (bad) (bad) (bad) (bad) incl push add add add add add (bad) incl add add add add add add (bad) (bad) (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add decl add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add (bad) incl add add add add add add (bad) (bad) (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add (bad) incl add add add add add add (bad) (bad) (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add (bad) incl add add add add add add (bad) (bad) (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add call add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push add add add add add (bad) decl add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) (bad) (bad) (bad) call add adc (bad) decl add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc (bad) (bad) call add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) call add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push (bad) call add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add or adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add or adc (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add sub add cmp add js add add or add add adc add add add add add add add mov pop add (bad) cmp les push add popf fs cmpsb jb xlat scas addb mov add rcrb sarl add fmul add in add in jecxz sti div add (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add (bad) push add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add (bad) decl add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add (bad) decl add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push push push adc (bad) (bad) (bad) (bad) (bad) incl add or or push adc decl add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) incl (bad) (bad) (bad) (bad) (bad) call or add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add adc (bad) (bad) (bad) (bad) (bad) call add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add adc or add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add or adc add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add push (bad) incl add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) call add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add (bad) sgdtl add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add or add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) call add or or add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) incl or or add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) call push add or add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add or call add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) call add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add decl add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add or (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add addb add add add add add adc add add add add add add add jns add (bad) cmp les push add popf fs cmpsb jb xlat scas addb mov add rcrb sarl add fmul add in add in jecxz sti div add (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add (bad) push add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add (bad) decl add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add (bad) decl add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push push push adc (bad) (bad) (bad) (bad) (bad) incl add or or push adc decl add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) incl (bad) (bad) (bad) (bad) (bad) call or add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add adc (bad) (bad) (bad) (bad) (bad) call add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add adc or add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add or adc add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add push (bad) incl add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add (bad) sgdtl add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add or add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) call add or or add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) incl or or add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) call push add or add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add or call add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) call add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add decl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add or (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add nop add add add add add add add add add add add add add mov pop add (bad) cmp les push add popf fs cmpsb jb xlat scas addb mov add mov pushf add lret jmp fadd add fmul add in add in jecxz sti div add (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add push or adc (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add or adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add push pop add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add pop (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add (bad) (bad) call add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add or (bad) call add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) (bad) (bad) movups (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add (bad) call add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add or (bad) (bad) call or add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add or or or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add adc or add adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add pop adc call add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add adc decl add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add pop (bad) call add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add (bad) incl add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add (bad) incl add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add (bad) incl add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add call add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add push (bad) decl add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add (bad) incl add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add or add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) decl add or (bad) (bad) (bad) (bad) call add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) decl add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) decl add adc call or add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add pop or (bad) (bad) call add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) call add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add or (bad) call add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) call add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) decl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add or add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add push or adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add sub add pusha add add add add add add add add and add add add add add add add jns add (bad) cmp les push add popf fs cmpsb jb xlat scas addb mov add mov pushf add lret jmp fadd add fmul add in add in jecxz imul in sti div add (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add adc incl add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add (bad) (bad) decl add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add (bad) (bad) (bad) decl add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add (bad) (bad) (bad) call add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add (bad) (bad) (bad) call add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add (bad) (bad) (bad) call add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add (bad) (bad) (bad) (bad) (bad) (bad) decl or add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) incl add push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) call add push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) call add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add or or or or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) call add add add add add (bad) (bad) incl add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add or add add add add add add add add or (bad) (bad) call add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add (bad) (bad) (bad) incl add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add push (bad) (bad) decl add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add push (bad) (bad) call add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) incl add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) incl add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) incl add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add push (bad) (bad) (bad) incl add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add push (bad) (bad) decl add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add (bad) (bad) (bad) incl add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add pop (bad) (bad) (bad) call add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add pop push (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add or add add add add add push (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) call push add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add push (bad) call or add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add push (bad) (bad) (bad) (bad) (bad) (bad) (bad) call add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add push adc (bad) (bad) call add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) decl add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add pop (bad) (bad) (bad) (bad) decl add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) decl add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add or add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add adc decl add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add sub add adc add and add add add add add addb add add add addb addb add addb add incl add add add incl incl add incl incl (bad) incl add (bad) incl (bad) incl (bad) clc jbe (bad) iret (bad) (bad) ljmp insb outsl (bad) (bad) inc mov iret ljmp insb insb insb outsl (bad) iret inc iret push iret insb insb ljmp mov (bad) enter (bad) iret (bad) ljmp mov push (bad) iret xchg iret (bad) (bad) cld insb outsl mov inc (bad) iret xchg iret insb cld push outsl (bad) (bad) inc mov iret outsl (bad) (bad) clc jl insb outsl (bad) (bad) (bad) (bad) incl incl add add add add add add add add add add add add addb addb add add addb add addb add incl add add add incl incl add incl incl (bad) incl add (bad) incl mov mov mov mov mov (bad) insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb mov mov mov mov mov (bad) insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb mov mov mov mov mov (bad) insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb mov mov enter mov mov insb insb insb insb push insb insb insb insb insb insb insb mov (bad) (bad) (bad) (bad) push mov mov (bad) insb insb insb (bad) (bad) (bad) (bad) (bad) cld insb insb mov insb mov (bad) (bad) (bad) (bad) push (bad) enter mov insb insb (bad) (bad) (bad) (bad) (bad) cld cld (bad) clc insb insb insb insb mov push (bad) iret push idiv push mov insb insb insb (bad) cld insb outsl (bad) cld insb insb outsl ljmp mov push iret (bad) push mov pop mov insb insb (bad) cld outsl (bad) (bad) cld insb insb insb (bad) insb insb insb mov push iret (bad) push mov pop mov insb insb (bad) cld outsl (bad) (bad) cld insb insb insb clc insb insb insb mov push iret (bad) push dec push mov insb insb insb (bad) cld outsl (bad) (bad) cld ljmp insb insb insb insb mov (bad) (bad) (bad) (bad) push test mov (bad) insb insb insb (bad) (bad) (bad) (bad) (bad) cld insb insb insb insb insb insb insb mov (bad) (bad) (bad) (bad) push mov mov (bad) insb insb insb (bad) (bad) (bad) (bad) (bad) cld insb insb insb insb insb insb insb mov (bad) enter test mov mov insb insb insb insb insb push insb insb insb insb insb mov mov mov mov mov (bad) insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb mov mov mov mov mov (bad) insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb mov mov mov mov mov (bad) insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb insb sub add adc add and add add add add add rolb add add add addb addb add addb add incl add add add incl incl add incl incl (bad) incl add (bad) incl add or mov add add decl add (bad) clc clc (bad) rolb add out (bad) (bad) in rolb or mov mov ljmp or stos add mov mov (bad) (bad) in rolb add clc clc (bad) (bad) rolb add decl add psubb add add incl add aas add loopne add rolb add add add add add add add add add add add add add add add pop add loopne add clc aas add movsb cmp add add push cmp add cld add or xchg add jne adc mov les and and and inc jl push and (bad) add and adc mov xor mov or lods mov leave mov jmp adc or push je add xor add ret xor sub int3 and rolb inc aam mov adc add pop push dec bound add je and orl lods jb cmp pushf and nop in jb cmp sbb test andl js (bad) mov cmp shlb and pop add pop in jb cmp sbb add inc xchg fmul fsub add jb cmp cld add and add call in adc or add call or inc and faddl je push movzwl add jmp sub cltd (bad) xor or js and xchg pop and and sbb push push mov adc add push leave call add test jne add mov mov xchg or sbb ret rorb mov sbb push inc inc cmp jne add (bad) iret adc push pop nop add mov hlt pop je jbe or call test dec dec mov push mov push or addb bound inc pusha ret add jg jle gs pop push adc mov nop push push orb out pop bound cmp loopne mov scas cmp inc mov push or push jne addl frstor sbb sbb jmp xchg add add or cmp jl icebp (bad) clc (bad) jg add pop pop add mov jns add mov mov jb inc into add add call ja add jne in or cwtl or stos cmpl and cmpsb gs jmp add divb add into fldl clc aaa xor iret pop (bad) sub add sub aas sub add jl cmp adc rolb sarl test add or or pop cmp cltd inc sbb pop xchg nop pause mov in lock jge pop mov cmp (bad) out adc add or push add and sbb cmp testl and sarl sbb addb mov (bad) xor pop clc stos fs call fmull add push pop push push push pop jne jns lret and cmp ja movsl add movsb insb lahf in rorb adc movl adcb call add mov rorb push xchg repz nop out ja inc and movb ds xor push push xchg jbe add cmpsb jne push jae add sub jo cltd dec adc cmp jmp pusha aas add add sub push psubsw or adc xchg sbb adc cmpsb mov dec test pop ljmp add xchg add je xchg and xchg add sub dec inc cmc xor cmp add add xor sbb clc call or pop inc adc sub fs push test shrl cmpsb jmp adc mov mov xchg imul je sub mov and xchg sahf jmp inc add pop leave lock sub cmovno add mov or out fdivrp lea std pop sub inc inc dec pop inc loop adc add inc sarb (bad) incl aas push xchg add cmc add xor pusha movq sub jl xlat push push call and push std add dec jbe nop mov fnstsw rclb and adc cmpsl add pop movsl and add call insb aaa add jp pop mov clc je add cmpsl xchg add bound dec pop (bad) push jne test inc mov movsb loopne xchg fimull pop test es mov das mov push xor test es inc jne test mov popf out dec mov or push or mov push (bad) rcrb push cmp sub sbb mov cmp push fdivs add cmpl outsl sub imul or inc movups (bad) push adcb (bad) cwtl sbb jecxz xor add push es sti add jae ror push add mov repz mov mov and mov push ret mov cmp inc je add push adc out pop adc add (bad) mov in pushf cmp dec fs pushl int3 andb xor leave cmpb roll adc ja cmp (bad) shlb mov push cmp add (bad) push xor leave (bad) idivb add push rolb daa add jl movb sub pop cmp push test mov ret jmp in mov les dec ds add xor rclb sbb or daa push xchg push call mov imul rcl lea cmp and add pushf mov pop jo pop jl scas pop cmpsb orb jmp out sub jbe in push pop push in pop cmp loopne cmp inc movsl adc add cmp jo add test jns cmp stc add movsl das jne add jmp xchg pop mov sub push pusha mov scas sub pusha dec movsb popf adc dec add roll pop add or movhps test cmp cmpsb adc and cmp mov les clc add add jl (bad) add push cwtl test mov sub jl adc leave and mov orb incl rolb loop cld popa in test add adc outsb or add xor push sub xchg hlt ret and sub push dec fs xor and or add dec sub add push sub scas bswap xor testl divb sahf loopne inc andb sarb (bad) push and add add ret push fs gs mov icebp test or in fadds and sbb repz inc or add andl xchg (bad) lret mov and mov pop dec xchg pop fsub (bad) (bad) aaa sub push (bad) repz leave fsub ds (bad) mov dec adc add push xchg in ja addb pandn add adc sub (bad) in cwtl and inc xor mov imul push lcall mov or clc add cmp xor add mov addb mov add xchg nop add mov out test (bad) xor dec lret (bad) dec (bad) hlt imul add xchg jmp lcall mov pop out stc cvttps2pi or dec or adcl fbld xor add fnstcw add or add mov sub adc dec enter adc pop add sbb enter lcall lea (bad) cld adc pop or xchg cmp sbb es sub add and add repz je and aas mov xlat xor adc and dec (bad) pop xchg aaa insl sub outsl incb dec (bad) fist addl pop fs adc xchg pop mov add fldl icebp call cmpsb add jnp mov jne add and mov cmp dec stos pop dec push xor (bad) xchg clc add dec push aaa pop bound push (bad) inc stos (bad) jne or pop ljmp push dec mov or je jo ja jg test sub icebp insb or jnp or mov jg jge pop arpl je push jle jmp fcoml or push add inc xor pop sub mov add cmp fldt les or test mov mov add mov pop or xor and dec mov fdivrl bound cmp or roll (bad) add or bnd dec cmp jecxz push add pop pop aam add mov insb pop mov add mov mov or or add push jo dec add dec xor lock pop out inc fsincos inc pop rolb subl int (bad) dec jge je jns (bad) sub ret add (bad) jne dec sahf jmp add hlt lock xchg lahf jno or or or adcl cs mov lock add and inc sbb daa xor jns adc loope or sub inc mov cmp add xchg and mov xchg inc push cmpsl pusha adc and and (bad) pushf andl add cmp inc sub (bad) jmp add jge (bad) jb pop jmp cltd test adc jne push cmp ret pop fs inc adc sbb jns or ret mov or push add pop je mov mov add sub loopne dec push int3 aas enter dec sub ret pop sbb data16 xchg push imul cmp mov or push addb loop add xchg movsl scas add add je sbb add and add aaa orl test mov (bad) out js mov clc rcrl jbe add or icebp adc push bound roll mov and cmpsb fsubrs js (bad) add (bad) push mov out add dec mov ret add pop mov mov add nop enter syscall mov lahf fdivrs jne cmp sub add add es mov dec rsqrtps rcrb sub adc or testb add test aam scas sti movsb jl sbb pop pop incb mov xor or or and jae add adc sbb jb ret push sbb sub sbb add sub sbb jmp test mov xchg js ret jg in pop cmp add lods cmpl add jmp dec sahf movsb xchg push sub (bad) dec add cmp dec pop sub fcoml add mov xor adc or jmp dec jmp lods cmpsl imul push bnd add cmp and movl cld jmp ss sbb xchg xor mov ret (bad) in dec sbb psubb adc call jmp pavgb mov jge jo and cmp add sbb xchg xlat adc sub ret test dec (bad) sbb xchg mov mov test add jl sbb and pop lahf jne imul jge pop pop cmp lods push pusha adc rolb xlat cltd xor adc cwtl loopne lock or add call dec adc add jns call add or out or cmp iret add into fcmovnu lret fcmovu add (bad) loopne jecxz in in pop or push mov pop push (bad) mov inc rolb leave push inc push popl syscall jmp adc enter cmc (bad) std xlat add adc xchg pop add rep incl frstor push cld inc add add add xchg push movw or nop les cld push cltd cwtl push jb decb loopne add jbe cmpb jne or or or add adc jmp add and jl inc push add push add test cmp pop in pusha jnp add pop rol jl add cmc (bad) add (bad) mov sbb clc mov xor cmp push leave adc sub and mov enter subb out repz xor inc cmp mov jl mov jnp shll loopne scas call enter addr16 mov add imul data16 mov inc jns mov add imul loope sbb add mov in or or mov insb jl or fstps add jo add push sub pop sbb cmp dec push sbb add cwtl nop mov aaa (bad) add arpl inc adc adc (bad) add out shll add dec xlat xchg fiadd jbe add dec add mov push lds shr fwait loopne add daa repz loopne in out sbb es ret sbb dec in adc pop add xchg sbb adc push add add loop push and add out (bad) clc add je mov cmp add xor dec add rorl mov push inc or addl sbb aam mov adc ret jbe jmp sbb nop push mov xchg adc or add or stos mov dec xchg stos pop inc and adc test les test add loop push xchg int3 adc wrmsr adc iret orb in pushf pop mov or icebp xchg adc add add out mov (bad) jae pop sub mov sbb xchg add pop sub jne jl add mov rorb and dec (bad) jne leave adc xor xchg jmp enter push leave ljmp mov push add add mov cmp sub sub data16 and cli popa pop pop hlt pop pusha inc mov aas sub test jmp or cwtl addr16 add clc mov add jb insb fcoms jne pop out int add jl add mov and js movd js add fidiv push add push xor je ret shlb sub jbe adc addb ret or add pop aad jmp test jmp jo add inc mov dec jne cmp cmp dec add pop add push inc xor out in add push jbe xor es aas and fdivrl mov sbb and cld jo jl mov or loope rolb cmp add push sbb add jbe mov push insb and jne loop cmpsl or add sub cwtl add rcrl add mov pop push add dec clc jae ss push add das push mov imul cs sub xor xor mov add inc hlt mov add clc mov enter lcall sub cmp lods push inc add cld (bad) out mov mov pushl and ret or add mov adcb sbb push inc add pop inc outsl jb insb popa cmp cmpb (bad) jo push dec rolb add popa jae push add imul mov add jo xor mov cs mov cmp add sbb je mov add hlt jbe xchg push add pop call mov jmp mov test rolb add or leave dec sbb popl jl sub loopne stc add inc gs pop pusha fiaddl mov add push cld push mov ror stos mov nop aas fimull (bad) gs pop hlt imul arpl mov add pop (bad) xor jo sbb jmp cmp mov rol sbb dec jae cs lea sub jnp or cmp clc aaa dec jne cmp test fxch adc fildl sbb ret dec add push push cltd and sarl adcb add repnz clc or add ret pop add sub enter cld notl pusha adc cmp pusha lods push (bad) cmp nop rclb or rolb into movsb cld pop add adc adc jmp lahf (bad) xchg popa sub push push push add cmpl in je add imul and movsb or add or pop inc lock push mov inc sub lods or or sbb push pop and dec pop daa and sbb adc call add pop lods mov out stos push push call adc loope jbe push imul (bad) in push cltd cmp int3 aam xchg push fistl push add push push cmp mov rclw pop adc add push push or mov pop cld push add leave shlb cmp popa sub or nop and add inc add add xchg push jbe movsb add loope pop sub out adc xchg and or mov jbe push add mov and add inc idiv out cmpsb sldt cmpl cmp orb outsb add call push cmp adc test push (bad) mov out mov dec mov into cli out push je aaa jg add jbe pushf add ja imul ret mov loop inc out and js mov mov sub cmp stos push push ljmp or xchg icebp mov dec add push xor fstpt sbb mov sub das shll rcrl jl inc add decl mov insl mov cwtl aad push pop add inc shrb xor add lret mov jecxz ss lods sbb adc or add jmp push nop xchg cmp je pop mov add add and add inc cmp add or dec mov or and rclb inc inc add fdivrs jae xor ficoml imul inc call je mov imul add dec fld jns push popa add adc mov inc mov jmp ja jne add daa and xchg push loopne adc add mov roll push call test (bad) add shlb inc push add inc ret idivb or add inc and cmp push push push mov pop add sub mov push inc xor xor jne and or or pusha sar pushf add or xchg jne bound xor fdivrp and push push adc adc push lea and pop lret jecxz dec je les push inc pop call loop addb dec das xor add and das cmpsl inc add (bad) icebp dec xor movq inc pop sub inc push sub mov adc dec jmp pusha add les orl dec add cmp adc sub add push pop and cmp add wrmsr das push mov es sub enter leave cmp jmp int and sbbl xlat aad (bad) in in fdiv push std (bad) or fprem push daa add loopne jmp in or pop and adc add add repz push cmc loop lods dec cmp clc popf cmp and std mov adc pusha popl add je (bad) jno jl add mov arpl cli inc xchg pop pushf or xchg aaa mov (bad) push adc cmp sahf or stos adc fistp ja in mov jmp add add cmp dec add jo push or je cmp cld cmc cmp mov push scas xchg adc push add or mov add push fstpt sar inc fiadd push dec xchg sbb and add sahf mov mov add or nop pusha mov sti push xor je push push js inc and cmp jle inc sbb mov test shrl jg pusha pop add mov jge les movsl (bad) add lcall adc jecxz lods enter add or cmpl mov mov and sub inc rolb mov add mov je incl mov sbb cmpl jne (bad) mov pop cld es mov and xor testl inc je sbb lea mov push push js daa and add cmpsb pop cmp add test add lods sub imul pop mov adc adcl add dec push mov add inc pop pop incl addl jp push add call test rdmsr ljmp pushl sbb and aaa xchg movsb add pop adc add sbb leave test addl add pusha ljmp sbb sbb add sti and out sbb phaddw aaa and push adc mov loopne xor cmp in or and dec mov mov call pop sub insb pop push pop mov mov inc or or sub and mov pop pusha cmp push xchg pop fistp pop inc fdivrl lds push add outsl sub ret dec mov jb add movsb mov or lret mov mov sti xchg add pop add mov jb je add jae jns jo cli aas add jp sub addl sub scas lret add insl mov push nop mov mov bnd dec fisttpl cmp sbb dec and jl lock push inc lret push lea in add pusha inc (bad) add movl push or pop pminsw dec lret xor or inc inc jg pusha cmc inc jo mov pop daa es sbb dec cmp pop imul outsb xchg dec add jle sub xchg mov pop loopne push adcl repnz or stc add jo clc xchg pop xchg jle add mov xor (bad) jnp cmp clc add xchg or inc cwtl movsl lock pusha outsb and or mov clc icebp ds flds or (bad) push and addb jge sub mov sbb add push push adcl add icebp test add (bad) xchg into mov fwait in push add aam dec ds push test loope mov addb mov loop lock push sub push or sbb pop icebp inc xor lahf add rorb es and add add mov pop sub inc push in and push xor bound and or add xorl push jbe sti and cmp mov inc and nop push push adc xlat mull imull pop mov sbb pusha and add xor (bad) xchg add add add lahf and je xor mov jmp add cmp in call jp push sbb jbe (bad) popl push dec pop cmpsb test aaa popa pusha add mov pop adc or xor dec jmp mov push into cld sbbb add jne movl insb lret test addps movsl and divl dec clc add mov add push push scas push lea push cmpsb inc in mov add xlat dec adc dec jno iret push pop xor (bad) mov adc (bad) cmc aam fcomps push into xchg dec lock lods dec xor pop lea loopne mov or (bad) popl lret imul mov aaa push xor ja add ret ljmp pop and inc dec push pop test pop (bad) out mov fwait sub ljmp add sub cmp add cmp out and mov mov jae or add jmp popa scas lret (bad) add adc in rorb dec cld nop cmp add inc js or jno sbb push cmp add jmp add add lods push out inc int3 pop add mov pop sbb es jl cmp or add sarl push sbb hlt insb xchg xchg ret mov add mov icebp out adc add sahf pop mov sub add cld dec jl ret dec ret ret add cmpsl iret data16 stc add cmp setb push xchg cli jmp fbld xor cld (bad) rolb adc jle cli aad adc repz sbb mov dec add jne or dec cli out add popf inc mov mov xor add scas and jne cli dec in es sbb loopne ja push xlat mov mov inc scas xor fsubrl rorb stos xor cmp jl mov add jmp test aam leave pop fildl adc enter repz add fimull push inc sub in (bad) dec add push call add in sub mov jecxz push adc pop sbb ret or dec xchg pop xor add test pop adc add leave cltd or push mov xor dec sbb mov test sub push sarb sbbb mov lods (bad) push mov add push push dec add cltd and inc sbb and jg add rcll add mov cld inc push mov add inc test cwtl scas cmp push mov add adc mov push dec jg sub dec (bad) stc or jb movsb mov in cli add adc iret nop aad add or pop pop or push ljmp adc mov in mov mov dec or (bad) jmp sahf add inc daa jmp js out pop add sub in popa add sub and pop xchg ss repz push add aad push add mov pop lret add mov roll push cmp dec add jno std cmpsl push push lock (bad) push inc add mov push inc lldt mov inc add and test sbb xchg and mov test and pop clc or test inc cmp inc adc dec sub mov jp imul xchg mov pop push xchg and adc jp xchg (bad) mov sbb xchg popa pop pop cli or jecxz stos shrb ds mov cltd mov push inc add lea sbb sti call or add sarl stos jo lock ficompl leave jbe adc cs add jo push cmp dec test cmp push orb in out mov mov pop adc push nop dec xchg loop fldenv cld jmp jge inc arpl lea xchg pop ret inc xchg pop xchg add mov cltd xlat add xor andb push loop nop add mov pop adc aas mov sbb cmp in add dec add dec jne pop test jg push out lahf inc pusha and iret subb mov movsl notl inc popa and xchg or pop pushf leave inc add dec mulb pop (bad) jne jmp addb and add test cli add push add pushl add movl imul add inc sbb mov adc inc add adc inc loopne ret or sub addb or sub inc in and mov jae add jno leave fimull jne add sbb stc pop and lret fchs rolb and ljmp mov stos pop inc das hlt dec add mov and lds addr16 sub into test push jnp and fadd xor sub cmp stos ja cli push bound push xor test xor push sbb mov or or fs add push scas aaa arpl or jno add mov sub fiadd adc or add lahf call cmpl jb subl jne jmp add pop mov add (bad) movsl or cmpsb lock movsb dec icebp cmp cmpw subb jne add mov or inc jmp call dec mov add pop pop lahf pusha cmp lret in cmp (bad) push add inc or ret cltd jo cmp mov jle daa add xchg xor pop popl call fiaddl cmp sub ret xor or sub sbb fdiv xor lock adcl pop pop push cs lock and sub das sub pushf rcr add push cmp adc dec pop add pop scas inc shrb push mov mov test nop jno add loop repnz dec jmp add or iret call add rclb push fst and add sbb mov out clc add or or adc jmp sbb aam inc push daa push mov push add push imul cwtl inc pushf scas and inc pop push std add popa cmp cld out adc or and fadds ffree dec daa xor add stos ljmp inc add fldcw outsl or jmp pop cmp add add sbb push testl jmp dec sub daa xchg test inc popa adc push pop xchg aam imul cmpsb popf clc xchg inc add inc arpl dec ret inc add aad gs rorb mov add xor (bad) shld sub pop ret les jns mov sbb add lret sahf jo inc jge add jo fiadd and add loop imul pop push out into xchg fldenv fsubs dec add icebp xor mov cli cmpsl pop pop dec repnz push sbb cmp or mov dec call jp dec fbstp or push lock imul sub aas (bad) cmc popa add call add xor cld xor pop add insl call mov (bad) cmp xlat cmpsb push shlb (bad) nop lcall mov jnp (bad) sbb cmc sub cmp xlat add add dec lock mov pop loopne push pop in push nopl or mov std dec fcoms dec imul (bad) (bad) mov pop arpl popf xor rcrl push cs add arpl add insl push enter mov or dec add xor cmpsl add xor mov es sub scas jge push mov pop add push pusha andl cs or aaa add and sbb aam dec psubusb push (bad) shll clc pusha add add (bad) out add and incl loope movsl inc icebp or add pop pop gs dec clc inc paddusw push or lret add lret inc pop insb xor cmp add test clc rorb hlt dec pop xor cmpsb dec add push push mov lret inc int3 mov clc pop jl and xchg add ficompl sub in add stc adc cmpl push imul sub add mov lods or cmp lods or or hlt add sbb or int adc sbb pop pop cmpsb and test pop mov addl mov loopne push hlt test add mov loope sbb popa or hlt inc push lahf add je pop cwtl insb test insl sarl mov call leave cmp cmp into orl add jne add out call add mov (bad) xlat push mov cld add pop (bad) psllq jne or push fs mov cmp int3 (bad) jnp add inc cmp popl push add xor (bad) dec xor mov loope je cmp ret test (bad) mov loop add iret aam cmp add inc jo add dec movb inc inc dec lods inc and cmpsl aaa or add test and push pop call add sub fs cmpsb mov jb xor ucomiss in (bad) cmc ds xorb outsb addr16 popa out jno rcl insl cmc inc inc adc add cmpsl nop jge jecxz push add jmp movb pusha out add icebp loopne das sbb add lret push adc jno add aam and enter push and call push (bad) (bad) mov shrb outsl or dec sub xchg movsl add pop sbb dec jmp imul push xchg out movsb (bad) int and inc add repz add sub sbb les mov and scas mov or jae out into add insl dec add push (bad) loopne jne sub add adc pusha or mov push dec scas push jne mov popa in std push sti rolb imul es inc cmp and dec (bad) loopne add data16 adc gs fisub lahf jmp mov movsl and mov inc cli mov cmp fmuls hlt cmp je push dec shll cwtl lods add sub add test mov cmp lahf in inc mov mov push add iret movsb pop enter lods cmc addl rorl cmp cltd add mov dec push add push cld inc repnz add sub add aas cltd sbb fisubl cld add (bad) je les add add inc movb inc or js pop add in clc icebp or mov stos sub iret dec pop xor jle add fdivrl push ljmp pop push cmp mov xor das mov ficoml add lea rolb add lock clc or mov repz mov (bad) nop aad imul in stos pop add xchg xor pop dec xor imul lock pop mov in pop orb mov inc dec mov add push adc test cmp or and cs mov dec cmpb add movl add daa push sbb adc adc pminsw cwtl or in pop push and xchg or mov xchg lods mov adc pop push cwtl push inc lock lods fcmove add cmp mov jle mov scas into sbb sti mov call leave and jae xchg xchg or cmp push mov inc inc popa lea or sbb jnp add mov dec add sbb or and subl sub dec cmp sub shll addps push rcrb push orl cmp pop add dec jle adc add jne push cli mov imul and les jmp and add fldt lea adc aam cmp lret int3 add sbb jno and fmuls add bound sbb mov nop sbb adc scas or pop dec pusha sbb ret push push pushl push add sbb pop push push and scas popa idivl add loop sahf and pop add push addb add ja push test mov pop loope and pop fisttp movsb sub shlb in push jbe add aas pop add cmpl sbb jae mov push int3 test add inc xor ret movsb xor or inc mov sbb add inc (bad) je jmp push add or mov movb incl stc stos sbbw nop add inc dec fiaddl aad push mov out pusha dec dec out (bad) inc (bad) cld add popf icebp pop cli adc dec shlb int3 dec pop adc sub add add jl mov add inc cmp je pop or jp out jmp dec sub add into leave push jne add dec push test pop (bad) jae ret (bad) je xchg add push adc add jne icebp (bad) or mov dec imul lock jae mov or mov push jl add add sbb push fwait dec imul data16 icebp mov mov mov mov and inc enterw cs ds push mov xchg inc or add inc (bad) sbb xor pop pop jmp add add and push daa or jne push lahf push vaddps sub dec mov bswap ja (bad) inc pop jno orb cmp inc jle inc jmp mov cmpsl mov inc dec mov pop aad add int3 (bad) pusha incl ret jae sbb leave and and in sub add mov ljmp dec sbb mov lret mov add cmp or add pusha pop mov cwtl adc test andb or lret lds leave and jmp pop pusha lea (bad) jp jo mov pop movsb mov dec lock in pop push repnz not dec add cmp dec xchg pop cltd add sub mov cmp lea add adcl fiadd leave rorl js and add unpcklps ds popl or hlt ret add fcoms jge pop inc add stc adc xor pop enter jp aaa sub fldz xlat or inc cmp jg cmpb adc enter inc or add jo pop hlt adc shlb mov imul idiv mov (bad) mov inc mov aam cltd add pop sub test xor out sub add test add pop leave sbb mov subb mov call or inc loopne cmp mov and cwtl aaa or js inc jb add mov xlat fadds nop add lods outsb xor xchg mov push or push push add int3 into sbb ret add popa push pop add push call nop je add push cmpb and add (bad) push lret into pop fadds cmp aas sbbl xlat pop (bad) (bad) mov addr16 add jb jp xadd addl gs jo test lds cmpsb push iret decl js es mov push stos mov jo add mov aam dec mov cmc add out sub es imul lea divl add leave cmp incl dec mov sahf popf sbb jmp push push inc add cld es mov repnz test jl jge sbb nop fildl pop daa movsb lahf outsl inc pop stos add scas adc jecxz (bad) cli negb pushf mov mov loop repnz add repz pop xchg iret shll roll faddl cmp xchg push add jecxz rclb or add addl xchg add xor in sbb cmp sahf add add rolb movsl mov popa sti in popf and stc (bad) repz mov add subb and pusha les cld add adc add stos rcrl adc adc add or add ljmp into add and push pop mov clc lea pop pop stc je add sbb leave jne inc (bad) hlt testl adc jns repnz out add add cmp inc jecxz mov add sub roll jb je jbe add cmp ja fpatan fadds clc inc pusha loop pop testl push pop inc dec sbb jg sti xor shr inc push mov std xchg or nop cmp add ror bnd sub pop fstpt mov add out aam add call push cmp stos mov mov out mov add pop dec pop add pop (bad) enter add imul cmc bnd add xor add mov movsb mov addl icebp pop xor ret jo shll loop andb sbb push add cmp cltd add data16 cmp mov jle add cmp aam dec in or pop test xchg add daa aaa xchg xor add cmpsb or ja or add sub hlt cld push jg sub in rolb js adc mov pop mov subl add pop jle jnp cmp movb push negl inc outsl add (bad) mov mov or or adc add cmp (bad) inc sub inc fiadd lret adc (bad) sbb ljmp ret shll push mov je scas repnz cvtps2pi add (bad) fs push sub mov add pop add call adc in jb cmp pop or add sbb call add cmpb fs mov lahf adc nopl test dec jmp or clc jl jmp push mov add cmp sbb mov dec nop jle pop das mov push add aas aam sub jl cmpsb dec inc das sub daa jns pop inc sub (bad) sbb add mov dec mov or inc adc test sub imul (bad) ret add add dec pop sbb and pop jp add (bad) shlb aam xor movsl push add fsubs (bad) dec or mov mov or call outsb or jnp pop add adc js cld jne or cmp mov out adc push jbe lret mov in mov push or call lds pushl mov mov cmp fs sub pop xor jno adc or or cmpsb pusha dec cwtl insl jl jp orb lret fs xor cmp sbb pop (bad) jecxz cmp and cmp enter jb cmp sbb add xchg mov mov lods cmp mov enter nop jb cmp and js je jo insb dec cmp and pop add push jb pop cmp inc mov or adc and add sbbl push and enter inc jb cmp sbb xor xor sub add enter jb sbb mov rolb shl or cmp ret sub adc clc adcb lahf add push out js xlat xor dec pop xor sub mov enter xor call add in arpl and lock or sbb xchg mov cmc mov clc cmp xor and and add icebp mov jb cmp sbb sub add out out call jmp mov jmp pop xchg daa add in jb cmp xor inc shlb (bad) jne call enter jb or ficompl sub add fstl rolb sarl sbb add les lds in jb or sbb and mov xchg into leave iret and cmp add mov mov mov mov mov and mov cmp mov and cmp orl xchg test shrl stc loopne,pn dec ds cld add repz xor or cs adc mov hlt xchg add add or arpl dec jo scas mov cmp pop pop orl call dec inc pushf cmp add loope adc pusha test bound loopne or dec jne je data16 insl outsl jb cmp pop shrb inc jo jmp or outsb mov sub push hlt test (bad) or xor popa insb pop fcomps sbb pop popf and or push adc adc (bad) push sub or dec (bad) mov cmp xor mov or imul mov sbb sub xchg rclb adc gs negb adc add dec jbe add insb outsl ja je mov fs add push mov sbb or xchg pop sub imul and fsubrp in xchg mov and xorb nop mov and sbb popa out inc cld push nop das push push sub pop mov (bad) inc inc pop mov push inc outsl jmp fst add ror movl scas fs inc call or outsl mov push lods cmp sub inc pop arpl push mov insb or mov push imul dec inc fldl push inc lea push lock or arpl andl adc je cmp insb enter (bad) stc movsb inc cmpb popa add or scas pop add rclb or cmp addb dec outsl lea aad pusha in aam jns aas add jge and mov xchg pusha rorb xchg push lods mulps push andl stc xchg scas movlps popa rorb movsb cmp jo lcall dec push and pop mov pop pop add add adc jge cmp or add adc js das add push mov call dec add xchg lods dec imul pop inc and insl sub cmpsl sub iret das mov jno cmc cmp mov pop sub mov add fiadd jo mov iret (bad) jmp sarl (bad) aam scas add jge mov cmp dec add call sub jns mov daa jne stc pushf dec cmp add addl outsb xchg int3 or fwait imul sarb rsqrtps jle add cmpsb je add mov mov movsl cli jl std lea mov add add mov push mov sub or movsb int3 jbe add fadds mov inc ds arpl mov add mov sub rclb lock mov xorb pop loopne pop jmp jbe hlt add jge mov call dec xchg sub xor insb add sub push inc cmc sahf jae push addr16 xor outsl cltd sbb and jno add mov add mov push dec notb sub and add sahf cmp (bad) and add dec in hlt ja add xor bound lock leave mov xchg or daa push add je push cmp add mov sub lret push aas inc jmp (bad) add out aam lock stos cmp in mov sub dec add hlt imul popf sarl cmp (bad) pusha or pushf test (bad) jne xor inc (bad) bound or dec push jge push (bad) aaa stos xor pop pop add dec leave dec jae add add mov push aam mov mov xor data16 inc stos imulb dec and enter mov je push cmpl fwait pop and dec pop (bad) test mov into addb fadds unpcklps push (bad) int rorb sbb push out mov mov pop jg mov add jmp mov (bad) sbb bound add sbb add dec popf loope jg idivb add and mov mov cwtl add es mov add in push pop add loope xor sbb por mov mov pop cmp and sbb and push lahf popa call or hlt and dec cld cmpl mov imull mov or mov sbb fildl push cmp outsb out test shl xor or test xor nop sbb mov xor inc in sti clc nop add lods (bad) xchg xchg loop add subl adc push enter mov sbb lret inc add psubsw roll sbb inc call aaa and std and outsl das out cmp cmp dec fisub aas push pop push lret cmp repz fwait lret aas inc inc andb pop scas push push add lret dec das add jp add inc sub sub fstps pop loope stos out xor xor jmp ficoml mov pop mov add cmp xorb xor inc shr mov inc clc test add cli daa pop inc ljmp mov xchg jl mov (bad) inc enter lods and nop xor jp xchg shlb add or dec push inc mov pmuludq dec sub je add loopne icebp add (bad) push lea add sbb inc add flds pop orb in lea adc add stos dec and int (bad) sub adc sub inc shlb sbb inc or adc into mov insb in add jge repnz push pop jbe add rorl add test popf aas dec add (bad) mov jp add ret (bad) dec enter scas icebp das (bad) je mov inc leave pushf sub jbe add cmpsl fsubrs lea daa repz and pop sub adc rclb movsl xchg pop jge push inc in push hlt or jno add cmp inc mov inc je and loopne aas sub add jmp xor mov xor cmp xor lods call mov cmp or xor aas and fist mov add sub xchg fcoml (bad) ss mov pop mov add jae push fistpl cmpb lcall dec shl in xchg lret or jg mov push mov call addb das cmp je or xor jb add ja imul xor cmp je adc sub add push sbb (bad) faddp sar adc push adc xchg push je (bad) dec fsubrl sarl jae enter jne add push loopne in mov and popf (bad) addb jbe cmpsb pop adc in xchg pop add xor xor and jno int3 inc xor add call loopne pop dec fdivrl sub stos xchg add sub pop data16 adc incb dec pop push popa cmp je jg cmp sub pop add jne mov testl je dec sbb orl pop stc call mov sub push add mov lea lods add add and add and sbbb dec push push push sbb dec mov fisttpll (bad) jb lea mov push mov dec jbe cmp js add xorb add movl repnz cmp mulb jns pop fadds call inc lahf scas add pop jne ds add sarb add mov mov pop and lahf mov cmp jmp xchg js out inc sub leave and mov dec sbb lods mov mov shl fildll sbb lock sbb push inc jb or xor divb mov dec loopne loope test pusha (bad) push sub xor jecxz sub jo lret mov inc push add loopne or lds (bad) (bad) cld mov shlb outsb mov xchg inc je jg push sbb add inc repz ljmp adc jg cwtl pop add cmp jbe dec mov jne mov push add sbb sub (bad) sub push pusha repnz iret call dec dec shll ret push add mov mov and or mov sub arpl daa popa stc xchg pusha sbb or into call or add add in xor cld xchg push or push dec sub movsb mov add loopne lock dec add add scas rcll sub add and sbb in jne add loopne lea cwtl inc jnp or inc add rolb clc xor das add pop inc xor add test pop jge sub push (bad) (bad) adc arpl mov push sbb jns setb inc cmp xor and mov add out ret push xor inc add pop in inc add jg add movsl outsl leave popa push pop cmc add mov sub cmp add (bad) add or push popf int dec pop adcb push or add pusha mov call fcoms jl movb outsb jnp sbb jae or cmp inc orl mov faddl in mov rolb sahf dec pusha pop sbb ret roll xor or mov fdivs rorb push fwait cmpsl add das inc pop xor lret sub movsb dec jo fisttpll hlt es cltd jp cmpsw pop jns add iret cmc adc or adc daa add and addr16 jp inc hlt rclb add clc pop sahf xchg and mov addb xor cltd add or mov mov cmpsl mov adc xchg inc sbb cltd or iret daa cld sub push add icebp imull pop xchg or test enter and mov adc mov mov pop xchg sbb fidiv add icebp add je xor add sub clc test insb cli add dec in cmp dec pop add cmp add xchg loopne lea out xor lds popf mov jb add jle es popa add or sti add sbb clc cmp sbb pop adc jle jae andb ds (bad) jle xor in mov cltd mov icebp insl lds rorl sub pop inc fwait mov add jl (bad) or leave jne loope add adc je mov pusha xchg fcoms jl and sarl imul cli hlt add add dec repnz mov and push incb and test jg pop lret adc push aad or add jmp cmc add xchg lock test mov push add jl jg xchg imul adc xchg add lods mov xchg cltd sbb add or out dec js cmp hlt add ds sub aaa jns jnp add sub loopne add repnz mov push pop pop adc push cltd mov cmpsb add je pushf dec push pop dec mov pop in mov cmp jb insb or jmp fisttp loope cltd cmp insb add es hlt mov and inc les adc pop xor push or push shlb mov mov sub cmp test cld mov out pop inc fnop dec add cmp add cmp lds sub and pop fstl lret dec ss (bad) push push inc pop repnz add adc das inc push repz add mov and push ss and add mov cltd scas jo inc sar add fidivrl repnz mov xchg add push mov lret xchg pop mov cmpsb mov add push sub lods and jns push adc imul add call add cwtl idiv xor in mov add mov in and loopne add je xor inc pop lock xor rclb and add mov jmp add mov inc add cmp je mov nop cmp mov mov hlt js push sub add jne fist lahf inc das cmp sbbb dec out mov test bnd aad movb push je cmp jecxz xor pop in push test and pop mov ficom mov popa clc (bad) outsl mov add rcll roll test push add jae xchg add repnz test ret scas into icebp and add insl mov or push add inc mov xchg and jecxz cmp push mov mov dec pop sub (bad) sub adc inc (bad) add and or jne or orb or push add aas add lods push xchg and cmp jne push xor les add pop aas (bad) mov xor add popa dec adc int rolb (bad) xchg adc nop sbb ficoml add hlt testb pop daa lahf icebp sbb xorb jmp xchg add in push and add insb sub push aam cmp pushw inc (bad) test or add jg in and shrb or sub jp je xor push and rcrb inc adc dec mov add arpl jle push scas add pushf jns les adc dec fadds sti in fsubrl pop jns or cmpl jl or push sbb call aam out sub adc add adcb test pop sub fs dec loop (bad) inc cli jge mov sti call icebp orl add in mov push add cmpsb dec pop pop add xor ljmp and mov jne lock dec ljmp dec nop inc add push cmp xchg sub sbbb add scas cld sub or jae ljmp add idivl add pop sbb or add ss or cmc adc test je xor test mov pop mov rcrl jmp or sbb lods imul scas ja add leave lods sub add mov mov iret xchg xchg ds sbb dec add cmp and adc sub fcoms sub and dec mov mov out cmp sbb xor xchg xchg pop sub test sub sbb pop addb out je icebp int add cmp out imul fcomip push add scas and add sub add and leave push or pop jg mov loope jne jmp sbb adc add mov call add jg je jnp and arpl jne inc add hlt push xor pop shl jecxz pop or jge sahf jne dec mov mov ljmp push or inc xchg and jne enter jmp adc sbb mov inc mov test sar imul adcb rcll pop call adc xor cmpl push push or push mov pusha add shlb call jg aam xor jnp push adc sbb pop xor push (bad) in jns add test add push jne sub mov jge xchg push jns pop and push popa test cmp cmp inc pop xchg das mov jae out xchg add mov into push jnp add jno or fwait cli jp dec inc inc movsb sbb neg roll and sti mov imul add (bad) jne and sahf psubsb pop out and mov stos xchg dec pop inc cld dec push sub add push add js xchg add ljmp add sub lds nop mov xchg imul inc (bad) jne dec clc push add cld std test add and cwtl loop adc jb shrb xorl mov cmp inc and pop daa pushf imul ja inc dec das push out mov push or add add fcoml and sbb test adc push pop lods mov por add cs jo mov dec (bad) in mov jns add icebp sbb pop xchg int and adc jns mov sbb xchg sarb in clc sti pop cwtl lock das fdivrs add (bad) je add mov sbb sarl insb lret add (bad) mov pop add xor jmp pop mov add enter pop lock cmp xor add add mov inc addb add sub jae xchg add nop mov add jle sbb add pop or add sub fnstenv movsl loope push cmc movsb mov hlt lods clc add sahf into (bad) jge push add mov (bad) js add out cmp dec test add sub inc or (bad) cltd add bound add jl xchg mov jnp test icebp or adc dec pop jl or add sbb and sti jg fnstenv clc cltd add sub pop ds add sub je sbb add push or jbe les pop push push sbb or push and js clc push push inc pop or jle fild ret xchg outsb cwtl cltd pop adc scas xor add add add les cmp and addr16 add call mov mov mov enter dec lds mov sub stos pop pop jo xchg add mov dec or jecxz ret enter add mov lock adc mov add mov ja cmp pop cld cltd xor sub add add sarl add jg fdivrs cmpl loopne bound adc pop roll push adc dec loop xor add lahf roll cld movb fsub addl fcmovb adc add dec out add dec mov mov ret jnp (bad) idivb pop (bad) lock fbld (bad) dec leave add or adc fwait add or add out dec dec xlat pusha movsb add mov add sbb inc fwait mov loope hlt push push imul xlat jno xor or dec or inc int3 and add pop ljmp sbb cmpsb pop jmp sbb inc push jb inc and add cs jge or (bad) jno mov lods (bad) adc andb and je hlt add pop mov adc sbb lock ljmp adc cli andb pop jo add popf cmc push pusha jno pop dec adc push add sub xchg loop inc jecxz pop repnz test push aad sbb or cmp cmp sbb jle and add mov nop or loopne adc mov movsl mov (bad) push jo cmpb cltd jmp add inc sub push enter xchg andb pop jmp lea xor or add test roll lahf fsubl (bad) sbb pop add lret push fcomps xchg popa add sub ja jbe jae add test test add clc (bad) lahf adc inc (bad) (bad) push jb les jae mov add push and inc ret or gs or add orb lock push shr pop test dec (bad) or and pusha incb jnp,pt cmpb je add dec sub sub inc add mov sbb pop loope or mov add and cmp mov and ret or je lret mov cmp push push frstor jge les popa repz enter add dec push sbb test and decb or lldt pop incb rcrb sub or dec add mov adc ret pop imul cs les push (bad) sbb call int3 lret (bad) pop lea lds sti jl cwtl or cmp inc fdivrp adc daa dec mov pop mov loope orb mov bswap fdivs (bad) int3 adc or add and push aas xchg inc push jl jne dec xchg mov xchg (bad) jnp test mov sub frstor xchg fcoms sahf jb cvtps2pd add xor add pop jnp lods adc (bad) push lcall icebp aas loopne mov jno add mov sbb dec and add inc rcl fsubrs data16 add or inc into (bad) adc nop add popf push roll inc inc mov sahf jnp das pop or (bad) mov ret dec ljmp es cmpsl popl push movsl xchg inc cli loopne add add lods outsl add insb nop jns push stos add xchg pop xor xchg movsb in stos xchg add mov adc fdivrs push push das rcrb add jle xchg cmp add add hlt test inc lock test add rclb jne add and nop gs add jns add mov add lods gs mov lds mov roll jns or mov jmp insb jo or pushf cltd push sbb test push dec jp cmp cmpb sub or or pop jne xchg cmp popf and pop mov add or daa add jp les or xchg ds sahf add and inc jmp jg add scas js jp pop add mov inc lods and pop loop fnop movsb add sub aam mov or add push clc outsb jge jbe sbb std jb dec stc shrb test add loop lahf movsb frndint push mov mov add add jne push add movsb test stos fs fidivr xor loope mov (bad) inc cwtl xchg xor dec push (bad) adc ret push add mov mov insb xor add cmp sti (bad) add lock mov ljmp rcrl mov aas mov call loop sub add pusha jle jmp mov aad imul xor add (bad) lcall pop lds test rorb mov push mov js jmp ljmp and inc enter add jg push rorb fcompl xor or pop add fiaddl enter xchg lock nop lods movlps addl mov aaa cli dec pop les fistp lods mov add adc mov add out sbb or cmp rcrb add imul add sbb daa jne push enter std jns add pop and push and sbb psadbw adc pusha cmp nop out add push jmp or popf jns pop lds mov call inc rolb cs and adc and pop adc mov lods adc call inc and xor mov push popa into dec lock add add mov cli fisubr add out cld and dec inc cmpsl add rorb xchg pusha popa adc sbb mov xabort lret cmp es inc mov add test add or sarb lea cmp movsb xchg mov push xchg sbbb add or nop test das repz or dec and add mov mov inc mov and icebp add xchg or out inc jle push push bound add and add jmp rcrl inc add jp pop in sub fmull add xlat adc lods nop mov jb fs mov outsb add mov and loop in testb test jecxz jmp (bad) add and paddd cmp mov pushf and clc jbe shrb add sbb test add and arpl cmpsl add xor fildl call jbe aas ja loope fucomp je clc jne icebp push adc and mov xchg and int3 add add sbb add xlat push push std mov mov jo add xchg mov mov push jns sub rcrb dec je or psubusb jb jmp mov ja and pop xor adc subb movl outsl mov add repz daa nop (bad) dec push add cld call popf or xchg or jb pop roll and dec push mov sub outsb sbb add push rorb jge inc hlt clc xchg subb push loopne (bad) mov mov mov popf dec into mov fcmovnb or xchg aad add pusha sbb dec mov xchg fidiv insl add mov xor add shll (bad) sbb lcall nop or mov mov cmp clc pop sbb add (bad) inc push bound add daa jmp out fnstenv aaa in inc sub push jmp push les inc mov fs add jne add or inc addr16 call mov jns mov mov push fmuls sbb mov rolb dec icebp fisttp add sbbl add xchg movsl or jmp add sbb push call dec and es lock add movsl mov (bad) mov cmpsb in mov xchg movsb insb data16 hlt mov push dec in adc xchg xchg mov add push mov or mov les sahf in adc and ds mov or sub pusha add fsubrl lea pusha imul cwtl push test loopne movsb xchg repz test sub sbb and cmpsb cmpsl leave sbb arpl mov add mov std cmp jmp stos pop arpl dec dec push add rolb add or sbb sub and pop test cmp push nop inc add pop xor sbbl je loopne add inc push cli bound imul into sub rolb inc mov fisubrl mov (bad) mov repz and les cmp or jb add test mulb dec push std push pushf jg adc add or add mov stos cmp add pushf inc mov cmp inc sahf dec fnsave add mov cmp or push or es add mov mov mov xor test (bad) fdivs int3 inc fsubrl pop mov pop hlt and adc dec cld cmp xchg mov push add dec xor nop add shlb jo test add movsb or inc fdivrs or fdivl loopne lock cmp add xor sarb pop pusha mov mov outsb add jmp mov dec pop cld add test jl mov or or add sub add dec pop or inc test jne add xchg inc (bad) push cmp inc fildl (bad) xor popa add faddl pop dec in sub add add pop test rorl xchg (bad) mov push cmp fistpll gs test jle jp sub lods pop dec jge cmp inc add sbb adcl add inc xor push out mov mov dec pop daa mov shll sub push inc mov jmp jns add imul sbb xor pop lock add mov inc add movsl leave dec in (bad) enter add jle xchg int3 daa cs add and and inc lock pop add mov fsubrs mov pop inc xchg or or add cltd ror cmp add inc outsl push in fstpl bound sbbb push (bad) xchg mov cmc ljmp popf sub fs adc add adc outsb lock sti push sub inc rol add sahf sub ljmp add push pop bound in (bad) js jge xchg jb test lds mov cltd stc aas cmp test (bad) outsb fdivrs mov rclb je faddl mov jl das jno movb sub sbb pusha mov inc add cmp imull push packsswb shlb cli das jbe push cs fnstenv xor jge (bad) scas test cmc add (bad) movsl inc xor or xchg push add pusha (bad) add mov movsl add je xor inc add nop dec (bad) mov fsubrl hlt cwtl add call mov mov push add std call inc bnd cmp adc pmaxsw rolb cld push add sbb aad push or adc lea stos add setg lret lds mov loopne mov mov and add pop rolb sub jb push inc mov rorl inc int3 lret jne out loope repnz test or int3 add mov fiaddl test push push cmc nop cwtl add and aas add sbb add mov add add das add movsl push lock inc daa inc adc jbe sbb inc fwait mov sub jmp push fisttp push ss nop mov mov subl mov adc repnz inc adc rorb xchg repz sub in xchg sbb mov das pop mov loope pop sub pop push cmp sahf or mov pusha adc cmp xor cld or push sub rolb nop loope mov (bad) int3 lahf test jle xchg add pop clc bound cltd in pop lock shll nop stos aam lret pushf rdmsr sbb cltd aas jne jbe out fcomps add bound hlt add mov jge push cld push jle add (bad) cmpsl inc push sub sub sbb fimull or adc pop xor aad cltd cmp idivb sbb mov inc push insl cmp fs test pop push push add scas repnz popa cli or push jo inc sbbb xor adc verw nop jecxz push into add adc add mov add add mov mov add jmp mov stos and dec out loop add inc lods and and mov cmp or inc dec jb mov jns jo imul push push inc push shlb inc js add mov mov in mov add adc add sbb mov fidivl mov mov fmuls test enter or cs dec aas pop nop mov mov dec orb cmp fisub or fs mov add or es pusha subb mov aas push xor cmovs cmp jecxz and enter repnz adc out sbb dec test repnz jo adc xor fwait mov xor inc and popa in mov (bad) add js jns aam push add xor inc pop add sub movsb loopne fsubl xor fdiv orb jns js shlb clc enter dec jge iret fcmovb sub inc mov mov popl cmp lods pop mov xlat movsb repz mov aas mov jp xchg jge jge addr16 mov xor call aad xor dec clc sbb push or je movsb jp jg fbstp insb setb push pop sub jbe push test mov in dec daa cmp push and inc in call rcrb pop aas or call adc fdivrl pop push adc inc and xlat es mov dec add stc mov pop pop mov add ret add xor pushf push sub testl xor pusha in clc inc mov add lds mov shr lahf sbb scas jmp mov and jne out mov adc sti add je add ja xor mov jle mov sbb adc sti lods pop mov add cltd fstpl cmp scas int3 cs lcall lods or sbb pusha ret mov out add sub cwtl add push in mov cmp std jl or leave xchg sbb pop stos inc test inc mov (bad) and push jmp clc stos mov pop je sbb loop or add stos push xor dec clc mov pop cmc (bad) pusha push xor push sarb mov sub mov xchg ljmp inc sub add dec stos or jne add jmp mov maskmovq pop mov cld les stos xchg push mov test testl sti and mov jmp add xor pop and addl adc add fwait dec in inc (bad) add sub (bad) mov jo add dec mov div mov sbb inc mov dec je dec jne add pop push xor jmp add sbb add inc rol sub add test loop orl add or inc add pop (bad) jbe cli jae fisttpll mov xor push je push push push leave and sub sub call jg imull add fdivrl rolb dec cld push inc pop ret and outsb inc add popf mov cmpsb and std (bad) aas sub jg push sub pop add push data16 sbb jle inc call sbb fisubl fisttp xor daa sub xor inc pop ret add and mov mov jb add jbe sbb jmp scas inc jns stos out fcoms jnp dec ret sub lea cld dec add sub inc pushf dec mov bound nop (bad) add lock add mov data16 dec jp cmp push or cmp (bad) jne mov sbb jle sarb negl sub mov add xor pop push mov mov lock dec or shl cmp jne or sbb add and add add loop mov cld sbb add or nop add add rolb cmp movsl (bad) negb add jmp mov push mov (bad) or aas mov add push clc push hlt push mov mov (bad) and add daa xor movl ss clc inc cld mov add inc inc int outsl (bad) testl (bad) jge and add mov xor mov push mov and sub add (bad) or sti jmp xchg pop in ret pusha pop sub add sub test ljmp sti movsb or adc pop inc xchg add adc outsb cmpsb and ds add sub faddl sub arpl jne add add mov jl pop clc dec into inc daa jmp mov sbb sbb dec and dec mov test int jno add out add lock insb add or in push xchg cmp (bad) sbb add mov out gs dec lea into add mov fisubr fmuls sbb jne sbb inc sarb add in adc inc (bad) sub inc dec pop or fneni(8087 icebp pop xor outsl data16 lret insb pop jmp cmp sahf push dec rolb inc adcl add leave repnz jne add stos mov cltd rcll mov stc das inc add movsl mov pusha mov imul dec add cmp add inc push push popa sbb cmpl add add inc outsb push jmp fldt sbbb imul cmp clc das inc add or sub cli flds pop loope dec mov inc dec cmpsl sahf fmuls fisttpll sbbl inc je fidivl push cmp clc add jne lea mov fwait mov mov cmp xor sbb bound jmp rolb inc mov dec add lea add cmp cmp adc arpl jb xor mov add cmp adc jmp add cmpsb xor add mov sbb and pushf icebp inc and cmp roll (bad) mov mov add mov push cs test enter je cld jns idivl imul add mov sahf cwtl js cld and pop mov orb cmpsl add add dec xchg dec push add js hlt fildll xlat mov ret sbb xor mov dec fwait cld adcl mulb or pop mov or xorb lret cmp roll cmp and push and xor dec ljmp adcl aad aas inc (bad) imull pop jmp stc mov sti je mov push add dec jge fisttpll fnclex add mov or add cmp lds pop add inc sbb adc add inc test cmp je lds fild test call pop add push inc loope and loopne ret sub stc add xchg stc test adc add loopne ds aas jnp jmp (bad) add test mov add add ret mov insl inc nop fadds cwtl lret push dec jmp cmp orl xor push dec nop inc push ret ret sbb push add mov or dec jnp add imul nop add cli add loopne jb ljmp pop daa jle loop ss add test cmp add call aas jle je add mov add stos call mov nop push mov sub pop aas cmp jo rorb nop adc push adc and ror push jae xchg or or mov clc add and (bad) loopne adc sbb test cmp test cmp inc xor push arpl adc cmp xor (bad) mov sbb jae mov pop hlt pop stos xchg mov leave jb scas sbb and sbb js rclb add add mov test mov or inc jp add sti lret lcall dec mov hlt xor add push not mov pop or inc das sbb shl add xor fstpt add repz add ret or fnstcw hlt push inc pop dec ja ror insl or mov jmp lea xor add lcall fdivr fcmovb loopne repnz pop divb adc add shr mov stc cmp jne addb frstor add into add cmp ja add jp adc push adc cmpsl cli jae lock sarb add dec push add mov sub cmp jecxz adc int3 orb mov test add movsl idivl arpl pop xchg push das test outsl testb push mov add into dec pop xacquire mov lea mov cmp ror int3 leave (bad) test (bad) jbe test xor (bad) add push add daa or adc je xchg add rol jne add and dec pop mov test dec lock ljmp push mov jl add mov or push cmp push xor and out push out dec popa pop incb test push shrl xchg adc add fmul aas add paddsw push test cld pop push ljmp xor lea cmp es movsl pushf add mov mov pop inc inc inc mov jo call or mov mov sbb sbb or out and mov or adc add add fldcw data16 xor fwait dec push add jnp popf push and mov (bad) mov mov add je push rcrb xor adc out pop xchg add flds or loope xor xchg adc loop mov pop (bad) movntps cmp jg add (bad) jne xor add mov xchg add jne (bad) xor (bad) pop mov pop inc sub in or pop bound outsb add addr16 in loopne out mov mov fcmovb movsl mov loop xlat ljmp pop sub mov mov aas pop mov (bad) push or lods adc sahf xchg adc cmp mov adc lods sbb addb mov or and iret and clc loopne jno dec pop add sbb pop adc pand jae cmpb lock sbbl call add mov (bad) sbb inc in add ret add cltd mov out jl call ret sbb dec and and mov sub int add sub fdivs inc cwtl rorb mov pop in ljmp adc cmp repnz add clc mov fs add pop das mov add or add stos jae inc push stos jle scas jbe push add mov cmpsb pop add insb inc xchg dec push js xchg loopne lock inc cli add cs pusha test add mov push cmp push scas imul inc rcrl jl or pop dec inc or xor add jmp les in add add aas add mov rcrb adc push iret lret add xor dec add jno and loopne inc add jnp cld push jl add dec (bad) ja mov cltd add ret imul mov add mov add mov add fbstp and cmpsl pop lcall call push repnz xchg jecxz push pop sub leave rolb sub pop pop hlt je inc das ret std xlat or adc add roll push dec pusha mov xor dec (bad) lret pop jo add mov clc repnz or shr push fdivrs or sysexit and in incb pop into jne xor and mov (bad) dec shrb rolb stos test rolb jns call pop pop dec pop dec fiaddl not adc ret aaa add jno add or mov addl add sbb lods sbb add ljmp sbb movb mov push cld subb dec loop xchg add mov shr loopne imul add inc sti ljmp (bad) add in movsl sbb inc add xchg cmp add mov xchg push int3 in mov testb mov call jmp inc inc cmp adc icebp add rcrl cmp fistpll popf les lret xchg shll cmpsb mov add out pop cld add cmp orb cmc add or add adc pusha jecxz ret mov es fdivrl pop rorb hlt out xchg sub jmp jns mov add pop pop out dec clc movsl in add rclb lret sub sbbb repnz and mov jae mov push scas dec add fadds dec add and xchg add mov xchg emms pop pusha mov sub je add pushf push lret movsb and jmp sbb enter jg mov pop packsswb mov push les sbb jecxz push pop inc icebp loopne sar add div xchg in and shl mov and push sub and movsl jb mov shlb pop in inc push mov jo test cmp cmovo cmp (bad) mov pop add movsl inc insl add pop xchg push dec call xchg xchg cld fist push mov mov pop sub mov pushf jo xchg int3 xchg adc jge mov pop or sub lret dec out add packuswb mov outsl faddl push mov pusha pop fstl add pop scas add push fmull int3 pop enter xchg ret shlb or jg je movb add out nop add (bad) and mov mov push adc rcrb movsb push adc jmp nop xor add push jnp add pop mov add loope jmp dec bound cmc sub mov jne lock jns out add in repnz mov sbb add push jl loope sti (bad) xchg jo mov movb dec xchg js dec sbb pushf sbb mov repnz mov dec cmp and (bad) pop dec stc xorl inc fiaddl cwtl add xchg adc sub inc xor pushf xor test mov popa bswap stos adc mov xchg call and lret sub daa mov loopne add jnp mov shlb call and xchg cmp mov add or pop enter mov fwait dec or lock push cmp fstpl in (bad) or mov (bad) mov and in pusha negb lds fwait inc int3 push fdivr and add xchg je or sbb mov nop sbb mov or sub jge jne daa pop inc jbe add repz add mov (bad) aam das mov and ljmp sbb pop pop cmp dec xor fidivl push loop test add ret xor add pop aas jg add les js (bad) pop or add cli pop add or add pop push mov jl jbe hlt sub jb iret fistpll xor or push stc add cmp (bad) ficom adc test pop xor enter adc lret pop mov add jo pop adc add xchg enter mov xor jbe shl cmp add lret lods ss imul mov adc push add or lock mov push or mov and scas fwait add add out movsb jmp push add into enter push dec inc add movsb fstl sahf add shll fisub add add jae mov xchg cmp lcall jecxz les test pop inc cmp cmpps xor add or add imull enter inc xchg clc arpl mul dec movsb mov hlt inc sub (bad) daa add test jl pop test add popa mov or dec mov pushf add lahf jmp int xor cmp stos popa loope mov pop (bad) add iret outsl sti jno fsubp jecxz add cmp mov add sbb test add fisttpl mov or inc (bad) movsb inc pop pop fs add or adc inc add lea mov dec add add xchg shrb clc jo and add jns jge mov push sub (bad) (bad) test add popf xor dec mov pop and jge inc hlt mov inc or lds sbb (bad) incb add add popf mov cltd dec inc lods xchg cmp add push lock mov mov adc dec leave test mov sbb cmpsl adc adc and clc sbb lods xor jp movsl adc add adc rolb push insb lods mov das sarb add pop fsubrl add inc or aam mov push fcomps sub jb sub jge dec or sbb adc sub inc mov add dec fwait sub add sbb and mov add pop lret jno push pop dec mov fs je adc jns jno jle add les outsl int3 pop mov dec rcr scas push push xchg rolb addl das mov in and ljmp or push mov cld ja mov jle push (bad) fildll pop (bad) jbe xchg clc push sbb and ficomp xchg push aaa pop push add jo nop push aad jb daa pop and inc insb cwtl cmp pop jae add push sbb pop sarl lock incb jge repnz mov xchg sbb push or ljmp add xor pop dec push test insl out shrl cmp mov inc and jge dec cltd add mov dec mov pop fsubs inc add inc push gs ret pop add sub lcall inc shlb push sbb jge add test arpl xchg sbbb movsl int3 mov add cli jle sub fsub es cmp enter sarb or inc xchg pushf pop add inc int3 sub add or pop mov test add jae (bad) mov fnsave dec cmp mov lea cmpsl rolb ror pusha add push adc push cld es add enter (bad) (bad) aad sti pop adc in add cltd push xchg push pop mov punpckldq and push pop or cld or push call jg clc mov jge ror mov jp add mov int3 roll sahf inc inc add je scas aam jno test sahf lods ljmp adc xchg cmp and ret add clc popf leave cmp mov rcll add mov jne ja adc (bad) sbb sbb mov sbb add lea mov sbb mov out loopne into add inc aad push clc push sarl insb add inc daa sub jle push push mov call add mov aam mov mov add fist add adc enter add mov pop iret fnstsw pushf push xor test orb test incb dec inc rorl imul fwait inc lret mov dec sbb add xor cmp mov jo pop push fdivrs icebp and jo mov pop add movb add addr16 cmpsl xor popf lcall cld fcompl cmp rcrl cmpsb xor es add hlt loopne hlt scas add and je cmpsl inc mov jge xor aam add pop rorb lea dec cmp fadds mov xor mov jp cltd mov mull int3 xchg jns jecxz out push mov adc test xor mov add push push dec and add pop sbb mov xchg inc mov ds add mov adc jg xor mov add addr16 adc adc pop push adc pop sub subb mov jmp push mov jge fimul roll jle movsb push adc pop add pop push ret add adc add jle sub xchg rcrb pop ss or sbb (bad) ret inc or adc or add and add js rorb push ljmp jmp add mov stos xchg add sbb inc out add dec (bad) test add adc pop aam mov mov (bad) fdivrl add ja sub cmpsb out adc add push push pop jmp cmp dec pop jne in (bad) mov add cmp jge lcall addl or lods pop xchg mov ljmp icebp push stc xor ds cmpb add insb push fbld cli cmp pop fs and push aas out add dec hlt sub fistl adc into (bad) xchg lock jb push xor or mov adc mov ja add test lret add enter inc sub pushf adc out add add sbbb cmp pop les pop sub mov and and xor jnp jno add sub inc xor outsb add outsl addl mov dec cld push xrelease and repnz cmp add imul rolb std or or je ja add sbb xchg test scas popf add sub lock pop add mov dec dec inc mov fwait jbe mov adc aaa movb addb (bad) lea inc mov or aad xchg jno ljmp mov add movsl ja cli cmpsb add sub fldenv and jge xchg inc push nop scas into ljmp push popa fisub clc movsl rolb mov sub add scas mov add test adc test aas xchg ds xor mov lods push add es adc jb adc mov sub enter aaa (bad) and push movb add pop (bad) or cmpsb add nop mov pop pusha add into sbb pop add ret sub push mov cwtl jnp iret and bswap jg call inc (bad) jns jnp mov imul sub jg or scas shll xor push aas test add adc jne or dec pop fstpl ss adc cli xor push ljmp fnstsw add xchg subl or jns jg decb cmp loopne mov fdivp inc pusha data16 add jg xchg mov add and and cld loopne sub sbb add and enter xchg loop dec jl add and add lret std xchg fadds lods aaa add outsl insl dec outsb imul hlt xchg jle pop or jno nop fisttpll out add push fs icebp mov call imul push jno add lcall add cmp or imul (bad) jnp adc push cwtl push add and test sub mov daa cmc push loope or js jne out and ljmp icebp or nop push xchg loopne lret sub sbb stos pop mov mov lret inc (bad) or fstl add cmp add xor or aad clc in pop (bad) lock or (bad) fldl pop enter jno aaa add test stc jg adc inc sbb lahf push outsl dec rcll cld pop fmull loope in cmp or inc jmp dec into push (bad) or (bad) dec xor (bad) mov dec insl push pop lock loop jno and mov jnp in (bad) dec loopne (bad) icebp add jno cmp movsl mov sbb mov ljmp mov loope inc je pusha scas xor (bad) cmc or jmp (bad) bound xor pop (bad) cmp add jecxz xchg (bad) mov rcrl (bad) hlt arpl sbb stos pop push mov push jle rcrl aas jecxz lods ljmp in sbb (bad) push pop inc movsl adc addl cltd inc rclb pop mov jg mov lea in jnp mov shrl imul add popf xor sti push push pop add aam clc mov mov es test adc lcall sub daa dec push lret mov inc push pop lcall sbb push jb ss inc xchg sub sub add pop push pop xor push fiaddl push push in gs mov call (bad) dec cld jne pop cmpsl sub test cmpl fstpl es out rorb jae pop mov pop loopne aas cmc inc in pop pop mov lods int call paddw repnz add lock pop stc push sbb add push clc insb pop sub mov icebp ljmp dec aad es add jne xchg aas and add mov (bad) push bound icebp mov fwait les out and mov push add lock push subl jmp add icebp je fildl or (bad) dec cs pop dec add int3 push mov outsb ret popf in add inc test add xor bound out mov sbb cmp jge dec shll lods ficompl outsb call lods mov and xchg push fsub imul push je subl call fs repz add loopne call add fnop xlat dec ret pop xchg scas addr16 stos sbbb or push bndldx loopne inc fyl2xp1 sub pop add mov shlb xchg xor push inc flds xchg mov out lahf call xchg (bad) xchg mov aas in stc cmpsb clc shrl mov jo call jne add jp jle dec sub cmp rolb and test sub cmp mov add lock inc pop cmp in or or add nop sbb sbb add and fs cwtl pop add insl cmc rcll and add data16 xor rclb clc push add rolb xor pop add jo push in jle cmp popf cld inc ljmp repnz (bad) in pushf dec or mov test and int3 add (bad) adc add pop pop add stc ss hlt scas aas insb bound test in jl add pusha push je popa outsb jae inc jb in daa xchg (bad) lock sarb add push sub cmp cmp mov xchg rol fnsave pop mov lock out and adc add cmc mov add bound (bad) stc sbbb cmp je mov leave pop jne sahf roll dec incl test add jle pop inc cmpsl or mov lea mov and testb pop dec xorb inc jg pop add and inc jmp aad and loopne add cmp iret pop mov shl addr16 dec add and and out or add cmpl add cltd call push add stc and add or neg xchg cmp add out adc clc add fimul lods jmp add inc add xchg into cmp add or jae sbb adc in adc add and add test mov lock nop and mov jno sbb ljmp and push faddl mov je mov pop inc mov inc cmp pop adc add add ret push lret adc int sub (bad) pop jp scas jg add int3 out xchg fmull push adc push pop mov dec xor ss jmp and sub xchg add outsb into call or test add ret adc add dec movsb les cmp jns (bad) test mov loope nop out mov or int3 or iret inc inc sub in icebp sbb sbb sub dec push test jle leave and roll scas or xchg or movb cld sub test jle cmp inc sub adc lret inc cmp cmp sbb mov call cltd and sub add pop mov jmp add and and cs sbb sub lret (bad) mov inc push imul adcb jno add and ja lsl in add lret enter jle add add or loopne push nop adc bound (bad) jo inc js and jbe ds subb mov or pop in int3 mov push ret jg xor stc cmp xlat dec test lds xchg mov fwait jae add dec inc push pop ljmp push add (bad) std lahf sub ret cld in mov inc add dec add add dec mov pop mov rclb xor adc rol cmp and pusha cwtl loopne fdivr add fs int mov inc aas add push sub add xor lock cmp add or int3 jle inc outsl sub rorb in mov push test xor sub arpl pop icebp pop mov or fildll add daa mov add cmc mov add das pop jo fstps or inc jle in outsb subb pop cli jb xor push cmp add or add adc mov add nop scas cmpsb loopne fs add xchg sub sub add push out rolb outsl adc loope jl or sbb xchg jmp jbe add jge dec add test push push dec sahf adc add push call and mov loop pop add icebp xor out add jnp cs xor popf inc cmpsb dec push pop or xor jecxz stc out sbb sbb and and packuswb inc paddb stc cli cmp incb cs and cs pop sbb xor and inc or add jae add or mov inc lahf cwtl pushf add sub xchg icebp movsb add iret push loop inc xor sbb add jg ds xchg out pop pop inc fcomps aad mov sub enter testl and nop sub xor sub mov popf les in mov nop imul enter mov aas xor xchg sbbb adc inc cmp mov and or mov rolb bound imul jge incb repz add xchg rolb imul pop fs cmc rclb pop add xchg rol dec push push add adc imul dec call add sti inc adc movsl mov sub adc add mov rcl cmp or inc add in add test hlt in and mov mov repz sti shl pop add and add out movsl jns sti fmul loope xchg add xlat les cmp (bad) add aaa ret test js bound cmp xchg or sbb add adc inc cli int3 push sbb add cmp lea aas inc mov add mov cmp sti add cmc in add add add rorb or loop loopne adc add fadds add cmp ljmp les addr16 sbb divb addb add cmc cmp js push popa popf insl (bad) mov sbbl in sbb (bad) mov add pop dec or mov les imull adc rcrb (bad) adc cmova pusha cmpb test jo mov (bad) fprem xor (bad) jle pop fwait icebp adc mov push hlt ljmp (bad) fwait or push xor pop aam (bad) stc sbb add in xchg (bad) cmp aam sbb mov add shlb iret in fistl out adc loopne sbb arpl pusha sahf mov pop add sbb or push lods les test inc and sub inc add or int3 out outsb mov push testl call mov add push inc pop cmpsl and xchg dec stos xchg jo inc rolb mov add inc andl mov jmp call lcall jo pop and push add mov orb int3 ljmp sub jns loope jge out push std fcomps dec cmp out test ljmp test aad clc jl mov out sub bound stos inc mov adc add cwtl jge mov push and jns add div test and mov cmp fld inc stc call rcl sub ja add leave push adcb outsl jmp loopne xor push jne aaa inc (bad) lret (bad) outsl arpl push jg in inc scas adc inc decl mov jl dec cmp jle or fimull inc or add nop mov clc dec sub dec dec sub pop xlat mov xchg imul pop mov mov sub add jae call dec sub clc lret cmp sbb or ljmp in sbb adc cli add sub cmpl adc adc push (bad) sub sub adc mov mov cli pusha rcrl push jbe xor add sub subb iret pop adc and addr16 adcb inc add pop xor (bad) cmp or sub inc mov inc push add sahf pop aas sarl adc and add push decl jl sbb js jg jge add sbb or ror fmull and daa clc push test leave outsl insl jno pop imul inc stc and xchg ljmp test add xor jbe mov xchg xor sub sti mov std sub (bad) mov mov (bad) and enter sub int or pop sti xchg adc xchg orb pop insb rorl movsb faddl pop add or cmp in lret in xor (bad) cld bound inc leave pushf and or popf idivb (bad) cltd mul add in dec adc adc sbb clc sbb orb jns clc hlt mov enter and or lret psrad mov or inc adc test enter in lret or (bad) icebp and push rolb adc add dec fstpl dec clc mov repnz cmp in addr16 enter xchg stc pop sbbb adc cmp scas add imul or jmp (bad) jnp dec outsb pop add popf push lret test add fs sub sub and (bad) xor push cmp loop sbb ds xchg fsubrl push loope adc pusha dec dec sbb add and bound add aas (bad) pushf push clc test repz aam push daa add xor ret xor nop sbb add mov loop and sub adc add push jl add call pop hlt in and sbb pop add les into and cli roll mov (bad) enter jmp mov aaa imul pop pop clc and sahf or inc mov jns call sub add pop jp js pop push fcoml jmp dec nop pop cmp cmp cmp inc or and dec hlt cmp lcall leave push sarb loop pushf jmp adc add rolb divb and add popa je cmp push cmp nop cmp dec in add push sub mov adc push sbb adc addps add or notl movsl add pop test and cs mov loopne xchg or clc psllw pmaxub push cmp and xor add loopne add cs pusha cmp call xchg aam aaa fsubs add jmp outsb repnz xchg fwait cmp pop xor add mov xor add sub jle jmp sub test push or mov rorl pusha pusha sbb mov dec std call add mov ds mov add push (bad) inc ss rclb out or cmp adc and cmp fcomps test sbb std cmp sar push cmpb xorb je mov jge xchg test or mov (bad) out mov adc sti mov into cmp and or call dec popf pop and xor dec xor out aad rcl addr16 jne dec adc add jmp loop push das loope or cs ss jb fcmove insl das jp or jmp pop pop test sub (bad) addr16 add sub movsl decl xor pop seto push sbb (bad) iret jmp loope sti std and and add ljmp out dec call add movsb loop mov arpl popa lahf (bad) inc sbb mov jmp sbb push xor nop roll or incl xor pop jno dec pop cmp inc or cmp aaa mov xchg unpcklps or clc mov sub jns push pop loope sti ja les add lea pop xchg add jnp jo xor pop pop fnstenv push push pop lods cmpsl dec std hlt mov sti xor sub lret lds sbb jle mov push add mov mov sbbl xor sub sub cmpsb inc xchg xor xchg jp xchg jmp scas jae and adc mov add lret xchg cmp xchg loopne mov jo cmp in popf add inc add sub movsl add shlb cmp popf xor mov adc es add call pusha and mov push fdivrl loopne push inc clc add enter ljmp xchg (bad) sub pop mov or jno ret pop cmp mov push fisttpll cltd cmp mov test fwait add lret cmp sbb pop jl hlt xchg fistpl jl or cmpsl or push popa loope add dec add and inc push ficomp js jl pop gs incb add dec lret pop leave subb add (bad) mov ja dec jbe add adc jle inc pop mov jno nop outsl scas rcr inc add adc cld stos test fistpll iret inc in cmp jl mov add sbb (bad) out jmp (bad) dec mov adc fdivl fs push punpckhwd inc cmp jecxz enter sarb xor add or cmp mov dec adc sbb mov clc ja pop mov mov fdivrs xor inc js mov lahf call out dec pop sub dec (bad) adc xchg xor insl js or dec push push xchg inc sub jae cmp sub cmpb loop (bad) (bad) or jmp test dec push add lret or sub add dec inc out add or cmp lahf nop das int3 pop mov add stc js add xchg addr16 add mov daa xor mov add cmp (bad) jg add shl add mov jl adc stc clc and mov mov es pextrw popa test and pop push push push adc xchg xor inc inc push add sbb cmp adc stc xchg scas loop call (bad) cmp loope icebp dec call mov pop stos cli inc outsl scas xchg mov or dec fcomi lret icebp addb pop cwtl add jg add add or push dec xorl jns sbb icebp xor pop lret rorb adc add adc popl repnz jge es (bad) stos add sbb jo pop push jne mov ret jg add jle add cmp add pop add dec mov pusha scas mov add mov jmp cld das test call add dec je push inc hlt xor insb loopne enter in and mov sbb push add mov mov mov mov cmp add mov lcall dec ficoml sbb sub inc xor dec pop inc sub out add push and or xor xchg mov pop (bad) jle add and repnz addb arpl push or jmp add jl inc sbb clc stos jo inc rolb lods mov mov repz cs mov jnp rol stos push push fs add dec lcall xor je jmp cmp jecxz cmp lret dec pop cli cmpsl add inc pushf adc pusha outsb push inc push cmp add repnz out xor inc sub xor lahf add in push inc jge xchg inc scas and inc dec add push lea or enter or psubd stos inc xchg pop xor clc mov mov divb (bad) ret loopne pop hlt mov push cmp lock jo fsubl in repnz fadds loopne repz and addl cli jb mov cld pop xor inc movsl call xchg sbb pushf jp mov mov fadds add test add imul call cmp xlat outsl movb data16 mov vorps (bad) or inc xchg outsb sbb in inc out faddl nop mov cmpsl push add orb add and (bad) and out adc test add inc shrb (bad) jp js jl pop roll paddusb loopne xchg add cmp mov xor out lret pop sbb pop pop subb in push mov hlt sbb xchg mov dec sub clc xchg add shll xchg cld xor out add fsubr fidivrl xchg cmp pop jl add add je add enter sbb inc and movb (bad) and inc add test (bad) push inc sbb (bad) mov je mov or push out add sub subl mov lcall enter mov aam adc mov mov sbb shll rcrl add scas inc js adc cld loop rcr inc add adc cli add nop jecxz jnp push std mov add dec daa jne aam test inc xor or je jcxz das push and add sbb ret call xchg xor push imul pop movsb xor add jle scas es scas add repnz incb cmp pop aas movl sub aas mov nop or xadd add jb je jo add add rorb in mov ficomp pop sbb add rcr pop fiaddl sbb dec fimul ffree sbb sbb add aam aad cmp pop sbb (bad) loope in call adc add adc in xor add (bad) repz xor ss (bad) mov add add (bad) xor inc hlt add cld cmp add sarb ds xchg jno cmp sarb psubw sub add add shrb sub inc ljmp cmp add in inc pusha push in add and and daa add mov idivb jecxz and add shlb and data16 mov cmp andl cmpsl in loopne add inc movsb loopne insb add lods subl outsb inc scas cmp stos cmp imul or test push sarl mov jp mov enter loopne or mov jl mov je push jne inc mov ja mov mov inc jbe jb mov mov mov (bad) jno add loopne add nop adcl push inc xchg ret xchg daa push inc push addr16 rcll rolb pushf rcrb inc jo add sahf add pop cmp xchg lcall or pop sbbb fisttp cmp addl dec lock (bad) rorl (bad) rorb dec inc mov inc or or or xchg mov inc call xchg in sbb (bad) push mov cld jb add js and xor push popf push rcrb jns push and inc add push add mov mov pusha pop popf add pop add jno aad or and in ja pusha test jae aas call mov add add movl adc dec sbb xchg push sbb mov lock add and fistp jnp scas cmp (bad) sub arpl add push push data16 adc fdivrp mov dec jo push push push sarb add lods xor add dec push mov lcall jne dec add or (bad) call pop pextrw cmp mov add adc lods add mov lahf adc pop fisttp pusha push cld lcall cwtl push lods cmp mov pusha add jo call inc in or adcl lea xchg pop cmpsl and push xor fadds adc cmp add (bad) aad mov add jne add cwtl mov stc xchg inc push jp push inc pop scas leave sarb add daa add addr16 mov stos add lret sbb mov test add cs xor jno out add adc add sti icebp dec xchg nop pop adc mov adc repz and add pop pusha (bad) incl addl insb push stc leave add icebp pop (bad) mov cmpsb roll jmp sbb or mov jno xchg dec xchg add into rcrl lret mov leave icebp add cmp popa mov into (bad) push cmp mov adc push les push add add mov and cli jbe and and push loop push cmp sub push adc int3 enter enter xor andb and pop xchg jno jb mov add repnz sub fs mov cmpsb arpl dec cld stc ret push or sub xchg adc mov push int3 ret add sbb dec ret clc lods incb adc lods dec and dec inc xchg cmp inc inc adc xor mov lods dec xor stc cmp sub or mov movsl adc loope add or mov or lods int push inc or sub test enter xor icebp sub imul add aaa sub add mov fs loopne repnz cmp adc fwait loopne mov pop movlps rcll add leave mov mov mov enter rolb push popf lods fcomp fs dec or fs sbb or jecxz jno xchg add data16 inc cmp dec pop nop or push ja aam inc xchg lret add pop icebp or inc pop sbb stos and scas (bad) xor or or cmp insb xlat fildl shll cld and push (bad) repnz pop sub out pushf cmp mov or add icebp add pop mov pop in inc pop test xchg int3 loop out pusha loopne sbb mov and lock xchg push mov adc sbb mov test scas xor and popf add in add dec or push add or cmp inc cmp sub dec inc addr16 addr16 xchg pop jge mov xor test adc add leave je push js mov test jnp mov xor (bad) daa shl jmp orb dec call mov ret ucomiss mov mov add jmp shrb push jno add ja subb les mov sub jle xchg ret mov orl out sub and adc add movq sub add sbb or jnp in adc shr pop sub add jne jno les pop mov das div psubd inc ljmp mov sub jge addb fbstp sub add lret jg hlt js add cmp fs es cmp adc aas sbb enter repnz or mov or sub call cs pop pop clc pop loop js add insb sub cs aas add div and add insl cmc and xchg push push lcall data16 or mov movsb push cmp mov or nop inc adc loopne cmp adc jb repnz add push sub adc add repz pop pop std jecxz call adc nop add mov hlt add cli cmc mov add lahf jae imul sbb xor cmp lldt fmuls rcrl push stc jns cmpl sub cmp pop mov jno orb cmp cmp and sbb inc in pop add mov or cmpsl sbb pop xchg xor cwtl loop add ret cmpsl call out shr je mov or mov and mov hlt pop sbb pop inc jecxz inc pushl push add sub xor add pushf inc dec add test fild stc lods notb add fnclex test neg mov sti mov mov cltd push std out addl push and mov mov loopne fsubrs mov sub leave js jge jg pop push dec inc sbb inc inc inc pop inc inc dec cmp dec dec dec dec dec dec push cs or add pop sbbb pop bound data16 imul pop pop jg test jne (bad) ja add xor xor xorb sub add and and sub mov jge loopne sub sub daa sbb xor add cmp push jae add pop (bad) aas cmpsl cmc dec pop and sar ss rolb fstl lret mov pop xor hlt subb bound (bad) mov fwait mov push add fdivrs aad aam cmpsb outsb pop add inc loopnew lcall push in lahf add mov add inc js stos cmpsb mov test fstl jge xchg hlt in dec xor cwtl arpl mov rolb sub outsb adc scas lea push out movb jle (bad) shl sbb loopne add inc dec dec jne aam pop orw dec inc mov xchg shrl mov xor dec call ljmp add stos (bad) adc jg push fs cld dec lock lods mov rcrl inc mov incl add and cmp xor pop and jne mov repz iret rol inc pop xor ljmp inc mov or cmp pop rorb mov test adc std add sti adc cmc inc sub test xor add loopne cmp add or orl add test inc add test sbb mov das data16 arpl add push aam inc (bad) mov push pop (bad) pop push push mov dec mov mov sub add xorl push movsl sub push test inc inc and andb lahf pushf sbb sub adc mov and es (bad) add adc mov out adc add add cmp sbb sub (bad) fs mov push or out pushl lahf out rorb add xchg sbb (bad) loop repz mov and push mov add push push or xchg shrb (bad) push cmp addl jl pop inc (bad) add nop test adc movsb in jmp add jbe or push call js inc xchg ficompl push dec subb jl add mov push pop shll outsb movsl into pop mov cld adc push mov add add push mov jno mov test xchg xchg stos enter cmpb mov cld dec inc add mov mov mov mov pop loop,pn add jae outsb jecxz into (bad) and sbb add dec inc push add push push pop mov sub push mov xor cmp (bad) in inc mov inc and sbb push jp mov add mov and insb jmp in sti popa pop sub cld mov mov lret push leave lcall jne adc loopne dec lock add adc mov mov jne add clc (bad) daa push imul (bad) jge sub mov mov add mov stos into fbstp fstpt movsb jo add popf fs pop and xchg xor movsb add enter xor ret (bad) cmp add incw and out sbb mov pop push adc jb add sub cmc inc out clc sub xor adc push add rolb jae add or out add imulb push les cmp xchg inc sub adc (bad) ljmp xor movl loop rorb dec jns sub add stos enter loopne inc or dec lcall add push or mov dec cltd cli loop add notl add push or cmp jb pusha xor cmp cmp sbb loop mov jge outsb inc sbb inc fisttpl icebp add add inc adc fimull pop or cmp push jp xchg jecxz mov adc sub int3 decb sbbb fildl cmpl pushl add add dec and add inc in aas add or icebp inc pop int add xchg verw loopne and cmp cmp push in lds lock xor mov add out adc add cld mov add or jle pop aas insl add inc push pop lret add out loopne movzwl clc add repz (bad) movlps ffreep push add sub jbe lldt dec inc add shll sub mov cltd gs add aaa add push mov pop hlt cmp test cmp push add adc and adc jne,pn mov sbbb add xor push inc lret push mov pop and or loope mov add jne push jo add iret daa xlat xor push cmc bound add mov lock sub fs dec in add outsl (bad) gs mov xlat leave push sub (bad) in or or fcoml inc das hlt jl cmp adc movsl mov mov nop or dec dec add lods add xchg in es add or cmp push xchg or jne mov mov or mov mov into dec repnz enter add push in inc push dec lret (bad) ja stos sub mov gs mov push in push aam movsb push js dec add insb mov fcoms add in xchg nop mov cmc dec add movsb dec xchg pop add adc lods adc loop xchg dec cmp add out fwait aam repnz cmp ret cmp movsb cmpl adc inc adc ss and and or jmp (bad) out add popaw (bad) adc mov add sub shrl and and cld mov ret lahf jl leave inc loopne push dec mov xchg test push xor movsb add xor adc mov push add xchg sarl jbe fs adc in mov loop push pcmpeqw add dec aam xor or cmp ljmp dec dec adc in inc fucom mov cld dec clc dec sbb fild test or adc push inc (bad) add lret sbb add addl js add call (bad) fdivs xor pop inc and push sbb cltd add icebp add push int3 incl es sbb flds icebp push jp pop xchg add push inc (bad) mov clc imul add adc mov ds push mov sbb add ja mov and nop lea add out dec fisttp rol bound add jne andb sbb inc xchg cmp xchg shlb push and rcrl ret xor incl dec adc aam cmp cmpsl mov xchg sub sub add or sbb push mov adc cmp imul add pop xor add fcmovnb ljmp push add pop xchg and sbb lock jg xor add test add or push sbb push and and dec or nop fldcw ret js dec je jle mov add sbb dec cli insb add add push jb decb stc sbbb add cmpsl int3 adc inc sub pop daa lret mov inc fadd xor addl mov add add dec pop sbbl mov mov cvtdq2ps hlt and pop and mov dec cmp inc jb out test inc pop xlat cli push xor les inc add add jne pop in ljmp pop add or xor (bad) jb jmp jg sub push ret add and rcrb test add aad lcall ss lock cmp cmp jb add iret xchg arpl rorb add lods pop fnstenv sub mov mov imul pop and or addr16 xor jo dec sbb xor jbe into add adc fcmovu inc and push dec dec cmp adc adc xor dec nop fs fisubr hlt pop add lret (bad) icebp dec jae call push das jb add dec hlt jne mov lds aaa jg add rolb mov dec push clc jle fstl or push add mov dec loopne popa loope test lcall les incb (bad) push xor clc lock mov push gs repz inc aas push pop and sbb mov fisubr add fiaddl rolb inc sti push lcall imul jmp pushf add cwtl pop add in inc cmpb jne lock (bad) in jge pop mov push je mov adc and movsl and lret add int3 add push xor dec cmpb (bad) jne add call mov dec psllw push cmp iret xor je and cmp add pop push or addr16 inc addl call cmpsl dec cmp push jo inc (bad) xor mov add adcb pop mov add mov ja inc jae or sub sbb je add pushf jbe aad xor sahf or or rolb (bad) not das xchg cmp (bad) adc divb add sub mov jmp and push sbb mov loopne cmp cs lea mov or rclb aad and jb xor mov scas loope add loopne pop dec and call mov mov adc mov cmpsl imul mov inc mov incl testl movsl loopne call sarb xchg push xor inc lret push pop inc add sbb or les mov cmp cmp (bad) mov jecxz test je sub push call mov add adc mov cmpsb je lret cli hlt pop sbb imul xor ljmp das add and adc daa jne out xor mov add (bad) dec push jl sub push push push push xchg pop push pop mov or or js add mov leave test xor mov inc pusha adc push add mov call sub lods pushf mov inc add xchg or daa adc inc push mov mov sbb inc and adc mov jb mov icebp pop imul inc xor mov xlat push add fisttp inc (bad) (bad) xchg stos add jne xchg call sub add push fs add push dec lret xchg or je mov sbb xchg or xor lock add loopne push xchg sub aas call adc cltd inc mov in mov cli sub cmpsl lods sub ret aam lcall mov stos adc add or mov pop sub loop ficom sbb ds cmpb dec inc fisttp mov je,pn fnstenv popa add add add pop add pop xor sbbb mov data16 out inc mov push push add ret add dec mov jge stos pushl test pop add xchg add movb sbb lea (bad) clc js add mov in enter lahf sub loop add dec inc push pop adc add aas call mov pop or fwait or adc scas pop outsl xor push ret sub ss add in scas test nop xchg subb and rorl and add daa adc fdivl or call push pop popl add dec xchg push and jns data16 push add (bad) xchg ret and add xor mov jns repz loope cs add push popf int push addl push adc sub add lcall mov add (bad) xor xchg in inc or repnz lahf add popa mov push sub add xchg xor add dec sbb add rcrb jnp cmp clc pop fadds (bad) mov loopne rolb push ret sub jecxz add lds invd add data16 sub pop xor je cltd and add rcr jg or es mov mov sub pop dec adc mov sahf bound add pop inc mov nop in add inc mov cmp mov rcrb dec xor clc adc cmp or sbb and xor xchg mov or mov lds jmp mov push add mov dec add les loopne es add js pop add loope dec add pop es and sbbl incb mov push leave (bad) cmpsb sbbb adc ret push daa jns dec adc pop jmp or mov movsl sbb lock xchg insb add nop (bad) mov or xor push leave adc sbb pop fsubs sti mov adc loop dec sub jo inc add call lcall add lock mov add arpl shlb jge mov jg add inc push mov add imul clc push sbb subl and push and pusha repnz incl mov add mov stos insl bound push iret xor adcl stos xor add push push pop fbld popa shlb dec sub add inc repnz add xor or push or test test jae cmc add inc push sub jg sbb adc push mov subl xchg jg add mov mov mov cmp fiaddl out mov out add orb fwait pop cltd jg ret inc adc and lret les sbb adc lock or in stos dec adc sti mov decl jns (bad) bound push inc dec or push pop cltd add aam push mov sbb add mov (bad) mov and jle add push dec adc push push pop rclb or pop cmp add pop stos add xchg cmp dec loop shl xchg xchg push pop push (bad) dec (bad) adc repz add je repnz mov in ds add arpl pop nop sub test movsl jge incb fidivl leave push stos and sbb pop fwait test adc push inc mov stc (bad) fs inc xchg pop sub push inc pop cltd movsl jnp mov pop jo fwait ljmp lret test ret push sub test dec inc lahf push dec add push gs cmp pop mov call push sbb sti out inc roll aaa rorl call cmp ss inc add xchg adc lret inc xor mov insb add ret cwtl push je or shrl xchg cld fmuls jne pop enter cltd adc pavgw jmp push movsl adc es push add or sub mov cmpsb or adc add xchg adc sub es mov lret inc xor xorps jnp add or cmp lea add mov sbb lret dec or addr16 or mov ja test fisttpl add and add ret test add (bad) je aad add xor cli mov cld cld int test inc pop std mov push hlt cltd (bad) mov imul sbb mov cli sbb pop (bad) xchg inc in xchg mov jnp pop shrl dec or dec xlat shll aas cld and pop mov cmpsl add xor push not movsl repnz xchg push ds lahf mov ss ljmp lods cmp xrstors push test insl sahf in push std pop sub inc add addb and repnz inc ror xchg cwtl rol pop sbb pop mov es or cmp subl test (bad) movsl mov in dec add sub add rcl mov mov inc mov add pop inc out add or mov mov sbb (bad) dec pop mov add sti add cmp lds cmp adc stc xor inc pop adc insb and jbe movsb mov sbb pop pushf and mov sbb lods hlt inc loop,pt cs push jp cmpsl jne,pn insl out sbb loope roll les and xor add xchg pop mov icebp mov xor lods lock sbb mov or inc mov cmp pop subb pop lahf xor add and push mov inc mov push jbe mov movsl aam (bad) leave push int3 loope dec mov push out push adc aaa mov std aas outsl mov pusha cmp and in clc push lret inc pop sub dec add je jns (bad) mov shrb mov pop add idivb cli ja pop leave pusha xchg sub adc enter ds add inc inc popa push cmp add mov push popf aad inc jbe in push mov adc movsb or xchg loopne push pop sbb cmpsl pusha ret fs mov cld pop loop imul ljmp mov lea jp mov andb or inc pop das leave xchg xor add test pushf into rcl add sub pop sbb je jb add bound add jb cmp ljmp sub cmp jns pop dec in lods push add lods sub xor jno add jge lldt insl pop daa dec adc xchg mov xchg mov arpl pop jae cwtl fs add xchg dec lahf js lea test add mov mov fbld push inc jmp push les or xchg xor pop imul add (bad) xchg push pop add jle sahf add ss and add stos push ret jns add sub test mov push xchg push ror bswap hlt add negl or add push loope mov and jne adc pop cmpsb call mov push inc addr16 cmpsb jb gs jb pop and lods fwait add push bound pop pop xlat inc or nop popf scas push insl xchg jnp add fsubrl and mov arpl cmp adc push jmp add or jbe inc aam popf adc lret in lods adc out outsb and scas jbe mov mov or add cli cmpsb adc add add sbb popl ret add add jns add lret sti push out jbe add mov ja jl dec test ret push inc lahf xchg pop xorl enter cmp leave mov adc stc insl lds int3 push jg jecxz sub adc push arpl add jge pushw jbe add (bad) mov pop dec push inc jl pusha add jbe outsb cmp jp imul imul add push jl nop jp lods outsb pop xor andb adc pop ds inc (bad) outsl insb pop (bad) gs push jg jae jge lret inc not fs aad and popa mov add jno popf jp fstpt mov dec sbb outsb dec arpl add dec add push push data16 cmpsl addl mov add je jl,pn aad mov cmp (bad) add ja inc xchg mov or subl inc outsl frstor sbb inc add push nop ja jo out and test ret xchg jb loop pop popa clc in add je adc sbb push test jecxz add leave xorb or sub cmp push pop mov pusha add jecxz pop mov push push mov adc popa jbe arpl fildl cmp add nop lods jbe adc aas imul push cli mov sbb xor add or pusha push cwtl sbb and arpl cmp popa add rolb mov adc inc jne mov push mov out insb pop xorb mov fwait mov add adc enter add jp sbb jle add in add daa cmp xchg adc adc add push jnp js fadds adc inc (bad) xor lods xchg loope repnz out faddl in enter pop mov lock jae jp add xor jno loopne mov enter push sbb add or mov das std add lahf in xor dec push out aaa sbbl movb cmpb inc push add out mov leave or lahf bound mov xchg adc or cmp jo mov mov bswap add pop popf pop adc stc roll mov xor fwait loopne push enter ret cmp pop jmp pop push mov psubq dec add cmc inc ljmp jle dec sbb (bad) xadd add into and fisub cmp sahf dec pop mov push mov xchg xor and mov inc adc test push rclb (bad) mov sti outsb mov inc pop cmc pusha adc add into adc repz xor and pop incl ret fimul idivb call jecxz sub xchg pop lods cmp mov add (bad) outsb xor call jnp xor xor push enter cmp inc ret xor in dec add dec sub xchg push push push jle clc push loopne ljmp sbb out movsl (bad) adc xchg dec pusha push lea xchg adc xor mov stos sbb jg add insb outsl and je mov fiadd mov jg pop add int adcb xor xor daa daa testb loop pop aas adc (bad) je int fstl mov cmp stos (bad) inc or ret cmp lds push dec cmpsb and add bswap fisubr dec dec lods test and sahf lock sarb shr aam mov cli push and subl aad mov mov sub mov andl in add rclb inc pusha aam fcoms faddl les ja add inc lock dec stc loope lcall hlt les (bad) cld inc sbb cmp sarl xchg sbbl lcall sbb and adc inc add icebp sbb mov cld jecxz or testb add aas adc cmp lds inc push xor add jnp cmp inc addb fmuls mov cmp sbb or rclb jp lods nop clc sahf jl jae add fldl pushf or aam imul mov (bad) leave das push push (bad) pop rorb mov pop add jae scas fsubrl fadds jle mov pop sbb inc or adc add cmp add xchg rorl scas add mov sub dec test and orb or pop push cwtl sub adc mov xor add comiss roll jne add je outsl add and adc aad push jne add das pop pop add in pop in lret enter push mov mov add push out aas rolb test addb cmp jne pop addb add jge push push pop iret adc sarb insl cmpsb mov add adc test lcall int3 add push cmp fsubrl add sub inc (bad) mov jmp sub stos add addr16 jl mov pop or pusha cmp sub cmp add mov or xor roll push sbb sbb push and mov cli dec add or or fildll shl add call xor loope and xlat push mov rcll cmp jle sbb mov clc inc mov mov inc imul or shl mov and dec lods (bad) pusha mov fist in xchg push cmp pop outsb fs outsl jne or add scas xchg test enter call rorl hlt popa fadds mov cmc xchg jge push call jg and mov mulb nop mov sar es inc add cmp call cmp je jnp popa add xchg lret jge lcall test in je sub pop fiadd jnp (bad) test xchg fmul outsl mov fadds call adc je add dec push cmp mov or je add stos pop repnz add mov xchg sarb xor jmp fisubl pop jae add mov pop jge add cmp loop dec call push fiadd and pop clc mov push out or lods pushl mov add xlat mov jo push cs cmp inc and lea pop pushaw cmp mov lret add add jg (bad) enter je pop cmp cmp push adc add push out ds (bad) leave cmpb out iret add cmp cmpsb xlat pop or rol loop (bad) xchg outsl dec add (bad) dec mov add movl xorb dec imul inc mov or inc addb sbb je mov cwtl add mov xor sahf xchg pop push bound or or xchg in adc decl scas roll cs popa arpl and aad jo jle add dec pusha lahf push cld roll stc cmp addl mov dec fwait repnz rorb or fs add stc sub push mov inc sub fldl call les aad ljmp stos mov jnp adc xchg adc mov pushf mov push dec sahf imul clc pusha push mov lea xchg and repz adc and or sbb nop cld sbb add cmpsl sbb pop cltd sbb adc shrb call test mov add sub add jo push jle jae pop test ds mov dec lds lock or jo pop inc jle jmp xlat jo rclb fiaddl add inc jmp lea scas cmp ds cmp mov adc jae mov add add imull fildl xchg add sbb add or fildl add jmp in add push add fwait mov lods jp cmp lea out jo add add (bad) arpl add xchg addl mov or and lea or (bad) movsl push add xor je xor mov cld inc add ret call lock orl jo add push cmp fistp and sub sub add sub add es adc call ret jne cmp jae test ljmp jbe loopne nop in js mov add ret add pushf lret inc or dec test adc push dec shrl xlat iret push and inc pop fiadd push push add add sti or inc sbb lea or sub jbe dec sbb (bad) xorb add movl ret aad test inc push mov xor jmp adc and inc inc pop add and push ljmp add sbb or or xorb fs cmp mov subb push dec and inc inc dec xchg lahf add lret fnop jb adc test xor mov add ss add sbb push mov lea add add cmp and pop sbb push loope jnp add cmp pop xchg push and sub sbbb movsl ret imul mov or cmp outsl pop test add pushl icebp nop jle stos add sbb loopne fisubl add or pop loope pushf jle push sbb cmpsl in dec (bad) mov sub add and push js dec add xlat nop add xor jns fnstsw add adc push (bad) mov lods and sbb pop add sub sbb push cmp dec xor addw inc lret adc xchg cmp mov add lock or cmpsl add mov xchg std imul adc push sbb mov inc xchg lret or das mov add adc clc mov mov jg imul loope icebp paddusb mov mov or add add lret add daa dec push sub sub add mov xorl daa ja popa add add fyl2xp1 pop (bad) mov add mov movb push xor fwait cmp dec add jns (bad) popf dec imul adc sarb add call (bad) rcl mov pop add int into push dec fstps cli (bad) jmp enter fs sub pop rclb add cmp inc cmp sub cmp test dec es dec add ljmp in add ret lods mov and mul add pop adc dec mov xchg pop mov ret pxor fisttpll in mov jne xchg add pop aam dec sub adc dec push xlat add test or mov xchg xchg sar dec in mov and fdiv lret add inc fstl pop or daa test and nop jbe push (bad) push jg dec sarl stos loope pusha push push pusha push and add lahf clc jge stos inc imul mov hlt ja add js inc je dec fcomp sub add push xor add movsl rorb or cmp sub push test inc inc (bad) mov add sbb in add rcrb je jbe test xchg xchg jmp ret sub lock leave jecxz cmp call inc out add push call add ds imul push gs roll dec add push pop jb movhlps push jmp (bad) repnz (bad) gs push hlt mov and repnz enter add das out daa jl scas add cwtl jo test push (bad) or outsb add cmp test or xchg mov aam add inc lods push popf jb sub jnp cmp cmpsb add cmp add imul add je xchg out sub inc mov and add dec push add cmp jbe ds sarl int3 or mov add stc cmp sbb sub arpl cmove push push pusha or iret push push sahf add dec push dec jge les jmp xchg rclb rclb jle sbb jnp cmp cmp aad push mov mov mov xlat mov sub cmpsb imul call fs ret rcll scas cmp and (bad) mov mov cmpsl and loopne push mov xchg push arpl inc iret pop mov add dec pop mov sbb add loop mov or adc ret add xchg ja mull cmp sbb adc mov xchg ret loop clc je add sub dec jb adc adc fildll sarl je push cmc xchg inc push cmp aas xor fisttpll or xchg push adc mov repz jmp xor pop mov pop or shll xor scas inc out inc add xor int sarl loopne scas mov adc inc movsb jo stos dec leave add pop or lock negl add and push test rorb xchg test into test push add jbe popf pop mov push cmp xor inc add or movb cmp adcb push test sub ljmp sub jo es aas dec push add pop clc jae incl sbb je mov sub jbe sub call mov sub (bad) pusha xorb cwtl out mov test jb adc and movsb lock pop add (bad) add pusha xorb mov mov jmp enter cld pushf pop movsb cmp add mov add (bad) add or leave and adc pusha scas fstl inc dec inc or mov dec xorb stos ret jae inc imull dec and xchg mov and in test ja jmp divl daa jb aas lcall popf xchg push add leave ljmp sbb es sti add lahf stc inc add loopne ret add pop aam or xor call add leave cmp lea or push pmulhuw ret dec jbe pop add push mov or repnz jmp add xchg (bad) mov (bad) mov jmp rolb push xchg loop push xchg stos shlb int and popa leave xchg inc inc mov dec add sbb jge (bad) push push dec mov add pop or inc cmpl jmp jge pop xor xchg je add and mov movsl popf adc (bad) or add and sub add lea inc add repz stos daa mov lock add xor out mov add incl mov and mov add ljmp sub adc mov (bad) aam push addr16 add int3 call enter mov push sbb push dec sbb push in mov cwtl lock inc mov sub cmp xchg pop xchg sbb mov fmull cs jbe add and rclb xchg add hlt pusha cltd xchg push add fbld leave imul add xchg gs mov dec cltd dec xor mov mov in add mov jo popa dec cmc pop add aas push and push cs sub jno pop pushl jge arpl add ja pop add sub cmpsl or or jbe or hlt add loopne cmp fidivl out or scas cld cmp pop mov cltd rcll pop aad loopne jl enter sarl enter bound jns jp addb popa loope out and adc push mov enter test (bad) ret add push mov std mull (bad) cmpsb scas cmp pop jg inc mov mov push add lret call add jae (bad) pop mov test pop lahf jo inc or push dec add decl mov sub sub sub fwait jo add and lret ja or cmp je mov mov mov sbb rolb mov gs add (bad) jge adc sub or into shlb add jmp add add lahf jb jae add jge cld rolb add ss jb xor push inc add sub add adc pop jne or rolb dec mov ds add daa push cmpsb adc cmp pop test push or dec out mov (bad) mov addl xor add ljmp lods push movsb nop dec sbb or add aam xchg push push or push dec aad cld dec sub inc pusha add (bad) fs jl push fldenv cmpsb adc inc mov pusha mov jae mov sarl addl mov call add mov sbb jne add adc mov in push xchg or (bad) sbb mov pop xor mov in inc or out testl cmc test sub adc aam jg xor mov sbb adc mov and cmp xorb insb add (bad) ja sbb rorl cwtl xlat cmp xchg orb fucomip cwtl (bad) cwtl cli add jbe mov cmp sbbb inc add dec xor xchg imull and roll clc pop xchg mov add out cwtl mov mov int3 cmp cmp andb jnp fcomps in pop xor sub sub bswap jle push pop imul dec flds bound and rolb cmpb pop aas inc and test pop fisubr sbb add cmpsl xchg pushf add push test mov pop nopl (bad) lret into jns sub mov jl mov inc mov ret hlt decb cmp arpl insb add ds mov inc add test push push or cmp adc fstpl aam lods popl dec pop lret or and mov push push popa jae xorb ss outsl dec add dec outsb je and testl push and cmp arpl int3 iret pop sahf dec popa outsl and ds mov xor in jl push add in pop push mov addl inc xor push xchg or jle add jmp push add or lret icebp xlat push shrl in mov jne call jmp inc add (bad) jmp (bad) iret les notb lahf pop sub je xor (bad) lock (bad) add inc mov cmp push sbb mov dec dec test fstpt idivb je adc adc mov sbb xor aad insb sub cli add inc xlat cmpsb mov cld push and jl and add cmp rol in add jae mov pop xchg or jp inc inc add gs mov dec add push sub mov mov arpl or jbe (bad) cmp cltd mov inc add cmpl or sub enter push sbb sarb repz adc and or lea call pop or cmp (bad) mov cmp adc test push inc fcom clc adc call mov fiaddl adc dec add hlt test fcoms (bad) push imul xchg dec adc add fidivr rolb sbb pushf aad call lds cmpsb add jecxz imul add scas sbb pop cltd mov in mov or or (bad) lock mov push jmp data16 aaa add (bad) push adc adcl movsb sub fmuls sahf sbb inc sub lahf adcl lea mov mov test mov outsl outsb clc mov cltd jmp jge add add or cmp add jmp and inc pop dec stc inc add mov add (bad) ret sbbb aas mov jle add aam lcall cmp mov inc pop fwait roll leave push pop or pop sete add dec lods loop je adc add xchg paddq movsl fdivrs call clc fild sbb pcmpeqb push mov pop lahf icebp pop shrb dec lock aaa push sbb and push dec xor cmpsl nopl xchg mov movb notl nop fisttpl movsl (bad) mov incb and outsb sub push xor sbb lock or add mov cli call add mov add loopne or ljmp es adc add out pop push or outsl fwait ret mov std add and fiaddl add push pop and data16 sbb xlat addb ficompl ret mov mov push testl pop jg aas add adc and cmp sbb inc sbb ja cld sub add stos loope aaa pmaxsw dec add dec loopne jb cli dec add ret jl inc cmpb jle in pop jmp cld or pop adc add add xor push ret add out dec add sar imulb add add pop loopne pop sbb sbb or jo dec rolb andb rcr (bad) or aaa incl add in adc loopne mov pop pop stos daa hlt aas incb add cli xchg lea stc cmc add adc add lods dec sub mov das add in push or icebp pushf mov cmp addb sub fsubrs add imul sub (bad) lock stc gs lods sar ljmp cmp (bad) sub push xchg xorl in pop nop adc andb xchg xchg scas sub arpl xchg add sbb cs sarb or add add cltd or mov fwait andb mov add sbb or mov add orb frstor (bad) rolb fld (bad) test scas mov sub pop ss mov xor inc cmp xchg or and test add sti les push add fstpl add xchg pop les das mov je leave adc scas lods xchg jg add mov adc fimull enter enter add xchg sbb loopne add mov push mov lahf push les mov rolb imul in scas rol add pop popf js gs add call lahf (bad) lcall push mov adc lods ds pop (bad) ss inc sbb lret mov mov lcall in add adc fstl cmpsb mov xor jnp repnz pusha icebp incb ret add cld or inc addl pop pop iret push add fwait dec imul mov pop mov inc inc out icebp es mov mov daa jo testb (bad) sbb pop xchg jge cmp hlt push add icebp fldl xor movsl cmp push sub iret and jle loopne aad jge addl sub lea and movsb push cmp inc sub sbb inc sbb xor add mov jle aam scas ss pop pusha shrb or aaa add (bad) bswap and (bad) jmp add pop cmp add test fsubs imul mov ud1 sbbb cmp lea dec sub popf add mov mov xor sub cmp or mov mov mov enter ret lock mov cmp pcmpeqw (bad) adc fdiv add (bad) jecxz jle mov add aaa shr loop cmp and or fcoml jl rcll insb adc jns add cmovp cmpsb or mov nop aam bnd pop lahf pop stos and mov out lret jb aam stos add xor push xlat inc or shr inc xchg movmskps sbb and test in fmuls stos roll flds cltd iret adc rclb sbbl mov (bad) arpl add call (bad) and nop popf lcall dec add into cld push mov fist (bad) mov add popl stc xor adcl aam add rorb inc xor lods add sub inc pop push ljmp mov dec pusha add fdivl lcall lret loopne je adc (bad) or add dec sbb es add ljmp add lea rsqrtps movsl arpl mov add popa sbb cmp and out add shr add movl cmpsb pop mov xchg sbbb sbb sub jle movsl add dec push pop dec pusha pop (bad) sarb add or hlt add pusha or adc pop daa sbb aam add pusha jo andb add xchg add and add mov lret (bad) jno daa or or or xor adc enter push mov push mov push cmp jb push push add leave sbb add jo xchg xor add shl sbbl lock add add das pop je out pop not add jb daa inc adc add pusha ftst pop mov iret and sbb fwait popa mov pop pop mov stos lods jmp xchg add xchg imul jg (bad) dec mov cwtl sbb mov sub sbb mov stos pop mov test xchg and add push or cmp mov xchg or cmp lds mov xchg inc add ret adc pop or jno xor mov push daa adc xchg loopne rorl add add sbb jno pusha add mov jle loopne add add cmp cwtl jge add and jl mov cltd push mov pushf idivb rcll into and add mov mov int3 sbb add fstl and cwtl lods cli lret and add loope fmulp call add dec test sbb lds or sub xchg inc add pushl add pop xor cwtl rcrb and dec (bad) inc adc cmp mov xor mov inc test or xchg cmp (bad) xorl cmp mov add add add in push jo sub jb movsb cmp mov inc mov add bound loope xchg dec pop pause in outsl xor jge pop stc roll daa js arpl add mov cmp pop and and xchg sub enter (bad) mov add mov inc push sub or xchg icebp jmp add xor stos cwtl mov xor or lock and add or fadds aaa dec jns and int mov ret xor pop call cs add les jmp sub imul aad inc mov jo nop insl add mov std add jp shl add fiadd clc cmp inc add push push aaa inc movsb inc mov sbb (bad) jo mov xor or adc inc rolb add add jmp push add push inc pop add lahf jne mov leave add or push cwtl push inc inc mov mov shl movsb clc pop push pop or pusha scas add dec cli add jl add daa and sub cmp sub lea push add pop int aad shll add push push xchg push add xor rorb adc add adc lea mov xchg push mov movsb int3 xchg or mov xor mov add stc testb fcom mov nopl xor inc jmp jne aas sub pop pop lods fdiv repnz cmp rorb and add pusha dec sub ljmp xchg or sub push pop in add ja jno movb and inc dec xchg cmpsl in rolb lret and popf or add rorb xchg xchg inc sbb xchg lock movb fs data16 mov lods das or jb jnp dec sbb cmp add rclb cld mov adc dec sub testl sub aas add mov in mov int3 jo add arpl mov push fadd addr16 popa push sbbb xchg push jae add fisttpl push add stos xor jae cs and or rcrl mov adc pop icebp out inc mov dec jg add mov fwait jb xor add adc sbb adc mov das jle push into (bad) cmpsl xor int3 int iret ror ljmp imul sub mov add pusha ja pop les aas xchg scas push xchg cmp cld cli add incl jb jno add pop add push add cs and add sub or mov mov daa dec xor mov clc add xchg mov iret jns sub or out sbb int inc cmp and cwtl jb add std add sbb jmp pop xorl sub inc inc mov in ret movsb mov sbb add test add add dec (bad) fildl je loop (bad) mov jmp sbb enter pop pop mov pop push in fldl bound nop push adc mov add cmp loopne jae xchg sbb inc roll push verr fisubl jnp xchg and adc or sub cld imul outsb sub (bad) ret jnp testb subl jae add int dec or lret movsb add fnstsw popa cli fcoml adc or lret mov push inc orl pushf das add loopne or (bad) mov movsl pop pop sub mov jo push out test xchg fs outsb xchg addr16 add and add push lods ljmp push pusha call add or je xchg bound shlb ret add mov clc rolb aas push cmp ret pop push sub add lods sbb repnz jne add jnp mov or rol imul js pusha inc pop inc adc aad mov insb jno dec add das mov and xor and xor jg cmp stc pushf bswap or jge xchg adc data16 pop flds je lcall lock push loopne and add loop adc add and das cmp inc verw or adc mov push push into aas cmp movsl xor mov xchg inc test sbb fiaddl add push or mov in add mov sub add inc jp fimul lds clc jge test inc sbb mov sbb sbb xchg into push inc sbb add or test scas cmp mov mov add or pop nop hlt dec push js add ja sbb (bad) negl sub add es xchg sbb sbb push inc jno inc adc jg in adc xchg aas jl push and add push or notb hlt jmp sub pop sti and or inc pop sub loop cmc addb pop jge or push add xchg add leave call pop inc or stos push and movsl add mov cltd add aas (bad) (bad) ss jg mov add flds xchg xor clc jecxz add (bad) bnd addb lock pop jle lds hlt fadd mov adc cmp xor and add icebp pop xchg hlt xchg add mov sbb lods jle pop or ljmp xor and dec jnp adc mov je push inc inc pusha jle pop push xlat pop ss lock sub pop in add popa jae jo call mov sbb xor rorb sub sahf push sub outsb dec add cld add mov mov pop cmpl jmp cmpsl cld sti add bnd mov and xchg add sub popf and adc mov jp (bad) ret inc jmp xchg mov mov jecxz mov (bad) add xchg out jl add aad add lods add mov xor clc adc dec ljmp xchg add xor jl add hlt rcll and movsl clc data16 insb cmp cmp std xchg ret or mov test push lods stc fsts aam ds add push nop jmp add fisttp push adc stc add jae lds das in popa movb sub (bad) or cltd cmp ret testl xlat jecxz enter xchg notb aam icebp mov movsl jae mov add or and add and add and add sbbl cld add cs not inc mov push test sbb and jle in or push jne inc jg shll bnd mov pop cmovg pop fildl test (bad) fwait jmp cmpsl gs adc repnz mov enter dec or movb cmp ds pop sub or mov and jnp loopne cwtl pop add negb mov jbe add jno das inc add add or rcr in loopne sahf ja dec daa mov add test jb jae push mov incl fcomps fistpl lods add mov fmulp xor stos (bad) jo mov mov push xchg mov and lds add das aam and add test adc testb mov dec rorb mov mov in clc jnp jns add sub add int3 pshufw adc nop int cld mov cwtl pop mov addl jne inc add inc clc and add inc data16 cltd mov xchg push add daa cmp push rclb sbb or mov and add push mov jo add pop cs rcl or cltd add sbb addb mov test sub add push stc push and xchg inc cld adc add orb adc sub pop or and std mov mov xchg inc inc test call cmpb pop ret fildl xor cmp add or ja add inc xchg out pop sbb pusha and outsb jb pop imul xor push or rcrb add lock sti daa and sub add or inc sub mov dec ds mov ret ljmp mov push xchg cmpsl jl add add and shll call nop add cs jne les inc dec mov adc in imul add jg pop add in and add fs addl outsl je xor mov aam int3 pop push pop inc mov adc mov dec lahf push mull addb and ds sbb jo mov xchg pop pop enter (bad) repz lcall dec aas dec sbb jmp sbb or sbb inc xchg shrl jmp pop mov pop (bad) out cmp or cmp pop mov xchg push fild sbb dec jl xchg add add (bad) xor and repnz xchg add lea jo rclb in push cltd rolb or sub mov pusha rclb mov inc mov repnz icebp out sbb xor mov aad push add dec mov dec inc js jnp mov faddl imul out adc add addl lret add or sub leave (bad) xchg push push add aaa xchg cmp shll dec jle jb add cmp je stos push jecxz and pop xchg add sbb dec mov mov xchg push pop pop jae rclb into or loop push add sub sbb test add mov adc fs or cld test cmp lock mov or test jp cmp mov test push push adc xor fildl inc iret pop mov sbb mov addb imul incb xor sbb push jae adc adc add xor cmc test mov imul call gs cmpl pop ret or loop add or mov aad shlb stc jne add cmp pop stos nop shrb adc popa xchg sub hlt in cwtl fiadd loope pop sub inc inc add mov sarb mov test add test je or jne inc add aam lcall or nop add sub push ljmp xchg arpl add das jmp fcomp test clc add cltd mov inc xor or (bad) jae fcomps jo add je pushl or push rolb inc inc mov add mov xchg mov out repnz xchg pop mov pusha dec jmp pop fcmovne adc mov cmpsb ret sbb sub xlat mov in add cld add add or dec xchg pusha add or or inc pop or adc ret add dec or or add add std xor rcr adc jmp (bad) cli mov mov add nop daa ja add xchg xlat xchg add add add lret or adc add fsubrs dec cmpsb leave push add xlat out dec mov sbb dec adc xchg push adc adc pop (bad) movsl out mov mov or into inc pop jo lcall xchg fsubrl ret xor mov fstpt push mov lret or xchg add adc or iret (bad) out lock mov and add insb dec fs stos lock ret add push adc push cmp pop sti add into repz sub add cmp add mov andb incl jns gs push fnstcw in jl aaa xor std add lods jne fcmovnb dec gs add or and lea xchg mov or add pop mov pop sbb clc test push add rorb add and out in lahf and add stc xchg dec sbb divb mov insb push push add fisubrl push mov dec jmp fcmove mov hlt out imul mov flds nop (bad) mov roll dec ret and inc pop add jae jmp pusha or add mov clc ds cmp push les loopne sub sub xchg xor in sbb incl mov (bad) pop xor jae pop in data16 sarl add adc dec push pop cld in mov fdivrs mov add cmp push jl add mov rolb or adc sbb or jl (bad) add fmull repz call loope xor add fs enter lret add add xor adc ds add inc and sbb add inc rclb (bad) test fidiv repz mov add daa js jno cmp xchg loop xlat jmp fcomip add imul push jo adc jp mov mov mov sbb sub dec sub (bad) fcoml fcoms mov pop inc push out negb cmp inc aam add in or inc or add dec test dec adc lods xor (bad) and test xchg or mov cld (bad) mov es jp xchg add out sub dec dec add mov fdivrs mov fisub out nop cmpsl cwtl jnp sub fdivs adc add call outsb hlt mov mov inc je sub es or sub add mov jmp push xor int3 ja fs xor or fadd add and rcll in out mov enter jecxz movsl jge inc call and push add or pmullw add sahf inc dec fisub fild into test or in sub xor hlt enter push pop movsl ja add mov and push and inc and sbb push cmp inc cmp jne rolb and call add test incl and push out add mov jbe add lock or dec mov xchg popa jae ja jb in add cld mov sub insb rorb adc jae mov mov jb out daa and addr16 orl repz add pop faddl (bad) test aam inc adc aad cli loop add mov mov pop fiadd xor cwtl rorl outsl pop sbbb cmp rcll xchg sbb add dec dec add mov mov fs xchg pop je dec mov cmpl push mov adc pop sub xchg xchg pop add inc add cmp jno add adc lods (bad) and dec add in push add jne cmpsb adc dec nop lods dec je jo add lods inc push pop cltd pop dec loopne pop add xchg icebp mov add mov rcrb std or test and pusha out xor xor int movsb sbb jecxz push sbb adc add add add jo pop push (bad) xor add int3 mov shrb or rol popa mov roll dec bound pop push popa dec jb add in call aaa push adc adcl jo dec xchg add mulb pop daa dec and sbb pop add mov out mov cltd ror xchg and xchg and outsl int3 cmp bound mov add inc pop cs push add mov movb xor xor mov and ror fadds jecxz adc add (bad) add cmp pusha add lock push int3 xchg cli mov pop jne dec jmp add iret cli stc in add scas xchg call add lcall add (bad) adc arpl inc adc jns push imul push mov std jns insl sbb arpl jmp mov fstps sbb inc psubw mov mov mov daa mov sbb sbb leave xor sbb ret imul loopne in cmp fcmovbe aaa mov jl call dec sbb push test stos addb adc add mov jo,pt iret shl out hlt enter inc or lock and aas (bad) inc jne lea mov adcb jg fmuls imul das sbb fstsw cmp test and add cmp adc mov shrb clc pop ja add sub dec pop fldt adc dec jge add and xchg cs sbb cmpsb ljmp mov and xchg xchg call aad sbb clc xlat mov jl inc dec jecxz jle mov roll bound sbb adc inc dec jl lahf push add and cld test add dec mov add movsl movb pop jge and add jbe add stos imul std xor dec push testb rcrb push add cmpsb enter adc add pop dec add mov add pop aam pop lcall scas jle jno adc popf jns or sbb data16 outsb and sbb cmp inc push inc mov adc ds jge mov inc mov sub push fidivrl subl push stc jecxz mov sub call xchg add loopne xor or and mov rorl lahf mov pop ljmp popa call sarb inc call addr16 adc les (bad) clc fnop or ja sbb outsb mov mov jl mov gs movzwl add cmp or cmpl pop add das loopne inc xor (bad) add in nop xchg (bad) ja add lea out lret push jecxz clc mov sbb jmp hlt popl sub add pop test fs test lods call mov push hlt push mov jmp into or jle add icebp add sbb ret sbb add cmpb adc or mov pop inc add mov mov and push addb or jns loope xor add mov cwtl push add add add fmuls xchg adc mov add popl sub adc push sbb pusha mov inc xchg aaa in lcall mov push decl push hlt cwtl daa lcall push es test jo (bad) mov sub xor pop add adc iret add push cmp movsl pusha mov enter js xor push fsts ret add adc add fcoml push xchg sub sbb add shrl sub sub cmp add les add dec add in fmuls scas fsub faddl fucom shl jecxz fisubr in pop jmp lods adc push or test aad pop xor aam mov jae jns ljmp adc add pop scas dec ljmp xchg (bad) stos (bad) dec dec sbb aaa sbb push add iret aam ljmp in lock daa xchg jmp adc xchg andl insl add push outsl fmul xchg rolb in add call and int cmp call insb inc stc add push (bad) loopne jno add out mov jo mov (bad) add add repnz ljmp pop add loop scas nopl icebp call mov jnp pop pcmpeqd add cmc es arpl mov add mov nop inc pop (bad) jl sbbb insl jo adc imul push add adc jmp push insb imul scas sarb xchg ljmp ret in push stos fmull dec cmp push jb adc mov xchg orb cwtl ljmp mov add cmpsl popf pop push add add sbb pop or pop pop push sbb aaa push push out add jmp daa inc add test xor mov popf in add jno movsb jne adc add (bad) shlb mov mov add loopne ss dec push add pop pop xchg lcall ja ljmp sbbl in iret (bad) or add cmc push icebp int in testl data16 pop add cs jmp out (bad) fisubl push push mov lahf dec fcmovnu pop add add std xor add pop movsl cmpsb outsb push mov lods pushf mov and loopne jmp ljmp add je jmp mulb dec add aaa cmp lock mov xor ret jmp dec mov test xor xchg jns,pt les (bad) jb add mov mov mov xchg sub push sbb add jo push in loope push pop push popa mov push mov jno xor ds pop std pop xor int pop lea mov xor lcall subl inc mov sbb add mov or add cmpb mov js add pop cltd push pusha pop xor jbe stc cmc pop mov adc fiadd mov add sbb cltd mov xchg aas mov jmp test andb fnstenv in adc add (bad) test jns jge xchg cwtl xchg test xchg xchg push pop dec dec lods push pop shr mul jl add xor pop test sbb jmp jae ror push mov ficom xor sbb jecxz pop add sbb or adc jge stos pop pushf push cwtl lret out jo outsb fs add popf adcb cmpsl pop jmp icebp lock mov sbb dec inc cmpl popa repnz sahf dec add cld cmp and cmp xor dec scas jmp out jmp jne int push test movsb in mov es (bad) ds popf addb add jmp test mov cmp cmp shrb add xchg fiadd mov mov gs imul add rclb pop sbb or cmpb push push iret flds pop test sahf lods incb lcall fadd lret loop movl sahf add movsl mov add daa insb jbe adc mov mov loop gs pop add fstl mov jl nop test fsubl add (bad) rcl clc xchg xor fwait pushf dec push test add jg loope add loop cld push arpl mov xchg aad pushf rcl inc rol les jae xor mov mov add mov adc out pop add adc ja repz rcrl loop add add mov inc add pusha psllw enter xchg mov into (bad) add mov stos or pusha sub pop mov call rcl aam pop aad fdivrs add jecxz mov ret dec add xchg xchg jne sti mov cli pusha stc or clc fs cld adc fnstcw jno add fadds popa xchg sub or out out mov leave add sub xchg or xchg daa imul or mov sbb jbe mov xchg add leave lret mov and mov add inc ja (bad) js dec add in ret or mov popa add lea add mov in out fldl adc jmp cmp cmpsl push mov mov incb pop lret or (bad) cmp dec inc lods test jmp stos mov and add dec jnp jge add cmp add pop je pushf addb sbb inc inc add mov cmp mov adc pop add mov lods out ja and push mov mov add mov jnp add mov xor mov adc mov test adc loopne (bad) sbb xor jbe jp jae sub or cwtl xor sbb push add jle popf mov xor fsubp lcall pop add cmpsl call ret rolb lea loop add andb cmp fwait add mov rorb daa or xor (bad) mov jns add addr16 add mov cmovs push jbe mov add fldt jl mov sbb (bad) div test xchg int mov add add dec xchg add mov arpl pusha imul insb sub in sbb push call repnz sbb pushf cltd add mov xor stos in cmc jne push mov adc ficom lods add jge add call push stos cmp stos pushf into cmp push push push mov xchg cmp cmpsb lods jo add xor inc push mov push aaa clc lock call lcall jo add lods or xor xchg icebp in ljmp out sub adcl cwtl out add mov ret jno fmuls roll stos xor mov sbb mov cmp movb add ljmp ret add dec gs or add xchg mov movsb add mov xchg adc pop loopne out push push (bad) or cwtl add pop ja sbb fildl scas lods scas inc dec dec jne add movsl movl ror orb add xchg mov xchg loopne pop mov lcall hlt out out xchg jmp mov mov push add movsb adc or add in (bad) push sub inc inc sbb inc pushf inc add addl out subb add push jo cmp pop pop sbb daa xor inc dec xchg cs xchg xor add inc inc jne fimul (bad) testb jecxz dec test lods test (bad) sbb loopne lahf adc push cmp dec add call jbe in sub fdiv push pop sbb outsb jno vpmulhuw add cmp repnz add stos stos or add or xchg lea dec insl dec or mov je and lret int3 sbbb pop add pop jg jns push iret (bad) out gs fdivrs pushf test js mov push mov push outsb mov (bad) mov lock add in roll imul pop jmp inc rol and idivb inc loopw and call jo dec add or dec add push int3 in les cmpsb add aam inc xchg call ds jp lcall out lods roll fildll das sub push jmp repnz mov js fsubp insl add enter sbb push fadds sub (bad) cmc outsl aad xor push lahf repz dec daa sbb sub xchg jmp out lock cs or adcl out push add call clc jmp pop das inc dec push mov test scas enter add jge cmpsb add pop add sub (bad) lods sbb fiaddl shll (bad) dec xor pop push cmp gs into mov push add push aas xor and mov xchg add and pushf mov call rcl test lods adc pop aas cmpsl ljmp mov lea and leave mov or add cmpsb sbb (bad) enter push clc push add sbb sub ss lcall cltd lods mov data16 jmp sub push aaa movsl ficoml and mov (bad) push test jb pop add pushf test mov ljmp flds xchg adc mov mov mov add adc (bad) or adc jo pushf push inc sbb sub add ret popa cwtl outsb sub or cwtl jb imul ret pop addb rcr xor and jne add push (bad) sbb xchg and ja jb sub cmp add (bad) out (bad) je cs push add dec rcrl add add cmpb adc xchg (bad) and sub addb aam jb cmc mov lret cli mov add fwait daa push rclb xor xor std mov mul mov sub mov or std rolb sahf jmp add dec mov adc hlt add jno imul aam inc and inc addl (bad) out add call and add out mov add inc repz sbb psubsb pop out pop idivl or xchg cmp out jl jle add outsl cmpl and cmpsl sarl sbb mov or pop push push add fcoml cmp push add xchg lock jne add xchg xchg sub addl push idivl adcl ss xor xchg add fs out push mov fdiv jmp mov sub adc repz add or call out movb mov add hlt add sbb add (bad) jge pop lret xchg call daa clc and add push mov add pop arpl pushl aad add inc sbb cmp (bad) sub cld xorl hlt push clc fcoml int add lods pop out int3 (bad) repnz push rcll and inc arpl jbe lcall fiadd insb add xchg stc xor fcmovnu or call jge dec aam sub adc jne adc in jo xchg add mov sbb arpl and inc sbb adc call cmp add push push out mov and pop sub add and mov jmp orb xchg adc cld rorb dec outsl xchg push mov mov daa add xor lds jbe push xchg add insl sub aad inc add and (bad) xor and add aaa push sub sbb ja jecxz cmpsb outsl into adc push jecxz mov ds add xchg adc add (bad) cmpsb (bad) or push movl fcomps ret push add or repz out cli jno add jne dec jle les add cli test (bad) and subb xor repz int cmpxchg add adc push or and ds fadds fidivl add pop cli mov adc (bad) jmp out mov and mov mov imul (bad) mull adc sbb push cmp ljmp mov sub mov aaa test lods imul push cmp cmc or clc sbb in or ret dec stos fiaddl nop pop test rcrb scas add bound dec mov xchg mov inc movsl or push sahf nop mov xor add xchg sub add cmc popf das (bad) add add mov pop dec rcl cmp add subl jmp jo cld sbb test mov aaa xchg push adc push sbb iret add mov dec test outsl inc adc cmpsl aaa xchg fistl outsb test inc sbb mov aad jmp cwtl sub in add cld (bad) imul pop data16 jns pop or and jmp or cmc inc sub push add push js fwait dec out mov adc daa in add and push cmp insb mov ljmp out cmpb add fnstsw add (bad) mov push mov pop shrb jbe fisubl sbb mov dec add xor add and xor add xor cmp inc add dec insb cli xchg in push idivl (bad) mov push jge add scas mov fiadd test lock fwait jp,pn outsb or cmpsl cmpb xor icebp sbb mov frstor sbb loopne clc xor es cwtl movsl lock out inc movsb push in pusha or clc xchg (bad) stc adc pop mov xchg add test adc sbb mov push add adc cmp scas mov shlb ljmp xchg or std adc test mov sti repz shrl cmp inc or add in add add xchg sbb cmpsb cld repz (bad) inc add mov push ja xchg add mov cmp movsl jbe push (bad) repnz mulb dec and ret incb inc push mov movsb and lock dec or scas pop jno add mov jmp movsb test lods (bad) cli push pop or push xor lea dec aas add push sub out xor pushf fwait push xor mov add test add add xor mov add jp clc (bad) aas nop mov in je and pusha push push add shlb movsb jle and or jmp scas xchg stos test cs mov push popa add cmp pop in cmp or sbb or push mov fnstsw add mov jbe adc inc add jg dec dec data16 pop add hlt ret add jne sbb xchg gs iret push push rorb movhps and xor jl and add mov add pop jge fs movsb cmp cmp jbe gs push mov add jne dec inc dec add xchg arpl add fadds or lcall xchg sbb cmp aaa nop movsb add enter sub test and loope lret add nop mov mov or mov aaa addr16 add jl cltd cmc mov add jmp add xchg fstl rolb pop cmp out and ror jmp ret add scas cmpsb xchg dec lods leave adc fs mov das mov push idiv andb inc add jns outsb mov dec cmp andb cmpsb xor movsb push jae mov adcl mov pop rclb push fiaddl sar loopne sbb dec adc testl xor ljmp inc add or rolb pop aas inc in and loopne rcrb add adc sub inc dec pop add mov add loope pop pop and cmp subb hlt add add pusha jle repnz nop insb mov enter fisubr std arpl push sub xor adc push mov popf aaa dec push lock je and xor js nop icebp add adc push test inc jg mov addb lds xchg js icebp cwtl imul push ja loope arpl cld or and mov adc inc insb add cpuid dec ds dec ds push mov fnstcw sbb add fwait outsl xor push jbe add pop mov push movsb rcrl adc aas inc add outsb arpl and sbb dec inc lock insl add adcb lret mov roll push data16 sub sbb fmul mov incb xchg andb mov inc mov in lds les sbb int loopne xlat cmp dec inc and mov andl cmp sbb push push out (bad) add (bad) (bad) mov xor sbb dec dec negl sbb das inc push cltd sar pop mov mov push scas or or add inc xchg jns loopne adc cmp inc push inc dec in or jmp es fldcw add pop les lahf mov cmp sbbb call add mov add (bad) in adc (bad) (bad) cli popf pusha icebp mov add and push cmp mov mov mov nop aas aaa ret sti sub or jnp push sti mov (bad) bound addb inc jp sub xor rcll popf incl call es adc push add mov inc add test xchg pushf je push dec push cmc pop mov or add sbb int3 mov hlt ret jg clc in or pop adc mov out int lock mov or and add sbb jmp leave mov or incb cmp jne test add bound aad lods jae jo flds push add sbb pop testb add xor pop add ljmp fs mov and neg sbb rorb roll cmp pop mov ds add (bad) rolb mov lret add das xor sbb add jg or movsb pop mov lss hlt xchg add adc rol sbb cs fstl mov les fistp mov repnz jb (bad) pop and mov xor sub andps inc mov cmp add jb or out or inc add push loop add mov rcrb xchg in add rcrb push repnz and add fildll xor add cwtl test pushf push cwtl fdivs fmulp add add mov loop sbb inc das adc add mov inc add faddl repz (bad) ffree push loopne or adc aas rorb cltd xor jmp add and inc mov add imul add inc andl mov scas xchg mov ja fsubr add int add jae incl and inc aad dec out clc lea mov or or add cli xor sbb (bad) sub imul inc dec sbb add or rclb clc lahf sbb and mov mov outsb add jl push cmp js xor add enterw in add aad add cmp outsb cmp mov add insl push (bad) cli push arpl add add and xor or and or inc xor cmp push mov adc jp pop in dec adc add fldl mov pop and mov rcrl jne daa add sub je (bad) pop add dec xor cli mov or add aas jmp insb add sbb stos mov add arpl or mov cmp mov and inc xor add or ret pop adc daa xchg push push xchg test les das and js adc (bad) fcoms test xchg push add or popa xchg add or cmp adc add adc mov in cmpl mov jecxz cvtps2pi push loopne xchg test jmp test jge inc add push or ds jb jbe sub inc movsl lock mov add dec pop push movsb dec inc int3 cmc add aam add jl jno pusha push stos push and adc mov fidivrl data16 mov mov pop mov pop fs adc cmp xchg jg cmpl pop mov and xor pop adc sbb jno add (bad) push push cmp mov add cltd addl lock push or and fadds fsubrl pop push or xor movsl ss pop cmp jnp jo dec xor pop push ds mov sub bnd or push jb (bad) aaa rolb imul pop inc outsb push add pop xchg push cwtl out imul xor shr dec lock push inc inc mov mov insl cwtl jo and push jo lods dec xor mov out pushf loopne adc sub sub xchg dec push xor std dec int dec add fisubr add shrb cmp in test dec inc xchg mov or rorb xlat loop jb jo stos pop sub adc mov mov push lea pause adc loopne jp je iret or add repnz test cmp mov and ret mov and in pop add mov inc add xor dec dec or or dec push xor popa inc pop add xor cmp xor mov aam pop sbb cld inc add xchg imul adc mov sub adc test dec or add adc pop add ljmp add jmp js nop jp lods push arpl cwtl pop sub rclb addl mov (bad) adc cltd cmp xchg adc push orl push add aam jg pop loop cmp sub jne inc insb bswap fs pushf xchg nop int3 fisub xor lret push xchg and jns pop es ret inc dec inc inc lock add push sub cmp in sbb push sub aam mov add jno pslld add in das xchg icebp xchg sarl lcall out bound fnstenv ret sahf imul outsl jne imul inc insb cmp roll jo aas aas lods add sbb clc out add test rol add push jb popa outsb jae cmp addr16 inc add jne outsl mov fxch adc stos xchg push mov mov enter in push push add sti mov jo outsl mov je mov js mov adc nop sub jle cmp call cmp cltd push push jbe add add pop inc popa je sarb inc sbb clc mov movsb xchg mov dec addb outsb add sbb std imul rorb or nop jo xchg imul je cmpsl adc test mov jmp mov push pop xor dec js and xor jo dec and add jmp (bad) adc incl push jmp ret mov add mov mov addr16 add das dec int3 mov xchg and (bad) hlt adc or and movl adc je and add lcall and sub in mov pop sub jg xor adc add add pop (bad) push mov shll ljmp mov push push jne lret add xor add in and sub or add stc test sbb or loop xchg push mov ret adc cmpsl add dec pop test pop cmpsb test stos or subb mov mov mov add and ret movb and add xchg push dec inc rorw jmp xchg add hlt mov cmp mov mov lcall pop jl pop ljmp hlt sub loop or fiadd mov pop pop pop jp push pop int fadds push mov sub lods dec ret push decb loop (bad) (bad) je fwait push add cld jmp dec pop test adc test addl mov clc pushf adc sbb (bad) add push push sub and inc add insb dec adc push sbb cwtl adc enter push mov add and cmp fsqrt lock ss push pop es addr16 lret xchg push lods insb sarb notb jle sbb jne jb jns pop xchg and outsb adc xchg dec les add cmp or push sarb sub movsb sahf adc lea leave mov jle pop faddl push in mov jb add or ret jg into add push call enter out add or pop sbb movsb mov jne push add or push pop subl jo xchg and fstl add out dec clc cltd add sub xchg inc sbb sub add (bad) xor insl and pop sbb fs xchg sub or test push add nop cmp cmp in sub in add pop add add mov push dec pop lcall pop mov jmp test push sub mov inc bound das mov push dec xor js pusha hlt fs sub test inc pusha add pop pop pop or (bad) testl and sub fidivrl cmp jo cmp lcall add add add adc dec mov lret nop mov out add pcmpeqw jle jns sbb jb push mov pop nop cmp add data16 jae mov mov or stc call dec mov push sbb out xchg ljmp inc mov cs or adc mov mov jmp mov inc sbb sub and inc aas push add adc outsl roll add add xor add pandn add call (bad) push add jmp and add jmp sub verw jb (bad) cli or adc pop out (bad) mov rcrb jb incb call inc test or pop js lea push inc inc xor add xor sbb repz push or out add adc push cwtl lods adc loope pop mov ljmp dec sbb arpl add push mov cmp add mov adc push pop add xchg xchg (bad) mov jns sub addl xor ljmp add nop outsb pop cli sbb jnp iret adc lock add or cmp jecxz rclb add lea push popf push sbb push xchg in mov loop push cmpsl js lahf add cmp sbb add inc daa xor push add scas fsubl notb add jne mov popa jb cmp lret les (bad) je push jo mov out std add aad adc adc roll je cmc add xchg dec sbb sub adc notl ljmp repz xor aam jp jo rcrb push push or stc and dec and or call test (bad) pusha fisttpl ficom add scas leave aas and popa loopne jnp lods gs lea arpl lgs or xor jle xor (bad) cmp xchg jle and jo movsb adc add xor (bad) in pop jno add in adc add inc je mov loopne pop push lock adc stos cmpsl daa jne add xor add dec or addl mov add and push or jo or in xchg push cld mov mov dec xchg inc in jae arpl add mov cmpl pop and mov adc notl jns les mov jge add or test (bad) sub jb rorb lods pop fsubrl cmp push push cwtl in pop gs loope jo mov sub ss movaps lock add fsubrs movsl xor pushf jae add nop dec les ficom hlt daa jbe add test xchg in movsl jns rorb and jmp mov sbb popa xlat add xor test add rcrl in xchg js repz add add mov add mov enter xchg sbb repnz pop sbb lock lahf mov pop pushf out adc push cmp and add mov jmp clc hlt js push inc (bad) nop inc (bad) push add cld pusha (bad) bnd pop xor push inc xchg test test jg add aas shlb add lahf aad fsubrl or stos mov or testb mov ljmp xor fisub xor mov sub jg add (bad) add jb test cmp add add fwait push (bad) ret cmc add insb ss xor adc add inc push (bad) (bad) fnop jnp fdivrl push addb dec test (bad) cmpsl aam sub jg add movsb fs sbb lahf xchg jg add das jne call mov sbb loop push popa aas ret or jne pop pop pop add add and ljmp jae pop add adc pop mov pop and nop and and rolb add or lfs cmc repnz pusha or sbb enter adc adc or inc pop sub xchg rolb adc add sbb mov shlb add mov inc or add pop ret repnz push je mov int mov cmp hlt inc divb cli jne push or jae mov adc push pop mov add pop add fs xchg inc inc iret fcmove popf inc testb jne mov orb add mov push call pushl mov add int psadbw test add and mov cwtl aaa cmp movsb cmpb lahf and (bad) pop sbbl and cld mov stos mov adc cltd cmp mov cmp add pop or ffree mov clc clc add dec cld lret inc in add cmp add ret push je test pop dec xor pop xchg sub es int3 cmp hlt pop test out iret inc incl cmpsl jge xchg jecxz ret fcomip int3 stos adc jmp pop rolb pop add sub add add xlat or cmp mov lock mov dec lahf sahf icebp or sub sub push daa push push cmc ds add in fs mov add movsb jge cmp xchg icebp jne or ss mov add inc xor add (bad) pushf jp cmp adc pop and cwtl inc cmp jbe call inc addr16 xor je or or jo cmp test fsubp and mov add es enter or cmp mov sbb mov lock push adc add les sbb in addr16 dec inc sbb stos leave xor jle sub sub dec aad fidiv scas cmp and jp add scas pop add or mov sub popf fistpll adc add add pop icebp add add into or cmp andl cmc jp inc mov pushl sbb jl pop pop xor add rolb ja ljmp sub mov add call fdivrs xchg loope jmp push inc mov aas add (bad) and push cmp add jne add push mov jle or add xchg add jmp xor call aam push and sbb mov add dec jg jg setne cmp xor pop out jl nop jns mov test add jmp ret cld add push pusha mov adc add cmp sti mov repnz dec mov add cmp add mov insb add add dec pop mov outsl popf sbb das sub and mov cli add or xor clc dec and push out adc in or or jne add das adc adc int3 daa or clc dec jg add out mov add push and fildll and movsl pop pop adc xchg test daa pop inc adc loopne ljmp jo rcrl add les cmp push add mov xor ja add adc pop jmp add shll out sub sbb or scas add pop push (bad) and rclb aam add loopne push push add fwait jno cmp aas repz add jecxz bound jp nop add mov imul sub add test lahf add lock outsl mov pop sub xchg sub aaa and clc push (bad) pusha (bad) fwait jge or movd loopne pop in sub popf imul push ss add inc cmp call loopne bound ljmp add jp (bad) adc and aam insl sub inc shl pop xchg sbb int3 xlat mov test enter outsl mov les inc shlb adc mov mov stos sbb push fimul or ljmp movsb mov mov mov cli cmc add and adc xchg jge add imul and enter push add pusha push insb push subb and ja dec mov sub add and daa xor test cmpsl sbb and xchg pop xor insb add push dec add jnp cmp pop (bad) jg fs mov sub loop push hlt push xchg xor and lock insb sti push or cmp adc jne ljmp std and or daa ds fadds clc fidivl xor mov verw push cmpsl jmp cmpsb lods cmp add inc mov bndstx cmp mov or mov cmp dec (bad) jnp bnd pop lds pop sbb out xor in fsub je or sbb imul inc test add push dec sub jp add xor add and sahf add xchg mov jle sbb loop add mov repz addb inc mov fdivl sub sbbb adc cmp das testl ss test add or std cmp add test jbe mov add lds addb jl ljmp jne incb inc hlt jge add je add aas sbb loopne addb rol jmp add movzbl sub jne add xor dec mov cmpsl out sti jno add mov inc incb lret mov add and outsb pop xlat inc in pushf dec sbb sbb lds aaa mov daa es cwtl sahf jne mov jns popw andb cmp in add imul or push pop mov das add push cmp jae lret decl pop cmpsb sbb inc adc (bad) push negb push shlb or clc xchg (bad) cmpb mov mov jle add test rolb push push aad sbb outsb pop dec mov add and aad sub mov add or sbb idivl daa jle aad mov les jnp cmp mov mov cmpl outsb popl lret lea adcb loop add or cli push pusha lahf and (bad) pusha add cmp and js lock loopne imul std and adc (bad) xlat push jne mov movsb or sbb sub call jns add mov pop and rol and and into push sahf push push and cmp enter call mov faddp das inc mov jne sbb or inc (bad) cmp add and dec aaa or adc fnop imul pop or pop pushl cmp cmp sbb pushf aad movsb roll out and lea mov iret and push add jp fist leave ja xor mov call add push xchg fs lds and lahf or push in add addr16 (bad) movsb scas pusha aas push les jbe ret int3 adc ja mov (bad) jae add out pop mov lock es and scas sub ja mov mov push mov pop call int3 jg daa pop sarl sbb mov or je add mov sub xchg stos add xchg (bad) in sub adc mov sahf imul mov sub xor pop (bad) daa pop std hlt jmp pop aas test mov cmp popf adc inc cmp pop movsb aas mov or dec hlt push jl movsl push (bad) jmp shlb das cwtl xor mov data16 mov popl pop sub jle mov mov sub sbb inc mov add je sbb xchg jg or sar popf fistp mov xlat add outsl je add sub or mov inc push dec dec and add cs imul xchg mov adc scas mov lock fistl sahf rclb adc fadd xchg xchg nop sarb add sbb mul inc inc xchg mov outsb add aad sub repz cmp pop add frstor iret cmp add pop ret into mov jl stos cmp push add add aad mov push sbb mov ficom adcb add dec and dec xchg cmp faddl (bad) lock adc scas and pop and push and dec add push xchg cld jg sub mov mov std dec xor int ds jge cltd xchg dec add mov push mov xchg lock cmp add add or mov or adc out ja dec cli iret sbb dec pusha or hlt lods add push mov cmp hlt add push inc inc push jb cltd fadd push dec inc test add xchg xchg adcb mov jne sub lods je add mov jmp stc add lahf push js rcl popa imul push and cmp sub cmp and pop xchg pcmpgtd outsl sub inc jne mov cmp cmc rcrb imul jae and add push out and adc add fdivs cmovo es mov xchg cmp ja pusha add in hlt add sbb dec loop,pn loop add enter call cmpb or xchg rcr sub psadbw das mov jmp add data16 or add sti cmp roll mov add call dec pop divb mov mov add outsl xorl pop and test lods dec imul mov adc jno add push jb and lock mov add jne imulb xlat push fidiv lods pop or (bad) (bad) cs inc test pop cmpl or and cmpb cmp stos movsb pushw push lea test cmpl add mov sub mov sbb in jp push popf add mov lds lea nop xorb shrb movsb aaa mov pop jecxz push mov jo or mov lea das mov add dec call sub mov int3 enter add cmp jle das xor jns xchg nop mov rcrb pusha push sub addb or adc and add dec insb cmpsl add sub in mov cmp lods pop popa sti mov mov inc xlat sti mov imul aas pusha jne mov and and incl adc dec inc cmp add mov add mov or int3 (bad) fildl cmovs addl add int3 add push add and adc aam stc ljmp or shl adc lahf into cs mov sub pop push scas or inc inc dec sub lock imul jo cmc dec add xchg call inc (bad) ja sti push add aad ret fnstcw or ja add adc jo (bad) call mov addb and inc cmc (bad) push jo add movsb stos mov mov inc cmp pop jl add insl out repz adc and add or sub (bad) push add pop mov loopne pusha push inc outsb and push add jb inc pusha push add insb sub dec inc push cmp mov enter push mov inc add ret jg imul sub add sbbl (bad) fsts sbb sbb sbb add and add int3 add dec movsb fs popa jmp cld fcoml push loopne pushf add add (bad) test mov in add out mov clc mov push out call xchg stos pop pop insb inc push std or add jne imul nop pop repnz jmp or arpl adc sbb nop adc rorb add fcmovu adc and inc cwtl jmp add xor add stos bound or add mov add sbb push add fwait sahf dec insl fistpl add sbb fild pcmpeqb outsb push add in sbbb adc dec mov mov adc add jne and js add cmpsb mov push sub push or add insl jno imul add mov pop xchg sbb or mov add sub test xchg add loopne jo xor pop mov or aam das or and cmp icebp pop mov pop (bad) ss or mov dec int3 jmp mov xchg cld add loopne test xchg in adc clc les mov xchg mov xchg call add fisttpll and inc add test inc push push aaa adc shlb aas cs jmp enter adc nop jge sbb loope fsubl imul and xor push out adc push mov adc jbe dec out push sbb xchg xor add dec popa sbb test inc aaa sbbl sbb sbb xor clc mov mov and mov mov test sbb or rorb insl mov add rcl pop fild mov stos js (bad) loop mov ja add add add cmpsl xor add fistpl mov inc cmpsb xlat xchg xor clc add mov xchg xor add fs push xchg lods jmp decb stc fisub dec inc arpl inc cld ja push cmpsl push inc leave fldl pop and aas decb std or test add sub repnz push hlt aad sub push jmp insl adc dec movsb stos cld xor add mull cwtl in dec rolb mov notl or loop xor add lret xor push test cmp cmp mov cmp xchg xchg pop adc mov insl inc sub push inc pop jmp push jns add out add imul fimul push cmp add jl andl inc add pushf sarb jmp dec sub xchg cmc ret add hlt mov add out xor mov pop ds lock adcb and add push dec in add and push imul adc push in imul sub cmp xchg inc data16 daa das mov push repz js add push in pop adc movd xor cmp cmpsl sub add sub adc add je addr16 cmp bound add sub add xchg test jo outsb add push gs inc pop jne imul add push mov call and cwtl lods dec cmpsl sbb mov jmp jmp push mov mov ljmp push push jbe pop fidivr or fs jno ja jae jbe jne add jo fwait js adc fsubrs loopne imul adc sub sub lahf enter and das subl add call movsl jle mov mov sub leave pop dec stc popa rolb addb push add add fcomps xchg aas dec sbb daa push pop push and add or xor jnp or adc mov call js (bad) adc add fstp das push rolb or mov push lahf rclb je dec add cmpsb cmp inc or jne (bad) loopne inc or out daa clc fdivrl lret das adc nop pusha mov add inc add enter pop push sub sub call jae add mov pop mov movsl add jb jbe push jo roll adc insb jo sbb add mov dec add enter or sub add nop mov aad jmp or je add (bad) ja pop mov jo pop and xchg or (bad) int3 adc faddl sbb sbb pushf (bad) push add neg pop and and push jne sbbl test enter inc push test and sbb and outsb insl ret cld add mov lock adc adc xor ret (bad) mov xchg test repnz mov add fsubs leave sub dec lea shrb (bad) xor ret mov adc add pop add js repnz out jo add repz mov and adcl clc add jb dec (bad) stos push loopne push je jo fdivrl adc das xlat inc fs jl gs nop xchg jecxz jne add hlt test dec mov dec ret cmp inc mov nop sub mov push roll fstps fsubl add inc arpl mov push cmp cmpb or ror push jnp push dec add in cmc pop dec in (bad) adc dec addr16 mov (bad) lcall push xchg adc add lock or addb cmp push xchg lds out pop xor dec mov mov out pop push push std sbb sub inc fild js push mov outsl sbb add jp movb sbb daa adc jb sub ja jno fcmovnu jno enter pop mov xor lahf dec std pop jecxz in sub inc into mov ror add push xor cmovge add cwtl mov cmc sub push dec push stc movb inc xchg scas test mov add rcll idiv pop test cs xchg fisttpll push push lret jge clc inc add and jb adc adcb xchg jne cmpsl mov jg data16 (bad) jns hlt push in push hlt sbb adc or es lds das arpl or scas sbb aas pop push (bad) cmc push add adc scas (bad) jg adc addps (bad) imulb push test mov mov dec add addr16 dec add push or pop mov testb xor jl out sub pop popa cmc mov pop add cmp bswap push into mov xchg add inc add or cld sub mov and sub push add je mov mov push cmp inc mov cmp push mov add add stc ret pop adc xchg call add mov pop stos add ret dec cmp pop fcomps and fild popa sahf xchg ja xchg pop pop cmp mov cs test mov insb mov hlt movsl mov sbb mov jge mov pusha xchg add sarl cli push add pop ja or imul push movsb repz loopne dec lock adcb aad jl or add jg jmp push mov dec repz add jnp xor push (bad) std push movsb jno and leave cmpsl pushf pusha inc add lret jns sbb clc pop ljmp mov (bad) ds push add scas iret rolb and mov mov lahf jl add lock addl shrl push rcrl rolb mov sar rclb enter hlt mov fdivrs jmp jns lret xchg jne inc add add (bad) push push sti cwtl mov add pop pop xor jae pop jecxz (bad) mov movl pusha mov out test and and clc dec add cmp cs add dec add mov cmpsb fdivrl sub inc movsl pop aad insb mov lods (bad) xor cmp out popw decb and add sbb jb jno pop daa pop fldl arpl lahf push rolb jb shrl cmp adcb shr push add aaa pop mov add pop xor add movsb xor sbb inc xor and cli loopne mov cmpsl cmp push gs add sbb dec daa ret cmp (bad) mov fiadd ret mov jmp sub add lods insb sub lret push and int aas jge psubb pop or jb dec pop out cmpsl adc add lock jecxz call jl jns sbb in jo inc and pop rorb cmp and jg xchg add nop rcl cmpsl add or fisub push mov add js add daa jge sub test cltd cmp add nop add push add rcll add addr16 mov movsb or add and popa pop mov xchg clc test ja mov (bad) jnp sub or add xor pop jmp rolb movb add add or pop and push push sub xchg mov (bad) cmpsl mov pop and add outsl dec orb adc scas sub cli aam repz mov mov add (bad) push add pop jge add jp xchg mov and dec add jns add cld cmc imul fdivl std dec leave rolb movb inc in sbb aas pop test (bad) shrl or mov incb lds cmp rcrb ljmp add addl shlb out pop inc inc add xor add add cmp and jbe (bad) addb leave rolb and dec mov mov add fsubr sbb cld xchg dec mov add pop and int inc sbb into enter out xor adc xchg paddd or push add sbb jbe inc add shr enter mov into (bad) int3 push or ja jno js jge mov sub xor adc add iret les imul test add in in jmp mov jge cmpsb sbb cmp incb inc fcompl mov cmp xchg adc pop notb adc jge cmp dec mov loopne int3 (bad) aam notb sbb cmp (bad) sub cmp inc or mov jg sarb jecxz push stos pusha mov lret test mov fstpl add adcl add or outsl push rorb inc (bad) fstpl mov dec mov test mov and xor (bad) repnz xchg dec (bad) aaa mov pop push or pop add cmp or sbb ret add jmp sub add xlat cmpb jne add adc je,pn popf add jb and or jmp call push loop in push mov aam mov jne pop add cmpsb fistpll or clc leave or adc adc cwtl add xor mov add cltd jle sbb or les xor push daa pop inc int imul pop dec cld je cltd ds mov xchg add nop xor fsubs test jmp dec jne (bad) and add lahf out inc add cld mov movsl add cmpsl jnp or mov sub pop aaa add int xor sbb mov push mov push cs add sub lahf aam bound jne push xchg cmp sub cmp jno mov xlat adcl pop xchg adc mov and and aas jle and jmp dec dec stos add je or leave sbb add jmp lods cmp pop hlt cmp cmc push mov dec call mov mov inc arpl xor shlb add or dec adcl add lods ret jne mov out xchg push cmp je dec or lock repnz leave mov inc inc ret push scas out add iret mov das mov mov pusha idivb xchg cmp pusha mov jl in push dec adc inc add adc mov lcall jnp fistpll or add adc loopnew (bad) cmp inc inc push cltd shlb mov add cmp sbb push das es jnp test insl cmp add inc inc adc and jne lock push mov lahf sbb in cmc jae pop ret rolb or push adc out push sbb (bad) stos je aas dec and (bad) jae and sbb popl adc scas pmaddwd loopne test sti sub lods push lods adc or pop add call lret xchg test add jp jo mov push popa jns sbb (bad) jo fwait jne pusha inc cmp mov add dec cmp adc (bad) add fcompl or push mov xor pop add sbb add sbb lret add cmpl ss cmp add cmp mov xchg mov fdivl sub mov adc mov lret sti and inc add add push push xlat adc add jecxz cmp add loope push sahf insl xchg add lods adc mov push push notl or imul or adc jecxz into push mov add cmp cmc add sub mov sub add sbb cmp add or arpl sub ds push sahf push loop mov addl mov xchg pushf roll (bad) int movsl lret fldl scas lahf hlt test pop mov xlat mov leave mov xchg or in lea outsb repnz (bad) pusha clc test les das stos cmp jecxz xor adcb sub add je add fdiv inc add cmp add test bound push mov fisttpl or xor mov push jae pusha mov mov in dec daa sbb test add imull push add jnp cmpsb pushf dec nop add push rol enter add mov cmp jl cmp pop inc sbb add adc dec ret pop pop pusha xchg dec adc mov jnp mov cmp mov loopne lds (bad) mov push mov cld cmp xchg call xor loopne or mov pop xchg incl sub mov sub lds mov js loope,pt cmp scas fcompl push daa push fs sbb xor jp into insb cld stos rcr jp sti std add mov out add jns insl clc mov and ss push dec xchg jp pop cmpsl sahf aad mov fs add adc out imul jge jmp test (bad) adc push dec (bad) adc hlt sti mov jg test push add and add inc sub push push jnp push lods jge mov adc rcrb sub clc cmp iret push lods fldenv mov jne jle sbb push sbb dec adc pushl add xchg adc pusha in or lods adc minps (bad) and add ss sbb cmp call lea and cmpsb sbb movsl cwtl add add es jmp (bad) test gs mov mov sbb adc imul push (bad) fdivs and xor add cmp add je cli int3 lea add dec lds pop or add sahf mov add test cmp add cbtw mov adc add (bad) repz enter pop mov popl clc lret pop mov inc jmp mov add add fnstcw in stc test popa add sbb daa fsubrs cmp lods mov stos sub stos repz sbb test dec sahf (bad) (bad) adc inc push clc push add pusha sub xlat loopne add xor dec xor add xor mov out cwtl adc cmpl stc imul lret lcall xor jmp mov add push mov xor sub adc inc dec cld lods or test dec adc push push sbb or (bad) add rorb add add aaa jne pop push cmp push push out and subl nop cmp stc and mov mov push mov arpl xor dec leave add mov test add movsb mov add fnstsw dec sbb mov pushf add outsl les jno bound jl loopne sahf aam popf add fisub dec nop lods lea adc neg rcr or add jbe lods mov sub add lods add push gs shrb add cmp or adc imul imul push int dec fstps insb je inc push xchg jnp push or pop inc or mov pop in sub add jmp pop mov les mov sub inc add mov cmp add rol add inc dec add lock cmpl cmp stos xchg in cwtl xor adc jecxz add push test je cmpsb and jg or fbstp frstor icebp mov pop (bad) shrb or call inc dec and cmc into jae ds scas add dec xchg insb push out add cmc sbb ds sub cmpsl xlat xor add cmp lock dec fiaddl jbe mov in in add push and or jmp aas imul sub add loop movsb jl (bad) pop daa add or clc add inc push fsubl adc pusha add sarb orb (bad) xor or add sbb aad pop mov add push add inc out movb jmp push cmpsl sub jmp mov cmpsb add inc (bad) cld mov push aas and out jb (bad) add add inc adc jle add hlt cli xchg ret mov decl xchg xor add jae gs lcall pop xchg lods xor cld icebp and je push (bad) ds (bad) out add sub stc inc jo lods jo add or add ret fcomps je add fist arpl pop jae mov or mov insl je add jo leave and lcall add inc and cs mov lods lea add pushf scas add sub into in stc (bad) pop pop push (bad) test and repz sbb lock add dec fdivs push inc faddl inc add enter in mov popf fisubr jle gs pop and push lea push test dec cmp mov sbbb add mov push cmp add add pop mov xor scas in bsf and pop stos mov add dec jo xor mov push mov sahf iret xor dec xchg das (bad) xchg fild movsl mov cmp loope cmpsl incb cwtl sbb push push jne xchg pop push (bad) shlb repnz sub cmpsb or cmp push or xor and push aam push lds cs inc push cmp xor xor add fs or pop add hlt test add aas xorb popa add pop and arpl push loopne mov jo push stc cs (bad) mov cwtl int3 adc mov add mov cmp data16 lock fidiv es std add mov fs push in mov cmpb mov pop mov in fcoml mov sbb pop in sbb add push lds xchg add fidivl cmp jo fild bound daa and clc in in push sbb pop incb stc xor icebp mov call add push pop or xor or jg or lcall mov lea add xlat mov cwtl add out xor mov push inc cmp add mov vzeroupper fs pusha add xchg adc mov push out es adc jp mov add add dec jne xor cmp ljmp xchg ret inc or in loopne mov cmp cmpb jp jae addr16 hlt jne mov sbb jge or add xchg xchg ret adcb movsl add dec cwtl hlt mov orb pusha clc add and mov or loopne or adc lret (bad) add xchg add mov icebp add sub das add adc pop sbb inc add loopne int jp int fmul or aaa xchg push add jo mov mov adc inc pusha lea or dec and imul xchg fs clc mov je sbb cmpsb add arpl (bad) jno inc add push adc push (bad) xlat outsb mov inc mov movsl daa push dec mov xchg or cmp ljmp mov and pop pop aaa sub push nop sahf int3 gs clc mov inc or je rcrb or xchg ret pop dec js add jmp lock leave sbb movsl sub bound inc into cmp mov inc push cmp and dec stc adc add push pushf fisttpl or add jnp xchg mov sbb jmp push xor inc das xor push addl (bad) call sub add add addb aad dec ret lock mov add popf sub notb inc adc jp movl xor fstps cmp adc call add inc xchg stos and pop add dec lcall rcrb cmp jle (bad) mov push xor jo dec es xlat add movsl rorb adc mov xchg add and jle push (bad) gs insb add add jg inc leave xor add mov (bad) dec mov add pop lea and je js ficom dec mov (bad) mov pop xlat (bad) je cld add ror pop hlt cmpsb add push in dec push dec cld (bad) or adc loopne (bad) shll bound sub mov push push push (bad) cmc outsb sbb add imul jmpw inc test bound add push neg mov ret pop and out and (bad) jo jnp dec cltd adc dec ja sbb push or out insb out add sub pusha push add jmp sbb mov inc fisttp or adc rolb subb cmpsl add xor test ror shrb insb fnsave call pop lods sub js sbb in rcr push mov aam or push jp insl pop xchg mov inc mov movsl adc inc jae xor jnp sub xor add inc scas xchg int3 sbb add ja sti dec and add movsl push jb add xor enter mov scas enter or adc add dec jo add push ds jge adc pop in or push mov or addl imul pop les (bad) mov add xor fwait mov mov inc rolb xor int3 pop or sbb or dec or imul stc sub insl inc in jbe (bad) mov in inc xorb (bad) add cltd inc test jl pop mov mov push ja pusha push mov cmp xorb lock lret add push push sub mov mov mov or out test adc add addr16 or sub lock imul pusha rolb outsb repnz icebp adc sbb (bad) pop cmp adcb mov sbb sub test xchg fadds and pop jo orb loopne add add or out dec add je push adc or cmp fidivr hlt (bad) lcall sub adc jns sbb xor leave add in adc jge push inc add xor cmp dec mov orl xor cs jae xorb outsb sub gs cmp out add push pop rcr adc push mov test lea rcrl push cld lock push jmp dec add and xor add or inc idivb mov mov add sbb pop adc add inc clc movb mov (bad) out (bad) repnz dec dec xchg cmp sub sarl ds sbbb xor cmpsb dec dec inc xchg add cmpl test inc adc mov and jo das add jmp pmullw test test ljmp jge mov add inc xor aad adc fistl sti sahf (bad) mov jb inc (bad) idiv xor jmp and out or jp add mov pop mov mov xor cmp cmp xor out add push dec nop add and push sub in nop add sub inc xor inc add jmp repnz add and jnp push ret leave add sub xchg xor push and inc test cmpl dec sub or pop btsl mov (bad) push jnp mov (bad) mov fs add push inc push push cld jg testb out inc lahf add popa fs xor xorl mov lea inc mov movsl xchg in add sub clc icebp jp add shrl and (bad) iret shl pop arpl mov sub stos add or aad mov add (bad) add add add and hlt dec les in add add adc mov add (bad) ja pop xchg fistp in lods push lock or mov cmc ds out xchg push fist dec mov sahf leave push pop jnp inc (bad) ja jmp mov or inc aam add pop jl ds int3 jae rolb in sub xchg mov enter sarl das jge push push mov mov lock rsm faddl sbb jmp dec pop cli jne add and daa add aad shll loope sub clc aad jae inc add dec push add imul mov fsub push push add fsubrs cwtl nop pop pinsrw xchg shr (bad) jge stos sub push stc das cs add pop or or push mov xor xor dec pop mov std or imul adc add insl orb xchg xor mov push add adc pop outsl add pop nop and int3 xchg pusha or inc push adc bound lock call subb jmp inc arpl sti push add mov mov and lods scas leave push xchg sbb push and add cld mov sub loopne dec push xchg pusha int scas test fucomi cmp das cmp in xchg dec dec lods pop divb adcb push pop and jbe test imul inc ret (bad) das inc add inc xchg mov add add popf fmul out push lock and ss stc inc add dec pop and ds xchg nop in jnp clc push inc add aad inc addl jb add mov mov imul pop mov fiadd in stos add lods stos cmp mov je dec push in inc xchg dec aam daa add sbb cli mov mov mov mov dec mov mov xor and pop add xchg mov out inc jns adc xchg sbb test jle in inc lds inc jle xchg mov icebp mov and ja add cli imull in add sub out lcall in call xor mov push enter andb hlt inc push sub mov sub fimul cld cwtl push mov add add aam and leave push popa popf pop sahf mov add aaa cmpsl jae jmp faddp scas xchg loopne dec inc adc sub push call dec mov ret call ljmp jl xchg adc leave add addr16 nop lret mov jmp sub push pop in mov jle mov cmc add pop pusha mov push call dec add jmp and sub xor shlb add and add jmp and in leave mov decb add adc mov or adc cmp cmc sbb jb das lods sbb mov shrl jge add pop mov cmp and fidiv and lds add in mov add jnp lods xor test inc fcmovbe sbb add rorb xchg add adcl add cmp ja and out jae inc not cmp rcr add push dec data16 mov jmp cmpsb and jb push nop icebp add push cmpsl and jmp add ja ror mov add (bad) ret mov dec add dec adc push jge inc pushf nop xchg xor add mov xchg mov add inc fsubr mov cwtl addl push dec jl dec fwait mov inc in insb push pop inc cmp add xor mov orb push mov jmp mov sub and mov xchg sahf imul add push dec and iret and cli test pusha push ds fs cwtl pop add dec push jmp add sub sbb rcl add (bad) jo stc clc adc add cli stc jb add adc pushf vmovhps mov xchg sar push sub pusha mov add ja push jae add mov cmpsl mov or sahf push inc hlt and stc adc push ja or add add add jp push add adc add clc sarb call mov pop inc xchg push icebp sub nop inc xchg jbe add adc test add jl pop sub fiaddl jne add and add arpl add call add mov nopl jno and mov test mov insb fs mov sub mov or add rep push xchg fistp int3 cmp or call mov mov add adc adc loopne in adc dec pusha out pushl sbb frstor add pop (bad) and stos pop xchg xchg dec add and add iret dec sbb mov int3 push sbb clc orb adc cwtl sub jmp movsb add hlt enter sub jae (bad) mov lock add imull add insb movsb xor ljmp add stos lea pop inc lret add dec out adcb add daa push adc jl loopne push add xlat push lea inc add movsb stos xor add or jmp stos sbb out and idivb cwtl popa add lock pop lods sub push mov add ret cmpsb add xor add cwtl dec (bad) enter adc pop jns pop mov mov jnp addb cwtl call add lahf loopne adc pop ret push sub add (bad) sbb ljmp dec add xchg mov call mov add out mov cmp mov jnp loopne xchg or push dec inc jmp cltd xchg (bad) (bad) dec add test out lcall xchg mov add adc push and int3 add mov add clc xchg ljmp mov mov repnz leave rolb xchg pop mov cmp push fmul jg sub pop jbe add pop rcr fdivs dec inc or dec jns add fcmove xchg dec shl or (bad) divb add insl add mov dec popl xor int3 lock cmp pop xorl pop out out lret test add jns mov sbb hlt je sub daa jae push out mov push dec cmc mov jg fsubrs lahf add sub aam add in or push mov mov add xchg (bad) mov iret test shr lea sbb sbb xor lock push out pop xchg cmpl enter push push mov add call sbb (bad) movsl hlt rcll or imul andb push movsl js add sbb cld adc adc rcl jge push leave scas clc xchg rolb leave shrl int3 (bad) add and rclb push push add pop inc roll inc fidivl or or repnz cmp xor pop add sbb xchg addb cmpsb jno add pop clc les xor mov add dec jne xchg out push sete or xchg fsubl pop push out jmp pcmpeqb add clc pop mov add adc js add pop dec cld out test add cwtl movsb (bad) movsl ja daa jne push push push add push sbb ljmp xchg clc push jne pop stos test pmulhw roll jns pusha fnstcw mov push data16 push jno add xchg repz mov inc push push adc repz add addr16 and jle dec adc add cwtl jae scas insb sub pop adc clc popa (bad) out xchg sbb xor dec cwtl add ret pop xchg jl jl add inc push outsl push dec jne add popa and push add inc loopne out pop add test pop cmpsb out imul aad clc ficoml sub sbb leave jne cwtl xlat clc add and jb mov sbb push nop jge ret (bad) aas int3 arpl insb lahf and je sbb nop aam shlb fsubs data16 add push cli push mov cmp add scas add dec jo cmp adc push cli lock pop add loop cmp (bad) pushf pop add fisubrl sbb or pop mov cmp je or push add cli stos and aam jp sbb jo inc in jecxz loope add jg pop test cmp incb add mov mov ficoml xchg adc push pop xor mov sti js add add out mov cli xchg xor cmp subb add jmp add stos pop idivb add dec test mov aas jo dec sbb imul adc and psllw mov dec pop jecxz adc cs add xlat lcall or xchg cmpb push inc xchg flds in cmp lea daa xchg fdivr or lcall add aas jecxz imul add dec xchg and cwtl add adc (bad) bound mov inc std cmp je pop testl xchg aaa and aas push inc ds cmp pop mov mov or or adc push mov in lock loop add aam cmp adc in mov cld sub jp pop hlt pop dec add xor jmp movsb jge out dec inc pop add push cmpsl jmp pop sub pop cmp andl push enter dec inc addb icebp mov add fsubr adc jnp inc enter pop sub add xchg loope test inc fistp cmpsl pop add push cld sbb aas xor add les rcrl xchg xchg out jo mov in das test pop stc jmp jo cmp rcrl pop xchg subb fs add hlt clc jnp mov rcr jle add stos adc mov enter leave cli add jb mov mov jno sub arpl dec add or mov add pusha xlat stc jl dec mov out add cli cmp add sbbl and movsl xchg fprem ds lahf inc aad jae push fs push fsub and sbb insb cmp add mov sub xor cld cli popf je js les pusha xor add ja mov sub push mov mov jl les es (bad) cmp enter lahf es add inc pop imul (bad) cmc (bad) jne or pop push add inc lock mov pushf add xor test repz add add push add push lret daa pop in add push cmp jbe cmp lcall add dec loopne inc cmpsl loope dec cmp cmp addr16 mov push iret fcoms cmpsb popa adc pop loopne cld push in inc cmpsb mov (bad) out jg sbb mov cmp jl mov jg add es aam dec sti cld movsl or mov inc rorb aas add les and add (bad) (bad) loop sbb mov imul push sbb lahf rcrl aam shrl loop imul ror in and and out add repnz mov mov mov js rorb push add imul add in mov sarb cs dec pop jno push mov loop out loope in lahf pusha repnz add sbb and cld cmp ficomp je jno push inc inc adc fild jb (bad) cmp mov popf add dec mov add ljmp sbb mov or push xchg sub frstpm(287 sub inc add jecxz nop add repz mov adc jge add push lods pop pop (bad) pop mov scas xchg and cmpsb sbb fmull enter push cmp loope adc out add test loop xor clc fadds lahf or (bad) push mov adc add lea jnp inc xor xchg outsb xchg push rcrb call daa add fcoml mov in add xchg or jno xchg adc inc push pop and test or jmp mov pop mov adc push repnz add imul fstl mov sbb mov loopne push test add mov je pop nop mov sub addl mov push les (bad) add sbb inc pushf or fiadd outsb dec jle popf pusha aad das or jnp flds andl add adc xor sbb sub cmp aam cwtl sbb xchg jg add xchg es in cmp mov xchg xchg sub mov dec jmp flds sub push lds decl hlt lahf imul cmp dec add fdivl add sub lahf pop mov aam fildll jmp mov add inc inc push sbb xlat js xchg add pop xor and add clc sub add cld pop aam push push adc dec adc add xchg mov int3 push inc add pop add dec add in sub out jg ds imul and lods jne sub xor or rclb mov push stos and add lret ss jp push (bad) sub add inc (bad) jo cmp sub pop cmp pop mov adc mov add mov dec add jne icebp add ss add cmpsl (bad) mov add inc dec cmp add pop lds mov lock push push mov (bad) xchg add cmp inc dec enter and xchg test add out push (bad) int mov sub add xor pop dec push call add sbb jmp xlat jb lods sti arpl push jae mov sub sub add jecxz rorl add sub pop add cmp cmp (bad) rclb dec add mov push je or pop adc cli cld xor mov adc sub pusha rorb lock sbb cli lds (bad) jmp mov or decl rorb cld mov ja add mov adc js mov xchg xchg xor inc mov (bad) mov adc lds add fildll jecxz sub lock lock mov test dec push xchg pop test pop out add pop out jl pop scas lret sti fistl push adc stos stc (bad) mov or jmp pop push mov dec adc sbb xchg lcall add pop fsub add inc scas adc mov jnp cld leave (bad) mov pop add adc push lods pusha and or gs lea jecxz cmp loopne cld dec add ss sbb popf push out add lods loopne repz add xchg out clc cmp loop mov xchg daa push frndint or inc (bad) mov insl jnp jno mov push daa cmp mov loope jle dec jbe xor cltd jmp (bad) fidivr jne lds insb push pop pop inc pop stos and sub fwait out enter aas jne lahf aad sbbb enter les addb add inc dec jne sahf rcll rclb push add iret inc cmpsl sbb cmp int cmp push lea or mov movsb add jo add mov mov int3 sbb adc and out add add push add jnp fs adc add and leave pusha fcmovne jae add loop mov mov or push dec in mov dec add mov pminub notl mov subb sub xor or or lods testl cmpsb cld (bad) mov mov mov dec addr16 adc stos lods adc pop mov cmp push inc adc mov xor mov add jle popl and sub sub mov pop cwtl mov fldl cmpsl jp sub xlat dec in adc mov popf jno imul push adc add mov mov aaa test lret mov and dec push adc inc mov mov pop inc test jge jb inc test mov mov cmp sub lret popa mov inc or insl mov (bad) inc xchg mov outsl jle add pusha mov ljmp insl adc mov xchg pushf add xor push add and mov ret add fdivrp xor add xchg adc movb push data16 jge sub aaa je mov clc adc nop add mov mov sbb push add or sbb sub add dec or cld jo sub xchg jns add adc fmuls aad add pop bound push mov rcrl push sbb sub aaa lea add mov or or jecxz mov in add out jo push stos fldenv in rclb push je mov push jae je add adc sub test lods cmp and les or rcl repnz adc inc cltd cmpb mov add test and add ljmp add les add xor push sub popf sbb clc add imul add cmp jp pop adc cmp inc add mov cwtl pop add loop scas push xchg mov push call pop or rolb cmp rcll jp pop pop test pop push sub push jmp push jl mov cmp mov call ljmp cmp add or add fs (bad) jecxz (bad) fsubr push add das pop ret xchg inc roll or mov xor pop cli (bad) xor imul (bad) pop les cmp (bad) push adcb dec dec aaa add inc jne add add test pop xor cwtl jnp jno add lcall push or inc inc or dec sbb or adc inc add xor jnp pushf add add je mov mov add mov xchg roll ljmp lahf mov andl (bad) pop (bad) sub lock daa jnp add mov ja adc and ds ljmp js mov xor push push jl int pusha push adc pop mov inc stos mov mov scas mov inc (bad) jns inc dec jg notb add push pop (bad) lcall pop adc fcompl mov mov mov add add add push addb inc add push sbb repz or push daa add lds adc lret lea push fsubrl les idivl imul and incl cltd dec andl add pop sbb add push mov scas add cmp mull jno push adc in sub and popf add jg mov push ja (bad) popf adc sbb add ret push pop pop adc test aas pop jecxz sahf push mov lods aam xlat add add or enter loop pop mov ficomp inc mov inc sub add fmuls adc inc add jge dec add test daa and sarl add adc cmc clc adc xor cmpsl scas push mov push dec subb sbb add test pop adc aam and mov mov rclb pop mov xlat (bad) shlb dec stos jg test mov in ja add pusha das pop sbb dec and adc add rcll or sbb ljmp add and adc sar sbb std pop xorb testl xor ret syscall mov fildl xor into push add push adc fwait sbb ljmp and sbb add (bad) pop cltd jg aam jb insb or cli cs or push add sti ret add jns jmp add out and mov add call lcall or add push push xorb rcl xor push and sub addb addr16 lock stc repz adc cmc pop hlt add (bad) enter add mov cmpb xchg mov (bad) mov push sar movlps icebp pop incl sbb add or add sarb (bad) mov or subl ret pop ror pop add cmc xchg (bad) pop neg add mov cmpsl add jecxz divb jo sbb loopne sub mov stos pop add mov iret cmp and adc cmp orb rcrb mov std push jge or sbb in jle cmp pushf dec inc es add mov mov adc dec mov (bad) jb cmp push adc frstor addr16 (bad) ss push add mov and sub lret add repnz decb add xchg lds inc add mov cwtl fldl xor mov lock cmp xor iret pop addl pop xor stc cmp or sub stos sub sbb lea ret addl add lret add (bad) lock push push or ds jb add lea dec sub xchg add add rol aam push sbbb lcall pop js popa movsb cmp add mov xchg add pop repz pushf subl and sub xor dec add xchg add cmpsl out add pusha adc cmp add cmc lea add addr16 or add sbb adc jmp pusha ret js dec decb add mov add les push xor (bad) push add add sbb sub dec push (bad) jne or mov pushf adc sub icebp xor paddsb cwtl inc mov add mov mov cmp or add rcrb arpl add xor add stos pop push cmp pusha addb or mov daa add addr16 xor mov add pop and mov jl ret dec andb or mov push fidivrl add push sub add dec or or pop xchg clc mov add push add push add dec fildl pminsw (bad) jle fiaddl dec mov dec adc or and xor and pop ret push frstor xor jle fcom add inc xor mov shrl add xor sbb shrb add xchg ja and add dec push adc lret mov adc lods xchg aam adc add adcl add cmp add xlat push xor pop add daa sbb pop xor or cmp jecxz sbb dec repz or loope cmpsb add push mov repnz add (bad) mov inc mov out ds mov add xchg add or mov pop push lahf xor adc in mov (bad) cs xchg sbb mov data16 dec pop (bad) sbb and or out loop sbb add adc mov add jo (bad) add cltd or add cmp add and jb cmp push xor enter pop inc repz or loop sbb or movsb loopne push dec cwtl pop jb adc out jmp dec repnz adc inc add xchg cli mov out int3 das lds xchg call inc and out cmpsb in daa pusha xor jp pop or mov pop dec dec jno iret mov pop fs movsl jnp add test fcmovne mov and add movsl lea xchg pop xor add test fiaddl or inc lcall sbb in jle cs sbb ds cltd mov aam add push sub pop and jb add pop pop add mov lcall mov pop cmpl cwtl or ljmp pop mov add or out inc mov mov push fwait pop xor dec adc iret or sbb add inc popf xchg push push adc add inc add jo and jno add sub inc add ljmp stos adc mov mov xlat pop test add push fbld jge std mov sub push testb push cli push imul sub gs ds add rcrb mov aas mov lcall xor and sbb mov enter cs (bad) fdivrl mov or outsl les nop add fisubrl adc repz sbb (bad) jo mov add push add daa clc pop xor xchg add ret pop inc fisttpl dec add mov sub sbb add pop test pop mov fwait (bad) mov rcrb mov add loop xchg je inc in (bad) lret pop mov sub mov sbb movsl test xor sbb pop push and add mov rclb aad mov xchg lods faddl pop ljmp add sbb and dec add ja sub xor (bad) adc and adc add xchg dec inc test xor cs jle push inc pop xor xchg ljmp mov pop dec packsswb push loopne xchg mov add mov ret test mov cmp cmc jmp pusha push test add aam add mov mov mov and push jge jl popa or add dec push sti add add sbb dec in repnz pop rcrb pop rolb adc into or out xor add daa insl dec mov lds push dec addr16 add in sbb cmp pop add or sahf push stos sbb lret ret adc aad ds sub add adc cs int3 mov inc jmp add add xor stc pop arpl or or shr mov ja push add dec fsubrs mov sbb ror sbb push fs mov call (bad) push pop add pop push sub js inc cmc adc clc test or xor out lahf adcb jmp jo mov rclb jg add ja out add sbb mov xchg add jmp adc sbb or mov or add cld dec push dec (bad) add jbe lcall lea in subb daa leave andl es add outsb and out mov pop mov (bad) xchg add (bad) divb sbb adc hlt in fstpl pop adc int3 push jle jnp test cmp inc pop rolb out jg add push xor mov add adc aad (bad) xor divb rorb push subb mov hlt popl mov test cld cs stos cmp add (bad) jo mov mov or in rolb (bad) sub loopne movsb or xlat nop sub inc mov pop lock adc or pop rcrb xlat add incb icebp push jecxz and jnp add std jmp hlt in add adc add lea and lock fsts inc fs or iret push add push rcr gs mov leave add fistpll pop add lock add xchg (bad) pop clc cmp dec xchg test mov add popa inc repnz iret call sub inc (bad) jae inc int3 loopne add out pusha adc int3 pop cmpsb add mov pop push add mov push pop add ud2 leave sbb cmp mov jne int mov mov mov adc add cmp or push repz (bad) pop fsubr loopne aam lcall sub movsb push dec adc mov les leave repnz ja add lret sub xor cli jne mov or push popl loopne dec rorb add ds and ret testl cltd bswap les mov add std add (bad) sbb add cld add mov leave enter pop xchg and add add das inc mov mov mov adc add jbe xor dec loop xchg or push sbb pop js loopne mov clc push cwtl or sbb add sbb divl imul movsb orb mov xchg push jg lock in add imul adc cmpsl add push mov rolb lea push stos sub (bad) push and movhps rclb add (bad) xchg add scas push mov jmp dec sub mov or add xor jnp sbb out sbb in clc cmpsb and pusha inc cli bound dec add xor or je cmp aaa add (bad) jge inc jne inc add dec (bad) loopne jmp or mov push jo,pt add cmc jne add loopne sbbl pop add out add pop pop push adc add dec xor mov test repnz or cmp dec xorb pop addb jne push xor push pusha sub pop xlat lea adc int3 pushl add push mov add pop mov pop xor push push das jmp add mov mov fist adc jmp mov add xorl stos sbb not add add data16 jg push dec add mov (bad) cmp cmp dec and mov lods push push mov adc fcmovbe mov enter pop call gs jae pop add repnz add rol add pop adc out fnstenv xchg in int mov lds or sub gs push inc adc mov ud1 dec ds sub loop push push xor ret and leave xlat sub pop sbb jmp es roll cmp les (bad) lret pop jl je add cs in (bad) cmc pop mov cmp xor ja add mov sbb xor jmp lret dec cmpsl push out adc pop cld inc jb movsl add aam call or pop jns adc int3 movsl push add xorb popf push mov add test sbb ret dec vmovd add in sub push cmpb imul cs addr16 not orb inc movsb sbb add jecxz movsl and push xor sub out ja lret testl int addl adc ret loop xchg hlt pop pop sahf cld adc add push inc cmp add test cmp inc enter stos repz xchg pusha daa shlb pop in (bad) pushf add or and pop jb cmp cmp subb xorl subl sbb add push and sarb cs sldt sub ds lahf int3 and (bad) pop sti enter scas inc lret push call icebp push repnz or push enter in iret and and sub roll fisttp jle repz push add pop sar aaa add and icebp faddl xlat xchg mov push dec push push xchg data16 sbb sub cmp mov or add rclb push xchg lods insl sbb ficom add mov and xor adc clc popa mov out loop mov jp mov inc xorl add or lea mov add mov push mov push inc mov mov add hlt and out jb addr16 cli (bad) dec iret add cmc adc leave pop enter (bad) dec add push faddl mov (bad) pop inc mov fistpll cmp test push call es outsl xchg add push mov (bad) out bound xchg adc aas push jne xchg cwtl out pop adc add imul pusha push popl add repnz sbb pop fiaddl lock add scas out mov and movsl push fs adc repnz jbe add add pop ret pop iret dec dec inc push mov xchg je js or sub xlat (bad) jle jg add sbb roll sbbl adc jbe cmpb popa cwtl cmp mov add mov test add pop nop mov push loope icebp shr add push cli mov add fisttpl faddl ret sub (bad) or imul ret adc testb pop lds flds fstpl testl fiadd xchg and aas add push add ja mov add inc xor pop clc adc loopne lock repz fadds adc xlat xchg popa enter cmpsl add cmp sbb loopne adc inc testl inc rolb jnp inc xor add adc decl lock add hlt daa and flds add dec test add popf outsl adc sbb cmp mov mov subl data16 sub jns push mov cmp sahf (bad) divb xchg fcos call and insl loopne inc hlt push pop cmp mov add pop lahf mov adc pop add mov shrb ja iret dec add cmp in sub fiaddl nop jp popa sbb add (bad) rorb xorl roll mov add lock rol aas xchg push add add pop out test add scas sub leave insb inc mov shl out pop pop jmp push lods add jecxz pushf inc cmp mov jmp aam test jo or or pop push or (bad) xor repnz push pop in xor inc in pop or pop sub add pushl mov cmp xchg imull daa add ja inc add std call add inc mov pushf fucomip sub add mov mov push xchg aam push pusha shlb roll jne shrl jl xor stc and xor add jge pop add pop loopne (bad) sbb xorb add pop imul ret inc mov inc mov stc in add cmp test ret bnd jecxz pop mov xchg fstl and ret sahf mov add inc popf movsb into xchg leave dec and xchg (bad) outsb pop inc cmp jle add dec lods sub test sub ror inc repz fist xchg xchg mov add das lock add dec mov add test add lds sbb xchg mov rcr push fwait (bad) data16 mov stos dec pusha sub add out mov jne lcall jno push jbe nop jne (bad) dec adc hlt ja subl and fcoms lock mov mov adc push add push adc push lea add add out dec add inc loope pop mov loopne xchg mov pop add mov addl sub dec cmp andb push pop xor pushf and dec mov or inc dec jge dec mov or push push cmp lcall popa je stc add cwtl clc xchg sbb xchg out mov popa sub mov dec pop les jb outsb mov repz test add pop sub pusha add sub mov jecxz push arpl add adc test dec mov dec dec imul xchg pop sarl incl ret mov and fadds jo ljmp in dec lcall nop loopne aam ficom dec adc mov adc cs in sbb into mov xchg inc adc or cmp fdivl add and test add rorl mov push enter out dec lods mov nop xchg push jb loop jnp in shrb in mov lea add mov adc cli lret add pop mov lock das push push add cmpsb int3 mov push push push pop adc and cmp jb pop add mov fwait mov in pop jbe addb add push lea add adc nop lods add cs lock xor fcmove addl mov add pop cmp sub es inc insl mov add adc repnz sarb js cld aaa orb sbb mov jl or lea cmp sbb lock call adc in stos addl rclb pop xor push fwait jl sub sbb jg rolb push insb loop add lea pop addb xor add sbb imul jp push int inc add inc xchg mov (bad) rcl lcall ljmp jp sarb (bad) rorb cmp xchg icebp sarb mov rolb call xor fdivrp mov aas add or popa or fs dec call icebp add sbb mov pop fnsave mov add dec jge scas xchg sub dec sbb inc faddl lret popa and mov lods push stos or add and xchg adc jns or mov add add add push pusha popa xchg pop jbe add pushf push pop jge sub lea rclb rolb jg sbb (bad) mov aad bound test jmp mov jecxz addr16 adc (bad) fsubr xchg icebp lea jp imul movl add roll roll ret stos (bad) das rolb pop aam inc and dec and add xor cwtl loop aad daa mov outsl ja mov aaa mov hlt push in mov imul add add sub push fistpll repnz testb cmp dec inc add push mov mov or cmp je inc leave cs xchg pop pusha jg test jbe add xchg lahf or outsb push dec cli test add aaa pusha sbb add test add add sub ss xchg in out mov fidivrl add push mov cmp xchg add mov or push push mov cmpsl pop xchg xchg sub dec adc aaa movsl pop push xor cltd dec adc fwait dec or adc add xor sub movsl push push icebp add cmpsl outsb or cmp add cwtl popf add push loope add dec push jg push xchg jns jmp inc test add sbb add push sbb xor add movmskps add icebp das mov gs mov pop dec add inc stc fidivrl pop lahf adc (bad) nop add icebp mov add or add negl pop push jl sarb adc xchg inc sub cmp lret sahf (bad) xchg mov adc mov inc adc add sub sub pusha dec or mov ret enter pop add or xor shll cli add push ja add cmp add add fiaddl in stc cld outsl xor adc pop test xchg mov rorb push lret inc push andb je or ja es mov add sub or out dec adc push in rcll nop loopne popa or push add and aad jbe push add sub xlat xor repnz dec add cmp and add ficoml aad mov and test pop mov add hlt fwait push dec (bad) pop add pop mov add jl addb sti mov sbb cmp fldt dec push jecxz ljmp xchg jo adc add xor mov (bad) negb dec add iret mov adc out add cmp xor cmp lods loope add cltd aad push pop lds inc push adc cmp xor rorb enter cmp sbb push leave mov dec jmp shrl sub mov mov jge cmp dec std addl or adc loopne adc pandn daa mov adc rclb repnz xchg or add and pslld and jecxz push inc sbb punpckhbw xchg rcrl cmp neg movsl mov mov jmp pop lea sbb outsb imul or mov clc lock ror add mov enter (bad) fild add add ret cli mov pop pop push pop shlb mov bound push add jmp ds dec sbbb aas adc add push lock cmp jmp pop pop jns,pn jl add or scas dec inc iret push add and push adc adc mov cld adc cwtl sub roll lret xlat mov repz adc mov pop pusha cmp je add add and sub roll pop xlat mov fwait jne pusha adcb and addb cli mov jecxz scas inc jge or mov add imul ljmp js and dec unpcklps subb out or add cmp add enter xor movsl data16 mov mov out jmp repnz jae sbb xchg add ret add dec inc push pop ret mov stc add arpl sahf mov xor repnz and dec sti lods jp xchg je popa adc lcall add clc nop (bad) add mov mov or lea add adcl xchg aad jno add out xor sub int3 add or xlat (bad) xor pop fadds nop inc movsl inc out jmp or pop push dec adc cmp inc mov int3 fcomip psubd and add or adc shlb add aaa push jae cmpb add or push jl call push mov repnz mov add add and test stos xchg push mov sbb (bad) push add add inc adcb cwtl popf add pxor dec jmp (bad) (bad) mov div sub add stos mov jg add mov push rolb popf mov add and (bad) pop sub and cmp clc xorb jl xor add test and mov pop call lret pop cmc int3 ljmp repz pusha int in add push ret orb mov jmp (bad) fisubl (bad) sub clc repz add ljmp stc insl add cmp push mov push mov inc lods add pop or hlt sub push and loope nop arpl xor fstps imul jmp outsb push jb cld push add or adc clc repz adcb jle add sub add adc shll pop pushf jns add lcall push cmp mov insl pop adc add inc fistl imul jo test aam pusha dec inc lea dec lret xor jmp add inc stos aam les add roll mov cmp mov popl push or lds sbb jnp pop (bad) sub loop jge mov jns pop (bad) icebp rcll aas (bad) sub aas xlat jo add cld loopne push push jl add mov xchg ljmp das add loopne repz push aad cli mov imul movsb push jnp mov add xor add rcl ljmp dec add jo mov not push push idivb shr jb xlat add and pop (bad) jbe loopne add ret cmpsb mov cmp add cltd pop loope inc sub addl je movsb inc add cmp fidivr aad cmp sub xlat sub add adc adc sbb pop add fldcw jo add cmp jb push daa xor lret jo xchg inc loopne xor push xor lds lcall (bad) aaa mov jo add mov dec sarb test lea sti inc add ret scas call add imul mov cmp jae push add cmpsb jl pushf jb cwtl loope paddw add ss dec cltd sub pop jge push xor add lea add (bad) xchg das loop add pop and ss add (bad) sub ret fwait fs ds push sub outsl add icebp or and pop sbb loopne jo stos dec dec mov aaa inc jnp roll dec int (bad) cmp lock xchg loope cmp imul call dec test pop and add aad loope out fmul bound add push add mov data16 pop adc add mov inc cmp jp add and push cmp rcrl sbb or loope cmp outsl ljmp pop xchg lock pushf pop jae add push cmpb add shrb lea sub outsb xor or sub sbb sub dec push icebp in pop add mov add jge xor nop dec sub adc add cmc push sbb mov pushf xchg pop clc out pop add and cltd sbb mov adc pop jae lods cmp or rolb je cmpb add pop mov or add push in push ljmp mov jb push dec sub add int scas sub xchg cmp addl jl loopne add (bad) inc jp mov rcrb jg cwtl popl fdivr dec or add and call out add fildl clc cmc add dec inc mov mov add sub add sbb imul loope addr16 ret test add adc mov aam inc repz dec fcoms mov add cwtl jne add adc pop xchg or int3 add popf cmpsb daa add or roll jbe es push add pop sbb je mov push enter in imul (bad) jno in (bad) ja add inc js les aad add and leave (bad) jnp lods enter push in test inc inc loopne push lds push (bad) dec stos adcb adc adc nop (bad) mov test add clc (bad) xor jg push adc cmp xor push fdivs loope sbb sbb mov hlt aad std inc nopl loopne add push xor (bad) xor test test add ret lahf add mov jg sub (bad) fwait mov mov fs jo add mov or mov push loop jne mov add mov das cmp lcall cwtl add loopne les add jbe or ja mov cltd jae inc or pop push add jecxz lock or push call ljmp sub (bad) daa sar add lcall les add pop xor mov cmp dec add sbb xor jl add pop loop repnz pop pop jg add jns jne cwtl xchg sbbl mov jne sbb test ret out xor pop push scas add add pop roll leave imul dec loopne push mov scas pop loop lcall daa inc sub test jne or pop mov cmp add push (bad) stos or call bound ret pusha adc cmp add inc repnz cmp mov mov adc stos cmp pop aas add add push inc test mov cli sbb and fcoml (bad) dec mov push dec xchg inc jb and rolb vmaskmovdqu lfs push (bad) add es pop imul orb test test add outsb cmp out pop add xor and ret pop add cltd daa and stc sbb sbb jno loope xor mov push inc jo add mov push dec cmp and fs add fiaddl outsl scas adcb sub or mov (bad) (bad) insb fcoms stos dec add sbb mov and push or adc mov leave add test je daa mov mov jae add lods mov loop (bad) stc xor add repz loope add add (bad) mov clc add lret or add push sub cmp and jo sub lock test add in or call js mov pop in cwtl dec add hlt out sub aam fildll loopne pop jo add mov or and repnz mov lock add and outsb and inc mov push push push jmp pushf stos enter daa pop xor rcrl pop adc push pop cmc lea shrl add xor enter add adc adc push and and repnz cmp mov inc jne test shlb movsl pop fmull mov lea push mov cltd mov add orl (bad) pusha ret jne add push xchg mov popa jo mov (bad) aas add gs mov flds rcll or or fiaddl dec addb add inc adc mov test scas and cli or movsb jecxz inc inc mov add mov nop push add mov pusha sbb pop jno imul movsl add gs jecxz arpl mov mov add shll mov add sbb pop lret nop sbb pop add dec aas jo lea add mov sbb mov mov mov and add test and mov js add cmc or dec lea rolb js fldenv sbb call in or pop jle add bound testl adc ljmp andb cmp add movsb jmp inc mov sbb add mov mov jno gs pushl push stos add out mov incb jecxz push mov lds add or and pop leave pop jle pop shl mov add push add pop inc adc mov movsl addb fnstsw test in ds and cmp adc inc cmp shl inc dec jne cmp push call sub pop test sbb cmpsb jne push adc call ds push add ret dec imul and (bad) mov add aas xchg xchg (bad) enter add fimul or js push roll jae add scas test pop ror add sbb add xchg xor adc and dec add mov (bad) dec pop movsl adc aam push mov cmp mov jge pusha or pop call jb mov and dec orb push jae push test into inc add sarb bound mov outsb mov sbb jge push jnp in add call mov hlt inc pop lock pop inc clc sub shll gs pushf aam cmpsb add add das aas adc push jbe int es clc in add add int3 mov dec leave adc xor fbld fs or movsb add mov std pusha xchg mov jbe shlb lock pop sub xor adc mov push daa dec ljmp cmp add push pop lahf and xchg iret dec add jmp inc repz out add mov mov inc mov xlat (bad) push sub in mov sbb jge jb pushf push adc pop mov push xchg cmp and dec xchg addl mov push add inc das int pusha into push (bad) adc inc shlb lock imul jne sub add mov xorl test mov into add out mov mov (bad) hlt lds push xlat std test sub cmp xchg add clc jae jle add mov jl mov jmp add js mov add and and or push jb lret pop bound dec ss adc add xor push xor jmp leave sub pusha dec and cmc rolb scas add popf push ds ret sbb clc fadds add or enter movsl divl mov test jmp dec add les push xor mov (bad) shr mov leave add sub xlat pop fcmovnbe add outsl lea out test add xor outsb in pop or pop sub fbstp mov inc mov jnp push adcb lret add enter stc outsl loop movsl (bad) push (bad) pusha out sbb push repz shlb addr16 mov mov mov add lret repz mov gs mov stos cmp call cwtl jno add lea jo stc sbb sub call jmp aaa add fbld mov inc movsl push cs pop mov mov ja stos or inc daa je rorl rcrb das inc fs addr16 xor jl add sbb push fwait dec pop mov stos pop xorb (bad) mov add jle,pt adc popf subb mov fmuls add movsb jle cld repz mov jb cltd add push out addb inc imul pusha fcomps pop xchg enter lods push andb add jg xor add inc out testl (bad) cmp dec jbe add scas dec adc lret nop call mov jg add fbstp rolb mov inc sbb adc lcall jge insl clc ljmp call push adc add push pop sbb mov sbb add in sub mov mov adc arpl cmpl adc push ja push stos sbb fild xlat sub cwtl cltd add (bad) call ljmp mov push xchg pop add add mov test pause les cwtl add negl dec pop in mov sbb cltd test loopne mov pop mov pusha (bad) mov push and cmp loop xor mov repz rorl pop inc mov inc pop lret iret push add add xchg and fisttpll add inc hlt rcrl clc or cmc fnstenv mov mov movsb push pop loopne push add pop mov cwtl xor mov jmp aad cmp das xlat mov inc mov add adc xchg pop je inc pop mov mov cmp add add xchg addr16 imul add xor int3 test mov add cmp mov cld cmc in add cmp pusha mov push push scas sub das adc add add lret inc pop test push popl pop sub mov jne mov ljmp shrb add xchg add fs jge add jbe data16 sbb or pop shr add (bad) lcall neg je add jmp out je jne dec add jns aaa dec iret test pop in mov (bad) aas pusha and add sbbb push in push xor sahf pop mov pop or out add mov std dec mov add xchg and and push loopne push mov cltd or add inc sub add add sbb pop add ss sbb cmpsl dec and jbe and test xchg xor in pop fninit subb (bad) sub (bad) cmp lahf add repnz mov (bad) loopne add imul sarl xor lret movsb addr16 add inc jbe in jp push add mov xor rorb lcall scas sbb xor movsl pmuludq or mov (bad) in jo add mov xor faddl mov mov add jmp xor rolb adc negb jno add and out orl loopne outsl jle add stos mov xor cmp hlt cmp fimull add mov or push call or add addr16 pop cli adc adc mov mov divb sub rorb sbb sbb jl add or jmp (bad) adc add nop xor push dec rorb lds sub (bad) aam inc iret cmp mov test sub sarb inc dec push and in roll add loopne aaa test ss jae lcall add test jo aas add pop lds push rorb and cmc sbb add inc lods mov jl add fdivrl xchg and (bad) add ret or or gs add pop frstor mov jns es cmpsb push inc or (bad) inc pop pop push inc push push sub lret int jo pop mov stc inc iret push pop and add add bound std cmp aam repz lods int or cld push jbe adc fild lods mov inc fsubr mov ret imul push loop push mov and mov add xor hlt jg or (bad) dec lock pop test push inc pushf adc adc push jg add cltd and push imul mov dec pop cmpb sbb dec add push (bad) jne and sub lea cwtl movsl enter add leave pop (bad) add stc jmp add pop loop cltd fwait push cmp int3 and add inc pop call inc push push mov cs sbb xchg js jle cmp add or mov add xchg xchg dec push lock or mov mov stc hlt ficomp shr subl add repz adc mov or pop sahf (bad) xchg psrad add adc mov imul mov add mov sub push imul add sub dec nop pop pop mov add lds and mov jo in cmp add sub pop mov das and pop mov lock sti loopne mov add adc xor add lea call adc pop (bad) mov xchg xor cwtl push ror dec rorb cmp xlat or outsb dec dec pop lock add and je push bound jl sar sbb repz add sbb jae add xlat push dec or aad std pop ja adc out xor add addr16 xchg bound in sbb push and adc cwtl push jne adc mov or loopne ljmp das pop icebp je and add add cs (bad) in and mov jb inc cmp mov dec push and (bad) xor out sub xchg push mov push mov add add scas ret sbb into add int rcl fbld add xor sbb cmp pop cmp clc or push ret pop sbb mov daa fcmovbe aam add add mov ret shr cmpsl lods inc or or inc fist shr add pop je push adc add repnz das pop cs sbb jno hlt sahf ss in push daa mov cmp jo add (bad) xor dec cmp add fldt int3 lock xlat and enter fsubl out add movsl loopne push das add (bad) je add inc je jb add pop cwtl arpl sub xor xorb inc cmp lea test fadds rolb jnp xchg and outsb pushf cmpsb out pusha add adc addl (bad) and add and add inc add pop jmp ljmp hlt in mov jp pop and or aad pop (bad) fiadd imul pop add jl push cwtl add xchg push xor xchg aaa pop lret add push mov add (bad) add fwait cld lret test in add rcrb xor mov push mov lds push xor test std cmp jo add jle repz cld outsl in mov inc xchg cmc bound add dec daa jp inc ret fidivr cli ds (bad) dec add inc inc lods add incb movl hlt outsb lock add sbb cmp call lcall out cmc subl stos out xor or lock adc ret jo adc inc fidivr enter add test in or jae adc ja xor cmp aas mov or jecxz repnz ret loop inc xchg jle mov inc out movsl bsf push subl das cmp push pop mov icebp add lret mov mov add xchg mov push mov dec adc sub xor lret mov ds mov gs adc sub or and xor ss push prefetch loopne mov pop or pop add and clc bound pop enter sbb mov lock rclb and or fmul rclb or mov pop and jmp mov adc jo rolb call xor inc shrl rcrl jbe add inc push jle (bad) enter mov dec faddl cmp dec sbb jnp sub push dec bound subl cld mov cmp jp sbb push fcomps adc jbe ds enter jbe fs or mov cmpl nop add leave or pop xlat sub and or inc fsubrl hlt cld push sub les mov add adc ficompl inc mov mov sub sbb pushf adc nop aam and pop loope sub mov pop xor sub inc mov adc pushl aad add test shrb or add in mov mov mov inc or (bad) sarl mov fcompl or pop clc inc mov pop and and pop nop mov mov xchg push hlt cmp or loope mov loopne mov inc jae sub fcomps cld mov adc lea and in pop mov rclb and mov xor add inc pop mov pop pushf cwtl mov mov orl das test xchg js add mov mov mov mov imul out pop add loopne push lea inc adc mov add xor or out add outsb je insl add in loop out pop addl sub cmp sbb xor cmp inc fnop push and add or fadd in pop or xchg or ds cwtl jo nop sbb or push ljmp add clc test insb jo adc clc addl or dec inc pop es sub lcall xchg mov rorb and fcomip sar pop shlb adc sub xor lock pop mulb push mov fistp or mov mov add inc add gs push add mov call jmp imul sbb les je sbb cwtl xor js cltd add xchg mov adc push test dec dec pop mov push add push push pop pop push sarb add xor adc jo or push outsb idivl add sub and popa add outsl mov rol fmull and sub hlt in test or cld mov push imul lock nop xor fdiv mov es and inc pushf pusha sarb adc clc fcompl add adc and add mov inc lcall jl lea das cmp sbb rclb sbb cmp add sbb push xchg divl test loopne add rorb into or add cmc push int adc push cli faddl push add outsb sbb test jp jge nop mov dec std add mov test xchg in dec pop lock or inc add andl insb add out inc add jecxz cld xor sub pop cld push dec dec jl mov add hlt inc cmp or rolb add movb pop lock outsl jno pcmpeqb dec testl or push and popa nop shlb and cs imul mov rolb cwtl push push pop or or or pop xchg int mov lea fdivs xchg test jns add xor hlt dec inc add cmp out pop lahf enter mov push test xor pop sub xor push mov jo mov or flds add nop lahf mov and test paddb inc add (bad) inc add and xor faddl cmp and cltd int3 shrb stc jbe sbb sub cmp mov xchg ss sub lahf xor adc or cwtl mov sbb and pop cltd jno xchg insb push test call add mov adc mov pop and or inc ret pop sbb loopne sub pop call jo (bad) fldenv test mov xorl pop cwtl adc sbb fstl dec sub pop movsb add cmp xor and (bad) and mov cmp xor in fdivs sbb fnop push mov scas sub mov cmp lahf jns rclb push sarb add dec popa js cwtl or and sbb and rolb aaa cltd inc lods pop pop aad and (bad) cli (bad) loop adc mov adc bound movsb loopne test adc or mov pushf mov add test rolb pop mov inc or mov jmp push popa pusha out sub movsl add xchg mov or xchg and adc mov cli and jl inc pop mov inc mov mov mov xor mov les xchg sbb jp add fs xchg insb (bad) lock add (bad) mov cld (bad) jb dec cld and xor pop mov push sahf movsb xchg mov mov in std (bad) jo mov add dec cmp outsb pop jl mov lcall mul lock sbb sub cmp dec xchg pop and cmp adc push scas adc xchg inc fsubr cmpsb add and mov push or mov and jbe cmpsl cwtl xor cmpsb mov lahf js add xchg (bad) sub and sbb sub ds push dec bound cwtl mov mov adc mov clc add xor dec repz repz jp mov and fdivr lock mov and je mov dec lods (bad) loope int3 cld loopne add or jae pusha dec stos jo test movsb mov sbb pop adc mov mov adc xor dec cs mov nop adc xchg rorb and and imul mov add cmp dec dec push add and daa and cmp add jge mov cmp inc adc add inc cmp fs adc add jno in outsb sub out add xchg inc inc fbstp add inc arpl mov out mov add dec inc jbe pop rorb sbb fldt add jp push jg push jb jne add jecxz push sub out packsswb push inc sbb sbb cmp gs add push add pop mov xchg fdiv add inc jns xor add cs sub add fisubrl inc cmpsb or jbe add ret sahf jmp cmp bound add inc js je cltd sbb xchg add fisttpll jo loop outsw inc and mov jae arpl outsl std pop xchg les or cmpsl add inc imul push cmp push rclb cmp sub (bad) push xchg lcall mov fs mov push adc xor jae adc stos jge pop push push mov mov push outsb push push inc cmp xchg je or or (bad) xor dec add cmp (bad) add rorl pop stos sbb sbb push add or push sub dec inc push jns movl je cmpsl loop jo adc jp cmp dec adc push add adc jb mov dec cltd jns and xchg lcall test add inc outsl js dec call (bad) nop jbe jo cld movsl add lret pop push and in sub fsubrl pop aaa adc mov ret rcrb popa add xchg inc fidivl xchg (bad) aam clc testb xchg push dec outsl push cmp add int es dec add lods pop gs fcoms fdivs dec daa push fcomp (bad) inc push int and dec into cmp lods fs adc xor movsb mov stos adc inc outsl bound adc add xorl faddl out int or add mov or add imul test lods push (bad) mov push jmp lcall push rclb aam push add mov adc cs sbb (bad) cmpsb scas sbb inc cmp push sbbb push lret add pop stos rclb add (bad) xchg sbb mov xor insl enter xchg mov push or and cmp push mov xor push mov push stc dec pop adc add rcrb adc inc add arpl les imul xorb add mov pop inc loop cmc bound add nop cmpsl sti add jo setle insl inc add pop sbb enter or in movsb sub popl inc (bad) jbe ds repnz cld mov sbb push dec dec dec adcb fs and add jle les repnz hlt das or bound sbbb inc dec inc adc push dec jo sahf pop enter push daa movq or test sahf cwtl inc mov add stos and imul movsb es data16 rcrb push pop sub add xor popf divb lcall fldt mov gs rolb lcall add mov or leave sbb sbb mov or push xchg roll add lds xor adc mov lock les xchg pop mov cmpb in inc add sahf ja and (bad) repz sbb xchg push push inc pusha notb fs (bad) imul lea pop push jns dec popa mov faddl dec mov or outsb (bad) and int3 push dec add ljmp add outsb mov adc movsl xchg idivb add add stos loopne adc add or xor add cmp xchg pop inc (bad) dec out daa push inc push bound jb jp (bad) out out out out out out out out out out out out out out loopne loope xor or adc sbb and sub pop xor cmp inc daa dec inc push addr16 xchg push jb jp (bad) out out out out out out out out out out loopne clc push xor jb je jbe js add jl jle xchg shlb xchg add movsb inc call add imul sbb data16 sahf add push fstpl sti xchg adc pop daa and inc push dec xchg pop inc fs (bad) cmpsl xchg (bad) popf out (bad) mov mov ret out out out out loopne xchg cmp adc pop inc xor call (bad) pop fidivrl mov mov loope cmp leave xchg cmpsl add (bad) cmp in pop pop cmp aas sahf dec push pop push lahf pop pop arpl addr16 fwait mov cld xchg stos popa push aas sbb sub (bad) xor jmp stc ret dec lret iret add dec inc and sub jb je add js jp jl cmp cmp dec (bad) xor call push add xor dec cmp pcmpgtb and lcall sbb xor or jle pop mov testb adc addr16 jp pop add mov xchg loope xor xchg leave mov mov and jbe add dec mov aas mov push add mov movl inc cmp xchg int add mov rclb daa in ds inc ljmp mov rolb ds call lock sbbb mov (bad) xor adc inc or pop dec add mov mov xor pop lret xor in xor js jp jl sbb xor push popf sub jp pop push jl aam cmp mov aas xlat leave loopne out add push add cltd imul icebp clc incl loope ss push shrl cmp jmp pop fbstp add inc push dec push (bad) loopne dec aas ret xor xchg inc mov in xor inc pop cmp push jp sub je jbe js sbb pusha cmp sahf add lea add aas inc daa add push or push cwtl push add adc dec rol loopne js xchg add cmp xor inc dec add test mov fxch loope ljmp je jbe js jle xor cmp popf add sbb inc lahf add push xchg push dec cmp iret jno jns cmpl lea xchg aas xchg aas fwait add (bad) out (bad) pop loopne add loope cmp mov inc add xchg push repnz popf iret sbb or push adc (bad) fstps jae push icebp cmp cmpsl int3 mov aam out repz cmpl loope jmp (bad) xor jp (bad) sbb mov ret push lcall into ret mov and pop cli cmp cmp add sbb or and dec xor jle inc out ljmp push jb jp (bad) cld mov jl lcall mov lock hlt fnop loop ljmp add or xchg (bad) out sbb leave inc daa and pop (bad) add jb repnz repz sti cmpsl push testl in jb dec sbb jbe stc jecxz add xchg dec dec sub pop iret pusha xchg jo js andb lret mov out dec rorb in xchg or lock testl mov adc xlat sti daa unpcklps dec incl repz and jo push test stc mov mov ds mov aas sarb fdivrs loopne call sbb xor leave adc sbb fldenv loope jmp stc inc sbb jae pop inc aas push mov ret mov nop jecxz repz cs popf fistpl push xor push sub sub adc (bad) xor cmp pusha gs clc inc cld dec call stos xchg inc lods loopne leave mov out push mov les cmp hlt aas clc add out pop xor daa or inc or and loop push add xchg (bad) mov xchg js movsb add mov mov mov shrb movsb jmp add or or adc loope jmp push in call fs pop insb mov jle daa js mov pop mov mov mov jle jle jle jle jno add pop or cmp cmp add and sbb lahf cmp into push iret je js pop lret orb iret ror iret enter ror aam fadd fcompl adc sbb sbb and and pop sub sub xor xor inc xchg jo je js jl and out out out out out out out out out out out out out loopne movl sub xor add dec aad cmp out in push cmp call icebp add les add xor add inc in mov in jae cwtl aas cmc mov push outsb xor clc lahf std rolb popf add sbb inc xchg add dec leave xchg push daa cmp jnp pushf lcall pop test ja mov icebp in rolb add or or adc adc cmc dec mov cwtl jle ret aas pop mov ret shrl insb bnd outsb aas and mov fstps loope jmp stc sub lods pop fisubr insb clc jo jmp fs out loopne add xchg rcpps lcall dec repnz xor xor andl jp jb mov pop xchg cmp xchg aas lcall ss and push mov daa add push lock sbb inc je push jns add or cltd xor jl jmp js dec addl add xor in cmc flds cmp add je jbe js add jl jle xchg pop mov gs imul jne cmpsb add or cld dec cmpsl push sahf add mov decb inc adc mov add lcall (bad) idiv add adc sbb dec sbb bound addr16 inc lods imul inc andnps xchg pusha cltd test add cmp and and xor mov nop lods cmp push mov xor gs lock inc fnstsw insl icebp jg xchg mov ficom xor pop add inc jg add (bad) out loope adc mov scas xchg loope ss cmp cmpsb hlt add (bad) aaa sub cmp lock (bad) clc push cmp cmp es test dec orb enter daa xchg pop sarb leave fs mov inc cmp cmp cmp mov pop je in loope rorb sbb out cmp jno pushf ds aas mov dec add mov shr mov jb or pop loopne cmpb jbe scas js mov pmulhuw mov pop lret lcall loope out in add daa stc adc or jno xor sbb jmp test pop lcall mov mov jbe js jp push in xchg es pusha jo mov jb loope pop leave cmp add jns push sub mov cmp mov lds add pop and dec hlt popa nop fwait lock out cmp cmp add leave dec push cmp mov and adc add mov sbb pop sahf rclb pop xor je jae addb popf pop nop adc adc push pop or sub or jle,pt in adc adc push in and clc mov sarl and xchg and xorb sti pop push add aas inc dec dec mov pop cmp sub xor add mov push pop xor repz gs sub xchg xlat inc call hlt dec xchg push adc or adc movsb add and sub cmp mov jb je pop pusha popa xlat push and das nop lcall je lods (bad) push jb ficomp lahf in call add or sbb and shll sub xor addl push add pop in psubsb inc nop hlt (bad) ret imul ja add cmp cmp orl mov cmp adc push pop inc xor xchg push (bad) pop cmp data16 jnp xchg in mov iret lcall negl cmp adc xor push je dec gs repz sbb adc cmp mov sar ja add sub cmp push mov push daa rolb xor (bad) jmp jecxz or orl xor xor mov adc pcmpeqb add xor clc add cmp cmpsb cmp cli and inc pusha rorl nop setp ret int push (bad) sbb mov loop mov pop enter add jmp mov cmp aam daa add adc mov stos je adc pop loope icebp mov pop wrmsr loop out ljmp mov mov leave hlt sbb xor fisttpll das sbb popf add add xor in inc add frstor add cmpl xor add in xor cmp mov cmp and aam ret (bad) leave pop in sbb clc and and lret adc cs xchg inc adc mov cld cmp xchg dec pop mov cwtl sbbb iret lods cmp popa repnz xor je int3 add aam ss jb xchg je push neg and in add pop and (bad) mov insb add xchg outsb add mov xor mov inc cld push add pop shrb pop xor xchg adc push pop out add mov xor add cmp add pop xchg icebp (bad) add xchg jo jp pop add test cmp add daa mov cmp aad out cli lret pop add dec add and add fs pop insb inc in in cmp add nop ja jg jnp jnp mov xlat cs add sub pop mov lock add roll fs xor xor mov inc dec in dec leave dec insl incb cld aas aam hlt jl add fmull adc add jb (bad) (bad) fidivrl add lret lock cld arpl add adc or xchg out and jl in pop rorl add and int3 lret dec fmuls paddw xor or add sbb js pop es xor imul xor mov movsb push sti shrb fnstcw inc adc jno jle xorl xchg add hlt les add cmp sbb daa in call add lret xchg xor add pop int3 mov inc dec orb rorb sbb cltd xor addr16 and shr mov add das je bound add mov dec iret or pop add inc pop pop dec outsl jo ret push (bad) add push push cli lret movsb lods push cvtpi2ps call std xor movsb es lods cwtl stos js jp push jl jle pop rcr aas icebp cmp adc pop pop pop pushl hlt push jns mov add adc sarb add jb dec jae cmp add je mov pop fwait add mov fbstp add xchg repnz sbb push add out (bad) mov in andb (bad) nop lods jb add dec and cvtps2pi popl (bad) (bad) repz cmp das ds test push lock es dec add (bad) sahf inc sbb pusha pop xchg fiadd push pop xor (bad) mov add (bad) (bad) dec xlat pusha decb pop xchg or cmp xor xor xchg scas mov faddp inc ret cmp add push add in insl fs cmc loopne push leave cmp add inc ret mov jge or mov pop inc aas das inc add jns rclb mov cmp leave add cmp sbb pusha xor in jmp ja jnp pop add dec mov iret push rcrl mov nop xchg add push cs pop add jb add movzbl out sbb cwtl push push xchg add pop jg fcompl sbb sub in sbb push das mov pop xor ljmp pop shrb lret clc insl sbb pop sbb push test add cmp mov add xor mov out adc add cmp addl xchg lcall (bad) mov jns call xchg pop rorb and aas or add sbb mov pusha xor cld enter sbb dec add sbb add push push xor inc lods lret ret xor loop inc sub add clc mov jp pop add mov (bad) nop out ret or ss xchg inc mov stos rcl add mov mov loope push js sub lret loopne add aaa add ret jne mov adc sub add push jnp mov loopne cmp xchg pop push inc sub push subl ret lcall hlt add sbb cld adc and (bad) sub test aas cmp lahf xor out int xor sti lock mov lret dec clc ljmp and dec das addl pop cwtl or jle cmp (bad) ret incb pop mov in mov dec pop or push jl inc mov leave mov nop into add nop mov (bad) push sbbb xchg mov jmp inc push bound cmp mov add addb xor daa imul mov push xchg aaa call pop or sbb jg xchg cli and ds push hlt arpl pop outsb push enter sarb add sub mov or lock or es aaa add ficompl cmp cmp xchg xchg movl cwtl sub (bad) sub leave add jb je adc adc out xor fiaddl inc (bad) fsubrp mov and jl cmpsb pusha xchg hlt add xchg call sbb test cs sub je add adc je xchg mov adc mov push xor movsb sahf popf loopne mov add inc aas dec leave push shll pmaxub xacquire lret scas (bad) mov add dec add dec sub cmp mov popa or xlat cli loope inc rolb cwtl cmp movsl das stos adcl mov (bad) mov mov lret imul pusha sub lcall or ret sbbb sbb ds into add lcall (bad) add mov js cmp lds add push cwtl sbb mov jno mov and fs mov dec les aas xor in xlat pcmpeqb sti add (bad) cmp (bad) pop dec or mov iret pop pusha sbb push fsubrs dec dec pop mov ja jge aas jb je add and bound in add pop cmp jge push imul inc jae ja xchg pop (bad) stc nop sub push lods leave mov jp mov add pop adc test pop cmp outsl (bad) xor push ss mov cmp nop adc insb adc out cmp in test and (bad) aad jmp lods push cmp add dec daa popa inc ret or or rol dec (bad) enter cwtl cmpsb sbb and rcl cmp mov sbb insl pop adc cmpsb mov jb and setbe pop xchg pop iret shll in cmc fcoml adc sbb ret add mov mov nop das mov add xor fadd rolb pop rolb fcomi and jmp repz sbb dec lock xchg xchg loope cmp insb addb jecxz pop cmp jle mov mov xorb lret mov adc pop loop imul or dec xor in mov addr16 adcl or add mov lods and adc sbb mov xor inc hlt (bad) repnz pop jle add mov add (bad) popf xchg fimull out in cmpsl (bad) cmp or inc jle push jo add mov adc enter pop xor cmp mov je leave dec fcoms jb add test or mov popa or imul cmovno add cmc xor add cmp ret mov jbe xchg inc sbb add pop aas dec and repnz lods cld mov jne push push push xor jle scas iret fidivr clc xor or incb xor stc pop sbb mov (bad) mov clc and adc movsl js push ds je pop xor cld fldl stc pushf adc xor sbb popf dec sbb push (bad) xchg fwait dec xor (bad) cmp and mul (bad) loope ss leave jp sbb add rolb orl add mov ret call push mov outsl shll add lahf sti test cmp loopne mov popf hlt mov sbb jp mov pop xchg lahf cltd pop scas inc ficom jno xchg mov rolb xor cs popf add (bad) sbb push adc aas out cld mov add or xor pop out loop pop cli movb loopne jb dec sbb push scas adc test mov dec sub icebp lds pusha add push cmp xor dec dec ret les add aaa lea jle fistl sarb sub push inc xchg cmp and push call shrw sahf push or jo add pop cmc psubb inc add (bad) xchg push fdivr dec jp add pusha xor xchg sti add add mov add xchg sub sbb call mov ret hlt add clc or test cld ret (bad) jo fcoml js mov adc push lock sub xor punpckhdq push js jb pop mov rcrl shr repnz testb test sub cmp add dec jbe (bad) sbb xlat aas or idiv xchg adc add scas xchg aas les andb (bad) aaa pusha dec movb or dec add push push les jp dec ret or jle add push push leave mov add cs and sub jne xorl loope (bad) sbb add ja mov fnop in mov ret aas js push jbe mov mov pop fisttp fdivrp mov xor fcoml adc sbb and sbb or les lret jbe pop rolb pop mov sbb inc adcl aas dec xchg call fcoms addb pop es add lock and sbb daa xor sbb pushf mov in ss mov div xorb or add xchg hlt mov jne or or insl cmpb psubsb std (bad) cli or leave and inc pusha loope cmp cmc dec cld dec daa add sub in hlt fcoms add movsb pop (bad) or aam pop mov loopne xor sbb je daa jp dec push ror add aas mov adc push pop jns sub add adc lock cmpl xchg cmp push lcall mov les cmp daa inc (bad) je imul jg mov xor rclb jo add pop or adc sub mov sub in test xchg popf or add fnop in xor cmp pusha loopne out mov mov or mov add jb je dec sub push rcll aad mov pop add jmp push sti push stc cmp add add mov mov xor mov test loop shrb orb lahf pop mov adc sbb add mov enter (bad) jecxz (bad) ret xchg cmp dec add iret loopne cmp shrb lret sbb cmp nop mov cmp fs mov andb xor add sub push and in push ljmp rorl jnp add sarb push outsb jo cwtl cmp (bad) jl dec add mov pop add cmp test daa xor cmp cmpb and add mov cmp sub xchg clc pop add add add sbb dec sbb add adc and cld in adcl cmp mov leave sbb or into jns sbb xchg sub enter aam popa shrb outsl sub add pop arpl and mov test xchg add inc xor inc xchg outsl mov add pop xor and inc (bad) push jle negb adc add test xchg add movsl aaa leave lods scas insb mov pop cmp dec xchg ret add mov jecxz repnz add inc cli sahf pop pop lahf imul inc mov adc pop mov push mov cmp enter pop add in xor loope jge add mov sahf leave lods rclb dec mov fldenv jo adc cmp cwtl push add in dec xchg je xchg adcb mov xchg cmpsl pop lock negl and cmc call pop sub xchg pop xchg loopne sub cld into cmp jle dec ljmp xor or ret sbb jle orb ret subb jae inc pop xchg movsb mov add fstps pop in add mov mov in add mov scas fnstcw mov mov add fs call add iret jnp cmp cmp push dec pop in or add inc clc sbb xor cmpsb rcrb ret pop push jle cmc inc or in in add out cmp cmp fnstsw and mov xchg js lcall or jle mov (bad) cmp bound sbb add movsb cltd loopne adcb pop jmp flds add popa das imul sub int3 inc ljmp sahf pushf out pop ret dec pop fstpl loope je push mov sub das sub xchg jle aaa dec ror add ficoml outsl mov addb pop pop xchg xchg lcall xor sub cwtl hlt cmp leave inc shr outsl stos or mov addb add or test in add insb in add mov cld jle mov enter (bad) sarb pop push pop jnp ret dec xchg ret sarb add or adc add fnstenv outsb push or loopne add and push pop xchg sarb out add in mov or mov push int3 push cmpsb add jo loopne ss sbb cs cmp dec add push das popa inc mov stc jg pop bswap scas iret out and ret add pop es jmp inc clc push mov dec bound add shrb aas jbe negb (bad) rolb jo lock fadd or add sahf in and outsb pushf pop adc push mov rorb mov inc mov push cmp cmp adc adc data16 or mov sbb (bad) add cmpsl mov lcall test cli pusha sarb or sbbb and cli add pusha jl mov stos cmp aas daa call inc pop cmp call aas sahf inc (bad) cmp arpl insl addr16 mov mov sbb push icebp cmp mov mov mov or xor cmp xor sub das add fstpt aas in jmp sbb jbe dec inc add les lret xchg jnp pop es iret mov mov flds fst fnop xor fimul and sbb xchg adc (bad) fs push nop or push pop movsb or lods orb dec mov or mov int3 hlt pusha leave (bad) adc cmp add je or adc adc sbb add ss js cmc imul leave mov mov les pop cmc aam clc cli aam add cwtl push add sbb and cmp lds push in xchg pop mov repz insb call xchg mov push in mov movsb test push daa ljmp cmpsb push nop je or test (bad) xchg mov leave and sub movsb cmpsl add (bad) test sub ss enter push add mov adc test and sub xor mov add loop pop out cmp jl fmull add mov faddp loope sub fwait xchg loope pop clc insb inc add je ret jo add cs dec movsb mov mov pop pop insb sub mov notb add xchg faddl sub in xchg pop mov stos fs aaa sub sbb enter adc loopne xor pop cmp loopne test mov xchg inc cmpsb fimull xor jo inc fimul adc cld inc mov mov aas aam cmp sbb cmp sub xor iret mov push leave jno add adc mov mov nop in repnz dec (bad) aas pushf inc mov lods in mov or mov std into adc add mov in nop or call push inc adc xchg nop das (bad) push add lock add sub mov mov push nopl fchs andl xor mov faddl sbb xor push sub jns cli adc and mov push add aaa adc ret push push sbb (bad) push call enter (bad) mov psllq sbb jecxz push lea test sub pop add or pushf inc and add and mov jo push add adc and cmp or add sub jg clc mov add (bad) push xchg mov adc test push inc push pop mov add push ror xor or add push add cmp mov jne mov or mov je sahf push pushl movb jne cmp (bad) mov push push push mov push sbb mov add fisttpl leave je adc sbb or jmp dec jmp sub call outsl (bad) fwait dec mov loopne pop pop pop push bound add inc sar repz mov add fwait sub inc add rcrl add add and dec or jbe add sbb (bad) je jne pop inc test mov xor push add addr16 mov addl rcrl shr outsb lods sub mov leave add pop push addl sub loopne incl bt (bad) cmp adc push push xor out sahf lret mov pop add add test pop ret fadd adc out popa es add push lock outsb and push (bad) mov or xor inc xorl adc sbb jle cli mov adcl xorb add add push mov lods mov add call add xor cwtl xchg rorb sub mov cltd push rorb aas fdivl add pop roll dec shl nop arpl cmp jl sbb push sbb add cmc add or push push shll mov xorl mov dec cwtl adc (bad) jmp mov pusha cmp inc add das andb or or cmc add shlb loop adc mov add rcll mov add and and daa inc xor mov cmp rolb add pop push push adc add (bad) dec sub push push xchg loop pop add clc mov xchg push xlat add pop mov mov xor je sbb dec add mov cmc pop fdivr repz push sbb add iret fwait jae movsb roll xorl dec xchg test lods rcrb add mov and dec imul add loope (bad) into mov mov cli insb inc push add add adc dec test iret add (bad) insl ret add enter adcb mov adc cld imul add xlat add faddl push lcall ret inc insb lods cs add pop scas das cbtw push movsl add (bad) mov sub sbb mov adc xlat sub add movsl lcall ficomp jmp lret mov add loop test xchg scas (bad) nop mov xor movsb push pminsw clc lcall xchg jnp out add xchg test add es mov or add mov sbb aam rcl add inc dec scas mov into adc add pusha cmc (bad) mov negb out jo add inc daa cmp lods pop add (bad) mov xchg inc movsl andb push xchg jecxz (bad) daa add add or sbb repnz aam dec sbb aam insl add ror pop add pop xchg mov pop push add roll jne jl add (bad) and xor mov cmpsb jg pop mov cmp ja push loopne es push xor nop scas test mov add jmp lds mov add aad push andl push jb jnp push addr16 inc and add push sub cmpsl push test add add mov (bad) xlat cmp pop xchg stos out adcb and sarb adc pop add dec lods xlat dec push fdivr stos mov enter lods push out ljmp pop xor bound inc xchg jns into push jle add aam xlat js pop add push jne loope iret sbb cmpsb nop add mov mov jmp subb pushf xchg mov inc pusha jns jg add xlat test in pushf add fwait adc push ss mov jno add fsubl mov cmp push add and ds je int sbb add cmp jge adc daa jge add in jae aad push clc test add or add daa aad and js xchg fcomps mov add lods pop sub and in dec inc dec ret push imul arpl jne mov addb push inc mov inc add cmp cmp xchg jae or or lds jno adc pop or je push sub clc pop bound jmp ret xorl call mov inc leave xlat add sub rep or jmp adc adc cmp jae push inc add inc lock mov add add xor shr add roll push mov adc (bad) cmp mov or jns pop and pop or les jne in rclb je jne mov push outsl arpl inc in gs or clc outsl out stc arpl addb call scas mov inc cmp push inc dec sub popa fidivl loopne divb jb outsb je adc dec dec push inc inc push and jmp push ds mov jns (bad) push clc and sahf mov lcall push cmp jge in jecxz insl jecxz data16 aas bound jne push push outsl jmp push sub xchg push jne scas pop nop rorl push rorb inc in sbb icebp jle (bad) fidivl outsl sarl pop icebp jns inc mov daa dec outsl out xlat dec push dec repz pop mov add add push and add mov xchg sbb and mov jecxz,pn dec xchg adc in ror cmpsb call sbb or xchg mov (bad) push mov les xor dec popf pop aam test mov arpl lcall inc lds mov add (bad) clc nop sti je arpl jo fnstcw mov adc push jmp std pushf lret push mov sub adc stos fucom cmp mov jge mov adc or js fsubl rorb fdivr bound push xchg jmp scas test into (bad) fldt dec push xchg fdivrl inc mov pushf in mov or and mov repz mov push add js xchg scas fdivr shll jne ljmp mov cmp leave jnp xlat mov fstpl mov in lretw dec sti cld mov adc cmp fs inc adc jns xchg pop frstor (bad) dec add sbb jg jmp out (bad) in lods jne pop sbb add gs lock jg jle xchg insb dec inc fwait inc jb ficomp inc add jbe mov out addr16 in repz mov popa leave and scas push cld push adc stos (bad) bound adc int xchg ljmp les and hlt sbb clc lods outsb adc std jle mov pop jl sbb sbb sub push dec jl test inc fcmovne lcall int3 mov lods jecxz js or enter mov dec push adc gs dec push sbb aam push addr16 int sub icebp add push cmp lea (bad) or cmpsb arpl cmp jge jb sub xchg pop mov lea mov test mov and lret nop fcomi sbb in into and or aam jmp sahf out sub fistp notl pushf clc fistp adc jl jmp imul sahf adcl jno arpl pop inc mov jg and into pop mov jnp push and mov insl movsl pop inc stc mov sub dec pop fdivs xor mov jecxz (bad) fstp lret mov pusha xchg cmpsl xor iret call mov jecxz push xchg call or daa adc cmpsb test push out jp bound shll test jle jecxz (bad) dec add lds mov shl movsb mov sbb lods out xchg add push outsl inc lock iret repz rolb ds adcb shll test dec lret fnstsw in xor outsb mov push ss pop outsb pop pop stos addr16 enter sbb lcall aaa add imul (bad) inc sub add sti mov jl in lods mov sub mov test adc stos push orl ds out cmpsb cmp and in sub loop sub (bad) jl leave mov xlat imul rcrb aas insb lcall leave jno jno add (bad) lods fsub push sub sub imul pop push lds jmp dec xchg out mov cs cmp into adc aas lock js ret lahf xchg pop imul es lds lret cmp fdivs inc or mov dec push jne inc xor cmp imul adc int mov cbtw cmp aad inc push sbb mov mov imul popf leave inc push xchg push hlt mov adc (bad) (bad) (bad) je lcall dec fst sub enter repz sub cmovge push xor push xchg adc jmp mov adc popa fnstenv bound out idivl (bad) lods cmp xchg test enter nop out mov mov out push int adc push pop add jne (bad) push gs jo addr16 xlat push fldcw lea xor (bad) pop jo dec mov push in daa xchg aas icebp push mov lock cmp outsb mov add aad movsl jl xchg sub out xchg fwait xor shlb cli and je lods jl add icebp lahf dec xor xor (bad) mov outsb jnp dec out mov mov sti xlat fidivl pop mov cmpsb shl xchg mov dec test cmp mov stos leave mov push lahf into lea push out xchg data16 stc or rcr lret mov mov leave jo cld xor loop dec outsl inc xchg cld pop mov arpl inc xchg sahf xlat inc sub mov lahf popf fisttpl xor int popa hlt fwait pusha out roll add push or cmp fwait sub xchg cmp pop pop pop push mov cmp or sbb jb sbb jne and test jge mov lock imul push call int3 clc jge mov cltd xor sbb xor xchg (bad) sysexit inc jb mov movsb add fldcw fwait imul xor mov (bad) mov bound in sub jle outsb mov dec pushf sbbl mov cmp imul cli mov push sub and roll addr16 rclb aad or js jge sbb pop sbb pushf pop shr xchg xchg stos xor (bad) insl add outsb jg xchg jns mov cmp inc movsb mov cmp push stos lock and or iret pop jb imul xor es cmp movsb test ljmp adc lret xor mov push mov pop add and cs sub imul and stos add (bad) rorl test movsb inc shll insb or push (bad) cmpsb pop out add fnstenv rclb adc roll pusha (bad) mov pop mov jecxz mov call adc xor mov inc mov fcoms xor cwtl push ds or int3 sbb aaa adc idivb mov xchg cwtl xchg or call leave jp rcrl cmp xor mov pop mov mulb push jno push test or shrl je jae ja sbb or mov jb int3 movsb push mov cmp pop mov fidivr mov pushf sub std xchg jns push xchg mov outsl inc mul dec insl sbbl inc out test jno jmp push xchg adc call std pop fmul les jnp insl les scas pusha xchg (bad) pusha xlat addl leave bound movsl dec mov bound lret push js sub mov (bad) mov mull or movb mov in nop sub adc xchg ja dec icebp jp or add pusha mov sbb aaa push out sbb loopne test push fnsave loope cltd (bad) repnz jecxz pop lds add push mov das cmp into inc into arpl cmpb iret jns pop addr16 lahf outsb sti ret dec scas pop push repz mov mov jmp adc insl sbb int xor adc xor lea mov inc out ss pop aaa leave ficom sbb rolb inc adc mov arpl repnz xchg inc jbe push mov movsb sahf lahf or insl stos andb adc gs mov clc jno xchg shrb popf mov push (bad) outsb aam out mov ja (bad) sti cmp ret sub inc inc loopne jne lods dec imul into push cmp adc insl push jnp sub sub or out inc or mull push jg pusha ja lods ljmp (bad) xor jne out jmp push xchg adc xchg imul xchg mov pop mov jmp jb adcl lcall pop or push cli std add cmc adc jmp jne mov (bad) je rcl adc movsl pop loopne mov and lods dec jnp (bad) adc call hlt sbb xchg sub mov xchg xchg jne jno mov ljmp sub xchg dec push lret jo (bad) cld bound std mov mov (bad) mov shrd jg out pushf mov cs add inc (bad) rolb hlt xchg cmp ljmp (bad) setb pop inc leave enter scas imull and add mov xor xor ss jge lea call stos ja and mov les add or mov dec sarl iret std dec xor arpl xorl adc mov jns (bad) jge movsb mov push mov mov xor loop in sbb (bad) mov loop decb fidivl and fs insl icebp push (bad) lcall mov xchg push pop xchg sub imul push jp rcrb and lret inc push xchg mov rcll fs push dec int loopne insl popa pop inc lods jge fcoml scas push pushf pop lahf aas sub (bad) pcmpeqw mov sub dec inc mov out js jnp dec jge mov scas lret in cmc sbb pop inc bound leave sbb (bad) xlat push inc (bad) and jb sub aas or rorb xor mov stos incb cmc daa jl dec cli int int or cmpsl lods (bad) in xor cmpsb push sbb dec cmp popa (bad) dec add xchg xor mov loop mov out imul dec mov push std imul inc (bad) popa xor mov call dec lods iret xorb xchg jg mov mov cld xchg add add cwtl in clc push std and ja out lea inc in (bad) addr16 adc es mulw ja jb stc fistpl or rol adc inc cmp incl and sub dec cmp stos push sarb aas mov popa nop cli mov dec pop imul subl push scas xor movsl pushf aas fcmovnbe push stos pop test pop xlat mov fidiv mov lods rol (bad) xor getsec cmc xchg mov jg movsb icebp ficompl and push push push pop push movsb add mov add jle (bad) pop sarl dec int aas pop test dec mov push jae dec sub daa into stc adc xor or ljmp pop aas pop sbb fcmovnu inc jbe mov xchg loop cmp stos jae sub in sbb fbstp nop cmp cmp xlat in aas in (bad) je ja push mov or ss xchg popa lods and arpl mov push mov sbb dec out ret cwtl jb add sub fnstenv cmp dec push cli je stos dec test enter ljmp add mov pop cmp dec in jp xor mov aaa (bad) addr16 xor sbb cmp push nop and push lret xchg jge mov bound xor jno push pop icebp jne int aas or xor and enter push sbb xchg xorb incb add dec repnz in js sbb push sbb (bad) pushf (bad) sbb addr16 dec addl push ret cmp (bad) xor mov nop add push dec outsl sti das cmp add mov arpl and out push out sbb lret xor out xor fstl out push pop jo inc and cmc add cmc mov into cmpsl stos icebp xchg push out adc call iret sahf push lods movsb dec dec aaa subl (bad) lahf pop lret mov imul fdivr sub sbb sbb mov test cmp mov cmp push adc inc push stos pusha lret daa adc lock push inc movsl leave std hlt dec jg xlat or ret sub jmp mov cmp or cmc dec mov fdivrl stos aam mov je sub lahf out hlt arpl dec shlb adc outsl dec and fisubr movsb sub jns scas (bad) fnsave push loopne push jb add dec mov inc mov enter pop pop repz xor out adc pop ret lock push and sahf fldcw sub mov call pop inc repnz aaa addr16 cmp xchg les int jne les in push pusha sarl jge inc aas jnp adc ret mov iret or dec call pushf add and mov repz xor or je jl (bad) cwtl sbb push sbb jns xor jo call daa push stos pushf jns and test sub mov pop dec adcl (bad) xor inc push sbb add mov lock enter add xchg jecxz mov daa and out in adc pushl sti cs pusha sahf les add enter pop ljmp out fwait sub movsb fistpll das push mov cmc addr16 lahf jg cltd sbb ret push lea push out cmovp push rcrb stos lods fldenv ficompl imul aad into aaa push fwait movsl data16 mov sub cmp rcr jbe lahf xor inc adc test pop pop pop jno pushf int lcall enter sub ret mov data16 mov cmp fbstp cmp cmp sub dec sbb gs fldl pop xlat repz aaa cmpl inc push repz movsl dec and adc (bad) mov aaa ror or daa mov inc xchg out gs sbb xor push push xchg out or movsl (bad) xor divb cltd mov outsl xor xlat push (bad) data16 or rcl pop cmp (bad) cwtl fsts jo stos jne mov out rcl xor lods sbb (bad) adc das or pop push mov mov lods fstps mov mov test jne jecxz in ret mov (bad) out sub in aas mov call push sbb sbb cli out scas or cwtl cmovbe stc mov jae out stos in push lahf fstl std push into xchg lret mov jmp adc (bad) ljmp pop mov pop lea outsb (bad) jnp inc data16 mov mov xchg popa mov and out lret push xchg mov xor cmp (bad) jnp mov loope mov fucomi insl mov or outsb in and sbb add mov push scas leave jecxz notb add or stos xchg mov ja push insb adc sub (bad) mov pop shrb xor aaa decb (bad) divl mov into add (bad) jl mov je dec xchg aaa mov push loope arpl clc lahf adc fs sub pop sbb lahf jmp push adc pop jg sbb test push call add imul mov add lock inc cmp hlt rcrb (bad) xchg rcrb mov in jne in clc (bad) into sub in enter (bad) out pop jp data16 mov jg in cmp mov dec pop icebp movsl sub mov cmpsb pop push les fist fistp add pop in push fisubl cmp aas or lahf imul loopne and movsb (bad) jecxz xchg or add ror dec (bad) notl addr16 mov or and neg inc mov push ret test or in mov iret mov xchg paddd mov rcl push add xchg add and push incb lcall loopne cmp test xor ss and pop ret js or adc in xchg leave insb mov inc (bad) insb fwait mov sbb or lret es sub or xor enter adc xchg dec lea mov out sbb jae adc pop pop arpl outsb sbb xchg aaa in faddl movsl xchg cwtl or out push imul pop addr16 adc gs mov and mov ret imul out xor jge mov xchg orl inc sbb dec mov popa int3 xchg mov jp xchg ja and ret ja movsb cwtl in jb rclb fnstcw pop inc mov movsb bnd mov inc adc add or cltd addr16 xchg in repz out loope popa cmpsl xor ret mul adc inc push push inc pop (bad) repz stc dec lods jnp mov ret (bad) pop inc pop mov ss pushf lahf aam push dec (bad) fimull mov jb push or stos (bad) arpl in ret enter nopl rol loopne cmp (bad) sbb in (bad) sti jno popf push repnz dec add loop out xchg mov lods inc add fistpll (bad) popa lods mov sub out call fidiv inc mov incb add jmp insl das loope push push mov ljmp test cs dec sbb add xchg and xor or stc leave adc dec lds mov in fcompl shll dec cs mov cmpsl adc inc push pop dec (bad) fisubrl lods add and cmp pop (bad) or add sti (bad) push loopne mov push scas ds js dec pop aaa ret sarb xchg mov je test sbb add mov jb lcall adc or mov in pop inc insl lcall sub lret inc test jns inc and hlt loop mov mov adc mov sbb out negb (bad) push rclb mov pop subl or pusha out mov mov xor icebp pop rorl (bad) data16 pop les rorl repnz or imul stos das cmp adc mov xor movsl mov mov jo or add cmc test mov lods jo inc mov mov xchg jb sub jp enter or sbb pushf (bad) shlb mov pop nop dec cwtl cli xchg testl das loopne in push mov test test jmp aaa lea out in sbb cmp push sub add mov xchg aaa cmp mov fnstenv sahf not inc daa (bad) jg ffreep xchg insb xor cmp ljmp or xchg push mov dec xlat sbb and mov fucom pop lret (bad) loop or xchg adc cli push cwtl mov add mov xlat and sbb addr16 sub orl add inc stos sbb inc xchg xchg push or dec mov arpl dec dec mov mov dec es ret mov loop mov xchg test adc jle rcrl daa mov sub push fwait (bad) mov sbb sbb mov fstpl outsl gs jecxz xchg mov rolb test in lret daa jge inc jnp (bad) mov push inc ljmp xchg mov loope mov loopne push dec mov inc and sbb add add cs int3 push scas gs push std int3 mov sbb push and pushf shrb xor dec (bad) mov mov xchg (bad) (bad) daa leave jbe dec (bad) xchg xchg cmp lods int loop popa sbb and flds sbb jns call push dec adc sbb lods push push or jle in ret cmpsb movsb and xor and pop insl out and stc inc or adc mov das mov aad cmp mov fisttp add loopne xor dec imul xchg movsl ljmp dec pop jge dec js mov std int push movsb or data16 es ret mov mov inc or daa xor adcl bound clc mov jmp sbb jne push xchg sahf (bad) lea sbb leave xchg aas or (bad) aaa shl push scas xchg push inc pop test jg pop mov int outsl call or push dec lds je int3 xchg mov pop clc ret sti aas ret lcall (bad) jne jmp (bad) push dec ja rcrb data16 xlat push insb sbb cmp lret jge ja test jl mov rcr mov repz mov mov inc jae cmp mov xor aam bsf sbb xchg out aad outsb sbb mov outsl and aaa orl mov dec add jno xor jmp iret movsl iret xchg xchg in mov sub fldenv push adc xorl dec stos xchg push push inc push dec lock popf jmp fsubr sbb in in adc int3 xor nop mov outsb dec mov scas cmp mov or je cmp inc ficom stos ljmp mov lret pop push cmp in sub fstpl mov pusha loope pusha add (bad) into (bad) xor inc (bad) aad mov pusha xchg xchg pop mov sbb imul or mov sar gs lock aam mov dec add sub dec xchg push mov (bad) mov sub cmc xor sbb mov lds jmp andl sub push je es mov mov inc clc pusha and je xchg pop fcmovnb sbb or push fdivr ja cmp aam in and fldenv mov popa inc sahf add mov lcall push pop stos push cs or sarl push rclb std dec hlt cs mov sbb (bad) mul sbb fwait outsl push pusha mov push lds jae (bad) lods (bad) fmull push (bad) jae imul popf (bad) push test sub fnstcw fwait add fldt jno ds sbb sbb std jbe aas jne jne sti push mov sbb jb cmp int shrl push mov sti jno dec movsl lcall jo jnp mov scas cmp push and push and or jno mov push (bad) into dec loop mov xchg add sub push call sahf jnp fcmovnb push jns mov (bad) sahf fsubrs test imul cmpsl mov adc pop fs cld mov mov repnz ror stos mov lret jno mov xor jp mov mov xor pop pop fildll cli ja aad arpl popf mov dec mov outsl mov xchg mov add jae adc outsl sarl mov push mov mov fcoms cmp (bad) mov sbb js mov jb jae pop mov xchg cmc dec int inc jp cmp rorl sar push sub lret push inc repnz sahf pop sub dec push sub gs xor jb xchg dec push jb sbb insl dec (bad) repz and faddl das mov imul fdivrl rolb cld dec sub sub push xor pop inc or cwtl cmp xchg stos lds scas adc das movsl and cltd push je ds (bad) lret dec pusha pop int jae fs sub out xor pop mov int aad stos fbstp ss mov fldenv push inc shlb out sub aaa mov ficoml jbe cld mov popf pop xor jne or out lds cmp (bad) in or clc or dec push mov adc aaa jne int in pop subb lahf mov mov cltd lret pop jmp push jmp push insl push test stc out cmp in pushf dec mov xchg xchg pop push xchg inc or and mov push mov sub dec xlat out fsubr pop stc ret arpl aas mov out test jg and in insl jge (bad) jge (bad) stos shlb imul out cmp pushf ja dec pop adc outsb ret xchg fdivrl out xchg mov das add sbb add dec push rolb in pushl xlat rorb and loope jne jbe mov aaa lods adc or xchg loop sub (bad) mov jge stos mov xchg mov jge cli or in sahf jp pushf jns pushf aad sub jecxz or cmp lock (bad) push sbb outsl or inc mov sub sbb jb sti leave mov jge push and (bad) stc add cmp and xchg ds les outsb dec movsb add dec push movsl in xchg adc jmp hlt aad scas pop lds or add leave dec and test dec xor push push nop jl arpl fcoms lahf (bad) js dec pop push pop (bad) lahf push dec and xchg (bad) mov outsl cmp push cmpb aas je fcmovbe xchg roll test xor std cli mov cmc push lods pop arpl pop xchg insl ss popf push sbb scas lock xor iret scas sbb adc mov fsubrs xchg mov jmp (bad) rorb aaa jnp sbb out and mov ds negb mov negl mulb fs loope ja ret sub repz push jmp imul fistl icebp push mov mov das dec jmp inc push xchg bound dec das adc test dec std (bad) xor addr16 push or mov notb pop or cmp insl push and in fstpl xor pop or ret ds ljmp pop or push imul test jmp or iret sbb aaa push mov hlt xchg cs or add mov mov incb or or add sahf pop jb jecxz rol mov jno cmp pushl pop in jbe repnz outsl pop cmc fnsave sub mov xchg push lcall mov fisub mov test cmc add xchg in rorb sub mov adc xchg mov (bad) stos xchg dec (bad) sti out mov js test xchg insb inc jbe push outsb xchg pop mov inc add lods pop sar aaa mov stos lcall inc cli jge lret sar or xor pusha xor dec fnsave inc std loopne aad cmp lods outsb push push pop ljmp fs pop sub insb in sub sbb cli loopnew adc add hlt (bad) lds bound ljmp mov ds xchg into cltd cmp or xchg cwtl out in in pop (bad) sbb pop adc mul sbb scas dec fisttp xchg test xchg mov jg lods cmova movsl adc adc lods xchg xor and dec popf cs mov xchg mov lds push inc js pop add ret subl push pop and lcall lds add add mov in lcall jno insl das xorl (bad) jmp (bad) in or icebp inc aam hlt aas mov loope xor xchg out mov lcall lds jg rcl push loopne int dec jo sub outsl je lock std xchg aaa test ja adc aad sbb fisttpl add iret inc ds mov les prefetch or jb pop or push in aaa dec mov add add adc (bad) mov sbbl adc and dec or or mov cmp insl in sub cmp add push mov ret 