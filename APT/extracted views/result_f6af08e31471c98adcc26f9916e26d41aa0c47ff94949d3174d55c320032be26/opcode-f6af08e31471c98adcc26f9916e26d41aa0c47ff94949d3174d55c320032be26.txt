call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov inc xor movzbl mov mov pop ret mov mov add push mov mov or stc xor call mov mov push hlt rorb cs sti jg test fdivr ljmp push movb movsl add push lds push sbb cmp sbbl mov push pop idivb sbb or nop and or sub mov inc cld push push add sub fdivr fild xor sub je iret xchg (bad) and repnz adc sti pusha jge in mov push push adc sbb or fadds push fsubr pop faddl sub aad mov add mov mov add test mov add mov mov sbb inc add sti inc jb jne push push sar push pop mov jge lea movsl movsb dec fdiv xchg adc push (bad) dec faddl in fs adc in js inc es sub cltd inc scas inc cmp add (bad) in andl lods into loope insb or mov push jge add xchg int3 popa in aaa inc fist loopne je and push fs cmp add adc push stc add in xor push cwtl nop (bad) jle xchg aas adc jae pop sti add push push push nop cwtl fsubs pushf pushf xor in imul shr or fcoml test outsb mov sbb mov mov or subl or je push (bad) call push pop jmp push ret add mov jmp push adc pop (bad) mov push dec out test mov fcoms fiaddl in (bad) jbe jmp sti add sbb je mov stc test mov jnp xor mov sub roll jne mov icebp mov lods nop mov or stc add add dec testl push add mov mov cmp stos and loop pusha or shlb jecxz jecxz notl cmc lea jne inc inc dec mov push jle push subl daa and or adc test addb mov fildl jl sbb fadds (bad) sbb lea push sbb je rorb pop sti lret xchg movsl mov jmp in fimul jge insb jae fldt push les lahf fcmovnu insb popa xchg lea mov push iret sub jns inc mov adc jne pop ja gs push add adc enter adc adc push (bad) pop mov inc gs pop loop cmp push rolb popf sub scas mov push dec add pop loope adc push clc (bad) (bad) jne cs sbb and imul jne,pn popf out sbb in cmp mov arpl and push data16 push fisttpl pushl and sub sub xor sub xor sub test aam lea sub xchg in mov sub sbb adc xor fwait movsl nop arpl add cmp imul (bad) or xchg cmp invd lods test clc inc arpl dec data16 (bad) mov loopne cmpsb fs scas scas sub cs cmpsb in xchg call add fs dec loopne add lds mov incl push sub loopne inc ljmp sub or pop das xchg push cmp cmp inc test ret mov pusha add fldt orb push sbb mov std gs push mov adc adc ret sti sbb xchg (bad) push push xor and adc (bad) xlat adcb (bad) push fs sub mov push xchg rcrb cmp subl sbb fwait cli stc sub xor data16 jge stos movsbl out ret cltd push pop idiv or mov ret in or adc inc cli mov lea mov push daa in ret stc repz push sub push sbb (bad) or push push push pop adc pop lods sbb in or mov aam mov int jge movsl movsl scas pop shrb pop jnp inc mov mov push data16 leave pusha das sarb repz push cmp xor (bad) in mov (bad) xor loopne push js xor mov sub lea pushf xor sbb pop inc cmp adc and movsb mov push pop mov lock push js push flds mov jnp ret icebp and clc mov mov aam sub lods mov cli enter add jl clc pop push shlb cld add mov int3 sub jns mov bound mov lock test inc xchg (bad) pop loope repz cmp sub mov call cmp adc mov pop jmp and or xchg lahf push sbb hlt and dec lock cltd lock sub add inc cmp test pusha xor push cmc adcl push je mov outsb call divb push push adc pushf add adc pop adc push or (bad) addb jle or in xor xor (bad) mov push or pop pop stos inc js push cmp sub in lds cld and dec mov cld iret cs push mov or mov xor inc or (bad) ljmp or pop cmp jle mov xor inc cmp jl lea pop das jbe sahf xchg mov test pop bound inc (bad) aam je arpl xchg leave xchg pop mov sbb jns js mov cmp (bad) jl xor jo mov adc cmp push mov insl fs mov add fadds mov test lods movsl cld (bad) aas loope adc jge add out push inc inc add mov pusha sub add and mov xor pop mov test test add or sub xor data16 in gs pop jo in dec cmpsb clc lcall (bad) xchg pop push sub popa mov lock std sub push sub cmp jge push pusha or mov leave mov insl loopne sbb push or pusha fcomps scas or jne adc add add mov xor (bad) jne in sbb int pop mov lahf or xchg xchg addr16 nop and je or mov test shl js notb adc add clc inc sbb and int3 cwtl add sbb cmp inc xchg and int3 mov into inc fwait push inc enter popa dec fwait dec push call js js mov loopne in test mov or sub pusha add xor or mov pusha insb or sub pop aam test lret mov inc dec add or stos adc dec push mov mov push mov jge pushf mov cli std mov fcoms sti push or or std cmp mov add clc mov pop jle mov push movsb pop (bad) fstps test jmp jbe (bad) dec sarb and push fs shlb mov inc fs adc sub and ffree sbb lahf cld mov lock clc cmp jbe (bad) xchg cmp imul push ja movl jge jb sbb cld jbe add dec repz mov mov dec add leave xor xor pop jle sti decl add add jmp movzbl add or add imul icebp xchg movsb sub mov shr (bad) mov cmp jb cmp rclb jne sti aaa xor and pop xor loop or dec and in test jl insl adc insb loope es test xor lock hlt sbb jecxz add sbb sub les add add xchg or push or mov lods mov ret mov xor popf sti lcall xor add push jb ret mov outsb scas sub or cmp xorb and in das mov mov adc imul je cmc pop sti or imul out cld xor mov pop push jne inc xor outsb imul lods push push push xor mov (bad) jne xchg (bad) int cwtl or sub in fsubs xlat ja xor sar into add jnp mov adc lods and dec sub adc std sarb (bad) test test (bad) loopne nop xchg incb (bad) rclb sti add dec fdivl push loopne sub mov fnop lret push fldcw pop mov sbb sub xchg mov mov mov pop andl add (bad) out outsl pop sbb sbb jnp sti pop cld mov mov cmp jne or jg add adc jne or push jne int jae or jne add jne or mov or or add mov add mov push add lods mov outsl sbb je sbb neg jbe cmp out mov jne or push loopne cmpsb jns or rorl or insl mov imul add adc xchg (bad) jne mov fsubs out je bound or adc jle fldt and xor sub jl or adc pop pushl pushl stos or iret fildl add cmp sbb or inc adc inc adc add test dec cmp mov xchg xor fiaddl rorl outsl sbb pop cli into frstor xchg push adc lea jmp jl push jl push push pusha js test fwait jb (bad) cmpl sub jge xchg insb jecxz add xor push add cmp push aas pop inc sbb fimull pop sbb mov jmp lock fisttp dec jno adc movb or sub pusha imul mov pop add and into cmc into jne cmp inc ficomp sti jo sti jle fild dec lea jnp cmp dec outsb rorl pop (bad) call rorl jmp mov cmp mov adc (bad) mov sarl in adc adc subl (bad) flds lods sbb sti pop mov dec dec loope sbb fcompl clc xchg lock add xchg pop out adc jmp ds push pop add jo inc cmp mov sbb mov push jmp adc stos fcomps mov cmp cmpl nop test pop cmp push jb pop lds mov adc cltd and inc fcmovnb (bad) clc or hlt adc arpl loope add add pop cmp and mov mov push mov push sti mov add sarl sub not sbb test dec ljmp fstpt testl mov fdivrs mov add xlat xor addb pushf sbb cmc sub mov pushf pushf fldl push push and mov pop ss pop lods push adc adc add sub or xor mov cmp fadds add xchg sbb xchg and and and (bad) xor xchg inc xor pop adcb out es inc cmp pop or cmpsl cmp add inc inc ds hlt inc fbld mov fsubl ja mov adc jae add xchg mov sbb mov xchg jge add pop mov sbb out add jle cmpsb into inc call or test in sbb sbb mov cld pop or and loopne add fld mov pop je pop les mov fidivrl jmp imul cli das int and adc js jl cmpb je mov shrb gs and pop loopne sbb pop hlt je movl or pop dec push cmp movsb rclb and or sub pop inc xor clc je cmp push dec cmp mov (bad) jne jmp pop clc add imul mov or call pop bound mov adc test mov mov out mov push xchg mov insb testl out sar jg pop (bad) or les ja gs in push or inc cwtl je push lock inc aas fmuls fistpl adc hlt pop mov xchg in push loopne fsubrl lea or movsl add loop jnp es pop sbb sbb je ret enter mov cli or movsb mov mov xor xchg mov fsubrs jo push push shlb or push (bad) ss in insb or stc out aas pop icebp or cmp addr16 mov inc cmp sub cmc insl dec iret jbe les mov jbe xor push xlat and cmp adc pop xor push xchg sbb int add push cli js bound inc xor mov push sbb idivb mov mov sbb or pop push jnp pmulhuw lods and loopne dec mov sub into lock mov mov lock in fcmovb sub dec add fcompl lds imul jmp loop pop dec xchg xchg out call push cwtl push push int3 es fs lock sub xchg sbb sub jmp int3 daa jecxz push in mov enter cs sarl or adc add push push daa add cli aam cmp fcoms mov movb mov mov sbb decb adc sub lfs ret push test push jp push sbb bound mov in (bad) enter push mov lea mov xchg jl dec shrl jne dec or sbb testb push mov dec xor lock jnp,pn aam cmp and push dec jge and stos push pop pop mov adc sahf adc in arpl or fldcw pop mov les push dec mov movsb mov ret pop mov push push inc je gs popa (bad) or push out negl lret call mov cmp lds mov add enter adc lea mov inc jl and movsl cmp add call data16 jmp jo mov fsubp lock stos sbb stc andb dec pop (bad) icebp (bad) and (bad) pop flds ds sbb rcll mov pop cs add mov pop imul push fistl push jge add jg shll popa shll scas loope decl lret add cmp (bad) xor push icebp repnz shld rep mov (bad) xchg stc (bad) stc push test xor pop je (bad) je adc jecxz add sbb or mov push (bad) xor pop int3 insb jbe sub sub and xlat ret fcmovu push mov or pusha pop push xchg jne jb xchg jmp sub mov mov xor xor movl daa les loope xchg mov incb rorl nop or push lods clc or nop push mov or (bad) ja add sti add or arpl xor xor in add fimul jno movsb dec orl jnp pop mov dec xor cmp cmp cmp jge hlt (bad) nop jl xor pop bound pushw inc mov push fildl push push nop mov sbb or mov int3 js ficom fcomip in repz mov add sub bound test push mov push das inc fwait mov lds inc inc add and xor cli jle pop fdivs sub aam sub cmp je ficom fisubl fstpl push xchg sbb adc push outsl jne (bad) leave mov dec adc and mov andb pop and inc les test mov hlt dec cltd mov lods test and mov push and and and pop sub push pop jbe insl sub sub sub sub sub jb fsubrl xor in mov xor add pop aad fnsave pop cmp sub cmp push inc (bad) insl fst or inc push inc and fst insl fldl inc push dec fs push dec sub fst insl push dec cwtl dec push dec and push jmp insl xlat xchg push push push aam push push push imul jmp scas push jnp pop pop mulps pop push mov jmp pop push pop int push pop dec pop push pusha (bad) mov imul or icebp scas fistpl (bad) notb sub mov pop mov add push adc sbbb insl rep inc mov mov out je jo mov pop stos popa clc pusha pushf insl call icebp mov or adc jne or pop les les je pop or (bad) in fcmovnu push or andb cmp cmp or js repz lea xchg xchg mov and imul jo push push sub sub test xor adc ljmp dec sbb dec out inc sbb cmp pop mov rcrb loop inc hlt fsubl vmovmskps (bad) or push cwtl std ljmp push cmp fiaddl cmp or pop sar mov test insl adc in mov xorl cwtl sbb nop xor sbb push sar sub or mov mov and loopne addl (bad) cmpsb sub test pop cltd je (bad) mov es test fistl cld test jl cld (bad) or add rorb lea lods and add push cld push push mov cmc cmp sbb hlt adc shrl add or jmp or pushf add adc or add stos mov fisttp adcb mov shl push adc or mov adc or cs (bad) inc xchg (bad) clc clc in mov fwait dec clc add mov in clc cld dec jl or clc xor lret cmp jbe dec (bad) mov xchg jbe sbb call fadds add push ja push inc mov sub daa fsubr ret inc ja sbbb lea mov test sub mov xor mov mulb dec or pop mov xlat sbb leave leave xchg pushf jl push out push jmp inc cmpb jne ret xor dec sbb and mov lret popf call sub and inc pop popf xchg out loopne inc sub in xchg into mov jl dec sub jne enter mov or or mov and in (bad) or gs inc cmp stos fist dec push inc shrb jge inc pop popa loopne pop aaa movb call aam cmp cld (bad) into pop pop cmp loopne mov cli (bad) sarb addr16 inc cmp sbb or mov fdivr insl sub or xchg mov orl lods jg xor or and mov hlt (bad) and cs mov mov xchg clc sbb push arpl or in loopne or xor or mov adc cltd jnp dec jmp jbe addl popf lods add mov notb pop jmp cwtl ss orb pusha sbb psubusb cmp rcll mull shll cld adc inc cmp jl push and mov lea adc pop jge inc aaa sbb adc lcall arpl loop arpl cmp jecxz mov nop push mov xchg sbb je scas lea push mov pop mov mov push lock sbb add shrb fcmovnu int3 sbb jne outsb and insb push stos dec push push push bound fs or sub push adc xor and test shlb hlt sbb rcrb adc (bad) jno,pt nop (bad) (bad) fldl mov faddl hlt push pop lods popa mov lock adc xor cmpsb aaa loope mov inc or cltd mov push or push int3 xor in inc inc mov mov lea mov inc add aas or cmp pusha add mov leave push inc (bad) pop inc movsl cs inc cwtl and pop cs push pop push add sti imulb (bad) lea adc out dec adc sbb or jbe add in aaa sti lahf adc std leave mov neg adc je in or add and mov sub add popf test aas adc pop mov scas mov push sub test mov ja int3 xchg int cmp or fcmovu clc mov jb and outsl add shlb loopne mov lret sbb lock dec mov or push sbb cmp ret sub dec adc test ret je movsb inc aaa push mov mov adc pop cmpb jne sbbb push push dec jne add add test in jne add loopne lock es mov hlt shl lcall sarb je,pn and shlb push loope adc push push sbb and xlat jne cld lea mov dec or jg adc fs hlt add cmp jl inc (bad) jno sbb lock push mov fsubs rclb hlt xor sbb (bad) je push lods dec add adc push xchg mov aad push sub sbb pop jmp ljmp ss (bad) mov clc pop adc bound dec cld jmp cmp or or push add push stos ret push ja shl insb mov or mov clc fwait leave clc daa push jne ret leave dec sbb aaa or (bad) adc pop in xchg les insl pop pop outsl or mov or int3 imul rol ss mov add xor xchg xchg adcb xchg mov inc cwtl inc adc adc push ss push xorb inc int fnsave lock mov xor or movb push cmpsl inc cmp out push add pop jbe mov dec xchg jle pop inc or pop cmp mov adc mov or imul fstl and pop jge std cmp hlt jmp addl and push push cmpsb mov pop push (bad) cmp pop incl dec bound jne lea push sbb xor xchg mov or fs cmp and jne add or shlb push add fsubr mov cs sbb mov outsl or add rcl repnz enter (bad) xor inc xor sti mov mov pop movsb out out xchg mov xor loope repnz enter (bad) cmpsb and inc (bad) mov sub loope add js mov (bad) les jo popa mov push adc rorl test jne sub (bad) or or adc movl pusha aam adc mov hlt inc add mov mov or ss pusha outsb xchg lcall pusha pop rorl (bad) sbb push bound sti jecxz adc adc push dec (bad) inc insb lods sub inc mov movsl cs pop shrb sbb fcoms cmp pop xchg dec sarl insb lret sbb push je test pop roll add icebp pop pop mov (bad) add pop jo (bad) test rcrb mov xor push or int3 cmp jge cltd push or push mov xlat test jne cmp push addr16 add cs fdivr dec and sbb hlt push adc insl jo pop push outsl clc lods sbb lea inc cmp push mov out mov adc enter pop in jmp aam xchg int lret pop (bad) lock push int fs push xchg push nop (bad) fcoms (bad) cwtl ret push xorl popf adc xor and and and mov xchg ret ficom mov pop pop pop sub dec or mov push xor inc jl adc or insb rolb mov xor cmc fcomps and push or nop inc jnp cmp insl test cmp out cmpb mov and (bad) push dec push (bad) sub push mov adc cmp pop inc repnz and adc mov movsb sahf add dec cs add add pop flds sar mov ret subb sbb pusha lret movl test dec adc push add sub dec push iret mov sub fcomps add bound jle xor push or sbb sbb shll int push add or mov fmul pop add xchg out orl das sbb call mov sub lret push cld mov mov fsubr movsl movsl movsw push fwait cmp orb sbb js mov test mov stos mov nop test or in or sub je mov addr16 adc scas ss test push insb push xor and sbb cmc xchg xor mull cmp scas sbb pop xchg mov xchg inc int3 mov pop push inc int clc xchg mov inc mov shl xchg sti inc icebp aaa and xor mov sti fisttpl roll inc mov stc add jnp or sub or and dec adc pop shrl aaa mov testl pop mov dec fadds adcl push dec clc xadd mov xor jmp push ljmp loopne or sbb jg mov loop (bad) xor and sub loopne test and leave push sub pusha imul mov dec add mov xor sti mov movsb add (bad) repz arpl push sbb xchg aam xor add and push add daa inc (bad) jp cmp sbb rclb loop jne or push mov ljmp lods push xor cmp rorl xor adc sbb mov sub sbb add mov dec mov stos adc les sbb pop mov data16 movsl pop hlt adc xor or pop mov sub add clc xchg dec push mov test (bad) int sub push pusha lea lret push xchg xor adc push scas cmp xlat and repz or cld push adc out push mov repz and add and cmpsb out enter adc sub xor add push push or push out mov pop call imulb ds xchg or push jp rcrl mov adc push in adc ds sbb fadds dec xchg ss (bad) out enter out cmp cmc mov adc cmp ret push mov pop push or rolb les mov add ret paddsw add repz add and sarl popa add call mov loopne inc or mov divl or and push adc pusha dec sub sbb push push test mov mov mov cltd push xor jnp xor ret push lock lar mov fdivrp (bad) or das add push mov mov cmp lock adc insl xor (bad) fdecstp inc and (bad) andw sub test push xor pop jmp dec test ja mov jo daa nop call (bad) clc pop push repnz sbb imul loop add add test add mov sbb inc scas push stos lds pop mov call adc std (bad) mov mov mov pop arpl mov push mov je mov cmp jge and push in outsl clc adc push imul add mov pop sbb sbb jne push add hlt aas mov sbb mov jb mov ljmp out jp ret add adc push push push adc pop idivl into mov add add or or int3 push fisttpll or adc xor in mov les xor in std push push insb add cmp ljmp loop cmp mov (bad) loope sbb dec stc push and dec fstpl sbb and jge xchg fnsave push int jnp dec (bad) dec adc in or enter xorl fstps jmp sub mov mov inc inc and ss out push out int3 insl movsl mov xor dec inc test call clc xchg fsubs in sbbb sbb (bad) dec adc roll je push sbb (bad) faddl fild fs and sbb arpl add int3 push insb int3 mov mov xchg dec fmul int3 in or pusha mov insb inc rclb fist jle dec jno cmp sbb (bad) aas rcll pop sub inc push push ret adc inc push dec nop or gs pop adc popf mov adc pop sti add dec mov ret out sub es sbb inc adc pop fdivs adc or rorb inc mov xchg jnp (bad) push add adc pop xor cli test fldcw push jne pop sub fstpl sub inc jo jno adc lods into pop inc (bad) movsl and push mov adc sti test or (bad) and mov out aas xor xor inc push insb inc sub mov divl add or mov das daa cmp or pop cmp sbb adc or pusha je and call popa cld sbb and push cltd lock and pushf push fistpll mov and addb out push push pop enter or arpl pop outsl xor lds leave adc cwtl add fwait push jnp (bad) ss jbe push cmpsb mov sbbl ret mov decl bound addl shl add ljmp not pop jmp mov ss inc hlt outsl push xchg pop cmp or or fmuls mov call dec or repz inc or jle push inc cmp pop jl movb and push fwait adc insb or dec cmp mov and pop in loopne in adc adc add add mov mov loopne insb pushf jle push and cwtl mov (bad) fsubrl ss rclb mov push mov call sbb je addr16 stc ds outsl aaa mov pop push daa push cmpsl pop xor (bad) rcr out xchg sub sbbl aam fdivl xor pushf add push pop xchg dec (bad) mov and jo add add push enter push cld pop (bad) jo pop add add into add (bad) or inc call push pop add or sub cld sbb inc dec (bad) mov push push inc cmp push pusha xor sub sbb mov into push push aad adc cmpsl mov mov test add test mov pop adc and xchg arpl adc (bad) push movsl fildl inc call mov popa ss es push subb adc nop add outsb outsb loopne adc inc push inc loopne mov gs in loop lods dec add push mov or cs push sbb lea imul xchg rcrb shr or add js sbb fdivrl xchg mov and push push jmp shr stos or sbb addr16 fdivrs test or sub and fdivl push jbe int3 push xor and cmp lock pop das imul push push mov and xchg aad aas mov inc xchg int3 push add sbb add inc xchg jo jne (bad) and inc (bad) mov push sbb or fildl ja int3 push sbb in dec fldenv push and fisttpl mov pop mov bound lret call addl pushf or pop fsubr sbb clc rcrl mov add push mov pusha sbb adc mov insl xchg lret mov sub mov ljmp sbb mov lea sahf and mov cmc pop pop in aaa es std mov push scas (bad) xor mov test push mov test out ja adc (bad) incl or or bnd ret pop or sahf mov sahf cwtl mov mov mov mov mov pop cmp jbe add mov popa arpl or movsb mov and cmp lea pop xchg dec and inc insl es std sub (bad) fnsave mov xchg cmp jl lea add adc mov sbb pusha push and movsb (bad) xlat lret jl inc add lock movb or mov cmp loopne or inc fimul jle js inc lahf inc push lahf jne inc sbb shufps push mov or popa push decb dec dec std sub pop loopne mov repnz xchg outsl and addr16 cltd and fmuls mov pop xor xor mov (bad) mov (bad) sub mov sbb ss push mov xor insb xor xchg sti js loope dec pop ret xor lods jmp sub adc add xchg adc jg lock mov xchg mov and push or hlt xchg or push pop (bad) jge (bad) or push push test push sbb sub adc lea jns iret or sahf loopne xchg das add dec jo cmp cmp (bad) adc dec xor xchg sarb adc jl xor stos pop push mov flds add outsl cmc out (bad) pop inc xor jno inc pop push push cmp dec pop and mov aaa sbb or push pushl ret and or fldl inc add bound mov addl or bound hlt dec or push rcll icebp test hlt lock (bad) sbb or pop adc popf add or add loopne das mov sti test shl in lea addl in popf (bad) std jbe push (bad) hlt rorl ljmp pop mov jne push fistp pop mov mov mov mov sbb adc pusha ret xchg jge iret mov and or cmp cltd mov sub rolb mov xor mov stos or icebp bound mov cmc add imul outsl out add adc enter mov cmp je (bad) negb add je or dec test jg add mov (bad) push add sarb cwtl xor mov pop pop pop add dec pop push push fs ret cld (bad) movsl xchg push cli adc or insb push into mov mov adc (bad) fmuls (bad) dec cmp dec addb mov jne pop cs xchg and or xor sub shr inc pavgb add adc push xor xchg test mov adc ljmp cmp jb je pop inc les jae add push in sahf add pusha inc shrb jmp dec js sub pop je test fs sti or sub push pop jo cmp movb test xor jle add mov sub test push and cmpb fistpl in sbb je lea or sub jnp mov pop adc push adc jb sti daa xor jo lcall dec loopne pop inc push or (bad) push push mov push jne xor adc mov pop pusha inc call aad aad imul xchg aam les mov inc mov jl push std mov repz repz dec call cmp cld inc and or arpl or aaa jnp and inc or dec push lcall push adc lea roll (bad) mov or jmp inc outsb outsl loope shr (bad) adc cld cmp and cld sar sar add in int int3 stc leave or (bad) xchg clc enter and pop adc mov sti mov test rcl loopne add fsubs cmp bound pusha jae test xchg icebp int3 icebp repnz mov (bad) faddl dec mov test rol mov pop pop pop sbb or leave lea mov push xchg xchg je cmc push push loop push push jns adc push push bound push push inc in adc scas push jbe cwtl in fisub lret push inc push or lea mov cli push outsl out gs mov pop xchg fucomp test enter pop mov or popf popf cmp ret inc push or pusha popf and push das push lcall sub pop ret push cmp sub dec ret fildl cmpsl mov mov stc inc les adc addl movb test lcall push faddl push adc sbb add cmp stos fs mov test xchg adcb roll pop mov adcb cmp dec inc ss push outsb pop jmp fnstcw fwait test inc rorb test add mov and pop jo scas mov pop push mov cmp hlt mov hlt lock pushf xor bound arpl mov xor cwtl or push pop fs adcb icebp cmp test jo add loopne bound or outsb push mov mov jle mov jo push sbb mov jo add jl jp cmc and sub inc addl cmp jne xlat addb xor popa shrb rcll mov xor loop das xchg dec fdivr rolb pop mov clc lea fiaddl inc or mov inc xor cmp pushl adc (bad) gs or xor popf sub xor dec (bad) fcoml or mov clc or mov (bad) mov dec inc syscall add jae shlb js add push scas nop inc test jns add add xchg or mov clc add add cmp jl andl lock or jle pop adc and or push and add inc xchg stos xor adcl cmp xchg jns aam dec fcoms jp xchg push xchg push je jb push and int3 jne pusha popa xorb enter push aaa addl mov mov imul test add or jbe pop cmp mov imul insb inc call outsl push push rorb add or cwtl pop push push push in mov xor loope loopne arpl std push xchg xchg js sub sbb daa xor bound fs lods test push add inc add adc mov negb cs jg jmp mov add dec mov mov add stos mov dec hlt out mov lea clc movsl push push movsb clc test mov jmp addl (bad) dec inc jae fcoml cli xor mov lret dec inc push loop loopne cs jp jle inc mulb mov push pop fisubr cmp repnz xchg in jl pop fnstsw pop jl or shlb dec cwtl adc push add pop test dec add pushf inc push inc mov inc add mov or mov enter push lds sbb adc mov and aad fsubrl stos xor push add xchg push add sldt cmc or cs sbb adc enter aaa fs sub jns outsl (bad) dec aaa cmp je arpl fist sysexit or or mov in insl test or test adc sub outsb int3 sti push add hlt fs inc aam inc adc cld push aam lods jne mov add mov pop sbb jne sub scas popa adc and je inc test pop fs pop jmp mov shlb ss sahf inc fiaddl push aam sbb int3 mov sbb push sbb (bad) lock test mov movsb ja mov jmp movsbl testb or jno inc inc add idiv push pusha sub xor jmp imul lea push fistl jne fisubr (bad) or and aas cmp cld mov sbb push sbb add add push mov add fildl loop jmp sbb rcrl shrl je pop (bad) jo xchg pop in xor or add cld addr16 nop adc push mov xchg stos sti fwait xor pushf pop add aaa mov pop les hlt les mov mov (bad) jo and mov jne xchg mov pop and or sti inc sti cld push cmpsl sbb cmpl call cld push sbb jbe inc (bad) es or xchg xor sti lret sbb sbb sub push jge rcll insb pop push sbb (bad) mov pop cmp fldt sti xor inc xchg test mov dec add mov or sub push pusha xor imul push sbb cmpsb popa rorl (bad) xor mov add dec sub inc add outsl mov push push adc lods sub and adc mov push xor or pop inc mov and fnsave call push cs and rcrl subl mov cmp jl mov jmp sbb adc mov push push push test fidivr mov push xor in mov adc addl lods inc cmp jbe push lea outsb lea data16 jne lea sub or lds cmp jb outsl jmp add inc or push (bad) insl add cmp or pop and or and pop adc mov (bad) lock sub push adc or cvtps2pi push pop clc push test scas mov pop add testb xchg push inc adc sbb test mov lods (bad) pop bound push push dec mov pop jne cmpsl adc mov add adc inc add and jns push inc or cmp shll loope jo pop inc lds leave jo hlt lods inc inc xor add adc add mov ja jbe lods mov les (bad) pop std jbe push into test adc fistl xchg sub lock mov roll mov js movsb pop aaa ja push in mov and shl add or shl pop fs and decl cmp fdivrs (bad) ja mul lea popa push xlat inc inc repz ds mov fwait (bad) enter xor cmp movsb clc cmp jbe lea dec idivl dec mov in add mov mov push mov testl inc push mov push loop jno or pop pop cmp je push add inc mov or das clc xlat add sub dec and outsl push cmp jb push push pop xchg push or add (bad) sub sbb in aaa loope test loopne and cmp or sub xlat push add push cs adc addl mov add cld push in mov push fdivrs pop idiv mov fldcw dec mov jl jp (bad) (bad) and (bad) mov sbb repnz lcall mov shr add mov (bad) or mov jp inc cmp ret out mov out (bad) mov push popa jb add pusha outsl (bad) insb adc or pop popa or jb leave or mov addb push mov xor cmpb or xchg mov dec dec jb add shr dec inc push adc (bad) mov inc lea push push mov inc nop or sbb testb je add jno ss ljmp adc iret fcoms jge popf cld fidiv adc or iret push mov dec hlt stos add enter mov mov sbb loope jle inc addr16 push jbe push hlt push fildl or dec sbb pop push xchg jo inc inc inc out pop sub add loop or (bad) mov jmp jl es xor lods call iret orb adc shrb lea in clc sub pop lock lea mov add xchg or push stc mov xor int pop adc inc in jnp mov xchg push ss push adc sbb repz lds (bad) sbb call xchg out or mov js pop inc jmp push push push or into inc inc lcall xchg adc pop xor test dec inc movsl aas rcrb mov leave push xchg imulb adc lock iret sbb (bad) into insl dec (bad) (bad) (bad) icebp push adc nop mov sbb or andl adc and mov mov les mov add xorl or addl or sbb adcb and adc jns push or add lret inc or rcrb adc addl (bad) sti and push pop jmp test jl scas mov enter xchg push inc dec dec cld cmc dec inc jg lea jns jl jl or imul push pop dec ss jo fiaddl add or repnz (bad) test add push ja rclb dec inc out sbb dec cmp jb or ret add and cltd ret add (bad) jl mov mov or lea add and and std pop inc jge sbb pushf test enter inc bound jnp cmp imul inc clc movsb xchg xchg jmp adc add mov rcrb or inc xchg sbb loope aad push xor add rorb or pop pop rcll mov jl inc cs out xor call xor bound faddl and mov pusha or sbb cmp hlt add daa mov std and add insb xor cmpsb data16 sbb fild mov pop sbb stos adc sahf add jle pop cmp scas xor movsb movsb sbb loopne add or push js pcmpgtb shr mov xor xorb push jb xor fisttp es or dec jle xchg mov and push dec mov je std inc mov mov mov jae jp test loope inc cmp dec test jg lods adc push mov outsb mov incl sahf inc sbb xchg std mov pcmpeqw add push push cmova cli xor in insl mov sbb mov and xchg inc out leave xchg insl push imul cmp and adc leave inc mov and movsl ret fcoms xor movsl ljmp or push mov loop (bad) or xchg stos mov sub jl incl xchg fimull daa push clc lds cmp outsb mov pop div addr16 or sbb add sti inc call and mov mov and cltd sbb into adc and shl add mov xor jne insb pusha sbb mov mov iret js stc mov shl add mov fstpl movsl mov stos sub lock inc clc ljmp sub sbb xchg leave mov pop add out rclb dec sub incl jns stos push cmp push fdivrp pop push je add mov fisubl std cmp scas daa mov jle inc sbb hlt lock or inc adc lock and rolb std lahf std add dec or inc jne cltd andl jno xorl inc add sti and (bad) cmp cmpsl scas ret ljmp mov and neg sbb and add xor ret xor test das fnsave push or movzbl mov mov cmp mov push dec ret idiv mov addr16 xor jecxz push mov (bad) aaa jb push sub push jmp ret add add mov pushl mov pop (bad) sti pop lea and popf (bad) aam sbb or inc rcll ret rcr or in mov rcl ljmp push push and add mov xchg adc es or push mov jo or push sbb shll dec push jo push (bad) or lea push adc fsubrs lock roll roll mov insl cmpl cmp or jecxz pop add out and mov iret test or or jb dec or jne movsb sti push jmp adc push or or xchg mov add pop cmp dec or insl loope insl test push push push xchg or xchg jle fisubrl mov js add (bad) sbb jnp sti pop pop decl decb fidivrl jl add xchg add outsl jge enter add xchg jne cmpsb push fidiv and lock sahf iret shr pop mov mov mov (bad) lret adc out in stos sub and add add sbb add dec jmp add inc mov call xchg fcmovnu dec divb jo loop ret rcrl (bad) pusha sbb adc xchg adc and mov (bad) jle cs xor mov fcomi aam ficom or lea jle cli mov sbb pop sbb in ret jle fsts std aaa push jb shr inc lea sbb incl dec pop jne mov or stc sub jns mulb fldt insb xchg pop repnz repz repz into cmc cld jbe cwtl (bad) jne (bad) lock ss push mov pop mov dec jne mov add push push lock incb pop jp pop movsl and push mov popa xor inc push jecxz sarl mov jb cld pop ds pop clc jne mov mov sub in mov mov push les xor inc xchg loopne jle gs rcll daa lea jmp jnp loopne push test in loope push test loop add shll xchg cmp fldl (bad) into (bad) xor and cmpsl ret and int push adc enter lods add out shl lret (bad) xchg xlat in insl jg repz xor sbb xchg pop arpl es inc or adcl adc dec (bad) push lea and jecxz or adc ds and adc fdivrs or lret mov inc lock cwtl mov popf or movsb or jne outsl push (bad) shrb jne inc mov adc mov rolb clc std lea add dec dec sbb jmp add jl mov adc add add xor insl arpl dec sub mov push cwtl cmove xor rcl push mov sbb cwtl mov dec (bad) push (bad) hlt jb add daa push jb stos stos xor stos jb xchg pop hlt stos hlt add insl sarl cmpl bound jo inc andl shl xchg pop and (bad) mov leave or je cmp nop xadd or add pusha bound repnz js lret xor enter mov cltd jecxz xor xchg lock gs dec push add dec mov sub add jbe test or sbb cmp jle jo test out or sub sub dec push add jne and (bad) and jle mov xor loopne mov inc lock insb push push insb pop push sete jp push mov (bad) adc adc dec jns dec es fisttpll mov mov pop inc sbb pop and lock xlat mov cmp dec rorb dec add data16 rol mov repz and add sbb leave jmp pop jle push or lret push push xchg out xchg sbb jmp inc push or or sti add push push xchg and shl (bad) mov mov cltd push aad popa lret adc movsl adc inc ret mov cmp ud2 adc mov jne push or repz or and lea nop xor xor dec loop gs and sub sub push and and push xchg lea mov mov inc in dec jne push and insl sbb adc xor lcall std lea mov xor inc cmp mov jl cmp jle mov pop movsb pop aam (bad) dec aas sbb inc push addl mov (bad) rcr push sbb aas pushf xor jb std pushl add push pop rclb mov cmp dec mov dec ret into sbb js outsb lods cld or jle or mov rol rorl push cmpsb mov (bad) ss enter sbb test lock jg xor add mov dec mov lock cltd jns pop mov add lret pop dec inc or mov fstpt aad lock lock xor add scas cmp pushf cmp cmp adc xor cld cmp mov cmp aam xor or mov xor das and add or rolb repz add aaa push rcll adc mov cld xor push cmp add int3 aaa lock xchg xchg test jne jb leave cmpsb out enter and mov clc sub aaa or clc xor lock sbb push lds jge xor push insl inc cld fidivl push dec mov (bad) mov xor aaa and mov mov rcrb sbb adc sbbl and pop mov enter push sub inc mov jne sbb or aaa xor push or jb cmp test jne and xchg mov add lahf xor ret and cmp daa mov cmp aad dec or loop fstp (bad) sbb aaa iret add fsubp outsl xor dec mov fcomi in xor pop loopne aam push or or ror push test lahf insl ud1 jbe insb in in add push mov loopne xor lret inc or xchg jo into pop in jae add mov or and or sbb sub cltd xor iret jbe lea adc xor and je or mov popa cmp sub inc enter or iret data16 adc mov mov fnstenv je fisttpl pop popa fcomps add sbb int3 mov cmp mov push ds jecxz add and mov pop mov push lock sbb dec adc mov pop or xchg scas or hlt lock call push cli xor (bad) sub out inc sbb lods lock sbb mov mov fldcw gs xor (bad) mov pop sbb xor loopne call xchg inc xor sub idivl popa outsl xchg xchg sbb and pusha addr16 or sbb pop (bad) dec or ret (bad) push cwtl icebp jae in test fs dec fdivl or push xor or or arpl jle pop ret or xor das imul push mov das stc or inc dec xor xchg cmp cmp mov xor xor mov push dec rol cwtl mov push mov add daa repz xor pusha and jmp repz rolb sub icebp inc cmp xchg mov subl pop (bad) lret cli sub leave dec adc (bad) outsb mov pop xor mov pop jne leave dec xchg and and pop sub or jne loope mov lea call icebp sbb imul dec mov (bad) repnz (bad) lock adc adc add sbb ss nop adc (bad) sub and popa fcoms hlt inc mov loope and sub xor repnz adc in xor roll xor push fidivl hlt or sub fwait gs mov or and or test push pop int or xor adc aad sahf rdtsc in adc aaa fdivrl (bad) cmc dec pop fstl fistpll or insl pop fidivr mov push jnp int pusha xchg pop cs rorl xor adc aaa aaa loope loope jmp cld mov cwtl pop or jl cmp inc rorl or (bad) xor movl mov clc cmp sti adc rorb push push das cmp loop jmp jge (bad) sbb jae ja test les (bad) loopne dec sub jo jo mov pop or rolb cli or cmp inc or or pop and outsb (bad) or cmp and bswap hlt lock or and and insb ret or sub adc and sub ret dec jo push mov pop clc adc cli cmp xor add aam adc lock xor push inc enter add sbb inc inc test push dec (bad) inc pop jb or xor (bad) adc fadds test xchg or aaa imul sbb and cmp sbb addr16 clc das dec outsb push cmp test sbb xor sbb nop dec and sub and popa ret inc push pop fwait push jns mov stc mov leave adc inc mov push pop call sub sub cwtl lock inc daa inc xor cmp push subl das push push out xor icebp cld cs loope (bad) shll aaa xor (bad) cmp outsb push push mov (bad) cmp pop pop ret xchg dec cmpsb ja mov dec (bad) aaa cli pop (bad) and lcall stc xlat dec idivb and push loope rorl clc repz cld js cmc ret push mov subl orl cs dec (bad) mov stos xchg xor cmp add inc fisttpl jge adc adc jge neg sbb and loope mov cmp bound mov (bad) int mov mov jo fiadd push loopne mov xor adc pop add les push add or imul adc cli fbld (bad) pop into pushf sub sbb mov add hlt add shll hlt cs pop jp sbb sub cmpsb ja xor repnz add inc and fisttp push sbb pusha or sbb out lock les xor mov pop jle rol loope (bad) pop into sbb js mov aaa jns sbb and rolb cs fidivr jmp jge push xor call in sbb mov rol mov mov pop inc or add int xchg out add movl push adc pusha sbb outsl das cld fild adc movl movl or fcoml cld repnz mov xor adc loope ret call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov inc xor movzbl mov mov pop ret mov mov add push mov mov or stc xor call mov mov push hlt rorb cs sti jg test fdivr ljmp push movb movsl add push lds push sbb cmp sbbl mov push pop idivb sbb or nop and or sub mov inc cld push push add sub fdivr fild xor sub je iret xchg (bad) and repnz adc sti pusha jge in mov push push adc sbb or fadds push fsubr pop faddl sub aad mov add mov mov add test mov add mov mov sbb inc add sti inc jb jne push push sar push pop mov jge lea movsl movsb dec fdiv xchg adc push (bad) dec faddl in fs adc in js inc es sub cltd inc scas inc cmp add (bad) in andl lods into loope insb or mov push jge add xchg int3 popa in aaa inc fist loopne je and push fs cmp add adc push stc add in xor push cwtl nop (bad) jle xchg aas adc jae pop sti add push push push nop cwtl fsubs pushf pushf xor in imul shr or fcoml test outsb mov sbb mov mov or subl or je push (bad) call push pop jmp push ret add mov jmp push adc pop (bad) mov push dec out test mov fcoms fiaddl in (bad) jbe jmp sti add sbb je mov stc test mov jnp xor mov sub roll jne mov icebp mov lods nop mov or stc add add dec testl push add mov mov cmp stos and loop pusha or shlb jecxz jecxz notl cmc lea jne inc inc dec mov push jle push subl daa and or adc test addb mov fildl jl sbb fadds (bad) sbb lea push sbb je rorb pop sti lret xchg movsl mov jmp in fimul jge insb jae fldt push les lahf fcmovnu insb popa xchg lea mov push iret sub jns inc mov adc jne pop ja gs push add adc enter adc adc push (bad) pop mov inc gs pop loop cmp push rolb popf sub scas mov push dec add pop loope adc push clc (bad) (bad) jne cs sbb and imul jne,pn popf out sbb in cmp mov arpl and push data16 push fisttpl pushl and sub sub xor sub xor sub test aam lea sub xchg in mov sub sbb adc xor fwait movsl nop arpl add cmp imul (bad) or xchg cmp invd lods test clc inc arpl dec data16 (bad) mov loopne cmpsb fs scas scas sub cs cmpsb in xchg call add fs dec loopne add lds mov incl push sub loopne inc ljmp sub or pop das xchg push cmp cmp inc test ret mov pusha add fldt orb push sbb mov std gs push mov adc adc ret sti sbb xchg (bad) push push xor and adc (bad) xlat adcb (bad) push fs sub mov push xchg rcrb cmp subl sbb fwait cli stc sub xor data16 jge stos movsbl out ret cltd push pop idiv or mov ret in or adc inc cli mov lea mov push daa in ret stc repz push sub push sbb (bad) or push push push pop adc pop lods sbb in or mov aam mov int jge movsl movsl scas pop shrb pop jnp inc mov mov push data16 leave pusha das sarb repz push cmp xor (bad) in mov (bad) xor loopne push js xor mov sub lea pushf xor sbb pop inc cmp adc and movsb mov push pop mov lock push js push flds mov jnp ret icebp and clc mov mov aam sub lods mov cli enter add jl clc pop push shlb cld add mov int3 sub jns mov bound mov lock test inc xchg (bad) pop loope repz cmp sub mov call cmp adc mov pop jmp and or xchg lahf push sbb hlt and dec lock cltd lock sub add inc cmp test pusha xor push cmc adcl push je mov outsb call divb push push adc pushf add adc pop adc push or (bad) addb jle or in xor xor (bad) mov push or pop pop stos inc js push cmp sub in lds cld and dec mov cld iret cs push mov or mov xor inc or (bad) ljmp or pop cmp jle mov xor inc cmp jl lea pop das jbe sahf xchg mov test pop bound inc (bad) aam je arpl xchg leave xchg pop mov sbb jns js mov cmp (bad) jl xor jo mov adc cmp push mov insl fs mov add fadds mov test lods movsl cld (bad) aas loope adc jge add out push inc inc add mov pusha sub add and mov xor pop mov test test add or sub xor data16 in gs pop jo in dec cmpsb clc lcall (bad) xchg pop push sub popa mov lock std sub push sub cmp jge push pusha or mov leave mov insl loopne sbb push or pusha fcomps scas or jne adc add add mov xor (bad) jne in sbb int pop mov lahf or xchg xchg addr16 nop and je or mov test shl js notb adc add clc inc sbb and int3 cwtl add sbb cmp inc xchg and int3 mov into inc fwait push inc enter popa dec fwait dec push call js js mov loopne in test mov or sub pusha add xor or mov pusha insb or sub pop aam test lret mov inc dec add or stos adc dec push mov mov push mov jge pushf mov cli std mov fcoms sti push or or std cmp mov add clc mov pop jle mov push movsb pop (bad) fstps test jmp jbe (bad) dec sarb and push fs shlb mov inc fs adc sub and ffree sbb lahf cld mov lock clc cmp jbe (bad) xchg cmp imul push ja movl jge jb sbb cld jbe add dec repz mov mov dec add leave xor xor pop jle sti decl add add jmp movzbl add or add imul icebp xchg movsb sub mov shr (bad) mov cmp jb cmp rclb jne sti aaa xor and pop xor loop or dec and in test jl insl adc insb loope es test xor lock hlt sbb jecxz add sbb sub les add add xchg or push or mov lods mov ret mov xor popf sti lcall xor add push jb ret mov outsb scas sub or cmp xorb and in das mov mov adc imul je cmc pop sti or imul out cld xor mov pop push jne inc xor outsb imul lods push push push xor mov (bad) jne xchg (bad) int cwtl or sub in fsubs xlat ja xor sar into add jnp mov adc lods and dec sub adc std sarb (bad) test test (bad) loopne nop xchg incb (bad) rclb sti add dec fdivl push loopne sub mov fnop lret push fldcw pop mov sbb sub xchg mov mov mov pop andl add (bad) out outsl pop sbb sbb jnp sti pop cld mov mov cmp jne or jg add adc jne or push jne int jae or jne add jne or mov or or add mov add mov push add lods mov outsl sbb je sbb neg jbe cmp out mov jne or push loopne cmpsb jns or rorl or insl mov imul add adc xchg (bad) jne mov fsubs out je bound or adc jle fldt and xor sub jl or adc pop pushl pushl stos or iret fildl add cmp sbb or inc adc inc adc add test dec cmp mov xchg xor fiaddl rorl outsl sbb pop cli into frstor xchg push adc lea jmp jl push jl push push pusha js test fwait jb (bad) cmpl sub jge xchg insb jecxz add xor push add cmp push aas pop inc sbb fimull pop sbb mov jmp lock fisttp dec jno adc movb or sub pusha imul mov pop add and into cmc into jne cmp inc ficomp sti jo sti jle fild dec lea jnp cmp dec outsb rorl pop (bad) call rorl jmp mov cmp mov adc (bad) mov sarl in adc adc subl (bad) flds lods sbb sti pop mov dec dec loope sbb fcompl clc xchg lock add xchg pop out adc jmp ds push pop add jo inc cmp mov sbb mov push jmp adc stos fcomps mov cmp cmpl nop test pop cmp push jb pop lds mov adc cltd and inc fcmovnb (bad) clc or hlt adc arpl loope add add pop cmp and mov mov push mov push sti mov add sarl sub not sbb test dec ljmp fstpt testl mov fdivrs mov add xlat xor addb pushf sbb cmc sub mov pushf pushf fldl push push and mov pop ss pop lods push adc adc add sub or xor mov cmp fadds add xchg sbb xchg and and and (bad) xor xchg inc xor pop adcb out es inc cmp pop or cmpsl cmp add inc inc ds hlt inc fbld mov fsubl ja mov adc jae add xchg mov sbb mov xchg jge add pop mov sbb out add jle cmpsb into inc call or test in sbb sbb mov cld pop or and loopne add fld mov pop je pop les mov fidivrl jmp imul cli das int and adc js jl cmpb je mov shrb gs and pop loopne sbb pop hlt je movl or pop dec push cmp movsb rclb and or sub pop inc xor clc je cmp push dec cmp mov (bad) jne jmp pop clc add imul mov or call pop bound mov adc test mov mov out mov push xchg mov insb testl out sar jg pop (bad) or les ja gs in push or inc cwtl je push lock inc aas fmuls fistpl adc hlt pop mov xchg in push loopne fsubrl lea or movsl add loop jnp es pop sbb sbb je ret enter mov cli or movsb mov mov xor xchg mov fsubrs jo push push shlb or push (bad) ss in insb or stc out aas pop icebp or cmp addr16 mov inc cmp sub cmc insl dec iret jbe les mov jbe xor push xlat and cmp adc pop xor push xchg sbb int add push cli js bound inc xor mov push sbb idivb mov mov sbb or pop push jnp pmulhuw lods and loopne dec mov sub into lock mov mov lock in fcmovb sub dec add fcompl lds imul jmp loop pop dec xchg xchg out call push cwtl push push int3 es fs lock sub xchg sbb sub jmp int3 daa jecxz push in mov enter cs sarl or adc add push push daa add cli aam cmp fcoms mov movb mov mov sbb decb adc sub lfs ret push test push jp push sbb bound mov in (bad) enter push mov lea mov xchg jl dec shrl jne dec or sbb testb push mov dec xor lock jnp,pn aam cmp and push dec jge and stos push pop pop mov adc sahf adc in arpl or fldcw pop mov les push dec mov movsb mov ret pop mov push push inc je gs popa (bad) or push out negl lret call mov cmp lds mov add enter adc lea mov inc jl and movsl cmp add call data16 jmp jo mov fsubp lock stos sbb stc andb dec pop (bad) icebp (bad) and (bad) pop flds ds sbb rcll mov pop cs add mov pop imul push fistl push jge add jg shll popa shll scas loope decl lret add cmp (bad) xor push icebp repnz shld rep mov (bad) xchg stc (bad) stc push test xor pop je (bad) je adc jecxz add sbb or mov push (bad) xor pop int3 insb jbe sub sub and xlat ret fcmovu push mov or pusha pop push xchg jne jb xchg jmp sub mov mov xor xor movl daa les loope xchg mov incb rorl nop or push lods clc or nop push mov or (bad) ja add sti add or arpl xor xor in add fimul jno movsb dec orl jnp pop mov dec xor cmp cmp cmp jge hlt (bad) nop jl xor pop bound pushw inc mov push fildl push push nop mov sbb or mov int3 js ficom fcomip in repz mov add sub bound test push mov push das inc fwait mov lds inc inc add and xor cli jle pop fdivs sub aam sub cmp je ficom fisubl fstpl push xchg sbb adc push outsl jne (bad) leave mov dec adc and mov andb pop and inc les test mov hlt dec cltd mov lods test and mov push and and and pop sub push pop jbe insl sub sub sub sub sub jb fsubrl xor in mov xor add pop aad fnsave pop cmp sub cmp push inc (bad) insl fst or inc push inc and fst insl fldl inc push dec fs push dec sub fst insl push dec cwtl dec push dec and push jmp insl xlat xchg push push push aam push push push imul jmp scas push jnp pop pop mulps pop push mov jmp pop push pop int push pop dec pop push pusha (bad) mov imul or icebp scas fistpl (bad) notb sub mov pop mov add push adc sbbb insl rep inc mov mov out je jo mov pop stos popa clc pusha pushf insl call icebp mov or adc jne or pop les les je pop or (bad) in fcmovnu push or andb cmp cmp or js repz lea xchg xchg mov and imul jo push push sub sub test xor adc ljmp dec sbb dec out inc sbb cmp pop mov rcrb loop inc hlt fsubl vmovmskps (bad) or push cwtl std ljmp push cmp fiaddl cmp or pop sar mov test insl adc in mov xorl cwtl sbb nop xor sbb push sar sub or mov mov and loopne addl (bad) cmpsb sub test pop cltd je (bad) mov es test fistl cld test jl cld (bad) or add rorb lea lods and add push cld push push mov cmc cmp sbb hlt adc shrl add or jmp or pushf add adc or add stos mov fisttp adcb mov shl push adc or mov adc or cs (bad) inc xchg (bad) clc clc in mov fwait dec clc add mov in clc cld dec jl or clc xor lret cmp jbe dec (bad) mov xchg jbe sbb call fadds add push ja push inc mov sub daa fsubr ret inc ja sbbb lea mov test sub mov xor mov mulb dec or pop mov xlat sbb leave leave xchg pushf jl push out push jmp inc cmpb jne ret xor dec sbb and mov lret popf call sub and inc pop popf xchg out loopne inc sub in xchg into mov jl dec sub jne enter mov or or mov and in (bad) or gs inc cmp stos fist dec push inc shrb jge inc pop popa loopne pop aaa movb call aam cmp cld (bad) into pop pop cmp loopne mov cli (bad) sarb addr16 inc cmp sbb or mov fdivr insl sub or xchg mov orl lods jg xor or and mov hlt (bad) and cs mov mov xchg clc sbb push arpl or in loopne or xor or mov adc cltd jnp dec jmp jbe addl popf lods add mov notb pop jmp cwtl ss orb pusha sbb psubusb cmp rcll mull shll cld adc inc cmp jl push and mov lea adc pop jge inc aaa sbb adc lcall arpl loop arpl cmp jecxz mov nop push mov xchg sbb je scas lea push mov pop mov mov push lock sbb add shrb fcmovnu int3 sbb jne outsb and insb push stos dec push push push bound fs or sub push adc xor and test shlb hlt sbb rcrb adc (bad) jno,pt nop (bad) (bad) fldl mov faddl hlt push pop lods popa mov lock adc xor cmpsb aaa loope mov inc or cltd mov push or push int3 xor in inc inc mov mov lea mov inc add aas or cmp pusha add mov leave push inc (bad) pop inc movsl cs inc cwtl and pop cs push pop push add sti imulb (bad) lea adc out dec adc sbb or jbe add in aaa sti lahf adc std leave mov neg adc je in or add and mov sub add popf test aas adc pop mov scas mov push sub test mov ja int3 xchg int cmp or fcmovu clc mov jb and outsl add shlb loopne mov lret sbb lock dec mov or push sbb cmp ret sub dec adc test ret je movsb inc aaa push mov mov adc pop cmpb jne sbbb push push dec jne add add test in jne add loopne lock es mov hlt shl lcall sarb je,pn and shlb push loope adc push push sbb and xlat jne cld lea mov dec or jg adc fs hlt add cmp jl inc (bad) jno sbb lock push mov fsubs rclb hlt xor sbb (bad) je push lods dec add adc push xchg mov aad push sub sbb pop jmp ljmp ss (bad) mov clc pop adc bound dec cld jmp cmp or or push add push stos ret push ja shl insb mov or mov clc fwait leave clc daa push jne ret leave dec sbb aaa or (bad) adc pop in xchg les insl pop pop outsl or mov or int3 imul rol ss mov add xor xchg xchg adcb xchg mov inc cwtl inc adc adc push ss push xorb inc int fnsave lock mov xor or movb push cmpsl inc cmp out push add pop jbe mov dec xchg jle pop inc or pop cmp mov adc mov or imul fstl and pop jge std cmp hlt jmp addl and push push cmpsb mov pop push (bad) cmp pop incl dec bound jne lea push sbb xor xchg mov or fs cmp and jne add or shlb push add fsubr mov cs sbb mov outsl or add rcl repnz enter (bad) xor inc xor sti mov mov pop movsb out out xchg mov xor loope repnz enter (bad) cmpsb and inc (bad) mov sub loope add js mov (bad) les jo popa mov push adc rorl test jne sub (bad) or or adc movl pusha aam adc mov hlt inc add mov mov or ss pusha outsb xchg lcall pusha pop rorl (bad) sbb push bound sti jecxz adc adc push dec (bad) inc insb lods sub inc mov movsl cs pop shrb sbb fcoms cmp pop xchg dec sarl insb lret sbb push je test pop roll add icebp pop pop mov (bad) add pop jo (bad) test rcrb mov xor push or int3 cmp jge cltd push or push mov xlat test jne cmp push addr16 add cs fdivr dec and sbb hlt push adc insl jo pop push outsl clc lods sbb lea inc cmp push mov out mov adc enter pop in jmp aam xchg int lret pop (bad) lock push int fs push xchg push nop (bad) fcoms (bad) cwtl ret push xorl popf adc xor and and and mov xchg ret ficom mov pop pop pop sub dec or mov push xor inc jl adc or insb rolb mov xor cmc fcomps and push or nop inc jnp cmp insl test cmp out cmpb mov and (bad) push dec push (bad) sub push mov adc cmp pop inc repnz and adc mov movsb sahf add dec cs add add pop flds sar mov ret subb sbb pusha lret movl test dec adc push add sub dec push iret mov sub fcomps add bound jle xor push or sbb sbb shll int push add or mov fmul pop add xchg out orl das sbb call mov sub lret push cld mov mov fsubr movsl movsl movsw push fwait cmp orb sbb js mov test mov stos mov nop test or in or sub je mov addr16 adc scas ss test push insb push xor and sbb cmc xchg xor mull cmp scas sbb pop xchg mov xchg inc int3 mov pop push inc int clc xchg mov inc mov shl xchg sti inc icebp aaa and xor mov sti fisttpl roll inc mov stc add jnp or sub or and dec adc pop shrl aaa mov testl pop mov dec fadds adcl push dec clc xadd mov xor jmp push ljmp loopne or sbb jg mov loop (bad) xor and sub loopne test and leave push sub pusha imul mov dec add mov xor sti mov movsb add (bad) repz arpl push sbb xchg aam xor add and push add daa inc (bad) jp cmp sbb rclb loop jne or push mov ljmp lods push xor cmp rorl xor adc sbb mov sub sbb add mov dec mov stos adc les sbb pop mov data16 movsl pop hlt adc xor or pop mov sub add clc xchg dec push mov test (bad) int sub push pusha lea lret push xchg xor adc push scas cmp xlat and repz or cld push adc out push mov repz and add and cmpsb out enter adc sub xor add push push or push out mov pop call imulb ds xchg or push jp rcrl mov adc push in adc ds sbb fadds dec xchg ss (bad) out enter out cmp cmc mov adc cmp ret push mov pop push or rolb les mov add ret paddsw add repz add and sarl popa add call mov loopne inc or mov divl or and push adc pusha dec sub sbb push push test mov mov mov cltd push xor jnp xor ret push lock lar mov fdivrp (bad) or das add push mov mov cmp lock adc insl xor (bad) fdecstp inc and (bad) andw sub test push xor pop jmp dec test ja mov jo daa nop call (bad) clc pop push repnz sbb imul loop add add test add mov sbb inc scas push stos lds pop mov call adc std (bad) mov mov mov pop arpl mov push mov je mov cmp jge and push in outsl clc adc push imul add mov pop sbb sbb jne push add hlt aas mov sbb mov jb mov ljmp out jp ret add adc push push push adc pop idivl into mov add add or or int3 push fisttpll or adc xor in mov les xor in std push push insb add cmp ljmp loop cmp mov (bad) loope sbb dec stc push and dec fstpl sbb and jge xchg fnsave push int jnp dec (bad) dec adc in or enter xorl fstps jmp sub mov mov inc inc and ss out push out int3 insl movsl mov xor dec inc test call clc xchg fsubs in sbbb sbb (bad) dec adc roll je push sbb (bad) faddl fild fs and sbb arpl add int3 push insb int3 mov mov xchg dec fmul int3 in or pusha mov insb inc rclb fist jle dec jno cmp sbb (bad) aas rcll pop sub inc push push ret adc inc push dec nop or gs pop adc popf mov adc pop sti add dec mov ret out sub es sbb inc adc pop fdivs adc or rorb inc mov xchg jnp (bad) push add adc pop xor cli test fldcw push jne pop sub fstpl sub inc jo jno adc lods into pop inc (bad) movsl and push mov adc sti test or (bad) and mov out aas xor xor inc push insb inc sub mov divl add or mov das daa cmp or pop cmp sbb adc or pusha je and call popa cld sbb and push cltd lock and pushf push fistpll mov and addb out push push pop enter or arpl pop outsl xor lds leave adc cwtl add fwait push jnp (bad) ss jbe push cmpsb mov sbbl ret mov decl bound addl shl add ljmp not pop jmp mov ss inc hlt outsl push xchg pop cmp or or fmuls mov call dec or repz inc or jle push inc cmp pop jl movb and push fwait adc insb or dec cmp mov and pop in loopne in adc adc add add mov mov loopne insb pushf jle push and cwtl mov (bad) fsubrl ss rclb mov push mov call sbb je addr16 stc ds outsl aaa mov pop push daa push cmpsl pop xor (bad) rcr out xchg sub sbbl aam fdivl xor pushf add push pop xchg dec (bad) mov and jo add add push enter push cld pop (bad) jo pop add add into add (bad) or inc call push pop add or sub cld sbb inc dec (bad) mov push push inc cmp push pusha xor sub sbb mov into push push aad adc cmpsl mov mov test add test mov pop adc and xchg arpl adc (bad) push movsl fildl inc call mov popa ss es push subb adc nop add outsb outsb loopne adc inc push inc loopne mov gs in loop lods dec add push mov or cs push sbb lea imul xchg rcrb shr or add js sbb fdivrl xchg mov and push push jmp shr stos or sbb addr16 fdivrs test or sub and fdivl push jbe int3 push xor and cmp lock pop das imul push push mov and xchg aad aas mov inc xchg int3 push add sbb add inc xchg jo jne (bad) and inc (bad) mov push sbb or fildl ja int3 push sbb in dec fldenv push and fisttpl mov pop mov bound lret call addl pushf or pop fsubr sbb clc rcrl mov add push mov pusha sbb adc mov insl xchg lret mov sub mov ljmp sbb mov lea sahf and mov cmc pop pop in aaa es std mov push scas (bad) xor mov test push mov test out ja adc (bad) incl or or bnd ret pop or sahf mov sahf cwtl mov mov mov mov mov pop cmp jbe add mov popa arpl or movsb mov and cmp lea pop xchg dec and inc insl es std sub (bad) fnsave mov xchg cmp jl lea add adc mov sbb pusha push and movsb (bad) xlat lret jl inc add lock movb or mov cmp loopne or inc fimul jle js inc lahf inc push lahf jne inc sbb shufps push mov or popa push decb dec dec std sub pop loopne mov repnz xchg outsl and addr16 cltd and fmuls mov pop xor xor mov (bad) mov (bad) sub mov sbb ss push mov xor insb xor xchg sti js loope dec pop ret xor lods jmp sub adc add xchg adc jg lock mov xchg mov and push or hlt xchg or push pop (bad) jge (bad) or push push test push sbb sub adc lea jns iret or sahf loopne xchg das add dec jo cmp cmp (bad) adc dec xor xchg sarb adc jl xor stos pop push mov flds add outsl cmc out (bad) pop inc xor jno inc pop push push cmp dec pop and mov aaa sbb or push pushl ret and or fldl inc add bound mov addl or bound hlt dec or push rcll icebp test hlt lock (bad) sbb or pop adc popf add or add loopne das mov sti test shl in lea addl in popf (bad) std jbe push (bad) hlt rorl ljmp pop mov jne push fistp pop mov mov mov mov sbb adc pusha ret xchg jge iret mov and or cmp cltd mov sub rolb mov xor mov stos or icebp bound mov cmc add imul outsl out add adc enter mov cmp je (bad) negb add je or dec test jg add mov (bad) push add sarb cwtl xor mov pop pop pop add dec pop push push fs ret cld (bad) movsl xchg push cli adc or insb push into mov mov adc (bad) fmuls (bad) dec cmp dec addb mov jne pop cs xchg and or xor sub shr inc pavgb add adc push xor xchg test mov adc ljmp cmp jb je pop inc les jae add push in sahf add pusha inc shrb jmp dec js sub pop je test fs sti or sub push pop jo cmp movb test xor jle add mov sub test push and cmpb fistpl in sbb je lea or sub jnp mov pop adc push adc jb sti daa xor jo lcall dec loopne pop inc push or (bad) push push mov push jne xor adc mov pop pusha inc call aad aad imul xchg aam les mov inc mov jl push std mov repz repz dec call cmp cld inc and or arpl or aaa jnp and inc or dec push lcall push adc lea roll (bad) mov or jmp inc outsb outsl loope shr (bad) adc cld cmp and cld sar sar add in int int3 stc leave or (bad) xchg clc enter and pop adc mov sti mov test rcl loopne add fsubs cmp bound pusha jae test xchg icebp int3 icebp repnz mov (bad) faddl dec mov test rol mov pop pop pop sbb or leave lea mov push xchg xchg je cmc push push loop push push jns adc push push bound push push inc in adc scas push jbe cwtl in fisub lret push inc push or lea mov cli push outsl out gs mov pop xchg fucomp test enter pop mov or popf popf cmp ret inc push or pusha popf and push das push lcall sub pop ret push cmp sub dec ret fildl cmpsl mov mov stc inc les adc addl movb test lcall push faddl push adc sbb add cmp stos fs mov test xchg adcb roll pop mov adcb cmp dec inc ss push outsb pop jmp fnstcw fwait test inc rorb test add mov and pop jo scas mov pop push mov cmp hlt mov hlt lock pushf xor bound arpl mov xor cwtl or push pop fs adcb icebp cmp test jo add loopne bound or outsb push mov mov jle mov jo push sbb mov jo add jl jp cmc and sub inc addl cmp jne xlat addb xor popa shrb rcll mov xor loop das xchg dec fdivr rolb pop mov clc lea fiaddl inc or mov inc xor cmp pushl adc (bad) gs or xor popf sub xor dec (bad) fcoml or mov clc or mov (bad) mov dec inc syscall add jae shlb js add push scas nop inc test jns add add xchg or mov clc add add cmp jl andl lock or jle pop adc and or push and add inc xchg stos xor adcl cmp xchg jns aam dec fcoms jp xchg push xchg push je jb push and int3 jne pusha popa xorb enter push aaa addl mov mov imul test add or jbe pop cmp mov imul insb inc call outsl push push rorb add or cwtl pop push push push in mov xor loope loopne arpl std push xchg xchg js sub sbb daa xor bound fs lods test push add inc add adc mov negb cs jg jmp mov add dec mov mov add stos mov dec hlt out mov lea clc movsl push push movsb clc test mov jmp addl (bad) dec inc jae fcoml cli xor mov lret dec inc push loop loopne cs jp jle inc mulb mov push pop fisubr cmp repnz xchg in jl pop fnstsw pop jl or shlb dec cwtl adc push add pop test dec add pushf inc push inc mov inc add mov or mov enter push lds sbb adc mov and aad fsubrl stos xor push add xchg push add sldt cmc or cs sbb adc enter aaa fs sub jns outsl (bad) dec aaa cmp je arpl fist sysexit or or mov in insl test or test adc sub outsb int3 sti push add hlt fs inc aam inc adc cld push aam lods jne mov add mov pop sbb jne sub scas popa adc and je inc test pop fs pop jmp mov shlb ss sahf inc fiaddl push aam sbb int3 mov sbb push sbb (bad) lock test mov movsb ja mov jmp movsbl testb or jno inc inc add idiv push pusha sub xor jmp imul lea push fistl jne fisubr (bad) or and aas cmp cld mov sbb push sbb add add push mov add fildl loop jmp sbb rcrl shrl je pop (bad) jo xchg pop in xor or add cld addr16 nop adc push mov xchg stos sti fwait xor pushf pop add aaa mov pop les hlt les mov mov (bad) jo and mov jne xchg mov pop and or sti inc sti cld push cmpsl sbb cmpl call cld push sbb jbe inc (bad) es or xchg xor sti lret sbb sbb sub push jge rcll insb pop push sbb (bad) mov pop cmp fldt sti xor inc xchg test mov dec add mov or sub push pusha xor imul push sbb cmpsb popa rorl (bad) xor mov add dec sub inc add outsl mov push push adc lods sub and adc mov push xor or pop inc mov and fnsave call push cs and rcrl subl mov cmp jl mov jmp sbb adc mov push push push test fidivr mov push xor in mov adc addl lods inc cmp jbe push lea outsb lea data16 jne lea sub or lds cmp jb outsl jmp add inc or push (bad) insl add cmp or pop and or and pop adc mov (bad) lock sub push adc or cvtps2pi push pop clc push test scas mov pop add testb xchg push inc adc sbb test mov lods (bad) pop bound push push dec mov pop jne cmpsl adc mov add adc inc add and jns push inc or cmp shll loope jo pop inc lds leave jo hlt lods inc inc xor add adc add mov ja jbe lods mov les (bad) pop std jbe push into test adc fistl xchg sub lock mov roll mov js movsb pop aaa ja push in mov and shl add or shl pop fs and decl cmp fdivrs (bad) ja mul lea popa push xlat inc inc repz ds mov fwait (bad) enter xor cmp movsb clc cmp jbe lea dec idivl dec mov in add mov mov push mov testl inc push mov push loop jno or pop pop cmp je push add inc mov or das clc xlat add sub dec and outsl push cmp jb push push pop xchg push or add (bad) sub sbb in aaa loope test loopne and cmp or sub xlat push add push cs adc addl mov add cld push in mov push fdivrs pop idiv mov fldcw dec mov jl jp (bad) (bad) and (bad) mov sbb repnz lcall mov shr add mov (bad) or mov jp inc cmp ret out mov out (bad) mov push popa jb add pusha outsl (bad) insb adc or pop popa or jb leave or mov addb push mov xor cmpb or xchg mov dec dec jb add shr dec inc push adc (bad) mov inc lea push push mov inc nop or sbb testb je add jno ss ljmp adc iret fcoms jge popf cld fidiv adc or iret push mov dec hlt stos add enter mov mov sbb loope jle inc addr16 push jbe push hlt push fildl or dec sbb pop push xchg jo inc inc inc out pop sub add loop or (bad) mov jmp jl es xor lods call iret orb adc shrb lea in clc sub pop lock lea mov add xchg or push stc mov xor int pop adc inc in jnp mov xchg push ss push adc sbb repz lds (bad) sbb call xchg out or mov js pop inc jmp push push push or into inc inc lcall xchg adc pop xor test dec inc movsl aas rcrb mov leave push xchg imulb adc lock iret sbb (bad) into insl dec (bad) (bad) (bad) icebp push adc nop mov sbb or andl adc and mov mov les mov add xorl or addl or sbb adcb and adc jns push or add lret inc or rcrb adc addl (bad) sti and push pop jmp test jl scas mov enter xchg push inc dec dec cld cmc dec inc jg lea jns jl jl or imul push pop dec ss jo fiaddl add or repnz (bad) test add push ja rclb dec inc out sbb dec cmp jb or ret add and cltd ret add (bad) jl mov mov or lea add and and std pop inc jge sbb pushf test enter inc bound jnp cmp imul inc clc movsb xchg xchg jmp adc add mov rcrb or inc xchg sbb loope aad push xor add rorb or pop pop rcll mov jl inc cs out xor call xor bound faddl and mov pusha or sbb cmp hlt add daa mov std and add insb xor cmpsb data16 sbb fild mov pop sbb stos adc sahf add jle pop cmp scas xor movsb movsb sbb loopne add or push js pcmpgtb shr mov xor xorb push jb xor fisttp es or dec jle xchg mov and push dec mov je std inc mov mov mov jae jp test loope inc cmp dec test jg lods adc push mov outsb mov incl sahf inc sbb xchg std mov pcmpeqw add push push cmova cli xor in insl mov sbb mov and xchg inc out leave xchg insl push imul cmp and adc leave inc mov and movsl ret fcoms xor movsl ljmp or push mov loop (bad) or xchg stos mov sub jl incl xchg fimull daa push clc lds cmp outsb mov pop div addr16 or sbb add sti inc call and mov mov and cltd sbb into adc and shl add mov xor jne insb pusha sbb mov mov iret js stc mov shl add mov fstpl movsl mov stos sub lock inc clc ljmp sub sbb xchg leave mov pop add out rclb dec sub incl jns stos push cmp push fdivrp pop push je add mov fisubl std cmp scas daa mov jle inc sbb hlt lock or inc adc lock and rolb std lahf std add dec or inc jne cltd andl jno xorl inc add sti and (bad) cmp cmpsl scas ret ljmp mov and neg sbb and add xor ret xor test das fnsave push or movzbl mov mov cmp mov push dec ret idiv mov addr16 xor jecxz push mov (bad) aaa jb push sub push jmp ret add add mov pushl mov pop (bad) sti pop lea and popf (bad) aam sbb or inc rcll ret rcr or in mov rcl ljmp push push and add mov xchg adc es or push mov jo or push sbb shll dec push jo push (bad) or lea push adc fsubrs lock roll roll mov insl cmpl cmp or jecxz pop add out and mov iret test or or jb dec or jne movsb sti push jmp adc push or or xchg mov add pop cmp dec or insl loope insl test push push push xchg or xchg jle fisubrl mov js add (bad) sbb jnp sti pop pop decl decb fidivrl jl add xchg add outsl jge enter add xchg jne cmpsb push fidiv and lock sahf iret shr pop mov mov mov (bad) lret adc out in stos sub and add add sbb add dec jmp add inc mov call xchg fcmovnu dec divb jo loop ret rcrl (bad) pusha sbb adc xchg adc and mov (bad) jle cs xor mov fcomi aam ficom or lea jle cli mov sbb pop sbb in ret jle fsts std aaa push jb shr inc lea sbb incl dec pop jne mov or stc sub jns mulb fldt insb xchg pop repnz repz repz into cmc cld jbe cwtl (bad) jne (bad) lock ss push mov pop mov dec jne mov add push push lock incb pop jp pop movsl and push mov popa xor inc push jecxz sarl mov jb cld pop ds pop clc jne mov mov sub in mov mov push les xor inc xchg loopne jle gs rcll daa lea jmp jnp loopne push test in loope push test loop add shll xchg cmp fldl (bad) into (bad) xor and cmpsl ret and int push adc enter lods add out shl lret (bad) xchg xlat in insl jg repz xor sbb xchg pop arpl es inc or adcl adc dec (bad) push lea and jecxz or adc ds and adc fdivrs or lret mov inc lock cwtl mov popf or movsb or jne outsl push (bad) shrb jne inc mov adc mov rolb clc std lea add dec dec sbb jmp add jl mov adc add add xor insl arpl dec sub mov push cwtl cmove xor rcl push mov sbb cwtl mov dec (bad) push (bad) hlt jb add daa push jb stos stos xor stos jb xchg pop hlt stos hlt add insl sarl cmpl bound jo inc andl shl xchg pop and (bad) mov leave or je cmp nop xadd or add pusha bound repnz js lret xor enter mov cltd jecxz xor xchg lock gs dec push add dec mov sub add jbe test or sbb cmp jle jo test out or sub sub dec push add jne and (bad) and jle mov xor loopne mov inc lock insb push push insb pop push sete jp push mov (bad) adc adc dec jns dec es fisttpll mov mov pop inc sbb pop and lock xlat mov cmp dec rorb dec add data16 rol mov repz and add sbb leave jmp pop jle push or lret push push xchg out xchg sbb jmp inc push or or sti add push push xchg and shl (bad) mov mov cltd push aad popa lret adc movsl adc inc ret mov cmp ud2 adc mov jne push or repz or and lea nop xor xor dec loop gs and sub sub push and and push xchg lea mov mov inc in dec jne push and insl sbb adc xor lcall std lea mov xor inc cmp mov jl cmp jle mov pop movsb pop aam (bad) dec aas sbb inc push addl mov (bad) rcr push sbb aas pushf xor jb std pushl add push pop rclb mov cmp dec mov dec ret into sbb js outsb lods cld or jle or mov rol rorl push cmpsb mov (bad) ss enter sbb test lock jg xor add mov dec mov lock cltd jns pop mov add lret pop dec inc or mov fstpt aad lock lock xor add scas cmp pushf cmp cmp adc xor cld cmp mov cmp aam xor or mov xor das and add or rolb repz add aaa push rcll adc mov cld xor push cmp add int3 aaa lock xchg xchg test jne jb leave cmpsb out enter and mov clc sub aaa or clc xor lock sbb push lds jge xor push insl inc cld fidivl push dec mov (bad) mov xor aaa and mov mov rcrb sbb adc sbbl and pop mov enter push sub inc mov jne sbb or aaa xor push or jb cmp test jne and xchg mov add lahf xor ret and cmp daa mov cmp aad dec or loop fstp (bad) sbb aaa iret add fsubp outsl xor dec mov fcomi in xor pop loopne aam push or or ror push test lahf insl ud1 jbe insb in in add push mov loopne xor lret inc or xchg jo into pop in jae add mov or and or sbb sub cltd xor iret jbe lea adc xor and je or mov popa cmp sub inc enter or iret data16 adc mov mov fnstenv je fisttpl pop popa fcomps add sbb int3 mov cmp mov push ds jecxz add and mov pop mov push lock sbb dec adc mov pop or xchg scas or hlt lock call push cli xor (bad) sub out inc sbb lods lock sbb mov mov fldcw gs xor (bad) mov pop sbb xor loopne call xchg inc xor sub idivl popa outsl xchg xchg sbb and pusha addr16 or sbb pop (bad) dec or ret (bad) push cwtl icebp jae in test fs dec fdivl or push xor or or arpl jle pop ret or xor das imul push mov das stc or inc dec xor xchg cmp cmp mov xor xor mov push dec rol cwtl mov push mov add daa repz xor pusha and jmp repz rolb sub icebp inc cmp xchg mov subl pop (bad) lret cli sub leave dec adc (bad) outsb mov pop xor mov pop jne leave dec xchg and and pop sub or jne loope mov lea call icebp sbb imul dec mov (bad) repnz (bad) lock adc adc add sbb ss nop adc (bad) sub and popa fcoms hlt inc mov loope and sub xor repnz adc in xor roll xor push fidivl hlt or sub fwait gs mov or and or test push pop int or xor adc aad sahf rdtsc in adc aaa fdivrl (bad) cmc dec pop fstl fistpll or insl pop fidivr mov push jnp int pusha xchg pop cs rorl xor adc aaa aaa loope loope jmp cld mov cwtl pop or jl cmp inc rorl or (bad) xor movl mov clc cmp sti adc rorb push push das cmp loop jmp jge (bad) sbb jae ja test les (bad) loopne dec sub jo jo mov pop or rolb cli or cmp inc or or pop and outsb (bad) or cmp and bswap hlt lock or and and insb ret or sub adc and sub ret dec jo push mov pop clc adc cli cmp xor add aam adc lock xor push inc enter add sbb inc inc test push dec (bad) inc pop jb or xor (bad) adc fadds test xchg or aaa imul sbb and cmp sbb addr16 clc das dec outsb push cmp test sbb xor sbb nop dec and sub and popa ret inc push pop fwait push jns mov stc mov leave adc inc mov push pop call sub sub cwtl lock inc daa inc xor cmp push subl das push push out xor icebp cld cs loope (bad) shll aaa xor (bad) cmp outsb push push mov (bad) cmp pop pop ret xchg dec cmpsb ja mov dec (bad) aaa cli pop (bad) and lcall stc xlat dec idivb and push loope rorl clc repz cld js cmc ret push mov subl orl cs dec (bad) mov stos xchg xor cmp add inc fisttpl jge adc adc jge neg sbb and loope mov cmp bound mov (bad) int mov mov jo fiadd push loopne mov xor adc pop add les push add or imul adc cli fbld (bad) pop into pushf sub sbb mov add hlt add shll hlt cs pop jp sbb sub cmpsb ja xor repnz add inc and fisttp push sbb pusha or sbb out lock les xor mov pop jle rol loope (bad) pop into sbb js mov aaa jns sbb and rolb cs fidivr jmp jge push xor call in sbb mov rol mov mov pop inc or add int xchg out add movl push adc pusha sbb outsl das cld fild adc movl movl or fcoml cld repnz mov xor adc loope ret lcall adc mov idiv push insl or adc add adc (bad) (bad) cmp jae incl lret shr add or cmp jbe pop inc dec add lea in add inc xor inc or pop aad fwait lea ret jae rcr push pop cmc mov xlat (bad) divb pop sbb addl loope sub mov push jnp push (bad) and rcrl or sub insl jmp pop and sub loope clc add shrb push fwait push xchg adc ljmp dec ffree mov push test pop out sbb outsb xchg adc xchg mov xchg and icebp push test push xor cmp stc pop xchg insb add outsl sahf insl xlat fmull insb rorl imulb adc fisubr lea movsl push push push or pop mov or or push xchg and aas xor dec fs inc sbb add addr16 hlt lahf add test dec inc movsb add push add pushf nop xchg (bad) inc andl fsub shlb mov loopne or (bad) xor out sub outsb mov or fwait stos loop inc pop or mov or or xchg movsl xchg or and clc jl cmp (bad) mov adcb test je es mov jl jp in xchg sahf sub add inc stos adc fsubl test mov dec adc es or sbb leave adc xchg xchg mov arpl lock insl clc adc inc outsl ljmp cli test stos mov loop call jg or mov adc or call mov cmp and test mov inc cmp jns cmp sbb inc test cmp mov sar mov dec mov mov sbb adc and adc in std dec mov inc out sbb fcoms add inc mov fiaddl mov inc icebp out lea dec mov mov inc jno (bad) push mov fdivrl push pop lock fsubl ljmp jl adc inc dec mov push pop inc mov pop in adc and fadds lock xor add into sub mov stos push mov scas test xchg and sub add pop add xchg ljmp (bad) int3 dec int3 xor ret sbbl mov push sahf mov das sbb mulb inc push mov sti inc sub lock mov mov cmp cmp test aaa and (bad) sub arpl push sarb xor loop fs push mov cli mov mov fistl mov mov mov loop jbe add pop sub inc add add cmp jbe mov sbb jge mov xor cmpsl cmp pop dec inc (bad) out cs insb aaa rol pop in movsb (bad) out je xor mov adc (bad) adc xchg push les aam in std faddl cmc aaa fs add pop loopne push inc pop xchg loopne loopne add inc fs icebp jbe movsl in fdivl fsubs lds test leave and mov popl test adc or mov push and sti or jnp adc dec jecxz adc push jb adc leave push jbe pop subl ret jbe (bad) ds pop leave mov insl jne inc inc pop shr push imul fnop inc dec sbb xor mov ret mov shr mov sbb hlt or pop mov shr add mov lods loopne (bad) adc mov and xchg push mov mov push mulb (bad) and arpl mov test jns or dec rorb mov pop aam push add or repnz mov subl adc dec mov addb push lods in sbb js enter mulb mov jge cmpb sti pop testl idivb pop add cmpl (bad) loopne out add insl pop jg push sub sub dec movb mov cmp jne adc and xor ret aad dec or xor add xchg push push jnp daa push and and sbb aam lret jle push pop jbe popf mov (bad) jl xchg sub add (bad) stos or cmp add jno pop aam or sub fidivr push (bad) xor and adc js mov das scas cmpsl ljmp or cli je mov test cmp cmpsl ds or mov or mov add mov leave sahf and add icebp outsb sbb stos xor and pop shr xor cwtl fldl push push lock mov int roll mov mov jp test test faddl mov mov add sub rolb mov xor add rclb insb xor (bad) or sub add cmpsb cmp jge xor jp int imul test je aam add shlb mov mov mov add int3 mov shrb dec rclb pop arpl mov test out fsubr ficompl mov lret add and in cmc inc jno mov hlt mov jbe adc cmp jge cld inc adcl pop mov jnp mov orl lods clc push or push or ud2 stos inc or popa or cmp test push push inc insb or or push xchg andl adc mov aas inc xchg in jge add mov add pop (bad) rcrb mov xor add adc jge jne popa push cli mov push mov add push dec mov sbb out xchg sbb push lea fcomps xor rorb xor or movsl xor and add adc add rorl das lock test add shr xor and fdivrl xchg pop test mov sbb aam lcall jbe sbb sub xchg xor and dec mov mov mov mov dec jne pop not in mov sbb lret and imul pop fsubrl in inc insb xchg cli in movsb fcompl iret loopne pop into movsb call mov add pop or xchg dec faddl push insl je xchg dec and cmp push dec pushaw popaw nop mov sub sub js (bad) jle push or fwait mov push sbbb adc in aas mov cmpl ret and cmp jne cmp fmull movl and scas lods (bad) imul call pop mov sub cmp add (bad) xor xor div sub adc add leave icebp adc int lods and cmpsl pop sbbb enter or insb xchg clc sbb (bad) dec repnz dec pop mov in mov xor xlat and cmp lock in les jb out loopne mov mov sahf or mov bound adc dec int3 mov inc dec mov mov and xor jp es mov sbb adc or sub in ljmp int3 inc and sti mov das negb aas ss push push les gs test jmp movsb shlb into cli xchg pop pop adc dec inc xchg xchg push fstpt add add push lea add inc andl and in scas mov stos xor add push push sub outsb mov lods mov push adc and mov inc or (bad) push adc insl push aaa or or inc aad notl add (bad) cmp xchg dec movb mov js pusha pop push sbb nop pop cmpsb daa add not mov addl clc inc push fwait testb inc daa mov sbb iret and mov mov je fiaddl pop mov jne movswl push sub sub lahf push pushf push or jnp int jmp mov lret inc insb mov dec and inc insb ret enter sbb sub jb insb inc arpl adc rorl adc add push test imulb push push push inc loope (bad) dec popf add (bad) not mov stos test mov test mov (bad) push or or mov dec inc les push pop jmp or aaa xor jg jmp jne mov in arpl mov adc jmp subb push pop cmpl popa sub and jmp jbe int sbb jmp jle sub add jnp and imul inc sbb add fdivs test je sub adc push repnz aaa xchg xor (bad) mov add scas mov push cmc add add cmp and adc and inc and andb push mov push add daa adc push inc inc push andb jbe stos aaa sti push movb (bad) xor dec inc fstp lea push es adc stos dec rorl mov scas sub int3 and scas pop negl nop jne push nop sbb int adc or mov mov inc push movsb dec add or test add mov add add je popa xchg lock sbb xor mov push and xchg or inc mov cld popf push mov adc les or fidivrl sahf xchg sbb inc hlt add inc int ljmp add or sub add dec sbbl (bad) dec pop orl mov arpl js inc fcoms add xor aam inc fst test pop mov sub (bad) sbb call test push add outsl insb mov rcrb arpl sub inc sbb add push or outsb push push aad popa pop and add xor push sbb jp pop mov or mov sbb or fisttp nop add sbb add or leave (bad) dec (bad) dec or and lock push push fadds dec push dec add sbb mov add xor (bad) mov mov and push pop or enter push dec push and and test inc and or pop rol mov sbb ficomp and and or insb sbb or adc cmovno cmp push cmp orb jbe jns addr16 add mov aas adc or and adc cwtl inc lea mov or push sub inc sbb add sbb xor add cld test and and mov pushf push and or jle jmp shll fadds mov dec adc sbb xor icebp (bad) and sub sar jne add dec jbe push addr16 js push and inc arpl sub adc dec repnz cmp add push inc movzwl add mov out ljmp and add push push adc and arpl shrl adc fcompl out mov add or add mov add add or push (bad) decb push jge das inc mov sub add mov and cmp mov jge testb xor push mov or pop and test inc add scas pop stos into add fdivs scas (bad) adc pop repz repz sbb shrl xlat xor andl or sub fwait ljmp outsb mov pop cmp je add jne push jg bound movsbl inc sti int sti jmp xor inc adc inc cmp jle adc and push and or sbb frstor imul push add mov mov pop fisttpl aaa (bad) scas xlat cmp mov mov (bad) sbb in jg lea mov or (bad) js bnd mov adc and pop icebp test xchg mov mov sar test add mul seto neg or push add cmp push or popa add add inc push push pop xchg push rorb cmp sbb pop shl or adc push add push out add jl int or jmp rorl push out rcll test arpl jmp pop dec jbe les das xor (bad) lea jg mov test je inc icebp in pusha pusha inc cmp sbb pop (bad) insl inc mov pop jl ret imul cltd sub xor cld (bad) clc scas rorb add sti ja aam in add lea icebp add lods push xchg cmp push das mov push pop inc popf pop js test les push and mov (bad) add das jl cld cltd mov mov add jp adc cmpsb and mov mov mov pop add push pop mov push or test cmpsl mov sbb outsl add cmp jne mov in sarb mov sub mov cmp dec idivl fnstenv fwait push ds in lods pushl push (bad) rcrb jmp lret sub pop lock or push push in mov mov mov dec jle push mov aaa sti mov dec cld xchg xor or outsl ret inc sub xchg jne inc or or mov pop adc test pop xor fdivrl bound arpl sbb fdivr fs or ret sbb add cmp rclb sahf jno (bad) sbb xor push arpl cwtl shr loope push cmp sbb bnd pop (bad) out sbb pop cmp repnz cmp mov icebp pop inc mov insl mov pop clc clc shr push rcrl pop dec imul mov mov incl and push xor ljmp jg push or dec sub mov jge (bad) incl cmp add aaa sub andl ljmp adc stc and shl inc or inc test js ljmp adc rorl pusha (bad) pop lds imul pop mov lea add (bad) jbe gs push test jb ss add mov sbb mov mov outsb movb inc pop sbb pop sub stos inc lahf mov clc mov loopne (bad) ja fldenv add xlat dec pop and and push adcb lock pop scas sbb xchg dec std push mov shr cmp jne lods add or jne adc pop in jb or cmp jmp push mov ret or xor xchg popa lock (bad) ss xchg push and inc sub loopne mov or jge jg inc sbb orl mov lcall aam inc xchg es xchg jbe mov pop push inc cmp add loop add (bad) jmp pushf adc lea push xor add or or bound sub mov into add xchg or cs push clc pop jmp je add mov sub xchg cmp lock cmp or add cmp mov das jl push xchg inc sub mov adc xor dec pop clc dec mov inc dec (bad) mov mov or hlt mov mov adc orl out jb (bad) jmp and push cltd leave jbe stos or add xor push pop add inc xor xor cld (bad) mov mov int mov cmp jb xor add push mov in sbb shlb dec mov add inc fs cltd push adc dec sbb mov in fldt add sahf pushf lcall jo les ja je pop jbe rcll pop mov mov lods shl or adc jne sarb xor ss add add (bad) (bad) mov mov (bad) test clc outsl imul mov in stc orl sbb and xchg inc arpl outsb push in sub lcall jmp and jno aam and jo fdivs fistl imul incl decl mov push lds bnd inc dec (bad) enter mov (bad) (bad) jae or das mov mov jae inc jno mov pop in jle (bad) int jl lods adc push sub inc lds push data16 xor in jbe arpl sub ss jl sbb cmova es outsl and cmp jmp sbb cvtps2pd jae cmp in mov mov add mov lret (bad) push mov mov mov fsubs mov mov push lods xchg sbb jl push add or test mov insl sbb repnz pop adc add push jns and mov inc xchg mov push cmp mov aas dec mov jle inc adc andl mov pusha pop cmp xor add sti fcoms cmp pop add or out inc sbb mov or daa insb pusha (bad) xor inc pop sbbl or ret pop adc roll into dec dec jne jmp lret movq xor or xchg jl test fwait xor sahf lods mov dec rclb push push jmp mov adc inc dec sbb jle cmpb and pop xchg adc mov je push push and pop push push nop loopne push mov lds lods mov fs adc xchg mov add or adc or add arpl loopne dec xor push aaa inc mov or push pop cmp icebp sbb je or in fs push lahf push lds sub pop sub rcll adc in or add push rorl mov mov inc inc push lcall inc dec stos sub or test push or push lock cmp mov lods mov push jl fsubl dec fadds subb cli in gs ljmp divb cmpsb (bad) adc inc lds rclb push pop add add jo push (bad) mov (bad) cmp add dec ret jmp andl clc shrl sub inc mov sbb lcall fsubrs mov call lods jo or (bad) push and fstl inc mov (bad) xlat xchg inc aaa add sbb and aam je inc faddl jo push aam aas sti pusha adc in pop adc cwtl mov fcomps add mov xor nop push outsl push insl inc loopne xlat sbb cmp mov mov or lods mov pop mov push push cmp add sub push fist daa jmp fs mov push call lea inc enter mov pop (bad) mov outsl fninit push add std in push pop enter nop mov fidivl add cmp dec mov mov rcrl and pop xor mov sbbb pop pop inc add mov mov xor inc icebp add dec jmp fs xchg lock pusha inc std notb xchg or stos or js mov loope ds mov cli or jecxz sub popa sarb jge push push mov xchg mov mov (bad) fsubrp push pusha or and lock mov fnop lret lock mov enter inc mov xchg pop sbb jl sub cmp adc insl pop push imulb (bad) pop push push jge inc cmp scas iret rolb mov inc insl mov test mov push lea mov lret cmp (bad) mov mov add in or lds clc mov ja or mov xchg sub aad adc aad push stos push in sbb cmp cwtl fbld or mov test testl in nop sarl rolb rorl cmp pop add fdivs fstpl lea add sub sub xchg clc push add sub or lea jnp jmp addps adc (bad) pushf dec loope adc mov lds shll (bad) pop add lret and jp add inc dec add fwait popf test test xchg (bad) add dec push das bound xchg (bad) pop cmp mov xchg ljmp pop pop mov fildl das mov (bad) sar dec jne ss in sbb and mov in mov cmp and mov add outsl decl nop push and (bad) mov and xor je (bad) movsb xor add (bad) mov ja in adc mov mov pop cmc cmp fcmovne sub jp inc sbb jbe or push mov dec negb outsl rcll dec shrb enter sar test jle pushl enter xor sbb aam loopne push cmp jl lock or add pop add pop xor mov pop add popa mov fs and push scas adc and shrb adc (bad) push cmp jne arpl loope xchg mov pop and fs inc test mov push outsb aaa mov dec fldt sub fs insb loopne add lock mov andl cmp xchg stos jbe andl sub xchg jbe pusha inc (bad) (bad) movb test jne lods jle orb int3 inc cmp or mov xchg xor sarl mov jo xchg aad jg and sbb test (bad) cmp add (bad) pop rol xchg adc enter xor or dec dec sub dec jmp mov cs add lock sbbl add or or xor outsb cmpl popa insl mov xorps or add mov push gs lret shl mov cmp sub inc or add or jae mov std (bad) mov mov test xchg add pop mov pushf arpl jb jle add (bad) jbe je frstor es adc dec fisubl (bad) in call and das pop adc add daa in scas nop loope push inc loopne inc test mul jmp add and mov and sbb ret sbbb or dec ret xor dec adc and (bad) dec inc outsb or movb or ret add dec push push popf bound jbe mov adc test mov pop inc ss mov mov xlat lret push mov lcall add je fwait mov mov inc dec jns xor jle cmc mov into inc sbb in fdivr adc fistpll jl sbb pop jg inc les mov push in push push inc lods fiaddl inc pop jmp push xor orl adc dec push repz iret dec lcall push add cld pop cmp dec adc pop (bad) pop or xor push jnp and jbe push push or stos push adc lods add subb dec pop mov push int3 pop popf sbb sqrtps sbb sub mov out test inc cs dec push icebp pop sbb imul pop imul pusha fcoms sbb or jnp pop pusha sub sbb fdivrs inc lock shrl shrb mov inc clc fimull out adc mov test mov (bad) mov adcb inc cmp dec popa subl in mov data16 mov stos stos stos sbb (bad) and cli and lea in push lods test or test lret vcmpsd and mov mov pop or pop pop push sbb add sub sbb pop js xor jge cmp add xchg fisttpll adc test adc pop test test sbb imul and add mov inc push int xchg push xchg push push jne outsb rorl stos lock add push push mov jg add cld pop mov (bad) adc inc or je clc mov mov popa dec je xor and or jmp cmp xor fistpl dec mov or or stc mov sbb push cmpsb ja rclb xor mov test sub stos sub cmp arpl inc push mov je lock cmp fdivl fiaddl xor dec inc mov gs enter movsb add call pop adc lods sbb lret push push xchg sub push xchg inc adc icebp add or xlat fs inc mov add in push push push inc fisttpl dec xchg icebp push and cmp (bad) repz xor xchg dec sbbb lods (bad) push mov push test sub pop cmpl and dec add mov sub sub mov adc addr16 add sub adc jnp in fcmovnb data16 lea or push ss push or cmp lret sahf scas dec and inc jbe mov stc xor or ss sarl call jnp adc xchg add out fldt dec (bad) imul push push mov rorl leave fs sub and mov test pop jge loop out adc ja inc or sub sub mov jge pop jne jo fiaddl cltd decl lea add mov jbe adc nop ret int lods inc arpl cmpsl dec insl push xor and cmpsb mov adc scas sub mov mov adc jmp inc and pop xor mov nop testb in inc jne sbb xchg ja jp mov cmp loopne cmpsl mov adc hlt test daa loopne,pt push push xlat push inc push sbb inc xor std add sub sahf push sub push icebp fcoms push mov xlat inc cwtl stos mov jo mov sub push mov lea push push mov inc daa dec int mov test mov mov cmp stos xchg add pop push mov aad fs aaa sbb push in aad pop sub push stc aas sub xor adc push add push jg mov jl into in pop or mov push or mov jne inc inc jmp cmp mov adc aam jb cmp xor xchg (bad) lea and dec std or inc stos lea mov sarb pop and divb ud2 pop jle (bad) pop lds or lea cmp jle mov jge mov ss jl cmp jg inc cmp jl mov sbb mov ds sbb shr lea clc dec dec push insb or jge mov cwtl xchg stos push pop jmp insl pop inc les addb sbb push cwtl mov aas or cmp hlt in cmp iret add or leave fcomps stos add (bad) mov add jo ret add mov push sub xor movsb adc (bad) inc fldcw adc test adc push lcall inc dec xor ss sbb mov adc (bad) je pusha jne push pop sbb movsb mov mov fiadd loopne push movsb fsubs push adc loopne subb xchg fisubl jl jle imul and add sub mov adc add adc add dec sub mov movsl test mov add test fistpll pusha lea addr16 mov jmp inc insb sahf sub inc xchg push push in or leave or cmp dec or testb cwtl inc dec sub xchg and fs push push push in sbb xor lea push (bad) push sbb push pusha in neg add cmp dec pusha push idivb xor cwtl sub inc out test sbb mov inc cmp aaa ret or add fstps push clc sbb and xlat lcall push mov add add sbb add add pop inc add (bad) sahf negb and loop xor jge mov pop test adc arpl jno inc and je jl sbb or pop mov repz dec sbb pop mov push mov inc push sub mov das hlt aaa (bad) outsl mov mov and xor in test mov fistpll and dec or xchg mov push inc fsubl movsb sub movsl aas dec sub (bad) out xor aas push cmp and hlt or idivb loop lret or push push push in or sbb sub cmp add sbb ljmp mov and sbb adc sbb and add push push push push inc dec test rolb inc or (bad) ljmp and std inc mov add and aad pop movsl in call mov call jne xor (bad) jns icebp popf lock xchg add sbb lock and or add push add cmc push sbb sbb aas jne add jge (bad) jae clc sbb inc sub cmpsb out jae sti cmp jle jge adc mov push (bad) fdivs add cs stos mov mov pop sbb mov in and cmp push cld pop fnstcw and xor cmpsb cld sti sahf dec icebp inc mov mov and aad mov mov ret sbb pusha xor sahf add (bad) les mov test or dec xchg fiadd pop or sub test in pop jno xchg mov or xor test shrb or je or enter adc and in xor inc movl in (bad) cmpsb add pop and xor ficomp testb mov sbb xor mov inc fs cmp aaa mov push pop and cmp test sub rolb jg data16 inc out in and mov aam or sbb mov or icebp push push js call push add fiadd ret cltd mov xor mov ret fidiv ret cltd adc mov jo lcall ret adc ret add or mov sbb pop and (bad) iret push xlat into add pop pop sti mov (bad) pop push cs xlat insl ljmp mov pusha cli add ret adc pop std lea dec adc add addr16 push std pop pop jb xor or or loope bound popa shll jnp,pt (bad) push roll (bad) jnp loopne mov in xor icebp mov addr16 push movsb movb mov jg out pop ret lock mov mov data16 sub xor sbb jle xor inc jg push (bad) or in aad (bad) cli ljmp inc scas xor sahf mov insb loopne inc fildl and cld call mov ljmp test add adc dec mov mov sub cmp mov push roll enter mov or insl or outsl jmp sub add add pop rolb add (bad) push lds scas loop test sahf jno test idivb dec push nop addr16 cld mov lods cld lock mov sbb clc lea jmp notb mov div xor cmp or and push or push sbb ret jne fs sub lods fs iret and mov iret pop push test sahf sbb iret and mov pop and std mov push (bad) pop daa fwait insb mov push or movsb inc jl dec push je scas inc and call inc adc hlt div imul add fs lcall sarb call push test add mov push inc jg es lea mov push fsubr xor mov mov sbb add add adc jne push lock dec pop mov or push sub repz push adc cmp (bad) xor or sub (bad) ljmp xor insl jl (bad) call or pop ja xchg jmp and push inc push mov testb aaa adc jmp ret adc xor and fcompl les fildll sbb mov pop cmp fbstp adc js mov adc fild or pop adc aaa cmpb movb mov jl sti push push ficoml inc add sti push or insb sub out imul adc sbb add ljmp add add test dec popf or adc les pop jne (bad) xlat add or (bad) popa add push mov mov push mov push pop sar nop jge mov adc sbb movswl inc adc pop stos sarb push pop push push sbb sub or mov fildl adc jne in ret fs enter adc mov ja and and adc je adc fwait icebp xchg inc loope mov pop jmp push stc jp jne cmpl loopne test adc mov sub inc inc (bad) mov mov push xlat or sbb jle mov ja and pop inc cmp shlb or clc add nop loopne pop mov jbe rolb add and rcrb jge jle decb mov mov mov pop add mov push add cmp mov imul xchg push (bad) sbb imul ret push insl adc iret push mov sbb lods shrb cwtl pop or movsl (bad) in push dec mov push sub insb cld lsl adc clc xor fcomps inc rorb pop push insb fs adc pop xor cmp lock (bad) or es scas sub pop fwait or pop mov jbe add fwait push adc outsl leave sbb loope push (bad) inc ja adc rol or cltd cld pop push cld sbb cmpb jne lea or (bad) inc xlat (bad) outsl push mov push jne dec xor loop roll fiaddl add push jge hlt aaa mov lret adc jb popl fbstp or adc add mov (bad) xchg subl or iret add nop invd push cs pusha add or out aam xor movsb adc or sti jmp pusha and sbb jp pop mov mov popaw test xor popaw sbb xchg sub pop and icebp movsb aam cmp mov fsubl dec lock in cmpl jl adc mov inc sbb out xchg inc dec into loope loopne push add add fcoml jbe mov pop inc dec or jl mulb dec fcomps rep jl add inc xchg insb pop leave jmp or push dec push push or add test dec fisttp (bad) sbb push test mov popf jnp pop popa clc push adc mov mov pop sub (bad) xchg pop inc mov push test sbb add (bad) mov cmp mov or or inc xor ja sub or or jmp mov sub jns fimull push rcr gs daa adc mov jns cld and (bad) daa je and adc push jns jmp or mov or gs or jnp stos addps or inc lcall pusha cwtl push sbb sbb ds mov push hlt (bad) dec or outsb es subl insl ja or sbb fidivl jle xor leave mov rcr aas (bad) jne mov out les add push dec xchg jg inc cmp jl push sub push lods and scas aad adc outsb adc inc mov jbe inc mov mov add mov dec fcmovnb add mov fwait stos popa adc icebp mov sti je mov ja mov test pusha pop in jle add push jnp lock sbb add or mov cwtl fnstsw pop add sub push or jge pop imul sub repz jbe xchg pop rcrb cs cmp je adc cmp sbb mov les insb add and xchg xchg call je (bad) mov or xor push or mov add or sub mov jg pop sub cmc sarb jge ret sub lea push cmp cmp lret mov add lea punpcklbw insl das mov adc jg mov lahf xchg lods (bad) adc rcrl push arpl dec mov push adc je push pop in xchg xor push orb sbb inc jge sub mov incl (bad) push dec xchg mov dec les pop das lret or dec push sub ret inc test mov bound les mov shlb ret dec or push shrl not xchg push dec adc cmp loop mov sbb or ds sbb sub out pop js push sbb push mov push ljmp fildll inc dec jne pop mov jl insb inc sarl (bad) and sbb cmp mov push push ret pop mov int imul or or in mov pop pop or cmc xor or mov and and pop leave repnz popa sbb or cld cs fsubrs jl rcrb sub cmp mov enter mov dec cmp jg test xchg mov mov inc add test divl sarl or rolb outsl jg cmpsl jae pop xchg xchg jmp pop push outsl icebp mov fninit fnstsw cmp jne flds mov insb icebp in adc adc cmp jne fldcw ja mov cmp outsl movsl cwtl arpl sub pop pop pop mov push movsb jle imul sbb and jge fstl push sbb rolb adc cmp rclb add adc jo mov incb adc sbb test push aam jg cmp jbe dec push jecxz stos mov insb lds ret and fsubrp hlt and pop jne push pop or mov pop add dec add mov andl out rep pop and lods cmp jbe jecxz stos inc jmp jecxz push stos imul add inc adc jecxz mov pop cmp adcl test sbb fcmovnu lods mov cmp cmc dec mov stos mov mov jne insl outsl (bad) (bad) hlt or (bad) mov sbb xchg insb jnp or add inc pop sub roll cltd test outsb fs inc fwait mov add add push adc add ficompl cmp pop adc test xor adc imul incl or faddp sub adc arpl mov or push fs in fildll das cwtl add (bad) adc cmpb stos call pop adc out das inc movsl mov movswl pcmpeqw mov movsl or neg enter adc jnp je nop xor xor sbb or cmpsb (bad) adc aas sbb cld ja xor cmp es aad mov insb sub mov scas fcmovne je or jne rolb ljmp ja fdivs adc enter es out scas mov adc or jne cmp fwait cmpl (bad) neg ficoml jae sbb fnstenv adc sbb pop or fisttpl add and adc push push push add inc fidivl mov pop push cli in (bad) pop fisttpl data16 sub sbb sbb bound push sub sbb out fucom xor adc or dec and adc xor sub lea pop mov jle in lea dec push xlat push lods test ficompl enter jb sbb mov or push sbb sub inc dec push lcall push aam or and xchg add and mov adc push jb andl push and idivb push or pushf or or mov das (bad) mov call orl lcall ret adc or inc push xor or lods sbb fisttpl xor cmp sbb adc push orl insb lods mov fsubrs dec adc loope mov or add addr16 je mov inc rcrb inc xor pop fisttpll sbbb adc cmp jne cmp aad aam jmp cmp loope dec mov aaa mov mov out adc stos mov inc mov dec adc and add (bad) pop lea cli or push in fstpt ljmp sbb (bad) and sub xchg mov cmc arpl pop loope or sub out jne inc xor push jg cmp in iret sahf out imul add push cmp (bad) enter jmp mov ret cmpl cmp mov adc test je mov sti mov mov lea je push lret lret fildl sbb je inc jle inc mov pop jbe jmp push pop jmp inc clc incl bound je dec jne push lds jge ret adc lea lret pop pop adc jb pop rorl hlt adc pop mov aad sbb pop pushf bound jmp inc popa mov lock inc push cld (bad) mov jmp jbe je add mov std mov xchg mov call out jecxz mov invd jne push push push xor mov jl mov jne scas mov add add (bad) mov push cltd sbb roll dec insl test and nop mov jge or je mov mov int sbb adc int3 add mov push pop cwtl jmp shrl xor jne adc xor repz dec mov add mov sti push aam push and push loope mov xlat jno push mov lea bound mov dec add push adc inc push rol test rcll xchg or jb scas jns orl (bad) or or or test pusha inc inc loope inc cmp lret (bad) mov js pushl sbb inc add add mov mov add or out mov dec rcr in dec mov fwait sub push mov push xor lock push inc out adc mov sbb push ja jmp add loop sub adc add sti popf insb sub fmull adc xor xchg push add rolb mov rcl scas hlt fistpl iret fldl fmull mov sub pop bound push mov lcall fld1 jmp inc (bad) mov in add or in add fmull jg xlat fisub fdivl fsubl dec flds jbe add sub inc (bad) dec insb fbld push add and sub je mov sbb pop and push lea insl out fdivs fmull fucomip sbb or fmul jne sti fld ficom ret pop iret pop movl inc add (bad) cmpsb cmp fldt outsb or fldl pop inc push insl add jmp adc jg into mov mov adc mov mov sbb dec adc movb and je sbb sub enter dec outsb jecxz jbe and inc jb aaa jmp shr push mov cmp pop cmp inc xor jp ret (bad) mov je mov add push inc nop sbb sbb dec push or mov loopne sbb and xchg mov add push pop insb sbb sub loop scas stos sub pop movsb lret test xor std cmp xchg mov bound xchg mov push add push jae inc inc xor test mov mov das inc sub pop jne inc sgdtl xchg js mov jae push fadd jne and cltd imul ror (bad) ficoml inc into fisttpl fadd je or mov sub sbb loope inc jecxz push sbb mov dec cmp mov scas insb adc js adc shrb inc dec testl or loopne push outsl push ss jne xor addl pushf dec icebp ds or lods pop insl cmp je cmp je adc jecxz lret stos clc nop jo xor cmp repnz mov test andl adc in xchg sbb adc adc or add xchg pop add loop ds mov sbb adc mov les push mov minps adc outsl ret cmc jmp mov cmp jae adc ret loope ret inc cmp jb popl pop test sub mov inc xor add mov mov push add stos mov hlt fsubl cmp add popa pop sbb pop outsb lahf cmp pop test test clc lods addb stos jnp add test pop movaps sbbb mov or xchg mov xchg and mov sbb and jmp pop pop movsb mov les inc jae cmp lea mov inc roll mov xchg lds enter lds adc loope jo push ss dec hlt mov jg mov pop inc stc jne jmp arpl jb jne jae push mov movsb pop or sbb cmp or je test jle lcall push jb mov or and push scas sbb or xor aas cmp pop xor push nop in into int pop mov jmp test inc adc pop outsb mov out ljmp add add xor sub scas fisttpll dec fildl mov fsubp fsqrt fyl2x repz hlt inc bound cs adc add (bad) jo push jecxz subl je or pop mov mov sbb add adc (bad) add aaa xor outsl insl int3 outsl mov sbb shrb push and fimull push or andl inc in outsl dec (bad) mov add jo fs mov or fildl sbb in fcoms inc mov adc or call or sbb in roll sbb stos leave sbb add adc or pop adc dec or sub sti add push sbb adc cmp ja inc or repz in add out and add dec push sbb jle add mov or sub (bad) cmp jbe in lock rcrb mov xor (bad) push pushf jo loopne inc xchg mov or add xchg dec int3 stos mov frndint add (bad) or or or rol popa adc (bad) cmp dec jecxz sub fldl2e cwtl int fsubr cmp out mov std fstp adc icebp or and mov scas and push inc ret adc pop pusha js loope adcl hlt fildl imul test popa lahf das sbb push sub lea ficoml push sub sahf or in sbb xchg push sbb sbb loopne sub xchg fwait xlat mov push addl jnp (bad) xor mov adc add add inc or pushf xor int3 and loope xchg pop fabs xchg mov cmp jno inc inc xor xchg dec int or arpl (bad) xchg dec mov pop mov add mov (bad) cld add push mov and add aaa add push or or cmp adc js ljmp ss adc jne or push xchg in insb daa sbb push or outsl ret loope movb pop pop xor stc stos lcall ds leave mov pop adc cmp mov aas adc jo push movb push push inc faddl push push dec fs mov rclb or mov add pop or mov inc mov adc ret sub or inc sub ss push jne push mov mov or into scas push sbb pop insl adc popl or lock or add in adc push sbb js lods faddl pop aaa addb fwait clc sub loopne mov mov aad adc cmp jne mov push (bad) pop push xchg inc pop call push sbb push pop push add lar push adc push push push jge xchg cs and mov test cmp mov jecxz scas adc mov and jl inc scas sbb jae add scas negb sahf int3 add ret leave in rclb or adc sbb iret add push test add pop pop mov adc sub mov inc jae popa sbb inc or pushf cld adc or mov cwtl (bad) int sub ja movl jle pop sbb cwtl aas jmp in adc push sbb cmp jne and cmp jmp fwait and adc or dec inc xor and out scas and mov or mov pop fdivrs das fisttp jb pop (bad) sub pop movsl into or jl test mov pop adc je testl push mov and mov or flds arpl mov in pop ss or call add sbb les push movsb sbb push divl xlat mov fcmovnb inc mov popf roll mov pop adc rolb insl xchg fisubl cmp fnop mov mov decb jecxz sbb inc inc sub mov (bad) outsl ret movsbl lcall jmp fistl pop adc bound mov outsb divl add xchg cmp ja and and loopne jmp outsb adc movsl (bad) ljmp (bad) mov dec cwtl dec xor and (bad) jo in and in out imul push dec shr rep mov and cmp outsl pop or push and or pop sub fcomi (bad) rolb sbb (bad) pop push xchg mov rcrl or lea xchg rolb adc sbb adc adc dec adc pushf stc sub xchg sub xor cli cmp je inc push (bad) lea lock xor adc mov add add in pop jmp adc pop call mov inc scas jbe stos adc cmpsl mov (bad) clc adc sub or clc push add cmp pop popa call push cmp sbb dec div and adc mov or mov out add fldlg2 enter push sbb push push push push sbb into add dec push jge sbb jge mov inc jl cmc xor cmp xor loop movl lds add rolb (bad) jp mov shrl ja sbb lods cltd jp adc inc push jle aam cmp popaw adc pop mov (bad) jmp shl pushf sbb adc rcll mulb inc les repnz jmp shl loopne and mov push push add aad sbb push pop fistpll (bad) pop mov add inc or xor test (bad) jg add mov sbb add push movl push push sub mov jp add cmp stos push aas or mov push xor outsl hlt push add fsubrs mov es xor inc adc inc mov and mov or or push pusha xchg xchg js and push and jmp je push xor inc sbb cmp packssdw push stos dec inc add add sbb bound (bad) jae and or mov and lret dec inc lahf cli fwait cli cli sub aad add push push sar idiv (bad) orl fbld (bad) jl xchg hlt mov or iret das inc addl cli xchg sub hlt js push imul leave lret mov test call lcall jmp incl test inc inc mov cmp je sub sub sub int push dec mov mov cmp cmp call lock push add or push mov sbb push and clc mov mov cmp je inc mov add inc cmpb loope (bad) lret mov mov aad call data16 fwait insl and xor test (bad) and sbb cmp adc sbbl lret push les add push mov (bad) in pminsw test jne or add push iret sbb mov rorb mov adc inc push lock push add dec andb xchg js xchg (bad) add test push (bad) mov mov cld xor cmp add push lcall jne push ret mov push ret inc ss add mov fadds and arpl mov cmpsb pop push fsubrl je xor add pop xor mov mov lret mov aas mov adc add jecxz in fsubrl cld inc test stc and pop hlt push mov fstp enter push xor adc dec aam sbb test adc jns test xor inc adcl (bad) leave fcmovnbe dec fist jge faddl sub push loop packssdw cs jne ja jae in inc or xor faddp add (bad) (bad) fiadd inc jne xor inc mov dec aam leave test add xchg and test sub add jae (bad) pop dec icebp lods adc testl xchg out xor inc insl mov loope dec cltd enter cld add lock loope fdivrs mov inc push pop jp lods mov cmpsl push inc andb loopne add rcl inc xchg push sub jne ud2 xchg xorb in adc push xchg xchg pop pop mov es xchg cld dec adc or or stc jnp pop and sarl (bad) jbe test (bad) jbe cmp mov (bad) ja mov ja add mov mov push and jl pop sbb add int3 (bad) divb incl push adc sbb xchg xor jl add adc (bad) cmp sbb pop mov (bad) (bad) jmp add cli js or pop mov push pop jne out imul inc cli lcall inc mov lock js pop jne inc shll leave add inc pop test subl add mov icebp push leave add ficomp mov sbb inc mov and repnz sarl (bad) fld fdiv fs or xchg add sbb (bad) incw mov or mov push mov mov nop add loopne adc sbb and jns (bad) fisttp loopne int3 or and lods xor lret mov dec mov or xor push push enter cld pushl jb sti mov iret and and jo and adc sbb or (bad) clc adc in daa push jge and test or jbe test test pop adc fildl sbb pop add sub sti pop mov inc sbb xor jo loop mov pop inc lret cs fiaddl pushf daa mov fisttpl xor lret into je inc inc or mov icebp shl rcr inc cmp jmp and ret pop push addl add dec mov mov ljmp sbb mov sub dec popa insl push fistpl mov aad bound rcr fsubr or pop and testl data16 mov ja mov mov or je data16 icebp inc inc or in adc popa out sub xor jmp lods sarb fwait sbb fcomps adc dec mov ret int or dec and pop xor and xor cmp sbb jge je jne dec mov and popa shll mov test insl imul or pop adc in fnsave or or cmp je lahf add das sbb cld stos in mov mov cmp push test xlat xchg rclb push add fsts divb ret jp je push cmp xor mov mov push inc or jne rcrb call mov ret xchg pop pop pop pop sub (bad) pop popa push push mov cmp push inc mov fsub pop lock lret sub loopne pop pop xchg xor sbb inc inc and mov icebp insb xor lock pop xor xor fdivs dec sub push add cmp (bad) mov adc and pop mov aas jmp push (bad) sub and (bad) das mov cmp ss ficompl loop jecxz sub jbe shr rep adc nop stos sbb pop jp push inc xor test xor call or cmpl mov xor lock mov add or mov mov add and add cmp or or outsl int3 pusha lea mov push xor add jg scas inc fucomip incb jmp stos pop and lds aad cmp mov add punpckhbw pop test inc add imul add push adc pop aad adc in test adc fcomps or or push mov inc add sbb sbb push push mov mov dec or ret push and push movsl fsubrl pusha mov add mov inc fimul jg push fdivs sti adc add pop push mov sbb sub xor in aaa adc sub adc int adc jnp cmp sub inc xchg add adc mov or mov cmpl adc sub mov sbb fild inc cmpsl clc inc movsl pop add cs mov push mov sub popf xor cltd xor mov mov mov jb adc addr16 sbb pop inc call and (bad) pushl mov enter mov adc and das add and sbb pop lea mov xchg pusha cmpsl sbb pop sbb xchg dec dec test mov in dec sbb push adc cwtl mov sub (bad) dec sub xor insl das mov dec int or or and pop js dec cli add push lea rcl ret outsb xor jmp push mov pop test mov mov add or incl add adc mov jb push adc push mov daa mov or cmp daa in popa and mov sbb push add pop and std add cmp int3 jmp and and aam int3 enter and sarb mov test and and and xchg nop mov test and jo push and inc sub and mov and and and and and and and int3 rcl and and fcomp loopne (bad) and call cmp mov clc add mov adc mov mov xor mov mov push lea mov inc inc add dec sub sbb sbb inc jecxz xor ss add xor xor sub and xor xor sbb adc xor xor or add sbb dec dec sbb sbb push push pop pop mov sbb pusha hlt dec add mov clc jg or inc inc movb inc inc inc add sbb sbb fwait lea adc push sbbl push pop sbbl les or insl jnp add insl jae imul jnp sbb adcl mov push lods cmp add inc sub and cmp add xor sub xchg add add nop adc add or fxch jle push mov leave ret adc adc jbe add dec add mov inc pop add push push (bad) (bad) decl scas dec inc push push inc push inc pop dec imul je dec outsb je jb jg mov gs inc js insb outsl jb das push jae outsl outsb add push jnp inc push push aaa inc pop inc pop pop in out lahf pop push inc dec push inc push inc dec dec push push das mov jae insl push outsl outsl je and inc inc neg (bad) add pop popl dec aas inc insl jnp and and xorl push push ja imul sbb dec (bad) faddl push dec dec dec inc dec dec dec inc iret mov iret push push push inc inc jnp xchg movzbl pusha pop push push pop jbe add push sbb in mov pop push dec dec dec dec push dec rsqrtps in push inc (bad) push dec cmovae dec dec sbb das jnp bound inc cmp imul inc inc dec inc rcpps or lock push and push andb divl je xchg inc rcpps jo sbb push jne xchg movsb jg push pop pop inc dec inc jne insb fs push cmp loope insl bound popa bound pop nop shrl popa insl gs enter push outsb outsl ja and pop jno ret cmp mov push mov mov fisttpl out push ja outsb push clc ret xor push push push dec push lods cmp or (bad) (bad) inc push and xor bound xchg out add push and pop popa xor das or in fs sbb or add inc fcmovnb pop insb and das out inc add sbb mov sub arpl cmp lds insb mov gs or adc cld das data16 insb outsb or and and fcomi mov je sub push gs pop or in jne bound je shlb cmp xchg mov aaa pop cmp xor mov arpl jne and je and (bad) mov lret jo sbb jo sbb (bad) mov push (bad) jbe cmp jge popa insb addr16 jmp pop lods in mov dec cmpsb pop ss in sbb and stos in or ja out jecxz (bad) add adc mov inc mov jb push imul je in insl push pop push je jae arpl push insb sub sbb bound insb jecxz jno push adc pop and sbb das dec dec inc cmpl jge imul jno cmp and lahf hlt fwait push pop je inc inc outsl gs insl mov or outsl inc add jne std xor jne test insb pop cmp rclb imul pusha not popa popl dec dec or dec inc adc jo (bad) fsubrs and dec add insl inc enter daa (bad) or inc dec push jnp pop clc add dec pop pop bound jp lock add xor xor xor dec dec push add inc mov outsl xor dec arpl add insb or mov insb jae js jbe scas icebp push pop and jo xchg fmul or sbb lea fdivs addr16 sbb sbb imul pop add dec lods or (bad) xor xor and cmp sub add pand add rolb repnz outsl cmp lods je add inc and and jg mov and gs pop lea loope and pop jp imul cmp sub loope sub inc out inc push push inc push mov dec lock imul int or dec push gs mov xor jne bound jns add sbb push outsb leavew jle sbb xchg outsb shlb mov xchg add mov push ds pop (bad) leave dec sti push in push mov inc pop insl dec push xor pop sub aaa add gs test sbb and push sub or mov shlb test dec mov cmp lcall gs add push mov js cmpsl ss or fwait pop push adc andl sub (bad) mov fidivl push inc loop xor sub and (bad) jne lock inc dec negl mov imul jge lret mov and test add and mov push dec push dec (bad) push ja add adc pop pusha (bad) fist neg adc push jae or imul add scas jae jp dec xor popa popf add or ss das bound xchg lea pop and adc outsl call push pop push xor mov push ret and leave pop arpl or jae insb notb push push inc inc pop addr16 lods popf lock inc ja and push push dec or adc and dec loopne mov pop or mov sbb sbb add pop push arpl mov push pop mov and ss (bad) mov fld jg pop push xchg jo pusha ret pop arpl sbb je arpl out xor stos insb jns bound push push int3 and popa fmuls or pop imul ja push addr16 xor dec and or cmp lods pop insl xor pop cmp mov jp fildl jb pop jae insl xchg jae movsl pop mov cltd (bad) jne ss insb fnclex push pop xchg push pop cmp pop daa data16 movsb mov insw or addr16 or jae outsb cmp ret jbe out imul inc imul pop jnp sub arpl fldenv or jo inc push pop pop pop lock add mov fisubrl ja shll or push and or mov add jo das add dec mov sub cs mov mov mov in mov loopne movsb insb ss jae or pusha stos sbbl xor adc push (bad) fisub add or test pop popa loop pusha mov xor mov call das fidivrl insl sub sub sub push add xor arpl xor mov into bound and pusha outsb jae test add repz test dec cmp movd push push xor xor insl sub insl jae jns or add popl call addl pop test test mov inc xor xor daa cmp outsb fld nop iret xchg cmp pop pop outsb out nop adc (bad) ret inc fwait mov xchg test pop inc or add mov aaa add sbb mov notb insl (bad) sbb lods mov xor xor popf shrl push ret fwait (bad) out push xor push dec dec lock xchg cmp mov pop ret pop push out imul add fiaddl push arpl (bad) loopne jo pusha push adc inc push dec sbb imul pop inc cs inc xor test sub pop fcompl xchg inc sub adc pop push shlb inc mov jge dec jae,pn insb into comiss (bad) je adc andl push push dec or and fcomps xchg sti je push push dec pop negl push pop inc and add rcll inc jae sub xor sub mov cmp or inc or xchg fcomps pop mull ret (bad) testl mov sub jp insb pop lahf xchg pop es outsl js stos xor pop mov xchg jb xchg movsl rorb xchg decb decb outsl sbb pop add enter or rclb repz push xor inc inc push pop jg or fs jl dec insb adc enter push sub sub jle outsl and dec inc arpl addr16 mov dec inc stos xor inc inc sub fimull sbb inc jmp rorl outsl dec dec je jne fadds jb hlt push or mov lods clc dec inc rolb or mov add ret adc daa mov popa mov xor andl sbb roll or arpl add addr16 shll aaa leave pop push adc xchg push (bad) xchg in add push arpl and cmp pop out lahf mov icebp add dec mov mov mov fcmovb pop lods dec fdivrl (bad) lods jge mov lret repnz fwait push push ja (bad) xor push xchg inc inc outsb hlt fild dec dec dec dec dec dec xor (bad) push add xlat sub pop popa bound pop mov push insb insl aaa jo das jno jno je test jp xor mov ss cmp sub inc push xor push stos sub push repz nop dec push inc adcl es das push or mov adc xchg add cmpsb test aaa dec scas (bad) add adc mov xor jmp pusha orl cmpl jg rclb ljmp xor pushf outsb mov jl cmp inc adc or scas add jno arpl stos push insl clc lret add mov jne push sbb mov xchg jmp xor lock inc add pop add sub je jo cmp das ja fldl sbb gs jae inc sub add pop mov ss add add jb pop jae das xchg jne jae insb mov sbb adc adc xlat jae jo add pop xor imul scas or dec shrb jne sbbl lock pop xchg pop lcall outsb pop or inc sub ret imul mov les adc insb sarl cmc insl pop jge and sub fs fiaddl inc inc cmp or orl cwtl rcrb jae pop int3 pushf jo inc cwtl popa push xchg aaa outsb sbb add or and jo cmp mov inc popa sbb add mov adc or mov jne insb inc mov insb sbb or cmp xor ss jae (bad) ss cmp or jl bound fs arpl pop jae cmp sub gs (bad) xor arpl sub test cmpl das mov (bad) jae or and (bad) push aam push rorb mov push sub jmp outsl test into out call jo pop adc es mov xor inc bound fbstp push out jbe addr16 je inc add sbb xor imul and cmp inc ljmp lea push bound mov fs lock and pop pusha xlat popa adc addr16 outsl and test xor adc xor test mov and fwait inc inc pop and or mov push bound push and addr16 addl adc adc jg add pop add imulb cmp sub sub cltd add cmp add and out insb xchg sbb jg mov adc imul movsl push fsubrs dec popa pop inc lods pop inc out pop add pop jmp das add or lea dec arpl dec insl daa dec mov adc add pop push shll sbb xor add insb mov add cmp and cmp (bad) (bad) xchg loopne or and inc out adc insb gs sti jbe rep or cs inc xor or cmp aas or call mov lock imul stos add add mov dec xchg ds xor add lock ja lds dec stos out repz mov fs idiv iret adc mov cvtps2pi sbb (bad) sub sbb test cmpsl pop repnz push push (bad) movlhps cmp fs iret shrd inc xor xor inc pop cmc jne mov pop sarb scas outsl sbb stos pop fstpt and mov pop pop sbb cmp push pop fcompl and sbb out mov mov pminub jg mov sbb and xchg and or mov outsl mov gs sbb push pop and mov ret das or mov sbb int3 aas push (bad) ja pfcmpge pop repnz cmp pop repnz jae imul sbb aas inc fistpl mov outsl and outsl bound movsb xcrypt-cbc cmpsl push xchg mov leave aas mov enter fildll fs xchg hlt and sbb mov sbb jg sbb xchg lahf and mov je (bad) pop xchg and mov pop cmc movd xchg and fucom andb mov mov arpl xor lods mov or pop int fs cs div out xchg icebp jle jecxz xchg rcrl (bad) iret popa dec xchg jg lahf and mov int3 pop add test pop push pop and and mov ja and enter or paddsw or nop pop adc fs nop or ss or dec adc nop scas adc ljmp nop/reserved aaa pop or nop or jb pop xlat sbb pop xadd lea das dec (bad) enter pop mov cvtdq2ps inc (bad) repnz push es mov sbb inc ss or test or mov sbb out pop or sbb ffreep aas pop enter cmovp xchg jnp aas and mov popf pop fimull enter aas add aas and xchg sub xchg and mov rdmsr pop and leave and sub push repnz and xchg and sbb imul sub sbb push xchg inc ss or iret inc ss push aas subl fs pop pop xchg repnz or jg xchg or jl cmp das icebp leave nop or cmp or nop or push cmc nop or nop sub ss fldz pop xor inc add pop imulb sbb adc and das add shrl sbb in pop cmp xor inc aas mov sbb setno test notl lss sbb outsl sbb lea cwtl ret add das pop aas inc xor pop sbb and xor sbb fs cmpsl dec mov and ret sarb or mov movsb (bad) leave nop or lods mov ret sbb das and and xchg and fistpll or sbb pop outsl mov pop mov daa dec xchg sbb pop pop add das add push enter comiss pop pop sbb xchg das popa pop and xchg and mov fs sbb fs js insb enter add add xchg (bad) pop or cmp adc das push add test mov mov enter movsl aas stos loopne aas loopne cmp add cmpl add (bad) and dec mov dec or aas and mov loope into das movsb and mov jnp xor inc push xchg bound jg sti movsb mov xchg mov daa pop and rclb mov and (bad) dec jge flds sbb (bad) or pop adc pop nop or scas iret (bad) nop rcll (bad) nop or pop pop dec inc jno inc outsb mov dec push cmpsl inc inc cmp pop outsl aas adc pusha outsl test mov sbb pop outsl lcall xor shrb adc xchg fsubs idivb adc outsb adc add mov adc mov pop movsl clc insb enter setno adc fs ss mov fs ss dec aaa fbld nop xor das lret nop or aas adc data16 gs add fsts dec and pop fs ss out or or or pop (bad) fisttp repz sub dec outsb aas dec pop xor wbinvd inc ret pop outsl cmp dec xor sbb outsl nop test ljmp inc add sub (bad) (bad) xchg cmp mov insb sub adc cmp xchg adc push xchg and or pop jmp xor mov inc ss loop mov sub fbstp pop mov xor inc mov das mov pop pop xchg (bad) daa enter lahf cmp enter dec nop pop ds enter (bad) out add insb enter mov nop lea adc psubusw adc adc inc ret adc or fs push das adc or pop xor ljmp movq nop or pop call or (bad) pushl fs push cmove out xchg xor shufps sbb seto pop ret fnstenv ja mov aas lret pop test mov movups or nop pop aad aam inc push leave in lahf hlt stc fs push xchg das lahf dec movzwl inc xor loopne or bound xchg fsts addr16 (bad) leave nop or orl push iret enter aas sahf aas and and dec fisttp inc xor in aas lock pinsrw mov push mov dec (bad) fisttp and (bad) fs sti xor in dec pop scas pop cmp cltd mov ss lahf or and xchg and xchg bound and pop scas insb and adc mov xchg and push bsf cmpsb (bad) jbe jecxz mov enter inc mov rclb stos xchg mov add pop dec sbb mov addr16 or leave lss and int pop xchg shlb lock in imul push das and dec xor xchg stos inc scas nop or dec jg mov sbb nop push inc jo mov dec sbb dec sbb out bswap push xchg mov fsts jg pop psubusw shrb push inc xor ljmp nop std rcrb rorl add and inc popa push or scas int adc fstpt loop mov setb and aas mov mov popa stc push mov xor test mov rcrl std mov mov jg fucomp jg cmp lcall (bad) cmp imul (bad) mov fcomip out test mov movsb inc inc in lahf pop clc loop jb push aas popl outsb (bad) xchg out (bad) jmp mov mov sub dec stos fs adc jns fwait mov push fidiv pop inc add and lcall leave (bad) jb mov pop aad jbe xor add call sub mov hlt addr16 cmova std adc pushl out lret shr movhps add stos stos xchg fisttpll adc cmp out add add nop or sub in xchg mov cwtl es aaa adc mov shrb imul call push inc push dec cmp xor int (bad) adc inc dec inc push es out push (bad) mov pop scas sub mov jne sub rcll mov inc push dec test aaa push xor movsl lods (bad) adc andl add cmc jne test popf stos pop lods add jecxz gs mov ja and add pop sub and iret mov sbb push xor mov clc dec add and xor add and add xor fnop les xor addb pop push scas pop push dec dec add (bad) in aaa cmp add add add push nop sub dec add popa add and add add mov add add mov jnp add adc add and adc add popa ret xchg popf xor cmp mov aas adc add add decl and mov and or adc add cmp (bad) (bad) decl movsb (bad) xor or and inc ja sarb iret push mov mov (bad) (bad) (bad) ljmp mov test pop or (bad) push xchg sbb jns cmpsb or shrl (bad) (bad) (bad) (bad) std das mov sbb in scas loope xchg jle push nop jl cltd jg icebp inc cltd mov mov repnz decl add push cld mov dec push jno (bad) pop movsb jle xchg hlt (bad) je or pushl mov dec adc jnp pop pop ret xor mov (bad) (bad) (bad) incl inc lret fstpt push sbb pusha mov sahf insb mov mov ja xlat daa (bad) (bad) (bad) decl mov pusha pop pusha push repz push stos bound call push mov (bad) (bad) call stos sub int3 mov call push mov adc mov mov test (bad) pushl sbb pop into push xchg xchg pop iret and adcl sub jg decl imul mov int3 or popa xchg test jl xor icebp in sub add (bad) (bad) (bad) jmp fmull mov lds (bad) inc hlt addl test dec imul (bad) and pushf or lock stos shlb push fsubrs cmpsl (bad) (bad) (bad) decl xchg mov or outsb in jp push lock sbb add (bad) (bad) dec data16 inc (bad) sbb outsl inc ret movsl test pop mov fdivs loopne (bad) (bad) (bad) inc test push push bound aas ss (bad) sbb xlat (bad) aaa dec (bad) (bad) (bad) call or shr pand jb pop jnp cltd sbb aam neg call jecxz (bad) (bad) (bad) decl mov push rolb test inc ret pop arpl sbb loope incl cmp outsl in push cmp push cld insl sub xor (bad) (bad) (bad) jg pop scas add jecxz std dec xor pop sub data16 sbb lret rorb enter or (bad) (bad) call (bad) sarl or pusha sbb add inc (bad) and pop sti clc jmp decl fist jne adc push push das stos push add sub (bad) (bad) decl xor fild ds mov cs xchg fldt fcomip test aad (bad) jle (bad) (bad) (bad) inc xor jae dec mov pop lret mov lock mov (bad) (bad) ljmp dec pop rcl sub gs clc mov dec mov nop xchg sti dec (bad) fucom xor movsb (bad) (bad) (bad) incl sti (bad) call lret add (bad) sahf jle mov icebp sub fistl (bad) (bad) (bad) pushl lods ljmp mov loopne (bad) scas das pop cmp mov jne sti loop (bad) sub repnz (bad) (bad) call mov or dec sbb (bad) xchg icebp iret shrl and das ja push mov (bad) sub add call rep sbb dec test mov adc clc (bad) (bad) incl test shlb pop push add jae xchg ja sbb and lcall ja inc push (bad) iret xor int mov sbb dec jle scas sub or add jno mov mov and mov arpl cmpsb fbld pop (bad) (bad) (bad) (bad) fldenv mov subl enter jae lret mov test (bad) jnp add adc (bad) in fwait mov jg (bad) mov outsl mov push imul repnz arpl (bad) (bad) ljmp add test pop sub lahf test pop test jo dec inc (bad) call or add les fbld pushf data16 (bad) pushl stos in call lcall ret sbb dec jg ljmp inc adc cmp in cwtl push aas gs inc pop test cltd (bad) (bad) (bad) incl pushf shlb out sub lock fisttpll jo (bad) jmp push add (bad) (bad) (bad) aas imul out mov cmp jo imul cmp (bad) decl mov pop push stos sbb pop leave scas fidivr inc jge mov fidivrl mov or rolb pushl scas mov (bad) (bad) pushl pop jp and stc adc jl inc xor in cmp push add (bad) fcmovb aaa xor mov cmpsl (bad) lcall loop (bad) (bad) ds enter jne cltd int loop push ljmp mov sbb mov (bad) lcall or inc outsl mov sbb jl and mov (bad) (bad) (bad) call mov ficom or mov aas iret fcompl jb push and imul (bad) push xchg jns int lahf sbb pop fimull je lcall cmp jp (bad) (bad) (bad) in cli sbb or ret les sbb or adc fstl mov mov adc sub cmp sahf clc fbstp dec xor (bad) ja cmp sbb pop icebp push xor xlat cmp adc movsl and in out repnz sti icebp xchg sub mov movsl outsb imul mov jmp xchg ds mov out cli push cmp sub sbb andb (bad) (bad) js dec cs adc ljmp hlt sub div cmp (bad) (bad) decl cmp pusha jns sbb cmpsl and adc imull lods jmp pop ret ljmp jnp (bad) jg call aaa jg sub mov out fnsave stos pop insb mov add into (bad) (bad) fnop out cmp sub and jne fucomp adc lahf popa xor popa jmp (bad) xor iret arpl stos nop pop jae cmp sahf aad fdivrp (bad) (bad) ljmp out cmpsl sub pusha stos pop stos pushf outsb test mov push mov mov mov (bad) lcall xor inc mov sub mov push fwait cltd mov notl (bad) (bad) cmp clc ja jecxz pop xchg in adc mov (bad) mov mov pop js cmc push sub sbb ret sbbl (bad) (bad) (bad) jmp mov push xor push in (bad) out bnd ljmp (bad) jae jl (bad) mov dec pop jecxz fs (bad) and stos stos mov pushl clc fcmovnbe dec lret cli add mov push sbb and inc sahf jns fdivr (bad) (bad) inc dec test push bound iret inc lea orl ret and jg (bad) (bad) call mov add sbb add (bad) and lea (bad) (bad) fistpll push or hlt lods sbb xchg lock inc jle (bad) icebp in pop (bad) fstpt and (bad) (bad) pushl fidivr out lret cmpsl repnz xor test clc sbb out call stos aaa clc (bad) jmp or cld stos add fmul or test add call std leave sahf push push rcr jae int push adc pop addr16 inc jcxz xor (bad) jno,pt (bad) ljmp sub out ds sub sbb pop cmp (bad) incl xchg sbb dec divb imul hlt mov (bad) (bad) (bad) pushl or push and mov mov scas popa add idivb push inc inc and je and mov (bad) sbb xchg mov (bad) lcall mov test jg test bound jmp inc cmp clc (bad) call lcall sub sub fiaddl mov push (bad) jg adc xlat movsb rorb out lea adc mov ljmp mov jl into sbbb cltd mov imul (bad) incl sahf (bad) and xlat cmp mov cmp cli leave sbb (bad) (bad) jmp es jecxz je outsb cmp inc pop (bad) out push dec cmc xchg (bad) (bad) (bad) pushl inc inc daa xchg dec mov xchg imul xchg xchg sarb inc adc arpl test dec sub jmp hlt pop jl sub jo daa add adc add dec adc js adc dec faddl stc pop nopl movsb pop clc (bad) (bad) jns inc pop outsb mov push pop xor rcrb fs icebp (bad) jnp pusha pushf sub inc fistp insb arpl ret stc xor add (bad) call dec scas adc xchg and xchg xor and mov mov lock incl mov fisubr mull sar xchg mov or (bad) (bad) (bad) push cmc int3 out mov jge daa std popf ret push lea repz arpl je cs stos outsb outsl cmp (bad) pushl std clc hlt pusha fcoml test fucomp mov imul push jnp aaa sub insl cmp dec cld fcmovnbe gs call sub push int3 xchg pop cmp fnsave sti lahf jnp pushf jge mov mov incl xor lods pop push mov (bad) cmp incl (bad) cmp jns adc xchg loop subb add sub int3 dec jne loop call sbb js,pn inc adc push xchg mov mov lahf sbb imul (bad) cli in lret mov loope pop push inc inc xchg shrb fldcw pop loop dec pop aad scas fs test fimull in push (bad) jg incl div clc jnp dec pusha add cmp mov cmp add (bad) (bad) incl int3 cld xlat xor xorl lock mov pop add push mov ja scas call push popa cs mov mov out je ret xchg stc data16 sub call mov mov frndint (bad) jl test (bad) (bad) (bad) fistp test xchg pop xchg mov inc jo mov xchg push aad dec fiadd leave loope or incl test sahf test jg push test xor (bad) (bad) pushl les pop pop call and (bad) outsb sbb fbld mov mov push fdivr push cmp into loop push jg dec add push cli addl (bad) (bad) jmp daa shl or inc xchg ja dec pusha ret mov test sub (bad) (bad) mov cmc shrb fdivl xlat sahf out arpl cmp xchg ffree push xor ret mov mov jge jmp sbb add decl or and xchg jl jb mov pop rcrl jmp (bad) (bad) mov push in mov cld or jl fadd shrd out push push clc out mov clc (bad) (bad) jg mov out aad les push into mov (bad) fnsave lcall mov loopne pusha inc aaa into cmp iret cmc cli (bad) aaa ja stos sbb outsl icebp jmp pop inc aaa mov sarl adc adc sbb fisttpl sub (bad) dec mov mov mov outsb ss jg inc hlt cmpsl jns xchg mov enter out clc clc (bad) (bad) decl push jge lea or (bad) dec rorb cmp push inc mov lods add pop mov lcall aad mov loop out arpl out xchg imulb push incl pop jge add movsl (bad) repnz popa rolb pop cli call in (bad) pop fs loope cmpsl lret (bad) jmp shr das (bad) (bad) push imull add pop or (bad) mov in add fwait xchg in cmp nop jmp call mov sub mov add lods aad jge jge (bad) fildll sub jno iret mov inc (bad) pop dec jg (bad) push mov lods sub out sbb std lods mov fwait cli push (bad) (bad) shr int3 push mov sub data16 adc add pusha jne inc push jg (bad) call jecxz insl add mov lock jmp mov (bad) (bad) cmp sbb xchg sub cmp cmc and sti push cmc sbb fdivrl xor (bad) mov xor add ja sub (bad) ret (bad) jg dec stos pop xchg lods int3 push pop call bound aaa xchg stc and into loop (bad) (bad) jnp sti fs and mov mov inc cmp fimul out fs (bad) (bad) fisttp insl (bad) sub pop or inc lcall fisubr enter (bad) and mov sbb ror mov push fldl pop cmp (bad) decl xor mov mov adc inc outsl cmp arpl fwait rcrb mov sbb scas jo dec (bad) lea pop out push jb pop lcall (bad) jge scas or inc inc int3 loop dec push (bad) xor mov sub loope cmp push ret mov into (bad) cmp outsl (bad) stos and clc daa jb mov jg jmp popa fdivrl xchg out jns mov cmp push mov xor (bad) (bad) (bad) dec mov sbb not (bad) mov (bad) stos call sbb (bad) sar das lock cmp or sub cmp addr16 (bad) jnp lea mov mov sahf imull (bad) fisttp inc lcall aad inc fldenv sub xchg leave cld out (bad) incl (bad) adc cli jmp mov pop fs shrl (bad) cmc and push notl shlb (bad) mov cwtl push mov jmp pop lahf fist mov mov adc inc je (bad) xor dec and daa xor lea mov fwait sbb out icebp jecxz push fimull fcomp push iret jns into outsl jle (bad) ljmp cmc int mov out sbb popl repz and cmpsb (bad) call pushl xor int3 push adc lods mov jne xchg ss outsb int3 jae mov bound sbbl push (bad) jno mov xor shl inc lcall (bad) call leave add test loop and xor and add test mov (bad) sbb sub push jne push pusha mov inc (bad) fnop lcall inc test xchg and lret test (bad) call sar (bad) jp stos stc dec pop ret mov add push add loope lcall shrl jecxz pop cmpsb sub out ret dec mov loop (bad) push jecxz (bad) push out ret cmp test shrl jbe add push xor sub jno cld pop fwait or add pop je insb jo (bad) lcall das sub dec arpl pop jae imul sub dec push inc dec pushw ljmp jp in dec ja dec imul fdivr insl jno inc xor push inc dec inc sub ljmp jno xlat insl js jp je jbe xor xor pop cld fildll lods inc inc aaa cmp dec dec dec dec lahf dec les push push dec push dec pop pop bound (bad) push idivb push arpl inc dec push sarl int int (bad) mov cmp in icebp lods mov pop mov (bad) mov pop imul fucom fucom outsl pop imul sbb dec push cmp mov xor insb fdivrs cmp push inc pop popa ret xchg xchg arpl clc jl test clc (bad) (bad) pushl cltd idivb (bad) push repnz fisubr mov vandpd xor add call test out (bad) sbb call test out jbe lcall (bad) popf mov leave inc cli sub jle jge out cli cli adc (bad) jg inc inc leave sti lock lods in mov aam pop mov (bad) (bad) (bad) (bad) ljmp movsb mul jb xchg fwait rol jne mov loope std sbb xchg xchg scas dec es (bad) (bad) ljmp ss jle aas inc cmc div add xor pop push movsl mov (bad) (bad) call in xor icebp icebp or jno xchg stos fcomp jae xor push sub add xchg mov and and ret pop xor sbb aaa xchg xchg mov (bad) ljmp das lcall adc sbb loop int jmp dec daa daa mov jg mov ljmp sbb sub xor sbb aam fsubl stos pop pop out (bad) (bad) (bad) mov push push divb cmp (bad) (bad) popa jge mov push sub jnp jecxz ds das das (bad) jg pushl test mov shr sub and pusha jecxz cld pop jecxz push (bad) jns mov mov pop in or mov addr16 lcall cmp dec dec ficomp aam pop pop call mov out out jg (bad) ljmp dec stos stos in sti sti push xchg lds xor test decl stc stc adc add (bad) jg xor cmp add lahf mov mov mov (bad) decl (bad) aas xchg and popf popf mov icebp cmc cmc add mov sar mov shrl push in lcall std repz mov rcl insl or or adc xor mov call call int3 cs pop cmp cmpsl pop cld jle (bad) jp cmp inc enter mov sbb sub jae xchg rclb sbbl mov and push sub jle nop nop stos or inc lret (bad) mov mov adc cmpsl (bad) jns pop pop loop or sbb fneni(8087 das jno add je dec adc (bad) (bad) decl push xchg dec dec fisttpl push or and mov loop mov (bad) ljmp lods lods out les cmpsb cmp xchg movsb shl in bnd mov out sar (bad) decl aaa aaa pop fisubrl mov lea fs dec dec rorb std jmp insb mov push cli repz hlt pop iret ljmp mov jp scas scas jmp mov test push js dec and jb,pn sbb and cmpsb cmpsb icebp jae mov xchg (bad) cli (bad) (bad) inc push lret call fnstsw je ds pop and mov mov (bad) call loopne jo jl ds jno mov int3 data16 nop dec dec fadds add (bad) (bad) (bad) incl sbb push adc popa popa mov scas push push stc imul xchg cltd rol cmp test fbstp loope jmp clc adc cwtl cwtl mov adc xor imul pop mov (bad) call mov push push and jmp into dec stos push push call sub (bad) (bad) (bad) (bad) (bad) jp mov or or fcmovbe out xor (bad) (bad) ljmp mov sub sub adc mov mov push cld insl mov push cmp push jle gs sbb movsb (bad) (bad) ljmp fsubl pop xchg cmp inc icebp lods cli pop stos dec jecxz xchg and cli push lods jbe idiv (bad) (bad) decl add in cld lds lret xlat es mov dec and inc (bad) incl push cwtl pop inc loope das jne orl sar movb pop clc decl pushf xchg mov push mov pop je rorl imul mov enter push mov cltd pop imul jno mov (bad) (bad) (bad) decl lods data16 cmp sbb (bad) xchg push xor push jg mov ja mov imul or xchg jo push sbb xchg clc mov jae and add jecxz scas push stos sub ljmp pop das mov add or and push ljmp pop mov sbb cmpsl jns xchg repz repnz imul push add bound les push popf mov mov xor test sub inc pusha out stos pop jno push mov and cmp dec mov jmp mov mov les add aam pusha xchg xchg decl (bad) mov int3 fstps call mov out pop cmp out (bad) inc psubsw test leave inc or push cld ljmp in dec push adc insb pop jb std push dec and push cmp sub fstps sahf cli (bad) (bad) jmp fwait pop push shll cmp addr16 push out mov xchg rcrb fwait xchg sahf add dec (bad) (bad) call push and sbb sbb loop mov in and inc adc pop sbb push or lods sub test test (bad) (bad) (bad) lcall pusha std testl cmc mov pop sti jle mov jbe and fdivl in cld dec in arpl xor lret test adc adc test jge (bad) (bad) call mov xor (bad) sub dec fdivl push in ja jecxz sub (bad) ljmp xchg dec cli inc jmp mov mov jge fsubs xor (bad) (bad) (bad) (bad) (bad) fnstcw rol mov mov cmpsb cmc or fidivl mov in insl hlt call xchg or push jle bound repnz (bad) (bad) mov pop (bad) ret scas cmc lahf pop cmpb aad test (bad) pushl adc jge call cmp or sbb in lcall dec lcall jmp jle mov call (bad) ljmp push in or sub mov sub and (bad) movsl xchg xor aaa and xor aaa cld (bad) lret nop (bad) mov mov fcoms inc in push jg push push pop xchg imulb jbe (bad) lea (bad) (bad) (bad) out mov int3 stos dec push in add sahf (bad) mov dec push sbb sub mov popf pop ljmp mov sti or pop xchg fcmovnbe (bad) (bad) ljmp insl (bad) inc adc mov adc jmp cmp into test daa out mov leave xor inc mov pushf rcr pop push bnd sbb lcall sub jns (bad) aaa cmp mov std stos pop fistpll (bad) (bad) incl lret cmpl mov ret jb loop or cmp mov sar (bad) decl add or (bad) mov pushf fs rcll xor (bad) insb pop je mov push push mov xor addr16 xlat stos jbe (bad) leave jge pop inc cmp mov loopne pushl mov xchg es (bad) int3 xor in jno xor pop cmpsb sbb and daa mov (bad) (bad) (bad) jg sbb outsb pop mov sub das test add and mov push mov iret mov sub inc dec xor push cmp test mov (bad) (bad) pushl pusha mov and push ror or in pop xchg inc pop les sbb orl and nop mov mov push xor or and (bad) (bad) fbld xchg in out aaa insl (bad) aad test gs or (bad) (bad) (bad) jmp je dec mov mov dec add push popa xor (bad) (bad) jmp adc mov push xchg into push sub mov inc push lcall mov aad movsl cmp repz sti jl cmp xor test (bad) fsubrp lret push jnp lods ret out dec xchg mov (bad) decl inc cli ret dec or mov mov pop mov and lock aam pop int3 pop gs insb pop push std in mov lcall inc push cmpsl lea mov les pop ljmp xor lar mov imul adc addr16 xchg repnz into lock (bad) (bad) (bad) call lods xor call inc icebp sbb sub mov bound stos sbb (bad) cld push ds (bad) sarb lcall hlt pop (bad) xor cmp insl sub pusha jb mov jp xchg leave pushf (bad) (bad) mov dec scas sub mov jmp cmp push cltd popa pop sub mov lcall loope adc push and add (bad) dec (bad) sbb out fild fs pushl lea clc inc sarl mov mov or jmp cmpsb jb leave or das mov lock inc xor (bad) (bad) (bad) (bad) (bad) fstpt adc inc inc cmpl (bad) xor and xchg adc (bad) (bad) (bad) decl mov imul cli test adc dec aam in jae push scas pop xchg sub ret leave (bad) je mov out pushl xlat jne sbb pop lret pop mov test (bad) jg or outsl sbb in fadds sub int3 mov mov cmp insb (bad) (bad) call pop sub popa mov iret int aas pop rcll test (bad) (bad) (bad) jmp sahf pop push repnz and mov push clc jmp movsl addr16 in faddp xor sbb data16 daa jne xor push dec stc popl mov aaa mov aam pop pop jge mov dec jne jne sub test pop xor inc and push in push test mov pop adc in push xchg inc sub inc leave pop bound sub mov push test lock push push mov test or mov inc or or test push mov push (bad) icebp sub insl shll push push mov movsb into lods xchg sub sbb mov jo mov sahf jo push and in adc test mov pop xchg push dec scas pusha stos inc mov enter push rcr sub sub imul adc push xchg mov inc (bad) (bad) mov mov aam sbb pop test lret mov sub inc in xor mov add xchg add add dec add aas add adc test xor lahf fildl sub inc adc sub sub cmp stos xchg push push push push leave test stos stos add pop pop jmp aad (bad) push sar or popa imul mov cmovg dec adc data16 push push fadds inc lods add cmp push mov pop adc jo push lock add fdivrl inc jns and fs add mov pop dec imul xor adc jo outsb dec (bad) mov data16 sarb je mov sub fwait insl js add (bad) adc jae mov inc add je mov outsb push jbe push pop mov inc into or mov or push test jo add push add movsl or dec data16 popa popa in jno push das or leave mov data16 ret fwait or inc insb outsl jae dec gs lea insb loope push inc push jae mov mov pop popa adc jbe jecxz imul fwait loopne or dec fs insb insb xchg inc adc or mov lods or inc pushf push outsb sbb add in push gs (bad) js jo repz dec repnz sub adc insb rolb mov call sub sbb gs lahf insb inc out dec jo jae insl rsqrtps inc mov xchg adc scas jne xor adc xor cwtl adc push mov xchg add popa bound movsl add sbb fs imul stc push imul fmul adc test jb pop pop and mov pop test or cmpl (bad) jo bound (bad) xor cmpsl push inc add aas jbe mov test fdivs adc imul hlt les jae add pop mov ret or pop push pop ror mov gs inc pushf in mov fstpt add or test or add andb bndldx pusha inc loopne fildl mov imul adc mov out arpl xor js daa outsl addr16 inc hlt cld rcll add jmp mov imul imul add cmp sahf addr16 jb test shrb sbb adc pop inc movb inc push iret mov icebp clc sub pusha mov gs outsl jns jo das and add sbb mov arpl pop push outsb push arpl inc adc push mov outsl mov decl jns arpl or insl push adc dec rcll jle jae dec cmpsb or vpmacsdql or (bad) gs push push in ret setne inc push mov out inc push bound inc das or out mov inc das and dec flds fcoms mov sbb add dec mov cwtl sub or cmp or lds jmp pusha ja jne cmp andl cmp xchg sub sub insl shld mov dec add push nop test imul add and inc addl xor lds sbb xor and mov lea push popa fmull inc xor adc leave jbe and lods push adc add loope mov adc inc push pop and add push gs and hlt jmp icebp xchg data16 icebp ret sar add movsb jnp scas (bad) xchg sbb in ss jmp dec adc js rcll inc frstor fs mov sub daa imul rol ret jb fs or lods mov (bad) aad adc repz arpl mov bound xor mov or pushf call gs outsl in les sbb jge loop mov ret andnpd dec out mov mov les push decl les outsl inc aam dec lock sbb dec pop jno orb js add dec inc in pop lcall aaa or or inc or sub add fwait popf inc mov xor sub outsb (bad) xchg and daa add insb pop and mov lods sub xor mov fsubrs add add mov mov xchg dec sti push mov push cs xlat jne push pop and (bad) daa mov add adc add add add add add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa lea push cmp jne sub jmp 