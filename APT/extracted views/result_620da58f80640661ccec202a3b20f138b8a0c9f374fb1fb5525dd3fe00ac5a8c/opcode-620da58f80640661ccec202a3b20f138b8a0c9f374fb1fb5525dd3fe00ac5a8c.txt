(bad) (bad) call in push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call xorb push or packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret cmpl fstpt jle mov pop rcrb pop insl jnp sti mov movsbl adc adc adc sarb rcl or adc in in inc pop daa push or std scas pop or mov inc jmp jnp ret ja fdivr cmpl movl in (bad) bnd lea call (bad) jne push sbb cmovo sbb add add je or mov pop jmp fsubr jmp pop mov sub mov and sub out shrb (bad) call clc or push push insl sub jle cmpb pop xchg call fistl clc xchg dec or sti or cmp enter inc fimull push sti (bad) mov je or inc add (bad) cmp clc or add fmul push mov pop jne mov dec sub jnp mov sbb call or or jmp aas mov sub inc je cmp jae and dec jl,pn inc (bad) jmp inc int3 fistpl test cmpl sub mov daa cmpl jbe or add adc lahf pop xchg sbb les fcomps sar movsl pop movsb inc sahf xchg ret cmp and jb cmp mov (bad) cmp xor dec (bad) jbe sub sub jmp mov xor cmp fisttpl (bad) xor xlat movw idivb and mov push pop sbb push or pushl sbb jg fmuls in or mov mov lea mov pop mov stc out test add jae jae mov (bad) hlt push push jmp gs push pop push lret add sub mov lock inc push cmp test mov mov mov cmp push sahf or fidivl or sub mov mov mov add or mov sub popa adc cmpl dec mov dec or rorl adc sub fstpt mov push pop add (bad) and xor push mov sti fstpt add lret jl in fistpl inc rorl fisttpl xchg aad cmp sub push fadds nop push inc push fldcw int inc fdivrs cmp rol (bad) je hlt fisttpll cmpl xor mov mov mov je mov es mov xor push repnz or add negb repnz push fstpl or and add std (bad) jo cld mov sub and in mov imul lea push mov popf jecxz add cmpl rclb mov (bad) jle mov adc sbb add xchg out mov arpl gs mov std add adc xchg imul xor out (bad) lock clc sub cmp adc mov repz push add (bad) mov jbe movb adc inc out jae fstpl lea cmp lahf add fsubl ja jne mov mov (bad) fidivr adc rclb sub sbb add sbb jae add adc lods pop js mov jne mov imul mov insl cmp sub je pop in xor sub cmp sbb xor in incl push add xor jno cmpsb (bad) xor inc call scas mov jne xchg mov mov incl and or rol and loope dec cmp ret mov mov inc jle lea xchg out jne mov (bad) adc sarl cmp push xchg inc add cmp addr16 xor and mov adc cwtl push jp inc pushf mov lock ss jb add lock cs outsl pop adc (bad) cwtl mov or mov (bad) and pop aam or sub fsubrs mov fwait decl mov sti mov mov sub outsb pusha jp inc cmpsb xchg lods arpl mov (bad) xor scas mov mov xlat test adc pop mov adc mov xchg addl push mov ja mov and stc cmp and nop xchg mov sub xchg sbb inc adc test int3 xor mov scas inc sub cmpsb cli sub dec and cmc and jne and add (bad) mov mov add xor or movl push xchg jo cmp xor lods xchg roll xor mov jo sub sbb dec fistpll sbb lea cmp outsl scas add sbb add adc adc or gs add push dec add adc mov mov pop ret mov pop lods mov loop or mov jno je jbe cmp inc sbb add cmp and les jge xorl sbb mov jg ja inc xor push sub sbb add mov inc cmp in sub jo imul call or cmp sti mov cmp xlat jnp xor daa insl scas cld add pop xor iret xchg inc cmp jae in or cmp lcall les push inc cmp jl mov cs or or and jmp sbb in mov add add adc test ficomp inc in in and aaa cmp push pop jns adc cld aaa hlt xlat and cmp in lea push (bad) (bad) xor movsl fucomp addl jmp mov add aad ds mov add (bad) push dec std shr push fstl adc and nop mov mov das push or (bad) lcall ja inc cmp lea (bad) push jbe je stc inc or jl sub je or mov popa fbld mov pop or dec cmp idivl adc cli xor scas and mov fs fnop xor das fstpt fdivrl jae mov push adc mov add xor pop ret pop imul sbb mov adc rolb mov mov add xor sti roll xor pop ja push sbb pusha je and incl xor jbe data16 sbb inc or mov dec push dec sbb pop mov nop popa sbb inc fimul or sbb sbb or mov imul fisub mov js hlt sbb fimul add sbb cmp jl scas mov out std insb mov pop js adc aam stos movsl push dec int int3 pop push sub push sti (bad) aam push sub lea cmp cmp cmpsb pop lcall sbb add push stos rorl ret imul jne cmp test mov pop mov icebp outsl stos fnsave jp push push or or (bad) je out mov insb mov loope sub push outsb adc popa test xchg sub xor xorl push mov stos mov andl into pop clc es adc mov pop lret lock je (bad) stos push jns je add dec mov mov sbb sbb sti shrb mov push ss sti inc or icebp andl or addl mov or rcrb xor insl imul ficompl sub pop jmp sysexit jmp ds push or sub clc add icebp inc push or jge mov mov jns loopne jne pop std lock repz cmp loopne,pn add or div pop add cmp lock call sub sbb stc push inc lret jmp mov lock push lods mov jb hlt mov dec xor jae nop aam adc outsb jo adc pop mov inc sbb sbb fstps inc insl sbb adc mov pop inc or cmp or imul inc and add mov dec mov std aam mov hlt icebp pop and sbb add lret push fidivr data16 sti sub jle int3 mov repnz pop or test mov outsb rcll sub or test xor inc fadds iret rorl das inc cmpl sub rolb fidiv add jp add lcall xchg mov push pslld decb hlt jecxz data16 mov adc insl or push movsb (bad) adc lods bound push push push cld mov roll ja fisubr xor sbb add xor mov cmp sbb in hlt sbb mul in out sbb sbb push cmp or jo cmp hlt (bad) push sbb sar or inc call cltd in arpl xor mov or lock mov mov rcll mov stos jp jnp ret dec ljmp or xor iret sub mov push dec and push push push popa test mov rclb lcall inc test push push push jmp adc adc xor movb aam data16 fcom ljmp or test rcrl or lock dec mov ret jbe xor or mov aam rcl inc push push subl pop or push jmp cmp push mov push jne das or inc in hlt sbb push imul mov sbb sbb inc je cmp mov pop fstl je mov cmpl or pop jmp adc inc cld xor jmp es jecxz movsl insl inc lea lods jmp jns add pop pop (bad) mov fsubs testl sub and stos push hlt movb ret pop pop jle push idivb cmp je pusha loopne aaa add jbe mov lods fs sub aaa test sti sub mov sbbl adc mov push call les add and xchg sub push or mov pushf or test (bad) lea hlt push or xor and jbe mov push pop adc dec stos push xor pop pop inc mov adc (bad) les rcrl fsubr jno push inc (bad) or jle push and pop inc mov lock or push jle test add or cmpsb pop add (bad) imul fsubl fldl mov cmp test mulb mov jne int3 inc push inc mov clc push dec les inc mov inc push mov and mov mov dec xchg xchg cs stc inc or clc test aad mov jae push outsb mov (bad) xlat push push cmp in or test xchg push (bad) lods int (bad) jnp add dec lea dec sbb sbb ret mov loopne inc push sbb add or in pop mov clc cmp cwtl add mov or push xor add add jmp (bad) xor rorb js jbe rep cmp cmpsb ret es test mov add or jnp mov into push jnp mov jns pop pop adc sub jne and (bad) pop subb sub push and add hlt jmp out or mov daa mov dec jmp es sbb jl divb sub stc lcall mov aam cmp adc ds testb orl mov push mov dec pushf or (bad) leave loop lcall or add call add adc inc lods adc push mov push xlat xor mov (bad) out dec addl scas rorl pop stos aam aas aas sbb mov sbb hlt mov inc (bad) cld jp aad mov mov scas mov mov or fcmovnu pop nop or add aad (bad) (bad) (bad) fs add je push aam and test (bad) in das push pop mov jle jge pop movzbl inc jmp ja addl dec aaa add inc cmp pop mov unpckhps inc lea sbb add mov mov inc lea mov xchg add add mov pop cmpl mov mov ljmp inc mov inc push fnstenv or ret cmp jecxz sbb push pmulhrw fisttp xor xor cmp inc fisttpl add std cli add test mov or outsl mov cmp jae imul bnd cmp jbe test call or push mov mov mov sub mov cmp jne cmp jne cmp jb add jbe dec fcomip mov or or jbe add or xor mov inc pop xchg mov cmpsl push xor sbb dec mov sbb mov cwtl adc ja rclb test pop push mov and out and xchg sbb push int3 lods jle adc cmp icebp clc pusha sub pop repz fcoml call mov lcall add ja push jne pop stos adc cwtl xchg enter sbb in adc and (bad) cmp jne add jne test (bad) mov and add fwait in sbb inc push dec xor add rorb or adc push ss push inc or in inc rorb push and roll jne push call insl in mov or sbb cltd in push clc test icebp push push push push aas dec push cld imul or xor push jb cmp add faddl cwtl iret inc jo pushf sub pusha (bad) or pop in in (bad) icebp sbb xchg jae sbb mov lahf push rolb pop adcl push adc mov sbb loop mov ljmp sub pop sbb rolb dec enter fstpt fidiv push aad mov adc push dec je mov ss xchg jge imul lea loop mov cmp and add enter push cld add add push pushf pushl sbb rcrl mov shrl or inc loope outsb xor xor jmp jns xor and push insl mov push mulb xchg (bad) in or xchg adc mov mov mov lock test call xchg dec mov out jl jle cmp cmp pop pop jl scas cltd pop idiv lea sti sti push mov incl ljmp imul test jg outsl mov pop push clc cmp jl sbb sbb rclb sti jmp mov pop mov sub imul xor imul adc jle rol mov es lea je (bad) cmp pop or add test adc add nop hlt js fsts add popf addl dec outsb xchg rol mov xchg add mov mov adc pop xchg sbb sbb mov xlat xchg cmc inc sbb in popf or pushf adc add fldt jecxz xor cmp mov mov das mov shlb push movsl mov addb cs cmp cwtl add jbe cwtl and mov call xchg scas add or jo call pop pushf mov adc inc and aam push push xor cmp or test and mov sub jl mov mov jg xor gs lcall enter add cmp insb or pop pop out add movsl sbb lahf mov (bad) jbe aad dec add leave cmp push lret lret enter icebp add cs jle or sbb mov add mov ja roll jo in pop cld test test arpl push mov pop aam cmp (bad) mov movsl push leave sar xchg imul es inc jle or jo pop rcr xchg pop jb push push rcr imul jp push xchg in mov loop push xlat jge mov fisubrl daa sbb loopne jp mov inc add mov lahf or xchg xchg lea (bad) ja adc dec fwait lahf repz mov mov dec (bad) sub inc push movl push push dec xor push lea push loopne adc pop scas cmp jbe jecxz (bad) call (bad) lea es adc push sbb inc push adc add mov fcoml dec mov insl stos xor sub xor loopne ja sub je dec je add ja sbb or jmp or jecxz jmp (bad) push push cmp mov or fcomps shlb repz aam test lods mov jnp xchg (bad) mov and pop ja pop cld sbb inc rorb xor dec subb cld inc sbb push cs or and xor mov je pop dec adc or (bad) adc jne int3 jp inc or or xchg cmp sbb sub leave mov rorl aad sarb (bad) fstpt daa fwait (bad) insl addl xor jle insl add jl cwtl fistl add push sbb xlat (bad) pop pushf add inc push adc test mov and push push push adc das aam adc movsl negb or sub sbb stos movb push popl jo adc dec daa adc bound and mov rcrb movsb mov notb sbb fsubr adc jle les pop lods lahf mov pop aam pushl or mov es dec mov mov hlt gs adc mov (bad) scas adc mov push pusha xchg or imul cmp mov addl out pop xor sub mov std cmp loopne sbb cmp jb aad fadd dec cli sbb or dec push adcl pop or pop int push push xchg sti sub outsl dec bsr mov push mov lods sbb dec push cmp les xchg mov in mov mov add or fisub or (bad) std sbb in jl mov sti test dec int3 add push cmp or cmpsl ret fiaddl sub in push pop pop leave ret stos lock pusha sub lea mov or test or cli cmp jbe fs loopne mov pop les fcmovb pop push lea mov mov andl adc imul mov and push adc cmp adc aaa adc add cmp addb xlat jecxz sub movsb mov or es fwait mov add push push cmpsl add xchg jnp push mov or mov dec mov (bad) je push dec push and xchg push es sti add xor xlat pop xchg insb mov cmp xor aad adc (bad) adc cmp rorl (bad) int movsl xor pop xor daa orl lret dec push xchg int add pushf add dec and dec ja in mov mov dec lods aad mov and (bad) out popa loope outsb sub mov data16 sbb fnclex adc sbb dec and xchg push xchg xchg inc divl pushf sub call mov lret mov or addl andb sub fdiv mov fcomps jne,pn sub push add jnp ret cs fcomps sbb mov (bad) adc push push inc mov sar popa push jne aaa push adc loope xor add aaa inc and add and and push daa add scas adc pop icebp lods imulb (bad) sub add (bad) outsb pop push adc mov adc jns push es mov sbb jmp sub adc and mov push push pop sub adc str or pop or imul add mov or pop add inc loopne mov or (bad) out hlt or in push faddl adc cli lea test (bad) (bad) jmp jo imul lea xor cmpsl mov adc push cmp incb imul push cs sbb iret adc sbb jne,pt push aas ss or movb adc inc add jnp xor push xor pop xlat in pop push push es pop subb in jge (bad) jmp xlat data16 lea cmp xlat (bad) dec outsl mov das mov stos jb push xor or mov fmuls dec push adc push mov or or sub cli pop ja jge and jmp or and and popa or and subb clc mov and pop mov mov repnz enter pushl out or lret aam mov cli rcll pop jbe mov ret inc and fsubl push (bad) or and sbb outsb push mov in pop adc ret push bound mov pop (bad) fcmovne add dec and xor rolb mov xchg add rcl aam sub aad adc arpl push mov cmpl xchg push inc add and inc jne and ds or je cmpsl in insb syscall jne dec int3 (bad) int3 pop fs fmuls mov ret ljmp insl int3 add into or in pop sbb lock add or xchg or xchg push scas or lea jg mov push mov fcoml jle adc stc push push mov lret push test pop mov jbe mov add loopne and test in sub cmp mov mov mov pop mov cwtl add mov xor and outsb pop or adc push ja in add push push inc mov cmp and enter inc mov fdivrs dec movl sbb lcall fcomp out les (bad) lret cmp lcall mov or sbb mov loopne cmp pop jno (bad) fwait jo or cmp test mov mov add xor mov loopne or mov xor in add fsubs cmp (bad) mov or fiadd (bad) popa push ja pushf shld add movb jne dec mov inc out push pop jb pop pop test xorb add push mov sub jbe sbb bound sti mov add shlb shlb daa leave or mov pushf (bad) or jmp xor sub add adc push jmp push adc stos setno xchg pop dec or push std mov cmp push popa mov (bad) ljmp testl xlat aad add out clc jg and (bad) fcomp incl cmp jg cmp jne pop (bad) pop xchg fisttpl xor jmp sbb push sbb je out cwtl les or test push inc imul not sub push int ret add pop pop fsubrs (bad) icebp jl push mov je cmp jl sub dec and inc inc lods (bad) ja mov dec dec sahf push iret mov add adc pusha fcomps adc inc adc or ss outsb cmpl add sahf mov out add insl loop pop loopne push push sub iret adc (bad) adc roll ss sub movsb xor adc xor out in mov inc lret xor and push je cmp cmp in sbb repz inc push push inc fwait adc into cmpsb xor jl add ss ja,pt pop mov mov out mov sub cmp jle out (bad) pusha sub mov xor sub push cmp push sbb xor incb push cmp lods jle pop mov mulb je int3 xor sbb and andl cmp jl push jo mov fidivr mov sarl lea lea aaa cmp (bad) inc xchg xor add jne push add xor push push test adc push push (bad) lock or insl jge xor add and jno fadds pop add push or xor (bad) dec push or gs aaa lret adc mov mov adc out push mov or sub cltd adc mov xor movb jge fiadd and add xor cmpl push mov push loope dec aad pop call sbbl out pop mov inc icebp xchg cmp (bad) push or sbb (bad) fsubrp mov addb add cmp ja daa xor add scas add adc imul in and sbb imulb jge dec loopne sbbl sar lret lods lock xor add shl mov rorl hlt call test xchg push test sbb rclb adc mov push mov mov cmp jbe dec insl or mov sub rcll cmp jbe adc mov je or jbe or (bad) jl insl clc imul jl cmp (bad) decl pop mov mov mov mov jg inc lods mov mov xchg jg cmpl subl add jns jp inc adc push lds dec mov into stos hlt adc sub push add aam daa fldt sub mov add sub gs xchg dec jae push push or adc push test push ret dec cs mov test dec in jne pop insl ret inc or pop pop mov in in sub mov movzbl and pop push push pop jns pop pusha pop inc cmp fwait pop jmp aam mov std jmp data16 xlat dec cs xor cmp test add or and pop lar xchg mov mov add adc add sub imul orl pusha cmp hlt ret jmp xor and fsub or test sete vsqrtps mov push pop jno push mov ret xchg xor cmpb je cmp add movsl mov test call pop push fildll add or push test ja dec movswl xchg imul mov dec or faddl jl cmp (bad) mov imul nop outsl ja aad mov daa or cmp aas push jge or mov adc add cmp cmp fidiv dec fsts insl sbb add incb sarl push mov test test lea sbb adc fxch sar add push sbb fsubrl pop push das add sub mov mov jge cmp or aam or insl (bad) xchg jl sbb sbb xor test xchg dec enter repz je cli or inc or (bad) push sti sbb jne adc (bad) nop jbe pop lods stos lock je push inc inc ljmp cltd je cmpb fstps push out mov jecxz jl clc pushf test jne sti jmp xchg add jge js lahf cmp hlt mov add mov pop cmp jbe xchg lock or sbb decb bound or ljmp inc adc lods loopne fild jmp jne jnp fs mov fs aaa cmpb mov mov push adc dec sbb neg xlat jmp inc or inc cmp cmp mov inc loop rcl adc adc into cmp cmp sbb sub pop hlt jns (bad) test mov loope ret ret jl ret sbb cmp clc sub clc jne lods adc jge ret int mov lret popa jo ret inc test iret sub and dec mov or pop inc and mov jne push out push stc push enter mov push (bad) int push pop push sbb mov xor mov scas mov and pop or mov push or fadd mov sub sbb adc pop repz push mov add add add adc lea iret mov sub and js jns ja sub or test jae mov sbb mov scas xor or lahf sub cmp or xchg jmp ljmp or xchg and cmpsl movsl in pop push dec mov outsb in sub sbb (bad) sub jle adc adc and inc jbe fidiv adc pop add scas add out adc add jnp mov stos adc xor add bound divb mov jle je sub sub or add adcl push lret add pop inc add pop lea nop adc inc inc mov test jo or add jecxz and or call popa dec test xchg jae lds inc pop loope mov hlt mov mov lea insb push and lret dec and push sbb outsl cmp xor lock jp mov mov push pusha cs lods dec mov dec rorl adc call scas push (bad) in adc lods adc jle push pop adc push add jno cmp sbb in mov jmp adc jmp adc jne rclb hlt scas test jp hlt ja insb mov push cmpsb jl fst add (bad) push sahf pusha test sar rolb jmp xlat cmp jb inc adc ss cmp lcall mov cli and scas mov or pop (bad) dec mov xchg stc adc wrmsr insb mov pop pop or (bad) add push push scas in fcmovne insb fldt je add je (bad) in popa int lret adc addr16 mov insb jmp pop xchg ljmp inc in test and and pop mov int3 or mov mov xor decl out push roll sbb jg pop roll sbb add add mov mov jp pop cwtl jge jbe push mov xor outsl add lahf test call jne out jo inc mov jbe mov (bad) cmp and lret aam (bad) psrad incl cmp jb pop or add test ja add push sarb jo or in pusha or xchg lret cmp add mov fcmovbe push mov iret cmp fisub enter fcoml xor jae cmpsl push outsl pop sub add and xor mov mov jl dec insl xchg mov ficoml xor inc dec aam test ret mov dec inc popa jae xor (bad) inc sub adc in test cmpsl cmp add jmp ds jne and inc adc push mov mov jno and add lret icebp pop sub fs fadd ret xchg adc insb (bad) adc pop or mov and aam insl loop movsb sbb (bad) aad mov ja add push mov cmp or cmp inc mov cmp sbb ss pop pop pop pop jmp adc sbbb push adc (bad) fiaddl xor movsb and hlt pop pop sub in into pusha and or add cmpsb cmp add mov xor mov pushf out sbb and adc test das (bad) cmp mov add push xlat push inc jb aad int3 mov mov pop sahf xor dec insb push inc push xchg je add push add clc sahf push cmp push mov (bad) cmpsb fwait mov cmp cmp adc dec jae mov enter mov and and test xchg imul (bad) jge imul adc pop daa pop mov xchg aam cmp aam add and daa mov popa mov sbb ret inc adc sbb bsf (bad) mov pop mov je and (bad) jae ljmp jae aas shrb negl fnsave ss add adc jg mov sarl sbb jle movsl mov add xor stos mov add cltd sub push aad push push insb scas nop push (bad) roll and enter fidiv pop mov cmp sbb sub (bad) jmp lock inc stc xchg mov out lret pop pop jg ss mov pop mov flds xor or mov cmp cli stc add sbb sbb mov add ret mov push jg xor push or xor add daa mov inc mov jmp daa and push out jae test loope je sahf mov sbb into lret add sbb fisttpl call mov sub xor outsb sbb dec ret push push pop inc pop lock ljmp mov mov movb imul push add add in loop add mov inc xorb cmp pop pop cmp xchg mov push lea pop movl mov jbe push xor push inc mov outsb outsl xor mov mov add pop lods mov sub mov or mov (bad) xor or pop daa jbe mov incl movsb aam std scas (bad) ss nop pop subl push add push aam or add rcrl pushf or or xlat pop aaa and add lret (bad) add adc dec (bad) mov and mov lea or decl jne dec sbb lret cmp sbb or sbb cmp cmp inc dec arpl sbbl xlat popf xor add pop bound push rcl xchg repz lea pop orb pop mov aaa mov jmp push (bad) add popa in push hlt (bad) lea mov inc push adc jns add gs cmp and xor sub movb scas loop cmc inc adc sbb dec add test mov pusha cmp add or ljmp pusha jbe inc push negb movsb cmp cmc rcr pusha testb cltd loop fsubl push pop xor mov mov push xlat and mov push into xlat call out mov push jmp insl arpl mov or jb xchg xor popl data16 call inc int fistl dec cmpsb xchg push movsb jns insb cmp pop xor lea popf add push mov lret inc xor (bad) jmp adc add xchg mov es pop and add adc and sub (bad) (bad) mov js movsb adc sbb dec jl mov xchg jb add push call pop adc lods sbb mov fldl adc das add add dec add add sub js add loope loopne xchg and push push repnz sub fildl push test (bad) dec mov inc mov sbb push call sbb loopne jl sbb fmuls add cld add jnp (bad) push sbb jge xor mov mov sub jne push arpl fldenv and xor call mov out sti daa lcall movsb inc mov lcall push aad dec adc mov inc sbb jo sub mov fs sbb sbb sub loopne cmp jno lds jne push inc xlat push inc mov inc push popa dec push or cmpsl sbb popf mov adc dec dec dec jle jle lret rorb pop test cmc (bad) adc or out or mov cmp (bad) loope push xor push hlt loope aas or xchg add mov in add adc sub sbbl ljmp or or sub add ret mov arpl or outsl mov add (bad) mov mov lea mov fcoml dec inc adc out mov xor dec jp adc dec sbb inc mov inc loopne add cmp inc aaa (bad) or xor mov jmp pop inc push repnz pushf add (bad) and mov push add (bad) or addr16 aam gs mov adc adc les xor xor test popa hlt pop (bad) fnop mov sti and and push das jp jle sub pop add adc aad dec rcrb addr16 xchg add cmp mov push mov subl dec jl cld cld jbe mov stos jne cmp dec imul (bad) dec push cltd adc jle rcl xor xchg (bad) rolb cmp mov cs data16 data16 repnz loopne je add pop inc push cs (bad) scas aas push in call push in xchg (bad) leave mov call movsb dec jnp pop push sub xor stos xor rolw xchg inc (bad) jo xchg add add mov adc add andb fsubrl push add scas mov enter pop pusha call arpl push orl adc into adc nop mov xchg cmp sbb pop mov pop and push pop inc jge mov or (bad) popf and outsl insl add mov add mov xor mov bswap ret in push jo xchg mov idivb adc mov sbb scas movsl imul sbb sti (bad) jle subl rcrb insl adc pop cs or push and fadds mov add jo sbb inc lods and cli outsl cld push mov icebp jne cltd idiv mov imul adc cmp aas mov add lods in and xor jmp pop in or and ret mov loopne add js int3 movsb mov out pushf adc mov push push jmp data16 mov loopne test sahf push pop xor add jge lcall test lock sbb and adcl jne mov hlt push sub mov mov sar and push push xor in mov add xor adc pop mov (bad) sti ret popa mov mov mov or jne jle bound ret (bad) aad adc repnz lock push sbb mov or push sbb je daa mov loope add push test call out push inc xor cmc fadds and xchg sub inc add xchg xchg push pop jmp push mov or push push adc adc mov mov adc jecxz cmp jne lds cmp adc adc jle sbbl mov fcom xchg js cmp scas adc insb into (bad) nopl and push test in push mov add adc nop pop push adc mov add mov mov in adc in sbb das out push (bad) pop dec push loop cmp test sub aaa xor xchg inc cmp pop sarl je mov push sarb in jnp cmp jae lea sbb pop and lea or mov jecxz mov loopne inc and decl clc dec pop (bad) idivb lea mov (bad) xor mov popl mov mov fs in scas and cmp mov clc test (bad) jbe rcr mov cmp push add or sub add divl leave mov xchg dec bound inc fs sub push xor insb sub cmp xor add sbb dec por cmpsb scas push mov xor cli push mov jnp xchg dec aad mov mov mov rcl outsl and and enter jmp mov stos push subl jge jns ljmp in sbb incl cmp push push sub inc into jp push sbb mov xor je xor pusha xchg push sbb ret xchg icebp mov mov pop lea (bad) aad add cmp push mov xor stos sub call mov xor or ss add rclb xchg lcall pop and inc test inc out dec sbb xor add xor inc or fwait add adc sbb inc movzwl mov and jo sub ss add aaa add mov fwait clc jb jmp xchg jge push repz inc or and (bad) mov or ret xor je test pop adc inc inc push adc jno movsb ja pop xor sbbl jl cmp aam (bad) mov cs dec push push add xlat adc fcompl fs int3 pusha call gs add sbb add push sbb fwait add xchg jae adc dec pop addr16 push lods push dec xchg daa je mov or pop push lret push jl insb xor add mov and mov movsb out sbb push in out (bad) fdivrs out add mov (bad) pop jne or or decl ficom cmp mov orl add sbb sbb mov cmp add adc bound jo ljmp cmp inc push movsl clc sbb std mov test sub inc sub sub sbb in or (bad) xor jns inc cmpsb inc xchg sbb (bad) jmp xor loop cltd fcomps es inc cmp adc cli push jnp nop adc and (bad) shrb rcrb sbb orl (bad) scas inc mov ficompl xor aaa push ret and push dec inc dec pop or sbb sbb add mov sbb dec jp lahf lea cmc shlb mov lock add cmp add dec aad out je cmp sbb adc and add and inc jge fimul mov les (bad) pusha negl cltd add dec imul pusha lret pop add insl add in inc push movl in push pop mov xor cmp div imul pushl add adc xchg mov jnp aas mov ret pop outsb enter xor dec aam cmp pop hlt jmp fsubrs adc jle sub jge int push lock inc add push (bad) ss icebp xchg sub and push in movsl sbb sbb add or mov and jo add test adc js nop clc mov adc or add das jo or pop (bad) or jb push mov (bad) adc sub mov jmp test popf mov imul adc lods loop popa pop xor ss push cli vpsubsb add add fsubrl js sbb int3 jecxz imul push pop sub jnp mov inc mov or push xchg stc mov sub add ret mov dec sub in add add xchg dec pop in (bad) and testl sub dec aad inc dec sbb inc stc fisub fcomp test add xor push push inc pop adc cmp (bad) adc adc int add pushf push push outsb shrl mov inc (bad) push pop (bad) mov xor mov pusha or mov adc jg xchg loopne cmp mov cmp movsb sti ds push andb nop (bad) jne fs xchg dec cwtl rorl push pusha rclb dec js mov sbb mov mov or sbb rorl jno rorb pop sub out bound js add insb cmp adc icebp push jno aaa add ret push xchg sub dec mov mov cmp lcall mov or push icebp shll scas ss sub or fstpt insb mull sbb shlb sub pushf and inc and adc adc daa jl push outsb adc push adc data16 test fwait cmp call mov add jg inc ljmp xor in adcl pop sbb cmp push adc mov pop cmc add push ljmp scas call add stos mov xor jbe push pop popf jo clc and jno mov pushf or mov mov popf jo hlt out inc bsf popa lods add xchg pop or xor add mov inc cs call sub ret add test lss dec into cmp fs ret adc push add sub dec mov adc push and sub adc mulb movups or pop inc stc sub mov inc xchg inc sub adc sbb jo adc or sbb cmp arpl pop ss sbb in popf loop pop mov fsts dec outsb lock inc sub and movsb mov andl lods jmp or push out inc xchg test mov and push sbb lock pop icebp fistpll leave cmp or (bad) pop cmp add inc fisttp cmp jne sbb add clc adc mov push decl lret inc pop xor les sub shrl mov sbb dec sbb mov pop push inc push mov jg xlat fstpt test dec xor cwtl ljmp jno clc les jbe mov push mov (bad) popf jmp pop sbb add adc or lret dec inc mov pop add push xor or lret pop or ficoml (bad) divl ficomp vcvtps2pd mov dec in outsb sbb sbb cmp mov mov xor inc scas sbb dec mov bound mov push shrb (bad) hlt data16 fildll or hlt imul stc cmp adc test sbb (bad) mov shrb sbb cmp and frstor sub add hlt xor xchg inc jbe and aaa pop mov inc pushf sbb xor iret sub popa aas and push add fld (bad) fwait punpckhdq sbb add (bad) xchg or xor cmp sarb loop and roll jp push sahf jecxz sub lds loopne and push push in rcl cmp js or jo aad pop inc jo pop and sbb xchg push icebp sub sbb push rol add dec xor mov dec xor jne dec xor xor mov mov cmpsl nop mov orb cmp incl cld add xchg rorl mov cld scas push sbb fldl or pop pop (bad) jbe sbb xor (bad) out push or inc push and add push ja mov shrb movsl ret or addl cwtl movsb call xchg adc testl (bad) sbb mov xor or adcb insb mov jo dec pop call add jle inc mov inc inc inc iret and insb int rcr mov and fbstp shlb mov add mov std (bad) rolb inc cmp test push pop xor pop (bad) rorb loopne jp dec jb inc sub call inc stos daa push in jbe dec mov mov shl add (bad) mov imul sub add mov add push cmp fiaddl push fnop mov cltd test hlt jo mov add pop aas xor mov sbb inc pop in and cli sbb cmpw je inc inc sbb ljmp mov add or test jge enter dec pushl add add dec in push jp sub fwait pop aam sub je inc cmp ja or cmp push inc push inc cmp lods call and xchg dec sbb scas arpl outsb adc js adc insb call cmp jb aaa mov xor cs (bad) xchg imul xchg jne pop inc mov mov subb movb fildl pop aam outsl scas mov mov xlat inc rolb daa xor loop and lds enter clc push mov add or push cmp fxch and add push dec es and outsb xor negl push mov pop mov cmp mov jne mov imul stos inc adc mov and fistl add outsb mov dec mov inc fcmovu sbb push mov adc subb es and add cmp add xchg movsb or pop sbb xorl cmp out xchg into cmp sbb pusha popa pusha or pop mov shrl insl test lods movl xlat or xchg popf push pop inc jl sarl push jge addl lods mov cmp mov test lea gs mov push mov fwait dec insb fsubs pop mov and xchg mov es adc idiv jne push push mov and nop cmp mov push push sub cli (bad) jp loopne jl fmuls int movsl adc pop push mov scas loop add sahf int nop inc dec fdivr sbb inc insl add call jae push shll mov aaa nop movsb jp insb adc mov das inc dec pop mov fwait call fcmovu pop adc mov adc pop je inc or fmull jp inc rcll (bad) push push jnp inc or jbe dec (bad) jge push les das inc inc lcall stos mov push add fdivrs adc aad (bad) mov dec xor mov mov push scas imul push mov pop jno mov adc mov js insl or fwait or lock xchg or ljmp in sbb adc xchg and push nop push push jns add lcall int3 xor xor mov insb adc adc lock xchg pop push es xrelease movl add mov cmp dec cmp mov jo daa mov push enter add fnstenv push inc in xchg shrb push inc sub push inc in cs inc inc imul insb lock in xor jae push sub imul repz pop inc xchg leave add call jge or pop ss orb mov orb jp scas popa rorl xchg or push adc cwtl xor repnz or mov xor adc in push xor xlat and sub jle gs rcr push jne inc in sub insb xorl cld or pop jmp pusha cmp shl lea dec fmuls sbb xchg and xor inc push push inc rorl dec add pop sub popa adc xor ret push daa add in jecxz test ret xor call or sti dec jp mov cmp fadds inc mov divl test icebp mov sbb jae adc mov or divb out inc arpl jl cmc daa add cmpsb cltd mov adc loopne stos ss lds fsubr divl ret in mov adc jecxz decl insl and mov xchg cmp outsl (bad) push je xor clc jl and test nop ret imul mov inc shrb out or sub sbb jo test movsl lcall inc adc gs aam cmp mov add lods aam rcrb add enter dec add push adc jbe mov or push stos int3 ja sub pop inc sbb sbb dec mov xlat add push je jno sbbl sbb pop out push xchg ds cmp cmp roll adc out fisttpl xor jne inc ljmp mov cmp in push psubsw addps add popa dec les lds sarl dec sbb or pop jl add sbb sbb adc jae inc je push sub inc ds add pop sub outsb add jne add lahf dec fmull test dec inc inc es test sti daa ret cmp sbb inc adc (bad) dec iret pusha sub mov xor add mov sbb or fldl adc push mov push jne push jp inc out lds jl pop add sub jbe ljmp inc jl jne adc imul lcall push inc mov fs cmp jne mov mov cwtl (bad) mov call add mov adc jle jne adc lods dec add imul jle mov mov pop mov nop push cmp jge cmp adc rorl push jg cld push test mov sbb xchg jmp inc xorb ja xor jne add stos fs call je xor adc out adc cli dec mov dec adc sbb dec add stc jnp adc adc mov and cmpsb xchg mov push mov adc arpl stos and cltd mov outsl push cmp add ret (bad) push ret sarl add (bad) mov adc sbb fadd loope scas mov mov lea mov sbb xor mov pushf out bound test cmp inc fisttpll sbbl aad xor xlat mov cld push inc xor mov add cmp div xor jmp dec xchg ljmp rorb call lock das pop push push or inc xchg add fldt mov sbb add repz cmp inc test negl daa mov dec add orb lret (bad) or cmp std and xor sbb mov adc inc push in jg xchg inc dec je jno insb mov sarb daa cltd jmp xor or sarl push dec jb add inc jne sahf adc add testl jbe lcall adc lods cli lods push or lret push add jno pop mov xchg jg pop (bad) clc outsb sub (bad) adcb inc and adc (bad) xor adc je sbb je fistl inc cmp cmovne bound inc sub dec push jge and cmp adc insl push test push jno out (bad) popa inc xor push xor jg xor sbb mov push add push sbb dec fcoms push push jl (bad) or add sub cwtl xchg pop sbb pop enter loopne cmp ss mov test push cmp adc ja insb push aaa xchg mov mov pop aas fsubrl mov mov lds in and and and loopne push mov lahf xor lods push mov mov (bad) pop push fnstsw enter mov bound adc lret xchg mov mov pushl shrb jne pop pop pop pop mov add xchg pop and and xchg xorb sub jl push outsl mov out push mov jl pop adc push xchg fldl icebp jg pop sbb jmp adc cwtl sub loope in inc pop cmp mov or add lea sbb cmc aad push inc addr16 dec loop (bad) or fisttpll xor pop add push mov test sbb lret movsb push inc add mov pop sub aam inc adc add mov adc or xorb pop decl icebp add xchg jge add dec push and sbb adcb add test sbb aaa cmp in or cmp add xor add add pop jo xor pop mov ja mov add fs push in mov or lods add negl adc cmp jne jl outsl xchg or call add lods add mov mov push xor sub (bad) sub or or cmp jne inc mov add xlat dec cmc out cmp test push and jge or cs push test popf shll cmpl sub mov xor dec push add sub addl sbb into mov sub pcmpeqw xor push cmpl inc cmp sbb add xchg adc cmp inc scas xlat push shll jns (bad) mov popf xor mov cmp por add push pop cmp je shrb daa imul mov mov push or push and shlb push add sub sub mov cmp add push clc roll mov aaa clc jne (bad) sbb mov loopne sub je adc adc dec or mov insb ret sbb inc sbb adc add into leave pop sub inc mov jle cld jne add test (bad) idiv ret pusha pusha inc repnz std mov (bad) or scas or push sbbb pop push fildl (bad) cwtl loopne daa push je mov cld pop mov test lods push and (bad) ss (bad) mov les adc inc cmp or lret push sbb inc je lret and test cmp xor loope push add mov loop jp dec dec or addr16 xchg pop xor mov clc movsl (bad) adc cmp dec and shrl cmpsl cwtl mov rolb cmc pop fsub fiadd adc (bad) add sub popw sti mov fwait mov call jmp push add or xor adc adcl adc (bad) lret xchg outsb push cmp mov ret push shrl and push sbb or sub push xor or aam push in sub jl je (bad) push mov push mov add xor fadds sbb test and jbe dec sbb add dec jmp movsl (bad) ds sub jge lods lea sub fsubrs sbb push das fldt scas cmp (bad) enter mov and dec stos in push scas or pop inc mov arpl xchg push rorb inc imul jnp or lret inc in mov lret int3 jmp int pop (bad) adc add mov mov ja je enter fdivrl stos lods fdivs enter test outsb lock call adc insl push call scas loopne imul push and (bad) std push mov aam adcl mov stos or cmp push jno mov ds xor mov pusha jmp fwait push lea and fsubrs dec push aad push dec in add adc inc loopne mov and test pop pusha cld in add add jne and fistl inc aad stos (bad) lock xlat mov adc add js push jp mov xor lcall in sbb pop add sbb pop and sbb call mov or in fcoml push fcmove inc inc xchg xor adc pushl daa sub fnsave pop push or adc idivl or or inc inc mov add cmp ss add xchg add out mov sub xor push mov sbb mov loopne outsl je xor cmp push rorl add jne jge jle mov xchg sub push or sbb test inc or insl cwtl inc ljmp fwait testb push pusha outsl and sbb mov ja mov jo fs pop add push adc and addr16 pop (bad) scas out mov or popa xor push pop js and in jo mov data16 cmp add (bad) bound add fsub mov jb or cltd sarb sarb and lods sbbb fwait cwtl je ss insb sub push lods mov and mov shl pop leave and adc pusha orb imul aad jge mov push sbb cwtl inc popf xor ret adc out mov adc push pop or or mov and clc adc es addr16 pusha adc adcl jo adc mov xor imul lods or js dec push cmp cmp dec out sub in mov inc fistpl js dec cmp sbb cmp add mov (bad) and mov rorl add js add inc push loopw bound xor fdivs adc push dec or inc shrl jb add adc shr push int push nop rcrb xchg sub push rcrb pop lret dec push mov inc xor ss rcrb inc mov enter jmp sub inc jmp test and mov inc xor or adc fsubs pop xor lgs (bad) push (bad) xor shlb push xor adc pop push push add jge push and mov push sub movsb lret pop xchg pop xor pop cmp inc mov mov push inc push mov fwait mov jl movsl ss mov sbb add pop loopne xor and jmp mov and xor cmp add jne dec jne or iret xor pop add sbb sub les lretw push enter dec inc hlt cmp or jp out test rcrl cmp sbb test add inc mov popl adcb cmp and cwtl push adc add or mov xchg sbb pop xchg or add mov dec (bad) jg aaa int3 popf or and nop add fwait mov lahf sbb push xchg adc scas mov aam mov mov adc or cmp lods fwait mov sbb inc cwtl sahf jl pop fsubr push pop or mov xor and and sbb nop add (bad) fild sarb ret mov cmp je lods push ljmp add ficomp notb out mov inc sbb adc scas or and inc sbb nop add cmp add out add sub ss and leave je mov cmpsb mov sar int sbb push push call or fs push pop push mov pop mov lods pusha cmp sbb mov or cmp rol pop cmp add push sbb inc or rorb mov pop and sub jle into fcompl fmuls and jg and jb (bad) and int cmp or in fimull jg push adc mov jge mov fld inc or shrb push sbb push stos (bad) (bad) jmp mov dec adc imull jg ficompl rclb rolb push mov mov add cmp roll cmp adc outsl or sbb pop popa fwait dec out sbb ret add fwait aas push mov jecxz test insb and jo pusha or pop notb jbe mov sarb add add lods adc (bad) pop (bad) add sub mov mov cltd pop stc or decl stos sub push add fidivrl or lds das add cld inc jge sub xor cmovb push mov je movl sbb fisttpll mov push adc jmp jecxz or sbb aad ret mov add inc add out jnp fnsave lahf rorl jbe pop sbb (bad) lods push inc int3 mov adc loopne add div lds and add rcr mov xor shll jge pop mov mov pop xchg es cli mov call sub jge fsub (bad) out (bad) std jne mov mov outsb push mov add icebp jo push inc (bad) call xor sbb mov or or jecxz lcall loope jbe xor sbb jp or test xor cmp test add cmp nop sbb aaa loop add mov or mov pop sbb nop or xor and xor xor or inc fs test add add int insb add xchg sahf adc lock push insb movl sbb mov inc xor dec mov add add in rclb xchg mov pop mov lods sbb sbb xor push inc ret js mov and bound fsubs jae in ljmp (bad) mov mull pusha int imul cmpsb fnstenv push test orl je pop (bad) fsubrs sahf mov add push movsl push (bad) clc (bad) mov lsl fwait cld and loopne xchg (bad) and xor in push jo mov repnz fwait push cltd cmp lret add pop rcrb cmp add inc xchg push ret in dec push push inc pop add sbb cmpsb push and mov fidivrl mov and cs push jl add jg pop mov jne cmp jl add xchg jle lods fnsave popl mov ret fwait and cmp (bad) jns imul (bad) aam push pop push call inc xchg neg test addr16 cld mov outsb sbb add mov shl mov jp mov cld dec vmovsldup sbb call adc loop idiv (bad) mov dec mov loope ljmp dec sub push cmp icebp fwait pop jle sub push push cmovle sqrtps insl jnp or push push dec adc jae push inc xchg or inc orl or cmpsl push xor dec fwait lcall aas xchg cmp rcll movb in dec add mov loopne xlat sub mov dec ret outsl addb ficompl inc lock inc sbb xor and add das leave cmp push je mov add pop cmp je add je ss pop push inc sub pop ss pop dec adc push lock lahf call or and add sbb mov xor xchg and stc or loop mov or (bad) sbb jnp (bad) jae in clc push mov cmp add pop add jnp in jl mov cmpl jo mov es sti in cs lcall adc pop loop cmp jne mov inc sbb add pop mov scas push test add insl mov cld jl or enter dec (bad) aaa js push daa clc add mov movsl test mov sbb leave enter jecxz cmpl imull lret push or out ljmp cmpb push les (bad) push push out inc inc fcomp movl push push call pop lods xorl loope mov shrb mov pop adc adc rcl cmpsb dec add fcomps mov imul jmp (bad) mov bound imul pusha sub mov nop outsl add or sub (bad) cs add jne pusha idiv addr16 jne fadd insb mov in rcll adc out add xor fcompl (bad) push or sub insb rorl das adc rep mov and rep push xchg sub adc inc add and aaa popa shr pop or and outsl xchg push mov in push and adc and sub cmp push ret adc das subl add adc push push mov loop and sub pop fcoms rorb ja ret das fisubl mov adc add fdivl mov loop mov lret inc js mov movsl sahf push rep push in push fisttpll add mov jno repnz imul adc mov movsb mov jno sub pop sbb (bad) rolb test fs mov push out pusha sti inc fisttp sub jno (bad) loope ss inc mov mov daa sub add subl mov inc cmp pusha dec inc repz and push sarb push push push adc (bad) mov std pop ret pop push pop loopne adc dec inc rol fnstsw or mov adc mov or ss xor pop mov cmp mov bound add pop mov jge sbb pop mov fs mov mov push insb mov outsb fildl jp add scas aam daa adc add sar ret jae fsubrs inc insb push ja movsb mov lds push add or test aad fcmovnb (bad) or push and outsl loope or (bad) jb sub mov push insb jl test addl fisub loop test sub arpl int3 jno (bad) aad fs and aam in inc mov pop mov and mov shrl (bad) arpl sub (bad) jb mov or lea dec xchg rolb pop ret dec dec cmp out xchg ret pusha push push xchg cli mov jo icebp das ljmp lcall pop jle fs ret cmp mov imul (bad) push std dec insb (bad) jne dec pop mov jle inc stos inc out or jo shll lds jno das mov mov int lea pop imull leave enter push inc push sub sub mov sti scas inc jae cmovnp lds sub imul lds adc dec jne and xor cmc pop push add clc dec inc mov pusha stos push dec jle xor stc add and xor adc inc icebp mov sbb incb jb push xchg pop xlat cmp mov jg sub aas in fidivr dec add rcll (bad) mov loop insb out inc loope inc sbb pop dec fucomip push push jge pop and fldenv cmp add or rcl adc mov nop xor (bad) mov xor mov js xor inc in lret mov insb or nop push shufps xor out cmp ss adc pusha push (bad) rolb les push jb and mov push mov xor pop sarb sbb sbb dec cmp (bad) pop pop mov cmp sub cmp ret push mov sub xor mov or xor pop inc xchg daa lock or cmpb fisttp adc pop xchg test xchg cwtl inc cld lret mulb dec inc sub sub mov rcr pop adc push and cmpsl add and pop mov jmp inc cmc push sbb test add mov mov jae neg mov inc out mov jmp adc lods inc sbb xchg sub sub pop leave mov mov fcmovu js or test insb ja stc cmp mov sar ret inc pop mov cmp cmp out pusha push inc or lds inc (bad) jo std (bad) mov (bad) mov dec jne outsb jl ss test pop ja inc add (bad) mov (bad) sbb test dec dec adc outsb test mov add test add out mul add nop aad add icebp push pusha pop js and std mov test sub inc ja jnp cmp jno mov sti jmp push dec mov or xchg mov je out inc or ror fisubrl sub mov fwait cmc loopne jne or loope aas and push mov pop pop adc xor sbb mov ret or push cmp ret subl lea lret rorl (bad) add sub jmp divl push sub lea dec mov push cmp (bad) nop xchg jmp rcll push insb xor jbe add sbb adc pop xorb push movsl dec push cmp scas add insb or or dec test inc add inc or roll mov in mov adc jne or xor nop inc push sub push rcrb or or loope fstpt in rcr ret cmp jle cmp ja imul jge xchg or aam (bad) (bad) inc sub push mov in sbb mov stos lock add or adc inc test push loope and add ja (bad) jo lds cmpsb jno adc adc mov xchg movsl mov call sahf movsl sbb dec add xor pusha cmp pop adc fs movsl ljmp test push out pop mov pop je je enter cmp cmp mov add je xchg adc lds cmp outsb jbe pop sub test idivl xchg xor xchg insb mov mov pushf lea lcall stos imul stc sbb inc push sahf sbb pop les or adc (bad) mov push mov enter faddl jo pop add sarb xor cwtl in mov dec push jne jl sbb nopl pusha pop test (bad) xlat xchg dec bound int3 imul rol outsb push mov ret popa sbb pop push cltd sbb sbb movsb add insl inc mov in aaa pusha lss add sub andl adc orl sub xchg jne adc xchg push inc dec mov xor pop push pusha dec out mov dec cmp sbb xchg jnp ss (bad) je dec (bad) mov xor in in nop fcoms inc mov or inc adc rol mov add int jg or adc sahf adc shrb js std push sub sbb lcall sub lahf xor rorl push movsb add fisubl or sub scas sbb roll pusha call jle push sbb out movl jae,pn add or and je and ljmp inc xor dec adc mov adc push aaa jp test sub xlat jp add sbb cmp lds push nop xor sub aaa adc inc push push push sub jne pop sub inc cs popf les xor or ja jmp lds mov and push inc mov and cmpsb cmp jmp inc mov add pop ret dec xor xor out dec mov push sbb inc jae mov dec jmp inc sub nop shrl xchg cmp add jbe test push outsb aas pop push fst add adc addl pop cmp mov out dec xchg fisttpll cld push aad loop lds out or inc xor cmp add mov inc sub add sti dec ja sbb xchg arpl sub movl (bad) in int pop shr shr sub aas lret mov adc add add xchg andl push xchg pop ret pop sub pop and xchg fidivl sahf cmp mov push or pop mov ficompl xchg das insl rcr jae push outsb push inc pop rcrb jb adc cmc dec cmc jbe dec in and mov mov push idivl mov dec inc cmp daa popa jb mov mov jno (bad) gs (bad) stos hlt sub negl mov int3 dec sub add inc scas jo adc mull xchg test inc cmp jne or jae cmp jno mov mov push jg ja push jno xchg mov jne push xor push cmp lods test pop fwait sbb dec fdivl sub cli dec lret push mov jne push lock (bad) imul repnz mov push sbb insb mov mov loope in mov sarl popf jb push xor pop mov push mov dec sbb dec shlb push push mov dec xchg inc push add pop xor sbb xchg xor xchg pop cs push jae pop xor mov ds fsubrs xchg and sbb push shlb test xchg pop mov cmc lock stc loopne cmp clc jbe xchg je push sbb jge cld or add (bad) mov hlt push pop out ljmp movl mov inc test or or outsb push cmp cmp dec cmpsl push imul sub dec sahf mov mov and popa fcoms or mov imul jle add addr16 pop mov jmp ficom xchg jb xor cmp and xor mov or push lea inc adc inc push or or add mov loop pushf or jo cmc outsb std push pop fadds push popa aam xor shrb (bad) (bad) arpl jae or cmp mov dec out dec mov mov mov data16 inc sub mov mov and adc scas push rcll stos mov ljmp insl mov lret mov inc ret (bad) push mov cmp lock mov dec bnd into mov shlb or rorb enter jae sahf adc fcomps inc jb,pt lea out fmul jl mov rorl icebp pop jmp add inc loop pop xor ret dec and mov popa aaa dec sub (bad) into add mov push in adc ret sbb (bad) mov cld xchg fisubr jmp ja or in lcall and (bad) jne push dec and jl ss push push inc lea or inc xor clc sbb mov push add (bad) (bad) fstl inc or or push sbb in and (bad) sarb mov cmpsl dec push xchg sub mov andb lock and sub mov mov xor sub mov (bad) mov dec pop push mov inc jno fisubrl inc shrl push inc mov das push jo les ljmp xor (bad) cmpsb nop clc jp sbb sub xchg shl mov (bad) lcall push push ja mov pop mov mov lods add loopne add nop dec (bad) dec mov inc iret inc push cs push push cmp pop sbb outsl sbb push xor repnz dec insl or mov xchg sub ljmp dec leave xor insl and cmp sub mov (bad) ljmp outsl insl xchg inc test push inc sbb orl cwtl mov jns inc inc (bad) loopne inc sbb and enter cmp rcrl or popa push push enter mov in inc sbb imulb mov dec fmulp int ret add mov push push push outsl ss adc jg adc adc aad sub mov lods out (bad) jecxz sub scas and push rorl mov (bad) iret cwtl dec (bad) rcrl push xchg dec push aam lcall popa dec cmp leave cmc push push pop cmpsl pusha mov adc rclb je sub push imul lock dec pop sbb stos inc in jbe and xor or movl sbb mov mov out xchg ljmp push mov adc dec test or in nop inc sbb xchg dec mov dec push and test sub xchg (bad) xor or xor push lods int3 pusha dec xor loopne cli lcall aaa pop mov test adc inc rcr ds mov inc outsb out push push data16 and adc inc or insl andl (bad) mov sub pop pop sbb or mov and mov dec inc lea test fwait gs sbb add sbb lds cs (bad) lret int3 jne mov mov add enter inc pop or or adc inc sub pop xor mov test push jle or jl xor in aas mov test addr16 adc sbb imul mov jle inc sbb mov adc jecxz mov cli aad fcmovb loop aam or aaa jb leave mov stc repnz hlt cmc mulb xchg idiv stc xchg enter std mov enter add ret xchg pushf adc dec jne dec mov icebp div icebp cmp div and cli xchg or adc roll add das inc xor jmp xchg mov inc ljmp add ja mov lea or mov faddp cmp faddp sbbb mov ss pause sbb (bad) add xor or mov xor dec je mov and outsl mov iret push mov push mov lea mov mov add jne push mov adc fsubrs mov movsb jae mov add sbb mov ret incl sahf bnd inc mov repnz push push or mov cwtl or js insl jmp imul mov dec adc ficomp mov mov sub pop data16 (bad) shr push xrelease pop pop popf nop inc jmp (bad) sbb push add adc or sbb mov shlb pusha (bad) push lock mov test push adc or lea fmuls fmuls mov xchg shll and out fstpl inc mov rorb (bad) sahf adc push sahf lea push aad push clc mov arpl std sub or mov test clc shl popf sub mov cmp mov mov push xchg cmp mov pop xor mov xchg call insb inc int3 dec add (bad) (bad) fdivrs mov and inc or adc and sub add sbb xchg or cli sar pop xchg add adc data16 movsl and push cmpb jne (bad) cmp lea mov int in push or lret mov adc test or clc cs faddl cmpsb add cmp ja jmp dec xor lea cmp ja (bad) aaa lock je ret push push es xor jmp mov nop out and lea jle xor ret shl xor dec adc aas xchg mov adc xor ret lahf repz sbb or push rcr lcall push add lods (bad) (bad) shl cmp fcoml sbb push lret inc sahf arpl sahf (bad) sbb sahf cs jecxz push ret (bad) sahf push loop or shl into clc (bad) and inc push pop hlt rolb in lea or mov stos sbb pop add inc sub ljmp pusha jmp aad adc sbb cmp push rcrl or push or sbb fidiv push sbb adc jne add xlat mov imul and sbb mov test xor mov pop pusha jmp push add inc jle jbe in sarl add cmp sti add add inc mov inc inc inc movsb mov inc push push push pop or cmp fwait and out fs add pop jl mov jnp add add mov pop jns fcom sti cmp jl push sbb mov scas dec adc (bad) add add mov aaa or jle fadds xchg sbb mov ret mov (bad) or mov sbb scas add out (bad) (bad) mov push loop mov push cmp jb sti jo cli mov or mov cmp rolb test and aaa dec scas add lahf add pop popa pop loop lcall add sub push sahf (bad) int das dec cmpsl mov and shrl cmp cmp fcompl ds rorb push ror or xorl das add mov sub mov adcl jge mov mov ret and adc loope or (bad) jb jne mov jae push lock ja inc adc daa lret dec mov jne sub jbe xchg sub mov nop scas outsb mov jns test mov (bad) jne pusha ss nop mov push pop sbb loop cmp adc outsl andl xchg js jae pop xor les inc sbb push push addr16 cld into fimull into pop mov (bad) testl icebp scas mov sub add inc jge or inc xchg xor (bad) (bad) fiaddl cmp jnp jle inc cmp jle dec lds push jl ss loope pop cmp jg xchg and inc out in inc hlt mov jl stc sub adc mov mov and orl movb mov insl push jo and inc lea jb cmpsl mov (bad) adc daa or mov push push add stos test imul pop arpl pop jne mov add jns xlat insl insl (bad) mov pop add or out add shll pop lods pop (bad) aas adc xor arpl fidivl ss dec cld dec sbbl push lret repz xchg jne cmp (bad) fsubr sub ja push js ror mov add fsubrp pop test mov fstl pop lods mov jae push sbb jne or xchg add in and js sbb cmp sub push mov xor or add shr (bad) dec push mov jne data16 div and (bad) leave je pop mov push cli push dec or and sub push adc xor lds rcrl int push push lea mull cltd or lret adc sbb and bound mov adc pop jmp xchg jbe mov push dec or out xor adc roll (bad) push push push mov pushw add mov ljmp mov pop mov mov xchg insl addl es out lea lahf adc mov cmp pop pop lea jl dec (bad) mov pop (bad) je cmp jge add push cmp popf xlat jmp pop cmp imul je aad pop fst std out xorl or sub lcall out xchg (bad) jmp cmp clts or pop lds sbb aad fadd outsl ds pop fcoml or mov sbb add popa stos xchg adc bound (bad) in jle lea xchg cmp inc lea cmc mov mov test pop pop xchg jge mov pop dec adc inc aad andb or dec sbbb inc notb xlat cld jle addb into push xchg cmp in or arpl jl jle in das mov mov pusha xor pop pop sbb jp je and xchg xchg stos mov test daa popf xor pop sbb daa xor dec (bad) or add push push or inc pop push jmp sbb fisttpll xor push rclb sbb stc jmp inc dec pop cmp ja pop loopne mov or jmp in sub push xchg pop sub test mov cli fstl xchg mov mov dec xor cmpl insl popa (bad) js pop adc (bad) push or adc and icebp or inc mov or fcoms (bad) fs outsl and add sbb pushf pop sbb xchg jnp rorl or add es add ja mov inc sahf sbb push push and popf cli push jle rorw inc add mov mov cmc add jne cli or push or sub add add mov es mov adc add or ds neg pop scas pusha add pop jp xor adc fucomi loope and sarl pop xor jecxz sub xor out aaa and pop sub pop hlt cli jmp scas inc push loope addl cwtl outsl push push fs sbb mov adc mov add sbb dec or cs inc orb push (bad) mov xchg add inc mov xchg mov xor ret xchg inc (bad) shl das nop push adc ss mov mov mov (bad) jb lret cmp (bad) rcrl inc xlat push inc xchg add jbe and add adc lcall testb popf push clc push arpl mov int jno (bad) or cwtl mov pop gs popf popa or pop push mov xlat mov mov pop sarb (bad) sbb or mov adc jmp jo lods sub test test xor sbb ud2 pop add idivb lret or pop mov popf pusha scas cs fnop sub cmp mov sbbl jmp push or dec cmp pop mov fistp iret shr jno mov jno jne lock mov jp cmpsl or mov popa push fidivl sbb addr16 xchg lds les rcl sub and mov stc repnz mov loopne xor pop push bound lock xor mov pop lret add (bad) nop push xor add test adc sbb add jmp sbbl mov jp sbb adcb inc (bad) push sub cmp jp,pn xchg popf add dec jne push sub xlat mov test mov push std arpl std cmp mov inc mov xor incl pop setbe mov cmpsb jb inc into pop ret lds lret out or shr shl dec in mov lock pop pop push rclb cmp pop xorl adc and lea inc push mov inc daa inc mov mov je clc cmp push fisttp dec test dec (bad) popa stos js add test jae cmpsl xor sub sbb and sbb cmp mov and fnstenv enter mov rcl mov inc not gs inc outsl outsl adc not push inc mov mov in cwtl ret push and mov dec int3 pop lea in in sbb xor add jne pop pop pop ret (bad) adc sbb das dec loope push add fdivl push or dec mov ficompl or dec cltd imul outsl jno inc adc jmp pusha jmp mov and dec add (bad) shrl dec xor cmp mov add orl les or pop in stos jp or repnz lret adc insb (bad) or (bad) pushf subb or dec and sub aam lods mov sbb mov mov or pop rorb das add mov mov popa adc xor inc mov idiv test in cltd push and shrb fucomip xorl dec sub add dec outsl pop or jb dec je orb dec or mov loope ja inc or fdivrs shrl jl dec mov mov push inc inc loope (bad) ss loopne (bad) jae jae adc rcrb aaa adc or jne mov repnz sbb sti lods sub push mov and sbb test mov inc mov adc dec push mov lods test je fldl add loope movsb hlt dec add pop imul xor inc jne cmp dec pop lea dec mov faddl xlat add pop lahf repz sub add cmp pop push in sbb out adc nop inc fdivrs sbb add adc sub adc ds mov or add mov and mov sub sbb pop add add inc fsubs test jg jae loope (bad) push mov lods dec pop or lds jb mov scas bound sbb loop cmp out sub sbb call xor mov push cmp dec lahf or cmp outsl arpl pop add data16 cmp add dec sub or jne sbb adc outsl aaa cmpsb add jge or sbb mov mov adc jne out in mov pop jne pop insl lods mov sbb pop add push pop xor inc les add in mov push adc ljmp (bad) ffreep add andl movl sub jmp and inc sbb es test stos call movsb and das mov mov cmp ret inc dec int3 push xchg dec mov int add push push dec inc add outsl push dec das push mov dec jbe and push push cmp pop jbe cmp mov cmp lret mov in lahf xor int lret mov or fstps sub push mov loope mov mov sbb aaa dec outsl and add ss gs and mov pop out xor pop icebp pop add jg mov nop push and and push push cmp add and pusha lds dec push add fmuls (bad) ret sbb or inc dec jl lea mov push push mov sahf mov push mov sub rolb in push in clc push sub inc sub push lds cmp push sti je cmpl shrl or or test add daa jp mov add cmc sub mov inc (bad) mov pop pusha xor (bad) xor push add sarl mov xchg test add ljmp add mov jne cmp pop jge test mov sub inc lds fiadd pop pop mov ljmp sub add mov fucom jbe and mov roll push (bad) repz jbe clc push (bad) cmp jne dec sub xchg jne cmp scas sub outsl cld mov ljmp repz lea fdivrp pop mov js push ret add adc mov mov mov mov sub gs sbb mov rcl jecxz sub divb fildl dec sbb sbb out out in sbb jne fstpl mov iret mov je fimull mov adc cmp inc out arpl data16 adc sti std outsb and fnstenv mov sub jbe or mov sbb dec cli std mov (bad) out and fwait push aam sbb cmp (bad) cltd add lods xor lea mov add rclb and xor mov push and out adc pusha inc sbb adc subb pop hlt pop les int mov or cmp pop mov push xor and mov sub out sbb ss (bad) jle add mov std adc and sub adc mov insl dec lods mov out (bad) dec mov mov stos fldcw jae fidivl hlt sbb push out push add fs movsl (bad) lea pop je (bad) ss in je,pt mov or or dec push and sbb rol sti mov mov sub sarl mov je popa sbb mov add insl cmp in adc mov sbb rorl add xchg fldl movb mov jne sbb fnstsw mov sbb and add xor add and shl mov dec adc ret mov and lock or xchg mov lret insl fisttpll mov cmp and clc test test mov lea js or adc outsb incl clc shr pop jne cmp or push adc mov loope inc in lea (bad) je repnz inc add sub and mov sbb std (bad) mov adc push rorb ja pop sbb mov add sbb inc mov fisubr xor inc mov mov sbb js test mov sahf pop or mov shrb inc sub push fs loope push push scas push mov popa push add sbb inc jbe cmpsb sbb jg push je xor mov push push jge pop jl add push orb push lds roll outsl (bad) testb dec sub inc test mov jge xlat fisttpll inc je fisttpll push push sub and mov sar fstpl pop ret lea and pop hlt pop aad cmp fisttpl pop movl movb psubq mov fs push inc notb and push pop push sub notb and jl sub sbb mov add (bad) mov je movl or inc add sbb xor mov dec cmp inc test in jbe jbe adc out sub dec stos ljmp adc mov sub add mov push shll testl in (bad) and (bad) ja test jo mov xchg pop xchg dec aam mov push cmp pop dec sub std mov in dec cs fcmovu add mov jl mov sub cmp daa inc push push mov (bad) (bad) rorl ja jmp jo add xchg mov xor in push sbb cmp push pop mov jg xchg enter or mov pop jge,pn and xor xor inc jge lock sbb (bad) and sub dec push test or sub mov mov and adcb sbb dec fistp les enter or inc je mov push jb mov out and rolb into lea je (bad) dec jg in xor shr sub out test jne add aas pop add jnp popf and jbe jle add add cmp or pcmpeqb and sub xor dec add lods pop fs imul xchg movsl psubusw movsl popf ss mov add iret das es jp and in arpl ret sbb addr16 jg fimull xchg ljmp mov add lcall jns aaa add mov sub jmp cmc push jb int (bad) mov int and int push mov inc inc dec jne dec cs in int3 fnstenv cmovns push push mov or add push outsl leave cs aaa sbb push add xadd pop mov mov daa or push popf rol adc loopne push lods loopne call lcall (bad) fcoml jo je insl (bad) jbe pop mov jae push insl sub mov mov adc dec mov sbb js inc sub fwait inc or outsb pop sub xor in add and mov xor (bad) pop jo pop fcomp in bound xor int data16 cmc mov or sub inc mov les pop push sub xor inc (bad) push or add push mov fistl dec jae pop enter jp add mov (bad) movsb xchg cmp std jb cmpl sub and out (bad) pop pop xchg daa ljmp imull add xlat jne pusha lcall sub and xor mov lock add or loopne enter add incl inc (bad) jne out pop pop enter add add and mov mov mov mov add jbe mov mov int3 lea sahf sbb add add andl and jnp inc sub sbb adc add xchg add dec notl or outsl inc (bad) in call xor in lock aam dec (bad) hlt clc clc cld cld push notb insb push lea lcall mov add adc leave fwait or or adc roll in ret sub cmp test jbe dec or rolb neg leave and imul sub add nop in or insb scas xor insl add outsl push out push fmul or dec add or and rolb mov nop daa and mov adc xlat pop cwtl arpl pop test mov dec (bad) xor xchg pushf movsb lods mov outsb xchg fldcw cld mov pop lcall adc or lcall add ja inc fwait and add push adc or fwait mov test add and mov xchg mov aam imul or push mov inc sbb inc repnz adc xor and sub pop mov lahf mov push adc xor out dec je rep pop or (bad) out pushf daa ljmp mov xor sbb les sub adc pop pop sub jmp lea cmp js sbb dec add mov dec scas lock adc xadd sbb aad rcll push inc outsb adc inc je sar cmp jbe sti (bad) push pushl mov (bad) sbb in fildl and xorl rolb hlt arpl jne push pop ds aas add push push and add sbb test js and loopne cmpsb test push xor arpl les std jle mov sub mov repz pop dec ret pop or (bad) jo mov mov or mov adc xlat xor stos das mov add js inc add inc cmc cs out mov outsb je pop je push cmp sahf lock dec and cmp das je pushl push sbb push pop xor mov pop push out or pop (bad) jbe cwtl and dec pop movl cmp xor inc movsl repnz pop jns,pn inc push inc sbb jae pop or insb lahf sti cmp cmpl add scas add jno and outsb mov mov imul out (bad) sbb das push test es inc test sbb mov mov push add out cmp mov inc arpl mov mov jne daa das sub mov add mov pop or mov sti (bad) test testb jne adcl sti add or xchg push dec outsl mov les popa jb pop or loop fidiv mov cmpl (bad) mov add xor pop adc or xchg add adc fidivl dec aam jle jge popf in testl adc in flds imul or inc and xbegin adc icebp mov or movb rclb (bad) movsl daa sub cld mov gs ja add xchg mov push fcompl sub (bad) jo das daa adc push out dec mov sub mov fstp push clc jmp add clc or cmpsb pop inc xchg gs popa aaa cmp insb mov pop adc pop adc call and stc test cmc js pop xchg incl and pop inc or xchg jo push incl add add test or or or or clc add xlat xchg add lcall or or in or or pushf xchg sub or or or or or xor rorl or or enter or or mov mov or inc loopne adc mov and sbbl cli subl push scas or ss (bad) or inc in sbb out dec movl dec push int outsb push je dec mov pop mov pop mov xor mov jl xor sbb fildl cmp pop lahf leave pop sbb mov cmp imul pop add pushf dec pusha and add add add mulb sbb mov cmp sub aaa jb imul daa adc mov xor sbb push jb or or xchg or or or lcall fnop repnz loop or or or inc dec pusha dec mov nop out add dec es jg push adc pop adc adc xor adc xorl sub adc ret (bad) adc xchg or cltd cmp adc or sbb sbb mov sbb dec or xor jmp sbb (bad) sbb out in test je sub push dec lcall dec rcrl int rcrb inc pop pop add aas test add sub mov and addl dec inc mov xor rolb add (bad) outsl in push in push in jno repnz sub mov rol lea dec aad in out jmp out cmpsb cmp out rolb sub pop ja push data16 call adc or es outsb jae dec jmp add ljmp jmp mov (bad) in cmp dec mov sbb and sahf cmp jge xchg xchg sub dec es lock xor fbld and cmovno imul and std repz jae leave std hlt hlt push add cmc jae xorl xor pop div ret test ja sbbl dec stc lock cli cli lods cmp mov das iret sub outsl cld add xchg out mov sbb sbb or (bad) (bad) adc ret in stos jnp inc test sub or lahf rcll add push insl push xlat xorb test in adc shrl or enter hlt and clc and cld adc insb iret xchg sti out out dec dec popa popf dec outsb call test sub mov pop inc cs jmp jmp lea add popf cli mov das mov js out out jne sbbl add cli push cli repnz stc repz jbe repz sar inc dec push call cs sbb mov (bad) pop inc div outsb (bad) jne xor add jb cmp stc out clc ret rorb jne sbbl add addl and mov cmp add sub adc test (bad) mov lea mul sbb dec popa sub imull test fsubs lret out out bound sub (bad) or xchg (bad) mov sub sti imul ljmp mulb nop push pop xchg mov xchg (bad) lret enter insb out out repnz (bad) in adc and and mov nop in (bad) repnz cmp imul jae sbb testb imul idivb and dec pusha scas clc xor jecxz stc in test cli pop pusha xor lcall test lods jbe cs and (bad) (bad) xchg xor pop movb cmp dec cmc dec add sbb outsb fwait add divl xor push loope imul test loop in jb scas repz ss and in push inc pop in jns and repz inc push gs push mov sahf pop (bad) jmp pop jns bnd cmp repnz pop pusha mov in push das mov jns bnd sub push add inc loope repnz icebp icebp or xor push dec xchg push pop xchg xchg inc jb or xchg pop adc push xchg icebp jp lock scas sub and iret or mov xchg jns cmp lock das mov sbb lock lock fs cmp test sbb xor mov or add adc in push sub jae push mov out and pop push add xorl cli loop xor mov mov and mov mov inc jne test mov or orb sahf inc aam leave push and jne mov xchg sub sbb add cmp adc sti push add sbb pop adc cmp vmread add adc sbb or insl dec sub jp add adc adc cs jmp add mov lcall mov arpl movups cmp test sbb (bad) scas add push test add scas stos out or je add test xchg cld pop mov fwait stos mov popl lock pop add out push lea pop xor outsl idivl bound jne mov push push inc imull sbb pop cmpl jo jbe cmpsl cmp shll ret push push add ljmp xor add push pushf call add xchg sbb mov mov adc pop push push mov or push sub ds sbb adc push add enter and sub pop dec call or int subl test push mov xchg add out mov adc cmp mov inc fcompl aaa fildl push pushf add mov cmp in rorb sbb outsb sarb mov (bad) mov and adc out sbb jae add xor push daa test lret call or and push push rorl jge sbb and pop add fwait jmp adc or pusha cmp popa sbb xchg das mov add mov sbb xor mov and or adc mov push mov dec test loopne jo push sbb pop jbe jo arpl add push mov repnz adc aam scas push icebp mov inc add sbb movsl jo fwait sub xchg (bad) loopne imul mov and jno inc cmp push inc inc pop aas add add dec mov dec pop mov (bad) add outsb inc sub popa cmp das mov fcoms fldl mov mov xor jnp mov (bad) ja or stos jp or adc push ja sbb inc push add cltd and or sbb ds xchg sbb cld in adc mov and or xor stos pop sbb jne sub inc jge or sub push int in lret ret adc jg or adc leave mov push cmp and push inc inc mov or int3 jne push inc xchg or sbb popf jge and loopne push lea add add and scas mov pop add jg jg ss inc add push jbe jle icebp int xlat sbb jg jg jg jo mov (bad) jge xchg mov mov orb (bad) mov mov or pop movsl loop outsl mov cltd mov sbb lret add adc xor cli scas (bad) (bad) push push push mov or jne (bad) push movsl mov sti clc negl adc icebp push push loope push add mov or push inc in dec das add cmpsb loopne shrl shrl push and outsb idivl sub push adc mov xor in cmp or adc add push sub in adc ss aam fistl jae loop andl push (bad) or mov testb sbb out add lea test jge jns xchg inc inc inc push mov and dec adc jo arpl xor cmp and popa cmpl push push xor (bad) repz ficoml jo mov ljmp mov pop or xlat mov cs add lock mov push jl ja inc xor rclb add pop sub push mov jge xor xor push jecxz sub jle leave andl mov mov mov jmp sbb fistpll cmp inc adc jl sbb push push add ss push sbb lock inc mov cmp xchg add pop push inc xlat mov push cmp push push outsb inc and je pop mov shrb pop sarb mov push out jl (bad) and mov dec or ja push and push (bad) push and repz in add and cld push sub shr fistp ret jbe adc sbb hlt mov lcall lock xchg push cld sub or sbb mov mov sbb adc mov enter enter push inc mov and mov into es pushl sbb rol mov mov xor fucom (bad) sub dec add push pop inc addr16 dec inc lea out daa test mov and pushl push movsb adc ss popf push add sbb xor ljmp and add xor iret incb sub and rcrl push sbb and and add mov or loopne imul dec ficoml aas gs push aaa js cmc pop scas push mov js and ret sbb or xor inc in jo es pop cmp and sbbl je xchg mov das popa mov jp push push sbb int push icebp pop mov insb and das sub cmp fistl mov pop or inc cmp inc out bound (bad) or and or and bound jne lret je ret adc cmpsb cmpsl fimul mov and and or hlt les and clc and icebp movsl or hlt insl sbb je,pt or add and clc jge cmp mov or lcall test jl sub jge popf add fcomp pusha cld and and mov or hlt cld clc mov insb pushf incl jbe gs push sbb pop movsb mov les sbb and push pop push push int3 gs sub daa cmp cmpsb dec jbe push jns test cs fwait cmp sub pop sub in loop add xchg aas inc xor daa and add rorl and mov push je mov lds out ja aam sbb jl push aad add push xor je cmpsb cmp and outsl gs sub aam dec cmp mov loopne xchg add push lcall mov mov add (bad) (bad) jo and xor and roll push icebp inc ret and adc (bad) andb ret adc pop or test and cmp mov or jne mov cmp add sbb cmp out pop hlt add loope and btc or xor rorl jmp ret lods add cmp cmp xchg loope aas cmp pop das inc sbb jbe lods fimull adc (bad) adc pop sbb lret mov add mov pop and in cs dec adc or adc sahf push jmp pop jb push push push popa push sti les fs fs pop testb divl push cmp sub push stos dec inc inc mov call push inc or pop mov std jnp cmp sbb mov inc pop or inc es and mov mov ss or sbb insl mov in ds xor and (bad) jbe movsb push int3 jmp push jmp and negl push and test mov or je gs js sbb pop pop inc cmp jl sbb sbb add mov push arpl fild push and add ds pop cmp pop push pushf push add and add inc mov push xor sbb lea or sub push loopne loopne es xor mov ljmp or aaa jb inc bound push jge ret stos pop pop mov xor (bad) push aas mov inc adc pop xchg (bad) jae xor sbb jne (bad) cmpsl sldt sarb dec push lods jnp push add xor test pop add add dec or push push lea inc xor test lods imul int3 adc sub aad push cld movsl pop mov inc insl add xchg lea sub adc xlat incb cwtl ret jl jg out cmp mov xchg mov xchg add mov aam (bad) cmpl sub pop jmp push and in call je sub cmp mov mov mov fadds push into mov mov cmp and outsb jnp or jmp or xchg imul pop push lret mov and push push mov js jp adc sub pop fdivl outsb (bad) aaa sub sub loope les jo dec mov mov xchg xor add pusha xchg pop mov cmc (bad) pop mov outsl subb (bad) ret mov mov push add call stos adc add mov jmp mov mov aam pop dec jne loopne push inc inc xorl mov bnd (bad) bound lods push mov and daa cmp push or xor inc jl inc lds scas pushf mov ja or xor jl sahf arpl mov sbbl dec mov add push cmp je lds jmp out push pop and lock xlat lahf sbb pop add and push push sub push cmp pop es cld imul pop sbb inc jnp rclb mov push xor in inc inc pop ret and call rcrb add jl std and nop add dec adc add push loopne cld pop mov mov add lock ret push xorl inc cld aas test inc adc mov adc cld add int inc jmp xor imulb rol (bad) std cld dec add subl je test das dec fsubl inc ss inc mov or scas call mov js lock xor aam push jmp mov stos add dec add push ljmp (bad) mov mov inc and mov mov mov mov inc dec inc incl adc push lea mov mov test mov sub sub mov mov jo inc adc scas mov movb and pop mov mov add cmp ja out push cld mov sbb push xchg add sub test data16 mov add push lea jmp pop adc push pop popa daa add test pusha daa inc fstl push mov test enter stos fiaddl std (bad) das insb arpl ljmp adc adc xor adc je and (bad) mov daa jmp movb cs sbbb leave sub mov lea mov lea cmp ja dec push pop roll outsl sahf in cmp push and and sub iret mov arpl popa lea xor pop aad lds out mov clc mov test je jg adc add fisttpl push add sub cmp leave and push scas (bad) sub cmp push mov sub ss inc adc cli push outsl or adc les sub sbb scas sub pop andl sub push lods inc and add cmp adc rorb push inc jmp add push pop push sbb add jnp sbb les jecxz cmpsl enter pop leave jns lahf sub push or add or ds aaa inc and jge jne jge (bad) sub testl ja mov adc fnstsw cmc (bad) xor and hlt shll mov and (bad) pop jecxz (bad) and mov dec sahf call adc xchg mov push inc aad rolb shrb jnp jae jbe add sti push (bad) leave or ljmp outsl leave mov loope out inc imul int mov xchg jmp mov inc insb pop cmpsl sub in push loopne subb add or pop call inc inc cmpb (bad) mov or call xchg fnstsw mov xchg movl mov cmpsl push test lea inc jbe clc push mov pop mov and sub dec outsl in lahf sub ret add negb adc in (bad) jnp push inc push mov inc dec jne mov push inc xchg test push push loopne gs or loopne sub leave push jecxz push add push pop pop cld or jne notb mov inc xor mov js pop sahf je dec mov in (bad) addr16 pop jl add sbb (bad) push lret mov pop cmp movsl and cmp hlt push (bad) cmp pop jbe push aad sar pop (bad) jbe clc inc add adc lea pop push dec pop call repz test ss sub push fildl add jo mov pusha fisttp or push je clc add adc mov push push inc jmp sbb idivb mov mov add scas scas mov daa out pop movsb leave and mov adc mov mov jmp pusha and sti xor addl sub sahf push js lods jbe sub sbb xchg cmp aam cmp xchg push jg mov xor cmp jne or ljmp xchg les test pop loop mov or cmp mov mov aam imul sub push stos jbe jle sub adc or enter mov testl mov add aaa jae fldl pop cmpl pop jle movsl (bad) inc xor and push or and inc ja aas push inc xor xor call xor xchg push or mov mov pop push pop cmpl mov pop pop cwtl je pop cmp inc movnti add testb mov cmovb push push roll je xchg mov outsb sub aaa and pop or imul push fisubr movsb push jl lea fsts stc rcrl sub push inc subl lock sahf xor ds jo xchg inc or xor add je clc test mov xor (bad) ja das xor mov in or add dec icebp pop jbe adc nop push inc movsl mov mov mov mov cmpsl test outsl mov and xchg bound ja mov pop adc and dec cmp sub push or stos adc fist stos jnp add mov das aam jge es ret pop mov addl mov mov mov xor mov sub test mov pop add add xor add mov jle push out pop div pop jb lea rcr pop mov ja stc bound insl jne popa sbb int3 jge test adc or ret or push push and and add add push aaa adc cmp (bad) add push mov js xor aad pop bound add (bad) testw pusha mov sbb cmp jb insl or xchg inc cmp xor mov icebp cmp xor or hlt pusha fwait js fisubr push mov sub sub mov push arpl ja ret mov add jmp ficom and iret sub push push mov jecxz dec push hlt or pop mov and push pushf adc dec xor cmc lods test js pop lret (bad) in mov aaa stc mov add mov sbb mov lcall fnsave test clc inc (bad) or mov xor jle pop loopne cmp add pop adc inc clc ljmp mov inc stos add push jmp push xorl fdiv jno xchg cmp push inc es sbb inc lods jae fucomi mov lock imul mov and sub inc push insl jne aam mov jno das int pusha add mov dec push cmp xchg mov (bad) (bad) fstpt jge jp inc lds ror sub mov test sub ror pop test xor aad (bad) (bad) lahf add roll stc sub in imul pop adc jns and fist pushfw ret add cmp add add aas pop pop or in mov or add pop cmp incb mov inc and add scas dec stos stos inc mov ss mov pand aas pop jmp and pop decb clc mov movb or pusha imul or sbb adc xchg add adc and inc hlt insl insl addl and inc add movsl adc (bad) out adc or dec or lret je or jmp mov shlb adc ficomp dec add adc ret aam jbe pop data16 add lods mov or mov jmp push ret (bad) (bad) pop inc push add xor ret or repnz push jne or add popa or jbe (bad) cmp jne adc add mov mov sarl pushl ret scas add inc je pop push xor mov push add sti fnstcw pop add jne pop into adc aad loop pop jmp daa cmpsb in dec mov cmp addr16 pop sahf mov xchg sbb and push cmp cltd adc and mov dec or inc inc cmpsl or add popl out outsl stos fwait jle std adc push inc cmp jb add fstl push push ds push and xor adc jo push mov (bad) ds daa or addr16 mov int3 jp mov inc inc push ret adc add test xchg mov clc lea add js mov push add mov cmpxchg addr16 xchg es mov or out outsb sti imul cmp (bad) stos mov and sub push das and bound mov testb xlat daa push stos pop stos pushl insl arpl push add or bound adc (bad) jl call pop dec std scas and mov movsl adc push pushl mov push or mov das inc and les mov add jecxz inc mov inc or adc push cld mov out push pop mov push pop or push cmp lret fdivrp fsubrs or or fimull out or (bad) jae sbb sbb xor test shlb or cmp mov jne pusha or adc pop add pusha bound lcall add pop or jb sbb add xlat jge imul mov mov popf sbb push lret sti inc add nop cmp jl fstp dec inc shrb push lea sbb push insb cltd mov cld sbb repz ds xchg push mov popl sub lahf push call dec and pop in roll lahf mov test or xor sbb sub or add mov and and mov cs add sarl test add jmp daa pusha (bad) pop inc xor fisub pop scas inc xchg mov mov (bad) cmp cld insl jmp inc cmp jne push rclb aas fwait jae (bad) push aaa mov inc push jmp pusha sub cwtl xor das movsb fistp cmp sub je push push push cmpsb les push or das adc add cmp jne decl jp mov mov pop mov out mov or add mov push jo inc xor push jno repnz add or push movsb adc sahf ss pop xor and inc pop insl add incl aaa or es fisttpl ret push inc dec adc push rcrb popf or fsubs pushl mov divb out jo xor sti and cmp inc cmc or or inc incl cmp (bad) push clc call insl mov xchg repz jmp sbb adc and add lea add rcrl lods clc fimul dec and lods es jne ds add inc movsl inc in or cld les shr sahf adc add mov fst leave jne lret std je mov stos dec dec je dec cmp dec mov or out fdivrl jae and sbb push inc daa cmp ja mov xor adc mov sub ret and add or mov mov mov or cwtl mov orl ja lret sub cmp push mov es cmp loop jae in insl jne loop inc mov mov add ss jae subl mov push push inc psllw int and jmp xorl ljmp inc cmp mov pop cmp push jne addr16 (bad) and push mov sbb fild jmp inc fbstp arpl cmp inc pop imul fisubr inc je sub lds popf ficompl pop sub push xor lock inc push and cmp test outsl push jae add sbb jae push pop jb cwtl add gs adc lock or and jmp add mov or or ss xchg jge inc insb jne dec mov jge idivb imul jnp (bad) aad xor push push in push cmp push lock inc or add xlat and sbb adc cmc cs (bad) movsb add sbbb xor cmp push add (bad) repnz and add add fbld jmp cmp xor mov or int3 cmp mov adc rcrb aam stos push cmp imul mov mov in lea mov push mov inc loopne mov addl sub xchg cmpl mov adc dec ret jmp lods hlt push (bad) aas jl jmp or stos jle sar fildl add je mov test loopne sbb or push adc fdivrp inc clc add out add pop stos wrmsr mov push pop das push in aas mov in jle inc or subl mov outsl test repz xor push sarb fildll aad adc jmp (bad) dec adcl testb ret xadd push push in pusha sub stos das inc imul xchg fwait xor mov mov or add or je xchg pop daa movl outsb lcall lea mov inc sahf jmp scas and lret insl mov fldt add lock inc push jmp mov repnz and pop jb (bad) push mov adc sti push daa loopne rorb sbb add push inc fistl scas xor pop add sub cmp push (bad) dec inc aam inc loopne xchg push andl pop lret push imul pop inc xchg out and xchg daa sub and dec out mov out in jmp shlb jbe jmp fnop inc add push inc dec jmp sub adc pop or add push pop sti push xchg sub dec mov loope jmp test lock mov imul pop pop pop mov mov cmc pushf sub cwtl or sbb pushl rcrl add addl cs jl les sub inc test add call mov mov adc or or adc mov mov pop fisttpl fimul sub adc mov mov lds pop or fcoms cmp inc je stc nop cmp add pushf sub xorl orl fldl psrld clc jmp push push pop cmp or sub push push jne push add xor push push jmp test add aaa cmc or push leave out (bad) fdivrs mov jge adc adc ss adc xchg sahf mov test icebp add rorb pop mov arpl rorb clc call and inc fwait mov scas xchg xchg jo enter nop pop add scas leave adc add ljmp add adc push xor fisubrl push or rolb rclb fadds or inc adc mov (bad) sub lret cld sar call imul pusha pop or sub dec add inc in or inc mov ljmp push cmc pushl adc test pop or je cli add cmp or aas pop xor mov cmp inc mov cmp add jae leave jmp dec add shll pop mov mov and jmp lea sbb les mov ficom add jle mov fstpl push cli add xchg je dec fmuls jecxz hlt fnstsw jne adc sti add stos clc mov mov dec pop cmp movsl fiadd cmp insb clc xor xor inc inc push (bad) je mov (bad) mov cmp sti out rolb out jg je dec add and xor dec loopne mov idiv lods sbb jno inc pushf insl aam and or or sub sub fisubrl cmp sbb mov aaa icebp rorl add lods jmp jne mov dec paddd push inc out sbb or cmpb inc test push dec push xor mov bound pop inc cmpsl or jmp and push xor adc arpl mov ljmp rcrl mov lret pushf je inc add sub js rcr fistp xor fisubrl shl add push mov pop neg add pop or push mov sbb mov mov add decb or icebp dec adc mov xor gs bound cltd or (bad) adc or fimull adc das sbb mov adc pop jl sub jg hlt sbb cmp or jne and aas and scas cmp dec push ljmp lock lcall (bad) pop psubq push xchg mov add cmpl mov xchg mov idivb push or push stos ret mov jge cwtl das int push xchg fimull inc adc jbe sbb fcoms push in jmp addl sbb sti inc mov xchg xchg xchg mov push ret and adc mov mov xor jge dec imul out xor cltd pop mov adc jg inc pop rorb jne push sti sub mov stc push fmuls (bad) lea lea mov ja out outsl lock inc orl mov (bad) pop outsb mov pop out fdivrl push adc cld lock push add sub dec mov addr16 jne add ss ret inc movsl imul aas jle outsl xchg fs inc add fdivl inc mov testb or add pop not and loope inc int or jmp in mov xlat sub pop shr fisub cld cmp insb sbb nop mov adc xor fisttpll sub mov fstps sar dec test inc sub xor pop push pop pop pop sahf pop inc adc fistpl arpl test int3 jl mov nop es add scas cmp nop fisttp dec mov fstl or sub add mov mov test inc movsl or adc inc xor ljmp mov mov push add or jmp dec dec or inc pop mov xor adc pop sbb adc iret cmp fsubr and lret test lea cmp mov jg xor or fistpl inc cld mov cmp add dec mov lea inc (bad) aaa mov dec and pop xor test mov mov push sbb rolb testb aas orl cmp sub lcall addl dec dec push add daa adc outsl ja mov or mov xchg pop push daa cwtl icebp mov dec mov dec add add (bad) aad push cwtl xchg and mov push bswap mov or cmp push into setns and pop sbb push dec test sub inc les inc sbb scas mov sbb mov xor (bad) imul add loope sbb cwtl lcall fidivr mov subl or je lret mov or mov and and add mov or jb push pusha scas push lds pop and movsl lahf sbb fnstenv jmp mov adc pop inc lock or mov ret lock dec and adc inc nop adc xchg push inc mov hlt adc add fwait in sbb test psubd outsl je cli mov mov dec (bad) iret jne fadd or adc dec pop cmp push addr16 xchg pop xchg enter out testl jne pop add and leave icebp inc addr16 and or cmp icebp pushf and loope jo jle dec lcall jecxz dec leave pop cmp jge iret enter fnstsw jno mov pop mov decb jne int3 hlt int mull or sub es sub mov sbb or sub pop sbb adc or xor fsts and push add mov leave or mov testb cmp mov sub or stos mov push mov cmp test mov repnz jne add aad xor cld jbe sub lea jne,pt cmp popa outsb dec cmp sub sbb or mov dec lds sub cs sub movsb and std sub lea push pop pop jl js je jbe push loopne xchg mov push pop jo jp lret in insb gs test mov add add xor loopne inc xchg mov push add mov inc push or fimull lods mov jb adc mov push adcb or adc add or add loopne adc out pop push nop into fmull mov xor pop in test call pushl jmp inc inc push loopne pop aaa cmpsb dec jo mov dec or sub xchg in mov mov cmp sub sti add or cli pop push xchg add ret add and or and pop mov sbb pop test push cld sub je push popf sub jne xchg push in jb stos fnsave adc clc pop testl sbb insb push push (bad) push push int loope imul popa inc arpl add in push rorl popl dec pop fstl mov or mov aaa loope push and mov add rorb ja dec rorl push adc (bad) loopne pusha or push rorb testl subb daa jo dec or stos sub sub mov dec cmp or sbb jns daa idivl nop dec inc call push fimul and dec adc push add xor push push push imul xchg addb or sub mov cmpsl test sbb xor cmp test mov cmp insb and push jbe jno addb add xor sbb and int lock and adc push cld test xchg and push mov mov rolb stos jbe add je pop scas cmpw lock (bad) fidivr adc and lods mov or xchg (bad) aaa test fildl push dec and in mov push fisubl mov push fimull sbb ds test stc jb push hlt dec pop fdiv sti jb ret sub (bad) jb adc adc mov jno inc (bad) push mov push lahf test inc push or js cmp insl dec or push mov dec fsubrl dec sbb pop and inc and call inc xor add add push adc xor notb xor xor mov subl xor mov inc out mov icebp (bad) or or pop stos lea lret add mov (bad) jae and mov xor jnp push lret push std sti or cmpb xchg and or pop jne inc (bad) clc sub lods jno or pusha pushl mov je popa mov and (bad) adc jmp dec adcl (bad) mov mov dec je stos out xchg sbb das jmp mov mov mov or cmc (bad) sarb dec insl or jp pop xor popl stc cmp mov addb fwait and mov aaa lahf or xor xlat or add jge das sti add sbb mov sbb pop ja jbe jl jle rol inc fs adc mov fisttp inc sbb add ret (bad) add pop sub push notb cmp push mov es aad pop push roll inc push movsl jmp das sarl les add mov ret cwtl int3 inc xchg nop mov sbb lcall cli mov cmp dec mov inc adc sbb push lock push dec sti stos loopne add push mov inc adc push je dec mov push jne sub test or adc mov movl or inc movsb pop fwait jge push orl loope dec xor adc repnz adc jge cvtpi2ps push add ds test loopne sbbl repz push mov push push lods mov push push push push push push cltd add jg cmp es jl and pop call jo (bad) (bad) imul out mov insl stos mov lea fdivl inc and lds fimull hlt int3 int push stos pop or scas mov cmp mov (bad) cmpsl clc sub pop push pop jmp testl xor xchg add mov xor sub jne sub lods subl pop and mov add mov jnp rorl pushl add sub add pop push lahf mov pop adc sbb ljmp ljmp push mov push jecxz out push inc rcrb dec imul insb add orl add or testb push fldcw icebp fcoms push or and mov add mov mov fstl and out dec sub xor test inc sbb (bad) mov ret je mov adc push adc ljmp sub (bad) xor fcomp push inc ja adc inc xchg and mov jl and call sbb xchg push stos and adc or stos inc icebp ret cmp push mov sti test adc in push lea fstpt push imul dec push pop les (bad) jbe cmpl sub mov lret fcompl leave pushl lret dec xor cmp and adc (bad) out and ret fmull sbb mov popa inc aaa sbb sub ljmp pop pop mov arpl inc or daa push adcl jbe jbe pop or nop inc push adc inc push sbb ss and and sbb sub xor fs inc sbb cmp insb cmp stos inc or inc pop fs inc push dec dec push nop inc push sbb inc push sbb push insb jo js je inc jl mov xchg leave and mov xchg cwtl xchg pop jb pushf mov and stos sub mov mov cmp fcoms rcll add pop and xor gs clc aas jle or cs add enter xchg adc sbb pop cs mov inc xchg or sbb jmp pop aas adc jb add sbb cmp mov inc dec jne je mov mov and sbb mov or add cmp shrl stos or pop bts jmp jo test adc call into mov push sbb mov jmp pop dec fisubrl and fidivr fadds xchg adc adc xor fldenv or aad and jmp push cmp neg dec (bad) jge sbb mov mov inc inc into ljmp or outsl fisttpl cmp jecxz sbb xlat jmp or test push lcall pop jge incb rclb jmp or lea stc add add push add dec inc mov and push aam movsb lret imul nop je mov xor pop dec (bad) adc and push aad orl dec int3 or add cmpl sub add out push inc mov push hlt sbbl jne adc sub pop es push pushf dec adc dec orb push (bad) add push ja push pop cmp xor ss mov or sub mov mov mov bound test dec rol out outsl rolb inc ss push (bad) xor mov dec lods jg fisubr (bad) int3 mov push sbb divl push pop dec aam sbb xorl push aad pop mov and and inc sub mov jmp and add add imul aas mov push lsl (bad) rcrl or pop jmp adc shll or gs jecxz xchg adc sub call sub loop sbb addb popa and jns mov (bad) inc lret add and xchg xor mov orb mov pop pop add mov jge add adc bound xor mov jbe or leave pop adc push dec add and fmuls jns or push adc mov or xchg cmpb je or push cld sub mov add testb adc sahf xor inc push mov or push push jp mov sbb ljmp mov add repz mov adc in add xchg int and mov dec and sub or leave mov push jecxz push adc cmp pop ret push mov xor mov sbb dec hlt mov test pop add push inc adc add adc add pop cwtl xor add push je lahf (bad) cmp jmp mov cmpsl lods add xor arpl push or enter xchg and mov xchg push rolb inc push mov shr add mov test push scas aad jae jecxz jns dec rcr mov test or mov or pusha mov or nop sub fsubrl orl or out pop and js mov or add or sbb jbe adc loopne pop sbb andb jg sbb mov dec add push sub and and and imul sbb (bad) push mov adc cltd pop or imul sbb stos mov mov loopne rorl and mov cmp mov adc jge or jmp mov (bad) xor rolb mov mov popa push or push or fimull push mov or imul test push or fild pop pop pop test add pop push shrl repnz andb add sbb sub or add loopne xchg popf jae sub lock pop push inc or adc or mov or mov cmp jo icebp xchg ret mull or xchg loop or sbb (bad) pop (bad) shlb fcmovnbe ljmp div fisubr pop xlat das and out jb cmp fnstsw jb cmp jbe dec sub sbb pop adcl push (bad) mov (bad) fadds mov mov fldenv ret dec ds push add lcall imul xor and cmpsb sub jle jb or add pop lret movsb pop adc push (bad) in (bad) scas jne jmp add or push add push popa push mov movsb call ja ja cs mov add jl add sbb mov les xor jb je sbb and fwait or pop push and mov clc jg mov inc jmp cmp jne addl add mov dec icebp cli fcoms inc or (bad) aaa dec insb pop or mov pop push shlb cmp cmpl adc and push adc xchg mov out jne cs and or in call cmp test push test das jo mov jnp das mov pop add popa cmp push je xorb cmp cs or daa adc dec lret push add lds dec stos and add test mov xchg mov cli mov jbe (bad) mov jne test add push dec ds je inc sbb xor ja loop inc mov jbe popf insl sbb and daa outsl jle mov and negb (bad) mov lret mov sub adc inc add popa mov inc jmp and fnstenv adc and sarb dec push dec push lock pop jne push nop sub enter pop ret or bound pop mov call jns mov mov mov je loope xchg es insb je mov std jg ret out push cmp ja add cmp fiaddl rorl ret (bad) cmp and add mov mov cld rcrl or xor inc mov loop add addl push push pop je pop push test mov push fcmovne test push and jecxz push or cmc push xchg mov sbb mov xor lock xor inc push (bad) or and add and or pop xchg jne fcmove mov push roll ss out rolb push mov fimull insb adc xchg sub mov (bad) aaa push std cld mov or jmp add mov xlat push nop sbb cmp pop cmp (bad) mov adc or sbb rolb mov add rcll (bad) hlt inc add dec fildl xchg adc pusha sbb arpl inc jecxz insl pop arpl mov jae pop push mov cmp sub and sub pop cmp fdivrs push (bad) mov dec orl mov adc push dec cmp insb xlat or push cld xchg xor dec jge int3 xchg fistl lahf or push push lcall dec or into inc xor add jbe push xchg push and add sub cmp mov icebp adc mov add inc ret lods fadds lret fdivrl andnps or fdivs shrl out cltd mov sbb add test mov mov push adc dec inc lock or mov leave cmp and aam subb jp popa add sqrtps lret pop pop jns or jmp and jle add xchg jnp arpl inc or je sbb inc and inc jmp jmp (bad) push push sbb inc das jne or imul and (bad) fdivrs stos push add inc pop insl arpl cmp mov lea pushf (bad) ss add pusha ja push mov sub jl dec addr16 test xchg dec push std (bad) cmp jge cmp jle and decl jo sub fstps lret push mov cmp sub repz inc pop les add icebp push inc adc inc xorl mov pop adc sti (bad) pop ret sbb or mov cmp je xor in mov cmp adc std mov inc or movsb push bound mov insb js icebp pop jmp out pop jns cmpsb je es add out adc adc hlt fiaddl push aaa jge jecxz stos mov inc call sbb lock pushl in push arpl push outsl stos inc xchg subl and add or push xchg push xchg pop mov jl xchg rep lret je or pop jo fcomi add add stos mov (bad) mov sub test lods movsl cmpsl adc jmp xor xor mov notb jnp outsb pop testl pop adc push mov in fidivl mov jo lods (bad) mov imul je push out mov imul add pop pop push dec jo pop sbb jbe test sahf sbb test mov dec xor icebp dec (bad) adc in popl jnp loope push mov mov (bad) cmpsb jo mov pop push jmp xchg push insb mov push pop push mov xor leave pop jb sbb push aad lret pusha jmp divb rorb add rorb add push jl lea orb pop sub pop (bad) je dec inc lds fmull testb testb add lods bnd add add mov add test add inc adc js cs dec dec inc arpl cmp adc fsubrl and adc or in sar adc idivb push cli cmc push mov push adc dec xchg or xor or jne fnsave movsb movsl and movsl push cs or mov adc dec push fstpl add pop mov stos jle cmp push or pop jb pop and (bad) and add lods ljmp imul mov sub jnp ret into cmc add cmp cmp push iret adc and and movsl insl jne and adc repz add sub push in and xor xchg fwait jb cmp jns and pop into mov lret jbe insb movsb mov and mov in pusha push or sbb leave in jl or add test mov rcll pop inc outsl or cmp aas add push xor mov push push or loop mov jo jle mov mov cmp insb jno aam mov add imulb lea or mov add fstpt jmp fcmovb mov jl decb or mov ds adc mov push cmp gs add ret mov sub mov test push dec fstps rolb repz in int3 add mov sbb fwait outsl dec xor xor fdivs cmp adc sarb jo insb bound adc adc push xlat add jb adc jae xchg cltd mov mul add cld dec jg shr mov adc sbb scas mov mov push adc inc dec mov cmp lods imul insb jb xor nop fisttpl inc pop add adc (bad) mov mov sbb add adc mov ror jg outsl xchg pop fcmovnbe jmp rolb jle cmp jb rorb mov push pop (bad) loopne mov sahf sbb outsl jo inc adc jae test test sub mov or out mov lods cmp icebp dec repz adc test jno adc inc or loopne ficoml or lea outsb or ja xorl rorb sub loope sub mov xchg and stc mov inc adc mov inc ja inc adc ss (bad) mov dec ss inc cltd les sub add inc mov fild out jl dec jg sbb pushf cmp (bad) cmp popa dec je inc and pusha mov jmp sub add sbb xor (bad) xor popf pop fist mov xchg adc movsb scas and push rcrb or nop jns negb sbb insb je rolb roll adc adc ds and jbe dec je dec jne push cmp or ja in rclb jmp sbb cwtl mov insl xor cmp rolb sbb jne push jmp popa push aaa mov sub aaa mov (bad) cmc popa mov or inc or dec or je pop rorb pop adc cmp push mov add add push aas (bad) jp cmp je cs and sub adc push test add and mov push pop (bad) popa je add add orl (bad) pusha jno sbb pop push cmp jl iret jg xor adc add mov hlt out push cmpb sub xor push lea mov mov push subl into xorl adc pop jb test scas sbb push loope jmp mov inc add xlat pop (bad) outsl push mov pop dec btc and jl or or push add aam mov cmp (bad) or insl inc inc dec add sub (bad) int push add push ret mov movb or cmp inc mov bound sbb sbb data16 jae lods pop (bad) insb lods outsb and or sbb imul sub pop mov push aam mov je fisub gs test jle inc pop add or inc movsb add test dec mov inc pushf sub inc inc xchg jecxz inc sbbl outsb insb adc int3 or (bad) mov int dec push es push mov push or mov or leave js cmp cmp xchg fwait in sub clc ss cmp cmp fsub paddusb popa pushf jg xor lds push or inc cmp push call jle push into mov mov (bad) mov loopne pop mov push push ret add cmpsb push test and or inc jl std clc push push jg jmp je hlt sbbl jns mov (bad) xor sbb lock or jnp enter je push hlt inc cltd add loopne mov mov and (bad) rclb xchg mov call push pushf dec mov add popf cltd sbb push push mov mov nop sbb movsl pop rclb inc test je add add mov gs (bad) jno inc jp push aam arpl and pusha test das add lret adc test dec or push push dec loope mov or pop (bad) sbb adc xlat je cmp adc (bad) sbb aaa test or inc and mov sbb add mov jne imul inc rorb pop push je jg rclb xor je sub pop adc mov in push inc (bad) je scas push mov out mov and cmp call in jmp add and imul lret mov adc dec inc mov ljmp or or cld es call xor add out mov pop adc jmp push jnp test inc xchg movsb mov and mov sbb je dec test adc pop ret frstor and lret or repz dec lea clc mov testl stos xchg in icebp push mov fildl rcll jb push push js dec je pop testl xchg aaa sub and ret sub push push or mov (bad) rorl or add je test xor ret cmc fadds sbb inc sbb mov cmp jb cmp jb or push push dec add adc or lods add xor repz das add clc cmp add aam (bad) maxps jno xchg add aam mov sbb mov inc mov movsb (bad) (bad) out cmp insb adc jmp sti orl mov fdivrp nop mov xor fcoml icebp in fldl ret sub push pop sbb add push jo dec stos ja push add (bad) out sbb add add add std mov and pushf lea inc sub xor sbb pop sub repnz mov adc jge ljmp inc push mov inc imul push rcll or arpl mov inc push je dec cmp jle adc inc adc in adc or cmp aad ret daa rolb pop imul fcomp mov push loop and (bad) jne sbb inc mov or add or and scas inc pop imul jl pusha xor je or sbb adc xorb les add int3 sub or mov std mov or test mov fs loopne and add inc sbb aad pop mov jbe xchg inc jl je fmuls mov mov mov cmp cmp (bad) (bad) xlat (bad) pusha call fildll add movd adc ret xchg fistp mov jb mov sti test into mov jbe jmp jne repz adc and faddl pop lds test ljmp push rclb sub sub inc out adc mov pop sbb mov addr16 adc or sub inc sbb clc clc and sub mov movsb lock std or insb std adc (bad) mov loopne mov test cld sub adc in and push mov cmp and pop mov rep mov inc push pop pop inc pop add jne add mov xchg xor adc jne adc pop jb mov mov inc in mov or sbb movl lock mov inc daa xchg popf or insb sbb jne sbb pop loopne cmp mov xchg sub mov xchg dec mov add out or cld pop stos and dec push jnp fist shlb mov adc pop sub fidivrl lea pop add jnp mov adc mov inc daa scas and notl (bad) jo sbb imul fidivr inc add add xor addr16 test adc and or mov fldcw es push pop add stos out add (bad) loopne jne adc sbb insb out pop das xor ds push inc add hlt or pop fiadd and xor test shlb rcr aaa add add loop pop cmp or adc pop cmp adc inc mov fs or xchg es pop pop sbb jb dec cmp mov push push xlat pop add les icebp int3 (bad) mov or jae and xor mov daa add lds lods imul pop cmp js and inc ss inc or inc adc add enter push jnp mov cmp (bad) adc add add push and cmp mov call std (bad) cmp push aas das cmp enter mov or add or or or dec (bad) lret leave cmp daa pop mov std add leave adc or or xor push clc insb and jg mov xchg push enter mov xchg inc lods mov xlat pop or rcll arpl fdivr ss dec mov xchg fwait dec mov mov cmp dec pop sbb xchg ss push adc imul pusha xor fadd ljmp mov sar jbe cmp cltd cmp (bad) mov or js in xchg insb orb fwait cmp mov xchg movq leave orl xchg fbstp (bad) or lods sub cmp mov rolb les xor mov jecxz shr add pop inc nop adc leave and add xchg xchg arpl je xor enter sbb sbb es cwtl dec lea (bad) (bad) or add lds add fistp int dec push mov xor decb cwtl aaa inc imul xor cmpsb (bad) adc sub popf (bad) lcall xor add inc sbb jnp mov popa add inc inc ffreep (bad) lcall in iret adc imul sar dec push inc popa push or scas int adc loop and fildll sbb fsubl aaa mov jae or add (bad) xchg jb les je and cs (bad) fild xor inc outsl jo jb addr16 xor xor dec gs call sub and imul or scas fstpt add add or stc rcrl and and pop mul pop add mov or add data16 or add or adc add jg (bad) xor roll pop or or or add xor add jg and add add inc xor add enter arpl inc push sbb push add or sbb or or pop nop inc or mov jnp adc pop or or (bad) je sti or imul (bad) xor sub insb in sbb xor (bad) xor fdivrl jl xor sar add xor and xor (bad) xor (bad) xor (bad) repnz xor sub xor (bad) xor fidivrl mov sar push xchg dec (bad) xor cmpsb data16 xchg xor (bad) xor (bad) ss (bad) xor (bad) (bad) push mov dec (bad) xor cs outsb out push sahf xor (bad) xor fidivr mov sar add mov shll popa loope lcall xor jno or dec leave sub cmpsb imul cmpsb imul imul cmpsb imul mov cmc or lcall imul imul rcll add je xchg add push push rcl xor (bad) xor xor dec (bad) jae repz dec (bad) xor mov xor (bad) xor sub dec shrl jmp sbb xor fwait fwait pop pop fcmovnu xor (bad) xor cmp dec sarl sti pop pop dec (bad) xor xchg xor (bad) xor daa cmpsl cmpsl addr16 xor shll out pop dec (bad) xor xchg xchg push push xlat xlat xor (bad) xor aaa mov ja xor (bad) ja (bad) (bad) cmovge xor (bad) (bad) dec dec iret iret xor (bad) xor das scas scas outsl (bad) xor shrl out pop pop dec (bad) xor lahf lahf pop pop (bad) xor (bad) xor aas mov dec sarl lcall inc add pusha adc lcall sub imul imul jmp je inc addl ret and andl js lds imul cmpsb imul imul dec roll or sub xor sbb pop cltd movsb jmp add add fs push sbb or sub dec xchg push punpckhwd adc adc adc push pop sbb dec xchg sbb sbb (bad) std pop icebp fsubs or fnsave orl adc leave nop or adc push inc leave nop or sbb xchg and push add mov push add cmpsl or jnp adc sbb out roll sub cmp dec (bad) xor add jo mov mov aaa jae insb mov push imul pop insb mov push xor dec sarb and addb outsb sub loope mov and insb gs xadd call (bad) xor inc rcll add sbb dec (bad) xor and xor inc push cmpsb imul cli lcall sbb add or jmp or or add sti lcall or add add or lcall inc fldt dec stos pusha pop mov fbstp push outsb imul outsb and arpl mov dec divl outsb pop int3 xor add insl imul arpl gs outsl dec dec jb jle out pop dec inc push dec inc dec xor cs dec dec mov gs sbb mov inc jb gs push gs popa insb jne inc jg icebp add insb outsl push and inc js je fimull gs insl jae cmp lods pusha dec fcoms pop push mov stos movsb bsf fs or sbb (bad) (bad) (bad) jmp and sub sub cs xor xor xor ss cmp cmp cmp ds inc inc pop inc std incl inc inc inc inc dec dec dec dec dec dec dec dec lea decl pop pop pop pop pop pop pop pusha popa bound loope sbb imul jno jae jne xor jbe js jp jl jle add imul loopne sub sti push dec dec push push adc jmp dec inc push add add dec dec inc adc insb in inc inc sub xor lock jno jo insb imul jae insl popa mov ret adc je insl mov je and adc push pusha xor mov fisubl lods mov mov jns or inc sbb insl shlb popa arpl daa pop mov jne sbb insl and insl insb insb jnp fs push insl and lahf pop (bad) fimull xor jmp (bad) pop dec fmull data16 bound shrl insl bound jne mov and jbe and jbe imul push das adc fidivr cmp bound mov outsl cmp and sub jbe imul lods ret sbb insl in outsl pop push insb insb popa outsb xchg sub pop movsl imul insb jb sahf arpl push sub cmpsl popa xchg fldcw inc sbb outsl jb repz fiaddl imul insl lea data16 push test gs jbe add and das xor mov mov fimull cmp maskmovq popa sub in sbb mov fs xor cli mov mov into insb gs orl daa aaa jecxz imul aaa negl enter aaa xor or jbe xorb leave fwait ret sub xor pop sub pushf mov sub fsub sub leave imull adc shlb outsl jbe insb arpl cmp sbb outsb andl cmp jne mov mov fmuls xor mov cs repnz and jmp push sub enter sub out sbb mov ja bnd xor xor mov sub jae xchg gs mov sub dec sbb push xlat les pop fwait icebp jp xchg inc faddp add push mov adc (bad) and inc sub cmovl daa rcr mov add addr16 and jne add xor popf insl (bad) and dec arpl jb jg gs outsb das adc inc outsl cmp leave loopne sub xor test add xor sub dec add mov xor add add aas (bad) add add in sub or mov add in add add push sub inc push mov or in add das add enter adc adc (bad) (bad) lcall lods addb xchg lea xchg xchg xchg xchg xchg cwtl cltd (bad) (bad) (bad) lcall lahf mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov (bad) mov mov (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp (bad) (bad) (bad) (bad) fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc div clc stc test sti cld std (bad) call lock adc adc push and and popa jg dec cmp insb push push sub mov and jns add das pop rclb outsb das or dec sub dec loopne pop daa out mov sbb dec outsl jbe dec lea test sub push jns inc push (bad) test inc in dec ja sub mov inc out or les push test adc dec fidivr (bad) sbb addr16 push push mov inc inc aaa jns aas dec adc and mov popa inc inc pop or adc push pushf jl arpl or adc negl jne inc cmp das add and repz fwait sbb dec bound sub add movl pop dec inc insb and cmc (bad) mov fucomi jns mov push pop inc popa mov (bad) fisub jb jns adc dec mov xor xorl jo inc pusha mov movsb cmp andb lcall pusha insl add ja sbb out inc dec jo and insb mov imul bound sub in popf enter mov test outsl and flds leave sbb gs dec add mulb aaa lret test sbb fimull (bad) cmovp pop pop sub add daa add sbb pusha ss push jae outsl cmp sbb ja pop popa psignw jbe jbe dec and push push push dec dec lods fnstsw inc dec add jns add mov pusha sbb and gs or lock nop ret imul je xchg dec dec and mov mov xor jb (bad) xor mov xchg add popa mov mov push mov aas mov adc dec pop nop push lods pop je outsl adc sbb (bad) fldcw or jl fldt add cmp add add dec roll sub es insl dec aam xor jle sub sub jnp into pop xor ds cmp pop and fwait das sub out add mov xlat add or sbb outsl jo pop xlat jge cmpsl cmpsl and cmp mov ds lret daa pop fnsave loope push or in fisttpl sbb je jo ss sub pop and repnz xor pop or xchg push es xchg jo (bad) xor ds ja loop cmc fs pop enter xor add and (bad) hlt (bad) insl lcall add call push aaa add sbb add fucom pop faddl fcom ror xor (bad) xor mov jnp shrl xor negl mov roll dec (bad) xor insb push xor (bad) xor push dec dec inc (bad) xor sarl sub sbb dec (bad) je hlt (bad) scas add mov (bad) xor sbb fadd mov xor roll xchg js fs dec (bad) xor dec sub adc call (bad) enter and scas mov rolb push dec push inc repz outsl ja lock outsb pop push or or fcom mov cld inc arpl push imul and lahf inc outsl add pop mov push movsl loope jo ret dec cwtl xor test adc pop les sbb or xor cs mov push adc mov cli sub scas add dec adc sbb inc rcll adc aas lcall incl pop cli rcr test dec add jmp stos ss inc cmovb fldt adc add lods (bad) mov insl imul scas arpl cmp adc add push enter add push lret sub scas jbe mov pop insb adc add aaa push push pop dec push jns xorb outsb push add jmp cmp pop das lret sahf jmp inc jb gs lds or jo fstpl or mov jns add add pop insl mov fs inc aas and xchg pop add push pop add pop add inc cmp je ret test punpcklwd mov outsl add ja roll and jae (bad) jne mov push outsb xchg outsl daa jae mov mov outsb push adc sub arpl sub inc xchg or arpl jo outsl and ja inc mov jno aad jae lock arpl mov inc addr16 pop sub popa fwait jnp xor or pop add lock pop outsb add push movl arpl test iret mov inc and lea insb mov add dec dec add fsubs fdivl inc mov sub inc cmp adc inc outsb ret jne add jecxz or (bad) js pop or xor inc xor pop shll inc xor pop inc jne out mov add out xor xlat pop xor add lret fdivl ret sbb or jmp jno mov pop or sub mov and dec push add add je popa jae pop mov outsl and pop ret inc outsl xchg dec sbb (bad) (bad) ja pop data16 insl or out xchg outsb sub ret sarl push jge movsl int test data16 dec sbb bound and push je imul mov mov add fstpt mov push jae inc loope arpl pusha jne dec addr16 or aaa ss jne insl jns fwait jne loopne jmp ss add dec dec or mov push dec xor pop mov inc push or popa mov dec fwait pop dec out mov jne inc fwait jae icebp in scas popa test popa sub insl add ret popa movsl inc mov test fsubs dec add pop mulb cmp xchg push fwait inc pop push add (bad) dec fadds imul sbb mov push daa pop inc aaa mov and inc lea (bad) and add lods lock (bad) popf popa stos mov sahf bound das in addr16 push pop dec and dec fsubrs insb pusha daa dec xchg or mov xor pop pusha (bad) pop movl or insl or jo cmp mov inc das rcrl fldcw loop test inc bound inc call das jns push xchg dec xor xchg insb stc sub fist orl shrb mov mov mov sbb dec dec mov adc jmp in addr16 insb sub xor fldt icebp xchg or or (bad) insb and addr16 pusha call sbb add add mov xor ja insb add sub push nop add test add mov inc je adc jnp inc or mov insb adc xchg adc (bad) dec add mov inc xchg inc and push enter bound in imul mov cmp movsb mov xchg popf gs mov jbe gs xchg dec cmp mov fdivrs jae mov js adc and inc pop (bad) inc push pop popa bound cmp cmp cmp aaa sub (bad) jmp popa xor xor xor bound data16 outsl cmp inc inc xor jg mov and inc inc inc daa aaa xor ss xor arpl outsl adc inc xor jb fs outsb sbb inc push dec gs xor add imul jo aad addb mov insl dec sbb xlat adc cmp (bad) je cltd push add pop push push insb sub and cltd inc adc mov inc or add ds lret push push insl inc add insb in push imul scas or mov fmuls xor arpl outsb rolb int inc mov rorl jne add push sti pop sub lea xor jno nop or inc aaa mov xchg add xor dec and bound cmp add mov add (bad) lea pop fs sbb xchg fbld sub test dec repnz add xor pop ss adc mov popa adcl orl add and cs add popf pop jae cli push (bad) negl mov test popa add mov arpl push (bad) rolb mov and cmp add pop or lcall inc dec jo xor xor adc bound push or add push pop test addb inc insb xor sti and inc jne std xlat (bad) jo aas jnp and les or xlat or add (bad) sub xorl push sbb out repz add xor push pop add and outsb comiss xchg lea push push cmp inc or loope dec fisttp bound push dec icebp xor xchg fldl pushf push sub add dec inc push sbb mov loopne xlat inc sub dec or sbb dec pop jnp add out inc insb add iret dec cltd dec add add ljmp and add into adc pop jb add adc outsl das ret gs add pop xor mov mov je and cmp jnp inc fildl sub jbe or adc mov or popf fidiv mov aaa pop fldcw or dec fmul xchg jo and das fmuls adc cmp and add mov outsb add adc cmp stc add pop or xor add fwait mov fistl insb adc jmp adc jae sbb push flds inc pop lea mov (bad) outsb xorl mov iret xchg aas pop xor (bad) jns pop leave xor xorb je fisttpll movsb mov movsl roll sti mov ja dec pusha push popf test mov jge (bad) fnstenv movsb mov adc xchg imul fs jno pop arpl xor and cmp popa jae scas xor and loope lock pop or (bad) fldl outsl xor xor das inc push pop mov lds xor and insl int icebp and lds mov dec lds lods sbb jb push mov fldt push sbb or mov inc repz testb jno daa jns adc lahf sub inc rclb loope inc cmp mov orl jge daa jnp addb mov pop pop mov push add push lret jae jg or cltd insb movsb or or cmp jnp add cmpsl dec cmp sub inc in xor mov inc or xor jge sbb inc ja pop lea aaa jge sub inc add jnp sub jne pop out and imul inc add jo dec dec lea arpl dec xor add push insl daa push loope and jg nop es jno ret inc jg xor inc jge push icebp inc outsl imul add pop pop dec outsw pop test xor inc pusha pop mulb dec test add pop fcoms dec mov add jp lds pop les xchg mov imul inc test jmp lods add inc imul add lret sub mov push add js or xadd inc sub cmp lret testl inc push lods jmp adc sub xchg jne (bad) pusha pop xor aaa incl pop jae arpl outsl sub imul mov outsl je jo bound add test mov inc adc mov cmpsl lock stos add js or pop insb pusha xchg (bad) xor pop sub mov cmovs enter lods xchg sbb add or fs pusha daa js xor xchg mov mov jecxz cmpb (bad) xor mov js movsb daa clc pop stos pusha enter adc nop or xchg dec movsb clc pop mov mov pop sysret in inc jle add sbbb and cmp add sysret and inc inc xchg sub pop pop enter and mov jnp or daa fsubrl inc pop push jno cmp mov ret sub jbe jp (bad) enter inc xor in nop pop int3 adc fldenv pop cmovbe push push aas cmp jnp pop out sbb popa pop mov bound fldenv fs and or aas shll movsb pop add leave pop loopne (bad) rcr xorl add dec sbb add ret adc and sbb pop outsb stos loop add or cmp or fdivs aam sub xchg adc (bad) pushf lock xchg enter sub sbb and (bad) mov xor dec pop adc pop ss sbb jae mov mov push aas js adc icebp inc push inc push and lock mov cmp sub inc enter repnz xor fs scas nop andb xor (bad) orl xor inc xchg mov xchg out cmp or add sub and adcb push mov out in xor mov xchg cmp fsubs fxtract cmp xor xchg or (bad) adc inc add popa sub inc repnz and add add cs cltd mov add xchg iret sub pop sbb xor cmp leave xchg xchg push xchg pusha inc xor sub or add nop enter cld mov or les lret and in leave push push sti notb pop sbb loopne inc lock pop mov cmp xchg mov inc and xorl nop mov addl test lods imul inc dec jecxz js sub and fxch and fisttp add mov jbe (bad) mov sbb rorl add pop push mov fwait sbb pop int pop cld idivl loop mov enter mov pop xchg inc add xchg push push and stos mov mov imul fcomi pop lds push fisubr pop int sub jb pop jbe or insb inc ja and xchg sub fistpl cmpsb xor outsl or gs outsl fs adc bound insb outsb sbb es jbe loopne pop je outsl test sbb push sbb imul pop jns bound jae push outsl jb jbe call jae add adc xchg xchg sbb pop and out ja adc mov cmpsb imul push fcomps sbb out popa push (bad) mov out push bound data16 in push loope xchg arpl mov add gs adc cmp and adc adc sbb mov sbb push add add cmpsb jae inc sub add or adc pop out sub or sbb add fwait or das push sbb or add push jmp pop adc push pop jae insb mov push pop pop pop jo xor rolb pop or pusha sub pusha addl pop mov inc shlb inc pop roll insb loopne push pop pop pop sarl push push pop cmp scas sbb pop cmp rolb push pop push sbb pop push sbb invd pop mov insb mov push lock pop push pop insb mov sbb push pop jecxz sub mov push sbb aas enter sbb fs and or maxps sbbl jg pop pop (bad) sbb cwtl xchg push pop ret or fcomps pop pop insb pop sub and or mov pop clc jg pop push or adc mov adcl pop xor (bad) (bad) fsubs or and and add (bad) orl jg pop pop or sbb xchg incl fsubs pop jp cmp aam fsubs or sub mov or mov lahf mov roll insb dec pop hlt jg pop pop mov push pop push push (bad) mov orl pop ss int3 or movhps cmp fild push inc pop in jg pop mov push sbb push pop pushf inc push sbb jle ds push sbb lcall pop outsb pop sbb pop mov xchg call sbb call pop xor ret roll popa pop and mov insb add addl loop pop pop sbb insb mov imul sbb ljmp sub jbe roll maxps or push inc cli js pop adc xchg push sbb jne xor roll gs and sbbl pop fsubs shr lcall sbb xor (bad) jge cmp or sub pop mov push xchg push sbb cli jmp shlb sbb inc pushl xor pusha pop xor (bad) inc push cmp or addl pop out or pop sbb xchg pusha orl pop fsubs rcl ljmp sub rorl ss lahf mov mov imul or pushl aaa aas push sbb pop daa jbe mov pop scas pandn or pop inc shlb pop pop pop sahf (bad) jg xor pusha pop aas pop fdivrp (bad) or das pop mov ret lahf popl dec pop incb shll xchg dec xchg sbb sbb leave xchg cltd sub dec fnstcw stc lds sbb movsl in xchg mov sbb sbb int mov sub dec xchg fs xchg ret mov sub xchg sbb stos sbb xchg jmp fistl sti dec xchg sub out sbb xchg xlat mov sub sub scas dec xchg sub fistpll (bad) jg lahf push pop out add dec pop movups add mov movaps mov fldl repnz add lcall push add ficomp arpl fs pusha aas add sbb pop push sbb fcoms add daa xchg enter out and pop push sbb test sbb xchg jae test aad pop jne add gs dec enter jb inc sbb jns loop and adc je fdivs sub push add arpl add sub out mov jecxz js outsl push pop incl lcall decl add aas (bad) outsb jg add mov dec decl mov push mov test jne add dec test add jnp xor push pop cmp add mov pop and add inc add push dec adc movb incl sub jmp dec inc test or pusha (bad) jns and cmpsb fild mov cld sbbl mov (bad) adc cmp adc mov inc pop mov sub mov iret mov mov mov mov pop ficompl fisubrl xor jle das rcr fsubp nop xor adc and mov pop adc add add inc add mov hlt cwtl mov (bad) push rol sub pop jnp sub pop jmp or adc pop adc add lds ret add dec inc mov push orl notl adc or adc adc and cmovno xor pusha orl pop cmpsl (bad) or pop fwait roll pop jo fbstp push sbb das xorb nop rcrl test add sahf pop (bad) movsb fsubs outsl cmpsl pop mov into pop test pop cmpsl notb nop cwtl or and mov ds pushf pop jnp pop mov mov cmp lods pop push jl daa pop pop ss roll adc hlt mov jge lcall mov repz push adc repz rorl pop outsl xorb loopne inc jmp pop jns leave mov pop fsubrl mov xor xor sbb or rcrb (bad) into add fs nop xchg add xchg das (bad) jo aas js xlat dec or and cmp sbb das add mov stos mov add mov mov mov lcall mov lcall lcall push cmpsb imul lcall jmp and das adc or hlt rcr loopne lcall lods push pop ret or sub pop gs pop mov push mov jg jl (bad) add cs adc sub scas addr16 popf adc loope dec xchg lock push push cmpsl push inc aas test add and mov flds or and or das mov xor fistl (bad) xor inc loopne dec dec insl add cmp ja daa roll repnz insl mov add add (bad) (bad) lcall js in push pop insb push push sbb ficompl dec aaa sub test add lcall mov xchg jo popa popa cmpb xlat into fstpt js add (bad) (bad) incl fsubrs shll or inc jl xor pop sbb mov adc or (bad) pushl cmpsb (bad) dec mov int clc cmp bound pop repz mov jl cmp (bad) fnsave xchg add pushf call (bad) sahf mov stos and maxps (bad) (bad) (bad) ljmp mov imul cmp cmp mov or (bad) (bad) (bad) jmp jp mov xchg jo (bad) shr out cli mov stos jbe lcall pop aaa faddl test (bad) std ret sarb jl stc lea mov adc (bad) cld mov adc (bad) lcall mov pop cmp dec ficomp repz cmp lcall notl test ljmp push and lcall ja aas and pop jge jo (bad) sti insl enter (bad) movsb fstps bound (bad) jg inc pop fdivrp lods sahf int3 pop bound xchg inc test xchg aaa out mov jmp (bad) (bad) (bad) (bad) fdiv popa adc ja insl mov pop sbb pop aad pop push pushf pop sbb aam push (bad) call call and sub jo or adc (bad) (bad) push movsl ret add adc addb mov cmp sti mov adc xchg or cs jge pushf lahf xchg add (bad) in pop imul cld mov in push cs aas cld mov mov push xchg (bad) (bad) lcall syscall mov pop inc out (bad) lcall push xor mov pop (bad) (bad) (bad) (bad) clc push sub push jnp cmp or in adc movsb pop jecxz sbb xchg call orps sbb sbb sub call (bad) (bad) decl xor rcr (bad) jno mov xor loope test cmp jecxz stos mov push adc in and xchg push das add repz jae jl (bad) (bad) jg push std jns sbb xor mov sbb ret sbb pushl (bad) call xchg pop cmp adc push mov mov adc ss (bad) (bad) (bad) (bad) clc arpl out cmp or dec pop xchg (bad) cmc or jecxz dec pop cmp (bad) fadd in cs (bad) (bad) ljmp pop lods jne jbe out cmp scas ret sub mov (bad) (bad) decl fmull dec cmp sbb loop jg push stc aas out sti outsb std pop push sbb cmpsl inc loopne movsl and inc lock lock lock loopne rolb fild fwait enter (bad) movsb sub xchg push mov push sbb fisubrl jnp xchg das std (bad) (bad) jge bound inc mov cmp push rolb ret push pop mov pusha adc das cld (bad) (bad) fistl pop fxtract cmp pop sbb xchg rcrb mov (bad) cmpsb xor (bad) (bad) pushl push cmp (bad) mov cltd mov mov out flds (bad) mov push cltd jmp les lret xchg jmp pop (bad) (bad) (bad) call inc lret fnstenv lret pop sub mov xchg dec ja lcall push xor sbb xlat or dec iret in pusha ss mov mov popf (bad) sub pushf (bad) (bad) ljmp cmc in inc and fst cmpsl addr16 js popa mov add es jmp xor dec jg lds ret sbb sbb push lret (bad) pushl es mov jmp cmpsb lock lcall shrb shlb push (bad) (bad) (bad) incl aaa push aas jp mov popf inc jbe enter sbb or xchg (bad) ja in stc (bad) (bad) mov ds scas leave aaa in repnz cltd fdivrs cmpb fs cltd rcr out mov testb nop jge scas mov in sub adc jle movsb int3 push cld lret (bad) jmp gs movsb adc push cwtl mov dec sub (bad) outsl rcrl add (bad) (bad) lcall sbb xchg fmulp jmp fidivrl fidivrl bound fstpl (bad) (bad) (bad) jmp movsl imul xchg jne cmp push imul sub imul ficom and in (bad) (bad) (bad) incl xchg mov arpl stc daa cwtl popa ss pushf test sbb (bad) mov ror aas (bad) (bad) (bad) fstl mov out negl ja jae leave (bad) (bad) (bad) dec cli (bad) test scas adc out add mov out rcl lcall ljmp fs jmp aam push and inc jno mov (bad) dec rcl mov call xor mov cmp cli out cmpsb addr16 jmp (bad) decl lcall add add in lahf mov push xor sub (bad) (bad) mov loope pop jmp push jge add jmp arpl push adc mov (bad) push xchg ret adc inc fildll (bad) (bad) call xchg cmp loopne rcrl jl mov jne jnp mov clc popa cli add or in push xchg jno cld push mov pop xor inc xchg mov call push imul rorl push hlt mov adc aas lock inc pop sub aad movsl mov xchg fistpl ficoml dec leave aam stc dec int pop push enter add (bad) cmp out jg test mov cmp out (bad) and (bad) (bad) pushl sbb or aaa jb lods fimull ss jbe movsl sbb add in (bad) (bad) (bad) pushl sbb jnp cmp (bad) scas insl jp lods inc jno rcll ss mov das lock xchg js inc jge in push test mov pop lods cli mov (bad) (bad) (bad) fmul ret xchg (bad) out adc sbb rclb (bad) sar (bad) push inc aad ja lds pop xlat cmc add cmp push mov cli (bad) inc out addr16 mov ljmp js dec (bad) (bad) call inc out adc cs push mov push inc lcall loop nop (bad) (bad) (bad) incl or sub mov lea js (bad) fisttp es cld cmc pusha mov jg (bad) fldt mov adc ret or cmc insl cmc pop mov (bad) (bad) jmp inc jge lods mov sub gs aam mov les test (bad) (bad) inc jp into mov add push int3 inc xlat bound and (bad) call popf mov (bad) (bad) (bad) out out sub mov cmc sbb sub shr sub mov xchg (bad) ljmp sub mov movsb fcomp xlat pop adc dec dec in jle jmp mov ljmp in mov jle xchg ljmp popf (bad) (bad) (bad) (bad) mov test or jbe aas xor in (bad) push outsl test (bad) sbb jge pop pushl clc call addr16 adc repnz add cmp fldt inc decl xlat jno mov cmp rcl ja fucomip mov in fdivr (bad) idiv rorb jne sarb mov push xchg pop pop xor xchg push incl loopne addl xor push (bad) or cmpsl and decl pop in test repz jae mulb flds ret ljmp test pop outsl nop xor lahf (bad) (bad) (bad) lcall repnz int sub adc dec fsts mov ret sti into fdivr (bad) (bad) (bad) jns mov push mov int scas jg mov pop rorb mov dec sub (bad) (bad) mov xor lcall (bad) fldl dec rcll or sbb (bad) (bad) jg sub xchg fcmove dec jg scas inc cmp (bad) dec cld mov and cmp mov std in cmpsb adc dec inc xchg (bad) sub or (bad) (bad) (bad) decl loop sub lods jecxz adc in dec test mov fisubl xchg xchg push xchg mov xor xor inc (bad) push dec and mov das jne mov jne xchg jge mov pop add pop or (bad) in outsl (bad) cmp fs pop adc cmpsb (bad) (bad) (bad) mov and mov and push xchg pusha cmp inc scas dec cmp je movsb div push pusha inc and and rcr xchg pop adc pop jne test sbb ss (bad) mov lahf mov sbb jmp sar fildll sti xor xchg push dec (bad) fildll rcr xchg scas mov adc push aaa lds dec jo sar (bad) (bad) call mov (bad) stc ss add in mov aad jo int outsl lods xchg fisttp mov adc or repnz mov divl das hlt pop fstp std mov das cmc imull lock leave mov sbb (bad) fdivrs ds pop inc ja xchg mov repz jmp stc movsb xorb dec stos jecxz (bad) pushl popf nop ds push inc mov out xchg mov out add xor (bad) (bad) jg xchg mov das jno mov jnp dec mov ds fstpt jge lods mov pop mov (bad) shrb sbb jg ds cmc mov les jmp mov cmp cmp cmpsl flds idivb mov (bad) ljmp in jne ss mov fldcw jp cmp repz insl add xchg xchg leave push (bad) (bad) decl fldcw aaa lret aaa lret (bad) out xor cmpsb dec dec test pop sarl mov addr16 dec (bad) outsl shl lcall lret mov stos (bad) in orb add cli xchg xor hlt push mov (bad) (bad) (bad) mov fcoms out xor sbb jecxz mull lahf dec cli xor sbb ljmp sub scas (bad) stos hlt jns inc es sbb outsl std jg mov adc jmp fsubrp inc push mov (bad) jecxz and dec pop mov or pop scas sarb sub mov aas pop pop subl (bad) jg (bad) hlt jnp sbb sahf stos mov adc call mov cwtl test sbb in mov repnz fldcw icebp add loope (bad) and pop pushf pop sti adc mov iret ja fcos (bad) (bad) incl cld ja pop (bad) xor mov repz fsubrs vpunpcklwd in cld (bad) incl pop xor loope add in je arpl (bad) decl rcll jno mov lods mov in or inc sbb push inc jecxz stos mov dec xchg shlb inc jb les lcall dec psrlw movl xor arpl inc aaa cli fucomip decl pop pop or mov or pmaxsw das cld fild mov fchs cld mov jo jge sbb pushl push bound mov enter insb int and mov adc ljmp ljmp lret sub dec mov sub pop mov or rcll push xchg roll into hlt fcomi out jno iret push mov dec adc (bad) out pop loop idivw dec ljmp cmp in jg (bad) decl iret sub sub dec int3 dec lods test dec xchg jns repnz push mov sbb sbb aam cli cli dec pop in (bad) (bad) jmp lds push mov inc adc sbb xor mov mov add sub lahf gs shrl or mov jg cmp incl insl sub lea shll cmp or ljmp loope inc push inc inc leave mov xor mov jmp int add aaa mov xor je scas ljmp in dec mov add push test rorl mov lods mov (bad) (bad) lcall inc sbb aad movsl mov (bad) lea pop loop adc outsl je mov (bad) call dec insl xchg sub int inc push mov test dec push lret pop jno aaa inc dec jno or idiv decl sti in pop outsb iret subl sti push dec sbb dec jne mov call lods decb add xor pop (bad) fsubrl ja les (bad) dec push xchg popf jno outsb lahf and and cli mov and push scas aam lcall test flds inc dec xchg push inc xchg int3 inc dec xor (bad) mov mov je test push loope inc dec cltd jmp fnstsw lret jb inc imul cmp lea mov outsl hlt incl xor or (bad) adc jbe adc pop fsubrl (bad) (bad) call add mov rcl outsb fildl popf or pop mov pop cld (bad) ljmp mov sahf mov mov xchg inc sub test cld (bad) call aad sbb jns call int3 mov jg outsl sbb (bad) (bad) loope jo jecxz jl gs bound jmp jns leave sub mov dec adc mov dec mov xor jp mov cmp (bad) and cmc push cs push push add incl aad idiv pop (bad) mov jo mul jg push decl test dec loop bound add add dec inc (bad) incl lcall rolb pop and (bad) pop into aam mov imulb (bad) (bad) incl mov (bad) inc and xchg pop pop mov jo inc inc jle dec xor outsl jmp bound jae outsb divps or or insb cld or xchg mov sub jecxz mov movsl add outsl enter dec in push pop (bad) push sbb call xchg or sbb mov leave adc dec (bad) mov aam pop xchg outsb imul adc xor test mov mov hlt gs rcll aad dec and paddq xchg cli (bad) (bad) or inc add (bad) mov mov test cmp push ljmp cmp idivl xchg xchg jo sub ret (bad) incl mov xchg fcomip ret push mov out into je enter cmp cwtl jecxz mov das icebp add pop cli js iret test cmp push pop pop (bad) (bad) (bad) ljmp cmp cmp or imull daa cmpsl jg jg out dec xor fstpl (bad) (bad) fucomip stc sub jbe fwait jle es cmpsb jne pop mov jbe out lcall js ja ret pop fwait sub popl dec out dec mov dec subl jae pop fidivrl aad mov loopne sbb int3 and daa rolb lahf mov pop les cmc push jmp and adc loopne ror aad call loope cmpl lret (bad) (bad) (bad) mov call push popa rcrl movsl aaa (bad) xor clc pusha mov (bad) shr mov and loope (bad) jg jmp movsb cmp jae outsb (bad) or add popa shl (bad) (bad) (bad) decl mov lea sar pop mov (bad) or mov mov fs pushl xchg and pop movsl mov dec outsb in aam pop sub mov (bad) into cwtl (bad) mov mov (bad) jg (bad) out jbe cli mov cmp mov and lahf inc pop cmp pop ljmp insl mov xor ret jno (bad) (bad) (bad) incl sbb shll ljmp test push fdivr pop cli jmp movl adc ret stos fcmove ret fwait cs adc pop xor out mov cmp pop push push or and xchg arpl std mov jns andb cmp jno call sar outsl imul call adc std jp outsl aad mov xor imul icebp cmc adc mov jecxz rolb pop xchg fistp add jecxz hlt lcall pushf (bad) imul sarb adc sbb (bad) call loop,pn or fdivrs fs mov pop aam clc rcl push fidiv (bad) lcall int xorb fiadd xor inc sbb cmp test shr inc dec xor add (bad) call incl hlt jle sub jle add cmp xchg inc sahf pop xchg out (bad) (bad) mov std xchg pop jl out cmp and dec dec lds jl xchg mov adc cmp in adc sub sub inc call mov inc mov dec dec ss fcmovnb sbb loopne arpl jg lcall mov add dec mov xchg call test push xchg push sub adc inc mov imul pusha dec js jo push or (bad) mov js dec rcll jecxz add test dec sub pop xorl cwtl mov xor shrl sbb in loope dec icebp daa pop push pop push cs insl or ljmp int test fisubl lcall mov ljmp ja xor xchg ficomp out mov test (bad) and adc and ds loop enter fs pop or pop push cwtl cmp jne cmp pop jge fsubrs jl sti popf out (bad) push pop (bad) cld add daa out lods das sbbl clc pop inc (bad) jne les jnp int lret out cld jmp mov dec movsl push and add mov arpl and stos or jmp (bad) (bad) (bad) pushl sub scas std aam cwtl sub ss mov out ss (bad) (bad) in jecxz insl aaa insb cmp push hlt add push js rorl aam jle mov fidivrl (bad) leave cmp push rorl push jg (bad) jmp mov (bad) (bad) fnop (bad) add scas push mov cmc dec mov inc pop xor pop adc ljmp pop (bad) int push mov dec xchg inc mov test jg mov out cmp les out push mov jecxz jmp xchg out cmp nop jge (bad) nop cmp fistl xchg sbb push xchg rcrl stc inc stos repz fdivp and push insb push insl mov pusha sarl popf (bad) decl inc loope mov mov fcompl ret inc inc repnz (bad) (bad) call sub subb cmc push mov xchg in ss sub addl cs rcl out inc rep cmp in mov add ffreep adc int ds dec pop loope mov push (bad) decl (bad) js mov mov adc icebp adc cli mov js mov lock mov (bad) clc (bad) (bad) (bad) decl push push adc dec test hlt pop loope jmp das das aad or jecxz divl rcl gs (bad) out call int sbb xchg lcall repz fistl fldcw cmp mov call jl aas out in jl cmovnp orl (bad) (bad) call or scas xchg loopne,pt pop sbb aaa lock outsb xchg daa loopne jg (bad) (bad) lret sbb sub insl jo iret lahf shrl les adc (bad) (bad) (bad) (bad) out stc or ja jg (bad) aam adc add fild imul jne loopne call xchg push xor ret ja insl fwait cmpsl ret push jle mull inc mov ret push push or inc mov xchg xchg add cs xor (bad) jg addr16 or ror push rcrb test dec inc sbb or fsts test hlt (bad) (bad) ljmp icebp push mov in (bad) jnp enter push xchg sub (bad) (bad) lcall cmpsl adc insl add sub cmp fdiv icebp fsubrl rcl stos xor inc inc mov push (bad) (bad) in lcall push xor mov popf icebp pop sahf ljmp outsl jecxz test (bad) (bad) inc sub cmc movsl sub pop gs insb push ss xor xchg (bad) or jle decl pop and jp and scas inc daa out add (bad) (bad) (bad) mov or daa inc icebp xchg in jbe popa dec dec and test xchg mov xchg es push xlat mov push insb mov (bad) (bad) incl and mov dec leave mov in add sub or jle (bad) xchg repnz dec mov loope dec dec enter call xchg mov scas xor test sub addb (bad) (bad) jg inc cli or ret shrl icebp sti jg,pn mov pushl daa dec inc inc aad sub fs or push movsl (bad) jb call push roll stc mov (bad) jmp outsl xchg (bad) enter repnz pushf jl mov leave scas in jb fsubrs jge jp (bad) (bad) (bad) call hlt cmp ds jnp imul lea push insl cli cs mov xchg mov imul jge fdivrl mov mov in pop loop xchg cmp lds (bad) jg (bad) ja out (bad) mov aaa es xchg adc (bad) jg pop lods movsl lods mov pop dec adc adc rol orl pushl (bad) (bad) stc xor xor enter inc lahf xor int loop,pn and psubsb ja in (bad) (bad) dec lahf fs jnp xor daa fucomip sti jnp jle in jae nopl dec and (bad) lcall push and cmp shl into xchg sarl mov jnp,pn adc xchg leave cmpsb (bad) (bad) (bad) incl mov mov movsl push imul jp xchg dec jns in adc jo cs lret lret (bad) (bad) lcall bsf mov in test jb popa jmp ljmp scas out popf (bad) aaa (bad) call pop jnp jg mov gs sub call bound fs jle mov neg insl jae push out sub sbb add push lret (bad) (bad) (bad) fistpll mov dec pop xor lds push push lret insb daa ljmp ss outsl (bad) lcall fimul inc call mov cmp xchg pop mov sbb (bad) (bad) aas sbb jnp in jmp fs mov pop call pop out mov xchg xchg je call out nop imull insl call insl movsl push (bad) push test jg push jb jl xchg mov cmp inc ds mov mov inc into push dec pop js push jecxz into data16 cmp lea xor out jmp adc popf rolb out (bad) mov rcll xor dec jo push push movsb xchg jno fist incl (bad) call inc or pop push jno outsb inc mov pop mov (bad) lcall std cld hlt jae in nop movsb enter lock mov cltd jbe in cltd xor mov out push pushf loop dec xlat or xor adc clc sbb fisttp clc jmp shrl lods je leave mov das xor (bad) (bad) (bad) push rclb mov push loopne mov or mov out dec loop adc shlb roll lods stc std inc mov (bad) pushl or push pop lds or pop sahf or cmp arpl (bad) (bad) mov pop pushf out popl adc dec adc sub rcll (bad) fildll ret jmp xchg add cwtl test inc popf test mov xlat ret (bad) pop pop (bad) (bad) fstpt iret ret ja mov pop sub mov adc lahf fwait (bad) (bad) call (bad) mov sub xor jno jbe xor fmull sbbl call in loopne loopne pusha lods call cmpsl dec ljmp mov and xchg or rorb (bad) dec (bad) jmp add push push xchg jg loope adcl xor adc mov pusha or (bad) mov les push adc stos or inc rcrb inc fdiv aad sub (bad) pop testb inc mov stos mov out xor sahf lcall incl cli adc add cli mov stos scas dec inc dec pop leave sub mov (bad) (bad) (bad) lcall dec (bad) lods repz outsb pop std ss nop push movsl jle out dec fs dec mulb push bound movsb sub jp xchg lds or pop rcrl push pop imul (bad) mov pop lods (bad) mov mov dec jecxz mov sbb ljmp hlt incl pop cmp sbb (bad) xor test cmc sbb jno,pn dec stos xor inc fwait les lret sbb pop insl icebp (bad) leave mov sbb cld pop out xchg mov (bad) (bad) pushl pop cmp cmp enter loope subl ret dec fwait adc fdivr (bad) call sub leave pop clc fist adc test test ret cmpps cltd insl gs dec (bad) lret and push insb pop int3 pop cmpsl fcomps ljmp xchg mov in dec ss mov in pop negb pop data16 mov push in (bad) mov fsubrl dec (bad) dec jmp mov cmpl xchg pop jg inc adc or and rcr push les int jg fildl cwtl dec shlb call cmpsb jmp fdivr add jmp mov add fdivl aad add adc aam add jmp (bad) repz and cmpsb or add mov pusha push pop mov adc adc jg jge mov sti mov inc mov adc adc cmpsb pusha subb adc call push add orb adc add add push add jg and sub jge inc adc (bad) jg pushl orb (bad) les adc mov pop pop jmp and add adc int3 clc bound push xchg cmpsb xor insl fidivrl lods dec lcall or inc mov lock dec push add xor mov xor or xor inc idivl into xor call or jae data16 mov ret (bad) push adc shlb test adc lahf decl in int3 rep dec ds mov jl push jno mov cmpsl pusha mov lcall adc lods enter int3 lds pushl (bad) out xchg dec repz cmpsl cltd push push xchg icebp pop sbb out scas mov mov (bad) (bad) cmp in arpl jp or mov cli (bad) int3 decb cmc add aam test das ja jp lds fstpl (bad) (bad) ljmp enter cmp repnz pop sbb xor cs popa dec and (bad) (bad) (bad) jmp popa add mov cwtl push lods dec push sbb jg mov clc (bad) (bad) jmp mov lods andl push cld pusha fcomps add xchg das fcmovb cmpl loopne mov inc test adc ror xor data16 xchg add sbb cmc sbb push fimull test shl sbb cmc xchg (bad) xor ljmp cwtl sti or fildll faddl sub jg das pop out adc (bad) lcall cmp mov mov push pop pop addr16 adc (bad) (bad) call imul ljmp ret clc lahf add ja,pt (bad) fisttp (bad) fcmovnu cmp inc inc cmc (bad) (bad) (bad) mov jg mov ja (bad) icebp lahf pop loop xchg in jbe jbe leave out xchg insb popf mov pushl mov fwait outsb jmp inc fs mov inc and ja (bad) (bad) (bad) jg xor inc enter popa popf add stos scas nop dec mov enter mov in outsb hlt sbb (bad) lcall es mov enter and dec jb sub mov sti call xlat jle mov dec mov dec imul (bad) call jg xchg in or fidiv inc ret dec xchg call fsin push xchg pushf (bad) (bad) (bad) (bad) std les test imul pop cmp xchg cmp cvtpi2ps xchg repz (bad) (bad) pushl sbb xor mov xchg cmpl pop sbb mov (bad) mov pop movsl aas daa (bad) jno (bad) jnp (bad) aaa mov lds add rcll or incl cli in cmpsl jge lret ss lods lret lret fstps pop (bad) (bad) (bad) ljmp loope sub cli cmpl (bad) cli mov xchg dec out jbe addr16 jg mov pop insl cmpsb loop cmp addr16 dec mov or (bad) decl sahf popa dec xor mov push add std xchg add aaa jmp in aam insl xchg mov insb xorl xchg mov mov pop loopne push inc or popa loop notb pop lahf (bad) and fdivr (bad) (bad) jmp imul jl arpl sbb mov ror fs jmp dec insb push (bad) (bad) (bad) inc sub inc gs mov addr16 or sti in inc aas add and sbb mov ds jns (bad) je aam jge repz dec (bad) (bad) (bad) ljmp inc adc sbb std push lods jecxz inc jno (bad) xor inc cmc or outsl hlt (bad) call fsincos and or sub cmpsb push or (bad) ljmp int popl out outsb or inc fsubl mov (bad) (bad) decl adc xchg daa inc imul dec fisttpl inc push mov call jbe push sbb pop add xchg ficoml adc bound mov sub daa sar (bad) (bad) (bad) decb stos movsb add inc test xor dec cld and push jmp cmc jmp push inc inc stos cmp das (bad) adc mov outsb mov (bad) lcall jge hlt inc fcmovnu mov add jg cmp and pop and aad jmp insb aam xor cmp xchg pop xchg push mov or pop jnp bound xor add pop push in pop aaa (bad) jg popa dec sbb sbb sub jb pop pop jl (bad) (bad) lret jae fdivrl sbb (bad) decl mov fistl cli adc repz xchg xchg shlb roll sub jmp xchg cwtl push mov aaa clc pushl or xchg fnstsw imul xorl fcoml push scas outsb addr16 dec hlt dec mov data16 fcmovbe dec cld call or sub inc jg test jns sub or mov test jne int3 enter outsl cs add aas mov push adc inc mov adc and mov add dec push mov dec jnp aaa pushf push cmp and (bad) (bad) ljmp pusha pusha mov push xchg and jmp pop push fwait mov aaa mov and lcall xor pushf outsb pusha inc je xchg (bad) rol scas jmp lea push imul (bad) imul (bad) xchg mov push jo push or test jmp (bad) push mov or push repnz inc cmp ret inc push dec inc mov sub (bad) (bad) fild inc int sub ss sbb xor mov (bad) (bad) (bad) jle cltd shll sub in adc or cmpl insb sbb jg (bad) (bad) jnp push pop ret xchg add outsb test fs (bad) repz mov cmp (bad) inc push js out push popf out lahf sub mov dec inc jno into mov or pop fwait dec cmp (bad) jg pop cltd or lret es andl add adc pop aas imul lea (bad) or cs outsl sbb xlat ss pop mov lahf into pop mov push pop mull (bad) inc outsl leave jp cmc lds lock sbb jge xlat push ljmp cmc jl (bad) xor adc rclb sub cltd cli (bad) call pop sbb fadds ss or inc daa sub cli push mov icebp lds mov call call pushl mov paddsw cmp stos out sub mov lds (bad) mov js push scas sbb dec jae imul xorl les aam or push pop stc add cwtl xor sub jmp addr16 in mov cli shld jbe ds out jp adc or adc ja into jp pop and call (bad) (bad) pushl sub mov pop or repnz nop lret mov xor dec icebp (bad) lcall mov (bad) xchg xor xchg dec popf mov push pop mov pop mov gs dec addl mov (bad) (bad) (bad) decl insl pop xor fst shlb or shr sarl test mov dec mov dec add mov das enter (bad) incl in lods jge das mov aam lds or push dec jp mov imul cmc icebp mov clc iret add in insb or daa jp xor inc pop mov (bad) incl inc (bad) jl mov (bad) aaa mov icebp push jge inc or jbe dec mov cmp sti adc mov lods push cmp (bad) (bad) (bad) decl and lcall leave repnz rorl ds cld cli push cmpsb or out adc (bad) das std movsb fcompl mov lcall rolb push push std (bad) in pushl xchg cmpsb xor inc dec (bad) dec aam mov daa sub (bad) (bad) (bad) ljmp cld mov dec ds xchg (bad) (bad) jne das push cmp mov push cmp or fbld ret dec outsb lcall jecxz ljmp jle cltd mov push xchg popa cmp scas xor sub (bad) ja push mov rolb out cmp xchg mov out and cwtl mov or or icebp xchg mov inc cs test (bad) (bad) pushl in out lret negb imul pop mov ds lcall jg data16 lret fcomps jo in sub mov pop jno stos dec (bad) (bad) (bad) jmp pop pop pop pop mov in mov cmpsl pop ret adc and ds dec and pushl push stos cmp jg repz add mov xor jmp (bad) lcall jbe bound xor mov or sub incl jmp mov push in mov les lods popa adc dec (bad) incl dec sbb scas adc andl cmc sub or (bad) jmp and add push sbb sub cli mov sar ljmp rorl cmpsl lcall cltd xchg and sti (bad) mov mov and movsl sub stos or mov add or (bad) jg pushf insb pop pop inc cmp sub or mov mov aaa fs (bad) (bad) push jp jl mov inc xor sbb lahf sub iret push sub rcll shlb fwait push (bad) call fbstp inc jecxz jb mov xchg jbe rorb jecxz cmpsb adc ficomp repnz or push mov pusha incl (bad) (bad) jge scas into xchg mov call mov fimull mov lods (bad) jg cmc out into inc pusha lret rcrl ror mov dec mov pop cld (bad) (bad) (bad) xor int mov es sahf bound je xchg add mov loopne jp and cmp jl outsl cmp pushl cli (bad) adc ja jb cwtl push xchg scas mov jmp inc or mov lods cmc inc push mov incl rclb fimull jmp and pop or leave aad jo dec roll cld roll (bad) (bad) (bad) pushl sub aas scas inc mov ss cmpsb cmpsl push (bad) (bad) lods into or pusha stos test (bad) (bad) call cmc (bad) ljmp mov push fnstsw xlat pop inc add cmc nop iret movsl push (bad) (bad) decl inc test xchg cmp inc scas cmpsl popa stc inc jl imul (bad) mov jno (bad) (bad) (bad) fcoml jne dec push mov sub mov and cwtl and dec jae leave cmpsl pop adc decl mov (bad) pop ficomp xor jbe ds cmovno add cmpl (bad) sbb dec sub or (bad) (bad) jg scas stos pop sub subl push push or sub dec and jmp jne pop cs dec inc mov jae scas push mov inc movsl jg xor fstpl add out inc and rclb inc jecxz push jecxz (bad) sbb sti (bad) (bad) call sbb add mov lcall shll xchg mov div or pop inc xor mov mov mov jg decl add je jmp icebp popf push sti std ret shlb (bad) mov scas pushf jo imul mov mov orl test push mov mov push pushf mov sbb aaa xchg add jo or pushl in aam lar sti or idivb and sar test pop or add jb (bad) lcall push push xchg or adc lret inc inc sahf inc ret bound sub inc pushl push sbb (bad) incl push mov cli xchg xor test jb jecxz lods (bad) pushl dec xor jnp push jae roll repz das lock fisub rorl xor loopne xchg fistpll push aas or pop lcall fcmovne pop lds call test xor lods dec insb out stos ss fidiv sbbb (bad) (bad) (bad) incl rcll outsl stos leave sub dec sahf mov xchg xchg mov and incl jl and cmc adc adc jecxz push test cmpsl (bad) (bad) mov sarl push jb lret mov push hlt lcall add push jb lret aad test jl and (bad) (bad) ljmp sbb loopne jb inc sbb inc and call mov es aad (bad) call jg or adcl mov add aas ljmp mov int3 and fs mov es test push mov jl fsubl adc or fwait sub fisubl (bad) lock test (bad) pushl lret addb mov jl push dec inc test (bad) (bad) call (bad) jle lds push xor fidivrl jecxz arpl pop adc (bad) (bad) mov scas inc push mov fcomp (bad) or fs ljmp (bad) (bad) pushl push dec fwait and in sbb clc or dec inc push test stos iret mov pop xor aam push movsl (bad) (bad) inc push mov aam cmp scas push mov leave pop aaa fsubrp (bad) aas aas adc lahf subb addl push lcall in fwait sub mov xchg in les gs aam orl loopne repnz sbb sbb cmp in xor clc jmp pop je push test mov sub repz popf (bad) lcall mov dec inc in stc sahf cmpsl and test (bad) (bad) lcall jnp stos mov adc popa in sub and cld adc jmp mov pop cmp cwtl ficomp movsl push insb push or jge mov and repnz (bad) lcall outsb add das dec cmp mov loope call sub nop lock fild cld (bad) jmp (bad) es pop test bound pop insb mov (bad) in (bad) notl jo aas dec push pop adc add xor rcll sub pop xchg jge fld in cwtl sub cmc fucomip mov adc mov dec or out cmc and (bad) (bad) mov push scas mov mov fsubrs jp inc push push inc sahf jle pop std inc mov dec sub imul jle popl or (bad) mov cmp test inc je lea xor pushl mov incl sub adc pop aad (bad) jb jns clc push (bad) call mov bound xchg pop xor cmp in je pop jge sub xlat cmpsb rclb (bad) es push add scas lea xor mov outsl into test lock jns inc xchg js jp pushf mov jnp stos (bad) call push mov add mov test scas adc fucomip outsl pop xchg pop dec pop sbbb ret in push sbb push repnz mov jmp xor repz faddl enter jg jg xor cmpsl ja in fbld jb lds lea iret imul ljmp imul in cli int3 mov lods (bad) lods mov fstl pop mov (bad) (bad) ljmp or rclb mov lods xor adc cmp inc (bad) xor cld xchg sarb cs mov dec xor (bad) (bad) (bad) mov (bad) add or or cli mov sub popf rcl mov loope cmpl repnz xchg jb mov xor jno (bad) (bad) jmp mov mov dec insl mov rcr test inc mov lcall add push (bad) sub sbb inc add stos pusha icebp outsb nop rorb pop outsb pop jb test cld movsl inc out lods stos sahf inc inc je hlt mov mov insl test (bad) pop clc out and push aam loop push jmp das lock mov shl xchg ret mov jae adc lds dec adc and clc or repz mov (bad) ljmp pop lfs popa mov or es add (bad) cld (bad) jg jmp xchg lahf cmp (bad) pop adcl pushf push jmp pushf cwtl (bad) mov gs or push movsl (bad) out xor mov push lea (bad) sar ljmp aam lahf aam xchg arpl xchg jno xor inc dec add xor xor out je (bad) inc xorl aam das xchg cmp pop mov jb sub popf lahf call movsl (bad) into inc out push test push mov pop push sub add outsl cld (bad) fildll pop leave sub xchg xchg ret sub cmp cmp jg (bad) lcall das pop stos cmp out jb mov ds xchg push lock (bad) (bad) call lock addb adc sub xchg lret (bad) xchg jl test dec std pop cli repz (bad) aad outsb push std std fsub mov clc (bad) (bad) mov push xchg inc dec xor and lds les (bad) (bad) pushl add fsubrs pop lds xchg ficoml sbb sub stos sub xor ret xor mov mov imul (bad) (bad) decl and sarb lods (bad) cltd pop sbb stos sub push mov bound pop cld xchg sti mov xchg lcall bts sub or nop movsl cmp jmp sbb jo mov movsb clc ret inc pop xchg call (bad) fbld jp es popf nop sbbl jne loop push (bad) (bad) fisttp cmpsb push cmpl cmp mov mov stos (bad) (bad) (bad) incl lcall je lea or popf outsl mov pusha jb xchg xchg mov pushl clc int repz bound sub fs jge das cmpsb cmp (bad) jg enter xor enter mov out adc mov sub (bad) mov aaa out sbb mov add sti arpl and (bad) (bad) decl outsl and xor xchg dec outsl sub movsb lret pop jmp pop dec xchg push pop ret inc pushl fnsave xor mov fldt or pop insb (bad) dec loope (bad) (bad) (bad) incl xor mov jns test stos jge jp xor (bad) idiv (bad) (bad) push std mov xchg jo xchg fcmovu push ficoml adc dec aaa out repz fdivp dec js cmp cld decl gs xchg mov mov cmc add jb jb adc lock adc xor dec adc mov cmp into imul lods (bad) movsl (bad) (bad) (bad) decl insl (bad) xchg cmp lods mov push push push jl push iret jmp push (bad) std jg pushl inc pop lret push sub negb aam push sub jmp clc fwait js aam xchg pop ljmp in fstpt (bad) les dec add out push inc cld scas ficomp jns cli (bad) (bad) push je sub pusha fist mov lahf mov jmp rcr adc sub dec out movsl in fldenv sub movb (bad) incl ds lock movl fnstcw jg push stos xor or decl jle inc scas push adc loopne fmuls icebp rcrl jbe cmc dec jle hlt aaa mov movsb adc (bad) jg call sarl nop mov imul data16 imul imul cmpl pop shrb stos mov ret jp imul (bad) (bad) (bad) lcall xchg inc jbe mov push int3 stc dec jecxz jae test das outsb xor insb mov inc (bad) (bad) call lods test mov jb ret xor xchg leave adc ret or pop (bad) (bad) jg inc cltd rorl mov pusha push scas xor shl add xchg insb fldl (bad) jmp xor pop loop stc ret mov aas rorl cmp inc lret in pop hlt loopne mov mov jp int and cmp decl fsubl bound and andl lcall jg jae push mov (bad) out cmp loop cmp sahf fwait out lea pop (bad) jg call sbb dec xor aam adc clc (bad) sarb leave ss (bad) jg decl sti adc testl mov outsb jnp pop jb fistpll data16 lahf icebp sub xor mov jecxz xchg jns ret hlt jmp imul scas je nop sub mov (bad) in and jae pop xor add adc sbb and jo mov iret inc imul (bad) (bad) dec rcrl dec jp mov and fldl xor ret and rorb pushl mov fmull das adc ret (bad) jmp pop dec lcall mov aad or test sub jle lret and pop mov mov loopne sub insl mov xor clc (bad) (bad) jmp pop es cmp adc mov jmp popa xchg xchg lahf aaa incl sbb mov add sti fucomp push (bad) mov push ja cmpsb pop inc push xchg int jg ficompl subl or mov dec mov test ja sbb arpl scas cld (bad) incl je fwait insb cltd mov das repz lods jge adc lea adc (bad) lcall sbb ja sbb arpl out adcl idiv mov test (bad) in mov into lds xchg and (bad) ljmp cmp inc enter add sub push es mov repnz jae mov popf stc add push jp xor lea mov addr16 xor in xlat mov cmp fimul fisttp sub cltd clc dec fadds decl sbb pop (bad) insb inc dec xchg mov (bad) mov mov sbb cmp ja clc push (bad) (bad) call push or pop or cmpsl fisub push add (bad) mov pushf pop add ret rcl daa push mov imul (bad) icebp xor dec shlb xchg shlb jle mov lds mov lcall inc outsb push (bad) loopne cld out mov jno sbb jg (bad) in push xor aad jnp sub scas dec xor xchg lods lea mov mov mov fiaddl mov dec movsl cmp call push push push outsb xor (bad) pushl cli jecxz mov inc movsl adc inc mov or lcall jno push cli dec dec dec push mov mov xor xor and (bad) mov adc mov out cmp les out cs (bad) xchg (bad) (bad) push push mov cltd (bad) ds lahf (bad) daa loopne or dec sbb imul adc rcll inc (bad) jle xor sub push mov add lock fcomi xor in mov test (bad) decl mov fild inc jae xlat fisubl inc ret jge stos test addr16 xchg decl xchg insl jl loopne jb jae push dec mov push cmpsb inc jg mov or jns jae mov inc mov mov sar decl push aad (bad) lcall xchg sub ja jmp lods mov push sar and or mov call pop repnz inc jns insb outsl repz (bad) fisttp inc aaa add and loopne ljmp or mov (bad) (bad) decl jnp push insb insl dec leave pop jle iret jge xor mov xor daa sahf push js dec insl std aaa out lahf iret stos xlat aas mov xor (bad) ljmp cld sbb out add testb cmp aas cmpsl push push ret adc (bad) push scas scas dec fisttpll jmp aaa cmp jb and mov je fisub stos fidivl sti pop ds (bad) (bad) incl ret pop and cmc repz aad fsubrs cmpsl cmp push movsb (bad) (bad) (bad) (bad) fcoml add lods add clc push adc int push push jmp iret inc ljmp lock push data16 in mov mov inc mov icebp xchg clc incl dec adc fimul xor (bad) (bad) (bad) mov push jbe ja bound std ds sbb inc jp movsl and xlat sbb pop sti mov xor or mov inc mov jecxz sub add xchg shl sahf xor pop adc (bad) call out jne xor popl pop jge cmc or dec xor mov and int mov mov inc outsl test mov or lods test stc pop and aaa lret ret (bad) mov sub fstps dec scas je sbb les push sti mov lods (bad) sbb cmp les push sbb cmp cmpsl cmp je dec (bad) negb dec std mov jnp push in (bad) jbe lds (bad) call cld ja fcmovnbe (bad) cmp dec xchg (bad) jecxz pusha jge fidivrl push mov test or and (bad) (bad) lcall jnp shlb leave mov or mov stos bts pop and ljmp insb cmp jecxz xchg jo movsl push (bad) incl (bad) cmc popa mov push cmpsl dec xchg mov jl jg dec iret or inc stos das inc or xor (bad) mov sbb ror or test mov stos loopne sti movsl ss cmp rcrb push pop dec cli loop (bad) loop jg clc repz mov lea popa adc ret sbb and push xchg push lret imul (bad) (bad) incl es ror push inc xchg xor add (bad) (bad) (bad) mov sahf out lea test cmp push pop push fstl cmpsl test not (bad) ljmp cld pop inc (bad) inc hlt adc xchg push pop pop movsl out icebp loope and or cwtl cmp push cmp mov cmpsl in (bad) decl add and inc pop xor mov mov jb dec test (bad) lcall aad xor mov and fcmovb xchg out (bad) (bad) inc or lock fnstcw cmpl inc stos push sbb leave shr aaa clc (bad) jmp add xlat clc inc mov jmp mulb mov mov jecxz mov sti jae dec rorl or idiv ljmp addr16 repnz into cli cld rorb clc or (bad) (bad) fcmovnu imul bound data16 lret jge mov (bad) push mov jge test xchg nop xor (bad) shlb (bad) out (bad) and dec outsl test pop jle dec lret jg jmp pop dec faddl push dec into jmp sub mov push popa jno push mov seto and les cmp mov ret mov cld sbb repz cli test (bad) jle (bad) mull add lds xor addr16 js mov add andb xor cmp add test roll pusha sbb mov fcoml (bad) call and adc imul xlat shl das mov lock insl scas xor loope jmp dec jmp decl cld ljmp inc mov cmp ret add mov (bad) ljmp icebp dec cmp femms sti rcr iret imul std cmp outsb dec adc xor add (bad) fnstenv pusha cld or sbb push sbbl lods xlat mov bound xchg push (bad) lcall xlat push (bad) lcall push add repnz lds shll (bad) jle outsb insl stos cmpsl mov (bad) fnstsw (bad) in popf dec mov mov decl call mov out cmp or ret (bad) and and inc and mov cmp jg xlat (bad) (bad) jg mov test and ds into pop mov mov cmp ljmp push cmp pop add cmp or (bad) call decl stos loop cmp ja adc cmp cmpsb fsts xor (bad) das adcb lock dec pop mov pop in adc (bad) (bad) (bad) dec dec ficom mov (bad) cli push and adc repnz pop mov dec testb ja jl add cld (bad) cmp (bad) (bad) das std sbb xchg push mov jo leave pop imul (bad) (bad) (bad) lcall aaa sbbb aaa cmp lock test hlt js jg pushl int xor shl dec push imul xchg inc pop lahf mov jle sbb test js xchg into mov loopne pop push loope (bad) (bad) (bad) ljmp and mov out pop inc xchg lcall ss inc scas or lods xor ljmp icebp inc push imul xchg or mov jns stos jg bound decl adc cmp mov dec popa aaa xor inc (bad) jmp sbb fisubr std repnz andl push mov arpl std cmp sahf push pop insb pop pop pop push outsl ljmp mov xchg push lock push mov clc cmp loopne sub cli (bad) dec daa adc or push lcall insb out daa and (bad) push mov popf arpl dec test aaa pshufw mov add fmull sbb xlat xlat mov arpl inc mov (bad) nop mov adc ljmp xor jmp xor jge loopne ja push repnz and rcrl (bad) pushl outsl xchg lahf inc push inc pushf mov cmp popf cmp (bad) (bad) (bad) call imul push fcmovnb inc hlt push fisttp cs sti dec int3 shrl call push bound gs decl ljmp loop or mov mov and dec test aaa mov cmpsb imul mov pop pop mov mov (bad) jg pop lcall sbb (bad) imul scas jb cmpsb shr sub cld (bad) jg cs sbb insb rolb dec cmpsl inc pop lcall pop call and dec inc adc shr rclb mov pop sub dec js cwtl aaa mov fisttpl (bad) (bad) ffreep repnz mov sub xor sahf ficomp jmp mov (bad) (bad) incl cmp ret jae arpl mov arpl xchg xlat xchg xchg addr16 cmp incl push fcmovne pusha fcoml xor das push out cltd orl mov inc test mov aam ss jnp jp inc (bad) (bad) pushl cmc fidiv mov sub add adc push sar lods ss scas push add push imul bound ja mov mov (bad) fucomip jg adc les cmp icebp push cmp stos add loopne icebp sbb adc shrl pusha mov dec jns adc cmc inc sbb rcrb mov mov jg das jbe mov repz imul jns and (bad) adc (bad) lcall xor fmuls and fmul stc scas jbe lods or and (bad) (bad) xchg push add (bad) add (bad) rorl sbb lods shr or inc inc daa jbe xchg clc sar (bad) jp fisub in imul ror fs xchg pop aad ljmp mov scas movsl fwait pop popf mov cli fwait jg (bad) (bad) fstps sbb fstpl adc (bad) lea sbb jo (bad) (bad) decl jl adc in or dec dec movl in imul (bad) mov (bad) call subb xor fcoml dec test mov lret test pop push push add jns gs (bad) jg pop jnp cs mov push aaa adc das cmc push jno and dec ret daa daa xor mov pop (bad) (bad) (bad) lcall scas push nop xor data16 repz push xchg clc or mov add (bad) (bad) call call dec xchg lcall sbb mov inc mov pop lock inc (bad) (bad) and cmp cmp and icebp adc and (bad) mov and fcmovbe orb call mov pop (bad) mov movsl daa fldl sbb loopne cmpb stos adc (bad) (bad) mov mov lcall pusha mov imul xor (bad) stc xor inc jle les pop mov jbe pop pop out lret outsb (bad) mov lret movsl (bad) jg out sbb lea sub mov mov decb movsl adc sub mov mov lret jb (bad) lret rcl ret pop (bad) mov adc cmp dec fdivr (bad) ljmp add pusha sahf das mov sub cmpsb ss sahf enter mov and (bad) addr16 test mov mov or hlt xchg test pusha clc ret fdivrp xchg pop decl push jg sbb or inc mov cmc mov (bad) mov push cld mov xor movsb jns xchg inc dec adc (bad) mov hlt leave add push nop cs out js fidiv adc sub jns mov loop adc fidiv add sub cli adc jno stos jecxz jb xchg push mov idiv ljmp call or xor cmp dec inc out push dec push out sahf mov outsl std push out add pop jo (bad) aad mov call and push aam pop lea xchg cld adc loop (bad) pushf out (bad) xchg pop pop mov mov std pushl cli fsub sub mov pop pop fstpl leave outsl (bad) stos sub jge mov and insl sub sub jb frstor pushl clc (bad) jb shll sbb sub cmp (bad) dec push mov sbb pop fs mov or (bad) ljmp and call mov xchg mov mov xchg inc add mov inc sti adc add adc nop jge (bad) (bad) (bad) mov cmp std pop and mov (bad) adc cmc cmpsl xchg adc iret and push aas sbb cmc jecxz sub push jg cltd incl in decl inc xchg ror jne es test dec (bad) push fild aam dec ret xchg (bad) sub jg stc lcall pop test lcall pop dec mov cmp mov cmc ja add cld test (bad) jne cwtl cli and mov leave punpckhwd pop (bad) ljmp jb and mov (bad) rolb psrlw xor xor xlat adc push inc pushl xchg sub jl sub dec test (bad) mov or adc js (bad) decl mov rorb aas inc (bad) ret xor mov (bad) call negb add in stos cmpsl pushf outsb mov scas (bad) lret pop cli (bad) lcall leave sbb push mov xchg fildll pop (bad) (bad) (bad) dec ret push pushf xor push push int3 (bad) push mov mov cmpsb insb mov insb or push pop ljmp lea pop gs fcompl call sub xchg das and push incl lahf sarb push dec (bad) jae pop pop ds (bad) decl ds push pop mov shr scas ljmp scas (bad) (bad) (bad) lcall pushf add xor lds pop mov dec add jg (bad) movsl insl mov push std into rcrb ds icebp dec ss hlt (bad) rolb repz xor clc cwtl in cwtl in (bad) fucomip (bad) jmp jp adc xor cmp xor adc insb mov outsl (bad) pushl movsb outsl jae or in dec pop xchg lods fwait call dec shl or add arpl sbb aaa adc in repnz or xchg lds gs jecxz (bad) and popa movsl push loop shll push push int3 cli fs sbb js (bad) ljmp jg adc fistl shrb inc sti jno adc dec mov add lahf insl pop (bad) decl cld xor sbb (bad) lds lods rcrl (bad) mov (bad) out fistpl rcrl (bad) incl in iret pop das jo jmp cmp (bad) in insl mov jbe mov das hlt (bad) (bad) mov cld orl xchg xchg xor pusha cmp push lcall mov add cmp aas paddw nop (bad) inc dec mov lock and loope xchg into mov cli hlt adc fsubrs push sbb cmp (bad) pushl pop jno popa push adc push sbb icebp xor ljmp dec mov sbb push jo ror divl dec rcl (bad) (bad) (bad) (bad) fisttp jle clc pop or clc jge sti (bad) idivl das scas pop cmc pop cli ds (bad) (bad) ljmp mov xor insl fiaddl fisubr sub rcll inc (bad) incl mov inc xchg pop sbb je aas mov xchg test mulb or (bad) in cmp jno rcrb (bad) ljmp adc push outsl add dec cli je xchg adc cmc loop xchg jp push ljmp jg loop or aad add mov adc loop std decl imul out xlat push cwtl sbb cmp pop pop push push pop femms pop cmp fwait mov fadd add aas dec idiv or push orl inc (bad) jg ljmp mov sbb xor xor test (bad) je,pt (bad) roll (bad) cltd icebp insb outsl hlt sahf xor (bad) (bad) jg addl test ret and xchg jne sub std cmp mov (bad) pushl insb fs call das testb xor ret fnstsw ljmp movsl stos jle sub (bad) divl dec inc repnz pop (bad) mov or mov inc (bad) or xchg lods (bad) push call xor mov or fisttp decl cld pop shrb sub in dec jno sbb mov daa or mov call out inc mov in outsb mov ds mov pop push ret lea pop out mov xor (bad) incl mov fildl xor xlat inc stc fucom mov pop decl adc and mov (bad) (bad) incl ret jmp and mov ret mov (bad) jae daa decl pop fcomps or (bad) das pop lret cmp pop ret and cwtl sub stos sahf hlt jns inc fcomp xchg xchg xlat inc pushl adc stc loop mov or loop data16 mov sahf inc (bad) jg aam jb or mov mov and pushl (bad) incl push lcall mov push mov dec jecxz mov (bad) (bad) fucomip adc adc jg mov test jge jns cli adc (bad) (bad) lcall popf lods cmc dec dec mov mov mov out sti xchg jns aaa push iret or mov test lret fldt sub xchg movsl mov repnz or (bad) (bad) (bad) cmpsb xor add icebp pusha stos stos fwait adc jmp jle (bad) (bad) (bad) (bad) mov adc inc jae sub hlt or lock loopne or mov sub dec les sbb mov lea mov (bad) (bad) incl jmp nop or sbb sbb rcrb mov leave hlt or push pop (bad) pop xchg int3 or cmp push incl in cmp dec les aas xor xor and (bad) aaa cmp dec lods cmp int3 jb std pushl ljmp cwtl inc push inc stos sbb xor test mov aad jno fisttpl les jl mov dec cltd jns incl adc xor (bad) cmp jae push stc jge outsl out into sub inc je cmc (bad) call xchg or cmp push imul outsb popa vsubpd std roll clc hlt mov mov lcall enter arpl (bad) in adc ja cmp mov (bad) ljmp addb mov fimull mov (bad) (bad) inc loope pushf (bad) lret sbb or push mov adc sbb pushl cli and add mov enter out loopw dec xchg push dec cmp push test (bad) lods (bad) das add in sbb fs and rorb (bad) jmp jge push inc aad mov jno add lock ss sub (bad) fbld je dec inc jp rclb call fldl dec xor jo test sti arpl fistpll imul rcrl out ja cmp cmpsb lds lahf and jne adc mov loop xor call sub mov fsubrs incl mov fs push dec pop sub xchg imull cwtl repz pushl int3 mov xor pop ljmp lock (bad) xor push aad dec adc bound mov mov outsl icebp ror cmp cmpsl inc aad push inc (bad) pusha jp push mov pop sbb aaa xchg outsb jns pop cld mov dec stc repnz outsb (bad) jne icebp mov cld and adc stc mov sub mov inc xrelease outsb jno out or test (bad) (bad) jg xor pop jmp dec dec push cmc fstpt in sub fimul jo push rcrl js jmp jo ret jnp jmp lcall call stos xchg ja (bad) jbe xor cmp cmp inc (bad) jmp (bad) dec cltd or das sub xchg arpl adc (bad) (bad) (bad) decl lahf addr16 jb imul pop dec imul in xchg or out (bad) (bad) dec mov mov jnp in jge lcall push sar pop loopne in jae cmp sti and inc mov push decl mov jge mov clc mov push (bad) arpl test pop mov popa movsb sbb outsl icebp pop xchg adc fmuls dec arpl ret add sub xor nop mov std in add mov cwtl push cli jno jns mov (bad) push enter add xchg fdivs mov gs fisttp es das cmc (bad) incl sbb in dec dec jl adc xchg cmpsl int (bad) mov pop call arpl mov repz and (bad) lods push daa scas (bad) (bad) fistpl cltd lret and and xchg push jmp mov mov (bad) add pop sub dec getsec sbb mov jg fsubr pop push cmp lret and mov sub dec (bad) repnz (bad) ljmp icebp pushf cmpsb mov add sub fs dec jmp sub inc dec pop cli (bad) (bad) jns mov inc lods lods ret add add inc popa lods icebp faddp (bad) (bad) (bad) pushl inc and lods les inc and lods nop mov sbb (bad) (bad) jg jecxz and dec ror test call inc xchg dec xor loop test pop loopne (bad) xchg out movsl adc ja dec fwait (bad) int adc test lret dec decl decl push add push insb jle add inc sbb testl (bad) jae lcall sbb sub rcrb xor cli imul dec popa dec (bad) lcall std pop mov pop cmp js inc mov or inc fildll lock sub mov (bad) jg pushl adc in pop icebp dec push loope add mov inc adc jp pop and dec pop into push inc pop mov leave lret (bad) (bad) in sub sub adc int add dec add cmpsl or mov cmpsl scas jb incb dec fs stos sub lcall xchg add cmp inc dec ljmp pop sarl xor pop push (bad) (bad) (bad) xchg sbb mov pop mov mov pop pop sub mov mov jmp movsb ja push pop jnp mov pop rcr or add test std (bad) mov in push mov mov int sub mov jp mov add (bad) ljmp dec or jbe cmpsl test jp repnz pop addr16 fildl jmp mov out out ret jae sbb stc adc pusha dec iret icebp test (bad) call inc sub call je call pxor xlat cmp (bad) idiv (bad) jg lock in roll js imul mov (bad) cs xchg (bad) (bad) ljmp jl loopne loope jo pop cwtl pop (bad) enter jp xor fwait pusha ret (bad) ljmp push mov (bad) adc cmc (bad) lret dec imul repnz and incl jo jo xor and aas inc mov fnsave mov (bad) (bad) jmp mov fwait popa jl mov mov cmp jle xchg ljmp jmp add fisubrl call sar outsl icebp das sarl imul je pop pusha and insb imul add and cli xchg pop fmuls loope pop scas inc ret mov incl xchg jl popl lods jg or push mov dec pushl xchg xchg sub shrb (bad) (bad) mov mov and les int3 (bad) dec fsubl sub inc loope incb outsl imul jo jnp add pop pusha mov cmpsl mov std dec fsubrl sbb pop js mov inc pushf in dec cmp lea call test xchg aam cltd les popf in rorl mov jbe (bad) (bad) (bad) mov pop xchg loope mov not mov mov je xlat add jne stos aas das icebp das cmc ret (bad) or pushf (bad) fwait jecxz neg js xchg clc icebp or xchg push pop cmp int shrb pop cld rcrl xchg xor push xlat std lods push adc mov fcmove dec pop pop je pop test mov in mov (bad) call cli out and mov inc jecxz push push pop popf ds add pop lds jge decl or dec jecxz jp stos daa (bad) lods sub insl incl (bad) incl loopne clc repnz jecxz mov nop adc sub (bad) (bad) (bad) lcall test add es in mov xor mov aaa jecxz outsl maxps (bad) decl leave clc sbb (bad) push mov enter out jp (bad) (bad) decl out imul (bad) xor sahf scas xor mov pop or push sbb stc or inc jno push mov lahf cmp sbb mov sti jmp push (bad) jmp mov into mov (bad) (bad) mov lahf (bad) cmp pop mov adc xchg pop push stc sahf das rcrb cs adc (bad) (bad) (bad) lcall jl sti outsl adc popa lea xor inc mov add or jp pop inc lock cli (bad) icebp mov (bad) fstpl (bad) (bad) (bad) incl push jbe loopne pusha lret cmp jmp mov fwait dec hlt das mov inc ja add (bad) (bad) call xchg adc (bad) loop cmp stos rclb jae mov stos (bad) (bad) (bad) ljmp adc pushf aaa idivb dec andl mov pop repz mov hlt (bad) (bad) (bad) stc xchg je aaa push lods pop repz loop test jae out ret mov aam popf jmp out xchg cwtl ss xchg sub xor inc (bad) (bad) pushl movsb sarb inc ja mov dec dec scas out xlat fisub and inc mov and jge mov fs mov mov push incb pop mov jp out loop clc (bad) (bad) (bad) lcall les jge sbb aad mov and mov cmp push fst out push loope (bad) ljmp ljmp lds call popa dec (bad) (bad) das rcr bound test and call xlat out fcomps fist movsl inc or (bad) (bad) incl push push fdivs cmp rclb xchg push shrl clc xchg inc sub (bad) call cmc cmp cmc jg test (bad) xor lret addr16 jmp jmp (bad) pushl notl pop adc orl dec (bad) (bad) jmp lret mov mov jl or sahf xor sbb xchg mov (bad) push lods decb repz push mov pop sbb jecxz ret repnz fbld pop and (bad) (bad) inc add cmpl js mov jecxz mov testl lcall pop hlt inc adc cmpsb pop xor outsl cld idivl and mov mov dec outsb lock in push insl das mov mov nop sbb add push ljmp insb shr dec jae push cmc in enter mov lea jno dec pop js outsl into cwtl jp dec std out xchg into repnz jge add sbb mov enter das push mov adc ljmp cmp mov xchg out pop clc shr loope sub sub insb xchg cmp adc in fs (bad) (bad) jmp xchg test sub push jo add es mov adc xchg sbb cwtl pop addr16 (bad) (bad) (bad) out call push rclb push sbb in sbb inc xor les enter test adc arpl push outsl jp pop inc in (bad) arpl xchg nop fnop decl (bad) cld xor rcrl test pop and out pushf or pop cli sarl push faddl jmp mov mov pushf sbb mov pop (bad) call fidivl jle push pop inc repnz push jmp push sub sbb (bad) std and jl,pt push popa lahf mul ret pop jns jnp pop fcmovu jl xor call pushl sbb fdivr mov and dec or outsl cld decl mov cmp jnp or pop cld xchg sarb ds pop mov jecxz xchg sbb sub push dec pop push in test js rol jnp incl dec cwtl test in jp xor mov incl (bad) ljmp js xor xchg mov mov leave dec push mov fucomip jle pop push movsb insb sub mov push dec pop cs jg lea or imul out and ljmp adc rolb sbb aas out adc pop pusha pushl lea xchg cmpsb push add out out fisttp call push insl push fisttp nop mov inc lret rcll inc mov push clc mov sahf mov ljmp in pusha adc pop push adc inc jle inc cmc int and sub cld push movsl jnp popf cmp pop (bad) xchg into mov (bad) (bad) call xor mov xor (bad) cmpsl fmuls pop mov mov pop call inc fcomps enter jb jl pushf mov pop fwait mov ficom jo push mov pop call push mov cmpsb or pushf pop popa adc sti inc dec lods (bad) call pop call int3 hlt into (bad) pop negl xor test fwait dec sub add out cli lods add roll mov movsl jle add xlat pop int3 loop call aas push pushl xchg and adc cmp mov sub xor outsl (bad) (bad) ljmp popa mov cmp imul xlat sub sub sub ljmp lock xor loopne xchg leave jbe cmp das das add jnp adc daa (bad) rclb (bad) fnop (bad) mov and adc enter repnz test jg out inc pop les ljmp sahf pop xchg movsl lock pop (bad) (bad) (bad) (bad) jns movsl stos ret pop loopne mov and aaa imul dec int3 jno ljmp xchg cmp loop mov call (bad) ljmp subl lcall insb lods mov fisubrl (bad) loope decl and movsb stos ss mov lock mov leave ret dec cmp mov fucomip lcall outsl (bad) and xor or insb cmpsl nop ljmp call repnz test jg ja mov int scas dec fldl decl je lret aas cmpsb xor dec mov pushf andl cmc (bad) (bad) incl jge mov push frstor add (bad) (bad) ljmp in in dec push jb lock and aad mov in arpl lds adc (bad) jg incl xchg movsl xchg or jnp xchg inc pop sub push sbb addl ljmp jle or stc mov add rorl xor fs shll (bad) jns jne push push lea stos into sub aas cs hlt mov mov popa loopne aad cli outsl cmc repz loope outsl cli jle aaa std mov mov (bad) (bad) decl imul fild inc push and push mov lret push rolb mov fcoms out or decb or or cmp data16 (bad) (bad) jmp daa push pop (bad) jae inc hlt cmc nop push mov push js flds (bad) popf adc cld add das cmpsl outsl xchg (bad) ja js gs shrb sti outsl std pop call cmc cmp out push sbb enter (bad) push sbb or repnz pop or inc cld fs (bad) (bad) lcall (bad) mov push ror loop lock movsb imulb mov push std leave (bad) (bad) (bad) (bad) jmp jge hlt shld mov clc cmp fdivr mov decl xor adcb nop addr16 nop add fcmovnu sbb inc (bad) (bad) (bad) decl mov lahf push cwtl or ljmp fmuls adc push and aaa (bad) call std push jnp repnz je loope push add cmp jmp (bad) (bad) decl fcmovne jmp ficomp sub cmp xsaveopt (bad) stc idiv (bad) (bad) std add das push add jns adc dec add pop pop icebp scas ds mov leave or pop mov push fcompl cmp notl sahf mov std fild and sahf push into jg jg das (bad) mov out incb ret stos loopne pop (bad) (bad) incl addr16 mov jmp repz jne inc movsl xchg or pop loopne (bad) (bad) (bad) call fstpl jae and mov (bad) bound hlt in add stc aad shrl (bad) jecxz cmc jne or jns sub sti and ss decl cmpsl clc adc sub aas std test test mov xchg or (bad) mov pop mov in sbb fdivl ret (bad) jbe in lahf push jmp pop sahf in fbstp (bad) es (bad) jnp lods (bad) lcall (bad) (bad) (bad) jo mov pop pop push mov mov jg mov (bad) call lock (bad) mull lret bound adc lahf lock call cmpsb mov mov mov insl shrl add stc cwtl cmpsb stos or packssdw leave imul (bad) icebp dec sbb fbstp mov mov ret iret lcall aaa das clc imul sbb inc stc mov mov (bad) or mov xchg imul dec out incl cmp (bad) (bad) push xor (bad) call fbld adc xor add add sub pop xor add (bad) aad lcall xorl icebp jl dec cmpl inc out (bad) (bad) mov xor test inc ror js js push call not xchg add orl fsubr or jg pop mov mov faddl jmp lret add loopne inc inc (bad) outsl lock push outsl rorb (bad) jbe inc pusha mov cmpsb pop call decb or xchg sbb push das add cld dec (bad) fild ljmp jle test push mov jmp test xchg and pop (bad) js sar cwtl push pop (bad) (bad) mov push ja outsb add in push lock insl out fnstenv sbbl jecxz aam ss mov cmp adc jne xor icebp cmpsb insb or incl mov jle loopne les xchg mov mov push or pop fcoml aas inc (bad) call mov mov ret ss gs sbb mov cmp mov lods (bad) call push imul add add stos push mov andl pop loopne fstp lcall lret lds ljmp adc (bad) (bad) (bad) jmp sbb cmp movsl mov sbb lcall push mov std inc daa mov pop and push cmp xor (bad) mov ds fdivrp or sbbl int inc dec enter incl mov or inc sti or (bad) movsl mov clc dec test jno mov pop (bad) jmp mov cmpsb add xchg mov dec outsb ljmp dec pushl cli cli adc sbb cmp jno hlt push xchg cli decl cmp je sahf xchg mov into (bad) push (bad) aas xlat lahf lock add shll arpl ljmp fucomip (bad) call xor jle fldt jle enter in mov cld ret scas js or pop push sbb sub inc loopne in aas add insb daa sbb jge (bad) mov push lret rclb out push outsb insl insb lea decb pop push pop mov loop clc das lock fstpl (bad) sub jae (bad) iret dec scas adc (bad) fbstp or pop lret pop xor js in pop dec mov cwtl (bad) or jb loop (bad) (bad) jmp rcl or out iret icebp sbb cmp pushf rclb (bad) cld es (bad) (bad) (bad) mov iret clc jmp (bad) das lock popa xor xor and xchg out inc stc jmp incl push xchg lods push repnz cld lods (bad) mov sti and mov or jge adc add icebp dec add mov decl jmp or add push jo cmpl or push jo pushf pop pop in inc or pop fsubrl insl add mov cltd lods push movsl or cmpsl dec dec loopne (bad) outsl call pushl lret pop push or jnp imulb adc lret loopne subl inc outsl cld dec sbb push fmull repnz add pop jo sar dec das idivl mov out lret lahf pop jl test sarl lret fsubr inc hlt insb push (bad) (bad) call cmp adc cli stos call (bad) pop cmp dec out xlat dec mov pop std jne scas mov ficom loop fwait out int cs (bad) (bad) (bad) lcall sub xchg aam pop cli rorb scas pop jmp popf in lret jnp fnop (bad) fcmovnb jne sbb sahf mov mov shr out loop cmp xchg xchg add call mov sub ficomp stos jbe (bad) (bad) pushl inc sbb or jl pop lock into fcomps data16 ss (bad) (bad) call lds jp gs adc sub adc cmc ljmp js sub imul iret xor (bad) mov cwtl ja lret sti das jne push scas int3 data16 xchg xor add dec push (bad) (bad) jg dec sub mov test cld xchg pop loopne iret std sub mov pop clc in pushl clc mov loope add (bad) ret pop xor cld mov mov (bad) outsl fcmovb aas repz xchg inc incl xchg call jl mov (bad) jmp pop test stc mov add lret add ret loop cmpsb out xchg rorb mov cld pop repnz jg fistpll jmp sbbl aas decb cmp js sbb in clc mov les mov ja sub std cmp xlat clc pushl ss std sub rorl ds mov lahf (bad) in loope (bad) (bad) fild xchg (bad) in sti aad inc pop jnp xlat dec cld out dec ds mov addr16 jge (bad) mov push mov mov xchg push add sub (bad) mov fistpll jge (bad) (bad) (bad) decl cli sar pop mov clc shr xor clc das insl lahf jl pop sti pop aas incl cld fcomi ljmp push pop ja std sti mov popf mov pop stc cmovg les clc roll (bad) sub iret or (bad) (bad) mov pop or inc dec add xor loope mov icebp mov aaa aad sti dec test in or fmuls add dec mov (bad) mov and std mov push pushf dec pop sub cs repnz rorl movsl and (bad) (bad) jmp hlt pop push js rorl mov js loop jp shrl mov xchg shll mov cmc arpl pop lahf test pusha sbb and pushf add mov jmp pop lock push cmp gs pop fs or push in inc sub add and hlt jecxz lret int (bad) (bad) (bad) jmp and push mov xor cmp rclb pop das pop pop clc outsl cld xor xlat push in xor inc inc aam add mov test outsl sub pop inc cmp les int mov push (bad) mov mov test mov ss mov lcall imul cltd xchg mov mov (bad) repnz add fnstsw jg jle mov testl inc jle lcall jae cmpsl jbe loopne or push lds iret adc (bad) push outsl and aam ja lret xor insb fsubp sub or adc lcall std (bad) decl fwait or out test dec xchg or push int3 pop pop test outsl cli decl (bad) jne pop and mov lahf mov (bad) jno or sub fwait add (bad) mov out data16 (bad) (bad) incl leave mov sbb dec and outsb sub pop push pop pop push push push iret das icebp pop std cmc out inc flds mov and mov (bad) decl cmc cwtl loope int sub jge jle (bad) jle loopne xchg pop jmp fwait sub or push cmp push lcall push pop outsl aad xchg fidivr pop xor xor sbbb xorl out mov cmp ja inc test sub ds faddl lret int bound add xchg fidivrl ret std movsl mov into adc sub push add stos fwait adcb jns loop std lock cmc pushl mov jne notb or aad pop (bad) mov in sub sub or xor outsl cmpsb lds pop jo mov roll test sbb aam pop cs mov push inc incl sub rorb xor xor loopne lods jge and mov cld or cli nop hlt lds adc pushl xchg xchg insl push jecxz popa out adc orb icebp call fiaddl mov lods mov ljmp cld lcall add popa push sub call fwait pop lds shrb jmp push push jp pop or xor fs push scas outsl sbb ljmp or mov push popa lcall jmp mov test shr mov incl sbbl cwtl inc pusha orl pop pusha xchg or jp push ret (bad) decl xlat (bad) cmc cmp mov and push jns ficom cmp insb nop sar add xchg cld loop test fucomip ret adc jecxz mov push mov mov dec mov mov xor pop cmpsb mov cmc xchg or dec cli popa jg jle or je cs mov sarb movsl stc hlt stos pop sbb dec mov jp pop std fwait daa or int ss je mov pop scas std idiv add sbb fcompl outsb sbb sarl jo jge outsl bound fbld inc xchg ljmp jno (bad) mov mov insl repz cmp or cld jecxz repnz jl stc mov xchg pop (bad) jno es mov jg sbb rep and cmc outsl jne sbb (bad) (bad) (bad) (bad) (bad) xor clc fcomi inc ret cwtl idivb cmp xchg cmp mov (bad) (bad) (bad) jg cmp push dec out xchg rorb push mov call hlt lds sub push xchg push andl cmc out sub adc and cwtl stc or pop xchg or ljmp mov dec push lret aaa outsl xchg mov mov sbb (bad) decl pushf xor or insl hlt adc cmp push cmp inc cli sub lcall mov push popa minps sbb sbb jbe popa sub (bad) xchg fs (bad) (bad) dec pxor ret int3 popa push pop in lret into (bad) cwtl mov fwait mov sbb decl fisubr xor out movsl inc loop stos add lock (bad) mov int3 dec fwait sub insl fisttpl and icebp jmp cmp ljmp hlt jge jp or pop or jbe pop dec push fcomps adc clc xchg push jo sbb les pop adc pushl mov and adc pop add (bad) (bad) (bad) call xchg jle jae (bad) dec movsl inc jl stos pop lods xor in mov push rcr (bad) (bad) decl mov or daa (bad) idivb out popa pop mov push and pop lcall lcall ljmp in mov cmp xor cmp push dec add std add out sbb enter leave popa pop stos int mov sti (bad) (bad) pushl (bad) add test or mov sbb add in jg push (bad) (bad) out pusha and hlt adcl dec dec data16 mov call fbld add aad sub add mov mov add xlat and sbb (bad) (bad) call (bad) cwtl pop xchg dec sub rol xchg nop int3 iret sub pop sbb (bad) sarb inc push lret mov je cltd mov pusha pop imul loopne dec pop pusha inc xor std xchg je rcl (bad) mov lret mov pop ret imul xchg pop lock mov dec popa imul sbb or (bad) ljmp add inc repz movsb jb jbe cmpsb xor rorb std dec jns lds push (bad) cli mov push mov xor lret out adc mov and repnz add (bad) call aaa (bad) mov mov xor (bad) lods xchg jmp in in (bad) (bad) jge ljmp inc dec sbb pop mov lret jle (bad) (bad) inc mov dec ret push dec inc jg push cmp rcll stos xor std lea arpl ds out gs out pop cld (bad) pushl xor icebp cmpsl popf adc aas sbbl push repz sub inc leave into (bad) xor call mov lcall push test out xchg jg das stos mov test ss push lret ljmp jg (bad) mov scas sub out or clc ja aaa cli (bad) fisttp mov push xchg jmp mov pop xchg (bad) decl call leave inc mov xchg fsqrt jno jns mov sub jecxz mov out pop cld pop pop dec out mov lcall pop mov ljmp (bad) mov jecxz cld jg ljmp fimull (bad) lock mov push (bad) ja (bad) aad push dec xchg outsl jecxz (bad) fildll shl nop popa dec repz push lret sbb xchg aaa inc sub movsb pop fisubr cmc movsl lea aaa jecxz lds loop js pushl pop clc push ja gs stos dec int jmp aad cs aaa rcll push aad incl aas mov (bad) xlat jo shl stos xor pop mov jg imulb loopne cld mov or jle movsl pop rclb (bad) push jnp lret incl (bad) or (bad) mov shld jg add (bad) (bad) jmp xor cmpsb cmc sbbl jecxz cmpsb pop sub or jg (bad) (bad) dec pmulhw dec nop stc ds xor jmp xlat sub jnp mov (bad) pop ljmp sub popa jo sbb mov ljmp loopne mov push pop add call test (bad) enter sbb push lahf add mov loop cld int3 adc or into cwtl cld cmc adcb xor mov sarl xchg gs or ficoml mov das cmp (bad) rcr js scas dec jnp xor outsl cli call cli mov add repnz xchg ret outsl lahf mov push (bad) (bad) call sub aaa add jne push movl xor outsl cmc push lock notb jg xchg pop pop call cltd or push das arpl outsl push (bad) (bad) mov cmp in add jno fimull into sahf or pop jle icebp (bad) jmp jae adc stos sti bound out call sti sar arpl stos lock lahf cmc or nop push sbb cltd cmp (bad) fucomip and add stos leave sti (bad) jno lds (bad) jg and ror jmp or (bad) lods ljmp incl mov lret hlt mov jg (bad) push (bad) test lahf jo ret and lock cmpl daa or test data16 jnp sahf and aad (bad) (bad) (bad) jg sub push mov bound imul out cltd repz fistpll and mov and cmp jno mov mulb adc out std (bad) (bad) lcall jae cmp (bad) mov xchg and rcrb repz cmp (bad) (bad) fistp insl push arpl inc pop arpl cs lods pop pop (bad) cmp and stc cmpsb in sub pop pop enter cld sar pop cld mov adc inc cvttps2pi rcll mov add xchg mov loope ret mov cmp (bad) fdecstp fcos xchg clc (bad) out fsts jg adc xchg mov int3 (bad) fs in outsl add push test test out (bad) (bad) push jae int3 pop push pop mulb mov pop cli mov out aam adc sub (bad) jg xor bound negl inc ret add xchg adc fildll std decl xchg push adc jecxz or les sbb ljmp mov fstpl dec xor cmp ret (bad) fbstp imul pop icebp mov pop jl mov test (bad) (bad) jg or cmp mov xchg add pushf sub mov xchg xor aaa lret pop in mov pop lret fldcw adc dec dec xor (bad) (bad) decl aam jne mov loop inc cmp mov rcll popf mov shl jp fisub (bad) ljmp adc movnti push hlt xchg popa add ljmp push jle nop or (bad) jns add push sar sub test es (bad) incl data16 decb pop adc ret clc (bad) (bad) jg fldenv or mov add adc mov in inc mov call push pop inc jg es mov (bad) (bad) pushl out mov es add jle xchg loopne js (bad) sbb hlt incl outsl rcll xchg lods and cmp cli xor inc cli (bad) (bad) jmp sarl jle ret sub push fstpl pop aas xchg roll lret ds jp adc jbe sub cmp sahf (bad) (bad) (bad) (bad) pop adc mov les aam push andl data16 incl jmp push sub aam inc inc mov and mov (bad) fbld pop xchg xor or rolb (bad) (bad) jmp xor (bad) into testb std add mov sarl ljmp or adc mov out or cmp (bad) (bad) lcall fistpl jge stos inc push push add loope js fimul subl call movsb cmp arpl jmp or pop xchg sbb sbb ljmp decl adc or pop dec adc bound in movsl test lods (bad) test (bad) (bad) (bad) push xchg pop scas lret mov push sbb mull int3 xchg mov push ret push icebp out std pop cli jle lret or into rcll cld mov fcomp arpl lds (bad) mov (bad) (bad) jg ss (bad) aam jne push cmp lret shlb hlt mov call cmpsl push lods mov push sbb (bad) sub (bad) lcall inc jge flds or mul test loope stc push sahf int lock xchg das in jns (bad) div mov testb (bad) (bad) (bad) mov ret mov mov pop sub inc test jmp inc movsb sti ljmp inc cld insb jg aas lret aas loop repnz clc and or xlat push jo xchg sar (bad) (bad) (bad) ss adc and mov insb je in sub std (bad) mov pop sbb or xchg sbb or push ljmp fnsave xor outsb movsb fistpl push sub inc inc std or pop push leave lods je pop rorl (bad) (bad) (bad) call mov lcall xchg sub push cs lret push inc xchg push fcmovnbe lcall (bad) jne,pt std cmpsb lcall jnp jmp and and fdivr push sub cmp je imul test jl (bad) (bad) call in push fldt lea pop jl test mov xchg incl lcall mov (bad) cmpsl mov jno mov jecxz js and pop sbb cmp inc ret (bad) (bad) mov jbe jbe faddl imul sbb shrb cli ss dec aas mov jbe xchg (bad) (bad) (bad) pushl fs insb aaa mov mov test movl idivb (bad) clc fcomip mov cmp fmull and mov xor push cmp fnstsw ljmp mov mov sarl xchg les inc pop mov call push (bad) xchg jns dec in cmp int3 cmc adc mov (bad) (bad) (bad) jmp dec and jmp jae int3 xchg add add addr16 pop lods xchg sub cld sub push pop mov shr arpl pop jge xlat dec (bad) mov aad mov stos outsb aam or inc mov (bad) (bad) mov inc adc ja dec inc push and inc push mov dec dec dec pusha stos (bad) mov sub xchg jo mov aam adc mov (bad) (bad) jg shr push sub aad cltd or fsubs xor in pop xor test mov mov (bad) std mov lods add scas (bad) sqrtps cmp daa xchg inc icebp ror divl (bad) mov and xor cs das push lcall outsl outsl insl insb popa das push jae js outsb je imul jo,pn jae (bad) out shrb inc xor test aaa push push dec push push pop and push or in push das xor or cmp push js,pn sub push pushf outsb outsb out add or push push lret sub (bad) fnsave dec outsl jp insb xchg xor pop xor cmp push add (bad) imul or add jbe jbe and sub inc aam ljmp mov adc bound outsb jmp fnsave push xor push or and jg xchg das xor inc arpl mov cmpb popa outsb popa jp push sub jae add xor push lahf je sub pop divps insl test sub into movb jo imul in pop jae adc sub sub inc ljmp or push dec sub sub in pop fstpt or aaa sub aaa inc pop inc sbb push lods lock popf mov mov (bad) jbe scas int3 jb and add test mov mov (bad) ja sbb add cld test mov and and in dec pop and push and je (bad) mov dec das jns push adc and sub insl mov xchg imul inc jae jae ds lea and xchg and xor aaa leave mov sub cmp fistl lds jae push pop imul out sub je mov push aaa adc test adc and sahf or and jo insb sub imul daa add (bad) aaa mov add add mul jo outsl jns push stos mov leave test lahf shll jae popa pop arpl insl inc fs ds push pop imul pop mov sahf in add add cmp stos push push movsb adcb cmpl popw insl sbb and pop jae rcrb add jno jns (bad) std push mov jo fs addr16 mov imul test inc outsb cmp bound push psubsw ja fcmovu add mov cmc adc ret xchg dec lea jbe faddl mov push inc push push sub lcall pop aas xchg xor ja push out mov les (bad) hlt push xor jg jmp mov push movsb mov aad mov incl dec mov mov sub nop adc (bad) (bad) pushl repz test ficompl jmp (bad) mov hlt movl pop lcall imul in leave mov add insb push mov pop ljmp or adc and jb (bad) (bad) (bad) jmp shl add aam dec std test movsl cli test xor (bad) leave mov (bad) (bad) (bad) mov xor fild or shrl cmp ficom push xlat enter decl hlt mov and iret shld sub mov pop mov or and or dec push sarl mov inc fdivl jno add aad mov inc (bad) (bad) lcall mov push movsl in lahf xor mov js stc (bad) (bad) ljmp test xchg sbb push sub insb fs add cli das cld jmp hlt push imul insb sbb xor dec lahf repnz xchg push insb jnp add (bad) pushl je or (bad) fnstenv adc mov test lcall fistp ficoml gs aam pop popa mov into sub mov test (bad) mov movsl fisttp xchg fsubs lcall (bad) rcl hlt (bad) shrl imul mov sarb (bad) (bad) ljmp add pop dec or cmp add daa adc or and mov push mov int3 or mov popa into push stc ficomp leave fldcw and cmc pushl mov orl shlb mov (bad) pushl mov lcall ljmp fildl push fdivl or test fs ds or or push in decl xchg daa scas stos mov or jge xchg (bad) shlb add inc push imul inc adc ss sbb push imul aam loopne mov pop lcall ficoml int3 dec ffree fistpll cmpsl mov call aad mov call xchg rcll fdivrs push repnz addr16 lcall addr16 mov aas dec ss sub (bad) jg or jp inc ret out pusha fist addr16 mov jns imul mov mov outsl and xchg ja int3 add mov das es pushl and cmp mov pop mov add mov cmpsl call xchg (bad) (bad) inc xor (bad) mov sahf fldcw ret es pushf mov ljmp cmc insl add push jmp addr16 jb push add adc mov loop sub xor xchg or (bad) ljmp out fdivrl or rcl xchg aam clc mov push int icebp call sarl mov ja mov out jecxz (bad) mov dec cmp pop or adc sahf gs scas (bad) clc sar imul (bad) (bad) jg push js or push addl mov cmp cmpsl notl pusha rorb imul xchg dec push scas fcompl fldenv fild incl jg push scas mov fidivr mov jmp aam xor mov push cmpsb mov sarb (bad) (bad) dec sub push mov jp mov dec popa les sbb xchg sub aaa mov or add add sub or jmp mov jbe insb and xor mov mov lock fsubrs pop pop inc sub rolb stos addb add add test stos stos fs sbb xor dec inc push push push and xchg stos fs push push push xor dec inc push xchg add add mov test fiaddl adc adc add sub or rcll dec in inc adc dec pop add mov or adc mov sbb or push xor xor add inc dec push sbb dec das add inc ljmp xlat add sarl mov js shrl dec gs push add fldl jae movsb fnstenv mov es rcr adc adc aaa inc jne xor loope fistl dec jne gs inc or push sbb lods jo insl adc insb or fs pop or jbe outsl and mov inc pop bound mov push lds mov push adc and bound rorb cmovge sub adc ret lcall add jp daa push push inc mov jae push popa test mov loop dec outsl fistpl push dec inc dec inc push or imul adcb jbe or inc outsl mov imul add mov dec outsl jne mov adc and push pop jbe add pop inc loop inc add inc sbb sbb push or fildl dec adc push push push ss int3 and cmp pop (bad) or push lea push adc inc jns mov lods movsb nopl insb push add in jae push addr16 insl jg sub push or add je sbbl je pop mov sub sbb add jbe mov adc dec fisttp push fild or sub sbb jo xor or (bad) push outsb and outsl test sarb mov mov xor push in inc inc push popa shlb fnstsw pop shrl mov mov gs adc popf je (bad) rorl fs or push add lret pusha add jle outsl jbe cli notb fs stos sub nop/reserved sbb fstpt cmp push outsb insl or repz add data16 add jmp and sbb pop adc jo mov mov popa cmp push adc push in push and cmpsb mov (bad) cmp imul test outsb xor jge lds stos ss mov (bad) mov xor jb pop push leave aas xchg outsl jns or int add addr16 or sbb add or inc into or loope push and inc dec lods xor sbb push (bad) scas shl dec popa addr16 push sub dec pushf data16 pop add mov subl outsb je dec sub cmp dec or push insb jae push lock inc inc dec or inc inc orl xor mov mov xchg mov or mov les inc mov arpl test popa je cmp arpl divl ret adc xchg xchg movsb inc sahf mov mov jne lahf or add cmp push hlt xor mov cmp or and inc pop jo jo add inc call mov adc cmp and mov push imul mov jne or dec push add ret add test jne jb je adc std xor jb adc cwtl mov cmove inc push pop xor sbb arpl add add dec push and jg ja push push dec ret or sbb jne add or les sbb dec xorl adc in addr16 jns cmp mov xor in adc inc cwtl (bad) dec aas pop jae fcoml xchg pop mov sub popa and ljmp mov mov cmp int3 sbb or add test jmp xor sub jns jmp (bad) xor push jae jp faddl arpl inc outsb fs sbb or or divl ret cltd cmpsl jecxz and add inc in push inc pop mov inc cs mov cmpsb (bad) outsl jb or fsubs sbb or jo inc adc and and sahf push mov (bad) or lds aas scas or jno xchg pop imul adc push subb pusha sbb cmpsl outsl sub mov jbe int push jns pop adc or add mov ret clc fsts fs add outsl xor shlb out and xchg add lahf iret add adc int3 pop and loop push dec push scas fs mov adc mov out sbbl push add mov jb popa jns jne sbb or sub das or rcll lret adc insb mov jo imul pop loop sbb fidiv fcmove je aaa imul addr16 inc pop jg push js mov lret mov or push aam aad cmp cmp imul shrb data16 fstpl icebp (bad) aaa into arpl adc mov lock or jecxz pusha inc or mov arpl imul add or inc add adc add test xchg insl call add or sub push or push or insl push push mov or ret ljmp push push pop sti lock adc xorb adc and mov and push clc mov push jmp add add add xor add divb and cmovo adc inc cmp pop add add add (bad) sysret outsb (bad) test inc clc add add and pop add jbe or and add fbld inc pusha cs mov nop jecxz mov add fs adc sti add sti jo add jge popa or in inc stc bound pop daa rorb and and shlb idiv dec inc sbb std addr16 das or add add add incl add add add inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa jmp lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add add add addb add add add xor add add add sbb add add pop pusha add clc add add add clc add add push add pop add inc add push add dec add pop add dec add dec add add add add add add add add add add add add add add add add add add push add add add je jb imul inc add insb add dec add data16 add xor add add xor xor xor cmp xor xor bound xor add xor or add inc add insl add popa add jns dec add insl add add add dec add je add add inc add add pop add add add imul inc add jae arpl jb imul imul add add dec add je add add outsl add add jb bound outsl add jb add add add jbe imul add add add add imul push add jb jae imul add add add and xor add add and xor add add xor or add dec add je add outsb add insb add popa add add add outsb add add add inc add add dec add add add add popa add add jo jns jb imul je add inc add jo jns jb imul je and sub inc add add add add add add add add add or add dec add add insb add add add insl add jb imul add add add outsb add add add outsl add jo add add add add dec add imul outsb add insb add imul outsb add insl add add dec add dec add add add add push add outsl add add je dec add insl add add add dec add dec add add add add add jb outsl add add je push add jb jae imul add add and xor add add and xor add add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or add add add add pop add fldenv je add out add jl add repnz test cld add mov or add add adc add pushf add and add add sub add lods add aaa add mov add inc add mov add add add les pop add push add mov add add add add mov add add add mov add add add add add sbb add fisubl add add add add add add (bad) add add add adc add add add add add add or add xor add add add push dec inc dec xor cs dec dec add push inc push dec xor cs insb add pop push push xor cs insb add xor cs insb add inc inc push push xor cs insb add inc push push xor fs insb add arpl xor cs insb add inc dec dec xor cs insb add inc push xor cs insb add dec dec dec inc push cs insb add xor xor fs insb add push inc push dec xor cs insb add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add inc jb gs imul je jo outsb push je jb add add dec outsb imul add push jne fs jb popa je add inc gs outsl insl jo je jb bound arpl insl gs add push dec inc gs outsl insb fs popa je push add ja jo imul add je jb gs gs jo imul push push inc jb gs gs outsl jb add push add or add inc cmp (bad) (bad) call in push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call xorb push or packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret cmpl fstpt jle mov pop rcrb pop insl jnp sti mov movsbl adc adc adc sarb rcl or adc in in inc pop daa push or std scas pop or mov inc jmp jnp ret ja fdivr cmpl movl in (bad) bnd lea call (bad) jne push sbb cmovo sbb add add je or mov pop jmp fsubr jmp pop mov sub mov and sub out shrb (bad) call clc or push push insl sub jle cmpb pop xchg call fistl clc xchg dec or sti or cmp enter inc fimull push sti (bad) mov je or inc add (bad) cmp clc or add fmul push mov pop jne mov dec sub jnp mov sbb call or or jmp aas mov sub inc je cmp jae and dec jl,pn inc (bad) jmp inc int3 fistpl test cmpl sub mov daa cmpl jbe or add adc lahf pop xchg sbb les fcomps sar movsl pop movsb inc sahf xchg ret cmp and jb cmp mov (bad) cmp xor dec (bad) jbe sub sub jmp mov xor cmp fisttpl (bad) xor xlat movw idivb and mov push pop sbb push or pushl sbb jg fmuls in or mov mov lea mov pop mov stc out test add jae jae mov (bad) hlt push push jmp gs push pop push lret add sub mov lock inc push cmp test mov mov mov cmp push sahf or fidivl or sub mov mov mov add or mov sub popa adc cmpl dec mov dec or rorl adc sub fstpt mov push pop add (bad) and xor push mov sti fstpt add lret jl in fistpl inc rorl fisttpl xchg aad cmp sub push fadds nop push inc push fldcw int inc fdivrs cmp rol (bad) je hlt fisttpll cmpl xor mov mov mov je mov es mov xor push repnz or add negb repnz push fstpl or and add std (bad) jo cld mov sub and in mov imul lea push mov popf jecxz add cmpl rclb mov (bad) jle mov adc sbb add xchg out mov arpl gs mov std add adc xchg imul xor out (bad) lock clc sub cmp adc mov repz push add (bad) mov jbe movb adc inc out jae fstpl lea cmp lahf add fsubl ja jne mov mov (bad) fidivr adc rclb sub sbb add sbb jae add adc lods pop js mov jne mov imul mov insl cmp sub je pop in xor sub cmp sbb xor in incl push add xor jno cmpsb (bad) xor inc call scas mov jne xchg mov mov incl and or rol and loope dec cmp ret mov mov inc jle lea xchg out jne mov (bad) adc sarl cmp push xchg inc add cmp addr16 xor and mov adc cwtl push jp inc pushf mov lock ss jb add lock cs outsl pop adc (bad) cwtl mov or mov (bad) and pop aam or sub fsubrs mov fwait decl mov sti mov mov sub outsb pusha jp inc cmpsb xchg lods arpl mov (bad) xor scas mov mov xlat test adc pop mov adc mov xchg addl push mov ja mov and stc cmp and nop xchg mov sub xchg sbb inc adc test int3 xor mov scas inc sub cmpsb cli sub dec and cmc and jne and add (bad) mov mov add xor or movl push xchg jo cmp xor lods xchg roll xor mov jo sub sbb dec fistpll sbb lea cmp outsl scas add sbb add adc adc or gs add push dec add adc mov mov pop ret mov pop lods mov loop or mov jno je jbe cmp inc sbb add cmp and les jge xorl sbb mov jg ja inc xor push sub sbb add mov inc cmp in sub jo imul call or cmp sti mov cmp xlat jnp xor daa insl scas cld add pop xor iret xchg inc cmp jae in or cmp lcall les push inc cmp jl mov cs or or and jmp sbb in mov add add adc test ficomp inc in in and aaa cmp push pop jns adc cld aaa hlt xlat and cmp in lea push (bad) (bad) xor movsl fucomp addl jmp mov add aad ds mov add (bad) push dec std shr push fstl adc and nop mov mov das push or (bad) lcall ja inc cmp lea (bad) push jbe je stc inc or jl sub je or mov popa fbld mov pop or dec cmp idivl adc cli xor scas and mov fs fnop xor das fstpt fdivrl jae mov push adc mov add xor pop ret pop imul sbb mov adc rolb mov mov add xor sti roll xor pop ja push sbb pusha je and incl xor jbe data16 sbb inc or mov dec push dec sbb pop mov nop popa sbb inc fimul or sbb sbb or mov imul fisub mov js hlt sbb fimul add sbb cmp jl scas mov out std insb mov pop js adc aam stos movsl push dec int int3 pop push sub push sti (bad) aam push sub lea cmp cmp cmpsb pop lcall sbb add push stos rorl ret imul jne cmp test mov pop mov icebp outsl stos fnsave jp push push or or (bad) je out mov insb mov loope sub push outsb adc popa test xchg sub xor xorl push mov stos mov andl into pop clc es adc mov pop lret lock je (bad) stos push jns je add dec mov mov sbb sbb sti shrb mov push ss sti inc or icebp andl or addl mov or rcrb xor insl imul ficompl sub pop jmp sysexit jmp ds push or sub clc add icebp inc push or jge mov mov jns loopne jne pop std lock repz cmp loopne,pn add or div pop add cmp lock call sub sbb stc push inc lret jmp mov lock push lods mov jb hlt mov dec xor jae nop aam adc outsb jo adc pop mov inc sbb sbb fstps inc insl sbb adc mov pop inc or cmp or imul inc and add mov dec mov std aam mov hlt icebp pop and sbb add lret push fidivr data16 sti sub jle int3 mov repnz pop or test mov outsb rcll sub or test xor inc fadds iret rorl das inc cmpl sub rolb fidiv add jp add lcall xchg mov push pslld decb hlt jecxz data16 mov adc insl or push movsb (bad) adc lods bound push push push cld mov roll ja fisubr xor sbb add xor mov cmp sbb in hlt sbb mul in out sbb sbb push cmp or jo cmp hlt (bad) push sbb sar or inc call cltd in arpl xor mov or lock mov mov rcll mov stos jp jnp ret dec ljmp or xor iret sub mov push dec and push push push popa test mov rclb lcall inc test push push push jmp adc adc xor movb aam data16 fcom ljmp or test rcrl or lock dec mov ret jbe xor or mov aam rcl inc push push subl pop or push jmp cmp push mov push jne das or inc in hlt sbb push imul mov sbb sbb inc je cmp mov pop fstl je mov cmpl or pop jmp adc inc cld xor jmp es jecxz movsl insl inc lea lods jmp jns add pop pop (bad) mov fsubs testl sub and stos push hlt movb ret pop pop jle push idivb cmp je pusha loopne aaa add jbe mov lods fs sub aaa test sti sub mov sbbl adc mov push call les add and xchg sub push or mov pushf or test (bad) lea hlt push or xor and jbe mov push pop adc dec stos push xor pop pop inc mov adc (bad) les rcrl fsubr jno push inc (bad) or jle push and pop inc mov lock or push jle test add or cmpsb pop add (bad) imul fsubl fldl mov cmp test mulb mov jne int3 inc push inc mov clc push dec les inc mov inc push mov and mov mov dec xchg xchg cs stc inc or clc test aad mov jae push outsb mov (bad) xlat push push cmp in or test xchg push (bad) lods int (bad) jnp add dec lea dec sbb sbb ret mov loopne inc push sbb add or in pop mov clc cmp cwtl add mov or push xor add add jmp (bad) xor rorb js jbe rep cmp cmpsb ret es test mov add or jnp mov into push jnp mov jns pop pop adc sub jne and (bad) pop subb sub push and add hlt jmp out or mov daa mov dec jmp es sbb jl divb sub stc lcall mov aam cmp adc ds testb orl mov push mov dec pushf or (bad) leave loop lcall or add call add adc inc lods adc push mov push xlat xor mov (bad) out dec addl scas rorl pop stos aam aas aas sbb mov sbb hlt mov inc (bad) cld jp aad mov mov scas mov mov or fcmovnu pop nop or add aad (bad) (bad) (bad) fs add je push aam and test (bad) in das push pop mov jle jge pop movzbl inc jmp ja addl dec aaa add inc cmp pop mov unpckhps inc lea sbb add mov mov inc lea mov xchg add add mov pop cmpl mov mov ljmp inc mov inc push fnstenv or ret cmp jecxz sbb push pmulhrw fisttp xor xor cmp inc fisttpl add std cli add test mov or outsl mov cmp jae imul bnd cmp jbe test call or push mov mov mov sub mov cmp jne cmp jne cmp jb add jbe dec fcomip mov or or jbe add or xor mov inc pop xchg mov cmpsl push xor sbb dec mov sbb mov cwtl adc ja rclb test pop push mov and out and xchg sbb push int3 lods jle adc cmp icebp clc pusha sub pop repz fcoml call mov lcall add ja push jne pop stos adc cwtl xchg enter sbb in adc and (bad) cmp jne add jne test (bad) mov and add fwait in sbb inc push dec xor add rorb or adc push ss push inc or in inc rorb push and roll jne push call insl in mov or sbb cltd in push clc test icebp push push push push aas dec push cld imul or xor push jb cmp add faddl cwtl iret inc jo pushf sub pusha (bad) or pop in in (bad) icebp sbb xchg jae sbb mov lahf push rolb pop adcl push adc mov sbb loop mov ljmp sub pop sbb rolb dec enter fstpt fidiv push aad mov adc push dec je mov ss xchg jge imul lea loop mov cmp and add enter push cld add add push pushf pushl sbb rcrl mov shrl or inc loope outsb xor xor jmp jns xor and push insl mov push mulb xchg (bad) in or xchg adc mov mov mov lock test call xchg dec mov out jl jle cmp cmp pop pop jl scas cltd pop idiv lea sti sti push mov incl ljmp imul test jg outsl mov pop push clc cmp jl sbb sbb rclb sti jmp mov pop mov sub imul xor imul adc jle rol mov es lea je (bad) cmp pop or add test adc add nop hlt js fsts add popf addl dec outsb xchg rol mov xchg add mov mov adc pop xchg sbb sbb mov xlat xchg cmc inc sbb in popf or pushf adc add fldt jecxz xor cmp mov mov das mov shlb push movsl mov addb cs cmp cwtl add jbe cwtl and mov call xchg scas add or jo call pop pushf mov adc inc and aam push push xor cmp or test and mov sub jl mov mov jg xor gs lcall enter add cmp insb or pop pop out add movsl sbb lahf mov (bad) jbe aad dec add leave cmp push lret lret enter icebp add cs jle or sbb mov add mov ja roll jo in pop cld test test arpl push mov pop aam cmp (bad) mov movsl push leave sar xchg imul es inc jle or jo pop rcr xchg pop jb push push rcr imul jp push xchg in mov loop push xlat jge mov fisubrl daa sbb loopne jp mov inc add mov lahf or xchg xchg lea (bad) ja adc dec fwait lahf repz mov mov dec (bad) sub inc push movl push push dec xor push lea push loopne adc pop scas cmp jbe jecxz (bad) call (bad) lea es adc push sbb inc push adc add mov fcoml dec mov insl stos xor sub xor loopne ja sub je dec je add ja sbb or jmp or jecxz jmp (bad) push push cmp mov or fcomps shlb repz aam test lods mov jnp xchg (bad) mov and pop ja pop cld sbb inc rorb xor dec subb cld inc sbb push cs or and xor mov je pop dec adc or (bad) adc jne int3 jp inc or or xchg cmp sbb sub leave mov rorl aad sarb (bad) fstpt daa fwait (bad) insl addl xor jle insl add jl cwtl fistl add push sbb xlat (bad) pop pushf add inc push adc test mov and push push push adc das aam adc movsl negb or sub sbb stos movb push popl jo adc dec daa adc bound and mov rcrb movsb mov notb sbb fsubr adc jle les pop lods lahf mov pop aam pushl or mov es dec mov mov hlt gs adc mov (bad) scas adc mov push pusha xchg or imul cmp mov addl out pop xor sub mov std cmp loopne sbb cmp jb aad fadd dec cli sbb or dec push adcl pop or pop int push push xchg sti sub outsl dec bsr mov push mov lods sbb dec push cmp les xchg mov in mov mov add or fisub or (bad) std sbb in jl mov sti test dec int3 add push cmp or cmpsl ret fiaddl sub in push pop pop leave ret stos lock pusha sub lea mov or test or cli cmp jbe fs loopne mov pop les fcmovb pop push lea mov mov andl adc imul mov and push adc cmp adc aaa adc add cmp addb xlat jecxz sub movsb mov or es fwait mov add push push cmpsl add xchg jnp push mov or mov dec mov (bad) je push dec push and xchg push es sti add xor xlat pop xchg insb mov cmp xor aad adc (bad) adc cmp rorl (bad) int movsl xor pop xor daa orl lret dec push xchg int add pushf add dec and dec ja in mov mov dec lods aad mov and (bad) out popa loope outsb sub mov data16 sbb fnclex adc sbb dec and xchg push xchg xchg inc divl pushf sub call mov lret mov or addl andb sub fdiv mov fcomps jne,pn sub push add jnp ret cs fcomps sbb mov (bad) adc push push inc mov sar popa push jne aaa push adc loope xor add aaa inc and add and and push daa add scas adc pop icebp lods imulb (bad) sub add (bad) outsb pop push adc mov adc jns push es mov sbb jmp sub adc and mov push push pop sub adc str or pop or imul add mov or pop add inc loopne mov or (bad) out hlt or in push faddl adc cli lea test (bad) (bad) jmp jo imul lea xor cmpsl mov adc push cmp incb imul push cs sbb iret adc sbb jne,pt push aas ss or movb adc inc add jnp xor push xor pop xlat in pop push push es pop subb in jge (bad) jmp xlat data16 lea cmp xlat (bad) dec outsl mov das mov stos jb push xor or mov fmuls dec push adc push mov or or sub cli pop ja jge and jmp or and and popa or and subb clc mov and pop mov mov repnz enter pushl out or lret aam mov cli rcll pop jbe mov ret inc and fsubl push (bad) or and sbb outsb push mov in pop adc ret push bound mov pop (bad) fcmovne add dec and xor rolb mov xchg add rcl aam sub aad adc arpl push mov cmpl xchg push inc add and inc jne and ds or je cmpsl in insb syscall jne dec int3 (bad) int3 pop fs fmuls mov ret ljmp insl int3 add into or in pop sbb lock add or xchg or xchg push scas or lea jg mov push mov fcoml jle adc stc push push mov lret push test pop mov jbe mov add loopne and test in sub cmp mov mov mov pop mov cwtl add mov xor and outsb pop or adc push ja in add push push inc mov cmp and enter inc mov fdivrs dec movl sbb lcall fcomp out les (bad) lret cmp lcall mov or sbb mov loopne cmp pop jno (bad) fwait jo or cmp test mov mov add xor mov loopne or mov xor in add fsubs cmp (bad) mov or fiadd (bad) popa push ja pushf shld add movb jne dec mov inc out push pop jb pop pop test xorb add push mov sub jbe sbb bound sti mov add shlb shlb daa leave or mov pushf (bad) or jmp xor sub add adc push jmp push adc stos setno xchg pop dec or push std mov cmp push popa mov (bad) ljmp testl xlat aad add out clc jg and (bad) fcomp incl cmp jg cmp jne pop (bad) pop xchg fisttpl xor jmp sbb push sbb je out cwtl les or test push inc imul not sub push int ret add pop pop fsubrs (bad) icebp jl push mov je cmp jl sub dec and inc inc lods (bad) ja mov dec dec sahf push iret mov add adc pusha fcomps adc inc adc or ss outsb cmpl add sahf mov out add insl loop pop loopne push push sub iret adc (bad) adc roll ss sub movsb xor adc xor out in mov inc lret xor and push je cmp cmp in sbb repz inc push push inc fwait adc into cmpsb xor jl add ss ja,pt pop mov mov out mov sub cmp jle out (bad) pusha sub mov xor sub push cmp push sbb xor incb push cmp lods jle pop mov mulb je int3 xor sbb and andl cmp jl push jo mov fidivr mov sarl lea lea aaa cmp (bad) inc xchg xor add jne push add xor push push test adc push push (bad) lock or insl jge xor add and jno fadds pop add push or xor (bad) dec push or gs aaa lret adc mov mov adc out push mov or sub cltd adc mov xor movb jge fiadd and add xor cmpl push mov push loope dec aad pop call sbbl out pop mov inc icebp xchg cmp (bad) push or sbb (bad) fsubrp mov addb add cmp ja daa xor add scas add adc imul in and sbb imulb jge dec loopne sbbl sar lret lods lock xor add shl mov rorl hlt call test xchg push test sbb rclb adc mov push mov mov cmp jbe dec insl or mov sub rcll cmp jbe adc mov je or jbe or (bad) jl insl clc imul jl cmp (bad) decl pop mov mov mov mov jg inc lods mov mov xchg jg cmpl subl add jns jp inc adc push lds dec mov into stos hlt adc sub push add aam daa fldt sub mov add sub gs xchg dec jae push push or adc push test push ret dec cs mov test dec in jne pop insl ret inc or pop pop mov in in sub mov movzbl and pop push push pop jns pop pusha pop inc cmp fwait pop jmp aam mov std jmp data16 xlat dec cs xor cmp test add or and pop lar xchg mov mov add adc add sub imul orl pusha cmp hlt ret jmp xor and fsub or test sete vsqrtps mov push pop jno push mov ret xchg xor cmpb je cmp add movsl mov test call pop push fildll add or push test ja dec movswl xchg imul mov dec or faddl jl cmp (bad) mov imul nop outsl ja aad mov daa or cmp aas push jge or mov adc add cmp cmp fidiv dec fsts insl sbb add incb sarl push mov test test lea sbb adc fxch sar add push sbb fsubrl pop push das add sub mov mov jge cmp or aam or insl (bad) xchg jl sbb sbb xor test xchg dec enter repz je cli or inc or (bad) push sti sbb jne adc (bad) nop jbe pop lods stos lock je push inc inc ljmp cltd je cmpb fstps push out mov jecxz jl clc pushf test jne sti jmp xchg add jge js lahf cmp hlt mov add mov pop cmp jbe xchg lock or sbb decb bound or ljmp inc adc lods loopne fild jmp jne jnp fs mov fs aaa cmpb mov mov push adc dec sbb neg xlat jmp inc or inc cmp cmp mov inc loop rcl adc adc into cmp cmp sbb sub pop hlt jns (bad) test mov loope ret ret jl ret sbb cmp clc sub clc jne lods adc jge ret int mov lret popa jo ret inc test iret sub and dec mov or pop inc and mov jne push out push stc push enter mov push (bad) int push pop push sbb mov xor mov scas mov and pop or mov push or fadd mov sub sbb adc pop repz push mov add add add adc lea iret mov sub and js jns ja sub or test jae mov sbb mov scas xor or lahf sub cmp or xchg jmp ljmp or xchg and cmpsl movsl in pop push dec mov outsb in sub sbb (bad) sub jle adc adc and inc jbe fidiv adc pop add scas add out adc add jnp mov stos adc xor add bound divb mov jle je sub sub or add adcl push lret add pop inc add pop lea nop adc inc inc mov test jo or add jecxz and or call popa dec test xchg jae lds inc pop loope mov hlt mov mov lea insb push and lret dec and push sbb outsl cmp xor lock jp mov mov push pusha cs lods dec mov dec rorl adc call scas push (bad) in adc lods adc jle push pop adc push add jno cmp sbb in mov jmp adc jmp adc jne rclb hlt scas test jp hlt ja insb mov push cmpsb jl fst add (bad) push sahf pusha test sar rolb jmp xlat cmp jb inc adc ss cmp lcall mov cli and scas mov or pop (bad) dec mov xchg stc adc wrmsr insb mov pop pop or (bad) add push push scas in fcmovne insb fldt je add je (bad) in popa int lret adc addr16 mov insb jmp pop xchg ljmp inc in test and and pop mov int3 or mov mov xor decl out push roll sbb jg pop roll sbb add add mov mov jp pop cwtl jge jbe push mov xor outsl add lahf test call jne out jo inc mov jbe mov (bad) cmp and lret aam (bad) psrad incl cmp jb pop or add test ja add push sarb jo or in pusha or xchg lret cmp add mov fcmovbe push mov iret cmp fisub enter fcoml xor jae cmpsl push outsl pop sub add and xor mov mov jl dec insl xchg mov ficoml xor inc dec aam test ret mov dec inc popa jae xor (bad) inc sub adc in test cmpsl cmp add jmp ds jne and inc adc push mov mov jno and add lret icebp pop sub fs fadd ret xchg adc insb (bad) adc pop or mov and aam insl loop movsb sbb (bad) aad mov ja add push mov cmp or cmp inc mov cmp sbb ss pop pop pop pop jmp adc sbbb push adc (bad) fiaddl xor movsb and hlt pop pop sub in into pusha and or add cmpsb cmp add mov xor mov pushf out sbb and adc test das (bad) cmp mov add push xlat push inc jb aad int3 mov mov pop sahf xor dec insb push inc push xchg je add push add clc sahf push cmp push mov (bad) cmpsb fwait mov cmp cmp adc dec jae mov enter mov and and test xchg imul (bad) jge imul adc pop daa pop mov xchg aam cmp aam add and daa mov popa mov sbb ret inc adc sbb bsf (bad) mov pop mov je and (bad) jae ljmp jae aas shrb negl fnsave ss add adc jg mov sarl sbb jle movsl mov add xor stos mov add cltd sub push aad push push insb scas nop push (bad) roll and enter fidiv pop mov cmp sbb sub (bad) jmp lock inc stc xchg mov out lret pop pop jg ss mov pop mov flds xor or mov cmp cli stc add sbb sbb mov add ret mov push jg xor push or xor add daa mov inc mov jmp daa and push out jae test loope je sahf mov sbb into lret add sbb fisttpl call mov sub xor outsb sbb dec ret push push pop inc pop lock ljmp mov mov movb imul push add add in loop add mov inc xorb cmp pop pop cmp xchg mov push lea pop movl mov jbe push xor push inc mov outsb outsl xor mov mov add pop lods mov sub mov or mov (bad) xor or pop daa jbe mov incl movsb aam std scas (bad) ss nop pop subl push add push aam or add rcrl pushf or or xlat pop aaa and add lret (bad) add adc dec (bad) mov and mov lea or decl jne dec sbb lret cmp sbb or sbb cmp cmp inc dec arpl sbbl xlat popf xor add pop bound push rcl xchg repz lea pop orb pop mov aaa mov jmp push (bad) add popa in push hlt (bad) lea mov inc push adc jns add gs cmp and xor sub movb scas loop cmc inc adc sbb dec add test mov pusha cmp add or ljmp pusha jbe inc push negb movsb cmp cmc rcr pusha testb cltd loop fsubl push pop xor mov mov push xlat and mov push into xlat call out mov push jmp insl arpl mov or jb xchg xor popl data16 call inc int fistl dec cmpsb xchg push movsb jns insb cmp pop xor lea popf add push mov lret inc xor (bad) jmp adc add xchg mov es pop and add adc and sub (bad) (bad) mov js movsb adc sbb dec jl mov xchg jb add push call pop adc lods sbb mov fldl adc das add add dec add add sub js add loope loopne xchg and push push repnz sub fildl push test (bad) dec mov inc mov sbb push call sbb loopne jl sbb fmuls add cld add jnp (bad) push sbb jge xor mov mov sub jne push arpl fldenv and xor call mov out sti daa lcall movsb inc mov lcall push aad dec adc mov inc sbb jo sub mov fs sbb sbb sub loopne cmp jno lds jne push inc xlat push inc mov inc push popa dec push or cmpsl sbb popf mov adc dec dec dec jle jle lret rorb pop test cmc (bad) adc or out or mov cmp (bad) loope push xor push hlt loope aas or xchg add mov in add adc sub sbbl ljmp or or sub add ret mov arpl or outsl mov add (bad) mov mov lea mov fcoml dec inc adc out mov xor dec jp adc dec sbb inc mov inc loopne add cmp inc aaa (bad) or xor mov jmp pop inc push repnz pushf add (bad) and mov push add (bad) or addr16 aam gs mov adc adc les xor xor test popa hlt pop (bad) fnop mov sti and and push das jp jle sub pop add adc aad dec rcrb addr16 xchg add cmp mov push mov subl dec jl cld cld jbe mov stos jne cmp dec imul (bad) dec push cltd adc jle rcl xor xchg (bad) rolb cmp mov cs data16 data16 repnz loopne je add pop inc push cs (bad) scas aas push in call push in xchg (bad) leave mov call movsb dec jnp pop push sub xor stos xor rolw xchg inc (bad) jo xchg add add mov adc add andb fsubrl push add scas mov enter pop pusha call arpl push orl adc into adc nop mov xchg cmp sbb pop mov pop and push pop inc jge mov or (bad) popf and outsl insl add mov add mov xor mov bswap ret in push jo xchg mov idivb adc mov sbb scas movsl imul sbb sti (bad) jle subl rcrb insl adc pop cs or push and fadds mov add jo sbb inc lods and cli outsl cld push mov icebp jne cltd idiv mov imul adc cmp aas mov add lods in and xor jmp pop in or and ret mov loopne add js int3 movsb mov out pushf adc mov push push jmp data16 mov loopne test sahf push pop xor add jge lcall test lock sbb and adcl jne mov hlt push sub mov mov sar and push push xor in mov add xor adc pop mov (bad) sti ret popa mov mov mov or jne jle bound ret (bad) aad adc repnz lock push sbb mov or push sbb je daa mov loope add push test call out push inc xor cmc fadds and xchg sub inc add xchg xchg push pop jmp push mov or push push adc adc mov mov adc jecxz cmp jne lds cmp adc adc jle sbbl mov fcom xchg js cmp scas adc insb into (bad) nopl and push test in push mov add adc nop pop push adc mov add mov mov in adc in sbb das out push (bad) pop dec push loop cmp test sub aaa xor xchg inc cmp pop sarl je mov push sarb in jnp cmp jae lea sbb pop and lea or mov jecxz mov loopne inc and decl clc dec pop (bad) idivb lea mov (bad) xor mov popl mov mov fs in scas and cmp mov clc test (bad) jbe rcr mov cmp push add or sub add divl leave mov xchg dec bound inc fs sub push xor insb sub cmp xor add sbb dec por cmpsb scas push mov xor cli push mov jnp xchg dec aad mov mov mov rcl outsl and and enter jmp mov stos push subl jge jns ljmp in sbb incl cmp push push sub inc into jp push sbb mov xor je xor pusha xchg push sbb ret xchg icebp mov mov pop lea (bad) aad add cmp push mov xor stos sub call mov xor or ss add rclb xchg lcall pop and inc test inc out dec sbb xor add xor inc or fwait add adc sbb inc movzwl mov and jo sub ss add aaa add mov fwait clc jb jmp xchg jge push repz inc or and (bad) mov or ret xor je test pop adc inc inc push adc jno movsb ja pop xor sbbl jl cmp aam (bad) mov cs dec push push add xlat adc fcompl fs int3 pusha call gs add sbb add push sbb fwait add xchg jae adc dec pop addr16 push lods push dec xchg daa je mov or pop push lret push jl insb xor add mov and mov movsb out sbb push in out (bad) fdivrs out add mov (bad) pop jne or or decl ficom cmp mov orl add sbb sbb mov cmp add adc bound jo ljmp cmp inc push movsl clc sbb std mov test sub inc sub sub sbb in or (bad) xor jns inc cmpsb inc xchg sbb (bad) jmp xor loop cltd fcomps es inc cmp adc cli push jnp nop adc and (bad) shrb rcrb sbb orl (bad) scas inc mov ficompl xor aaa push ret and push dec inc dec pop or sbb sbb add mov sbb dec jp lahf lea cmc shlb mov lock add cmp add dec aad out je cmp sbb adc and add and inc jge fimul mov les (bad) pusha negl cltd add dec imul pusha lret pop add insl add in inc push movl in push pop mov xor cmp div imul pushl add adc xchg mov jnp aas mov ret pop outsb enter xor dec aam cmp pop hlt jmp fsubrs adc jle sub jge int push lock inc add push (bad) ss icebp xchg sub and push in movsl sbb sbb add or mov and jo add test adc js nop clc mov adc or add das jo or pop (bad) or jb push mov (bad) adc sub mov jmp test popf mov imul adc lods loop popa pop xor ss push cli vpsubsb add add fsubrl js sbb int3 jecxz imul push pop sub jnp mov inc mov or push xchg stc mov sub add ret mov dec sub in add add xchg dec pop in (bad) and testl sub dec aad inc dec sbb inc stc fisub fcomp test add xor push push inc pop adc cmp (bad) adc adc int add pushf push push outsb shrl mov inc (bad) push pop (bad) mov xor mov pusha or mov adc jg xchg loopne cmp mov cmp movsb sti ds push andb nop (bad) jne fs xchg dec cwtl rorl push pusha rclb dec js mov sbb mov mov or sbb rorl jno rorb pop sub out bound js add insb cmp adc icebp push jno aaa add ret push xchg sub dec mov mov cmp lcall mov or push icebp shll scas ss sub or fstpt insb mull sbb shlb sub pushf and inc and adc adc daa jl push outsb adc push adc data16 test fwait cmp call mov add jg inc ljmp xor in adcl pop sbb cmp push adc mov pop cmc add push ljmp scas call add stos mov xor jbe push pop popf jo clc and jno mov pushf or mov mov popf jo hlt out inc bsf popa lods add xchg pop or xor add mov inc cs call sub ret add test lss dec into cmp fs ret adc push add sub dec mov adc push and sub adc mulb movups or pop inc stc sub mov inc xchg inc sub adc sbb jo adc or sbb cmp arpl pop ss sbb in popf loop pop mov fsts dec outsb lock inc sub and movsb mov andl lods jmp or push out inc xchg test mov and push sbb lock pop icebp fistpll leave cmp or (bad) pop cmp add inc fisttp cmp jne sbb add clc adc mov push decl lret inc pop xor les sub shrl mov sbb dec sbb mov pop push inc push mov jg xlat fstpt test dec xor cwtl ljmp jno clc les jbe mov push mov (bad) popf jmp pop sbb add adc or lret dec inc mov pop add push xor or lret pop or ficoml (bad) divl ficomp vcvtps2pd mov dec in outsb sbb sbb cmp mov mov xor inc scas sbb dec mov bound mov push shrb (bad) hlt data16 fildll or hlt imul stc cmp adc test sbb (bad) mov shrb sbb cmp and frstor sub add hlt xor xchg inc jbe and aaa pop mov inc pushf sbb xor iret sub popa aas and push add fld (bad) fwait punpckhdq sbb add (bad) xchg or xor cmp sarb loop and roll jp push sahf jecxz sub lds loopne and push push in rcl cmp js or jo aad pop inc jo pop and sbb xchg push icebp sub sbb push rol add dec xor mov dec xor jne dec xor xor mov mov cmpsl nop mov orb cmp incl cld add xchg rorl mov cld scas push sbb fldl or pop pop (bad) jbe sbb xor (bad) out push or inc push and add push ja mov shrb movsl ret or addl cwtl movsb call xchg adc testl (bad) sbb mov xor or adcb insb mov jo dec pop call add jle inc mov inc inc inc iret and insb int rcr mov and fbstp shlb mov add mov std (bad) rolb inc cmp test push pop xor pop (bad) rorb loopne jp dec jb inc sub call inc stos daa push in jbe dec mov mov shl add (bad) mov imul sub add mov add push cmp fiaddl push fnop mov cltd test hlt jo mov add pop aas xor mov sbb inc pop in and cli sbb cmpw je inc inc sbb ljmp mov add or test jge enter dec pushl add add dec in push jp sub fwait pop aam sub je inc cmp ja or cmp push inc push inc cmp lods call and xchg dec sbb scas arpl outsb adc js adc insb call cmp jb aaa mov xor cs (bad) xchg imul xchg jne pop inc mov mov subb movb fildl pop aam outsl scas mov mov xlat inc rolb daa xor loop and lds enter clc push mov add or push cmp fxch and add push dec es and outsb xor negl push mov pop mov cmp mov jne mov imul stos inc adc mov and fistl add outsb mov dec mov inc fcmovu sbb push mov adc subb es and add cmp add xchg movsb or pop sbb xorl cmp out xchg into cmp sbb pusha popa pusha or pop mov shrl insl test lods movl xlat or xchg popf push pop inc jl sarl push jge addl lods mov cmp mov test lea gs mov push mov fwait dec insb fsubs pop mov and xchg mov es adc idiv jne push push mov and nop cmp mov push push sub cli (bad) jp loopne jl fmuls int movsl adc pop push mov scas loop add sahf int nop inc dec fdivr sbb inc insl add call jae push shll mov aaa nop movsb jp insb adc mov das inc dec pop mov fwait call fcmovu pop adc mov adc pop je inc or fmull jp inc rcll (bad) push push jnp inc or jbe dec (bad) jge push les das inc inc lcall stos mov push add fdivrs adc aad (bad) mov dec xor mov mov push scas imul push mov pop jno mov adc mov js insl or fwait or lock xchg or ljmp in sbb adc xchg and push nop push push jns add lcall int3 xor xor mov insb adc adc lock xchg pop push es xrelease movl add mov cmp dec cmp mov jo daa mov push enter add fnstenv push inc in xchg shrb push inc sub push inc in cs inc inc imul insb lock in xor jae push sub imul repz pop inc xchg leave add call jge or pop ss orb mov orb jp scas popa rorl xchg or push adc cwtl xor repnz or mov xor adc in push xor xlat and sub jle gs rcr push jne inc in sub insb xorl cld or pop jmp pusha cmp shl lea dec fmuls sbb xchg and xor inc push push inc rorl dec add pop sub popa adc xor ret push daa add in jecxz test ret xor call or sti dec jp mov cmp fadds inc mov divl test icebp mov sbb jae adc mov or divb out inc arpl jl cmc daa add cmpsb cltd mov adc loopne stos ss lds fsubr divl ret in mov adc jecxz decl insl and mov xchg cmp outsl (bad) push je xor clc jl and test nop ret imul mov inc shrb out or sub sbb jo test movsl lcall inc adc gs aam cmp mov add lods aam rcrb add enter dec add push adc jbe mov or push stos int3 ja sub pop inc sbb sbb dec mov xlat add push je jno sbbl sbb pop out push xchg ds cmp cmp roll adc out fisttpl xor jne inc ljmp mov cmp in push psubsw addps add popa dec les lds sarl dec sbb or pop jl add sbb sbb adc jae inc je push sub inc ds add pop sub outsb add jne add lahf dec fmull test dec inc inc es test sti daa ret cmp sbb inc adc (bad) dec iret pusha sub mov xor add mov sbb or fldl adc push mov push jne push jp inc out lds jl pop add sub jbe ljmp inc jl jne adc imul lcall push inc mov fs cmp jne mov mov cwtl (bad) mov call add mov adc jle jne adc lods dec add imul jle mov mov pop mov nop push cmp jge cmp adc rorl push jg cld push test mov sbb xchg jmp inc xorb ja xor jne add stos fs call je xor adc out adc cli dec mov dec adc sbb dec add stc jnp adc adc mov and cmpsb xchg mov push mov adc arpl stos and cltd mov outsl push cmp add ret (bad) push ret sarl add (bad) mov adc sbb fadd loope scas mov mov lea mov sbb xor mov pushf out bound test cmp inc fisttpll sbbl aad xor xlat mov cld push inc xor mov add cmp div xor jmp dec xchg ljmp rorb call lock das pop push push or inc xchg add fldt mov sbb add repz cmp inc test negl daa mov dec add orb lret (bad) or cmp std and xor sbb mov adc inc push in jg xchg inc dec je jno insb mov sarb daa cltd jmp xor or sarl push dec jb add inc jne sahf adc add testl jbe lcall adc lods cli lods push or lret push add jno pop mov xchg jg pop (bad) clc outsb sub (bad) adcb inc and adc (bad) xor adc je sbb je fistl inc cmp cmovne bound inc sub dec push jge and cmp adc insl push test push jno out (bad) popa inc xor push xor jg xor sbb mov push add push sbb dec fcoms push push jl (bad) or add sub cwtl xchg pop sbb pop enter loopne cmp ss mov test push cmp adc ja insb push aaa xchg mov mov pop aas fsubrl mov mov lds in and and and loopne push mov lahf xor lods push mov mov (bad) pop push fnstsw enter mov bound adc lret xchg mov mov pushl shrb jne pop pop pop pop mov add xchg pop and and xchg xorb sub jl push outsl mov out push mov jl pop adc push xchg fldl icebp jg pop sbb jmp adc cwtl sub loope in inc pop cmp mov or add lea sbb cmc aad push inc addr16 dec loop (bad) or fisttpll xor pop add push mov test sbb lret movsb push inc add mov pop sub aam inc adc add mov adc or xorb pop decl icebp add xchg jge add dec push and sbb adcb add test sbb aaa cmp in or cmp add xor add add pop jo xor pop mov ja mov add fs push in mov or lods add negl adc cmp jne jl outsl xchg or call add lods add mov mov push xor sub (bad) sub or or cmp jne inc mov add xlat dec cmc out cmp test push and jge or cs push test popf shll cmpl sub mov xor dec push add sub addl sbb into mov sub pcmpeqw xor push cmpl inc cmp sbb add xchg adc cmp inc scas xlat push shll jns (bad) mov popf xor mov cmp por add push pop cmp je shrb daa imul mov mov push or push and shlb push add sub sub mov cmp add push clc roll mov aaa clc jne (bad) sbb mov loopne sub je adc adc dec or mov insb ret sbb inc sbb adc add into leave pop sub inc mov jle cld jne add test (bad) idiv ret pusha pusha inc repnz std mov (bad) or scas or push sbbb pop push fildl (bad) cwtl loopne daa push je mov cld pop mov test lods push and (bad) ss (bad) mov les adc inc cmp or lret push sbb inc je lret and test cmp xor loope push add mov loop jp dec dec or addr16 xchg pop xor mov clc movsl (bad) adc cmp dec and shrl cmpsl cwtl mov rolb cmc pop fsub fiadd adc (bad) add sub popw sti mov fwait mov call jmp push add or xor adc adcl adc (bad) lret xchg outsb push cmp mov ret push shrl and push sbb or sub push xor or aam push in sub jl je (bad) push mov push mov add xor fadds sbb test and jbe dec sbb add dec jmp movsl (bad) ds sub jge lods lea sub fsubrs sbb push das fldt scas cmp (bad) enter mov and dec stos in push scas or pop inc mov arpl xchg push rorb inc imul jnp or lret inc in mov lret int3 jmp int pop (bad) adc add mov mov ja je enter fdivrl stos lods fdivs enter test outsb lock call adc insl push call scas loopne imul push and (bad) std push mov aam adcl mov stos or cmp push jno mov ds xor mov pusha jmp fwait push lea and fsubrs dec push aad push dec in add adc inc loopne mov and test pop pusha cld in add add jne and fistl inc aad stos (bad) lock xlat mov adc add js push jp mov xor lcall in sbb pop add sbb pop and sbb call mov or in fcoml push fcmove inc inc xchg xor adc pushl daa sub fnsave pop push or adc idivl or or inc inc mov add cmp ss add xchg add out mov sub xor push mov sbb mov loopne outsl je xor cmp push rorl add jne jge jle mov xchg sub push or sbb test inc or insl cwtl inc ljmp fwait testb push pusha outsl and sbb mov ja mov jo fs pop add push adc and addr16 pop (bad) scas out mov or popa xor push pop js and in jo mov data16 cmp add (bad) bound add fsub mov jb or cltd sarb sarb and lods sbbb fwait cwtl je ss insb sub push lods mov and mov shl pop leave and adc pusha orb imul aad jge mov push sbb cwtl inc popf xor ret adc out mov adc push pop or or mov and clc adc es addr16 pusha adc adcl jo adc mov xor imul lods or js dec push cmp cmp dec out sub in mov inc fistpl js dec cmp sbb cmp add mov (bad) and mov rorl add js add inc push loopw bound xor fdivs adc push dec or inc shrl jb add adc shr push int push nop rcrb xchg sub push rcrb pop lret dec push mov inc xor ss rcrb inc mov enter jmp sub inc jmp test and mov inc xor or adc fsubs pop xor lgs (bad) push (bad) xor shlb push xor adc pop push push add jge push and mov push sub movsb lret pop xchg pop xor pop cmp inc mov mov push inc push mov fwait mov jl movsl ss mov sbb add pop loopne xor and jmp mov and xor cmp add jne dec jne or iret xor pop add sbb sub les lretw push enter dec inc hlt cmp or jp out test rcrl cmp sbb test add inc mov popl adcb cmp and cwtl push adc add or mov xchg sbb pop xchg or add mov dec (bad) jg aaa int3 popf or and nop add fwait mov lahf sbb push xchg adc scas mov aam mov mov adc or cmp lods fwait mov sbb inc cwtl sahf jl pop fsubr push pop or mov xor and and sbb nop add (bad) fild sarb ret mov cmp je lods push ljmp add ficomp notb out mov inc sbb adc scas or and inc sbb nop add cmp add out add sub ss and leave je mov cmpsb mov sar int sbb push push call or fs push pop push mov pop mov lods pusha cmp sbb mov or cmp rol pop cmp add push sbb inc or rorb mov pop and sub jle into fcompl fmuls and jg and jb (bad) and int cmp or in fimull jg push adc mov jge mov fld inc or shrb push sbb push stos (bad) (bad) jmp mov dec adc imull jg ficompl rclb rolb push mov mov add cmp roll cmp adc outsl or sbb pop popa fwait dec out sbb ret add fwait aas push mov jecxz test insb and jo pusha or pop notb jbe mov sarb add add lods adc (bad) pop (bad) add sub mov mov cltd pop stc or decl stos sub push add fidivrl or lds das add cld inc jge sub xor cmovb push mov je movl sbb fisttpll mov push adc jmp jecxz or sbb aad ret mov add inc add out jnp fnsave lahf rorl jbe pop sbb (bad) lods push inc int3 mov adc loopne add div lds and add rcr mov xor shll jge pop mov mov pop xchg es cli mov call sub jge fsub (bad) out (bad) std jne mov mov outsb push mov add icebp jo push inc (bad) call xor sbb mov or or jecxz lcall loope jbe xor sbb jp or test xor cmp test add cmp nop sbb aaa loop add mov or mov pop sbb nop or xor and xor xor or inc fs test add add int insb add xchg sahf adc lock push insb movl sbb mov inc xor dec mov add add in rclb xchg mov pop mov lods sbb sbb xor push inc ret js mov and bound fsubs jae in ljmp (bad) mov mull pusha int imul cmpsb fnstenv push test orl je pop (bad) fsubrs sahf mov add push movsl push (bad) clc (bad) mov lsl fwait cld and loopne xchg (bad) and xor in push jo mov repnz fwait push cltd cmp lret add pop rcrb cmp add inc xchg push ret in dec push push inc pop add sbb cmpsb push and mov fidivrl mov and cs push jl add jg pop mov jne cmp jl add xchg jle lods fnsave popl mov ret fwait and cmp (bad) jns imul (bad) aam push pop push call inc xchg neg test addr16 cld mov outsb sbb add mov shl mov jp mov cld dec vmovsldup sbb call adc loop idiv (bad) mov dec mov loope ljmp dec sub push cmp icebp fwait pop jle sub push push cmovle sqrtps insl jnp or push push dec adc jae push inc xchg or inc orl or cmpsl push xor dec fwait lcall aas xchg cmp rcll movb in dec add mov loopne xlat sub mov dec ret outsl addb ficompl inc lock inc sbb xor and add das leave cmp push je mov add pop cmp je add je ss pop push inc sub pop ss pop dec adc push lock lahf call or and add sbb mov xor xchg and stc or loop mov or (bad) sbb jnp (bad) jae in clc push mov cmp add pop add jnp in jl mov cmpl jo mov es sti in cs lcall adc pop loop cmp jne mov inc sbb add pop mov scas push test add insl mov cld jl or enter dec (bad) aaa js push daa clc add mov movsl test mov sbb leave enter jecxz cmpl imull lret push or out ljmp cmpb push les (bad) push push out inc inc fcomp movl push push call pop lods xorl loope mov shrb mov pop adc adc rcl cmpsb dec add fcomps mov imul jmp (bad) mov bound imul pusha sub mov nop outsl add or sub (bad) cs add jne pusha idiv addr16 jne fadd insb mov in rcll adc out add xor fcompl (bad) push or sub insb rorl das adc rep mov and rep push xchg sub adc inc add and aaa popa shr pop or and outsl xchg push mov in push and adc and sub cmp push ret adc das subl add adc push push mov loop and sub pop fcoms rorb ja ret das fisubl mov adc add fdivl mov loop mov lret inc js mov movsl sahf push rep push in push fisttpll add mov jno repnz imul adc mov movsb mov jno sub pop sbb (bad) rolb test fs mov push out pusha sti inc fisttp sub jno (bad) loope ss inc mov mov daa sub add subl mov inc cmp pusha dec inc repz and push sarb push push push adc (bad) mov std pop ret pop push pop loopne adc dec inc rol fnstsw or mov adc mov or ss xor pop mov cmp mov bound add pop mov jge sbb pop mov fs mov mov push insb mov outsb fildl jp add scas aam daa adc add sar ret jae fsubrs inc insb push ja movsb mov lds push add or test aad fcmovnb (bad) or push and outsl loope or (bad) jb sub mov push insb jl test addl fisub loop test sub arpl int3 jno (bad) aad fs and aam in inc mov pop mov and mov shrl (bad) arpl sub (bad) jb mov or lea dec xchg rolb pop ret dec dec cmp out xchg ret pusha push push xchg cli mov jo icebp das ljmp lcall pop jle fs ret cmp mov imul (bad) push std dec insb (bad) jne dec pop mov jle inc stos inc out or jo shll lds jno das mov mov int lea pop imull leave enter push inc push sub sub mov sti scas inc jae cmovnp lds sub imul lds adc dec jne and xor cmc pop push add clc dec inc mov pusha stos push dec jle xor stc add and xor adc inc icebp mov sbb incb jb push xchg pop xlat cmp mov jg sub aas in fidivr dec add rcll (bad) mov loop insb out inc loope inc sbb pop dec fucomip push push jge pop and fldenv cmp add or rcl adc mov nop xor (bad) mov xor mov js xor inc in lret mov insb or nop push shufps xor out cmp ss adc pusha push (bad) rolb les push jb and mov push mov xor pop sarb sbb sbb dec cmp (bad) pop pop mov cmp sub cmp ret push mov sub xor mov or xor pop inc xchg daa lock or cmpb fisttp adc pop xchg test xchg cwtl inc cld lret mulb dec inc sub sub mov rcr pop adc push and cmpsl add and pop mov jmp inc cmc push sbb test add mov mov jae neg mov inc out mov jmp adc lods inc sbb xchg sub sub pop leave mov mov fcmovu js or test insb ja stc cmp mov sar ret inc pop mov cmp cmp out pusha push inc or lds inc (bad) jo std (bad) mov (bad) mov dec jne outsb jl ss test pop ja inc add (bad) mov (bad) sbb test dec dec adc outsb test mov add test add out mul add nop aad add icebp push pusha pop js and std mov test sub inc ja jnp cmp jno mov sti jmp push dec mov or xchg mov je out inc or ror fisubrl sub mov fwait cmc loopne jne or loope aas and push mov pop pop adc xor sbb mov ret or push cmp ret subl lea lret rorl (bad) add sub jmp divl push sub lea dec mov push cmp (bad) nop xchg jmp rcll push insb xor jbe add sbb adc pop xorb push movsl dec push cmp scas add insb or or dec test inc add inc or roll mov in mov adc jne or xor nop inc push sub push rcrb or or loope fstpt in rcr ret cmp jle cmp ja imul jge xchg or aam (bad) (bad) inc sub push mov in sbb mov stos lock add or adc inc test push loope and add ja (bad) jo lds cmpsb jno adc adc mov xchg movsl mov call sahf movsl sbb dec add xor pusha cmp pop adc fs movsl ljmp test push out pop mov pop je je enter cmp cmp mov add je xchg adc lds cmp outsb jbe pop sub test idivl xchg xor xchg insb mov mov pushf lea lcall stos imul stc sbb inc push sahf sbb pop les or adc (bad) mov push mov enter faddl jo pop add sarb xor cwtl in mov dec push jne jl sbb nopl pusha pop test (bad) xlat xchg dec bound int3 imul rol outsb push mov ret popa sbb pop push cltd sbb sbb movsb add insl inc mov in aaa pusha lss add sub andl adc orl sub xchg jne adc xchg push inc dec mov xor pop push pusha dec out mov dec cmp sbb xchg jnp ss (bad) je dec (bad) mov xor in in nop fcoms inc mov or inc adc rol mov add int jg or adc sahf adc shrb js std push sub sbb lcall sub lahf xor rorl push movsb add fisubl or sub scas sbb roll pusha call jle push sbb out movl jae,pn add or and je and ljmp inc xor dec adc mov adc push aaa jp test sub xlat jp add sbb cmp lds push nop xor sub aaa adc inc push push push sub jne pop sub inc cs popf les xor or ja jmp lds mov and push inc mov and cmpsb cmp jmp inc mov add pop ret dec xor xor out dec mov push sbb inc jae mov dec jmp inc sub nop shrl xchg cmp add jbe test push outsb aas pop push fst add adc addl pop cmp mov out dec xchg fisttpll cld push aad loop lds out or inc xor cmp add mov inc sub add sti dec ja sbb xchg arpl sub movl (bad) in int pop shr shr sub aas lret mov adc add add xchg andl push xchg pop ret pop sub pop and xchg fidivl sahf cmp mov push or pop mov ficompl xchg das insl rcr jae push outsb push inc pop rcrb jb adc cmc dec cmc jbe dec in and mov mov push idivl mov dec inc cmp daa popa jb mov mov jno (bad) gs (bad) stos hlt sub negl mov int3 dec sub add inc scas jo adc mull xchg test inc cmp jne or jae cmp jno mov mov push jg ja push jno xchg mov jne push xor push cmp lods test pop fwait sbb dec fdivl sub cli dec lret push mov jne push lock (bad) imul repnz mov push sbb insb mov mov loope in mov sarl popf jb push xor pop mov push mov dec sbb dec shlb push push mov dec xchg inc push add pop xor sbb xchg xor xchg pop cs push jae pop xor mov ds fsubrs xchg and sbb push shlb test xchg pop mov cmc lock stc loopne cmp clc jbe xchg je push sbb jge cld or add (bad) mov hlt push pop out ljmp movl mov inc test or or outsb push cmp cmp dec cmpsl push imul sub dec sahf mov mov and popa fcoms or mov imul jle add addr16 pop mov jmp ficom xchg jb xor cmp and xor mov or push lea inc adc inc push or or add mov loop pushf or jo cmc outsb std push pop fadds push popa aam xor shrb (bad) (bad) arpl jae or cmp mov dec out dec mov mov mov data16 inc sub mov mov and adc scas push rcll stos mov ljmp insl mov lret mov inc ret (bad) push mov cmp lock mov dec bnd into mov shlb or rorb enter jae sahf adc fcomps inc jb,pt lea out fmul jl mov rorl icebp pop jmp add inc loop pop xor ret dec and mov popa aaa dec sub (bad) into add mov push in adc ret sbb (bad) mov cld xchg fisubr jmp ja or in lcall and (bad) jne push dec and jl ss push push inc lea or inc xor clc sbb mov push add (bad) (bad) fstl inc or or push sbb in and (bad) sarb mov cmpsl dec push xchg sub mov andb lock and sub mov mov xor sub mov (bad) mov dec pop push mov inc jno fisubrl inc shrl push inc mov das push jo les ljmp xor (bad) cmpsb nop clc jp sbb sub xchg shl mov (bad) lcall push push ja mov pop mov mov lods add loopne add nop dec (bad) dec mov inc iret inc push cs push push cmp pop sbb outsl sbb push xor repnz dec insl or mov xchg sub ljmp dec leave xor insl and cmp sub mov (bad) ljmp outsl insl xchg inc test push inc sbb orl cwtl mov jns inc inc (bad) loopne inc sbb and enter cmp rcrl or popa push push enter mov in inc sbb imulb mov dec fmulp int ret add mov push push push outsl ss adc jg adc adc aad sub mov lods out (bad) jecxz sub scas and push rorl mov (bad) iret cwtl dec (bad) rcrl push xchg dec push aam lcall popa dec cmp leave cmc push push pop cmpsl pusha mov adc rclb je sub push imul lock dec pop sbb stos inc in jbe and xor or movl sbb mov mov out xchg ljmp push mov adc dec test or in nop inc sbb xchg dec mov dec push and test sub xchg (bad) xor or xor push lods int3 pusha dec xor loopne cli lcall aaa pop mov test adc inc rcr ds mov inc outsb out push push data16 and adc inc or insl andl (bad) mov sub pop pop sbb or mov and mov dec inc lea test fwait gs sbb add sbb lds cs (bad) lret int3 jne mov mov add enter inc pop or or adc inc sub pop xor mov test push jle or jl xor in aas mov test addr16 adc sbb imul mov jle inc sbb mov adc jecxz mov cli aad fcmovb loop aam or aaa jb leave mov stc repnz hlt cmc mulb xchg idiv stc xchg enter std mov enter add ret xchg pushf adc dec jne dec mov icebp div icebp cmp div and cli xchg or adc roll add das inc xor jmp xchg mov inc ljmp add ja mov lea or mov faddp cmp faddp sbbb mov ss pause sbb (bad) add xor or mov xor dec je mov and outsl mov iret push mov push mov lea mov mov add jne push mov adc fsubrs mov movsb jae mov add sbb mov ret incl sahf bnd inc mov repnz push push or mov cwtl or js insl jmp imul mov dec adc ficomp mov mov sub pop data16 (bad) shr push xrelease pop pop popf nop inc jmp (bad) sbb push add adc or sbb mov shlb pusha (bad) push lock mov test push adc or lea fmuls fmuls mov xchg shll and out fstpl inc mov rorb (bad) sahf adc push sahf lea push aad push clc mov arpl std sub or mov test clc shl popf sub mov cmp mov mov push xchg cmp mov pop xor mov xchg call insb inc int3 dec add (bad) (bad) fdivrs mov and inc or adc and sub add sbb xchg or cli sar pop xchg add adc data16 movsl and push cmpb jne (bad) cmp lea mov int in push or lret mov adc test or clc cs faddl cmpsb add cmp ja jmp dec xor lea cmp ja (bad) aaa lock je ret push push es xor jmp mov nop out and lea jle xor ret shl xor dec adc aas xchg mov adc xor ret lahf repz sbb or push rcr lcall push add lods (bad) (bad) shl cmp fcoml sbb push lret inc sahf arpl sahf (bad) sbb sahf cs jecxz push ret (bad) sahf push loop or shl into clc (bad) and inc push pop hlt rolb in lea or mov stos sbb pop add inc sub ljmp pusha jmp aad adc sbb cmp push rcrl or push or sbb fidiv push sbb adc jne add xlat mov imul and sbb mov test xor mov pop pusha jmp push add inc jle jbe in sarl add cmp sti add add inc mov inc inc inc movsb mov inc push push push pop or cmp fwait and out fs add pop jl mov jnp add add mov pop jns fcom sti cmp jl push sbb mov scas dec adc (bad) add add mov aaa or jle fadds xchg sbb mov ret mov (bad) or mov sbb scas add out (bad) (bad) mov push loop mov push cmp jb sti jo cli mov or mov cmp rolb test and aaa dec scas add lahf add pop popa pop loop lcall add sub push sahf (bad) int das dec cmpsl mov and shrl cmp cmp fcompl ds rorb push ror or xorl das add mov sub mov adcl jge mov mov ret and adc loope or (bad) jb jne mov jae push lock ja inc adc daa lret dec mov jne sub jbe xchg sub mov nop scas outsb mov jns test mov (bad) jne pusha ss nop mov push pop sbb loop cmp adc outsl andl xchg js jae pop xor les inc sbb push push addr16 cld into fimull into pop mov (bad) testl icebp scas mov sub add inc jge or inc xchg xor (bad) (bad) fiaddl cmp jnp jle inc cmp jle dec lds push jl ss loope pop cmp jg xchg and inc out in inc hlt mov jl stc sub adc mov mov and orl movb mov insl push jo and inc lea jb cmpsl mov (bad) adc daa or mov push push add stos test imul pop arpl pop jne mov add jns xlat insl insl (bad) mov pop add or out add shll pop lods pop (bad) aas adc xor arpl fidivl ss dec cld dec sbbl push lret repz xchg jne cmp (bad) fsubr sub ja push js ror mov add fsubrp pop test mov fstl pop lods mov jae push sbb jne or xchg add in and js sbb cmp sub push mov xor or add shr (bad) dec push mov jne data16 div and (bad) leave je pop mov push cli push dec or and sub push adc xor lds rcrl int push push lea mull cltd or lret adc sbb and bound mov adc pop jmp xchg jbe mov push dec or out xor adc roll (bad) push push push mov pushw add mov ljmp mov pop mov mov xchg insl addl es out lea lahf adc mov cmp pop pop lea jl dec (bad) mov pop (bad) je cmp jge add push cmp popf xlat jmp pop cmp imul je aad pop fst std out xorl or sub lcall out xchg (bad) jmp cmp clts or pop lds sbb aad fadd outsl ds pop fcoml or mov sbb add popa stos xchg adc bound (bad) in jle lea xchg cmp inc lea cmc mov mov test pop pop xchg jge mov pop dec adc inc aad andb or dec sbbb inc notb xlat cld jle addb into push xchg cmp in or arpl jl jle in das mov mov pusha xor pop pop sbb jp je and xchg xchg stos mov test daa popf xor pop sbb daa xor dec (bad) or add push push or inc pop push jmp sbb fisttpll xor push rclb sbb stc jmp inc dec pop cmp ja pop loopne mov or jmp in sub push xchg pop sub test mov cli fstl xchg mov mov dec xor cmpl insl popa (bad) js pop adc (bad) push or adc and icebp or inc mov or fcoms (bad) fs outsl and add sbb pushf pop sbb xchg jnp rorl or add es add ja mov inc sahf sbb push push and popf cli push jle rorw inc add mov mov cmc add jne cli or push or sub add add mov es mov adc add or ds neg pop scas pusha add pop jp xor adc fucomi loope and sarl pop xor jecxz sub xor out aaa and pop sub pop hlt cli jmp scas inc push loope addl cwtl outsl push push fs sbb mov adc mov add sbb dec or cs inc orb push (bad) mov xchg add inc mov xchg mov xor ret xchg inc (bad) shl das nop push adc ss mov mov mov (bad) jb lret cmp (bad) rcrl inc xlat push inc xchg add jbe and add adc lcall testb popf push clc push arpl mov int jno (bad) or cwtl mov pop gs popf popa or pop push mov xlat mov mov pop sarb (bad) sbb or mov adc jmp jo lods sub test test xor sbb ud2 pop add idivb lret or pop mov popf pusha scas cs fnop sub cmp mov sbbl jmp push or dec cmp pop mov fistp iret shr jno mov jno jne lock mov jp cmpsl or mov popa push fidivl sbb addr16 xchg lds les rcl sub and mov stc repnz mov loopne xor pop push bound lock xor mov pop lret add (bad) nop push xor add test adc sbb add jmp sbbl mov jp sbb adcb inc (bad) push sub cmp jp,pn xchg popf add dec jne push sub xlat mov test mov push std arpl std cmp mov inc mov xor incl pop setbe mov cmpsb jb inc into pop ret lds lret out or shr shl dec in mov lock pop pop push rclb cmp pop xorl adc and lea inc push mov inc daa inc mov mov je clc cmp push fisttp dec test dec (bad) popa stos js add test jae cmpsl xor sub sbb and sbb cmp mov and fnstenv enter mov rcl mov inc not gs inc outsl outsl adc not push inc mov mov in cwtl ret push and mov dec int3 pop lea in in sbb xor add jne pop pop pop ret (bad) adc sbb das dec loope push add fdivl push or dec mov ficompl or dec cltd imul outsl jno inc adc jmp pusha jmp mov and dec add (bad) shrl dec xor cmp mov add orl les or pop in stos jp or repnz lret adc insb (bad) or (bad) pushf subb or dec and sub aam lods mov sbb mov mov or pop rorb das add mov mov popa adc xor inc mov idiv test in cltd push and shrb fucomip xorl dec sub add dec outsl pop or jb dec je orb dec or mov loope ja inc or fdivrs shrl jl dec mov mov push inc inc loope (bad) ss loopne (bad) jae jae adc rcrb aaa adc or jne mov repnz sbb sti lods sub push mov and sbb test mov inc mov adc dec push mov lods test je fldl add loope movsb hlt dec add pop imul xor inc jne cmp dec pop lea dec mov faddl xlat add pop lahf repz sub add cmp pop push in sbb out adc nop inc fdivrs sbb add adc sub adc ds mov or add mov and mov sub sbb pop add add inc fsubs test jg jae loope (bad) push mov lods dec pop or lds jb mov scas bound sbb loop cmp out sub sbb call xor mov push cmp dec lahf or cmp outsl arpl pop add data16 cmp add dec sub or jne sbb adc outsl aaa cmpsb add jge or sbb mov mov adc jne out in mov pop jne pop insl lods mov sbb pop add push pop xor inc les add in mov push adc ljmp (bad) ffreep add andl movl sub jmp and inc sbb es test stos call movsb and das mov mov cmp ret inc dec int3 push xchg dec mov int add push push dec inc add outsl push dec das push mov dec jbe and push push cmp pop jbe cmp mov cmp lret mov in lahf xor int lret mov or fstps sub push mov loope mov mov sbb aaa dec outsl and add ss gs and mov pop out xor pop icebp pop add jg mov nop push and and push push cmp add and pusha lds dec push add fmuls (bad) ret sbb or inc dec jl lea mov push push mov sahf mov push mov sub rolb in push in clc push sub inc sub push lds cmp push sti je cmpl shrl or or test add daa jp mov add cmc sub mov inc (bad) mov pop pusha xor (bad) xor push add sarl mov xchg test add ljmp add mov jne cmp pop jge test mov sub inc lds fiadd pop pop mov ljmp sub add mov fucom jbe and mov roll push (bad) repz jbe clc push (bad) cmp jne dec sub xchg jne cmp scas sub outsl cld mov ljmp repz lea fdivrp pop mov js push ret add adc mov mov mov mov sub gs sbb mov rcl jecxz sub divb fildl dec sbb sbb out out in sbb jne fstpl mov iret mov je fimull mov adc cmp inc out arpl data16 adc sti std outsb and fnstenv mov sub jbe or mov sbb dec cli std mov (bad) out and fwait push aam sbb cmp (bad) cltd add lods xor lea mov add rclb and xor mov push and out adc pusha inc sbb adc subb pop hlt pop les int mov or cmp pop mov push xor and mov sub out sbb ss (bad) jle add mov std adc and sub adc mov insl dec lods mov out (bad) dec mov mov stos fldcw jae fidivl hlt sbb push out push add fs movsl (bad) lea pop je (bad) ss in je,pt mov or or dec push and sbb rol sti mov mov sub sarl mov je popa sbb mov add insl cmp in adc mov sbb rorl add xchg fldl movb mov jne sbb fnstsw mov sbb and add xor add and shl mov dec adc ret mov and lock or xchg mov lret insl fisttpll mov cmp and clc test test mov lea js or adc outsb incl clc shr pop jne cmp or push adc mov loope inc in lea (bad) je repnz inc add sub and mov sbb std (bad) mov adc push rorb ja pop sbb mov add sbb inc mov fisubr xor inc mov mov sbb js test mov sahf pop or mov shrb inc sub push fs loope push push scas push mov popa push add sbb inc jbe cmpsb sbb jg push je xor mov push push jge pop jl add push orb push lds roll outsl (bad) testb dec sub inc test mov jge xlat fisttpll inc je fisttpll push push sub and mov sar fstpl pop ret lea and pop hlt pop aad cmp fisttpl pop movl movb psubq mov fs push inc notb and push pop push sub notb and jl sub sbb mov add (bad) mov je movl or inc add sbb xor mov dec cmp inc test in jbe jbe adc out sub dec stos ljmp adc mov sub add mov push shll testl in (bad) and (bad) ja test jo mov xchg pop xchg dec aam mov push cmp pop dec sub std mov in dec cs fcmovu add mov jl mov sub cmp daa inc push push mov (bad) (bad) rorl ja jmp jo add xchg mov xor in push sbb cmp push pop mov jg xchg enter or mov pop jge,pn and xor xor inc jge lock sbb (bad) and sub dec push test or sub mov mov and adcb sbb dec fistp les enter or inc je mov push jb mov out and rolb into lea je (bad) dec jg in xor shr sub out test jne add aas pop add jnp popf and jbe jle add add cmp or pcmpeqb and sub xor dec add lods pop fs imul xchg movsl psubusw movsl popf ss mov add iret das es jp and in arpl ret sbb addr16 jg fimull xchg ljmp mov add lcall jns aaa add mov sub jmp cmc push jb int (bad) mov int and int push mov inc inc dec jne dec cs in int3 fnstenv cmovns push push mov or add push outsl leave cs aaa sbb push add xadd pop mov mov daa or push popf rol adc loopne push lods loopne call lcall (bad) fcoml jo je insl (bad) jbe pop mov jae push insl sub mov mov adc dec mov sbb js inc sub fwait inc or outsb pop sub xor in add and mov xor (bad) pop jo pop fcomp in bound xor int data16 cmc mov or sub inc mov les pop push sub xor inc (bad) push or add push mov fistl dec jae pop enter jp add mov (bad) movsb xchg cmp std jb cmpl sub and out (bad) pop pop xchg daa ljmp imull add xlat jne pusha lcall sub and xor mov lock add or loopne enter add incl inc (bad) jne out pop pop enter add add and mov mov mov mov add jbe mov mov int3 lea sahf sbb add add andl and jnp inc sub sbb adc add xchg add dec notl or outsl inc (bad) in call xor in lock aam dec (bad) hlt clc clc cld cld push notb insb push lea lcall mov add adc leave fwait or or adc roll in ret sub cmp test jbe dec or rolb neg leave and imul sub add nop in or insb scas xor insl add outsl push out push fmul or dec add or and rolb mov nop daa and mov adc xlat pop cwtl arpl pop test mov dec (bad) xor xchg pushf movsb lods mov outsb xchg fldcw cld mov pop lcall adc or lcall add ja inc fwait and add push adc or fwait mov test add and mov xchg mov aam imul or push mov inc sbb inc repnz adc xor and sub pop mov lahf mov push adc xor out dec je rep pop or (bad) out pushf daa ljmp mov xor sbb les sub adc pop pop sub jmp lea cmp js sbb dec add mov dec scas lock adc xadd sbb aad rcll push inc outsb adc inc je sar cmp jbe sti (bad) push pushl mov (bad) sbb in fildl and xorl rolb hlt arpl jne push pop ds aas add push push and add sbb test js and loopne cmpsb test push xor arpl les std jle mov sub mov repz pop dec ret pop or (bad) jo mov mov or mov adc xlat xor stos das mov add js inc add inc cmc cs out mov outsb je pop je push cmp sahf lock dec and cmp das je pushl push sbb push pop xor mov pop push out or pop (bad) jbe cwtl and dec pop movl cmp xor inc movsl repnz pop jns,pn inc push inc sbb jae pop or insb lahf sti cmp cmpl add scas add jno and outsb mov mov imul out (bad) sbb das push test es inc test sbb mov mov push add out cmp mov inc arpl mov mov jne daa das sub mov add mov pop or mov sti (bad) test testb jne adcl sti add or xchg push dec outsl mov les popa jb pop or loop fidiv mov cmpl (bad) mov add xor pop adc or xchg add adc fidivl dec aam jle jge popf in testl adc in flds imul or inc and xbegin adc icebp mov or movb rclb (bad) movsl daa sub cld mov gs ja add xchg mov push fcompl sub (bad) jo das daa adc push out dec mov sub mov fstp push clc jmp add clc or cmpsb pop inc xchg gs popa aaa cmp insb mov pop adc pop adc call and stc test cmc js pop xchg incl and pop inc or xchg jo push incl add add test or or or or clc add xlat xchg add lcall or or in or or pushf xchg sub or or or or or xor rorl or or enter or or mov mov or inc loopne adc mov and sbbl cli subl push scas or ss (bad) or inc in sbb out dec movl dec push int outsb push je dec mov pop mov pop mov xor mov jl xor sbb fildl cmp pop lahf leave pop sbb mov cmp imul pop add pushf dec pusha and add add add mulb sbb mov cmp sub aaa jb imul daa adc mov xor sbb push jb or or xchg or or or lcall fnop repnz loop or or or inc dec pusha dec mov nop out add dec es jg push adc pop adc adc xor adc xorl sub adc ret (bad) adc xchg or cltd cmp adc or sbb sbb mov sbb dec or xor jmp sbb (bad) sbb out in test je sub push dec lcall dec rcrl int rcrb inc pop pop add aas test add sub mov and addl dec inc mov xor rolb add (bad) outsl in push in push in jno repnz sub mov rol lea dec aad in out jmp out cmpsb cmp out rolb sub pop ja push data16 call adc or es outsb jae dec jmp add ljmp jmp mov (bad) in cmp dec mov sbb and sahf cmp jge xchg xchg sub dec es lock xor fbld and cmovno imul and std repz jae leave std hlt hlt push add cmc jae xorl xor pop div ret test ja sbbl dec stc lock cli cli lods cmp mov das iret sub outsl cld add xchg out mov sbb sbb or (bad) (bad) adc ret in stos jnp inc test sub or lahf rcll add push insl push xlat xorb test in adc shrl or enter hlt and clc and cld adc insb iret xchg sti out out dec dec popa popf dec outsb call test sub mov pop inc cs jmp jmp lea add popf cli mov das mov js out out jne sbbl add cli push cli repnz stc repz jbe repz sar inc dec push call cs sbb mov (bad) pop inc div outsb (bad) jne xor add jb cmp stc out clc ret rorb jne sbbl add addl and mov cmp add sub adc test (bad) mov lea mul sbb dec popa sub imull test fsubs lret out out bound sub (bad) or xchg (bad) mov sub sti imul ljmp mulb nop push pop xchg mov xchg (bad) lret enter insb out out repnz (bad) in adc and and mov nop in (bad) repnz cmp imul jae sbb testb imul idivb and dec pusha scas clc xor jecxz stc in test cli pop pusha xor lcall test lods jbe cs and (bad) (bad) xchg xor pop movb cmp dec cmc dec add sbb outsb fwait add divl xor push loope imul test loop in jb scas repz ss and in push inc pop in jns and repz inc push gs push mov sahf pop (bad) jmp pop jns bnd cmp repnz pop pusha mov in push das mov jns bnd sub push add inc loope repnz icebp icebp or xor push dec xchg push pop xchg xchg inc jb or xchg pop adc push xchg icebp jp lock scas sub and iret or mov xchg jns cmp lock das mov sbb lock lock fs cmp test sbb xor mov or add adc in push sub jae push mov out and pop push add xorl cli loop xor mov mov and mov mov inc jne test mov or orb sahf inc aam leave push and jne mov xchg sub sbb add cmp adc sti push add sbb pop adc cmp vmread add adc sbb or insl dec sub jp add adc adc cs jmp add mov lcall mov arpl movups cmp test sbb (bad) scas add push test add scas stos out or je add test xchg cld pop mov fwait stos mov popl lock pop add out push lea pop xor outsl idivl bound jne mov push push inc imull sbb pop cmpl jo jbe cmpsl cmp shll ret push push add ljmp xor add push pushf call add xchg sbb mov mov adc pop push push mov or push sub ds sbb adc push add enter and sub pop dec call or int subl test push mov xchg add out mov adc cmp mov inc fcompl aaa fildl push pushf add mov cmp in rorb sbb outsb sarb mov (bad) mov and adc out sbb jae add xor push daa test lret call or and push push rorl jge sbb and pop add fwait jmp adc or pusha cmp popa sbb xchg das mov add mov sbb xor mov and or adc mov push mov dec test loopne jo push sbb pop jbe jo arpl add push mov repnz adc aam scas push icebp mov inc add sbb movsl jo fwait sub xchg (bad) loopne imul mov and jno inc cmp push inc inc pop aas add add dec mov dec pop mov (bad) add outsb inc sub popa cmp das mov fcoms fldl mov mov xor jnp mov (bad) ja or stos jp or adc push ja sbb inc push add cltd and or sbb ds xchg sbb cld in adc mov and or xor stos pop sbb jne sub inc jge or sub push int in lret ret adc jg or adc leave mov push cmp and push inc inc mov or int3 jne push inc xchg or sbb popf jge and loopne push lea add add and scas mov pop add jg jg ss inc add push jbe jle icebp int xlat sbb jg jg jg jo mov (bad) jge xchg mov mov orb (bad) mov mov or pop movsl loop outsl mov cltd mov sbb lret add adc xor cli scas (bad) (bad) push push push mov or jne (bad) push movsl mov sti clc negl adc icebp push push loope push add mov or push inc in dec das add cmpsb loopne shrl shrl push and outsb idivl sub push adc mov xor in cmp or adc add push sub in adc ss aam fistl jae loop andl push (bad) or mov testb sbb out add lea test jge jns xchg inc inc inc push mov and dec adc jo arpl xor cmp and popa cmpl push push xor (bad) repz ficoml jo mov ljmp mov pop or xlat mov cs add lock mov push jl ja inc xor rclb add pop sub push mov jge xor xor push jecxz sub jle leave andl mov mov mov jmp sbb fistpll cmp inc adc jl sbb push push add ss push sbb lock inc mov cmp xchg add pop push inc xlat mov push cmp push push outsb inc and je pop mov shrb pop sarb mov push out jl (bad) and mov dec or ja push and push (bad) push and repz in add and cld push sub shr fistp ret jbe adc sbb hlt mov lcall lock xchg push cld sub or sbb mov mov sbb adc mov enter enter push inc mov and mov into es pushl sbb rol mov mov xor fucom (bad) sub dec add push pop inc addr16 dec inc lea out daa test mov and pushl push movsb adc ss popf push add sbb xor ljmp and add xor iret incb sub and rcrl push sbb and and add mov or loopne imul dec ficoml aas gs push aaa js cmc pop scas push mov js and ret sbb or xor inc in jo es pop cmp and sbbl je xchg mov das popa mov jp push push sbb int push icebp pop mov insb and das sub cmp fistl mov pop or inc cmp inc out bound (bad) or and or and bound jne lret je ret adc cmpsb cmpsl fimul mov and and or hlt les and clc and icebp movsl or hlt insl sbb je,pt or add and clc jge cmp mov or lcall test jl sub jge popf add fcomp pusha cld and and mov or hlt cld clc mov insb pushf incl jbe gs push sbb pop movsb mov les sbb and push pop push push int3 gs sub daa cmp cmpsb dec jbe push jns test cs fwait cmp sub pop sub in loop add xchg aas inc xor daa and add rorl and mov push je mov lds out ja aam sbb jl push aad add push xor je cmpsb cmp and outsl gs sub aam dec cmp mov loopne xchg add push lcall mov mov add (bad) (bad) jo and xor and roll push icebp inc ret and adc (bad) andb ret adc pop or test and cmp mov or jne mov cmp add sbb cmp out pop hlt add loope and btc or xor rorl jmp ret lods add cmp cmp xchg loope aas cmp pop das inc sbb jbe lods fimull adc (bad) adc pop sbb lret mov add mov pop and in cs dec adc or adc sahf push jmp pop jb push push push popa push sti les fs fs pop testb divl push cmp sub push stos dec inc inc mov call push inc or pop mov std jnp cmp sbb mov inc pop or inc es and mov mov ss or sbb insl mov in ds xor and (bad) jbe movsb push int3 jmp push jmp and negl push and test mov or je gs js sbb pop pop inc cmp jl sbb sbb add mov push arpl fild push and add ds pop cmp pop push pushf push add and add inc mov push xor sbb lea or sub push loopne loopne es xor mov ljmp or aaa jb inc bound push jge ret stos pop pop mov xor (bad) push aas mov inc adc pop xchg (bad) jae xor sbb jne (bad) cmpsl sldt sarb dec push lods jnp push add xor test pop add add dec or push push lea inc xor test lods imul int3 adc sub aad push cld movsl pop mov inc insl add xchg lea sub adc xlat incb cwtl ret jl jg out cmp mov xchg mov xchg add mov aam (bad) cmpl sub pop jmp push and in call je sub cmp mov mov mov fadds push into mov mov cmp and outsb jnp or jmp or xchg imul pop push lret mov and push push mov js jp adc sub pop fdivl outsb (bad) aaa sub sub loope les jo dec mov mov xchg xor add pusha xchg pop mov cmc (bad) pop mov outsl subb (bad) ret mov mov push add call stos adc add mov jmp mov mov aam pop dec jne loopne push inc inc xorl mov bnd (bad) bound lods push mov and daa cmp push or xor inc jl inc lds scas pushf mov ja or xor jl sahf arpl mov sbbl dec mov add push cmp je lds jmp out push pop and lock xlat lahf sbb pop add and push push sub push cmp pop es cld imul pop sbb inc jnp rclb mov push xor in inc inc pop ret and call rcrb add jl std and nop add dec adc add push loopne cld pop mov mov add lock ret push xorl inc cld aas test inc adc mov adc cld add int inc jmp xor imulb rol (bad) std cld dec add subl je test das dec fsubl inc ss inc mov or scas call mov js lock xor aam push jmp mov stos add dec add push ljmp (bad) mov mov inc and mov mov mov mov inc dec inc incl adc push lea mov mov test mov sub sub mov mov jo inc adc scas mov movb and pop mov mov add cmp ja out push cld mov sbb push xchg add sub test data16 mov add push lea jmp pop adc push pop popa daa add test pusha daa inc fstl push mov test enter stos fiaddl std (bad) das insb arpl ljmp adc adc xor adc je and (bad) mov daa jmp movb cs sbbb leave sub mov lea mov lea cmp ja dec push pop roll outsl sahf in cmp push and and sub iret mov arpl popa lea xor pop aad lds out mov clc mov test je jg adc add fisttpl push add sub cmp leave and push scas (bad) sub cmp push mov sub ss inc adc cli push outsl or adc les sub sbb scas sub pop andl sub push lods inc and add cmp adc rorb push inc jmp add push pop push sbb add jnp sbb les jecxz cmpsl enter pop leave jns lahf sub push or add or ds aaa inc and jge jne jge (bad) sub testl ja mov adc fnstsw cmc (bad) xor and hlt shll mov and (bad) pop jecxz (bad) and mov dec sahf call adc xchg mov push inc aad rolb shrb jnp jae jbe add sti push (bad) leave or ljmp outsl leave mov loope out inc imul int mov xchg jmp mov inc insb pop cmpsl sub in push loopne subb add or pop call inc inc cmpb (bad) mov or call xchg fnstsw mov xchg movl mov cmpsl push test lea inc jbe clc push mov pop mov and sub dec outsl in lahf sub ret add negb adc in (bad) jnp push inc push mov inc dec jne mov push inc xchg test push push loopne gs or loopne sub leave push jecxz push add push pop pop cld or jne notb mov inc xor mov js pop sahf je dec mov in (bad) addr16 pop jl add sbb (bad) push lret mov pop cmp movsl and cmp hlt push (bad) cmp pop jbe push aad sar pop (bad) jbe clc inc add adc lea pop push dec pop call repz test ss sub push fildl add jo mov pusha fisttp or push je clc add adc mov push push inc jmp sbb idivb mov mov add scas scas mov daa out pop movsb leave and mov adc mov mov jmp pusha and sti xor addl sub sahf push js lods jbe sub sbb xchg cmp aam cmp xchg push jg mov xor cmp jne or ljmp xchg les test pop loop mov or cmp mov mov aam imul sub push stos jbe jle sub adc or enter mov testl mov add aaa jae fldl pop cmpl pop jle movsl (bad) inc xor and push or and inc ja aas push inc xor xor call xor xchg push or mov mov pop push pop cmpl mov pop pop cwtl je pop cmp inc movnti add testb mov cmovb push push roll je xchg mov outsb sub aaa and pop or imul push fisubr movsb push jl lea fsts stc rcrl sub push inc subl lock sahf xor ds jo xchg inc or xor add je clc test mov xor (bad) ja das xor mov in or add dec icebp pop jbe adc nop push inc movsl mov mov mov mov cmpsl test outsl mov and xchg bound ja mov pop adc and dec cmp sub push or stos adc fist stos jnp add mov das aam jge es ret pop mov addl mov mov mov xor mov sub test mov pop add add xor add mov jle push out pop div pop jb lea rcr pop mov ja stc bound insl jne popa sbb int3 jge test adc or ret or push push and and add add push aaa adc cmp (bad) add push mov js xor aad pop bound add (bad) testw pusha mov sbb cmp jb insl or xchg inc cmp xor mov icebp cmp xor or hlt pusha fwait js fisubr push mov sub sub mov push arpl ja ret mov add jmp ficom and iret sub push push mov jecxz dec push hlt or pop mov and push pushf adc dec xor cmc lods test js pop lret (bad) in mov aaa stc mov add mov sbb mov lcall fnsave test clc inc (bad) or mov xor jle pop loopne cmp add pop adc inc clc ljmp mov inc stos add push jmp push xorl fdiv jno xchg cmp push inc es sbb inc lods jae fucomi mov lock imul mov and sub inc push insl jne aam mov jno das int pusha add mov dec push cmp xchg mov (bad) (bad) fstpt jge jp inc lds ror sub mov test sub ror pop test xor aad (bad) (bad) lahf add roll stc sub in imul pop adc jns and fist pushfw ret add cmp add add aas pop pop or in mov or add pop cmp incb mov inc and add scas dec stos stos inc mov ss mov pand aas pop jmp and pop decb clc mov movb or pusha imul or sbb adc xchg add adc and inc hlt insl insl addl and inc add movsl adc (bad) out adc or dec or lret je or jmp mov shlb adc ficomp dec add adc ret aam jbe pop data16 add lods mov or mov jmp push ret (bad) (bad) pop inc push add xor ret or repnz push jne or add popa or jbe (bad) cmp jne adc add mov mov sarl pushl ret scas add inc je pop push xor mov push add sti fnstcw pop add jne pop into adc aad loop pop jmp daa cmpsb in dec mov cmp addr16 pop sahf mov xchg sbb and push cmp cltd adc and mov dec or inc inc cmpsl or add popl out outsl stos fwait jle std adc push inc cmp jb add fstl push push ds push and xor adc jo push mov (bad) ds daa or addr16 mov int3 jp mov inc inc push ret adc add test xchg mov clc lea add js mov push add mov cmpxchg addr16 xchg es mov or out outsb sti imul cmp (bad) stos mov and sub push das and bound mov testb xlat daa push stos pop stos pushl insl arpl push add or bound adc (bad) jl call pop dec std scas and mov movsl adc push pushl mov push or mov das inc and les mov add jecxz inc mov inc or adc push cld mov out push pop mov push pop or push cmp lret fdivrp fsubrs or or fimull out or (bad) jae sbb sbb xor test shlb or cmp mov jne pusha or adc pop add pusha bound lcall add pop or jb sbb add xlat jge imul mov mov popf sbb push lret sti inc add nop cmp jl fstp dec inc shrb push lea sbb push insb cltd mov cld sbb repz ds xchg push mov popl sub lahf push call dec and pop in roll lahf mov test or xor sbb sub or add mov and and mov cs add sarl test add jmp daa pusha (bad) pop inc xor fisub pop scas inc xchg mov mov (bad) cmp cld insl jmp inc cmp jne push rclb aas fwait jae (bad) push aaa mov inc push jmp pusha sub cwtl xor das movsb fistp cmp sub je push push push cmpsb les push or das adc add cmp jne decl jp mov mov pop mov out mov or add mov push jo inc xor push jno repnz add or push movsb adc sahf ss pop xor and inc pop insl add incl aaa or es fisttpl ret push inc dec adc push rcrb popf or fsubs pushl mov divb out jo xor sti and cmp inc cmc or or inc incl cmp (bad) push clc call insl mov xchg repz jmp sbb adc and add lea add rcrl lods clc fimul dec and lods es jne ds add inc movsl inc in or cld les shr sahf adc add mov fst leave jne lret std je mov stos dec dec je dec cmp dec mov or out fdivrl jae and sbb push inc daa cmp ja mov xor adc mov sub ret and add or mov mov mov or cwtl mov orl ja lret sub cmp push mov es cmp loop jae in insl jne loop inc mov mov add ss jae subl mov push push inc psllw int and jmp xorl ljmp inc cmp mov pop cmp push jne addr16 (bad) and push mov sbb fild jmp inc fbstp arpl cmp inc pop imul fisubr inc je sub lds popf ficompl pop sub push xor lock inc push and cmp test outsl push jae add sbb jae push pop jb cwtl add gs adc lock or and jmp add mov or or ss xchg jge inc insb jne dec mov jge idivb imul jnp (bad) aad xor push push in push cmp push lock inc or add xlat and sbb adc cmc cs (bad) movsb add sbbb xor cmp push add (bad) repnz and add add fbld jmp cmp xor mov or int3 cmp mov adc rcrb aam stos push cmp imul mov mov in lea mov push mov inc loopne mov addl sub xchg cmpl mov adc dec ret jmp lods hlt push (bad) aas jl jmp or stos jle sar fildl add je mov test loopne sbb or push adc fdivrp inc clc add out add pop stos wrmsr mov push pop das push in aas mov in jle inc or subl mov outsl test repz xor push sarb fildll aad adc jmp (bad) dec adcl testb ret xadd push push in pusha sub stos das inc imul xchg fwait xor mov mov or add or je xchg pop daa movl outsb lcall lea mov inc sahf jmp scas and lret insl mov fldt add lock inc push jmp mov repnz and pop jb (bad) push mov adc sti push daa loopne rorb sbb add push inc fistl scas xor pop add sub cmp push (bad) dec inc aam inc loopne xchg push andl pop lret push imul pop inc xchg out and xchg daa sub and dec out mov out in jmp shlb jbe jmp fnop inc add push inc dec jmp sub adc pop or add push pop sti push xchg sub dec mov loope jmp test lock mov imul pop pop pop mov mov cmc pushf sub cwtl or sbb pushl rcrl add addl cs jl les sub inc test add call mov mov adc or or adc mov mov pop fisttpl fimul sub adc mov mov lds pop or fcoms cmp inc je stc nop cmp add pushf sub xorl orl fldl psrld clc jmp push push pop cmp or sub push push jne push add xor push push jmp test add aaa cmc or push leave out (bad) fdivrs mov jge adc adc ss adc xchg sahf mov test icebp add rorb pop mov arpl rorb clc call and inc fwait mov scas xchg xchg jo enter nop pop add scas leave adc add ljmp add adc push xor fisubrl push or rolb rclb fadds or inc adc mov (bad) sub lret cld sar call imul pusha pop or sub dec add inc in or inc mov ljmp push cmc pushl adc test pop or je cli add cmp or aas pop xor mov cmp inc mov cmp add jae leave jmp dec add shll pop mov mov and jmp lea sbb les mov ficom add jle mov fstpl push cli add xchg je dec fmuls jecxz hlt fnstsw jne adc sti add stos clc mov mov dec pop cmp movsl fiadd cmp insb clc xor xor inc inc push (bad) je mov (bad) mov cmp sti out rolb out jg je dec add and xor dec loopne mov idiv lods sbb jno inc pushf insl aam and or or sub sub fisubrl cmp sbb mov aaa icebp rorl add lods jmp jne mov dec paddd push inc out sbb or cmpb inc test push dec push xor mov bound pop inc cmpsl or jmp and push xor adc arpl mov ljmp rcrl mov lret pushf je inc add sub js rcr fistp xor fisubrl shl add push mov pop neg add pop or push mov sbb mov mov add decb or icebp dec adc mov xor gs bound cltd or (bad) adc or fimull adc das sbb mov adc pop jl sub jg hlt sbb cmp or jne and aas and scas cmp dec push ljmp lock lcall (bad) pop psubq push xchg mov add cmpl mov xchg mov idivb push or push stos ret mov jge cwtl das int push xchg fimull inc adc jbe sbb fcoms push in jmp addl sbb sti inc mov xchg xchg xchg mov push ret and adc mov mov xor jge dec imul out xor cltd pop mov adc jg inc pop rorb jne push sti sub mov stc push fmuls (bad) lea lea mov ja out outsl lock inc orl mov (bad) pop outsb mov pop out fdivrl push adc cld lock push add sub dec mov addr16 jne add ss ret inc movsl imul aas jle outsl xchg fs inc add fdivl inc mov testb or add pop not and loope inc int or jmp in mov xlat sub pop shr fisub cld cmp insb sbb nop mov adc xor fisttpll sub mov fstps sar dec test inc sub xor pop push pop pop pop sahf pop inc adc fistpl arpl test int3 jl mov nop es add scas cmp nop fisttp dec mov fstl or sub add mov mov test inc movsl or adc inc xor ljmp mov mov push add or jmp dec dec or inc pop mov xor adc pop sbb adc iret cmp fsubr and lret test lea cmp mov jg xor or fistpl inc cld mov cmp add dec mov lea inc (bad) aaa mov dec and pop xor test mov mov push sbb rolb testb aas orl cmp sub lcall addl dec dec push add daa adc outsl ja mov or mov xchg pop push daa cwtl icebp mov dec mov dec add add (bad) aad push cwtl xchg and mov push bswap mov or cmp push into setns and pop sbb push dec test sub inc les inc sbb scas mov sbb mov xor (bad) imul add loope sbb cwtl lcall fidivr mov subl or je lret mov or mov and and add mov or jb push pusha scas push lds pop and movsl lahf sbb fnstenv jmp mov adc pop inc lock or mov ret lock dec and adc inc nop adc xchg push inc mov hlt adc add fwait in sbb test psubd outsl je cli mov mov dec (bad) iret jne fadd or adc dec pop cmp push addr16 xchg pop xchg enter out testl jne pop add and leave icebp inc addr16 and or cmp icebp pushf and loope jo jle dec lcall jecxz dec leave pop cmp jge iret enter fnstsw jno mov pop mov decb jne int3 hlt int mull or sub es sub mov sbb or sub pop sbb adc or xor fsts and push add mov leave or mov testb cmp mov sub or stos mov push mov cmp test mov repnz jne add aad xor cld jbe sub lea jne,pt cmp popa outsb dec cmp sub sbb or mov dec lds sub cs sub movsb and std sub lea push pop pop jl js je jbe push loopne xchg mov push pop jo jp lret in insb gs test mov add add xor loopne inc xchg mov push add mov inc push or fimull lods mov jb adc mov push adcb or adc add or add loopne adc out pop push nop into fmull mov xor pop in test call pushl jmp inc inc push loopne pop aaa cmpsb dec jo mov dec or sub xchg in mov mov cmp sub sti add or cli pop push xchg add ret add and or and pop mov sbb pop test push cld sub je push popf sub jne xchg push in jb stos fnsave adc clc pop testl sbb insb push push (bad) push push int loope imul popa inc arpl add in push rorl popl dec pop fstl mov or mov aaa loope push and mov add rorb ja dec rorl push adc (bad) loopne pusha or push rorb testl subb daa jo dec or stos sub sub mov dec cmp or sbb jns daa idivl nop dec inc call push fimul and dec adc push add xor push push push imul xchg addb or sub mov cmpsl test sbb xor cmp test mov cmp insb and push jbe jno addb add xor sbb and int lock and adc push cld test xchg and push mov mov rolb stos jbe add je pop scas cmpw lock (bad) fidivr adc and lods mov or xchg (bad) aaa test fildl push dec and in mov push fisubl mov push fimull sbb ds test stc jb push hlt dec pop fdiv sti jb ret sub (bad) jb adc adc mov jno inc (bad) push mov push lahf test inc push or js cmp insl dec or push mov dec fsubrl dec sbb pop and inc and call inc xor add add push adc xor notb xor xor mov subl xor mov inc out mov icebp (bad) or or pop stos lea lret add mov (bad) jae and mov xor jnp push lret push std sti or cmpb xchg and or pop jne inc (bad) clc sub lods jno or pusha pushl mov je popa mov and (bad) adc jmp dec adcl (bad) mov mov dec je stos out xchg sbb das jmp mov mov mov or cmc (bad) sarb dec insl or jp pop xor popl stc cmp mov addb fwait and mov aaa lahf or xor xlat or add jge das sti add sbb mov sbb pop ja jbe jl jle rol inc fs adc mov fisttp inc sbb add ret (bad) add pop sub push notb cmp push mov es aad pop push roll inc push movsl jmp das sarl les add mov ret cwtl int3 inc xchg nop mov sbb lcall cli mov cmp dec mov inc adc sbb push lock push dec sti stos loopne add push mov inc adc push je dec mov push jne sub test or adc mov movl or inc movsb pop fwait jge push orl loope dec xor adc repnz adc jge cvtpi2ps push add ds test loopne sbbl repz push mov push push lods mov push push push push push push cltd add jg cmp es jl and pop call jo (bad) (bad) imul out mov insl stos mov lea fdivl inc and lds fimull hlt int3 int push stos pop or scas mov cmp mov (bad) cmpsl clc sub pop push pop jmp testl xor xchg add mov xor sub jne sub lods subl pop and mov add mov jnp rorl pushl add sub add pop push lahf mov pop adc sbb ljmp ljmp push mov push jecxz out push inc rcrb dec imul insb add orl add or testb push fldcw icebp fcoms push or and mov add mov mov fstl and out dec sub xor test inc sbb (bad) mov ret je mov adc push adc ljmp sub (bad) xor fcomp push inc ja adc inc xchg and mov jl and call sbb xchg push stos and adc or stos inc icebp ret cmp push mov sti test adc in push lea fstpt push imul dec push pop les (bad) jbe cmpl sub mov lret fcompl leave pushl lret dec xor cmp and adc (bad) out and ret fmull sbb mov popa inc aaa sbb sub ljmp pop pop mov arpl inc or daa push adcl jbe jbe pop or nop inc push adc inc push sbb ss and and sbb sub xor fs inc sbb cmp insb cmp stos inc or inc pop fs inc push dec dec push nop inc push sbb inc push sbb push insb jo js je inc jl mov xchg leave and mov xchg cwtl xchg pop jb pushf mov and stos sub mov mov cmp fcoms rcll add pop and xor gs clc aas jle or cs add enter xchg adc sbb pop cs mov inc xchg or sbb jmp pop aas adc jb add sbb cmp mov inc dec jne je mov mov and sbb mov or add cmp shrl stos or pop bts jmp jo test adc call into mov push sbb mov jmp pop dec fisubrl and fidivr fadds xchg adc adc xor fldenv or aad and jmp push cmp neg dec (bad) jge sbb mov mov inc inc into ljmp or outsl fisttpl cmp jecxz sbb xlat jmp or test push lcall pop jge incb rclb jmp or lea stc add add push add dec inc mov and push aam movsb lret imul nop je mov xor pop dec (bad) adc and push aad orl dec int3 or add cmpl sub add out push inc mov push hlt sbbl jne adc sub pop es push pushf dec adc dec orb push (bad) add push ja push pop cmp xor ss mov or sub mov mov mov bound test dec rol out outsl rolb inc ss push (bad) xor mov dec lods jg fisubr (bad) int3 mov push sbb divl push pop dec aam sbb xorl push aad pop mov and and inc sub mov jmp and add add imul aas mov push lsl (bad) rcrl or pop jmp adc shll or gs jecxz xchg adc sub call sub loop sbb addb popa and jns mov (bad) inc lret add and xchg xor mov orb mov pop pop add mov jge add adc bound xor mov jbe or leave pop adc push dec add and fmuls jns or push adc mov or xchg cmpb je or push cld sub mov add testb adc sahf xor inc push mov or push push jp mov sbb ljmp mov add repz mov adc in add xchg int and mov dec and sub or leave mov push jecxz push adc cmp pop ret push mov xor mov sbb dec hlt mov test pop add push inc adc add adc add pop cwtl xor add push je lahf (bad) cmp jmp mov cmpsl lods add xor arpl push or enter xchg and mov xchg push rolb inc push mov shr add mov test push scas aad jae jecxz jns dec rcr mov test or mov or pusha mov or nop sub fsubrl orl or out pop and js mov or add or sbb jbe adc loopne pop sbb andb jg sbb mov dec add push sub and and and imul sbb (bad) push mov adc cltd pop or imul sbb stos mov mov loopne rorl and mov cmp mov adc jge or jmp mov (bad) xor rolb mov mov popa push or push or fimull push mov or imul test push or fild pop pop pop test add pop push shrl repnz andb add sbb sub or add loopne xchg popf jae sub lock pop push inc or adc or mov or mov cmp jo icebp xchg ret mull or xchg loop or sbb (bad) pop (bad) shlb fcmovnbe ljmp div fisubr pop xlat das and out jb cmp fnstsw jb cmp jbe dec sub sbb pop adcl push (bad) mov (bad) fadds mov mov fldenv ret dec ds push add lcall imul xor and cmpsb sub jle jb or add pop lret movsb pop adc push (bad) in (bad) scas jne jmp add or push add push popa push mov movsb call ja ja cs mov add jl add sbb mov les xor jb je sbb and fwait or pop push and mov clc jg mov inc jmp cmp jne addl add mov dec icebp cli fcoms inc or (bad) aaa dec insb pop or mov pop push shlb cmp cmpl adc and push adc xchg mov out jne cs and or in call cmp test push test das jo mov jnp das mov pop add popa cmp push je xorb cmp cs or daa adc dec lret push add lds dec stos and add test mov xchg mov cli mov jbe (bad) mov jne test add push dec ds je inc sbb xor ja loop inc mov jbe popf insl sbb and daa outsl jle mov and negb (bad) mov lret mov sub adc inc add popa mov inc jmp and fnstenv adc and sarb dec push dec push lock pop jne push nop sub enter pop ret or bound pop mov call jns mov mov mov je loope xchg es insb je mov std jg ret out push cmp ja add cmp fiaddl rorl ret (bad) cmp and add mov mov cld rcrl or xor inc mov loop add addl push push pop je pop push test mov push fcmovne test push and jecxz push or cmc push xchg mov sbb mov xor lock xor inc push (bad) or and add and or pop xchg jne fcmove mov push roll ss out rolb push mov fimull insb adc xchg sub mov (bad) aaa push std cld mov or jmp add mov xlat push nop sbb cmp pop cmp (bad) mov adc or sbb rolb mov add rcll (bad) hlt inc add dec fildl xchg adc pusha sbb arpl inc jecxz insl pop arpl mov jae pop push mov cmp sub and sub pop cmp fdivrs push (bad) mov dec orl mov adc push dec cmp insb xlat or push cld xchg xor dec jge int3 xchg fistl lahf or push push lcall dec or into inc xor add jbe push xchg push and add sub cmp mov icebp adc mov add inc ret lods fadds lret fdivrl andnps or fdivs shrl out cltd mov sbb add test mov mov push adc dec inc lock or mov leave cmp and aam subb jp popa add sqrtps lret pop pop jns or jmp and jle add xchg jnp arpl inc or je sbb inc and inc jmp jmp (bad) push push sbb inc das jne or imul and (bad) fdivrs stos push add inc pop insl arpl cmp mov lea pushf (bad) ss add pusha ja push mov sub jl dec addr16 test xchg dec push std (bad) cmp jge cmp jle and decl jo sub fstps lret push mov cmp sub repz inc pop les add icebp push inc adc inc xorl mov pop adc sti (bad) pop ret sbb or mov cmp je xor in mov cmp adc std mov inc or movsb push bound mov insb js icebp pop jmp out pop jns cmpsb je es add out adc adc hlt fiaddl push aaa jge jecxz stos mov inc call sbb lock pushl in push arpl push outsl stos inc xchg subl and add or push xchg push xchg pop mov jl xchg rep lret je or pop jo fcomi add add stos mov (bad) mov sub test lods movsl cmpsl adc jmp xor xor mov notb jnp outsb pop testl pop adc push mov in fidivl mov jo lods (bad) mov imul je push out mov imul add pop pop push dec jo pop sbb jbe test sahf sbb test mov dec xor icebp dec (bad) adc in popl jnp loope push mov mov (bad) cmpsb jo mov pop push jmp xchg push insb mov push pop push mov xor leave pop jb sbb push aad lret pusha jmp divb rorb add rorb add push jl lea orb pop sub pop (bad) je dec inc lds fmull testb testb add lods bnd add add mov add test add inc adc js cs dec dec inc arpl cmp adc fsubrl and adc or in sar adc idivb push cli cmc push mov push adc dec xchg or xor or jne fnsave movsb movsl and movsl push cs or mov adc dec push fstpl add pop mov stos jle cmp push or pop jb pop and (bad) and add lods ljmp imul mov sub jnp ret into cmc add cmp cmp push iret adc and and movsl insl jne and adc repz add sub push in and xor xchg fwait jb cmp jns and pop into mov lret jbe insb movsb mov and mov in pusha push or sbb leave in jl or add test mov rcll pop inc outsl or cmp aas add push xor mov push push or loop mov jo jle mov mov cmp insb jno aam mov add imulb lea or mov add fstpt jmp fcmovb mov jl decb or mov ds adc mov push cmp gs add ret mov sub mov test push dec fstps rolb repz in int3 add mov sbb fwait outsl dec xor xor fdivs cmp adc sarb jo insb bound adc adc push xlat add jb adc jae xchg cltd mov mul add cld dec jg shr mov adc sbb scas mov mov push adc inc dec mov cmp lods imul insb jb xor nop fisttpl inc pop add adc (bad) mov mov sbb add adc mov ror jg outsl xchg pop fcmovnbe jmp rolb jle cmp jb rorb mov push pop (bad) loopne mov sahf sbb outsl jo inc adc jae test test sub mov or out mov lods cmp icebp dec repz adc test jno adc inc or loopne ficoml or lea outsb or ja xorl rorb sub loope sub mov xchg and stc mov inc adc mov inc ja inc adc ss (bad) mov dec ss inc cltd les sub add inc mov fild out jl dec jg sbb pushf cmp (bad) cmp popa dec je inc and pusha mov jmp sub add sbb xor (bad) xor popf pop fist mov xchg adc movsb scas and push rcrb or nop jns negb sbb insb je rolb roll adc adc ds and jbe dec je dec jne push cmp or ja in rclb jmp sbb cwtl mov insl xor cmp rolb sbb jne push jmp popa push aaa mov sub aaa mov (bad) cmc popa mov or inc or dec or je pop rorb pop adc cmp push mov add add push aas (bad) jp cmp je cs and sub adc push test add and mov push pop (bad) popa je add add orl (bad) pusha jno sbb pop push cmp jl iret jg xor adc add mov hlt out push cmpb sub xor push lea mov mov push subl into xorl adc pop jb test scas sbb push loope jmp mov inc add xlat pop (bad) outsl push mov pop dec btc and jl or or push add aam mov cmp (bad) or insl inc inc dec add sub (bad) int push add push ret mov movb or cmp inc mov bound sbb sbb data16 jae lods pop (bad) insb lods outsb and or sbb imul sub pop mov push aam mov je fisub gs test jle inc pop add or inc movsb add test dec mov inc pushf sub inc inc xchg jecxz inc sbbl outsb insb adc int3 or (bad) mov int dec push es push mov push or mov or leave js cmp cmp xchg fwait in sub clc ss cmp cmp fsub paddusb popa pushf jg xor lds push or inc cmp push call jle push into mov mov (bad) mov loopne pop mov push push ret add cmpsb push test and or inc jl std clc push push jg jmp je hlt sbbl jns mov (bad) xor sbb lock or jnp enter je push hlt inc cltd add loopne mov mov and (bad) rclb xchg mov call push pushf dec mov add popf cltd sbb push push mov mov nop sbb movsl pop rclb inc test je add add mov gs (bad) jno inc jp push aam arpl and pusha test das add lret adc test dec or push push dec loope mov or pop (bad) sbb adc xlat je cmp adc (bad) sbb aaa test or inc and mov sbb add mov jne imul inc rorb pop push je jg rclb xor je sub pop adc mov in push inc (bad) je scas push mov out mov and cmp call in jmp add and imul lret mov adc dec inc mov ljmp or or cld es call xor add out mov pop adc jmp push jnp test inc xchg movsb mov and mov sbb je dec test adc pop ret frstor and lret or repz dec lea clc mov testl stos xchg in icebp push mov fildl rcll jb push push js dec je pop testl xchg aaa sub and ret sub push push or mov (bad) rorl or add je test xor ret cmc fadds sbb inc sbb mov cmp jb cmp jb or push push dec add adc or lods add xor repz das add clc cmp add aam (bad) maxps jno xchg add aam mov sbb mov inc mov movsb (bad) (bad) out cmp insb adc jmp sti orl mov fdivrp nop mov xor fcoml icebp in fldl ret sub push pop sbb add push jo dec stos ja push add (bad) out sbb add add add std mov and pushf lea inc sub xor sbb pop sub repnz mov adc jge ljmp inc push mov inc imul push rcll or arpl mov inc push je dec cmp jle adc inc adc in adc or cmp aad ret daa rolb pop imul fcomp mov push loop and (bad) jne sbb inc mov or add or and scas inc pop imul jl pusha xor je or sbb adc xorb les add int3 sub or mov std mov or test mov fs loopne and add inc sbb aad pop mov jbe xchg inc jl je fmuls mov mov mov cmp cmp (bad) (bad) xlat (bad) pusha call fildll add movd adc ret xchg fistp mov jb mov sti test into mov jbe jmp jne repz adc and faddl pop lds test ljmp push rclb sub sub inc out adc mov pop sbb mov addr16 adc or sub inc sbb clc clc and sub mov movsb lock std or insb std adc (bad) mov loopne mov test cld sub adc in and push mov cmp and pop mov rep mov inc push pop pop inc pop add jne add mov xchg xor adc jne adc pop jb mov mov inc in mov or sbb movl lock mov inc daa xchg popf or insb sbb jne sbb pop loopne cmp mov xchg sub mov xchg dec mov add out or cld pop stos and dec push jnp fist shlb mov adc pop sub fidivrl lea pop add jnp mov adc mov inc daa scas and notl (bad) jo sbb imul fidivr inc add add xor addr16 test adc and or mov fldcw es push pop add stos out add (bad) loopne jne adc sbb insb out pop das xor ds push inc add hlt or pop fiadd and xor test shlb rcr aaa add add loop pop cmp or adc pop cmp adc inc mov fs or xchg es pop pop sbb jb dec cmp mov push push xlat pop add les icebp int3 (bad) mov or jae and xor mov daa add lds lods imul pop cmp js and inc ss inc or inc adc add enter push jnp mov cmp (bad) adc add add push and cmp mov call std (bad) cmp push aas das cmp enter mov or add or or or dec (bad) lret leave cmp daa pop mov std add leave adc or or xor push clc insb and jg mov xchg push enter mov xchg inc lods mov xlat pop or rcll arpl fdivr ss dec mov xchg fwait dec mov mov cmp dec pop sbb xchg ss push adc imul pusha xor fadd ljmp mov sar jbe cmp cltd cmp (bad) mov or js in xchg insb orb fwait cmp mov xchg movq leave orl xchg fbstp (bad) or lods sub cmp mov rolb les xor mov jecxz shr add pop inc nop adc leave and add xchg xchg arpl je xor enter sbb sbb es cwtl dec lea (bad) (bad) or add lds add fistp int dec push mov xor decb cwtl aaa inc imul xor cmpsb (bad) adc sub popf (bad) lcall xor add inc sbb jnp mov popa add inc inc ffreep (bad) lcall in iret adc imul sar dec push inc popa push or scas int adc loop and fildll sbb fsubl aaa mov jae or add (bad) xchg jb les je and cs (bad) fild xor inc outsl jo jb addr16 xor xor dec gs call sub and imul or scas fstpt add add or stc rcrl and and pop mul pop add mov or add data16 or add or adc add jg (bad) xor roll pop or or or add xor add jg and add add inc xor add enter arpl inc push sbb push add or sbb or or pop nop inc or mov jnp adc pop or or (bad) je sti or imul (bad) xor sub insb in sbb xor (bad) xor fdivrl jl xor sar add xor and xor (bad) xor (bad) xor (bad) repnz xor sub xor (bad) xor fidivrl mov sar push xchg dec (bad) xor cmpsb data16 xchg xor (bad) xor (bad) ss (bad) xor (bad) (bad) push mov dec (bad) xor cs outsb out push sahf xor (bad) xor fidivr mov sar add mov shll popa loope lcall xor jno or dec leave sub cmpsb imul cmpsb imul imul cmpsb imul mov cmc or lcall imul imul rcll add je xchg add push push rcl xor (bad) xor xor dec (bad) jae repz dec (bad) xor mov xor (bad) xor sub dec shrl jmp sbb xor fwait fwait pop pop fcmovnu xor (bad) xor cmp dec sarl sti pop pop dec (bad) xor xchg xor (bad) xor daa cmpsl cmpsl addr16 xor shll out pop dec (bad) xor xchg xchg push push xlat xlat xor (bad) xor aaa mov ja xor (bad) ja (bad) (bad) cmovge xor (bad) (bad) dec dec iret iret xor (bad) xor das scas scas outsl (bad) xor shrl out pop pop dec (bad) xor lahf lahf pop pop (bad) xor (bad) xor aas mov dec sarl lcall inc add pusha adc lcall sub imul imul jmp je inc addl ret and andl js lds imul cmpsb imul imul dec roll or sub xor sbb pop cltd movsb jmp add add fs push sbb or sub dec xchg push punpckhwd adc adc adc push pop sbb dec xchg sbb sbb (bad) std pop icebp fsubs or fnsave orl adc leave nop or adc push inc leave nop or sbb xchg and push add mov push add cmpsl or jnp adc sbb out roll sub cmp dec (bad) xor add jo mov mov aaa jae insb mov push imul pop insb mov push xor dec sarb and addb outsb sub loope mov and insb gs xadd call (bad) xor inc rcll add sbb dec (bad) xor and xor inc push cmpsb imul cli lcall sbb add or jmp or or add sti lcall or add add or lcall inc fldt dec stos pusha pop mov fbstp push outsb imul outsb and arpl mov dec divl outsb pop int3 xor add insl imul arpl gs outsl dec dec jb jle out pop dec inc push dec inc dec xor cs dec dec mov gs sbb mov inc jb gs push gs popa insb jne inc jg icebp add insb outsl push and inc js je fimull gs insl jae cmp lods pusha dec fcoms pop push mov stos movsb bsf fs or sbb (bad) (bad) (bad) jmp and sub sub cs xor xor xor ss cmp cmp cmp ds inc inc pop inc std incl inc inc inc inc dec dec dec dec dec dec dec dec lea decl pop pop pop pop pop pop pop pusha popa bound loope sbb imul jno jae jne xor jbe js jp jl jle add imul loopne sub sti push dec dec push push adc jmp dec inc push add add dec dec inc adc insb in inc inc sub xor lock jno jo insb imul jae insl popa mov ret adc je insl mov je and adc push pusha xor mov fisubl lods mov mov jns or inc sbb insl shlb popa arpl daa pop mov jne sbb insl and insl insb insb jnp fs push insl and lahf pop (bad) fimull xor jmp (bad) pop dec fmull data16 bound shrl insl bound jne mov and jbe and jbe imul push das adc fidivr cmp bound mov outsl cmp and sub jbe imul lods ret sbb insl in outsl pop push insb insb popa outsb xchg sub pop movsl imul insb jb sahf arpl push sub cmpsl popa xchg fldcw inc sbb outsl jb repz fiaddl imul insl lea data16 push test gs jbe add and das xor mov mov fimull cmp maskmovq popa sub in sbb mov fs xor cli mov mov into insb gs orl daa aaa jecxz imul aaa negl enter aaa xor or jbe xorb leave fwait ret sub xor pop sub pushf mov sub fsub sub leave imull adc shlb outsl jbe insb arpl cmp sbb outsb andl cmp jne mov mov fmuls xor mov cs repnz and jmp push sub enter sub out sbb mov ja bnd xor xor mov sub jae xchg gs mov sub dec sbb push xlat les pop fwait icebp jp xchg inc faddp add push mov adc (bad) and inc sub cmovl daa rcr mov add addr16 and jne add xor popf insl (bad) and dec arpl jb jg gs outsb das adc inc outsl cmp leave loopne sub xor test add xor sub dec add mov xor add add aas (bad) add add in sub or mov add in add add push sub inc push mov or in add das add enter adc adc (bad) (bad) lcall lods addb xchg lea xchg xchg xchg xchg xchg cwtl cltd (bad) (bad) (bad) lcall lahf mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov (bad) mov mov (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp (bad) (bad) (bad) (bad) fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc div clc stc test sti cld std (bad) call lock adc adc push and and popa jg dec cmp insb push push sub mov and jns add das pop rclb outsb das or dec sub dec loopne pop daa out mov sbb dec outsl jbe dec lea test sub push jns inc push (bad) test inc in dec ja sub mov inc out or les push test adc dec fidivr (bad) sbb addr16 push push mov inc inc aaa jns aas dec adc and mov popa inc inc pop or adc push pushf jl arpl or adc negl jne inc cmp das add and repz fwait sbb dec bound sub add movl pop dec inc insb and cmc (bad) mov fucomi jns mov push pop inc popa mov (bad) fisub jb jns adc dec mov xor xorl jo inc pusha mov movsb cmp andb lcall pusha insl add ja sbb out inc dec jo and insb mov imul bound sub in popf enter mov test outsl and flds leave sbb gs dec add mulb aaa lret test sbb fimull (bad) cmovp pop pop sub add daa add sbb pusha ss push jae outsl cmp sbb ja pop popa psignw jbe jbe dec and push push push dec dec lods fnstsw inc dec add jns add mov pusha sbb and gs or lock nop ret imul je xchg dec dec and mov mov xor jb (bad) xor mov xchg add popa mov mov push mov aas mov adc dec pop nop push lods pop je outsl adc sbb (bad) fldcw or jl fldt add cmp add add dec roll sub es insl dec aam xor jle sub sub jnp into pop xor ds cmp pop and fwait das sub out add mov xlat add or sbb outsl jo pop xlat jge cmpsl cmpsl and cmp mov ds lret daa pop fnsave loope push or in fisttpl sbb je jo ss sub pop and repnz xor pop or xchg push es xchg jo (bad) xor ds ja loop cmc fs pop enter xor add and (bad) hlt (bad) insl lcall add call push aaa add sbb add fucom pop faddl fcom ror xor (bad) xor mov jnp shrl xor negl mov roll dec (bad) xor insb push xor (bad) xor push dec dec inc (bad) xor sarl sub sbb dec (bad) je hlt (bad) scas add mov (bad) xor sbb fadd mov xor roll xchg js fs dec (bad) xor dec sub adc call (bad) enter and scas mov rolb push dec push inc repz outsl ja lock outsb pop push or or fcom mov cld inc arpl push imul and lahf inc outsl add pop mov push movsl loope jo ret dec cwtl xor test adc pop les sbb or xor cs mov push adc mov cli sub scas add dec adc sbb inc rcll adc aas lcall incl pop cli rcr test dec add jmp stos ss inc cmovb fldt adc add lods (bad) mov insl imul scas arpl cmp adc add push enter add push lret sub scas jbe mov pop insb adc add aaa push push pop dec push jns xorb outsb push add jmp cmp pop das lret sahf jmp inc jb gs lds or jo fstpl or mov jns add add pop insl mov fs inc aas and xchg pop add push pop add pop add inc cmp je ret test punpcklwd mov outsl add ja roll and jae (bad) jne mov push outsb xchg outsl daa jae mov mov outsb push adc sub arpl sub inc xchg or arpl jo outsl and ja inc mov jno aad jae lock arpl mov inc addr16 pop sub popa fwait jnp xor or pop add lock pop outsb add push movl arpl test iret mov inc and lea insb mov add dec dec add fsubs fdivl inc mov sub inc cmp adc inc outsb ret jne add jecxz or (bad) js pop or xor inc xor pop shll inc xor pop inc jne out mov add out xor xlat pop xor add lret fdivl ret sbb or jmp jno mov pop or sub mov and dec push add add je popa jae pop mov outsl and pop ret inc outsl xchg dec sbb (bad) (bad) ja pop data16 insl or out xchg outsb sub ret sarl push jge movsl int test data16 dec sbb bound and push je imul mov mov add fstpt mov push jae inc loope arpl pusha jne dec addr16 or aaa ss jne insl jns fwait jne loopne jmp ss add dec dec or mov push dec xor pop mov inc push or popa mov dec fwait pop dec out mov jne inc fwait jae icebp in scas popa test popa sub insl add ret popa movsl inc mov test fsubs dec add pop mulb cmp xchg push fwait inc pop push add (bad) dec fadds imul sbb mov push daa pop inc aaa mov and inc lea (bad) and add lods lock (bad) popf popa stos mov sahf bound das in addr16 push pop dec and dec fsubrs insb pusha daa dec xchg or mov xor pop pusha (bad) pop movl or insl or jo cmp mov inc das rcrl fldcw loop test inc bound inc call das jns push xchg dec xor xchg insb stc sub fist orl shrb mov mov mov sbb dec dec mov adc jmp in addr16 insb sub xor fldt icebp xchg or or (bad) insb and addr16 pusha call sbb add add mov xor ja insb add sub push nop add test add mov inc je adc jnp inc or mov insb adc xchg adc (bad) dec add mov inc xchg inc and push enter bound in imul mov cmp movsb mov xchg popf gs mov jbe gs xchg dec cmp mov fdivrs jae mov js adc and inc pop (bad) inc push pop popa bound cmp cmp cmp aaa sub (bad) jmp popa xor xor xor bound data16 outsl cmp inc inc xor jg mov and inc inc inc daa aaa xor ss xor arpl outsl adc inc xor jb fs outsb sbb inc push dec gs xor add imul jo aad addb mov insl dec sbb xlat adc cmp (bad) je cltd push add pop push push insb sub and cltd inc adc mov inc or add ds lret push push insl inc add insb in push imul scas or mov fmuls xor arpl outsb rolb int inc mov rorl jne add push sti pop sub lea xor jno nop or inc aaa mov xchg add xor dec and bound cmp add mov add (bad) lea pop fs sbb xchg fbld sub test dec repnz add xor pop ss adc mov popa adcl orl add and cs add popf pop jae cli push (bad) negl mov test popa add mov arpl push (bad) rolb mov and cmp add pop or lcall inc dec jo xor xor adc bound push or add push pop test addb inc insb xor sti and inc jne std xlat (bad) jo aas jnp and les or xlat or add (bad) sub xorl push sbb out repz add xor push pop add and outsb comiss xchg lea push push cmp inc or loope dec fisttp bound push dec icebp xor xchg fldl pushf push sub add dec inc push sbb mov loopne xlat inc sub dec or sbb dec pop jnp add out inc insb add iret dec cltd dec add add ljmp and add into adc pop jb add adc outsl das ret gs add pop xor mov mov je and cmp jnp inc fildl sub jbe or adc mov or popf fidiv mov aaa pop fldcw or dec fmul xchg jo and das fmuls adc cmp and add mov outsb add adc cmp stc add pop or xor add fwait mov fistl insb adc jmp adc jae sbb push flds inc pop lea mov (bad) outsb xorl mov iret xchg aas pop xor (bad) jns pop leave xor xorb je fisttpll movsb mov movsl roll sti mov ja dec pusha push popf test mov jge (bad) fnstenv movsb mov adc xchg imul fs jno pop arpl xor and cmp popa jae scas xor and loope lock pop or (bad) fldl outsl xor xor das inc push pop mov lds xor and insl int icebp and lds mov dec lds lods sbb jb push mov fldt push sbb or mov inc repz testb jno daa jns adc lahf sub inc rclb loope inc cmp mov orl jge daa jnp addb mov pop pop mov push add push lret jae jg or cltd insb movsb or or cmp jnp add cmpsl dec cmp sub inc in xor mov inc or xor jge sbb inc ja pop lea aaa jge sub inc add jnp sub jne pop out and imul inc add jo dec dec lea arpl dec xor add push insl daa push loope and jg nop es jno ret inc jg xor inc jge push icebp inc outsl imul add pop pop dec outsw pop test xor inc pusha pop mulb dec test add pop fcoms dec mov add jp lds pop les xchg mov imul inc test jmp lods add inc imul add lret sub mov push add js or xadd inc sub cmp lret testl inc push lods jmp adc sub xchg jne (bad) pusha pop xor aaa incl pop jae arpl outsl sub imul mov outsl je jo bound add test mov inc adc mov cmpsl lock stos add js or pop insb pusha xchg (bad) xor pop sub mov cmovs enter lods xchg sbb add or fs pusha daa js xor xchg mov mov jecxz cmpb (bad) xor mov js movsb daa clc pop stos pusha enter adc nop or xchg dec movsb clc pop mov mov pop sysret in inc jle add sbbb and cmp add sysret and inc inc xchg sub pop pop enter and mov jnp or daa fsubrl inc pop push jno cmp mov ret sub jbe jp (bad) enter inc xor in nop pop int3 adc fldenv pop cmovbe push push aas cmp jnp pop out sbb popa pop mov bound fldenv fs and or aas shll movsb pop add leave pop loopne (bad) rcr xorl add dec sbb add ret adc and sbb pop outsb stos loop add or cmp or fdivs aam sub xchg adc (bad) pushf lock xchg enter sub sbb and (bad) mov xor dec pop adc pop ss sbb jae mov mov push aas js adc icebp inc push inc push and lock mov cmp sub inc enter repnz xor fs scas nop andb xor (bad) orl xor inc xchg mov xchg out cmp or add sub and adcb push mov out in xor mov xchg cmp fsubs fxtract cmp xor xchg or (bad) adc inc add popa sub inc repnz and add add cs cltd mov add xchg iret sub pop sbb xor cmp leave xchg xchg push xchg pusha inc xor sub or add nop enter cld mov or les lret and in leave push push sti notb pop sbb loopne inc lock pop mov cmp xchg mov inc and xorl nop mov addl test lods imul inc dec jecxz js sub and fxch and fisttp add mov jbe (bad) mov sbb rorl add pop push mov fwait sbb pop int pop cld idivl loop mov enter mov pop xchg inc add xchg push push and stos mov mov imul fcomi pop lds push fisubr pop int sub jb pop jbe or insb inc ja and xchg sub fistpl cmpsb xor outsl or gs outsl fs adc bound insb outsb sbb es jbe loopne pop je outsl test sbb push sbb imul pop jns bound jae push outsl jb jbe call jae add adc xchg xchg sbb pop and out ja adc mov cmpsb imul push fcomps sbb out popa push (bad) mov out push bound data16 in push loope xchg arpl mov add gs adc cmp and adc adc sbb mov sbb push add add cmpsb jae inc sub add or adc pop out sub or sbb add fwait or das push sbb or add push jmp pop adc push pop jae insb mov push pop pop pop jo xor rolb pop or pusha sub pusha addl pop mov inc shlb inc pop roll insb loopne push pop pop pop sarl push push pop cmp scas sbb pop cmp rolb push pop push sbb pop push sbb invd pop mov insb mov push lock pop push pop insb mov sbb push pop jecxz sub mov push sbb aas enter sbb fs and or maxps sbbl jg pop pop (bad) sbb cwtl xchg push pop ret or fcomps pop pop insb pop sub and or mov pop clc jg pop push or adc mov adcl pop xor (bad) (bad) fsubs or and and add (bad) orl jg pop pop or sbb xchg incl fsubs pop jp cmp aam fsubs or sub mov or mov lahf mov roll insb dec pop hlt jg pop pop mov push pop push push (bad) mov orl pop ss int3 or movhps cmp fild push inc pop in jg pop mov push sbb push pop pushf inc push sbb jle ds push sbb lcall pop outsb pop sbb pop mov xchg call sbb call pop xor ret roll popa pop and mov insb add addl loop pop pop sbb insb mov imul sbb ljmp sub jbe roll maxps or push inc cli js pop adc xchg push sbb jne xor roll gs and sbbl pop fsubs shr lcall sbb xor (bad) jge cmp or sub pop mov push xchg push sbb cli jmp shlb sbb inc pushl xor pusha pop xor (bad) inc push cmp or addl pop out or pop sbb xchg pusha orl pop fsubs rcl ljmp sub rorl ss lahf mov mov imul or pushl aaa aas push sbb pop daa jbe mov pop scas pandn or pop inc shlb pop pop pop sahf (bad) jg xor pusha pop aas pop fdivrp (bad) or das pop mov ret lahf popl dec pop incb shll xchg dec xchg sbb sbb leave xchg cltd sub dec fnstcw stc lds sbb movsl in xchg mov sbb sbb int mov sub dec xchg fs xchg ret mov sub xchg sbb stos sbb xchg jmp fistl sti dec xchg sub out sbb xchg xlat mov sub sub scas dec xchg sub fistpll (bad) jg lahf push pop out add dec pop movups add mov movaps mov fldl repnz add lcall push add ficomp arpl fs pusha aas add sbb pop push sbb fcoms add daa xchg enter out and pop push sbb test sbb xchg jae test aad pop jne add gs dec enter jb inc sbb jns loop and adc je fdivs sub push add arpl add sub out mov jecxz js outsl push pop incl lcall decl add aas (bad) outsb jg add mov dec decl mov push mov test jne add dec test add jnp xor push pop cmp add mov pop and add inc add push dec adc movb incl sub jmp dec inc test or pusha (bad) jns and cmpsb fild mov cld sbbl mov (bad) adc cmp adc mov inc pop mov sub mov iret mov mov mov mov pop ficompl fisubrl xor jle das rcr fsubp nop xor adc and mov pop adc add add inc add mov hlt cwtl mov (bad) push rol sub pop jnp sub pop jmp or adc pop adc add lds ret add dec inc mov push orl notl adc or adc adc and cmovno xor pusha orl pop cmpsl (bad) or pop fwait roll pop jo fbstp push sbb das xorb nop rcrl test add sahf pop (bad) movsb fsubs outsl cmpsl pop mov into pop test pop cmpsl notb nop cwtl or and mov ds pushf pop jnp pop mov mov cmp lods pop push jl daa pop pop ss roll adc hlt mov jge lcall mov repz push adc repz rorl pop outsl xorb loopne inc jmp pop jns leave mov pop fsubrl mov xor xor sbb or rcrb (bad) into add fs nop xchg add xchg das (bad) jo aas js xlat dec or and cmp sbb das add mov stos mov add mov mov mov lcall mov lcall lcall push cmpsb imul lcall jmp and das adc or hlt rcr loopne lcall lods push pop ret or sub pop gs pop mov push mov jg jl (bad) add cs adc sub scas addr16 popf adc loope dec xchg lock push push cmpsl push inc aas test add and mov flds or and or das mov xor fistl (bad) xor inc loopne dec dec insl add cmp ja daa roll repnz insl mov add add (bad) (bad) lcall js in push pop insb push push sbb ficompl dec aaa sub test add lcall mov xchg jo popa popa cmpb xlat into fstpt js add (bad) (bad) incl fsubrs shll or inc jl xor pop sbb mov adc or (bad) pushl cmpsb (bad) dec mov int clc cmp bound pop repz mov jl cmp (bad) fnsave xchg add pushf call (bad) sahf mov stos and maxps (bad) (bad) (bad) ljmp mov imul cmp cmp mov or (bad) (bad) (bad) jmp jp mov xchg jo (bad) shr out cli mov stos jbe lcall pop aaa faddl test (bad) std ret sarb jl stc lea mov adc (bad) cld mov adc (bad) lcall mov pop cmp dec ficomp repz cmp lcall notl test ljmp push and lcall ja aas and pop jge jo (bad) sti insl enter (bad) movsb fstps bound (bad) jg inc pop fdivrp lods sahf int3 pop bound xchg inc test xchg aaa out mov jmp (bad) (bad) (bad) (bad) fdiv popa adc ja insl mov pop sbb pop aad pop push pushf pop sbb aam push (bad) call call and sub jo or adc (bad) (bad) push movsl ret add adc addb mov cmp sti mov adc xchg or cs jge pushf lahf xchg add (bad) in pop imul cld mov in push cs aas cld mov mov push xchg (bad) (bad) lcall syscall mov pop inc out (bad) lcall push xor mov pop (bad) (bad) (bad) (bad) clc push sub push jnp cmp or in adc movsb pop jecxz sbb xchg call orps sbb sbb sub call (bad) (bad) decl xor rcr (bad) jno mov xor loope test cmp jecxz stos mov push adc in and xchg push das add repz jae jl (bad) (bad) jg push std jns sbb xor mov sbb ret sbb pushl (bad) call xchg pop cmp adc push mov mov adc ss (bad) (bad) (bad) (bad) clc arpl out cmp or dec pop xchg (bad) cmc or jecxz dec pop cmp (bad) fadd in cs (bad) (bad) ljmp pop lods jne jbe out cmp scas ret sub mov (bad) (bad) decl fmull dec cmp sbb loop jg push stc aas out sti outsb std pop push sbb cmpsl inc loopne movsl and inc lock lock lock loopne rolb fild fwait enter (bad) movsb sub xchg push mov push sbb fisubrl jnp xchg das std (bad) (bad) jge bound inc mov cmp push rolb ret push pop mov pusha adc das cld (bad) (bad) fistl pop fxtract cmp pop sbb xchg rcrb mov (bad) cmpsb xor (bad) (bad) pushl push cmp (bad) mov cltd mov mov out flds (bad) mov push cltd jmp les lret xchg jmp pop (bad) (bad) (bad) call inc lret fnstenv lret pop sub mov xchg dec ja lcall push xor sbb xlat or dec iret in pusha ss mov mov popf (bad) sub pushf (bad) (bad) ljmp cmc in inc and fst cmpsl addr16 js popa mov add es jmp xor dec jg lds ret sbb sbb push lret (bad) pushl es mov jmp cmpsb lock lcall shrb shlb push (bad) (bad) (bad) incl aaa push aas jp mov popf inc jbe enter sbb or xchg (bad) ja in stc (bad) (bad) mov ds scas leave aaa in repnz cltd fdivrs cmpb fs cltd rcr out mov testb nop jge scas mov in sub adc jle movsb int3 push cld lret (bad) jmp gs movsb adc push cwtl mov dec sub (bad) outsl rcrl add (bad) (bad) lcall sbb xchg fmulp jmp fidivrl fidivrl bound fstpl (bad) (bad) (bad) jmp movsl imul xchg jne cmp push imul sub imul ficom and in (bad) (bad) (bad) incl xchg mov arpl stc daa cwtl popa ss pushf test sbb (bad) mov ror aas (bad) (bad) (bad) fstl mov out negl ja jae leave (bad) (bad) (bad) dec cli (bad) test scas adc out add mov out rcl lcall ljmp fs jmp aam push and inc jno mov (bad) dec rcl mov call xor mov cmp cli out cmpsb addr16 jmp (bad) decl lcall add add in lahf mov push xor sub (bad) (bad) mov loope pop jmp push jge add jmp arpl push adc mov (bad) push xchg ret adc inc fildll (bad) (bad) call xchg cmp loopne rcrl jl mov jne jnp mov clc popa cli add or in push xchg jno cld push mov pop xor inc xchg mov call push imul rorl push hlt mov adc aas lock inc pop sub aad movsl mov xchg fistpl ficoml dec leave aam stc dec int pop push enter add (bad) cmp out jg test mov cmp out (bad) and (bad) (bad) pushl sbb or aaa jb lods fimull ss jbe movsl sbb add in (bad) (bad) (bad) pushl sbb jnp cmp (bad) scas insl jp lods inc jno rcll ss mov das lock xchg js inc jge in push test mov pop lods cli mov (bad) (bad) (bad) fmul ret xchg (bad) out adc sbb rclb (bad) sar (bad) push inc aad ja lds pop xlat cmc add cmp push mov cli (bad) inc out addr16 mov ljmp js dec (bad) (bad) call inc out adc cs push mov push inc lcall loop nop (bad) (bad) (bad) incl or sub mov lea js (bad) fisttp es cld cmc pusha mov jg (bad) fldt mov adc ret or cmc insl cmc pop mov (bad) (bad) jmp inc jge lods mov sub gs aam mov les test (bad) (bad) inc jp into mov add push int3 inc xlat bound and (bad) call popf mov (bad) (bad) (bad) out out sub mov cmc sbb sub shr sub mov xchg (bad) ljmp sub mov movsb fcomp xlat pop adc dec dec in jle jmp mov ljmp in mov jle xchg ljmp popf (bad) (bad) (bad) (bad) mov test or jbe aas xor in (bad) push outsl test (bad) sbb jge pop pushl clc call addr16 adc repnz add cmp fldt inc decl xlat jno mov cmp rcl ja fucomip mov in fdivr (bad) idiv rorb jne sarb mov push xchg pop pop xor xchg push incl loopne addl xor push (bad) or cmpsl and decl pop in test repz jae mulb flds ret ljmp test pop outsl nop xor lahf (bad) (bad) (bad) lcall repnz int sub adc dec fsts mov ret sti into fdivr (bad) (bad) (bad) jns mov push mov int scas jg mov pop rorb mov dec sub (bad) (bad) mov xor lcall (bad) fldl dec rcll or sbb (bad) (bad) jg sub xchg fcmove dec jg scas inc cmp (bad) dec cld mov and cmp mov std in cmpsb adc dec inc xchg (bad) sub or (bad) (bad) (bad) decl loop sub lods jecxz adc in dec test mov fisubl xchg xchg push xchg mov xor xor inc (bad) push dec and mov das jne mov jne xchg jge mov pop add pop or (bad) in outsl (bad) cmp fs pop adc cmpsb (bad) (bad) (bad) mov and mov and push xchg pusha cmp inc scas dec cmp je movsb div push pusha inc and and rcr xchg pop adc pop jne test sbb ss (bad) mov lahf mov sbb jmp sar fildll sti xor xchg push dec (bad) fildll rcr xchg scas mov adc push aaa lds dec jo sar (bad) (bad) call mov (bad) stc ss add in mov aad jo int outsl lods xchg fisttp mov adc or repnz mov divl das hlt pop fstp std mov das cmc imull lock leave mov sbb (bad) fdivrs ds pop inc ja xchg mov repz jmp stc movsb xorb dec stos jecxz (bad) pushl popf nop ds push inc mov out xchg mov out add xor (bad) (bad) jg xchg mov das jno mov jnp dec mov ds fstpt jge lods mov pop mov (bad) shrb sbb jg ds cmc mov les jmp mov cmp cmp cmpsl flds idivb mov (bad) ljmp in jne ss mov fldcw jp cmp repz insl add xchg xchg leave push (bad) (bad) decl fldcw aaa lret aaa lret (bad) out xor cmpsb dec dec test pop sarl mov addr16 dec (bad) outsl shl lcall lret mov stos (bad) in orb add cli xchg xor hlt push mov (bad) (bad) (bad) mov fcoms out xor sbb jecxz mull lahf dec cli xor sbb ljmp sub scas (bad) stos hlt jns inc es sbb outsl std jg mov adc jmp fsubrp inc push mov (bad) jecxz and dec pop mov or pop scas sarb sub mov aas pop pop subl (bad) jg (bad) hlt jnp sbb sahf stos mov adc call mov cwtl test sbb in mov repnz fldcw icebp add loope (bad) and pop pushf pop sti adc mov iret ja fcos (bad) (bad) incl cld ja pop (bad) xor mov repz fsubrs vpunpcklwd in cld (bad) incl pop xor loope add in je arpl (bad) decl rcll jno mov lods mov in or inc sbb push inc jecxz stos mov dec xchg shlb inc jb les lcall dec psrlw movl xor arpl inc aaa cli fucomip decl pop pop or mov or pmaxsw das cld fild mov fchs cld mov jo jge sbb pushl push bound mov enter insb int and mov adc ljmp ljmp lret sub dec mov sub pop mov or rcll push xchg roll into hlt fcomi out jno iret push mov dec adc (bad) out pop loop idivw dec ljmp cmp in jg (bad) decl iret sub sub dec int3 dec lods test dec xchg jns repnz push mov sbb sbb aam cli cli dec pop in (bad) (bad) jmp lds push mov inc adc sbb xor mov mov add sub lahf gs shrl or mov jg cmp incl insl sub lea shll cmp or ljmp loope inc push inc inc leave mov xor mov jmp int add aaa mov xor je scas ljmp in dec mov add push test rorl mov lods mov (bad) (bad) lcall inc sbb aad movsl mov (bad) lea pop loop adc outsl je mov (bad) call dec insl xchg sub int inc push mov test dec push lret pop jno aaa inc dec jno or idiv decl sti in pop outsb iret subl sti push dec sbb dec jne mov call lods decb add xor pop (bad) fsubrl ja les (bad) dec push xchg popf jno outsb lahf and and cli mov and push scas aam lcall test flds inc dec xchg push inc xchg int3 inc dec xor (bad) mov mov je test push loope inc dec cltd jmp fnstsw lret jb inc imul cmp lea mov outsl hlt incl xor or (bad) adc jbe adc pop fsubrl (bad) (bad) call add mov rcl outsb fildl popf or pop mov pop cld (bad) ljmp mov sahf mov mov xchg inc sub test cld (bad) call aad sbb jns call int3 mov jg outsl sbb (bad) (bad) loope jo jecxz jl gs bound jmp jns leave sub mov dec adc mov dec mov xor jp mov cmp (bad) and cmc push cs push push add incl aad idiv pop (bad) mov jo mul jg push decl test dec loop bound add add dec inc (bad) incl lcall rolb pop and (bad) pop into aam mov imulb (bad) (bad) incl mov (bad) inc and xchg pop pop mov jo inc inc jle dec xor outsl jmp bound jae outsb divps or or insb cld or xchg mov sub jecxz mov movsl add outsl enter dec in push pop (bad) push sbb call xchg or sbb mov leave adc dec (bad) mov aam pop xchg outsb imul adc xor test mov mov hlt gs rcll aad dec and paddq xchg cli (bad) (bad) or inc add (bad) mov mov test cmp push ljmp cmp idivl xchg xchg jo sub ret (bad) incl mov xchg fcomip ret push mov out into je enter cmp cwtl jecxz mov das icebp add pop cli js iret test cmp push pop pop (bad) (bad) (bad) ljmp cmp cmp or imull daa cmpsl jg jg out dec xor fstpl (bad) (bad) fucomip stc sub jbe fwait jle es cmpsb jne pop mov jbe out lcall js ja ret pop fwait sub popl dec out dec mov dec subl jae pop fidivrl aad mov loopne sbb int3 and daa rolb lahf mov pop les cmc push jmp and adc loopne ror aad call loope cmpl lret (bad) (bad) (bad) mov call push popa rcrl movsl aaa (bad) xor clc pusha mov (bad) shr mov and loope (bad) jg jmp movsb cmp jae outsb (bad) or add popa shl (bad) (bad) (bad) decl mov lea sar pop mov (bad) or mov mov fs pushl xchg and pop movsl mov dec outsb in aam pop sub mov (bad) into cwtl (bad) mov mov (bad) jg (bad) out jbe cli mov cmp mov and lahf inc pop cmp pop ljmp insl mov xor ret jno (bad) (bad) (bad) incl sbb shll ljmp test push fdivr pop cli jmp movl adc ret stos fcmove ret fwait cs adc pop xor out mov cmp pop push push or and xchg arpl std mov jns andb cmp jno call sar outsl imul call adc std jp outsl aad mov xor imul icebp cmc adc mov jecxz rolb pop xchg fistp add jecxz hlt lcall pushf (bad) imul sarb adc sbb (bad) call loop,pn or fdivrs fs mov pop aam clc rcl push fidiv (bad) lcall int xorb fiadd xor inc sbb cmp test shr inc dec xor add (bad) call incl hlt jle sub jle add cmp xchg inc sahf pop xchg out (bad) (bad) mov std xchg pop jl out cmp and dec dec lds jl xchg mov adc cmp in adc sub sub inc call mov inc mov dec dec ss fcmovnb sbb loopne arpl jg lcall mov add dec mov xchg call test push xchg push sub adc inc mov imul pusha dec js jo push or (bad) mov js dec rcll jecxz add test dec sub pop xorl cwtl mov xor shrl sbb in loope dec icebp daa pop push pop push cs insl or ljmp int test fisubl lcall mov ljmp ja xor xchg ficomp out mov test (bad) and adc and ds loop enter fs pop or pop push cwtl cmp jne cmp pop jge fsubrs jl sti popf out (bad) push pop (bad) cld add daa out lods das sbbl clc pop inc (bad) jne les jnp int lret out cld jmp mov dec movsl push and add mov arpl and stos or jmp (bad) (bad) (bad) pushl sub scas std aam cwtl sub ss mov out ss (bad) (bad) in jecxz insl aaa insb cmp push hlt add push js rorl aam jle mov fidivrl (bad) leave cmp push rorl push jg (bad) jmp mov (bad) (bad) fnop (bad) add scas push mov cmc dec mov inc pop xor pop adc ljmp pop (bad) int push mov dec xchg inc mov test jg mov out cmp les out push mov jecxz jmp xchg out cmp nop jge (bad) nop cmp fistl xchg sbb push xchg rcrl stc inc stos repz fdivp and push insb push insl mov pusha sarl popf (bad) decl inc loope mov mov fcompl ret inc inc repnz (bad) (bad) call sub subb cmc push mov xchg in ss sub addl cs rcl out inc rep cmp in mov add ffreep adc int ds dec pop loope mov push (bad) decl (bad) js mov mov adc icebp adc cli mov js mov lock mov (bad) clc (bad) (bad) (bad) decl push push adc dec test hlt pop loope jmp das das aad or jecxz divl rcl gs (bad) out call int sbb xchg lcall repz fistl fldcw cmp mov call jl aas out in jl cmovnp orl (bad) (bad) call or scas xchg loopne,pt pop sbb aaa lock outsb xchg daa loopne jg (bad) (bad) lret sbb sub insl jo iret lahf shrl les adc (bad) (bad) (bad) (bad) out stc or ja jg (bad) aam adc add fild imul jne loopne call xchg push xor ret ja insl fwait cmpsl ret push jle mull inc mov ret push push or inc mov xchg xchg add cs xor (bad) jg addr16 or ror push rcrb test dec inc sbb or fsts test hlt (bad) (bad) ljmp icebp push mov in (bad) jnp enter push xchg sub (bad) (bad) lcall cmpsl adc insl add sub cmp fdiv icebp fsubrl rcl stos xor inc inc mov push (bad) (bad) in lcall push xor mov popf icebp pop sahf ljmp outsl jecxz test (bad) (bad) inc sub cmc movsl sub pop gs insb push ss xor xchg (bad) or jle decl pop and jp and scas inc daa out add (bad) (bad) (bad) mov or daa inc icebp xchg in jbe popa dec dec and test xchg mov xchg es push xlat mov push insb mov (bad) (bad) incl and mov dec leave mov in add sub or jle (bad) xchg repnz dec mov loope dec dec enter call xchg mov scas xor test sub addb (bad) (bad) jg inc cli or ret shrl icebp sti jg,pn mov pushl daa dec inc inc aad sub fs or push movsl (bad) jb call push roll stc mov (bad) jmp outsl xchg (bad) enter repnz pushf jl mov leave scas in jb fsubrs jge jp (bad) (bad) (bad) call hlt cmp ds jnp imul lea push insl cli cs mov xchg mov imul jge fdivrl mov mov in pop loop xchg cmp lds (bad) jg (bad) ja out (bad) mov aaa es xchg adc (bad) jg pop lods movsl lods mov pop dec adc adc rol orl pushl (bad) (bad) stc xor xor enter inc lahf xor int loop,pn and psubsb ja in (bad) (bad) dec lahf fs jnp xor daa fucomip sti jnp jle in jae nopl dec and (bad) lcall push and cmp shl into xchg sarl mov jnp,pn adc xchg leave cmpsb (bad) (bad) (bad) incl mov mov movsl push imul jp xchg dec jns in adc jo cs lret lret (bad) (bad) lcall bsf mov in test jb popa jmp ljmp scas out popf (bad) aaa (bad) call pop jnp jg mov gs sub call bound fs jle mov neg insl jae push out sub sbb add push lret (bad) (bad) (bad) fistpll mov dec pop xor lds push push lret insb daa ljmp ss outsl (bad) lcall fimul inc call mov cmp xchg pop mov sbb (bad) (bad) aas sbb jnp in jmp fs mov pop call pop out mov xchg xchg je call out nop imull insl call insl movsl push (bad) push test jg push jb jl xchg mov cmp inc ds mov mov inc into push dec pop js push jecxz into data16 cmp lea xor out jmp adc popf rolb out (bad) mov rcll xor dec jo push push movsb xchg jno fist incl (bad) call inc or pop push jno outsb inc mov pop mov (bad) lcall std cld hlt jae in nop movsb enter lock mov cltd jbe in cltd xor mov out push pushf loop dec xlat or xor adc clc sbb fisttp clc jmp shrl lods je leave mov das xor (bad) (bad) (bad) push rclb mov push loopne mov or mov out dec loop adc shlb roll lods stc std inc mov (bad) pushl or push pop lds or pop sahf or cmp arpl (bad) (bad) mov pop pushf out popl adc dec adc sub rcll (bad) fildll ret jmp xchg add cwtl test inc popf test mov xlat ret (bad) pop pop (bad) (bad) fstpt iret ret ja mov pop sub mov adc lahf fwait (bad) (bad) call (bad) mov sub xor jno jbe xor fmull sbbl call in loopne loopne pusha lods call cmpsl dec ljmp mov and xchg or rorb (bad) dec (bad) jmp add push push xchg jg loope adcl xor adc mov pusha or (bad) mov les push adc stos or inc rcrb inc fdiv aad sub (bad) pop testb inc mov stos mov out xor sahf lcall incl cli adc add cli mov stos scas dec inc dec pop leave sub mov (bad) (bad) (bad) lcall dec (bad) lods repz outsb pop std ss nop push movsl jle out dec fs dec mulb push bound movsb sub jp xchg lds or pop rcrl push pop imul (bad) mov pop lods (bad) mov mov dec jecxz mov sbb ljmp hlt incl pop cmp sbb (bad) xor test cmc sbb jno,pn dec stos xor inc fwait les lret sbb pop insl icebp (bad) leave mov sbb cld pop out xchg mov (bad) (bad) pushl pop cmp cmp enter loope subl ret dec fwait adc fdivr (bad) call sub leave pop clc fist adc test test ret cmpps cltd insl gs dec (bad) lret and push insb pop int3 pop cmpsl fcomps ljmp xchg mov in dec ss mov in pop negb pop data16 mov push in (bad) mov fsubrl dec (bad) dec jmp mov cmpl xchg pop jg inc adc or and rcr push les int jg fildl cwtl dec shlb call cmpsb jmp fdivr add jmp mov add fdivl aad add adc aam add jmp (bad) repz and cmpsb or add mov pusha push pop mov adc adc jg jge mov sti mov inc mov adc adc cmpsb pusha subb adc call push add orb adc add add push add jg and sub jge inc adc (bad) jg pushl orb (bad) les adc mov pop pop jmp and add adc int3 clc bound push xchg cmpsb xor insl fidivrl lods dec lcall or inc mov lock dec push add xor mov xor or xor inc idivl into xor call or jae data16 mov ret (bad) push adc shlb test adc lahf decl in int3 rep dec ds mov jl push jno mov cmpsl pusha mov lcall adc lods enter int3 lds pushl (bad) out xchg dec repz cmpsl cltd push push xchg icebp pop sbb out scas mov mov (bad) (bad) cmp in arpl jp or mov cli (bad) int3 decb cmc add aam test das ja jp lds fstpl (bad) (bad) ljmp enter cmp repnz pop sbb xor cs popa dec and (bad) (bad) (bad) jmp popa add mov cwtl push lods dec push sbb jg mov clc (bad) (bad) jmp mov lods andl push cld pusha fcomps add xchg das fcmovb cmpl loopne mov inc test adc ror xor data16 xchg add sbb cmc sbb push fimull test shl sbb cmc xchg (bad) xor ljmp cwtl sti or fildll faddl sub jg das pop out adc (bad) lcall cmp mov mov push pop pop addr16 adc (bad) (bad) call imul ljmp ret clc lahf add ja,pt (bad) fisttp (bad) fcmovnu cmp inc inc cmc (bad) (bad) (bad) mov jg mov ja (bad) icebp lahf pop loop xchg in jbe jbe leave out xchg insb popf mov pushl mov fwait outsb jmp inc fs mov inc and ja (bad) (bad) (bad) jg xor inc enter popa popf add stos scas nop dec mov enter mov in outsb hlt sbb (bad) lcall es mov enter and dec jb sub mov sti call xlat jle mov dec mov dec imul (bad) call jg xchg in or fidiv inc ret dec xchg call fsin push xchg pushf (bad) (bad) (bad) (bad) std les test imul pop cmp xchg cmp cvtpi2ps xchg repz (bad) (bad) pushl sbb xor mov xchg cmpl pop sbb mov (bad) mov pop movsl aas daa (bad) jno (bad) jnp (bad) aaa mov lds add rcll or incl cli in cmpsl jge lret ss lods lret lret fstps pop (bad) (bad) (bad) ljmp loope sub cli cmpl (bad) cli mov xchg dec out jbe addr16 jg mov pop insl cmpsb loop cmp addr16 dec mov or (bad) decl sahf popa dec xor mov push add std xchg add aaa jmp in aam insl xchg mov insb xorl xchg mov mov pop loopne push inc or popa loop notb pop lahf (bad) and fdivr (bad) (bad) jmp imul jl arpl sbb mov ror fs jmp dec insb push (bad) (bad) (bad) inc sub inc gs mov addr16 or sti in inc aas add and sbb mov ds jns (bad) je aam jge repz dec (bad) (bad) (bad) ljmp inc adc sbb std push lods jecxz inc jno (bad) xor inc cmc or outsl hlt (bad) call fsincos and or sub cmpsb push or (bad) ljmp int popl out outsb or inc fsubl mov (bad) (bad) decl adc xchg daa inc imul dec fisttpl inc push mov call jbe push sbb pop add xchg ficoml adc bound mov sub daa sar (bad) (bad) (bad) decb stos movsb add inc test xor dec cld and push jmp cmc jmp push inc inc stos cmp das (bad) adc mov outsb mov (bad) lcall jge hlt inc fcmovnu mov add jg cmp and pop and aad jmp insb aam xor cmp xchg pop xchg push mov or pop jnp bound xor add pop push in pop aaa (bad) jg popa dec sbb sbb sub jb pop pop jl (bad) (bad) lret jae fdivrl sbb (bad) decl mov fistl cli adc repz xchg xchg shlb roll sub jmp xchg cwtl push mov aaa clc pushl or xchg fnstsw imul xorl fcoml push scas outsb addr16 dec hlt dec mov data16 fcmovbe dec cld call or sub inc jg test jns sub or mov test jne int3 enter outsl cs add aas mov push adc inc mov adc and mov add dec push mov dec jnp aaa pushf push cmp and (bad) (bad) ljmp pusha pusha mov push xchg and jmp pop push fwait mov aaa mov and lcall xor pushf outsb pusha inc je xchg (bad) rol scas jmp lea push imul (bad) imul (bad) xchg mov push jo push or test jmp (bad) push mov or push repnz inc cmp ret inc push dec inc mov sub (bad) (bad) fild inc int sub ss sbb xor mov (bad) (bad) (bad) jle cltd shll sub in adc or cmpl insb sbb jg (bad) (bad) jnp push pop ret xchg add outsb test fs (bad) repz mov cmp (bad) inc push js out push popf out lahf sub mov dec inc jno into mov or pop fwait dec cmp (bad) jg pop cltd or lret es andl add adc pop aas imul lea (bad) or cs outsl sbb xlat ss pop mov lahf into pop mov push pop mull (bad) inc outsl leave jp cmc lds lock sbb jge xlat push ljmp cmc jl (bad) xor adc rclb sub cltd cli (bad) call pop sbb fadds ss or inc daa sub cli push mov icebp lds mov call call pushl mov paddsw cmp stos out sub mov lds (bad) mov js push scas sbb dec jae imul xorl les aam or push pop stc add cwtl xor sub jmp addr16 in mov cli shld jbe ds out jp adc or adc ja into jp pop and call (bad) (bad) pushl sub mov pop or repnz nop lret mov xor dec icebp (bad) lcall mov (bad) xchg xor xchg dec popf mov push pop mov pop mov gs dec addl mov (bad) (bad) (bad) decl insl pop xor fst shlb or shr sarl test mov dec mov dec add mov das enter (bad) incl in lods jge das mov aam lds or push dec jp mov imul cmc icebp mov clc iret add in insb or daa jp xor inc pop mov (bad) incl inc (bad) jl mov (bad) aaa mov icebp push jge inc or jbe dec mov cmp sti adc mov lods push cmp (bad) (bad) (bad) decl and lcall leave repnz rorl ds cld cli push cmpsb or out adc (bad) das std movsb fcompl mov lcall rolb push push std (bad) in pushl xchg cmpsb xor inc dec (bad) dec aam mov daa sub (bad) (bad) (bad) ljmp cld mov dec ds xchg (bad) (bad) jne das push cmp mov push cmp or fbld ret dec outsb lcall jecxz ljmp jle cltd mov push xchg popa cmp scas xor sub (bad) ja push mov rolb out cmp xchg mov out and cwtl mov or or icebp xchg mov inc cs test (bad) (bad) pushl in out lret negb imul pop mov ds lcall jg data16 lret fcomps jo in sub mov pop jno stos dec (bad) (bad) (bad) jmp pop pop pop pop mov in mov cmpsl pop ret adc and ds dec and pushl push stos cmp jg repz add mov xor jmp (bad) lcall jbe bound xor mov or sub incl jmp mov push in mov les lods popa adc dec (bad) incl dec sbb scas adc andl cmc sub or (bad) jmp and add push sbb sub cli mov sar ljmp rorl cmpsl lcall cltd xchg and sti (bad) mov mov and movsl sub stos or mov add or (bad) jg pushf insb pop pop inc cmp sub or mov mov aaa fs (bad) (bad) push jp jl mov inc xor sbb lahf sub iret push sub rcll shlb fwait push (bad) call fbstp inc jecxz jb mov xchg jbe rorb jecxz cmpsb adc ficomp repnz or push mov pusha incl (bad) (bad) jge scas into xchg mov call mov fimull mov lods (bad) jg cmc out into inc pusha lret rcrl ror mov dec mov pop cld (bad) (bad) (bad) xor int mov es sahf bound je xchg add mov loopne jp and cmp jl outsl cmp pushl cli (bad) adc ja jb cwtl push xchg scas mov jmp inc or mov lods cmc inc push mov incl rclb fimull jmp and pop or leave aad jo dec roll cld roll (bad) (bad) (bad) pushl sub aas scas inc mov ss cmpsb cmpsl push (bad) (bad) lods into or pusha stos test (bad) (bad) call cmc (bad) ljmp mov push fnstsw xlat pop inc add cmc nop iret movsl push (bad) (bad) decl inc test xchg cmp inc scas cmpsl popa stc inc jl imul (bad) mov jno (bad) (bad) (bad) fcoml jne dec push mov sub mov and cwtl and dec jae leave cmpsl pop adc decl mov (bad) pop ficomp xor jbe ds cmovno add cmpl (bad) sbb dec sub or (bad) (bad) jg scas stos pop sub subl push push or sub dec and jmp jne pop cs dec inc mov jae scas push mov inc movsl jg xor fstpl add out inc and rclb inc jecxz push jecxz (bad) sbb sti (bad) (bad) call sbb add mov lcall shll xchg mov div or pop inc xor mov mov mov jg decl add je jmp icebp popf push sti std ret shlb (bad) mov scas pushf jo imul mov mov orl test push mov mov push pushf mov sbb aaa xchg add jo or pushl in aam lar sti or idivb and sar test pop or add jb (bad) lcall push push xchg or adc lret inc inc sahf inc ret bound sub inc pushl push sbb (bad) incl push mov cli xchg xor test jb jecxz lods (bad) pushl dec xor jnp push jae roll repz das lock fisub rorl xor loopne xchg fistpll push aas or pop lcall fcmovne pop lds call test xor lods dec insb out stos ss fidiv sbbb (bad) (bad) (bad) incl rcll outsl stos leave sub dec sahf mov xchg xchg mov and incl jl and cmc adc adc jecxz push test cmpsl (bad) (bad) mov sarl push jb lret mov push hlt lcall add push jb lret aad test jl and (bad) (bad) ljmp sbb loopne jb inc sbb inc and call mov es aad (bad) call jg or adcl mov add aas ljmp mov int3 and fs mov es test push mov jl fsubl adc or fwait sub fisubl (bad) lock test (bad) pushl lret addb mov jl push dec inc test (bad) (bad) call (bad) jle lds push xor fidivrl jecxz arpl pop adc (bad) (bad) mov scas inc push mov fcomp (bad) or fs ljmp (bad) (bad) pushl push dec fwait and in sbb clc or dec inc push test stos iret mov pop xor aam push movsl (bad) (bad) inc push mov aam cmp scas push mov leave pop aaa fsubrp (bad) aas aas adc lahf subb addl push lcall in fwait sub mov xchg in les gs aam orl loopne repnz sbb sbb cmp in xor clc jmp pop je push test mov sub repz popf (bad) lcall mov dec inc in stc sahf cmpsl and test (bad) (bad) lcall jnp stos mov adc popa in sub and cld adc jmp mov pop cmp cwtl ficomp movsl push insb push or jge mov and repnz (bad) lcall outsb add das dec cmp mov loope call sub nop lock fild cld (bad) jmp (bad) es pop test bound pop insb mov (bad) in (bad) notl jo aas dec push pop adc add xor rcll sub pop xchg jge fld in cwtl sub cmc fucomip mov adc mov dec or out cmc and (bad) (bad) mov push scas mov mov fsubrs jp inc push push inc sahf jle pop std inc mov dec sub imul jle popl or (bad) mov cmp test inc je lea xor pushl mov incl sub adc pop aad (bad) jb jns clc push (bad) call mov bound xchg pop xor cmp in je pop jge sub xlat cmpsb rclb (bad) es push add scas lea xor mov outsl into test lock jns inc xchg js jp pushf mov jnp stos (bad) call push mov add mov test scas adc fucomip outsl pop xchg pop dec pop sbbb ret in push sbb push repnz mov jmp xor repz faddl enter jg jg xor cmpsl ja in fbld jb lds lea iret imul ljmp imul in cli int3 mov lods (bad) lods mov fstl pop mov (bad) (bad) ljmp or rclb mov lods xor adc cmp inc (bad) xor cld xchg sarb cs mov dec xor (bad) (bad) (bad) mov (bad) add or or cli mov sub popf rcl mov loope cmpl repnz xchg jb mov xor jno (bad) (bad) jmp mov mov dec insl mov rcr test inc mov lcall add push (bad) sub sbb inc add stos pusha icebp outsb nop rorb pop outsb pop jb test cld movsl inc out lods stos sahf inc inc je hlt mov mov insl test (bad) pop clc out and push aam loop push jmp das lock mov shl xchg ret mov jae adc lds dec adc and clc or repz mov (bad) ljmp pop lfs popa mov or es add (bad) cld (bad) jg jmp xchg lahf cmp (bad) pop adcl pushf push jmp pushf cwtl (bad) mov gs or push movsl (bad) out xor mov push lea (bad) sar ljmp aam lahf aam xchg arpl xchg jno xor inc dec add xor xor out je (bad) inc xorl aam das xchg cmp pop mov jb sub popf lahf call movsl (bad) into inc out push test push mov pop push sub add outsl cld (bad) fildll pop leave sub xchg xchg ret sub cmp cmp jg (bad) lcall das pop stos cmp out jb mov ds xchg push lock (bad) (bad) call lock addb adc sub xchg lret (bad) xchg jl test dec std pop cli repz (bad) aad outsb push std std fsub mov clc (bad) (bad) mov push xchg inc dec xor and lds les (bad) (bad) pushl add fsubrs pop lds xchg ficoml sbb sub stos sub xor ret xor mov mov imul (bad) (bad) decl and sarb lods (bad) cltd pop sbb stos sub push mov bound pop cld xchg sti mov xchg lcall bts sub or nop movsl cmp jmp sbb jo mov movsb clc ret inc pop xchg call (bad) fbld jp es popf nop sbbl jne loop push (bad) (bad) fisttp cmpsb push cmpl cmp mov mov stos (bad) (bad) (bad) incl lcall je lea or popf outsl mov pusha jb xchg xchg mov pushl clc int repz bound sub fs jge das cmpsb cmp (bad) jg enter xor enter mov out adc mov sub (bad) mov aaa out sbb mov add sti arpl and (bad) (bad) decl outsl and xor xchg dec outsl sub movsb lret pop jmp pop dec xchg push pop ret inc pushl fnsave xor mov fldt or pop insb (bad) dec loope (bad) (bad) (bad) incl xor mov jns test stos jge jp xor (bad) idiv (bad) (bad) push std mov xchg jo xchg fcmovu push ficoml adc dec aaa out repz fdivp dec js cmp cld decl gs xchg mov mov cmc add jb jb adc lock adc xor dec adc mov cmp into imul lods (bad) movsl (bad) (bad) (bad) decl insl (bad) xchg cmp lods mov push push push jl push iret jmp push (bad) std jg pushl inc pop lret push sub negb aam push sub jmp clc fwait js aam xchg pop ljmp in fstpt (bad) les dec add out push inc cld scas ficomp jns cli (bad) (bad) push je sub pusha fist mov lahf mov jmp rcr adc sub dec out movsl in fldenv sub movb (bad) incl ds lock movl fnstcw jg push stos xor or decl jle inc scas push adc loopne fmuls icebp rcrl jbe cmc dec jle hlt aaa mov movsb adc (bad) jg call sarl nop mov imul data16 imul imul cmpl pop shrb stos mov ret jp imul (bad) (bad) (bad) lcall xchg inc jbe mov push int3 stc dec jecxz jae test das outsb xor insb mov inc (bad) (bad) call lods test mov jb ret xor xchg leave adc ret or pop (bad) (bad) jg inc cltd rorl mov pusha push scas xor shl add xchg insb fldl (bad) jmp xor pop loop stc ret mov aas rorl cmp inc lret in pop hlt loopne mov mov jp int and cmp decl fsubl bound and andl lcall jg jae push mov (bad) out cmp loop cmp sahf fwait out lea pop (bad) jg call sbb dec xor aam adc clc (bad) sarb leave ss (bad) jg decl sti adc testl mov outsb jnp pop jb fistpll data16 lahf icebp sub xor mov jecxz xchg jns ret hlt jmp imul scas je nop sub mov (bad) in and jae pop xor add adc sbb and jo mov iret inc imul (bad) (bad) dec rcrl dec jp mov and fldl xor ret and rorb pushl mov fmull das adc ret (bad) jmp pop dec lcall mov aad or test sub jle lret and pop mov mov loopne sub insl mov xor clc (bad) (bad) jmp pop es cmp adc mov jmp popa xchg xchg lahf aaa incl sbb mov add sti fucomp push (bad) mov push ja cmpsb pop inc push xchg int jg ficompl subl or mov dec mov test ja sbb arpl scas cld (bad) incl je fwait insb cltd mov das repz lods jge adc lea adc (bad) lcall sbb ja sbb arpl out adcl idiv mov test (bad) in mov into lds xchg and (bad) ljmp cmp inc enter add sub push es mov repnz jae mov popf stc add push jp xor lea mov addr16 xor in xlat mov cmp fimul fisttp sub cltd clc dec fadds decl sbb pop (bad) insb inc dec xchg mov (bad) mov mov sbb cmp ja clc push (bad) (bad) call push or pop or cmpsl fisub push add (bad) mov pushf pop add ret rcl daa push mov imul (bad) icebp xor dec shlb xchg shlb jle mov lds mov lcall inc outsb push (bad) loopne cld out mov jno sbb jg (bad) in push xor aad jnp sub scas dec xor xchg lods lea mov mov mov fiaddl mov dec movsl cmp call push push push outsb xor (bad) pushl cli jecxz mov inc movsl adc inc mov or lcall jno push cli dec dec dec push mov mov xor xor and (bad) mov adc mov out cmp les out cs (bad) xchg (bad) (bad) push push mov cltd (bad) ds lahf (bad) daa loopne or dec sbb imul adc rcll inc (bad) jle xor sub push mov add lock fcomi xor in mov test (bad) decl mov fild inc jae xlat fisubl inc ret jge stos test addr16 xchg decl xchg insl jl loopne jb jae push dec mov push cmpsb inc jg mov or jns jae mov inc mov mov sar decl push aad (bad) lcall xchg sub ja jmp lods mov push sar and or mov call pop repnz inc jns insb outsl repz (bad) fisttp inc aaa add and loopne ljmp or mov (bad) (bad) decl jnp push insb insl dec leave pop jle iret jge xor mov xor daa sahf push js dec insl std aaa out lahf iret stos xlat aas mov xor (bad) ljmp cld sbb out add testb cmp aas cmpsl push push ret adc (bad) push scas scas dec fisttpll jmp aaa cmp jb and mov je fisub stos fidivl sti pop ds (bad) (bad) incl ret pop and cmc repz aad fsubrs cmpsl cmp push movsb (bad) (bad) (bad) (bad) fcoml add lods add clc push adc int push push jmp iret inc ljmp lock push data16 in mov mov inc mov icebp xchg clc incl dec adc fimul xor (bad) (bad) (bad) mov push jbe ja bound std ds sbb inc jp movsl and xlat sbb pop sti mov xor or mov inc mov jecxz sub add xchg shl sahf xor pop adc (bad) call out jne xor popl pop jge cmc or dec xor mov and int mov mov inc outsl test mov or lods test stc pop and aaa lret ret (bad) mov sub fstps dec scas je sbb les push sti mov lods (bad) sbb cmp les push sbb cmp cmpsl cmp je dec (bad) negb dec std mov jnp push in (bad) jbe lds (bad) call cld ja fcmovnbe (bad) cmp dec xchg (bad) jecxz pusha jge fidivrl push mov test or and (bad) (bad) lcall jnp shlb leave mov or mov stos bts pop and ljmp insb cmp jecxz xchg jo movsl push (bad) incl (bad) cmc popa mov push cmpsl dec xchg mov jl jg dec iret or inc stos das inc or xor (bad) mov sbb ror or test mov stos loopne sti movsl ss cmp rcrb push pop dec cli loop (bad) loop jg clc repz mov lea popa adc ret sbb and push xchg push lret imul (bad) (bad) incl es ror push inc xchg xor add (bad) (bad) (bad) mov sahf out lea test cmp push pop push fstl cmpsl test not (bad) ljmp cld pop inc (bad) inc hlt adc xchg push pop pop movsl out icebp loope and or cwtl cmp push cmp mov cmpsl in (bad) decl add and inc pop xor mov mov jb dec test (bad) lcall aad xor mov and fcmovb xchg out (bad) (bad) inc or lock fnstcw cmpl inc stos push sbb leave shr aaa clc (bad) jmp add xlat clc inc mov jmp mulb mov mov jecxz mov sti jae dec rorl or idiv ljmp addr16 repnz into cli cld rorb clc or (bad) (bad) fcmovnu imul bound data16 lret jge mov (bad) push mov jge test xchg nop xor (bad) shlb (bad) out (bad) and dec outsl test pop jle dec lret jg jmp pop dec faddl push dec into jmp sub mov push popa jno push mov seto and les cmp mov ret mov cld sbb repz cli test (bad) jle (bad) mull add lds xor addr16 js mov add andb xor cmp add test roll pusha sbb mov fcoml (bad) call and adc imul xlat shl das mov lock insl scas xor loope jmp dec jmp decl cld ljmp inc mov cmp ret add mov (bad) ljmp icebp dec cmp femms sti rcr iret imul std cmp outsb dec adc xor add (bad) fnstenv pusha cld or sbb push sbbl lods xlat mov bound xchg push (bad) lcall xlat push (bad) lcall push add repnz lds shll (bad) jle outsb insl stos cmpsl mov (bad) fnstsw (bad) in popf dec mov mov decl call mov out cmp or ret (bad) and and inc and mov cmp jg xlat (bad) (bad) jg mov test and ds into pop mov mov cmp ljmp push cmp pop add cmp or (bad) call decl stos loop cmp ja adc cmp cmpsb fsts xor (bad) das adcb lock dec pop mov pop in adc (bad) (bad) (bad) dec dec ficom mov (bad) cli push and adc repnz pop mov dec testb ja jl add cld (bad) cmp (bad) (bad) das std sbb xchg push mov jo leave pop imul (bad) (bad) (bad) lcall aaa sbbb aaa cmp lock test hlt js jg pushl int xor shl dec push imul xchg inc pop lahf mov jle sbb test js xchg into mov loopne pop push loope (bad) (bad) (bad) ljmp and mov out pop inc xchg lcall ss inc scas or lods xor ljmp icebp inc push imul xchg or mov jns stos jg bound decl adc cmp mov dec popa aaa xor inc (bad) jmp sbb fisubr std repnz andl push mov arpl std cmp sahf push pop insb pop pop pop push outsl ljmp mov xchg push lock push mov clc cmp loopne sub cli (bad) dec daa adc or push lcall insb out daa and (bad) push mov popf arpl dec test aaa pshufw mov add fmull sbb xlat xlat mov arpl inc mov (bad) nop mov adc ljmp xor jmp xor jge loopne ja push repnz and rcrl (bad) pushl outsl xchg lahf inc push inc pushf mov cmp popf cmp (bad) (bad) (bad) call imul push fcmovnb inc hlt push fisttp cs sti dec int3 shrl call push bound gs decl ljmp loop or mov mov and dec test aaa mov cmpsb imul mov pop pop mov mov (bad) jg pop lcall sbb (bad) imul scas jb cmpsb shr sub cld (bad) jg cs sbb insb rolb dec cmpsl inc pop lcall pop call and dec inc adc shr rclb mov pop sub dec js cwtl aaa mov fisttpl (bad) (bad) ffreep repnz mov sub xor sahf ficomp jmp mov (bad) (bad) incl cmp ret jae arpl mov arpl xchg xlat xchg xchg addr16 cmp incl push fcmovne pusha fcoml xor das push out cltd orl mov inc test mov aam ss jnp jp inc (bad) (bad) pushl cmc fidiv mov sub add adc push sar lods ss scas push add push imul bound ja mov mov (bad) fucomip jg adc les cmp icebp push cmp stos add loopne icebp sbb adc shrl pusha mov dec jns adc cmc inc sbb rcrb mov mov jg das jbe mov repz imul jns and (bad) adc (bad) lcall xor fmuls and fmul stc scas jbe lods or and (bad) (bad) xchg push add (bad) add (bad) rorl sbb lods shr or inc inc daa jbe xchg clc sar (bad) jp fisub in imul ror fs xchg pop aad ljmp mov scas movsl fwait pop popf mov cli fwait jg (bad) (bad) fstps sbb fstpl adc (bad) lea sbb jo (bad) (bad) decl jl adc in or dec dec movl in imul (bad) mov (bad) call subb xor fcoml dec test mov lret test pop push push add jns gs (bad) jg pop jnp cs mov push aaa adc das cmc push jno and dec ret daa daa xor mov pop (bad) (bad) (bad) lcall scas push nop xor data16 repz push xchg clc or mov add (bad) (bad) call call dec xchg lcall sbb mov inc mov pop lock inc (bad) (bad) and cmp cmp and icebp adc and (bad) mov and fcmovbe orb call mov pop (bad) mov movsl daa fldl sbb loopne cmpb stos adc (bad) (bad) mov mov lcall pusha mov imul xor (bad) stc xor inc jle les pop mov jbe pop pop out lret outsb (bad) mov lret movsl (bad) jg out sbb lea sub mov mov decb movsl adc sub mov mov lret jb (bad) lret rcl ret pop (bad) mov adc cmp dec fdivr (bad) ljmp add pusha sahf das mov sub cmpsb ss sahf enter mov and (bad) addr16 test mov mov or hlt xchg test pusha clc ret fdivrp xchg pop decl push jg sbb or inc mov cmc mov (bad) mov push cld mov xor movsb jns xchg inc dec adc (bad) mov hlt leave add push nop cs out js fidiv adc sub jns mov loop adc fidiv add sub cli adc jno stos jecxz jb xchg push mov idiv ljmp call or xor cmp dec inc out push dec push out sahf mov outsl std push out add pop jo (bad) aad mov call and push aam pop lea xchg cld adc loop (bad) pushf out (bad) xchg pop pop mov mov std pushl cli fsub sub mov pop pop fstpl leave outsl (bad) stos sub jge mov and insl sub sub jb frstor pushl clc (bad) jb shll sbb sub cmp (bad) dec push mov sbb pop fs mov or (bad) ljmp and call mov xchg mov mov xchg inc add mov inc sti adc add adc nop jge (bad) (bad) (bad) mov cmp std pop and mov (bad) adc cmc cmpsl xchg adc iret and push aas sbb cmc jecxz sub push jg cltd incl in decl inc xchg ror jne es test dec (bad) push fild aam dec ret xchg (bad) sub jg stc lcall pop test lcall pop dec mov cmp mov cmc ja add cld test (bad) jne cwtl cli and mov leave punpckhwd pop (bad) ljmp jb and mov (bad) rolb psrlw xor xor xlat adc push inc pushl xchg sub jl sub dec test (bad) mov or adc js (bad) decl mov rorb aas inc (bad) ret xor mov (bad) call negb add in stos cmpsl pushf outsb mov scas (bad) lret pop cli (bad) lcall leave sbb push mov xchg fildll pop (bad) (bad) (bad) dec ret push pushf xor push push int3 (bad) push mov mov cmpsb insb mov insb or push pop ljmp lea pop gs fcompl call sub xchg das and push incl lahf sarb push dec (bad) jae pop pop ds (bad) decl ds push pop mov shr scas ljmp scas (bad) (bad) (bad) lcall pushf add xor lds pop mov dec add jg (bad) movsl insl mov push std into rcrb ds icebp dec ss hlt (bad) rolb repz xor clc cwtl in cwtl in (bad) fucomip (bad) jmp jp adc xor cmp xor adc insb mov outsl (bad) pushl movsb outsl jae or in dec pop xchg lods fwait call dec shl or add arpl sbb aaa adc in repnz or xchg lds gs jecxz (bad) and popa movsl push loop shll push push int3 cli fs sbb js (bad) ljmp jg adc fistl shrb inc sti jno adc dec mov add lahf insl pop (bad) decl cld xor sbb (bad) lds lods rcrl (bad) mov (bad) out fistpl rcrl (bad) incl in iret pop das jo jmp cmp (bad) in insl mov jbe mov das hlt (bad) (bad) mov cld orl xchg xchg xor pusha cmp push lcall mov add cmp aas paddw nop (bad) inc dec mov lock and loope xchg into mov cli hlt adc fsubrs push sbb cmp (bad) pushl pop jno popa push adc push sbb icebp xor ljmp dec mov sbb push jo ror divl dec rcl (bad) (bad) (bad) (bad) fisttp jle clc pop or clc jge sti (bad) idivl das scas pop cmc pop cli ds (bad) (bad) ljmp mov xor insl fiaddl fisubr sub rcll inc (bad) incl mov inc xchg pop sbb je aas mov xchg test mulb or (bad) in cmp jno rcrb (bad) ljmp adc push outsl add dec cli je xchg adc cmc loop xchg jp push ljmp jg loop or aad add mov adc loop std decl imul out xlat push cwtl sbb cmp pop pop push push pop femms pop cmp fwait mov fadd add aas dec idiv or push orl inc (bad) jg ljmp mov sbb xor xor test (bad) je,pt (bad) roll (bad) cltd icebp insb outsl hlt sahf xor (bad) (bad) jg addl test ret and xchg jne sub std cmp mov (bad) pushl insb fs call das testb xor ret fnstsw ljmp movsl stos jle sub (bad) divl dec inc repnz pop (bad) mov or mov inc (bad) or xchg lods (bad) push call xor mov or fisttp decl cld pop shrb sub in dec jno sbb mov daa or mov call out inc mov in outsb mov ds mov pop push ret lea pop out mov xor (bad) incl mov fildl xor xlat inc stc fucom mov pop decl adc and mov (bad) (bad) incl ret jmp and mov ret mov (bad) jae daa decl pop fcomps or (bad) das pop lret cmp pop ret and cwtl sub stos sahf hlt jns inc fcomp xchg xchg xlat inc pushl adc stc loop mov or loop data16 mov sahf inc (bad) jg aam jb or mov mov and pushl (bad) incl push lcall mov push mov dec jecxz mov (bad) (bad) fucomip adc adc jg mov test jge jns cli adc (bad) (bad) lcall popf lods cmc dec dec mov mov mov out sti xchg jns aaa push iret or mov test lret fldt sub xchg movsl mov repnz or (bad) (bad) (bad) cmpsb xor add icebp pusha stos stos fwait adc jmp jle (bad) (bad) (bad) (bad) mov adc inc jae sub hlt or lock loopne or mov sub dec les sbb mov lea mov (bad) (bad) incl jmp nop or sbb sbb rcrb mov leave hlt or push pop (bad) pop xchg int3 or cmp push incl in cmp dec les aas xor xor and (bad) aaa cmp dec lods cmp int3 jb std pushl ljmp cwtl inc push inc stos sbb xor test mov aad jno fisttpl les jl mov dec cltd jns incl adc xor (bad) cmp jae push stc jge outsl out into sub inc je cmc (bad) call xchg or cmp push imul outsb popa vsubpd std roll clc hlt mov mov lcall enter arpl (bad) in adc ja cmp mov (bad) ljmp addb mov fimull mov (bad) (bad) inc loope pushf (bad) lret sbb or push mov adc sbb pushl cli and add mov enter out loopw dec xchg push dec cmp push test (bad) lods (bad) das add in sbb fs and rorb (bad) jmp jge push inc aad mov jno add lock ss sub (bad) fbld je dec inc jp rclb call fldl dec xor jo test sti arpl fistpll imul rcrl out ja cmp cmpsb lds lahf and jne adc mov loop xor call sub mov fsubrs incl mov fs push dec pop sub xchg imull cwtl repz pushl int3 mov xor pop ljmp lock (bad) xor push aad dec adc bound mov mov outsl icebp ror cmp cmpsl inc aad push inc (bad) pusha jp push mov pop sbb aaa xchg outsb jns pop cld mov dec stc repnz outsb (bad) jne icebp mov cld and adc stc mov sub mov inc xrelease outsb jno out or test (bad) (bad) jg xor pop jmp dec dec push cmc fstpt in sub fimul jo push rcrl js jmp jo ret jnp jmp lcall call stos xchg ja (bad) jbe xor cmp cmp inc (bad) jmp (bad) dec cltd or das sub xchg arpl adc (bad) (bad) (bad) decl lahf addr16 jb imul pop dec imul in xchg or out (bad) (bad) dec mov mov jnp in jge lcall push sar pop loopne in jae cmp sti and inc mov push decl mov jge mov clc mov push (bad) arpl test pop mov popa movsb sbb outsl icebp pop xchg adc fmuls dec arpl ret add sub xor nop mov std in add mov cwtl push cli jno jns mov (bad) push enter add xchg fdivs mov gs fisttp es das cmc (bad) incl sbb in dec dec jl adc xchg cmpsl int (bad) mov pop call arpl mov repz and (bad) lods push daa scas (bad) (bad) fistpl cltd lret and and xchg push jmp mov mov (bad) add pop sub dec getsec sbb mov jg fsubr pop push cmp lret and mov sub dec (bad) repnz (bad) ljmp icebp pushf cmpsb mov add sub fs dec jmp sub inc dec pop cli (bad) (bad) jns mov inc lods lods ret add add inc popa lods icebp faddp (bad) (bad) (bad) pushl inc and lods les inc and lods nop mov sbb (bad) (bad) jg jecxz and dec ror test call inc xchg dec xor loop test pop loopne (bad) xchg out movsl adc ja dec fwait (bad) int adc test lret dec decl decl push add push insb jle add inc sbb testl (bad) jae lcall sbb sub rcrb xor cli imul dec popa dec (bad) lcall std pop mov pop cmp js inc mov or inc fildll lock sub mov (bad) jg pushl adc in pop icebp dec push loope add mov inc adc jp pop and dec pop into push inc pop mov leave lret (bad) (bad) in sub sub adc int add dec add cmpsl or mov cmpsl scas jb incb dec fs stos sub lcall xchg add cmp inc dec ljmp pop sarl xor pop push (bad) (bad) (bad) xchg sbb mov pop mov mov pop pop sub mov mov jmp movsb ja push pop jnp mov pop rcr or add test std (bad) mov in push mov mov int sub mov jp mov add (bad) ljmp dec or jbe cmpsl test jp repnz pop addr16 fildl jmp mov out out ret jae sbb stc adc pusha dec iret icebp test (bad) call inc sub call je call pxor xlat cmp (bad) idiv (bad) jg lock in roll js imul mov (bad) cs xchg (bad) (bad) ljmp jl loopne loope jo pop cwtl pop (bad) enter jp xor fwait pusha ret (bad) ljmp push mov (bad) adc cmc (bad) lret dec imul repnz and incl jo jo xor and aas inc mov fnsave mov (bad) (bad) jmp mov fwait popa jl mov mov cmp jle xchg ljmp jmp add fisubrl call sar outsl icebp das sarl imul je pop pusha and insb imul add and cli xchg pop fmuls loope pop scas inc ret mov incl xchg jl popl lods jg or push mov dec pushl xchg xchg sub shrb (bad) (bad) mov mov and les int3 (bad) dec fsubl sub inc loope incb outsl imul jo jnp add pop pusha mov cmpsl mov std dec fsubrl sbb pop js mov inc pushf in dec cmp lea call test xchg aam cltd les popf in rorl mov jbe (bad) (bad) (bad) mov pop xchg loope mov not mov mov je xlat add jne stos aas das icebp das cmc ret (bad) or pushf (bad) fwait jecxz neg js xchg clc icebp or xchg push pop cmp int shrb pop cld rcrl xchg xor push xlat std lods push adc mov fcmove dec pop pop je pop test mov in mov (bad) call cli out and mov inc jecxz push push pop popf ds add pop lds jge decl or dec jecxz jp stos daa (bad) lods sub insl incl (bad) incl loopne clc repnz jecxz mov nop adc sub (bad) (bad) (bad) lcall test add es in mov xor mov aaa jecxz outsl maxps (bad) decl leave clc sbb (bad) push mov enter out jp (bad) (bad) decl out imul (bad) xor sahf scas xor mov pop or push sbb stc or inc jno push mov lahf cmp sbb mov sti jmp push (bad) jmp mov into mov (bad) (bad) mov lahf (bad) cmp pop mov adc xchg pop push stc sahf das rcrb cs adc (bad) (bad) (bad) lcall jl sti outsl adc popa lea xor inc mov add or jp pop inc lock cli (bad) icebp mov (bad) fstpl (bad) (bad) (bad) incl push jbe loopne pusha lret cmp jmp mov fwait dec hlt das mov inc ja add (bad) (bad) call xchg adc (bad) loop cmp stos rclb jae mov stos (bad) (bad) (bad) ljmp adc pushf aaa idivb dec andl mov pop repz mov hlt (bad) (bad) (bad) stc xchg je aaa push lods pop repz loop test jae out ret mov aam popf jmp out xchg cwtl ss xchg sub xor inc (bad) (bad) pushl movsb sarb inc ja mov dec dec scas out xlat fisub and inc mov and jge mov fs mov mov push incb pop mov jp out loop clc (bad) (bad) (bad) lcall les jge sbb aad mov and mov cmp push fst out push loope (bad) ljmp ljmp lds call popa dec (bad) (bad) das rcr bound test and call xlat out fcomps fist movsl inc or (bad) (bad) incl push push fdivs cmp rclb xchg push shrl clc xchg inc sub (bad) call cmc cmp cmc jg test (bad) xor lret addr16 jmp jmp (bad) pushl notl pop adc orl dec (bad) (bad) jmp lret mov mov jl or sahf xor sbb xchg mov (bad) push lods decb repz push mov pop sbb jecxz ret repnz fbld pop and (bad) (bad) inc add cmpl js mov jecxz mov testl lcall pop hlt inc adc cmpsb pop xor outsl cld idivl and mov mov dec outsb lock in push insl das mov mov nop sbb add push ljmp insb shr dec jae push cmc in enter mov lea jno dec pop js outsl into cwtl jp dec std out xchg into repnz jge add sbb mov enter das push mov adc ljmp cmp mov xchg out pop clc shr loope sub sub insb xchg cmp adc in fs (bad) (bad) jmp xchg test sub push jo add es mov adc xchg sbb cwtl pop addr16 (bad) (bad) (bad) out call push rclb push sbb in sbb inc xor les enter test adc arpl push outsl jp pop inc in (bad) arpl xchg nop fnop decl (bad) cld xor rcrl test pop and out pushf or pop cli sarl push faddl jmp mov mov pushf sbb mov pop (bad) call fidivl jle push pop inc repnz push jmp push sub sbb (bad) std and jl,pt push popa lahf mul ret pop jns jnp pop fcmovu jl xor call pushl sbb fdivr mov and dec or outsl cld decl mov cmp jnp or pop cld xchg sarb ds pop mov jecxz xchg sbb sub push dec pop push in test js rol jnp incl dec cwtl test in jp xor mov incl (bad) ljmp js xor xchg mov mov leave dec push mov fucomip jle pop push movsb insb sub mov push dec pop cs jg lea or imul out and ljmp adc rolb sbb aas out adc pop pusha pushl lea xchg cmpsb push add out out fisttp call push insl push fisttp nop mov inc lret rcll inc mov push clc mov sahf mov ljmp in pusha adc pop push adc inc jle inc cmc int and sub cld push movsl jnp popf cmp pop (bad) xchg into mov (bad) (bad) call xor mov xor (bad) cmpsl fmuls pop mov mov pop call inc fcomps enter jb jl pushf mov pop fwait mov ficom jo push mov pop call push mov cmpsb or pushf pop popa adc sti inc dec lods (bad) call pop call int3 hlt into (bad) pop negl xor test fwait dec sub add out cli lods add roll mov movsl jle add xlat pop int3 loop call aas push pushl xchg and adc cmp mov sub xor outsl (bad) (bad) ljmp popa mov cmp imul xlat sub sub sub ljmp lock xor loopne xchg leave jbe cmp das das add jnp adc daa (bad) rclb (bad) fnop (bad) mov and adc enter repnz test jg out inc pop les ljmp sahf pop xchg movsl lock pop (bad) (bad) (bad) (bad) jns movsl stos ret pop loopne mov and aaa imul dec int3 jno ljmp xchg cmp loop mov call (bad) ljmp subl lcall insb lods mov fisubrl (bad) loope decl and movsb stos ss mov lock mov leave ret dec cmp mov fucomip lcall outsl (bad) and xor or insb cmpsl nop ljmp call repnz test jg ja mov int scas dec fldl decl je lret aas cmpsb xor dec mov pushf andl cmc (bad) (bad) incl jge mov push frstor add (bad) (bad) ljmp in in dec push jb lock and aad mov in arpl lds adc (bad) jg incl xchg movsl xchg or jnp xchg inc pop sub push sbb addl ljmp jle or stc mov add rorl xor fs shll (bad) jns jne push push lea stos into sub aas cs hlt mov mov popa loopne aad cli outsl cmc repz loope outsl cli jle aaa std mov mov (bad) (bad) decl imul fild inc push and push mov lret push rolb mov fcoms out or decb or or cmp data16 (bad) (bad) jmp daa push pop (bad) jae inc hlt cmc nop push mov push js flds (bad) popf adc cld add das cmpsl outsl xchg (bad) ja js gs shrb sti outsl std pop call cmc cmp out push sbb enter (bad) push sbb or repnz pop or inc cld fs (bad) (bad) lcall (bad) mov push ror loop lock movsb imulb mov push std leave (bad) (bad) (bad) (bad) jmp jge hlt shld mov clc cmp fdivr mov decl xor adcb nop addr16 nop add fcmovnu sbb inc (bad) (bad) (bad) decl mov lahf push cwtl or ljmp fmuls adc push and aaa (bad) call std push jnp repnz je loope push add cmp jmp (bad) (bad) decl fcmovne jmp ficomp sub cmp xsaveopt (bad) stc idiv (bad) (bad) std add das push add jns adc dec add pop pop icebp scas ds mov leave or pop mov push fcompl cmp notl sahf mov std fild and sahf push into jg jg das (bad) mov out incb ret stos loopne pop (bad) (bad) incl addr16 mov jmp repz jne inc movsl xchg or pop loopne (bad) (bad) (bad) call fstpl jae and mov (bad) bound hlt in add stc aad shrl (bad) jecxz cmc jne or jns sub sti and ss decl cmpsl clc adc sub aas std test test mov xchg or (bad) mov pop mov in sbb fdivl ret (bad) jbe in lahf push jmp pop sahf in fbstp (bad) es (bad) jnp lods (bad) lcall (bad) (bad) (bad) jo mov pop pop push mov mov jg mov (bad) call lock (bad) mull lret bound adc lahf lock call cmpsb mov mov mov insl shrl add stc cwtl cmpsb stos or packssdw leave imul (bad) icebp dec sbb fbstp mov mov ret iret lcall aaa das clc imul sbb inc stc mov mov (bad) or mov xchg imul dec out incl cmp (bad) (bad) push xor (bad) call fbld adc xor add add sub pop xor add (bad) aad lcall xorl icebp jl dec cmpl inc out (bad) (bad) mov xor test inc ror js js push call not xchg add orl fsubr or jg pop mov mov faddl jmp lret add loopne inc inc (bad) outsl lock push outsl rorb (bad) jbe inc pusha mov cmpsb pop call decb or xchg sbb push das add cld dec (bad) fild ljmp jle test push mov jmp test xchg and pop (bad) js sar cwtl push pop (bad) (bad) mov push ja outsb add in push lock insl out fnstenv sbbl jecxz aam ss mov cmp adc jne xor icebp cmpsb insb or incl mov jle loopne les xchg mov mov push or pop fcoml aas inc (bad) call mov mov ret ss gs sbb mov cmp mov lods (bad) call push imul add add stos push mov andl pop loopne fstp lcall lret lds ljmp adc (bad) (bad) (bad) jmp sbb cmp movsl mov sbb lcall push mov std inc daa mov pop and push cmp xor (bad) mov ds fdivrp or sbbl int inc dec enter incl mov or inc sti or (bad) movsl mov clc dec test jno mov pop (bad) jmp mov cmpsb add xchg mov dec outsb ljmp dec pushl cli cli adc sbb cmp jno hlt push xchg cli decl cmp je sahf xchg mov into (bad) push (bad) aas xlat lahf lock add shll arpl ljmp fucomip (bad) call xor jle fldt jle enter in mov cld ret scas js or pop push sbb sub inc loopne in aas add insb daa sbb jge (bad) mov push lret rclb out push outsb insl insb lea decb pop push pop mov loop clc das lock fstpl (bad) sub jae (bad) iret dec scas adc (bad) fbstp or pop lret pop xor js in pop dec mov cwtl (bad) or jb loop (bad) (bad) jmp rcl or out iret icebp sbb cmp pushf rclb (bad) cld es (bad) (bad) (bad) mov iret clc jmp (bad) das lock popa xor xor and xchg out inc stc jmp incl push xchg lods push repnz cld lods (bad) mov sti and mov or jge adc add icebp dec add mov decl jmp or add push jo cmpl or push jo pushf pop pop in inc or pop fsubrl insl add mov cltd lods push movsl or cmpsl dec dec loopne (bad) outsl call pushl lret pop push or jnp imulb adc lret loopne subl inc outsl cld dec sbb push fmull repnz add pop jo sar dec das idivl mov out lret lahf pop jl test sarl lret fsubr inc hlt insb push (bad) (bad) call cmp adc cli stos call (bad) pop cmp dec out xlat dec mov pop std jne scas mov ficom loop fwait out int cs (bad) (bad) (bad) lcall sub xchg aam pop cli rorb scas pop jmp popf in lret jnp fnop (bad) fcmovnb jne sbb sahf mov mov shr out loop cmp xchg xchg add call mov sub ficomp stos jbe (bad) (bad) pushl inc sbb or jl pop lock into fcomps data16 ss (bad) (bad) call lds jp gs adc sub adc cmc ljmp js sub imul iret xor (bad) mov cwtl ja lret sti das jne push scas int3 data16 xchg xor add dec push (bad) (bad) jg dec sub mov test cld xchg pop loopne iret std sub mov pop clc in pushl clc mov loope add (bad) ret pop xor cld mov mov (bad) outsl fcmovb aas repz xchg inc incl xchg call jl mov (bad) jmp pop test stc mov add lret add ret loop cmpsb out xchg rorb mov cld pop repnz jg fistpll jmp sbbl aas decb cmp js sbb in clc mov les mov ja sub std cmp xlat clc pushl ss std sub rorl ds mov lahf (bad) in loope (bad) (bad) fild xchg (bad) in sti aad inc pop jnp xlat dec cld out dec ds mov addr16 jge (bad) mov push mov mov xchg push add sub (bad) mov fistpll jge (bad) (bad) (bad) decl cli sar pop mov clc shr xor clc das insl lahf jl pop sti pop aas incl cld fcomi ljmp push pop ja std sti mov popf mov pop stc cmovg les clc roll (bad) sub iret or (bad) (bad) mov pop or inc dec add xor loope mov icebp mov aaa aad sti dec test in or fmuls add dec mov (bad) mov and std mov push pushf dec pop sub cs repnz rorl movsl and (bad) (bad) jmp hlt pop push js rorl mov js loop jp shrl mov xchg shll mov cmc arpl pop lahf test pusha sbb and pushf add mov jmp pop lock push cmp gs pop fs or push in inc sub add and hlt jecxz lret int (bad) (bad) (bad) jmp and push mov xor cmp rclb pop das pop pop clc outsl cld xor xlat push in xor inc inc aam add mov test outsl sub pop inc cmp les int mov push (bad) mov mov test mov ss mov lcall imul cltd xchg mov mov (bad) repnz add fnstsw jg jle mov testl inc jle lcall jae cmpsl jbe loopne or push lds iret adc (bad) push outsl and aam ja lret xor insb fsubp sub or adc lcall std (bad) decl fwait or out test dec xchg or push int3 pop pop test outsl cli decl (bad) jne pop and mov lahf mov (bad) jno or sub fwait add (bad) mov out data16 (bad) (bad) incl leave mov sbb dec and outsb sub pop push pop pop push push push iret das icebp pop std cmc out inc flds mov and mov (bad) decl cmc cwtl loope int sub jge jle (bad) jle loopne xchg pop jmp fwait sub or push cmp push lcall push pop outsl aad xchg fidivr pop xor xor sbbb xorl out mov cmp ja inc test sub ds faddl lret int bound add xchg fidivrl ret std movsl mov into adc sub push add stos fwait adcb jns loop std lock cmc pushl mov jne notb or aad pop (bad) mov in sub sub or xor outsl cmpsb lds pop jo mov roll test sbb aam pop cs mov push inc incl sub rorb xor xor loopne lods jge and mov cld or cli nop hlt lds adc pushl xchg xchg insl push jecxz popa out adc orb icebp call fiaddl mov lods mov ljmp cld lcall add popa push sub call fwait pop lds shrb jmp push push jp pop or xor fs push scas outsl sbb ljmp or mov push popa lcall jmp mov test shr mov incl sbbl cwtl inc pusha orl pop pusha xchg or jp push ret (bad) decl xlat (bad) cmc cmp mov and push jns ficom cmp insb nop sar add xchg cld loop test fucomip ret adc jecxz mov push mov mov dec mov mov xor pop cmpsb mov cmc xchg or dec cli popa jg jle or je cs mov sarb movsl stc hlt stos pop sbb dec mov jp pop std fwait daa or int ss je mov pop scas std idiv add sbb fcompl outsb sbb sarl jo jge outsl bound fbld inc xchg ljmp jno (bad) mov mov insl repz cmp or cld jecxz repnz jl stc mov xchg pop (bad) jno es mov jg sbb rep and cmc outsl jne sbb (bad) (bad) (bad) (bad) (bad) xor clc fcomi inc ret cwtl idivb cmp xchg cmp mov (bad) (bad) (bad) jg cmp push dec out xchg rorb push mov call hlt lds sub push xchg push andl cmc out sub adc and cwtl stc or pop xchg or ljmp mov dec push lret aaa outsl xchg mov mov sbb (bad) decl pushf xor or insl hlt adc cmp push cmp inc cli sub lcall mov push popa minps sbb sbb jbe popa sub (bad) xchg fs (bad) (bad) dec pxor ret int3 popa push pop in lret into (bad) cwtl mov fwait mov sbb decl fisubr xor out movsl inc loop stos add lock (bad) mov int3 dec fwait sub insl fisttpl and icebp jmp cmp ljmp hlt jge jp or pop or jbe pop dec push fcomps adc clc xchg push jo sbb les pop adc pushl mov and adc pop add (bad) (bad) (bad) call xchg jle jae (bad) dec movsl inc jl stos pop lods xor in mov push rcr (bad) (bad) decl mov or daa (bad) idivb out popa pop mov push and pop lcall lcall ljmp in mov cmp xor cmp push dec add std add out sbb enter leave popa pop stos int mov sti (bad) (bad) pushl (bad) add test or mov sbb add in jg push (bad) (bad) out pusha and hlt adcl dec dec data16 mov call fbld add aad sub add mov mov add xlat and sbb (bad) (bad) call (bad) cwtl pop xchg dec sub rol xchg nop int3 iret sub pop sbb (bad) sarb inc push lret mov je cltd mov pusha pop imul loopne dec pop pusha inc xor std xchg je rcl (bad) mov lret mov pop ret imul xchg pop lock mov dec popa imul sbb or (bad) ljmp add inc repz movsb jb jbe cmpsb xor rorb std dec jns lds push (bad) cli mov push mov xor lret out adc mov and repnz add (bad) call aaa (bad) mov mov xor (bad) lods xchg jmp in in (bad) (bad) jge ljmp inc dec sbb pop mov lret jle (bad) (bad) inc mov dec ret push dec inc jg push cmp rcll stos xor std lea arpl ds out gs out pop cld (bad) pushl xor icebp cmpsl popf adc aas sbbl push repz sub inc leave into (bad) xor call mov lcall push test out xchg jg das stos mov test ss push lret ljmp jg (bad) mov scas sub out or clc ja aaa cli (bad) fisttp mov push xchg jmp mov pop xchg (bad) decl call leave inc mov xchg fsqrt jno jns mov sub jecxz mov out pop cld pop pop dec out mov lcall pop mov ljmp (bad) mov jecxz cld jg ljmp fimull (bad) lock mov push (bad) ja (bad) aad push dec xchg outsl jecxz (bad) fildll shl nop popa dec repz push lret sbb xchg aaa inc sub movsb pop fisubr cmc movsl lea aaa jecxz lds loop js pushl pop clc push ja gs stos dec int jmp aad cs aaa rcll push aad incl aas mov (bad) xlat jo shl stos xor pop mov jg imulb loopne cld mov or jle movsl pop rclb (bad) push jnp lret incl (bad) or (bad) mov shld jg add (bad) (bad) jmp xor cmpsb cmc sbbl jecxz cmpsb pop sub or jg (bad) (bad) dec pmulhw dec nop stc ds xor jmp xlat sub jnp mov (bad) pop ljmp sub popa jo sbb mov ljmp loopne mov push pop add call test (bad) enter sbb push lahf add mov loop cld int3 adc or into cwtl cld cmc adcb xor mov sarl xchg gs or ficoml mov das cmp (bad) rcr js scas dec jnp xor outsl cli call cli mov add repnz xchg ret outsl lahf mov push (bad) (bad) call sub aaa add jne push movl xor outsl cmc push lock notb jg xchg pop pop call cltd or push das arpl outsl push (bad) (bad) mov cmp in add jno fimull into sahf or pop jle icebp (bad) jmp jae adc stos sti bound out call sti sar arpl stos lock lahf cmc or nop push sbb cltd cmp (bad) fucomip and add stos leave sti (bad) jno lds (bad) jg and ror jmp or (bad) lods ljmp incl mov lret hlt mov jg (bad) push (bad) test lahf jo ret and lock cmpl daa or test data16 jnp sahf and aad (bad) (bad) (bad) jg sub push mov bound imul out cltd repz fistpll and mov and cmp jno mov mulb adc out std (bad) (bad) lcall jae cmp (bad) mov xchg and rcrb repz cmp (bad) (bad) fistp insl push arpl inc pop arpl cs lods pop pop (bad) cmp and stc cmpsb in sub pop pop enter cld sar pop cld mov adc inc cvttps2pi rcll mov add xchg mov loope ret mov cmp (bad) fdecstp fcos xchg clc (bad) out fsts jg adc xchg mov int3 (bad) fs in outsl add push test test out (bad) (bad) push jae int3 pop push pop mulb mov pop cli mov out aam adc sub (bad) jg xor bound negl inc ret add xchg adc fildll std decl xchg push adc jecxz or les sbb ljmp mov fstpl dec xor cmp ret (bad) fbstp imul pop icebp mov pop jl mov test (bad) (bad) jg or cmp mov xchg add pushf sub mov xchg xor aaa lret pop in mov pop lret fldcw adc dec dec xor (bad) (bad) decl aam jne mov loop inc cmp mov rcll popf mov shl jp fisub (bad) ljmp adc movnti push hlt xchg popa add ljmp push jle nop or (bad) jns add push sar sub test es (bad) incl data16 decb pop adc ret clc (bad) (bad) jg fldenv or mov add adc mov in inc mov call push pop inc jg es mov (bad) (bad) pushl out mov es add jle xchg loopne js (bad) sbb hlt incl outsl rcll xchg lods and cmp cli xor inc cli (bad) (bad) jmp sarl jle ret sub push fstpl pop aas xchg roll lret ds jp adc jbe sub cmp sahf (bad) (bad) (bad) (bad) pop adc mov les aam push andl data16 incl jmp push sub aam inc inc mov and mov (bad) fbld pop xchg xor or rolb (bad) (bad) jmp xor (bad) into testb std add mov sarl ljmp or adc mov out or cmp (bad) (bad) lcall fistpl jge stos inc push push add loope js fimul subl call movsb cmp arpl jmp or pop xchg sbb sbb ljmp decl adc or pop dec adc bound in movsl test lods (bad) test (bad) (bad) (bad) push xchg pop scas lret mov push sbb mull int3 xchg mov push ret push icebp out std pop cli jle lret or into rcll cld mov fcomp arpl lds (bad) mov (bad) (bad) jg ss (bad) aam jne push cmp lret shlb hlt mov call cmpsl push lods mov push sbb (bad) sub (bad) lcall inc jge flds or mul test loope stc push sahf int lock xchg das in jns (bad) div mov testb (bad) (bad) (bad) mov ret mov mov pop sub inc test jmp inc movsb sti ljmp inc cld insb jg aas lret aas loop repnz clc and or xlat push jo xchg sar (bad) (bad) (bad) ss adc and mov insb je in sub std (bad) mov pop sbb or xchg sbb or push ljmp fnsave xor outsb movsb fistpl push sub inc inc std or pop push leave lods je pop rorl (bad) (bad) (bad) call mov lcall xchg sub push cs lret push inc xchg push fcmovnbe lcall (bad) jne,pt std cmpsb lcall jnp jmp and and fdivr push sub cmp je imul test jl (bad) (bad) call in push fldt lea pop jl test mov xchg incl lcall mov (bad) cmpsl mov jno mov jecxz js and pop sbb cmp inc ret (bad) (bad) mov jbe jbe faddl imul sbb shrb cli ss dec aas mov jbe xchg (bad) (bad) (bad) pushl fs insb aaa mov mov test movl idivb (bad) clc fcomip mov cmp fmull and mov xor push cmp fnstsw ljmp mov mov sarl xchg les inc pop mov call push (bad) xchg jns dec in cmp int3 cmc adc mov (bad) (bad) (bad) jmp dec and jmp jae int3 xchg add add addr16 pop lods xchg sub cld sub push pop mov shr arpl pop jge xlat dec (bad) mov aad mov stos outsb aam or inc mov (bad) (bad) mov inc adc ja dec inc push and inc push mov dec dec dec pusha stos (bad) mov sub xchg jo mov aam adc mov (bad) (bad) jg shr push sub aad cltd or fsubs xor in pop xor test mov mov (bad) std mov lods add scas (bad) sqrtps cmp daa xchg inc icebp ror divl (bad) mov and xor cs das push lcall outsl outsl insl insb popa das push jae js outsb je imul jo,pn jae (bad) out shrb inc xor test aaa push push dec push push pop and push or in push das xor or cmp push js,pn sub push pushf outsb outsb out add or push push lret sub (bad) fnsave dec outsl jp insb xchg xor pop xor cmp push add (bad) imul or add jbe jbe and sub inc aam ljmp mov adc bound outsb jmp fnsave push xor push or and jg xchg das xor inc arpl mov cmpb popa outsb popa jp push sub jae add xor push lahf je sub pop divps insl test sub into movb jo imul in pop jae adc sub sub inc ljmp or push dec sub sub in pop fstpt or aaa sub aaa inc pop inc sbb push lods lock popf mov mov (bad) jbe scas int3 jb and add test mov mov (bad) ja sbb add cld test mov and and in dec pop and push and je (bad) mov dec das jns push adc and sub insl mov xchg imul inc jae jae ds lea and xchg and xor aaa leave mov sub cmp fistl lds jae push pop imul out sub je mov push aaa adc test adc and sahf or and jo insb sub imul daa add (bad) aaa mov add add mul jo outsl jns push stos mov leave test lahf shll jae popa pop arpl insl inc fs ds push pop imul pop mov sahf in add add cmp stos push push movsb adcb cmpl popw insl sbb and pop jae rcrb add jno jns (bad) std push mov jo fs addr16 mov imul test inc outsb cmp bound push psubsw ja fcmovu add mov cmc adc ret xchg dec lea jbe faddl mov push inc push push sub lcall pop aas xchg xor ja push out mov les (bad) hlt push xor jg jmp mov push movsb mov aad mov incl dec mov mov sub nop adc (bad) (bad) pushl repz test ficompl jmp (bad) mov hlt movl pop lcall imul in leave mov add insb push mov pop ljmp or adc and jb (bad) (bad) (bad) jmp shl add aam dec std test movsl cli test xor (bad) leave mov (bad) (bad) (bad) mov xor fild or shrl cmp ficom push xlat enter decl hlt mov and iret shld sub mov pop mov or and or dec push sarl mov inc fdivl jno add aad mov inc (bad) (bad) lcall mov push movsl in lahf xor mov js stc (bad) (bad) ljmp test xchg sbb push sub insb fs add cli das cld jmp hlt push imul insb sbb xor dec lahf repnz xchg push insb jnp add (bad) pushl je or (bad) fnstenv adc mov test lcall fistp ficoml gs aam pop popa mov into sub mov test (bad) mov movsl fisttp xchg fsubs lcall (bad) rcl hlt (bad) shrl imul mov sarb (bad) (bad) ljmp add pop dec or cmp add daa adc or and mov push mov int3 or mov popa into push stc ficomp leave fldcw and cmc pushl mov orl shlb mov (bad) pushl mov lcall ljmp fildl push fdivl or test fs ds or or push in decl xchg daa scas stos mov or jge xchg (bad) shlb add inc push imul inc adc ss sbb push imul aam loopne mov pop lcall ficoml int3 dec ffree fistpll cmpsl mov call aad mov call xchg rcll fdivrs push repnz addr16 lcall addr16 mov aas dec ss sub (bad) jg or jp inc ret out pusha fist addr16 mov jns imul mov mov outsl and xchg ja int3 add mov das es pushl and cmp mov pop mov add mov cmpsl call xchg (bad) (bad) inc xor (bad) mov sahf fldcw ret es pushf mov ljmp cmc insl add push jmp addr16 jb push add adc mov loop sub xor xchg or (bad) ljmp out fdivrl or rcl xchg aam clc mov push int icebp call sarl mov ja mov out jecxz (bad) mov dec cmp pop or adc sahf gs scas (bad) clc sar imul (bad) (bad) jg push js or push addl mov cmp cmpsl notl pusha rorb imul xchg dec push scas fcompl fldenv fild incl jg push scas mov fidivr mov jmp aam xor mov push cmpsb mov sarb (bad) (bad) dec sub push mov jp mov dec popa les sbb xchg sub aaa mov or add add sub or jmp mov jbe insb and xor mov mov lock fsubrs pop pop inc sub rolb stos addb add add test stos stos fs sbb xor dec inc push push push and xchg stos fs push push push xor dec inc push xchg add add mov test fiaddl adc adc add sub or rcll dec in inc adc dec pop add mov or adc mov sbb or push xor xor add inc dec push sbb dec das add inc ljmp xlat add sarl mov js shrl dec gs push add fldl jae movsb fnstenv mov es rcr adc adc aaa inc jne xor loope fistl dec jne gs inc or push sbb lods jo insl adc insb or fs pop or jbe outsl and mov inc pop bound mov push lds mov push adc and bound rorb cmovge sub adc ret lcall add jp daa push push inc mov jae push popa test mov loop dec outsl fistpl push dec inc dec inc push or imul adcb jbe or inc outsl mov imul add mov dec outsl jne mov adc and push pop jbe add pop inc loop inc add inc sbb sbb push or fildl dec adc push push push ss int3 and cmp pop (bad) or push lea push adc inc jns mov lods movsb nopl insb push add in jae push addr16 insl jg sub push or add je sbbl je pop mov sub sbb add jbe mov adc dec fisttp push fild or sub sbb jo xor or (bad) push outsb and outsl test sarb mov mov xor push in inc inc push popa shlb fnstsw pop shrl mov mov gs adc popf je (bad) rorl fs or push add lret pusha add jle outsl jbe cli notb fs stos sub nop/reserved sbb fstpt cmp push outsb insl or repz add data16 add jmp and sbb pop adc jo mov mov popa cmp push adc push in push and cmpsb mov (bad) cmp imul test outsb xor jge lds stos ss mov (bad) mov xor jb pop push leave aas xchg outsl jns or int add addr16 or sbb add or inc into or loope push and inc dec lods xor sbb push (bad) scas shl dec popa addr16 push sub dec pushf data16 pop add mov subl outsb je dec sub cmp dec or push insb jae push lock inc inc dec or inc inc orl xor mov mov xchg mov or mov les inc mov arpl test popa je cmp arpl divl ret adc xchg xchg movsb inc sahf mov mov jne lahf or add cmp push hlt xor mov cmp or and inc pop jo jo add inc call mov adc cmp and mov push imul mov jne or dec push add ret add test jne jb je adc std xor jb adc cwtl mov cmove inc push pop xor sbb arpl add add dec push and jg ja push push dec ret or sbb jne add or les sbb dec xorl adc in addr16 jns cmp mov xor in adc inc cwtl (bad) dec aas pop jae fcoml xchg pop mov sub popa and ljmp mov mov cmp int3 sbb or add test jmp xor sub jns jmp (bad) xor push jae jp faddl arpl inc outsb fs sbb or or divl ret cltd cmpsl jecxz and add inc in push inc pop mov inc cs mov cmpsb (bad) outsl jb or fsubs sbb or jo inc adc and and sahf push mov (bad) or lds aas scas or jno xchg pop imul adc push subb pusha sbb cmpsl outsl sub mov jbe int push jns pop adc or add mov ret clc fsts fs add outsl xor shlb out and xchg add lahf iret add adc int3 pop and loop push dec push scas fs mov adc mov out sbbl push add mov jb popa jns jne sbb or sub das or rcll lret adc insb mov jo imul pop loop sbb fidiv fcmove je aaa imul addr16 inc pop jg push js mov lret mov or push aam aad cmp cmp imul shrb data16 fstpl icebp (bad) aaa into arpl adc mov lock or jecxz pusha inc or mov arpl imul add or inc add adc add test xchg insl call add or sub push or push or insl push push mov or ret ljmp push push pop sti lock adc xorb adc and mov and push clc mov push jmp add add add xor add divb and cmovo adc inc cmp pop add add add (bad) sysret outsb (bad) test inc clc add add and pop add jbe or and add fbld inc pusha cs mov nop jecxz mov add fs adc sti add sti jo add jge popa or in inc stc bound pop daa rorb and and shlb idiv dec inc sbb std addr16 das or add add add incl add add add inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa jmp lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 