(bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea sub add adc (bad) decl lea push call inc mov add mov mov add inc add imull pop (bad) sti neg mov int3 rep cmp mov mov outsb push adcb sub je or leave fstps mov nop popf push cmp enter push inc dec and and xor push inc xor adc cmp out (bad) outsl andl test mov mov sbb add ret outsl or or push lods ret cmp add fnstenv rclb add mov cmp clc add cmp pop mov mov push add xor push push inc dec divl mov imul shr push xor (bad) xchg fstl lret or outsl add insl and cmp dec je add sbb pop push and push sbb lahf lahf lahf aam push add enter pop bound incl jne sar inc out mov or push add fistl mov mov xchg and jmp sub mov outsb adc push push push dec push unpcklps out xchg mov jl,pt pushf sub outsb lret fadd inc inc and push das adc mov mov cli pop and push je insl shll push dec dec jle mov mov push cmp and xor adc out sub and test jns dec fcoms daa adc mov mov in arpl adc add push sbb jnp insb mov jne push test lea add xor mul push jne push call sbb inc jae test xor add cmovo dec or int (bad) dec (bad) mov xchg cmpsb and adc roll leave xchg mov in push xchg xor xor in (bad) test mov mov or push xchg test ret lds sub xor mov or push push inc shlb test xchg xor cs or sub jb xor dec aaa aaa dec mov push push mov mov lea adc mov (bad) pop pop fcom in and imul lds les repnz cld add fistl movsb cli push jbe sbb popf mov fsts sbb es jbe push std cmp push pop es mov jle (bad) mov repz pop test jmp xchg jge dec sarb xlat xchg fs or mov clc sub outsl inc inc sbb (bad) cmp sub mov jbe fistpll (bad) movsbl leave (bad) mov loopne push (bad) in add inc cmp jb pushf xor jbe ds mov std testl push jb mov mov or xor xor inc or push push add pop push add add pop es add or add imul xlat mov (bad) ss loope out inc inc cmp mov jb pop adc fadds pop loopne shr mov cmp add push mov mov cmc loopne add pop out dec es lock mov push hlt outsb mov lock lret and mov inc jmp add inc pop rcl push or xchg mov mov pop outsb sub xor lahf cmc rolb cmc dec push mov in jb jge jne mov outsb sbb cmp or push mov sbb ret and in imul stc push fmull and adc pop sti fcompl insl aam imul out jo xor sbb push jecxz lods fstpt rcr sahf sbb pop in push roll (bad) cmp jne push clc push mov out (bad) int cmp fstpt sub clc ror or int cltd pushf test xor (bad) mov sub popa inc dec mov adc std (bad) pop push add jne (bad) loopne push jbe dec xchg clc mov push push lods pusha mov adc imul dec leave lock xor (bad) mov (bad) push dec push js mov (bad) sbb pop (bad) out inc push mov mov jns mov (bad) jge mov or pop sbb or adc mov mov mov cmp cmp fdivl add add or jne xor int push push jne or jne add jb faddl jne or jne add add lds jne rol add pushl add sbb je sbb neg jbe cmpsb mov jno (bad) jne or lcall or or out or or mov inc push dec xchg (bad) jne mov fsub jle cmpsl push cmc xor mov movb imul hlt adc fadd push pop push mov mov pushl pushl repz pop lds scas sub or test pop popa xchg (bad) adc inc adc add sbb test mov pop outsl jmp push xor lahf rorl loope je gs inc adc push jmp jae add pop pop test dec mov push push push adc cmpl lea enter aaa push clc add (bad) sbb add out ja inc sbb push pop xchg nop adc cmp mov adc mov js add jge movsl add shlb (bad) jmp rorb bound rclb pop push popa rclb mov mov (bad) mov or mov add addl (bad) fnstsw sbb pop mov pusha mov addr16 movsl data16 or mov insl cmp fsts xor xchg outsl lahf sub inc test mov adc clc test pop test add sub mov (bad) in add mov adc or loop xor ret or add push leave cmpb rorb pop xor add popa push push and add pop adc dec inc inc jb imul mov addr16 xorl mov dec xlat aaa mov imul sub add test out pop cld cli lcall cmp sbb fs movsb and jbe fcoms lods mov dec aad adc sub mov aam outsl add mov out movsl pop js mov decl add pop push sbb gs sbb mov aad outsb xor pusha push imul pop andl mov adc mov xor xchg (bad) psadbw xlat outsb cmp movsb add pop sbb mov sub movsb add aas repz push lock inc fdivs pop push sub je mov dec fmuls fildl enter push jns push mov mov negl push xor cli gs out dec sbb cmpsb or je pop jge (bad) inc stos clc pusha pop bound jno jecxz fdivrl fdivrs aaa shll ljmp fiadd insl outsb hlt aam bound insb jno or and je mov pop into push adc (bad) cld outsb shrl ret push push xchg mov adc mov pop aad and mov or in mov int3 inc addr16 test rcrb int3 pushf mov and sbb int3 push icebp lea iret jne movsl add dec (bad) fsubrp (bad) mov sbb xor adc cmp xor push mov mov sbb adc jo push adc pop sub lock shl inc jnp jge lea mov lret dec mov frstpm(287 (bad) je pop jle je dec iret mov out int xchg dec jne or adc jbe xor mov pop pop bound or je cmp popf xor mov mov and lahf mov ja inc add mov in std ja xor psubsb sub push lods lahf (bad) or jl add mov cmp push push pop jo dec mov mov fldl adc mov mov sub hlt cmpsb lock leave test stos push push leave and jb mov mov (bad) dec xor sub shll loope pop ret nop add adc and push je push mov out and shlb int3 xor (bad) arpl or mov or push add inc xor insb call int3 cli and dec aad in jbe cmp add push push push adc jno lods fadd push mov mov (bad) (bad) rcll xchg pop xor and xchg mov rol cmpl fisub int js shrl mov dec xchg inc hlt inc sbb jmp xchg inc xchg mov ja and pop add and pop or xor pop leave dec or lods lcall xchg rolb nop lods sbb popf or add mov dec shr sahf push fwait xchg sbb lret ret ficomp lock push inc test sar mov lret add add pop mov outsl or dec sti adc add sub repz and mov popf xchg cmp rorl jne sbb testl sbb mov in in cmp inc inc sbb sbb xchg dec mov leave pop repnz cs repz incl fidivrl pop fs sbbl pop mov mov mov fpatan push xchg in loopne pop and and and mov pop adc sub push sub mov outsb push sub sub sub pop xchg fsubrl xor xlat sub xor xor cmp lods imul cmp cmp ds or (bad) insb int inc and inc inc fs insb int dec sub cwtl dec dec jbe (bad) insb and xchg push push push push aam lcall push jnp imul pop int mov jmp pop pop dec pop push pusha popa scas (bad) les jl arpl cld lret (bad) fstps data16 fstl adc insl rep arpl jg inc mov je insb fdiv cmpsl jo add push (bad) das jle lret or insb mov (bad) scas lahf insb lea pop pop clc cmp mov dec repz push pop and add sbb sbb data16 mov adc orl jne cmpsb sbb mov sbb xor cmpsl gs xor sub inc jnp pop lods pushl xor fwait aaa je add mov sbb jecxz jo sbb call push icebp fsubrs and cmp enter mov and add mov data16 rcl jae pushf mov test sar add push pop pop jae sbb xchg xor ja sbb rcrl push inc sar movsb mov ret call push inc ret inc sub xor das cs and out (bad) (bad) dec pop ds lods cwtl jne (bad) es fiaddl mov inc fcompl jmp xchg out add inc push cmp imul insl shrl push xchg jo or flds aas mov fcmovnb rcll outsb fisttpll jl jo pusha push bound cmp into push fldt jge adc and push sub lret cmp and dec shr lcall mov push push mov mov xor mov xchg sub push aaa imul icebp jo lock xchg or pop inc leave cmpl and pop mov xchg sub add jl movsb sti rcrl adc cmp sbb mov pusha mov sbb and push hlt push (bad) lock pushf sub xor in call cltd inc or int3 add mov arpl push test sub push in xor outsl mov (bad) bound mov enter testb sub idivl cmp cwtl pop aas cs pop or jge in (bad) add je gs fbstp aaa repnz and adc dec adc fsubrs divl add xchg ret fdivr lahf adc std leave ficompl or or push push adc xchg xor es mov push out insb popf insb mull call adc mov ja int3 xchg pushf cmp xor test div mov add jle icebp pop pusha push sbb or stos push mov dec push ret insl and sub and jbe dec sbb nop push test push mov and push mov testb cmpb jne orb inc jne dec mov dec jne add and mov imul imul hlt add inc jg or jmp xchg je in scas or adc add loope fmuls fidiv cld lea iret pushf dec or sbb or add cmp jl sub scas add jmp (bad) xchg aam rcl add in outsb sbb cmp movsb push xchg daa fcmovbe jmp push adc aam roll inc push sub mov xchg clc add pop jge je cltd (bad) sbb in adc dec cld jmp cmp or xchg push decl add dec pop push fadds data16 pop shl scas (bad) add mov cmp push jno push insb and in lds adc jmp sub add pop popa imul mov sbb pop arpl cmc xchg jbe enter mov lods and fisubl mov mov and aad mov adc and cmp loopne sbb imul rolb xor sub loop scas inc scas sub mov ja add pop insb xchg or pusha cmp xor jp out adc add mov mov and xchg and add lcall jmp addl xor mov push mov push fs cmp (bad) je add add xor pusha lea push hlt push sti mov xchg mov rcrb xchg movsl popl add das jae add or add out ftst imul cwtl adc xor mov scas outsl jb adc and loopne enter push pop pop inc xor dec push inc mov movsb cmp hlt add cli xchg addr16 mov lret or xchg in in mov inc rcl jbe and jns mov pushf dec add js rclb pushf pop add (bad) mov popa pop (bad) mov push and xchg lods adc mov inc fs js lock push or dec hlt cli (bad) mov add ja and (bad) mov jp push mov test sub sbb jecxz outsl mov aam adc lcall das test lds sbb sub push sahf pop push mov push cmp sbb cmpl cs mov pop jmp xchg pop cmp lea push pop outsl cld inc jo popa mov xor cmp loopne pusha push xchg pop push shrb lock lock ljmp xlat test push aaa jne lods jmp mov adc fcom push mov xchg aad adc cmp or push jne lea movb shlb addl es push mov pop cs int lret push push jge (bad) push push push adc dec or jge push inc add push jge outsb mov clc xorl adc dec and sbb scas ret mov push mov sub and lock test xchg sbb adc test subl testl cwtl adc dec idivb decb (bad) je adc jmp lcall (bad) pop xchg push push xor dec ret sarb pop out xchg xor pop jb xchg dec push js push mov push ror in add mov sbbl add mov sub cmp add decb pop cmp sub stos cmc xlat int3 (bad) insl xchg popf push inc jo out pop jo insl lcall fs dec sbb cli mov insb push test imul or sbb mov insb push cltd enter ljmp pop hlt and (bad) dec insb sbb out pop mov and inc add shr les add shrl pop sub cld mov fisubrl mov movsw push and dec fisub test add js (bad) dec hlt pop imulb shr js lea lret cmp push sub cmp punpckhbw adc add int mov fcoml rcr adc neg push and push aam pop leave enter cmp jp cmp and and fcom (bad) sbb cli mov es (bad) push test lds rorl pop add xchg mov mov outsl xor push add cmp dec mov xor insl mull (bad) add sahf sbb mov jge rcr sahf xorb sbb xchg adc add stc fidiv mov sub xor dec mov stos inc jnp mov adc or jbe push xchg sahf mov push mov mov (bad) add or or cmp jbe add inc ficoml lret mov xor sahf sbb imul cmp cld inc xor std andl (bad) jae pop jo mov or mov subl jl cmp cmpl mov push push outsl add sbb daa je andb sub add pop ret jge jnp jg (bad) outsb sbb jle pushf sub mov and por mov nop mov sub sub add dec cmp in sub inc call push std out sbb lods repnz aas addr16 dec imul or xor outsb mov mov lret push add test xchg or (bad) xchg jp add movsl and mov ja hlt inc add or push jo pushl adc dec insb aad xchg ja lock mov add into mov lea fdivs pop dec aam and jge dec sub cmp mov insb out mov xor inc je and rcr pop adc outsl add sub add (bad) mov cs mov (bad) xor mov ret test jl jmp addl clc dec or testl cmc hlt inc andl push or push enter jg loope inc add pusha inc or pushl mov xor or enter push ficom add xchg xor or xor mov xchg mov pop pop mov sbb cwtl mov rol test negb pop or adcl mov loope cmp fiaddl loopne add clc jbe addl icebp mov jbe popa rorl mov xlat test cmp fistpll push mov mov ja mov xchg mov push adc mov mov into sbb push cmp incl jo pop mov pop dec sub pop cmpsb push inc sbb sub out mov or adc mov jle mov cmp insb jmp lods movsl add je or dec test jg add (bad) outsl imul sarb movb and pop or stc clc movsl clc insb enter clc cld mov mov nop sbb mov pusha fadd add mov jne jmp mov lock mov cmp movsb pusha push movsb push or (bad) fisubrl mov mov push jmp mov or leave or push test icebp lods enter cmc pop sbb loopne add add imul icebp (bad) outsb xchg (bad) push idiv and push xchg sti adc sbb notb cmp mulb jl add cli cmp pop push pop xor jbe xchg cmpb mov push xor test push xor je cmpb or je and push loope xor pop es jb and lcall push inc push inc inc push or (bad) push jo mov fmull test addl xor sbb mov std jle and clc std mov sti inc daa cmp movsl movsb push push inc sbb push or and adc cld hlt cld in repnz cmp clc jmp leave outsb sbb in cli xlat test (bad) xor loop xor addr16 in call lds and sub xor lock addr16 lret loopne push rorb or dec (bad) or or dec pop test lods enter inc sbb int push shlb push lcall out fs bswap sub mov xchg in cli push enter or push sub mov jbe inc push and fdivl push call cltd pop pop jno out sbb mov push push nop jmp inc xchg mov xlat mov jne adc out jb les rclb add pop add push jecxz mov push js add lock ljmp lret jmp test or jo cltd add sub outsl jp repnz push inc or int3 scas inc mov add xchg xor lds inc pop xchg pop mov lods ds xchg out pop movsb mov cwtl repnz inc lods je mov loopne clc jo xchg pop pop push sub loopne inc or add mov pop push jle loop jle mov mov cmp add loopne mov push xor test loopne adc jg dec clc jne outsl int3 pop pop out sbb dec mov add mov fs push or nop sbb imull fsubrs sbb adc pushl push andl out jae ja scas add fs xor fdivs lea add jb push push clc mov or xor or add cs adc mov add sbb cmp xor add adc cmp adc jb sub pop pop mov push pushf push xchg call add dec push orl mov loopne ret mov subl xor ljmp xor sub sarl ljmp inc pop push out movsl xchg push sub mov or test sub imul rcrb divl jns notb sub arpl or enter cld pop imul mov in insl mov jb into pop sub push or int3 insb dec inc out jmp incl cmpl jl inc mov lds mov push add subl lret gs movsl fcompl stos mov loopne or inc sub or adc and je daa fwait or call loopne mov movsl inc call cmp pop cmpsb loopne in (bad) (bad) lock mov and jmp inc movsbl testb stc or or mov or addb jmp or psadbw imul lea push sub (bad) sub (bad) jo and fiaddl and loope dec je fdivl mov repz add dec and mov add mov jbe pop adc pop push add sbb pop repnz mov pop into push pop leave adc mov mov mov pusha jmp lock pop mov fistl ret mov mov cmp mov imul push adc lock add and in mov inc adc adc push xchg stc es hlt pop sbb cmp push xor pop repnz sar sar adc dec pop adc fcomip decb pusha adc add pop xor mov dec int add dec (bad) and gs call push ffreep sti (bad) sti sub mov mov mov sbb push loopne and push popa pop jne sub hlt mov xlat push xchg dec xor adc cmp lock mov cmp or push hlt das icebp and add jl lea mov adc push dec adc int3 dec lea jns push push and enter sub ficompl sbb mov out adc fs call pop outsb rorl cmp inc incl jb add je and mov mov vmsave (bad) mov int3 and cmpb add outsl or jne jmp pop test push inc hlt fisttp lea cmpb jbe push in call dec in pop inc push mov insb cmc mov fisubr test xchg hlt or xchg test movsl dec add pushf push mov leave lock mov call mov incl inc out and jne and xlat lea mov mov jl inc imul roll jbe xlat lock inc add sub cmp mov inc lods mov test jnp jg sbb pop cmc jne pop lods jl std or pop pop pop add sarb inc push adc sub (bad) ds mov pop inc xor and and mov subl dec arpl sbb mov (bad) inc lock call lcall test pop mov cmc ficom add and sub mov jo aam and jae loope outsb jge decl mov push pop inc cmp incl sarb mov push push jmp nop lods sub call sub inc sbb paddw jnp jne add cmp cmova cli xor mov add mov and xchg xchg leave xchg and pop mov dec adc inc mov inc (bad) jne insl lcall or push or pop or inc xchg or orl aad test dec push jl ljmp mov push clc push xor inc lcall icebp addr16 push push out add jg cmp jb and mov mov xor cmp lods insl lcall shl add mov xor mov mov sbb cmp outsl add js shr shl sub ret (bad) fstpl xor mov cmp cmc sti sub add push incb insl jo hlt push pop mov mov pop dec leave push ss out and push (bad) add cwtl aam jb push jp pop add fisubr movl adc in lret pusha jecxz mov or or inc adc cwtl adc and rolb addr16 and rolb cltd andl jno sub cmp inc add pop mov mov cmp cmpsl mov cmpsb adc mov rclb sub jge or fsub dec jae,pn rcll (bad) shrb pusha leave mov inc insb xchg mov outsl cmp sbbl inc insl loopne xchg lock or lock dec cmp mov roll incb mov inc pop push add mov add and dec fdivrl shlb ss outsl adc mov and mov push and push lret idiv and pop mull fnsave movzbl dec clc mov aad insb push add jl and aaa jbe testb jge jae sub push lea inc imul mov popa sub out cmpsb jnp jge subb jecxz sbb insl mov cmp jle pop add sub nop pop cmpl jge mov outsl pop jg push sub setbe and pusha adc gs or mov sbb inc cmp sub mov sub testb adc fadds mov jns or aad testb in xor jg std neg pop sbb add mov adc and std scas test (bad) mov dec scas cmpb inc mov mov mov add enter ds add sbb sbb inc pop loopne (bad) xchg imull add cmp stos mov ret inc out cmp pop mov jl pop stc out mov test push stc shrb fs (bad) cli mov push jmp add dec std sbb scas lds pop rcr mov sbb pop jge stc add sub neg mov test sti nop rclb pop add adc rcr add popf pop sbb sti pop xchg lods insl insl mov mov jle cmp sub ret out cmove movsb test cs mov (bad) cmp or mov bsf stos xor cld call xchg xchg add int3 sbb sub call jnp sbb adc pusha enter mov add or gs inc andl es pop xchg in call pop ss mov or lret ret add add subl fisttpll rol xor movsb add enter mov adc dec setl adc or je push and int jmp inc jl lods insl add daa stos inc or xchg shrb mov mov pop jne push sbb or push pop fisubrl dec sahf mov hlt adc decl (bad) and out ret aas lahf sbb mov fmuls (bad) xchg lea (bad) ds lods clc fidivrl test xchg xor mov jne ss mov mov test inc dec shr inc test cmp mov sti ret imul sbb mov jge lea inc lcall in repz ss push inc loope (bad) xor or xor not mov int3 test sub sbb dec inc in das je bound add mov fstps jmp inc aaa fistl inc cmc xor jmp push enter jne in adc dec inc push jmp sbb push js cmpl popa sub jmp xchg rcrl or jb jle decl std imul and arpl fmuls je mov push and mov push and sbb rcll dec push aam push call add pop push mov push add adcl inc inc mov and dec or xchg addl pusha subl popa pusha xchg cmp dec movsb enter sbb sbb mov xor pop je push prefetcht1 xor and pop or xchg mov xor add clc push push and push mov inc jmp lock or sub jge add mov pop ss push add insb adc leave fidiv orps adc dec daa dec pop rcrb call adc pop (bad) lock ljmp and fs xor nop mov fldt (bad) add sbb or xlat mov adc fwait out mov add or movl add or divb lock add and ficom int3 push pop leave imul mov stos inc mov je or or sbb xorl push sbbl (bad) or ret push jae sbb cwtl or cld rorb mov aad xchg push or add es jmp mov mov cmp xchg jne push jae fist (bad) sarb mov add leave inc adc je add inc cmp jle and adc jae push and fiaddl push mov sbb inc cmp stos ja add add cmp push xor and jle cmp fsubs mov jo mov cs add js bnd mov movsl or or pop cmp adc jl jl icebp jg pop push mul seto neg or push stc push cmpl lahf or cmpsl fimul sbb adc fwait xchg inc push mov ret xor xor push addr16 inc mov xor pxor leave and loop lds sub dec pop add bound pop and movsb jbe sub adc div ret dec add (bad) in and ljmp daa cmpsb int3 inc lock pop xor pop call imul cltd sub (bad) clc inc add push jle xor add pop in add lea nop xor test push das sub pop in test imul xor push sbb jle mov mov mov out pop stos stc out ret adc cmpsb fstl mov dec mov mov (bad) fistpl add push pop mov addl loope es mov push sbb mov outsl sbb add cmovae aad scas jne cmp or nop pop jg push mov xchg (bad) jge lea cmp mov push pushf fsubs (bad) in jmp ret fisttpl or sbb or test out jmp inc test out push stos inc or adc mov loopne or pushl (bad) cwtl rcrb gs shrl sbb mov lea push cmp inc inc inc sbb jb pop loop push clc in out mov rolb rcrl pop dec imul out lea jl mov imul push xor mov and faddl or dec addl mov jge jecxz aaa pop popa inc lock icebp insl push mov jg cli and dec inc or inc test js inc ja mov mov loope scas call pop (bad) xchg push add and into lea mov jbe test ja test jmp (bad) enter inc sbb mov sub loope add dec mov or pop test hlt ret shrb add fcomps add mov add and cmp jae in cltd xchg fldt lcall push loopne add mov lea cli cmp jne in inc in jb (bad) mov and lret push test call cmp cs incl in scas or decl sbb jbe dec xchg jl movsl (bad) dec push or lock inc or fldt or pop xchg pop es dec jbe mov mov sbb inc cmp add testb inc push shrb in or lea cwtl mov leave ljmp mov add sub movsl insb add xchg pop mov lret add (bad) cmp jne xlat pop jle xlat inc push and cmp dec add scas adcl fwait loop stos mov fwait inc sub ljmp push adc (bad) inc dec loopne ret push fisubl jno rcll fidivrl add adc orl jo sbb mov jb lods jmp leave jbe jge mov or (bad) jae mov xor xchg mov lret (bad) or sti add mov test jb xor loope arpl stos decl mov dec dec pushf lea push hlt dec in mov pop clc xor mov or add sbb mov adcl lock or xchg and sub ficomp (bad) push invd add inc jecxz xchg cmpsb or adc jne std in cmp ss mov pop lea scas insb addr16 push mov sub imul movsb jns mov mov hlt inc xchg cmovo mov out adc push push dec pop jns pop mov mov xor inc dec pop xor mov jae mov das ja or add pop inc jno mov sub faddl lcall jmp lea clc lea fwait test pop adc jbe popa imul cmp orl hlt test data16 out adcl or jge jae mov jmp sub mov mov push mov mov adc push sbb lods cltd out push lret lods jl cmp in push add add sbb lods repnz add add add cmpb sbb mov mov pop jecxz mov xor cltd mull xchg cmpsl orb pop push outsl iret dec sub add mov pop (bad) mov push mov fdivs pop cmp leave fdiv mov mov add or or fildl adc rorb jle ficompl lock adc roll iret dec dec or xor xor ds cli mov sahf dec test fwait lods mov mov ss push aam stos test movl dec inc jle inc pop push jecxz jbe add mov mov sub mov aam push sub je add and sbb bound punpckldq pop push dec xor fisttpl (bad) mov jbe sub addl ds mov add (bad) lea ret push cltd pop push call mov lods mov sbb (bad) jp pushf cltd sbb std mov add testb aaa xchg mov cld in nop mov int push dec insl add sbb fidivr sbb inc and mov incb sbb adc mov inc repz pop jecxz mov jne cmpsb push or sbb and add (bad) lods inc es or inc and xor and inc js and es xlat sbb push add aaa popl xchg mov adc adc mov push adc adc int inc repnz cwtl mov ret fldl jae push punpckhdq lcall mov sbb inc xchg (bad) cli mov mov mov cld cmp push addr16 (bad) xor fisttpll outsw and and jbe mov sbb mov mov fwait fwait xor add or adc test pop (bad) sub movntq sub inc pop flds loope loopne or mov in pusha aam push sarl js jge or sti and jo ret sub dec xor lcall dec cmp jl push sub push inc jo dec jns push incb pop je sbb pop sti in jne fsubs cmovp test mov add push fdivrl or jb dec movsb add push sti xor insb or push jp mov or adc subb adc test push xchg lock mov push sbb or pop jnp adcb cmpsb mov pop sub aaa pop and dec inc lahf cmp cs cmp mov aaa or or negb mov push push sub or rorb call push jbe add pop loopne or sbb sbb push shrb cltd sbb push sub mov ja movsl mov pop push inc mov in push (bad) jns or js push xor subl inc bound add mov inc jmp sbb inc adc (bad) cltd test adc (bad) jne pusha inc fwait rcrl dec js jne dec sub dec imul insl or or cmp (bad) push sbb idivb adc push dec inc jo and add inc std xlat add dec cmp or xchg add add imul push fcmovne add shlb add or pop mov add push aaa idivl cmp pop pop add pusha push push or test mov ja pop loope orb jge or add jp aad xchg mov aas pusha push push push cmp add fwait jecxz mov mov add add test sbb xor stos lcall pop idiv push push sarl das xchg jne sub mov and cmp xor es cmp ret push fldenv or testb in nop je pslld pop push in std mov add sbb sub jo add push push js add cmp add cltd mov testb scas mov shl or outsl sub cltd adc insb sbb adc jmp insl out xor adc ret fisub jo add jnp jmp pop and push xlat repz pop pop rcll pop (bad) scas push fxch push imul lods (bad) cli add ret adc pop dec xchg mov add addr16 push std pop pop shl dec into mov or js jo or xor inc or fiadd sarb sub inc push out sbb xchg ja add mov xchg aad pop push (bad) xor pop and rcll data16 pusha push test mov clc and pop jg ja push in aad dec mov movsl push pushf xor inc movl (bad) jae out test inc enter ljmp push stos mov das xor or jl loope xor mov mov xchg les sbb popf lret roll out push pop (bad) fnstcw lcall adc das pusha push adc or punpckhwd cmp dec repnz adc call push sbb (bad) fs push push test (bad) icebp repnz loop (bad) xor insl jmp push les sub or and mov mov nopl punpckhdq lcall call add cmp push test xor and inc or jp inc cmp dec jge imul xchg adc sbb daa mov jmp int3 dec das push fiaddl pop mov adc pop mov popa inc (bad) leave ret xor in sbb sub pandn addr16 popf fbstp data16 jns data16 push inc push fisttp dec sbb (bad) stc fmuls dec push mov je push sti imul or insl adc or or or or bound add dec icebp gs fistpll (bad) or cmp movsl or sbb or or cmp mov adc xchg inc iret jge ja xor push or (bad) nop jge mov adc mov mov testb pop pop or sbb stc outsl call mov nop (bad) pop fcoms jne aaa call cltd aas mov ja mov fst add push push je push mov orb xchg ret pop jmp neg pusha or icebp nop ds cmpsl pop out adc inc or test and cmp dec or shll or push dec rcrl push jbe iret aad or in mov jge jle rcll pop fcompl adc nop add aaa or pop xor push add bound push inc loope lods faddl test jmp ss fidivl push movsl dec imul out push pop push sub push adc mov test push adc mov push dec cld lsl xor clc test lock push jo rolb or pop enter xor ljmp mov sbb push push shl xchg push pop pop aas and pop mov addb fdivr mov or lods or imull push lds jl mov aam movsb pop aam push dec push mov sbb jmp adc ret ja orl aaa lret mov jnp outsb mov add jne mov mov rol xchg add pop inc push push dec sarl mov aas cmp jl push jo push xchg sub xlat and sbb test popf scas jne popf or repz mov inc imul movb add cmc call mov xchg repz or adc (bad) ja xchg cmp mov dec aad pop xchg jle mov js pop dec je daa sub cmp in (bad) or aaa pop add shll aaa pop ret push stos xlat or or je mov sub cmp jae fisubl dec data16 or shr mov shrb and popa lahf sbb or inc mov cwtl mov mov dec sbb or inc rolb jp (bad) pop pop add or push adc pop sarb ficom pop fistpll ret inc or push dec dec insl clc cmp mov mov mov pusha xchg clc sar cltd fsubrs push stos jg mov or push jne mov mov dec (bad) call push mov push pop ja jne repnz jb incl call mov (bad) sti push dec jae popf or movsl push sub push lds popa xor mov lcall pop push mov testb xchg sbb sub and nop fcmovnb addl dec add lods or imul fs adc sbb js into mov ss mov cmp xor int aas inc dec jne pop mov jl stos hlt pop in insb dec or cmp lds and pop mov or mov push movsl scas int in lcall sub rcrb sub icebp repz sub and into adc mov into inc or and test xor cs jl shrb lcall or pop js lock xchg fcom pop pop or outsb sbbl outsl mov pop rcr mov adc mov xchg jmp pop push fninit in outsl das cmc fnstsw cmp mov and outsb push pop incb inc fldcw add or sbb popa call pop pusha fldcw pop pop pop lret pop and mov stos fsubs mov pop jmp mov add test jb and ss fldt cmp jb jb xor add add hlt sbb add mov popa push cmp jbe dec push jecxz stos mov sub (bad) ljmp xchg add mov lods cmp jne xor je or push mov or pop add dec (bad) out pop sti add mov andl and lods cmp jbe jecxz pop or shl stos xor adc push ljmp jecxz mov lods incl mov test sbb lods cs mov clc xchg dec mov stos mov lret pop imul lea xor mov addr16 (bad) xor je xor adc sbb xchg int3 cmp fistpl je repz pop sub lods pop lds test inc fwait mov add sbb cmp cmpsb pop jo add cmpl inc bound idiv aaa test cmp cs mov incl sub sbb push js jnp add cwtl cmpsb je mov jmp push rorb sub mov cmpb jne push test unpcklps out adc decl jne or rcrl loopne mul add stos sti jnp ficoml in fdivs mov mov notl lods ljmp sub ljmp ljmp sub (bad) out mov or jne sub fstl fdivs adc stos pop je adc inc adc inc pop rcrl push adc jle je leave fsubrl push stos outsl inc arpl test xor int3 cmp jae sbb (bad) dec hlt mov les add adc xor (bad) imul sysexit sub (bad) xchg je fisubl pop cmp dec jae (bad) (bad) data16 daa push lcall push fnop enter pop sbb xor push call or pop lcall xchg or sub mov adc or jbe lea dec (bad) lods push xlat push sbb cmpl push push sbb push push mov or pop sbb lock dec or loope jmp subl xchg das js inc mov mov adc push andl into pop adc fildl dec pushf or or mov mov mov sarb gs rdtsc sti or scas xchg or cmp lcall test or or adc pop sbb push mov cmp repnz ss lret mov fildl hlt orl and lahf aam fdivs adc and loope fildll in mov and xchg popa aaa imul pop in sbb mov sbb cmp push or aam jmp cmp push sbb mov lods xchg push cli adc fidivl sub pop cmp popf push loope test sbb push xchg cli or insb jecxz aam in inc add inc test sbb ljmp sub and outsb cmc jge data16 sbb jne,pn inc xor or (bad) jmp push dec jmp push push jae inc adc inc adc insl mov cmp xchg cmp mov ljmp je mov addr16 (bad) or lea idivb je push sub add je inc jle inc xchg xchg cmp mov cld (bad) fbld jmp push pop jmp sub je dec je dec jne push lds (bad) adc aam mov inc pop jb pop out add mov xchg loop or bound sbb inc out pop fstpt ljmp jbe jmp jbe mov popl cmc add mov dec xchg invd jne push jb div push push xor push sub mov jne gs mov mov inc push sbb leave mov push test test aam and in imul jge or push or cmpsl into cmpl jne test jbe mov fisttpl inc adc inc insl add sub push not stos cltd fimul adc xor repz shrb mov xchg aam out int push aad inc outsl sub lods (bad) inc test in push jge dec jo leave dec xchg outsl lods inc test rclb and fisttpl (bad) loopne shrb inc roll jns or push or test test ss cltd (bad) cmp mov jmp or xor or dec das sub fstpl test push or movsl ljmp push push mov or clc and jbe rcll add add sti insl std (bad) adc jp fsts test and pop adc push cmp je push jae rcl pop inc add inc fildl push fldl fcoml bound or mov aam lea xor lret inc push sti lods test in call (bad) out iret fstpt in add inc in add or fmul and jne fsubr jle xlat addr16 fldenv jne xchg jb or outsl inc mov insb fbld add and sub add aaa mov pusha fistpll adc or lea insl out xlat push insl movsl pushf jno or fistl pop clc outsb fmul jne sti fld ficom (bad) sbb push pop adc cwtl fldcw adc adc sub add fstps xchg fldl add and inc outsl push jp stos push add insl roll cmp adc stc adc adc (bad) jnp and je sbb sub enter add mov pop inc jb aaa jmp shr ja incl adc scas pop or fsts fcoms jno add jnp push adcl aad neg sbb out cld (bad) pusha dec push or mov xchg and (bad) outsb lret dec add roll or xchg bound push sbb cmpsl jbe jg mov fwait bound inc push mov or fcoms jmp fcomp mov fiadd and out and or xor mov orb jnp jne inc lgdtl (bad) jnp sbb js imul rolb int3 in fbstp push incl push mov cmp inc into (bad) pop xlat mov jecxz je sub sbb jo adcb sbb sbb stos fmuls mov jbe push js,pt adc push sub add jnp (bad) fiadd add or mov jne xor pop lea ret ds (bad) pop pop insl cmp je cmp je adc mov adc out push jo dec xor daa and pop mov inc inc jle test enter (bad) adc jle jae sbb mov add xorl pop jle or (bad) push mov push xor inc mov minps adc es jl pop je rcll mov jae mov cmp ret inc cmp jb lods adc pop fisubr add pop and lods adc adc add xor cmpl inc mov push xor aaa or clc movb jmp xchg popa outsb lahf and (bad) dec sbb mov js xchg pop cmp sub pop fldl or sbb popa mov sbb push jb,pn inc mov pop in xchg js add and roll outsb in insb xchg sbb lds scas jmp inc and push ss inc push mov call stc jne scas mov shr or sbb jne cmp rcl jmp rorl movsb pop or ss ss push ljmp (bad) pop push push lea xchg mov or cwtl cltd or fisttpl sub cmp (bad) inc xchg cld inc test divb push xchg pop adc dec mul jmp test jmp addl mov sti cltd xor sub ret or dec fdivs or loope cli fyl2x repz jmp cs adc add push mov cmp or add push or mov sbb push push outsl adc push out inc mov (bad) and inc insl int3 outsl repz cwtl adc xchg (bad) cmc icebp sub push jo push sbb push pop cltd mov mov or or out xchg fs or and test test pop mov andl sbb jmp decl ret (bad) sbb cmp xor iret sbb or xor inc xchg (bad) or pop loopne push cwtl lret sti add clc and shl cmp push ja add (bad) ss unpcklps push or (bad) in shr and add jne sbb jle add mov rclb and cmp jbe stc xlat push das pop (bad) pop (bad) jmp movsl xor or insb add push or dec out jmp push ja pop push and int3 sub mov ja cld add xor sub or das jnp dec inc ljmp pop dec fldl2e cmp adc sub fsubrs sbb rcr fstp adc icebp or insl lahf fdivrp cmc adc ret push pop push rorb push inc and out push sub sub test lods bound mov push cmp cmp push rcrb push loopne pop mov fadds cltd mov or adc cmp fsubl sub out hlt push pop or adc das push dec mov add jno xor and pop pop sbb pop and sub loope jg pop sbb pop push roll push mov mov dec cmp inc call pop arpl add inc add xor mov push or in push adc daa cmp jo jo test cmp in pop jne fsubrs ja and lock loopne loop mov or jns or add movb pop sbb call xchg add movsb dec add test adc nop add cmp pop adc movb mov push loop aam dec test jmp mov ljmp pop or int3 or mov add fistp cmpb adc or jne int aad push pop push push cmp xor xchg or (bad) je call cmp adc fwait lods call xchg subl popl adc lock dec sub stc pop push mov loopne mov jg lock mov jb pop cmp jne mov lret (bad) xchg (bad) hlt mov mov jmp ret aad testb or push cmpsl add test ja push inc jl pop cmp cmpb subl mov adc ds bound test cmc stos pop lret mov dec dec jnp push mov sbb mov inc inc aad hlt push inc xchg and sbb pop cld xor loopne aaa mov jne movsb mov adc push test xchg inc push int3 pop adc xchg mov xor sub fdivl (bad) loopne stos or ljmp adc push loope fmuls jne and fnop jmp fwait clc lahf sbb pop push scas add mov stc xchg mov and mov sbb adc or jg das pop mov or (bad) sbb pop or in push test sub pop fbstp add mov lahf jp sbb fcmovnb xchg std ret jae pop stc or (bad) in adc lret push fs fsts call call mov add cwtl hlt cli or cld (bad) into push lds adc sti mov cmp inc jae movsb inc in push mov rcll sbb inc xchg jb mov test decb sbb sub aad push adc jns mov std ret movsbl adcb jmp sub adc adc push bound call adc dec cmp ja adc jnp (bad) ljmp outsb test je lea sub mov dec push push adc rorb out pop nop mov xor dec (bad) (bad) push mov mov mov dec shr ret shl add and lret (bad) fimull sub pop push adc pop rcrl mov pop imul (bad) hlt adc cmovns call pop xor and pop lods fsubr push mov imul add out mov push cmpsl pop or lea or rcll mov sub push jbe push lea shr inc mov fisub sbb out add pop cli pop jbe pop jmp mov mov mov inc xchg fisubrl inc sub imul add imul rcll pop dec xchg xchg lods lcall add (bad) enter pop inc adc or add xlat orl cltd sbb push push push jnp sarl jge sbb aam jl sub push (bad) and sbb xor popa add mov shlb xor or (bad) ja mov cmp adc sub jle lahf shrl and sub push out (bad) jmp aas push adc push adc push jae (bad) repnz je pop jo and push mov jmp adc jnp push pop shll push pop sbb add inc insl dec movb or cmp and mov push clc add (bad) add inc sub cmp and add add and ja mov fmuls imulb and aas ja mov push inc push mov mov mov add in dec mov dec es sbb pusha mov sub mov lods push or loopne test inc dec push (bad) das (bad) cmp add outsl cs jo adc add pushf xor out or jnp lock outsb test cld jae clc outsl jge mov or jae enter movsb or cmp mov shll xchg (bad) cli mov mov aad xor fdivrp idiv (bad) orl mov cli or hlt mov ds or pop xlat adc or adc push push sub imul cmp add or or lods or hlt int sub mov inc mov cmp je sub shlb and add sbb fdiv mov (bad) lock add mov jne pop pop mov subb je jp or sbb icebp mov cmp je inc mov push inc pusha mov push mov rclb cmp mov rorl inc lods int or out lcall adc scas pushf inc xor mov popl cwtl or mov push add lds pushf or ljmp data16 or or and rcr pop jae pop push mov mov inc inc jo call into lcall add dec jae test add and xor divl lret cmp add icebp fisttpl stc inc and xor dec or lret and cld sarb add and jl,pt pop (bad) sarb add pushf rclb adc pop push in outsb mov jbe pop pop xor nop je mov cmp andl jbe inc loopne repz arpl (bad) aaa inc dec fsubrl inc test cmp ja mov add fwait jecxz mov in (bad) dec pop and (bad) lret push sub xchg xchg sete inc mov fneni(8087 sbb push fwait adc jno leave jb mov or add mov aaa mov xchg insb loop cs mulb jp push jae test lods mov lea fiadd xchg mov dec mov cmp mov add cwtl in push sbb jae shrl mov add rcr sar mov out xor adc push es mov sbb push mov mov push pop pop popa push lahf rcll mov inc cmpb pop add mov sbb rcrb jne unpcklps mov adc xchg pop add loopne pop mov dec divl mov inc cmp ret or and sarl shrb push test pop inc es fadds xchg cmp add ja add mov pop ret orl and add ret adc sbb nop mov dec lea mov adc xor fstpt jmp jmp pop add cli js or pop mov push pop jne inc push sbb cmp cmp sub mov js jne inc rcrl rol daa mov adc cmp sub mov rcrl add fdivp mov jmp ret jecxz idiv or pop or fld fadd sti loope mov out es pop push jne (bad) jl or or add mov push push pop inc shll add jmp jae and lahf loopne les mov ret ss mov push or stos mov xor sub pop cld ljmp and and and sbb loop stos xchg bound xor orw and or inc lcall and sbb aam mov test out sbb pop adc add andl add and add mov jp add inc and and jg xor push adc cmp nop or into jnp jbe push or lret pop adc mov psllw cmp rcr nop fcoml imull out and ret xchg push xchg mov adc mov push sti out adc movzwl mov jns jns mov push dec popa dec mov in inc inc bound push shr or push pop enter fwait xor adc lret sbb pop ljmp repz iret lret inc inc push insl pop jnp inc sub fstpl push or cbtw adc fcom add adc clc (bad) adc sbb neg sbb not or and je gs pushf cmp je jns sbb lret or shll fldl shrl pop clc (bad) mov rcrb pop sti outsb mov lea or cmp mov ja or and fldt xor gs add imull lahf push cmp cmp push inc das pop xor divb pop (bad) rcl imul adc outsl cmp pop or or jne jmp xchg cmp roll inc mov (bad) or adc aas std pop adc and loopne push or incb jb pop sbb inc inc add js (bad) xor lsl add pop test sub push cmp xor pusha pusha fsubs sub dec ror push mov add mov pop mov mov sub push cmp dec or lret repnz push mov in mov lahf outsl or loop or jmp leave data16 or jg int3 jp and dec test jp cli outsl mov pushaw lea mov mov popa cmpsl pop addb popf mov gs or arpl push add jl fsub or andl push ret sahf adc add out push cmp dec and push push mov or mov inc insl mov push sti mov push add add push movl push std call xchg pop dec sub add jmp adc and cmp pop aaa fnstcw cmp push or mov xor or sbb pop loop inc rolb cmp or fild add push clc mov mov push rol or addl pusha pop cmpl mov adc adc sti push popf push pop mov in sub test pop adc sarb movsb inc xchg roll push lcall into push xchg or dec cmp loope loope lods adc fwait cmp jmp and and push dec dec inc and and inc cmp xor and and sub and and and sbb adc and and mov pop inc inc inc inc pop pusha fs insb xchg jge mov out stc js jl xorb ds mov mov mov mov mov iret out pushf mov mov mov lods mov mov mov (bad) enter mov mov mov cld popa bnd add sbb sbb movsb mov test sbb sbb xor xor and sbb xor xor adc or xor xor add add xor cmp jae fs inc js je enter insb push enter fsubrs popa xor test fs (bad) sarb mov jecxz orl cmpl fs adc out inc inc push inc pop inc pop pop iret lahf jg pop pop push inc dec push inc push inc dec dec insb out jg push push push jns je insl push outsl outsl je and fisttp pop and pop push inc dec dec into out xchg push jae outsl and inc dec dec (bad) cld pop push dec dec dec inc dec dec dec xor pusha iret inc push push rsqrtps enter das add cmp push pusha jg daa push dec push inc pop push mov inc inc dec inc seta pop inc inc sbb sub cld ret outsb push dec dec sbb inc dec push dec push iretw mov dec dec dec dec push dec rcpps push dec sbb aas pop add push jb fs je xchg inc and addr16 push inc push gs imul enter jb outsb je inc dec inc jne arpl std insb fs jne bound sbb lock fisub or dec popa insl pushl inc push push inc rcrl arpl jae data16 push imul loop jae or jno push inc adc dec push xchg pop inc rorl dec dec or inc daa inc xor sub jae inc dec jo jmp pop jbe mov popa push pop inc out insb push and sbb insb imul outsl jne jae loopne inc (bad) std sbb inc dec push pop inc inc push inc ret popf inc addl mov dec (bad) add cmp int data16 jae adc push outsb outsb out lea jae imul jae test out outsb je dec cs outsb imul add pop imul sub test movsl lret xor cmp xor xor and xor xor leave adc adc add add fbstp and popa je add arpl inc jbe cmc and cmpsl movsb clc mov js insb outsl adc push push inc outsl xchg jle push lcall pop gs je cmp in ss aas push push push imul popa jns addr16 outsb and pop fistl jae (bad) cmc add arpl data16 sarb inc stos popa sti (bad) push push popa jae mov cmp mov ss add or popa fs pop push call xor popa jo xor pop inc mov je jo push out xorl (bad) insl in sbb inc push xor xor push outsb lret cmc xchg mov cmp daa inc pop mov inc pop or mov fs inc (bad) jge xor push push inc inc sbb mov jbe push inc jae and push push dec or aam arpl inc sub or and cmpsl jae aaa or mov jne lods lea int3 imul push dec xchg je cmp loope mov dec jg sub jo arpl or add and test (bad) call push gs ja bound insl popa mov insb je jo ja add lods cmp cltd adc pop add jne ja ds mov pop aas add sub dec lea imul js in insl imul xor push push inc scas sahf mov sub pop and cmpsl rcrl (bad) xor out adc jae inc imul cmc lods ret inc jae sub dec jle sarb mov push push push inc pop jae xor sbb mov dec pusha mov outsl js lods rcrb lahf jae icebp or xchg popf outsb xchg jmp inc testl xor push divb pop arpl insb jnp push jnp pop cs outsl pop push adcl popa mov push jne fisttp clc addr16 pop insl popa push pop popf add sbb sub (bad) push fadds inc aas cmp popf outsl xor and iret jne pop pop xor popa jo sbbl push dec insl lcall pop imul or or inc mov add cmp fwait stos ja and adc sbb jae push icebp sub dec dec dec dec dec adc ss test xchg pop lret arpl lea imul jno out cmp js jp outsl xor sub in icebp fsubl mov maxps mov pop dec (bad) fstpl pop ja pop xor jns aaa lcall add lds sub aad add dec dec mov outsb xor xor aaa pop jae sbb addl daa xchg cmp sbb push mov imul mov push outsb (bad) dec stc mov sub or pop xchg pop add ljmp (bad) sbb jae arpl jae and fcmovnu loopne or add and pcmpgtb mov xor mov pop push sbb cwtl push add fistpl and gs jo inc outsl sbb add pop outsb or gs and out or adc add ret fistpl sbb daa ja sbb arpl sub jne mov inc arpl or or lcall mov inc inc dec pop ja pop pop cs lahf push popa inc imul bound (bad) imul insb mov shrb jo mov and add sti or mov pop push jmp adc and sbb notb lea or and pop sbb stos aaa pop sub loop or adc sub outsl pop (bad) inc and xor inc mov (bad) dec insl fs clc call in loopne loop in call in jmp and int mov addr16 and in imul call sti cmc push out jmp jmp out and sti repnz and jmp cmova fwait mov xor pop adc adc outsl ss adc add push jmp push and mov sbb mov mov push loope cmp test inc dec pop ds lea or inc fwait imul jb jns das add push push dec arpl push pop jo dec outsl jbe lds lods sbb pop xor mov xchg sbb lods gs adc aad and neg mov data16 pop push adc imul es movsl pop pusha mov scas cs inc xor inc pop in or or arpl push xor mov lock shrb (bad) push push push fiaddl dec xor je sbb dec push lds popa pop xor pop outsb pop xchg fcos call clc push xor (bad) add inc jbe negb inc mov mov (bad) dec cs hlt in pop das inc jb xchg idivl jb inc xor jno pop enter repnz leave nop or inc stos and leave nop or push test add dec in or xchg inc insl cmpsb leave outsb mov dec push cmpsl ss xchg sub lret das jl inc xor pop leave lret cmp (bad) mov mov sbb mov and js or inc fisttp cmp mov negl xchg and xchg fbld and mov xchg and enter sbb xchg inc push ret notb arpl insb dec bound test fs lret xchg hlt inc xchg mov pushl loop pop dec rclb scas and cli scas or nop or (bad) repnz in nop mov sbb enter in mov ret in repz (bad) and jb sbb or inc push leave push nop (bad) popl add incl loopne or (bad) adc incb pusha mov mov jb xchg cmc lahf inc jb inc repz aad inc xor and pop lret unpckhps js ja and xchg jbe cmp xchg and imul enter sbb in repz in fs xchg inc call pop inc dec repnz xor dec ljmp out xor jb repnz sbb mov adc aas adc negl fs aas inc pop jbe xchg iret fcomi pop add idivl cs sbb cmc dec repnz xchg aas daa dec ss jb hlt dec (bad) fild fs and and pop sbb sub mov loop and and ss ss pop inc xor xor xor xor and ss sub cmp and xchg sub pop cmp sbb (bad) jg nop lea nop or lods push cmp das in or cmc repz dec outsb ret nop dec sub insb enter or pop das xchg or aas or pop jb in repnz and ss addl xor gs or das es push sbb fsts in dec cs lahf xor fs xchg cs jg xchg scas std and movb fildll clc rorb pop movsl clc or nop popf je xchg lods pop call mov lret sub push outsb adc imul (bad) shlb sbb pop or jb sbb hlt jg dec (bad) enter jg pop lea pop nop or nop pop aas xchg insb dec cs div jg dec iret inc xor fwait incl outsl daa inc sub lret rclb mov flds (bad) nop or sbb (bad) loopne mov leave mov pusha daa pop and and adc mov sbb comiss and into loope cmp add cmpl push cld in add cmpsb stos into incb ret add push paddd aas loopne movsl dec xchg std jo xchg push test cmp pop leave nop or (bad) das add or sbb or nop pop sbb nop or sbb push leave nop or push xchg hlt xchg xchg inc popa xchg (bad) cmp ss pop das clc nop (bad) in das push das in or pop add xrelease sbb pop jb (bad) daa cmc mov popa inc xor fs fnop xchg dec lods pop fs xchg fadds das ret xchg lods cmpsb in xchg lahf clc and imulb sarb ret xor ss bsr sbb sbb sbb sbb (bad) repz and leave dec iret mov inc push and ss jbe pop pop inc outsl inc ss xor pop in fs ss inc aas add and jp cmc and in div lret hlt xor jb xor inc outsl outsl sub and ss das cmp hlt jge inc xor icebp cmpb inc xor jl and xor and or jle inc xor add sbb and nop or lahf fsts jo or nop or fisubr or nop cmp leave nop or jb and or out sub xchg xor das and xchg sbb xchg and dec pop pop and fcmovu popf adc sbb and mov dec dec das pop sbb fmuls out dec sbb fsts out inc repnz xchg inc pop push fs setl xor out xchg negb inc pop cmpsl pop rorb and xor mov cmp hlt pminsw xchg and adc adc enter ss test xchg div icebp iret fsubs or fs in idivl cmpsb or repnz xchg inc ja fs scas in add int3 scas sbb enter lea insb shrl jecxz pop inc jb xchg (bad) pxor fs xor int ss ss jg push iret and arpl pop and and pop sbb incb pop xor leave nop or xchg jg leave nop or jae dec cs dec jmp hlt insb enter xor dec xchg enter jb pop leave mulb lds push movsb and bnd xor mov repnz mov xor clc lcall nop xor aas pop aas leave nop or stos in add scas int3 hlt push pop dec es aas or and clc ss jb mov xor mov or pop or mov sbb adc mov fs ss pop outsl movsb das sbb xor in pop fdiv push dec cs nop outsl pop idivb fistl adc bound enter pop cs dec add repnz pop dec xchg push insb enter dec outsl push aas xchg push mov add xor mov and fildll and mov jg lock mov inc rclb test jmp adc pop fwait jg,pn jg cmpb and mov cpuid mov aad pop fcomp fdivrl mov movsb cmp rclb movhps imul lret inc repz adc ljmp push fidiv dec mov inc leave (bad) jb mov pop aad jbe xor nop or push movzwl fs adc fild pop (bad) jns sti loope loop jb push movswl pop mov movsb inc das or (bad) das shr test outsl hlt out test push inc (bad) lcall pop mov repnz test pop cmp enter add add inc popa stc push mov xor clc out outsb das test mov (bad) xor jmp jg out and or gs xchg dec add scas (bad) lods dec popa push or scas int outsl outsb das mov leave loop add xor xadd repnz inc orl mov xchg xchg add pushf movsb popf pop test mov adc fstl inc xchg ja adc mov push popa mov pop stos insb adcl dec cmp xor push ja test mov dec inc push mov dec dec mov mov je mov push mov and dec popa outsb popa and adc push adc add pop sbb pop cmp js dec push jne addr16 (bad) mov push xlat pop pop fwait mov add pop jmp outsl pop add xor xchg in sub and ja push or pop lods fld es add and add enter add and enter add test inc cmp addl test (bad) add add push add mov mov add adc ret bound xor sub imul xor cmp int3 mov adc aaa aas xor adc fdivrl push push add clc mov xor fmul mov ljmp pop push adc push insb jo inc sub xor inc dec arpl pop imul sub dec push inc dec pushw bound fdivr (bad) ljmp cmp push push dec dec imul cmp xor push inc dec inc jmp jno imul ja jns (bad) (bad) (bad) jg jne xor xor inc inc aaa cmp dec dec dec dec inc inc dec inc push push push (bad) call add push dec pop pop bound push pop push push arpl pop mov rcll (bad) lret rorl fnsave ss xchg pop sub sarl (bad) lret (bad) jno fucom imul icebp popa bound jnp mov cmp push jnp mov dec push cmp mov fiadd push inc pop ret sbb push cmp add fdivl mov or pop clc adc and jne mov pop mov test insb outsl bound (bad) add jb outsb push or mov aas arpl inc xor int mov inc inc or fcoml jb or inc js arpl pop adc and jo xor inc push jae dec popa outsb fs push dec jo (bad) push add dec gs jo insb mov fistpl arpl add (bad) cmp jne jns push gs and push push pop fldl divb je add add incl push imul jmp jo adc push jbe push imul aam arpl outsb mov jne je inc jns push outsl xor gs push fimull mov add repnz (bad) adc sub adc push pop aaa popa fs adc mov jb mov cmp cmpsl pop ss jne jo lock roll xor adc mov and inc or sub sub imul fildll bound push xor mov jae or je and xchg daa add push and inc adc sbb mov push dec jae lcall insb mov imul jns out (bad) (bad) jbe inc fs dec outsl mov loopne orl jb jl int3 cmp mov gs push imul cmp or movsb outsl xor inc push adc test lock dec outsb outsw lock adc inc stos or sbb jns adc imul arpl inc xor push pcmpeqw (bad) fimul or or (bad) cmpsl test push jg xor pop push inc fimull jmp out cmp xor imul movsl push imul push push or mov cmovle stos sub cmp inc jbe mov inc dec and int mulb push (bad) cltd cs fdivrs push mov fwait imul and adc pop sub int pop xor loopne cmp push cwtl adc pop lods push jne jns sbb jmp and lods insb adc popf popaw dec pop push (bad) fisttpll shlb test xorb cmpsl xor jl fmuls push lret inc sub imul add lock mov loope dec mov mov lret mov or add sbb push or int adcb jmp mov sub icebp push dec jl mov lret xor and adc mov xchg jl pop sbb data16 cmovl ja mov xor and scas test sub and inc outsl js sub bound and jns dec inc das or iret inc inc pop mov aad insb dec mov or in arpl push inc add dec add add mov dec loopne mov or add and scas jnp test in mov in adc add pop pop add adc add sub sub xchg and fsubr add imul mov enter or pusha cs fwait adc test add es mov lock (bad) mov cwtl rorb in add mov add incl add add add inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add fdivl add dec xor add xor add add add add xor add xor add add adc add jge add sbb add mov add and add xchg xor add xor add xor add xor add xor add xor add xor add xor add xor add add add xor add add add add add add xor add add add inc xor add add add add addb add push xor add add add add add add je add add add or add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add pop push push xor cs insb add push imul outsl insb xor cs insb add inc inc push push xor cs insb add inc push dec cs dec dec add inc dec dec xor cs insb add inc push xor cs insb add xor xor fs insb add add fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs jo outsb dec gs add add jns je outsb jo outsl je arpl je add inc gs gs outsl jb push popa jb insl jae add gs outsb imul add add jne push jb arpl jae jae add push dec inc gs outsl insb fs popa je inc add ja jo imul (bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea sub add adc (bad) decl lea push call inc mov add mov mov add inc add imull pop (bad) sti neg mov int3 rep cmp mov mov outsb push adcb sub je or leave fstps mov nop popf push cmp enter push inc dec and and xor push inc xor adc cmp out (bad) outsl andl test mov mov sbb add ret outsl or or push lods ret cmp add fnstenv rclb add mov cmp clc add cmp pop mov mov push add xor push push inc dec divl mov imul shr push xor (bad) xchg fstl lret or outsl add insl and cmp dec je add sbb pop push and push sbb lahf lahf lahf aam push add enter pop bound incl jne sar inc out mov or push add fistl mov mov xchg and jmp sub mov outsb adc push push push dec push unpcklps out xchg mov jl,pt pushf sub outsb lret fadd inc inc and push das adc mov mov cli pop and push je insl shll push dec dec jle mov mov push cmp and xor adc out sub and test jns dec fcoms daa adc mov mov in arpl adc add push sbb jnp insb mov jne push test lea add xor mul push jne push call sbb inc jae test xor add cmovo dec or int (bad) dec (bad) mov xchg cmpsb and adc roll leave xchg mov in push xchg xor xor in (bad) test mov mov or push xchg test ret lds sub xor mov or push push inc shlb test xchg xor cs or sub jb xor dec aaa aaa dec mov push push mov mov lea adc mov (bad) pop pop fcom in and imul lds les repnz cld add fistl movsb cli push jbe sbb popf mov fsts sbb es jbe push std cmp push pop es mov jle (bad) mov repz pop test jmp xchg jge dec sarb xlat xchg fs or mov clc sub outsl inc inc sbb (bad) cmp sub mov jbe fistpll (bad) movsbl leave (bad) mov loopne push (bad) in add inc cmp jb pushf xor jbe ds mov std testl push jb mov mov or xor xor inc or push push add pop push add add pop es add or add imul xlat mov (bad) ss loope out inc inc cmp mov jb pop adc fadds pop loopne shr mov cmp add push mov mov cmc loopne add pop out dec es lock mov push hlt outsb mov lock lret and mov inc jmp add inc pop rcl push or xchg mov mov pop outsb sub xor lahf cmc rolb cmc dec push mov in jb jge jne mov outsb sbb cmp or push mov sbb ret and in imul stc push fmull and adc pop sti fcompl insl aam imul out jo xor sbb push jecxz lods fstpt rcr sahf sbb pop in push roll (bad) cmp jne push clc push mov out (bad) int cmp fstpt sub clc ror or int cltd pushf test xor (bad) mov sub popa inc dec mov adc std (bad) pop push add jne (bad) loopne push jbe dec xchg clc mov push push lods pusha mov adc imul dec leave lock xor (bad) mov (bad) push dec push js mov (bad) sbb pop (bad) out inc push mov mov jns mov (bad) jge mov or pop sbb or adc mov mov mov cmp cmp fdivl add add or jne xor int push push jne or jne add jb faddl jne or jne add add lds jne rol add pushl add sbb je sbb neg jbe cmpsb mov jno (bad) jne or lcall or or out or or mov inc push dec xchg (bad) jne mov fsub jle cmpsl push cmc xor mov movb imul hlt adc fadd push pop push mov mov pushl pushl repz pop lds scas sub or test pop popa xchg (bad) adc inc adc add sbb test mov pop outsl jmp push xor lahf rorl loope je gs inc adc push jmp jae add pop pop test dec mov push push push adc cmpl lea enter aaa push clc add (bad) sbb add out ja inc sbb push pop xchg nop adc cmp mov adc mov js add jge movsl add shlb (bad) jmp rorb bound rclb pop push popa rclb mov mov (bad) mov or mov add addl (bad) fnstsw sbb pop mov pusha mov addr16 movsl data16 or mov insl cmp fsts xor xchg outsl lahf sub inc test mov adc clc test pop test add sub mov (bad) in add mov adc or loop xor ret or add push leave cmpb rorb pop xor add popa push push and add pop adc dec inc inc jb imul mov addr16 xorl mov dec xlat aaa mov imul sub add test out pop cld cli lcall cmp sbb fs movsb and jbe fcoms lods mov dec aad adc sub mov aam outsl add mov out movsl pop js mov decl add pop push sbb gs sbb mov aad outsb xor pusha push imul pop andl mov adc mov xor xchg (bad) psadbw xlat outsb cmp movsb add pop sbb mov sub movsb add aas repz push lock inc fdivs pop push sub je mov dec fmuls fildl enter push jns push mov mov negl push xor cli gs out dec sbb cmpsb or je pop jge (bad) inc stos clc pusha pop bound jno jecxz fdivrl fdivrs aaa shll ljmp fiadd insl outsb hlt aam bound insb jno or and je mov pop into push adc (bad) cld outsb shrl ret push push xchg mov adc mov pop aad and mov or in mov int3 inc addr16 test rcrb int3 pushf mov and sbb int3 push icebp lea iret jne movsl add dec (bad) fsubrp (bad) mov sbb xor adc cmp xor push mov mov sbb adc jo push adc pop sub lock shl inc jnp jge lea mov lret dec mov frstpm(287 (bad) je pop jle je dec iret mov out int xchg dec jne or adc jbe xor mov pop pop bound or je cmp popf xor mov mov and lahf mov ja inc add mov in std ja xor psubsb sub push lods lahf (bad) or jl add mov cmp push push pop jo dec mov mov fldl adc mov mov sub hlt cmpsb lock leave test stos push push leave and jb mov mov (bad) dec xor sub shll loope pop ret nop add adc and push je push mov out and shlb int3 xor (bad) arpl or mov or push add inc xor insb call int3 cli and dec aad in jbe cmp add push push push adc jno lods fadd push mov mov (bad) (bad) rcll xchg pop xor and xchg mov rol cmpl fisub int js shrl mov dec xchg inc hlt inc sbb jmp xchg inc xchg mov ja and pop add and pop or xor pop leave dec or lods lcall xchg rolb nop lods sbb popf or add mov dec shr sahf push fwait xchg sbb lret ret ficomp lock push inc test sar mov lret add add pop mov outsl or dec sti adc add sub repz and mov popf xchg cmp rorl jne sbb testl sbb mov in in cmp inc inc sbb sbb xchg dec mov leave pop repnz cs repz incl fidivrl pop fs sbbl pop mov mov mov fpatan push xchg in loopne pop and and and mov pop adc sub push sub mov outsb push sub sub sub pop xchg fsubrl xor xlat sub xor xor cmp lods imul cmp cmp ds or (bad) insb int inc and inc inc fs insb int dec sub cwtl dec dec jbe (bad) insb and xchg push push push push aam lcall push jnp imul pop int mov jmp pop pop dec pop push pusha popa scas (bad) les jl arpl cld lret (bad) fstps data16 fstl adc insl rep arpl jg inc mov je insb fdiv cmpsl jo add push (bad) das jle lret or insb mov (bad) scas lahf insb lea pop pop clc cmp mov dec repz push pop and add sbb sbb data16 mov adc orl jne cmpsb sbb mov sbb xor cmpsl gs xor sub inc jnp pop lods pushl xor fwait aaa je add mov sbb jecxz jo sbb call push icebp fsubrs and cmp enter mov and add mov data16 rcl jae pushf mov test sar add push pop pop jae sbb xchg xor ja sbb rcrl push inc sar movsb mov ret call push inc ret inc sub xor das cs and out (bad) (bad) dec pop ds lods cwtl jne (bad) es fiaddl mov inc fcompl jmp xchg out add inc push cmp imul insl shrl push xchg jo or flds aas mov fcmovnb rcll outsb fisttpll jl jo pusha push bound cmp into push fldt jge adc and push sub lret cmp and dec shr lcall mov push push mov mov xor mov xchg sub push aaa imul icebp jo lock xchg or pop inc leave cmpl and pop mov xchg sub add jl movsb sti rcrl adc cmp sbb mov pusha mov sbb and push hlt push (bad) lock pushf sub xor in call cltd inc or int3 add mov arpl push test sub push in xor outsl mov (bad) bound mov enter testb sub idivl cmp cwtl pop aas cs pop or jge in (bad) add je gs fbstp aaa repnz and adc dec adc fsubrs divl add xchg ret fdivr lahf adc std leave ficompl or or push push adc xchg xor es mov push out insb popf insb mull call adc mov ja int3 xchg pushf cmp xor test div mov add jle icebp pop pusha push sbb or stos push mov dec push ret insl and sub and jbe dec sbb nop push test push mov and push mov testb cmpb jne orb inc jne dec mov dec jne add and mov imul imul hlt add inc jg or jmp xchg je in scas or adc add loope fmuls fidiv cld lea iret pushf dec or sbb or add cmp jl sub scas add jmp (bad) xchg aam rcl add in outsb sbb cmp movsb push xchg daa fcmovbe jmp push adc aam roll inc push sub mov xchg clc add pop jge je cltd (bad) sbb in adc dec cld jmp cmp or xchg push decl add dec pop push fadds data16 pop shl scas (bad) add mov cmp push jno push insb and in lds adc jmp sub add pop popa imul mov sbb pop arpl cmc xchg jbe enter mov lods and fisubl mov mov and aad mov adc and cmp loopne sbb imul rolb xor sub loop scas inc scas sub mov ja add pop insb xchg or pusha cmp xor jp out adc add mov mov and xchg and add lcall jmp addl xor mov push mov push fs cmp (bad) je add add xor pusha lea push hlt push sti mov xchg mov rcrb xchg movsl popl add das jae add or add out ftst imul cwtl adc xor mov scas outsl jb adc and loopne enter push pop pop inc xor dec push inc mov movsb cmp hlt add cli xchg addr16 mov lret or xchg in in mov inc rcl jbe and jns mov pushf dec add js rclb pushf pop add (bad) mov popa pop (bad) mov push and xchg lods adc mov inc fs js lock push or dec hlt cli (bad) mov add ja and (bad) mov jp push mov test sub sbb jecxz outsl mov aam adc lcall das test lds sbb sub push sahf pop push mov push cmp sbb cmpl cs mov pop jmp xchg pop cmp lea push pop outsl cld inc jo popa mov xor cmp loopne pusha push xchg pop push shrb lock lock ljmp xlat test push aaa jne lods jmp mov adc fcom push mov xchg aad adc cmp or push jne lea movb shlb addl es push mov pop cs int lret push push jge (bad) push push push adc dec or jge push inc add push jge outsb mov clc xorl adc dec and sbb scas ret mov push mov sub and lock test xchg sbb adc test subl testl cwtl adc dec idivb decb (bad) je adc jmp lcall (bad) pop xchg push push xor dec ret sarb pop out xchg xor pop jb xchg dec push js push mov push ror in add mov sbbl add mov sub cmp add decb pop cmp sub stos cmc xlat int3 (bad) insl xchg popf push inc jo out pop jo insl lcall fs dec sbb cli mov insb push test imul or sbb mov insb push cltd enter ljmp pop hlt and (bad) dec insb sbb out pop mov and inc add shr les add shrl pop sub cld mov fisubrl mov movsw push and dec fisub test add js (bad) dec hlt pop imulb shr js lea lret cmp push sub cmp punpckhbw adc add int mov fcoml rcr adc neg push and push aam pop leave enter cmp jp cmp and and fcom (bad) sbb cli mov es (bad) push test lds rorl pop add xchg mov mov outsl xor push add cmp dec mov xor insl mull (bad) add sahf sbb mov jge rcr sahf xorb sbb xchg adc add stc fidiv mov sub xor dec mov stos inc jnp mov adc or jbe push xchg sahf mov push mov mov (bad) add or or cmp jbe add inc ficoml lret mov xor sahf sbb imul cmp cld inc xor std andl (bad) jae pop jo mov or mov subl jl cmp cmpl mov push push outsl add sbb daa je andb sub add pop ret jge jnp jg (bad) outsb sbb jle pushf sub mov and por mov nop mov sub sub add dec cmp in sub inc call push std out sbb lods repnz aas addr16 dec imul or xor outsb mov mov lret push add test xchg or (bad) xchg jp add movsl and mov ja hlt inc add or push jo pushl adc dec insb aad xchg ja lock mov add into mov lea fdivs pop dec aam and jge dec sub cmp mov insb out mov xor inc je and rcr pop adc outsl add sub add (bad) mov cs mov (bad) xor mov ret test jl jmp addl clc dec or testl cmc hlt inc andl push or push enter jg loope inc add pusha inc or pushl mov xor or enter push ficom add xchg xor or xor mov xchg mov pop pop mov sbb cwtl mov rol test negb pop or adcl mov loope cmp fiaddl loopne add clc jbe addl icebp mov jbe popa rorl mov xlat test cmp fistpll push mov mov ja mov xchg mov push adc mov mov into sbb push cmp incl jo pop mov pop dec sub pop cmpsb push inc sbb sub out mov or adc mov jle mov cmp insb jmp lods movsl add je or dec test jg add (bad) outsl imul sarb movb and pop or stc clc movsl clc insb enter clc cld mov mov nop sbb mov pusha fadd add mov jne jmp mov lock mov cmp movsb pusha push movsb push or (bad) fisubrl mov mov push jmp mov or leave or push test icebp lods enter cmc pop sbb loopne add add imul icebp (bad) outsb xchg (bad) push idiv and push xchg sti adc sbb notb cmp mulb jl add cli cmp pop push pop xor jbe xchg cmpb mov push xor test push xor je cmpb or je and push loope xor pop es jb and lcall push inc push inc inc push or (bad) push jo mov fmull test addl xor sbb mov std jle and clc std mov sti inc daa cmp movsl movsb push push inc sbb push or and adc cld hlt cld in repnz cmp clc jmp leave outsb sbb in cli xlat test (bad) xor loop xor addr16 in call lds and sub xor lock addr16 lret loopne push rorb or dec (bad) or or dec pop test lods enter inc sbb int push shlb push lcall out fs bswap sub mov xchg in cli push enter or push sub mov jbe inc push and fdivl push call cltd pop pop jno out sbb mov push push nop jmp inc xchg mov xlat mov jne adc out jb les rclb add pop add push jecxz mov push js add lock ljmp lret jmp test or jo cltd add sub outsl jp repnz push inc or int3 scas inc mov add xchg xor lds inc pop xchg pop mov lods ds xchg out pop movsb mov cwtl repnz inc lods je mov loopne clc jo xchg pop pop push sub loopne inc or add mov pop push jle loop jle mov mov cmp add loopne mov push xor test loopne adc jg dec clc jne outsl int3 pop pop out sbb dec mov add mov fs push or nop sbb imull fsubrs sbb adc pushl push andl out jae ja scas add fs xor fdivs lea add jb push push clc mov or xor or add cs adc mov add sbb cmp xor add adc cmp adc jb sub pop pop mov push pushf push xchg call add dec push orl mov loopne ret mov subl xor ljmp xor sub sarl ljmp inc pop push out movsl xchg push sub mov or test sub imul rcrb divl jns notb sub arpl or enter cld pop imul mov in insl mov jb into pop sub push or int3 insb dec inc out jmp incl cmpl jl inc mov lds mov push add subl lret gs movsl fcompl stos mov loopne or inc sub or adc and je daa fwait or call loopne mov movsl inc call cmp pop cmpsb loopne in (bad) (bad) lock mov and jmp inc movsbl testb stc or or mov or addb jmp or psadbw imul lea push sub (bad) sub (bad) jo and fiaddl and loope dec je fdivl mov repz add dec and mov add mov jbe pop adc pop push add sbb pop repnz mov pop into push pop leave adc mov mov mov pusha jmp lock pop mov fistl ret mov mov cmp mov imul push adc lock add and in mov inc adc adc push xchg stc es hlt pop sbb cmp push xor pop repnz sar sar adc dec pop adc fcomip decb pusha adc add pop xor mov dec int add dec (bad) and gs call push ffreep sti (bad) sti sub mov mov mov sbb push loopne and push popa pop jne sub hlt mov xlat push xchg dec xor adc cmp lock mov cmp or push hlt das icebp and add jl lea mov adc push dec adc int3 dec lea jns push push and enter sub ficompl sbb mov out adc fs call pop outsb rorl cmp inc incl jb add je and mov mov vmsave (bad) mov int3 and cmpb add outsl or jne jmp pop test push inc hlt fisttp lea cmpb jbe push in call dec in pop inc push mov insb cmc mov fisubr test xchg hlt or xchg test movsl dec add pushf push mov leave lock mov call mov incl inc out and jne and xlat lea mov mov jl inc imul roll jbe xlat lock inc add sub cmp mov inc lods mov test jnp jg sbb pop cmc jne pop lods jl std or pop pop pop add sarb inc push adc sub (bad) ds mov pop inc xor and and mov subl dec arpl sbb mov (bad) inc lock call lcall test pop mov cmc ficom add and sub mov jo aam and jae loope outsb jge decl mov push pop inc cmp incl sarb mov push push jmp nop lods sub call sub inc sbb paddw jnp jne add cmp cmova cli xor mov add mov and xchg xchg leave xchg and pop mov dec adc inc mov inc (bad) jne insl lcall or push or pop or inc xchg or orl aad test dec push jl ljmp mov push clc push xor inc lcall icebp addr16 push push out add jg cmp jb and mov mov xor cmp lods insl lcall shl add mov xor mov mov sbb cmp outsl add js shr shl sub ret (bad) fstpl xor mov cmp cmc sti sub add push incb insl jo hlt push pop mov mov pop dec leave push ss out and push (bad) add cwtl aam jb push jp pop add fisubr movl adc in lret pusha jecxz mov or or inc adc cwtl adc and rolb addr16 and rolb cltd andl jno sub cmp inc add pop mov mov cmp cmpsl mov cmpsb adc mov rclb sub jge or fsub dec jae,pn rcll (bad) shrb pusha leave mov inc insb xchg mov outsl cmp sbbl inc insl loopne xchg lock or lock dec cmp mov roll incb mov inc pop push add mov add and dec fdivrl shlb ss outsl adc mov and mov push and push lret idiv and pop mull fnsave movzbl dec clc mov aad insb push add jl and aaa jbe testb jge jae sub push lea inc imul mov popa sub out cmpsb jnp jge subb jecxz sbb insl mov cmp jle pop add sub nop pop cmpl jge mov outsl pop jg push sub setbe and pusha adc gs or mov sbb inc cmp sub mov sub testb adc fadds mov jns or aad testb in xor jg std neg pop sbb add mov adc and std scas test (bad) mov dec scas cmpb inc mov mov mov add enter ds add sbb sbb inc pop loopne (bad) xchg imull add cmp stos mov ret inc out cmp pop mov jl pop stc out mov test push stc shrb fs (bad) cli mov push jmp add dec std sbb scas lds pop rcr mov sbb pop jge stc add sub neg mov test sti nop rclb pop add adc rcr add popf pop sbb sti pop xchg lods insl insl mov mov jle cmp sub ret out cmove movsb test cs mov (bad) cmp or mov bsf stos xor cld call xchg xchg add int3 sbb sub call jnp sbb adc pusha enter mov add or gs inc andl es pop xchg in call pop ss mov or lret ret add add subl fisttpll rol xor movsb add enter mov adc dec setl adc or je push and int jmp inc jl lods insl add daa stos inc or xchg shrb mov mov pop jne push sbb or push pop fisubrl dec sahf mov hlt adc decl (bad) and out ret aas lahf sbb mov fmuls (bad) xchg lea (bad) ds lods clc fidivrl test xchg xor mov jne ss mov mov test inc dec shr inc test cmp mov sti ret imul sbb mov jge lea inc lcall in repz ss push inc loope (bad) xor or xor not mov int3 test sub sbb dec inc in das je bound add mov fstps jmp inc aaa fistl inc cmc xor jmp push enter jne in adc dec inc push jmp sbb push js cmpl popa sub jmp xchg rcrl or jb jle decl std imul and arpl fmuls je mov push and mov push and sbb rcll dec push aam push call add pop push mov push add adcl inc inc mov and dec or xchg addl pusha subl popa pusha xchg cmp dec movsb enter sbb sbb mov xor pop je push prefetcht1 xor and pop or xchg mov xor add clc push push and push mov inc jmp lock or sub jge add mov pop ss push add insb adc leave fidiv orps adc dec daa dec pop rcrb call adc pop (bad) lock ljmp and fs xor nop mov fldt (bad) add sbb or xlat mov adc fwait out mov add or movl add or divb lock add and ficom int3 push pop leave imul mov stos inc mov je or or sbb xorl push sbbl (bad) or ret push jae sbb cwtl or cld rorb mov aad xchg push or add es jmp mov mov cmp xchg jne push jae fist (bad) sarb mov add leave inc adc je add inc cmp jle and adc jae push and fiaddl push mov sbb inc cmp stos ja add add cmp push xor and jle cmp fsubs mov jo mov cs add js bnd mov movsl or or pop cmp adc jl jl icebp jg pop push mul seto neg or push stc push cmpl lahf or cmpsl fimul sbb adc fwait xchg inc push mov ret xor xor push addr16 inc mov xor pxor leave and loop lds sub dec pop add bound pop and movsb jbe sub adc div ret dec add (bad) in and ljmp daa cmpsb int3 inc lock pop xor pop call imul cltd sub (bad) clc inc add push jle xor add pop in add lea nop xor test push das sub pop in test imul xor push sbb jle mov mov mov out pop stos stc out ret adc cmpsb fstl mov dec mov mov (bad) fistpl add push pop mov addl loope es mov push sbb mov outsl sbb add cmovae aad scas jne cmp or nop pop jg push mov xchg (bad) jge lea cmp mov push pushf fsubs (bad) in jmp ret fisttpl or sbb or test out jmp inc test out push stos inc or adc mov loopne or pushl (bad) cwtl rcrb gs shrl sbb mov lea push cmp inc inc inc sbb jb pop loop push clc in out mov rolb rcrl pop dec imul out lea jl mov imul push xor mov and faddl or dec addl mov jge jecxz aaa pop popa inc lock icebp insl push mov jg cli and dec inc or inc test js inc ja mov mov loope scas call pop (bad) xchg push add and into lea mov jbe test ja test jmp (bad) enter inc sbb mov sub loope add dec mov or pop test hlt ret shrb add fcomps add mov add and cmp jae in cltd xchg fldt lcall push loopne add mov lea cli cmp jne in inc in jb (bad) mov and lret push test call cmp cs incl in scas or decl sbb jbe dec xchg jl movsl (bad) dec push or lock inc or fldt or pop xchg pop es dec jbe mov mov sbb inc cmp add testb inc push shrb in or lea cwtl mov leave ljmp mov add sub movsl insb add xchg pop mov lret add (bad) cmp jne xlat pop jle xlat inc push and cmp dec add scas adcl fwait loop stos mov fwait inc sub ljmp push adc (bad) inc dec loopne ret push fisubl jno rcll fidivrl add adc orl jo sbb mov jb lods jmp leave jbe jge mov or (bad) jae mov xor xchg mov lret (bad) or sti add mov test jb xor loope arpl stos decl mov dec dec pushf lea push hlt dec in mov pop clc xor mov or add sbb mov adcl lock or xchg and sub ficomp (bad) push invd add inc jecxz xchg cmpsb or adc jne std in cmp ss mov pop lea scas insb addr16 push mov sub imul movsb jns mov mov hlt inc xchg cmovo mov out adc push push dec pop jns pop mov mov xor inc dec pop xor mov jae mov das ja or add pop inc jno mov sub faddl lcall jmp lea clc lea fwait test pop adc jbe popa imul cmp orl hlt test data16 out adcl or jge jae mov jmp sub mov mov push mov mov adc push sbb lods cltd out push lret lods jl cmp in push add add sbb lods repnz add add add cmpb sbb mov mov pop jecxz mov xor cltd mull xchg cmpsl orb pop push outsl iret dec sub add mov pop (bad) mov push mov fdivs pop cmp leave fdiv mov mov add or or fildl adc rorb jle ficompl lock adc roll iret dec dec or xor xor ds cli mov sahf dec test fwait lods mov mov ss push aam stos test movl dec inc jle inc pop push jecxz jbe add mov mov sub mov aam push sub je add and sbb bound punpckldq pop push dec xor fisttpl (bad) mov jbe sub addl ds mov add (bad) lea ret push cltd pop push call mov lods mov sbb (bad) jp pushf cltd sbb std mov add testb aaa xchg mov cld in nop mov int push dec insl add sbb fidivr sbb inc and mov incb sbb adc mov inc repz pop jecxz mov jne cmpsb push or sbb and add (bad) lods inc es or inc and xor and inc js and es xlat sbb push add aaa popl xchg mov adc adc mov push adc adc int inc repnz cwtl mov ret fldl jae push punpckhdq lcall mov sbb inc xchg (bad) cli mov mov mov cld cmp push addr16 (bad) xor fisttpll outsw and and jbe mov sbb mov mov fwait fwait xor add or adc test pop (bad) sub movntq sub inc pop flds loope loopne or mov in pusha aam push sarl js jge or sti and jo ret sub dec xor lcall dec cmp jl push sub push inc jo dec jns push incb pop je sbb pop sti in jne fsubs cmovp test mov add push fdivrl or jb dec movsb add push sti xor insb or push jp mov or adc subb adc test push xchg lock mov push sbb or pop jnp adcb cmpsb mov pop sub aaa pop and dec inc lahf cmp cs cmp mov aaa or or negb mov push push sub or rorb call push jbe add pop loopne or sbb sbb push shrb cltd sbb push sub mov ja movsl mov pop push inc mov in push (bad) jns or js push xor subl inc bound add mov inc jmp sbb inc adc (bad) cltd test adc (bad) jne pusha inc fwait rcrl dec js jne dec sub dec imul insl or or cmp (bad) push sbb idivb adc push dec inc jo and add inc std xlat add dec cmp or xchg add add imul push fcmovne add shlb add or pop mov add push aaa idivl cmp pop pop add pusha push push or test mov ja pop loope orb jge or add jp aad xchg mov aas pusha push push push cmp add fwait jecxz mov mov add add test sbb xor stos lcall pop idiv push push sarl das xchg jne sub mov and cmp xor es cmp ret push fldenv or testb in nop je pslld pop push in std mov add sbb sub jo add push push js add cmp add cltd mov testb scas mov shl or outsl sub cltd adc insb sbb adc jmp insl out xor adc ret fisub jo add jnp jmp pop and push xlat repz pop pop rcll pop (bad) scas push fxch push imul lods (bad) cli add ret adc pop dec xchg mov add addr16 push std pop pop shl dec into mov or js jo or xor inc or fiadd sarb sub inc push out sbb xchg ja add mov xchg aad pop push (bad) xor pop and rcll data16 pusha push test mov clc and pop jg ja push in aad dec mov movsl push pushf xor inc movl (bad) jae out test inc enter ljmp push stos mov das xor or jl loope xor mov mov xchg les sbb popf lret roll out push pop (bad) fnstcw lcall adc das pusha push adc or punpckhwd cmp dec repnz adc call push sbb (bad) fs push push test (bad) icebp repnz loop (bad) xor insl jmp push les sub or and mov mov nopl punpckhdq lcall call add cmp push test xor and inc or jp inc cmp dec jge imul xchg adc sbb daa mov jmp int3 dec das push fiaddl pop mov adc pop mov popa inc (bad) leave ret xor in sbb sub pandn addr16 popf fbstp data16 jns data16 push inc push fisttp dec sbb (bad) stc fmuls dec push mov je push sti imul or insl adc or or or or bound add dec icebp gs fistpll (bad) or cmp movsl or sbb or or cmp mov adc xchg inc iret jge ja xor push or (bad) nop jge mov adc mov mov testb pop pop or sbb stc outsl call mov nop (bad) pop fcoms jne aaa call cltd aas mov ja mov fst add push push je push mov orb xchg ret pop jmp neg pusha or icebp nop ds cmpsl pop out adc inc or test and cmp dec or shll or push dec rcrl push jbe iret aad or in mov jge jle rcll pop fcompl adc nop add aaa or pop xor push add bound push inc loope lods faddl test jmp ss fidivl push movsl dec imul out push pop push sub push adc mov test push adc mov push dec cld lsl xor clc test lock push jo rolb or pop enter xor ljmp mov sbb push push shl xchg push pop pop aas and pop mov addb fdivr mov or lods or imull push lds jl mov aam movsb pop aam push dec push mov sbb jmp adc ret ja orl aaa lret mov jnp outsb mov add jne mov mov rol xchg add pop inc push push dec sarl mov aas cmp jl push jo push xchg sub xlat and sbb test popf scas jne popf or repz mov inc imul movb add cmc call mov xchg repz or adc (bad) ja xchg cmp mov dec aad pop xchg jle mov js pop dec je daa sub cmp in (bad) or aaa pop add shll aaa pop ret push stos xlat or or je mov sub cmp jae fisubl dec data16 or shr mov shrb and popa lahf sbb or inc mov cwtl mov mov dec sbb or inc rolb jp (bad) pop pop add or push adc pop sarb ficom pop fistpll ret inc or push dec dec insl clc cmp mov mov mov pusha xchg clc sar cltd fsubrs push stos jg mov or push jne mov mov dec (bad) call push mov push pop ja jne repnz jb incl call mov (bad) sti push dec jae popf or movsl push sub push lds popa xor mov lcall pop push mov testb xchg sbb sub and nop fcmovnb addl dec add lods or imul fs adc sbb js into mov ss mov cmp xor int aas inc dec jne pop mov jl stos hlt pop in insb dec or cmp lds and pop mov or mov push movsl scas int in lcall sub rcrb sub icebp repz sub and into adc mov into inc or and test xor cs jl shrb lcall or pop js lock xchg fcom pop pop or outsb sbbl outsl mov pop rcr mov adc mov xchg jmp pop push fninit in outsl das cmc fnstsw cmp mov and outsb push pop incb inc fldcw add or sbb popa call pop pusha fldcw pop pop pop lret pop and mov stos fsubs mov pop jmp mov add test jb and ss fldt cmp jb jb xor add add hlt sbb add mov popa push cmp jbe dec push jecxz stos mov sub (bad) ljmp xchg add mov lods cmp jne xor je or push mov or pop add dec (bad) out pop sti add mov andl and lods cmp jbe jecxz pop or shl stos xor adc push ljmp jecxz mov lods incl mov test sbb lods cs mov clc xchg dec mov stos mov lret pop imul lea xor mov addr16 (bad) xor je xor adc sbb xchg int3 cmp fistpl je repz pop sub lods pop lds test inc fwait mov add sbb cmp cmpsb pop jo add cmpl inc bound idiv aaa test cmp cs mov incl sub sbb push js jnp add cwtl cmpsb je mov jmp push rorb sub mov cmpb jne push test unpcklps out adc decl jne or rcrl loopne mul add stos sti jnp ficoml in fdivs mov mov notl lods ljmp sub ljmp ljmp sub (bad) out mov or jne sub fstl fdivs adc stos pop je adc inc adc inc pop rcrl push adc jle je leave fsubrl push stos outsl inc arpl test xor int3 cmp jae sbb (bad) dec hlt mov les add adc xor (bad) imul sysexit sub (bad) xchg je fisubl pop cmp dec jae (bad) (bad) data16 daa push lcall push fnop enter pop sbb xor push call or pop lcall xchg or sub mov adc or jbe lea dec (bad) lods push xlat push sbb cmpl push push sbb push push mov or pop sbb lock dec or loope jmp subl xchg das js inc mov mov adc push andl into pop adc fildl dec pushf or or mov mov mov sarb gs rdtsc sti or scas xchg or cmp lcall test or or adc pop sbb push mov cmp repnz ss lret mov fildl hlt orl and lahf aam fdivs adc and loope fildll in mov and xchg popa aaa imul pop in sbb mov sbb cmp push or aam jmp cmp push sbb mov lods xchg push cli adc fidivl sub pop cmp popf push loope test sbb push xchg cli or insb jecxz aam in inc add inc test sbb ljmp sub and outsb cmc jge data16 sbb jne,pn inc xor or (bad) jmp push dec jmp push push jae inc adc inc adc insl mov cmp xchg cmp mov ljmp je mov addr16 (bad) or lea idivb je push sub add je inc jle inc xchg xchg cmp mov cld (bad) fbld jmp push pop jmp sub je dec je dec jne push lds (bad) adc aam mov inc pop jb pop out add mov xchg loop or bound sbb inc out pop fstpt ljmp jbe jmp jbe mov popl cmc add mov dec xchg invd jne push jb div push push xor push sub mov jne gs mov mov inc push sbb leave mov push test test aam and in imul jge or push or cmpsl into cmpl jne test jbe mov fisttpl inc adc inc insl add sub push not stos cltd fimul adc xor repz shrb mov xchg aam out int push aad inc outsl sub lods (bad) inc test in push jge dec jo leave dec xchg outsl lods inc test rclb and fisttpl (bad) loopne shrb inc roll jns or push or test test ss cltd (bad) cmp mov jmp or xor or dec das sub fstpl test push or movsl ljmp push push mov or clc and jbe rcll add add sti insl std (bad) adc jp fsts test and pop adc push cmp je push jae rcl pop inc add inc fildl push fldl fcoml bound or mov aam lea xor lret inc push sti lods test in call (bad) out iret fstpt in add inc in add or fmul and jne fsubr jle xlat addr16 fldenv jne xchg jb or outsl inc mov insb fbld add and sub add aaa mov pusha fistpll adc or lea insl out xlat push insl movsl pushf jno or fistl pop clc outsb fmul jne sti fld ficom (bad) sbb push pop adc cwtl fldcw adc adc sub add fstps xchg fldl add and inc outsl push jp stos push add insl roll cmp adc stc adc adc (bad) jnp and je sbb sub enter add mov pop inc jb aaa jmp shr ja incl adc scas pop or fsts fcoms jno add jnp push adcl aad neg sbb out cld (bad) pusha dec push or mov xchg and (bad) outsb lret dec add roll or xchg bound push sbb cmpsl jbe jg mov fwait bound inc push mov or fcoms jmp fcomp mov fiadd and out and or xor mov orb jnp jne inc lgdtl (bad) jnp sbb js imul rolb int3 in fbstp push incl push mov cmp inc into (bad) pop xlat mov jecxz je sub sbb jo adcb sbb sbb stos fmuls mov jbe push js,pt adc push sub add jnp (bad) fiadd add or mov jne xor pop lea ret ds (bad) pop pop insl cmp je cmp je adc mov adc out push jo dec xor daa and pop mov inc inc jle test enter (bad) adc jle jae sbb mov add xorl pop jle or (bad) push mov push xor inc mov minps adc es jl pop je rcll mov jae mov cmp ret inc cmp jb lods adc pop fisubr add pop and lods adc adc add xor cmpl inc mov push xor aaa or clc movb jmp xchg popa outsb lahf and (bad) dec sbb mov js xchg pop cmp sub pop fldl or sbb popa mov sbb push jb,pn inc mov pop in xchg js add and roll outsb in insb xchg sbb lds scas jmp inc and push ss inc push mov call stc jne scas mov shr or sbb jne cmp rcl jmp rorl movsb pop or ss ss push ljmp (bad) pop push push lea xchg mov or cwtl cltd or fisttpl sub cmp (bad) inc xchg cld inc test divb push xchg pop adc dec mul jmp test jmp addl mov sti cltd xor sub ret or dec fdivs or loope cli fyl2x repz jmp cs adc add push mov cmp or add push or mov sbb push push outsl adc push out inc mov (bad) and inc insl int3 outsl repz cwtl adc xchg (bad) cmc icebp sub push jo push sbb push pop cltd mov mov or or out xchg fs or and test test pop mov andl sbb jmp decl ret (bad) sbb cmp xor iret sbb or xor inc xchg (bad) or pop loopne push cwtl lret sti add clc and shl cmp push ja add (bad) ss unpcklps push or (bad) in shr and add jne sbb jle add mov rclb and cmp jbe stc xlat push das pop (bad) pop (bad) jmp movsl xor or insb add push or dec out jmp push ja pop push and int3 sub mov ja cld add xor sub or das jnp dec inc ljmp pop dec fldl2e cmp adc sub fsubrs sbb rcr fstp adc icebp or insl lahf fdivrp cmc adc ret push pop push rorb push inc and out push sub sub test lods bound mov push cmp cmp push rcrb push loopne pop mov fadds cltd mov or adc cmp fsubl sub out hlt push pop or adc das push dec mov add jno xor and pop pop sbb pop and sub loope jg pop sbb pop push roll push mov mov dec cmp inc call pop arpl add inc add xor mov push or in push adc daa cmp jo jo test cmp in pop jne fsubrs ja and lock loopne loop mov or jns or add movb pop sbb call xchg add movsb dec add test adc nop add cmp pop adc movb mov push loop aam dec test jmp mov ljmp pop or int3 or mov add fistp cmpb adc or jne int aad push pop push push cmp xor xchg or (bad) je call cmp adc fwait lods call xchg subl popl adc lock dec sub stc pop push mov loopne mov jg lock mov jb pop cmp jne mov lret (bad) xchg (bad) hlt mov mov jmp ret aad testb or push cmpsl add test ja push inc jl pop cmp cmpb subl mov adc ds bound test cmc stos pop lret mov dec dec jnp push mov sbb mov inc inc aad hlt push inc xchg and sbb pop cld xor loopne aaa mov jne movsb mov adc push test xchg inc push int3 pop adc xchg mov xor sub fdivl (bad) loopne stos or ljmp adc push loope fmuls jne and fnop jmp fwait clc lahf sbb pop push scas add mov stc xchg mov and mov sbb adc or jg das pop mov or (bad) sbb pop or in push test sub pop fbstp add mov lahf jp sbb fcmovnb xchg std ret jae pop stc or (bad) in adc lret push fs fsts call call mov add cwtl hlt cli or cld (bad) into push lds adc sti mov cmp inc jae movsb inc in push mov rcll sbb inc xchg jb mov test decb sbb sub aad push adc jns mov std ret movsbl adcb jmp sub adc adc push bound call adc dec cmp ja adc jnp (bad) ljmp outsb test je lea sub mov dec push push adc rorb out pop nop mov xor dec (bad) (bad) push mov mov mov dec shr ret shl add and lret (bad) fimull sub pop push adc pop rcrl mov pop imul (bad) hlt adc cmovns call pop xor and pop lods fsubr push mov imul add out mov push cmpsl pop or lea or rcll mov sub push jbe push lea shr inc mov fisub sbb out add pop cli pop jbe pop jmp mov mov mov inc xchg fisubrl inc sub imul add imul rcll pop dec xchg xchg lods lcall add (bad) enter pop inc adc or add xlat orl cltd sbb push push push jnp sarl jge sbb aam jl sub push (bad) and sbb xor popa add mov shlb xor or (bad) ja mov cmp adc sub jle lahf shrl and sub push out (bad) jmp aas push adc push adc push jae (bad) repnz je pop jo and push mov jmp adc jnp push pop shll push pop sbb add inc insl dec movb or cmp and mov push clc add (bad) add inc sub cmp and add add and ja mov fmuls imulb and aas ja mov push inc push mov mov mov add in dec mov dec es sbb pusha mov sub mov lods push or loopne test inc dec push (bad) das (bad) cmp add outsl cs jo adc add pushf xor out or jnp lock outsb test cld jae clc outsl jge mov or jae enter movsb or cmp mov shll xchg (bad) cli mov mov aad xor fdivrp idiv (bad) orl mov cli or hlt mov ds or pop xlat adc or adc push push sub imul cmp add or or lods or hlt int sub mov inc mov cmp je sub shlb and add sbb fdiv mov (bad) lock add mov jne pop pop mov subb je jp or sbb icebp mov cmp je inc mov push inc pusha mov push mov rclb cmp mov rorl inc lods int or out lcall adc scas pushf inc xor mov popl cwtl or mov push add lds pushf or ljmp data16 or or and rcr pop jae pop push mov mov inc inc jo call into lcall add dec jae test add and xor divl lret cmp add icebp fisttpl stc inc and xor dec or lret and cld sarb add and jl,pt pop (bad) sarb add pushf rclb adc pop push in outsb mov jbe pop pop xor nop je mov cmp andl jbe inc loopne repz arpl (bad) aaa inc dec fsubrl inc test cmp ja mov add fwait jecxz mov in (bad) dec pop and (bad) lret push sub xchg xchg sete inc mov fneni(8087 sbb push fwait adc jno leave jb mov or add mov aaa mov xchg insb loop cs mulb jp push jae test lods mov lea fiadd xchg mov dec mov cmp mov add cwtl in push sbb jae shrl mov add rcr sar mov out xor adc push es mov sbb push mov mov push pop pop popa push lahf rcll mov inc cmpb pop add mov sbb rcrb jne unpcklps mov adc xchg pop add loopne pop mov dec divl mov inc cmp ret or and sarl shrb push test pop inc es fadds xchg cmp add ja add mov pop ret orl and add ret adc sbb nop mov dec lea mov adc xor fstpt jmp jmp pop add cli js or pop mov push pop jne inc push sbb cmp cmp sub mov js jne inc rcrl rol daa mov adc cmp sub mov rcrl add fdivp mov jmp ret jecxz idiv or pop or fld fadd sti loope mov out es pop push jne (bad) jl or or add mov push push pop inc shll add jmp jae and lahf loopne les mov ret ss mov push or stos mov xor sub pop cld ljmp and and and sbb loop stos xchg bound xor orw and or inc lcall and sbb aam mov test out sbb pop adc add andl add and add mov jp add inc and and jg xor push adc cmp nop or into jnp jbe push or lret pop adc mov psllw cmp rcr nop fcoml imull out and ret xchg push xchg mov adc mov push sti out adc movzwl mov jns jns mov push dec popa dec mov in inc inc bound push shr or push pop enter fwait xor adc lret sbb pop ljmp repz iret lret inc inc push insl pop jnp inc sub fstpl push or cbtw adc fcom add adc clc (bad) adc sbb neg sbb not or and je gs pushf cmp je jns sbb lret or shll fldl shrl pop clc (bad) mov rcrb pop sti outsb mov lea or cmp mov ja or and fldt xor gs add imull lahf push cmp cmp push inc das pop xor divb pop (bad) rcl imul adc outsl cmp pop or or jne jmp xchg cmp roll inc mov (bad) or adc aas std pop adc and loopne push or incb jb pop sbb inc inc add js (bad) xor lsl add pop test sub push cmp xor pusha pusha fsubs sub dec ror push mov add mov pop mov mov sub push cmp dec or lret repnz push mov in mov lahf outsl or loop or jmp leave data16 or jg int3 jp and dec test jp cli outsl mov pushaw lea mov mov popa cmpsl pop addb popf mov gs or arpl push add jl fsub or andl push ret sahf adc add out push cmp dec and push push mov or mov inc insl mov push sti mov push add add push movl push std call xchg pop dec sub add jmp adc and cmp pop aaa fnstcw cmp push or mov xor or sbb pop loop inc rolb cmp or fild add push clc mov mov push rol or addl pusha pop cmpl mov adc adc sti push popf push pop mov in sub test pop adc sarb movsb inc xchg roll push lcall into push xchg or dec cmp loope loope lods adc fwait cmp jmp and and push dec dec inc and and inc cmp xor and and sub and and and sbb adc and and mov pop inc inc inc inc pop pusha fs insb xchg jge mov out stc js jl xorb ds mov mov mov mov mov iret out pushf mov mov mov lods mov mov mov (bad) enter mov mov mov cld popa bnd add sbb sbb movsb mov test sbb sbb xor xor and sbb xor xor adc or xor xor add add xor cmp jae fs inc js je enter insb push enter fsubrs popa xor test fs (bad) sarb mov jecxz orl cmpl fs adc out inc inc push inc pop inc pop pop iret lahf jg pop pop push inc dec push inc push inc dec dec insb out jg push push push jns je insl push outsl outsl je and fisttp pop and pop push inc dec dec into out xchg push jae outsl and inc dec dec (bad) cld pop push dec dec dec inc dec dec dec xor pusha iret inc push push rsqrtps enter das add cmp push pusha jg daa push dec push inc pop push mov inc inc dec inc seta pop inc inc sbb sub cld ret outsb push dec dec sbb inc dec push dec push iretw mov dec dec dec dec push dec rcpps push dec sbb aas pop add push jb fs je xchg inc and addr16 push inc push gs imul enter jb outsb je inc dec inc jne arpl std insb fs jne bound sbb lock fisub or dec popa insl pushl inc push push inc rcrl arpl jae data16 push imul loop jae or jno push inc adc dec push xchg pop inc rorl dec dec or inc daa inc xor sub jae inc dec jo jmp pop jbe mov popa push pop inc out insb push and sbb insb imul outsl jne jae loopne inc (bad) std sbb inc dec push pop inc inc push inc ret popf inc addl mov dec (bad) add cmp int data16 jae adc push outsb outsb out lea jae imul jae test out outsb je dec cs outsb imul add pop imul sub test movsl lret xor cmp xor xor and xor xor leave adc adc add add fbstp and popa je add arpl inc jbe cmc and cmpsl movsb clc mov js insb outsl adc push push inc outsl xchg jle push lcall pop gs je cmp in ss aas push push push imul popa jns addr16 outsb and pop fistl jae (bad) cmc add arpl data16 sarb inc stos popa sti (bad) push push popa jae mov cmp mov ss add or popa fs pop push call xor popa jo xor pop inc mov je jo push out xorl (bad) insl in sbb inc push xor xor push outsb lret cmc xchg mov cmp daa inc pop mov inc pop or mov fs inc (bad) jge xor push push inc inc sbb mov jbe push inc jae and push push dec or aam arpl inc sub or and cmpsl jae aaa or mov jne lods lea int3 imul push dec xchg je cmp loope mov dec jg sub jo arpl or add and test (bad) call push gs ja bound insl popa mov insb je jo ja add lods cmp cltd adc pop add jne ja ds mov pop aas add sub dec lea imul js in insl imul xor push push inc scas sahf mov sub pop and cmpsl rcrl (bad) xor out adc jae inc imul cmc lods ret inc jae sub dec jle sarb mov push push push inc pop jae xor sbb mov dec pusha mov outsl js lods rcrb lahf jae icebp or xchg popf outsb xchg jmp inc testl xor push divb pop arpl insb jnp push jnp pop cs outsl pop push adcl popa mov push jne fisttp clc addr16 pop insl popa push pop popf add sbb sub (bad) push fadds inc aas cmp popf outsl xor and iret jne pop pop xor popa jo sbbl push dec insl lcall pop imul or or inc mov add cmp fwait stos ja and adc sbb jae push icebp sub dec dec dec dec dec adc ss test xchg pop lret arpl lea imul jno out cmp js jp outsl xor sub in icebp fsubl mov maxps mov pop dec (bad) fstpl pop ja pop xor jns aaa lcall add lds sub aad add dec dec mov outsb xor xor aaa pop jae sbb addl daa xchg cmp sbb push mov imul mov push outsb (bad) dec stc mov sub or pop xchg pop add ljmp (bad) sbb jae arpl jae and fcmovnu loopne or add and pcmpgtb mov xor mov pop push sbb cwtl push add fistpl and gs jo inc outsl sbb add pop outsb or gs and out or adc add ret fistpl sbb daa ja sbb arpl sub jne mov inc arpl or or lcall mov inc inc dec pop ja pop pop cs lahf push popa inc imul bound (bad) imul insb mov shrb jo mov and add sti or mov pop push jmp adc and sbb notb lea or and pop sbb stos aaa pop sub loop or adc sub outsl pop (bad) inc and xor inc mov (bad) dec insl fs clc call in loopne loop in call in jmp and int mov addr16 and in imul call sti cmc push out jmp jmp out and sti repnz and jmp cmova fwait mov xor pop adc adc outsl ss adc add push jmp push and mov sbb mov mov push loope cmp test inc dec pop ds lea or inc fwait imul jb jns das add push push dec arpl push pop jo dec outsl jbe lds lods sbb pop xor mov xchg sbb lods gs adc aad and neg mov data16 pop push adc imul es movsl pop pusha mov scas cs inc xor inc pop in or or arpl push xor mov lock shrb (bad) push push push fiaddl dec xor je sbb dec push lds popa pop xor pop outsb pop xchg fcos call clc push xor (bad) add inc jbe negb inc mov mov (bad) dec cs hlt in pop das inc jb xchg idivl jb inc xor jno pop enter repnz leave nop or inc stos and leave nop or push test add dec in or xchg inc insl cmpsb leave outsb mov dec push cmpsl ss xchg sub lret das jl inc xor pop leave lret cmp (bad) mov mov sbb mov and js or inc fisttp cmp mov negl xchg and xchg fbld and mov xchg and enter sbb xchg inc push ret notb arpl insb dec bound test fs lret xchg hlt inc xchg mov pushl loop pop dec rclb scas and cli scas or nop or (bad) repnz in nop mov sbb enter in mov ret in repz (bad) and jb sbb or inc push leave push nop (bad) popl add incl loopne or (bad) adc incb pusha mov mov jb xchg cmc lahf inc jb inc repz aad inc xor and pop lret unpckhps js ja and xchg jbe cmp xchg and imul enter sbb in repz in fs xchg inc call pop inc dec repnz xor dec ljmp out xor jb repnz sbb mov adc aas adc negl fs aas inc pop jbe xchg iret fcomi pop add idivl cs sbb cmc dec repnz xchg aas daa dec ss jb hlt dec (bad) fild fs and and pop sbb sub mov loop and and ss ss pop inc xor xor xor xor and ss sub cmp and xchg sub pop cmp sbb (bad) jg nop lea nop or lods push cmp das in or cmc repz dec outsb ret nop dec sub insb enter or pop das xchg or aas or pop jb in repnz and ss addl xor gs or das es push sbb fsts in dec cs lahf xor fs xchg cs jg xchg scas std and movb fildll clc rorb pop movsl clc or nop popf je xchg lods pop call mov lret sub push outsb adc imul (bad) shlb sbb pop or jb sbb hlt jg dec (bad) enter jg pop lea pop nop or nop pop aas xchg insb dec cs div jg dec iret inc xor fwait incl outsl daa inc sub lret rclb mov flds (bad) nop or sbb (bad) loopne mov leave mov pusha daa pop and and adc mov sbb comiss and into loope cmp add cmpl push cld in add cmpsb stos into incb ret add push paddd aas loopne movsl dec xchg std jo xchg push test cmp pop leave nop or (bad) das add or sbb or nop pop sbb nop or sbb push leave nop or push xchg hlt xchg xchg inc popa xchg (bad) cmp ss pop das clc nop (bad) in das push das in or pop add xrelease sbb pop jb (bad) daa cmc mov popa inc xor fs fnop xchg dec lods pop fs xchg fadds das ret xchg lods cmpsb in xchg lahf clc and imulb sarb ret xor ss bsr sbb sbb sbb sbb (bad) repz and leave dec iret mov inc push and ss jbe pop pop inc outsl inc ss xor pop in fs ss inc aas add and jp cmc and in div lret hlt xor jb xor inc outsl outsl sub and ss das cmp hlt jge inc xor icebp cmpb inc xor jl and xor and or jle inc xor add sbb and nop or lahf fsts jo or nop or fisubr or nop cmp leave nop or jb and or out sub xchg xor das and xchg sbb xchg and dec pop pop and fcmovu popf adc sbb and mov dec dec das pop sbb fmuls out dec sbb fsts out inc repnz xchg inc pop push fs setl xor out xchg negb inc pop cmpsl pop rorb and xor mov cmp hlt pminsw xchg and adc adc enter ss test xchg div icebp iret fsubs or fs in idivl cmpsb or repnz xchg inc ja fs scas in add int3 scas sbb enter lea insb shrl jecxz pop inc jb xchg (bad) pxor fs xor int ss ss jg push iret and arpl pop and and pop sbb incb pop xor leave nop or xchg jg leave nop or jae dec cs dec jmp hlt insb enter xor dec xchg enter jb pop leave mulb lds push movsb and bnd xor mov repnz mov xor clc lcall nop xor aas pop aas leave nop or stos in add scas int3 hlt push pop dec es aas or and clc ss jb mov xor mov or pop or mov sbb adc mov fs ss pop outsl movsb das sbb xor in pop fdiv push dec cs nop outsl pop idivb fistl adc bound enter pop cs dec add repnz pop dec xchg push insb enter dec outsl push aas xchg push mov add xor mov and fildll and mov jg lock mov inc rclb test jmp adc pop fwait jg,pn jg cmpb and mov cpuid mov aad pop fcomp fdivrl mov movsb cmp rclb movhps imul lret inc repz adc ljmp push fidiv dec mov inc leave (bad) jb mov pop aad jbe xor nop or push movzwl fs adc fild pop (bad) jns sti loope loop jb push movswl pop mov movsb inc das or (bad) das shr test outsl hlt out test push inc (bad) lcall pop mov repnz test pop cmp enter add add inc popa stc push mov xor clc out outsb das test mov (bad) xor jmp jg out and or gs xchg dec add scas (bad) lods dec popa push or scas int outsl outsb das mov leave loop add xor xadd repnz inc orl mov xchg xchg add pushf movsb popf pop test mov adc fstl inc xchg ja adc mov push popa mov pop stos insb adcl dec cmp xor push ja test mov dec inc push mov dec dec mov mov je mov push mov and dec popa outsb popa and adc push adc add pop sbb pop cmp js dec push jne addr16 (bad) mov push xlat pop pop fwait mov add pop jmp outsl pop add xor xchg in sub and ja push or pop lods fld es add and add enter add and enter add test inc cmp addl test (bad) add add push add mov mov add adc ret bound xor sub imul xor cmp int3 mov adc aaa aas xor adc fdivrl push push add clc mov xor fmul mov ljmp pop push adc push insb jo inc sub xor inc dec arpl pop imul sub dec push inc dec pushw bound fdivr (bad) ljmp cmp push push dec dec imul cmp xor push inc dec inc jmp jno imul ja jns (bad) (bad) (bad) jg jne xor xor inc inc aaa cmp dec dec dec dec inc inc dec inc push push push (bad) call add push dec pop pop bound push pop push push arpl pop mov rcll (bad) lret rorl fnsave ss xchg pop sub sarl (bad) lret (bad) jno fucom imul icebp popa bound jnp mov cmp push jnp mov dec push cmp mov fiadd push inc pop ret sbb push cmp add fdivl mov or pop clc adc and jne mov pop mov test insb outsl bound (bad) add jb outsb push or mov aas arpl inc xor int mov inc inc or fcoml jb or inc js arpl pop adc and jo xor inc push jae dec popa outsb fs push dec jo (bad) push add dec gs jo insb mov fistpl arpl add (bad) cmp jne jns push gs and push push pop fldl divb je add add incl push imul jmp jo adc push jbe push imul aam arpl outsb mov jne je inc jns push outsl xor gs push fimull mov add repnz (bad) adc sub adc push pop aaa popa fs adc mov jb mov cmp cmpsl pop ss jne jo lock roll xor adc mov and inc or sub sub imul fildll bound push xor mov jae or je and xchg daa add push and inc adc sbb mov push dec jae lcall insb mov imul jns out (bad) (bad) jbe inc fs dec outsl mov loopne orl jb jl int3 cmp mov gs push imul cmp or movsb outsl xor inc push adc test lock dec outsb outsw lock adc inc stos or sbb jns adc imul arpl inc xor push pcmpeqw (bad) fimul or or (bad) cmpsl test push jg xor pop push inc fimull jmp out cmp xor imul movsl push imul push push or mov cmovle stos sub cmp inc jbe mov inc dec and int mulb push (bad) cltd cs fdivrs push mov fwait imul and adc pop sub int pop xor loopne cmp push cwtl adc pop lods push jne jns sbb jmp and lods insb adc popf popaw dec pop push (bad) fisttpll shlb test xorb cmpsl xor jl fmuls push lret inc sub imul add lock mov loope dec mov mov lret mov or add sbb push or int adcb jmp mov sub icebp push dec jl mov lret xor and adc mov xchg jl pop sbb data16 cmovl ja mov xor and scas test sub and inc outsl js sub bound and jns dec inc das or iret inc inc pop mov aad insb dec mov or in arpl push inc add dec add add mov dec loopne mov or add and scas jnp test in mov in adc add pop pop add adc add sub sub xchg and fsubr add imul mov enter or pusha cs fwait adc test add es mov lock (bad) mov cwtl rorb in add mov add incl add add add inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 