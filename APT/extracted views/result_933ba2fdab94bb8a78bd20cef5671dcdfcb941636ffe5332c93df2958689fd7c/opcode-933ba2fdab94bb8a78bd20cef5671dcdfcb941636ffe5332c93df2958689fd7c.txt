test or data16 or data16 push xor data16 adc add inc or data16 or je or data16 lahf or data16 pcmpgtd loopne data16 xchg pcmpgtd bound data16 or test mov pcmpgtd xchg pcmpgtd inc push data16 mov pcmpgtd and pop (bad) or sub data16 data16 mov pcmpgtd add dec insb push mov add outsb add test data16 or data16 data16 dec push retw data16 ja mov dec mov dec mov pcmpgtd insb push data16 inc xchg pcmpgtd sbb push data16 imul scas lahf or add add add add add sahf dec add sahf dec add add add add fbstp dec add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add inc add add add add js dec stos mov outsb daa add add add add inc js jb imul add add and inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sbb add dec add add add push add inc add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add push add add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sbb add dec add add add add add add xor inc add add add and pop add add add xor inc add add add pop inc add add add add add pop inc add add add push inc add add add inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sbb xor dec add add add inc add inc add add add add add add xor insb add add add add add add add xor add or or add add add lahf dec add xor add (bad) decl add add add add add add add add adc add adc test inc add add addl add mov add inc jne insb popa insb popa xor dec arpl popa insb outsb je add inc js jb imul add icebp mov and inc jo xchg inc mov loop add add add add add jo inc add add add ret cwtl xor inc mov sbb jns push add add ljmp add add add and inc add add add (bad) (bad) incl add add rorb add add push add adc add or inc add add add adc add lock add in adc add lock mov push push inc add add add add inc add inc add pop add add sub (bad) incl add add add add push inc add ja add sbb (bad) incl add add adc inc add adc mov inc add add add inc add add add dec add dec add add rorb adc add dec add add add add and inc add add add dec add (bad) (bad) incl add add inc add rorb add add aaa push add inc add add add sbb add add add inc add add add inc add add add add add add inc add add add sbb jo dec add add add imul sbb inc add pop add add sub (bad) incl add add add add sbb sbb add sbb (bad) incl adc cmp add mov add add add ja add sbb add inc add add sbb add fcomps inc add ja add sbb add add add push sbb (bad) adc mov inc add add add sbb (bad) adc mov inc add add add sbb (bad) adc mov inc add add add popf dec add (bad) (bad) incl add add or sub out in mov xchg cltd mov add add add add inc add sbb add add add add add add add add add sbb (bad) (bad) (bad) push sbb add cwtl sbb add add add push add add add inc add (bad) (bad) (bad) cmp inc add add sbb push add add add adc (bad) (bad) (bad) jmp add add add rorb add add add add add (bad) incl add addb add add pop adc (bad) (bad) (bad) jmp add add add dec add add add sbb add incl add addb add add in adc (bad) (bad) (bad) jmp add add add add add sbb add incl add addb add add and inc add (bad) (bad) jmp add add add add add sbb add incl add addb add add inc popa bound je xor add inc outsl outsb outsb imul xor add add arpl gs jne add pop jns imul insb gs add push popa jb outsl insb gs insl popa add inc js jb imul (bad) cld fcmovnbe je jnp mov inc sbb in lcall jae dec mov es icebp mov and inc jo xchg inc mov loop out xor loop inc lahf leave and je cmpl lods xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add inc sbb add push add add add add inc add dec add push xor or stos add xchg inc imul imul cltd iretw adc pusha rcll jne outsb gs xor or dec add je mov mov add or jbe sbb push jae enter ret cwtl xor inc mov sbb jns push and or fdivl nop inc outsb pushf push dec jle or inc add add add jb gs xor add add adc add inc gs jne jb outsb je jb arpl jae add dec push inc add add add hlt les mov or je jmp push mov call jmp add add add jne gs outsb jbe fs insb add gs insb insb push jae jb push jb imul arpl jns add add test inc add add add dec add or je jmp push mov call jmp add add add add je gs jne je jae jb jb imul arpl jns add pop inc add add or dec add or je jmp push mov call jmp add add gs outsl outsb jae insb gs jne jae jb outsb outsw add add dec push inc add inc add add sbb dec add or je jmp push mov call jmp add add inc push inc push dec xor cs dec dec add add push add add insb outsl arpl gs imul bound add add pop inc add add and dec add or je jmp push mov call jmp add add add add gs xor add add add jae outsl insl inc jo add add inc add and add add xor dec add or je jmp push mov call jmp add add add add je jo outsb inc insb imul push imul sbb inc add add add cmp dec add or je jmp push mov call jmp add add add add je jb outsl jb je inc insb popa jae add add dec push inc add add dec lds mov or je jmp push mov call jmp add add inc push dec inc dec xor cs dec dec add add adc add inc outsb jne push dec dec popa outsb addr16 addr16 add add or inc add inc add add push lds mov or je jmp push mov call jmp add add xor add add add add add add add add add movsl push add add add add add add add add add add add mov inc add arpl imul add insb add jb add push add outsl add add add push inc inc ss dec dec add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa inc jb gs popa jb imul pop pop jbe popa dec bound popa jb pop pop jbe popa push bound outsb add jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa push popa jb gs bound fs data16 add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa dec xor popa jb add jbe popa dec popa je dec gs inc popa insb insb dec add pop pop jbe popa dec bound gs fs data16 add jbe popa push popa jb jae dec add add jbe popa inc jb gs bound add add jbe popa dec bound gs pop pop jbe popa push popa jb fs jbe popa push popa jb outsl jbe add add pop pop jbe popa inc jb gs je dec imul pop pop jbe popa inc outsb add add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa dec outsb push je inc add jbe popa push je inc outsl jo add add pop pop jbe popa inc jb gs je add add pop pop jbe popa inc jb gs popa jb add add jbe popa push je dec outsl jbe add add or or dec xor add mov and inc jo xchg inc mov loop cld fcmovnbe je jnp mov inc sbb in lcall iretw adc pusha rcll stos add add add or inc popa bound je xor or push jne add add inc add add (bad) (bad) (bad) jmp add outsb addr16 xor xor call add mov or add add add add add add je imul push add add fs outsl add pop adc push adc add add add add or inc imul jae add add add outsl outsl jo add sbb jg adc add add int3 xor add cwtl xor inc mov sbb jns push pop adc or mov add or dec lods xor or stos add xchg xchg js add add outsb outsb imul xor or popa jb imul and push or insb je add push or add ficom add add add add add add add add add add add add add add add add add cmp mov mov jg push je adc lea add sti xchg dec movsl xor fsubrs mov mov mov test sahf fdiv inc (bad) movsb and lods mov into aas rorb ret jl js (bad) rorl add jno insb add dec mov gs sub cs inc int imull sbb mov cmp aad adc ds xchg inc mov call std jb ss shll xchg mov or or inc movsb mov ret push add jns dec and mov (bad) mov push lret mov or cli mov int cmc push ret nop pop or ror movsb pop je xchg hlt jmp adc mov ljmp stos add repnz push jecxz aaa aad lahf inc rclb jne loopne pop and sbb inc clc push pop mov (bad) andl (bad) js mov sub sti adc stc in out inc lock loop pop cwtl fldl (bad) in (bad) adc add jae dec mov gs mov cs inc sub int cmp mov mov jp xchg popa mov inc das fdivs (bad) shll xchg mov or or inc movsb lcall xchg jns dec and mov (bad) mov push lret mov or dec mov cli dec cmc jg dec int ret nop loopne into loope movsb pop je (bad) hlt jmp adc mov ljmp xchg add stos mov repnz pop aad push inc (bad) aaa mov xchg loopne shll push mov pop push and clc push pop mov rep out (bad) cmp add sarb ret sti adc stc sub inc adc in pushf pop lock (bad) in (bad) adc test mov add dec cltd mov add sub not (bad) leave int cmp sbb mov or pop jp xchg popa sbb inc mov mov aad sbb fbstp push xor stos ret dec and bound repnz mov and lds lds mov daa ret lret test out imul inc stos sub cmp add dec mov adc push arpl mov loop cmc rclb (bad) lret leave repnz roll ret sbb or jbe mov es call pop mov cs lds cmp sbb (bad) pop adc or idivl push add fnstsw push (bad) adc fcompl movb mov subb add hlt fwait cmp push jle pop inc (bad) mov lea insl cld add mov popf pop jecxz aaa test icebp ficoml iret push jle mov roll or cmpsl aaa push mov fisttp fdivp jl js mov xlat dec mov stc ds repnz scas cmp xchg lahf and loopne arpl xchg addr16 mov cmp xchg mov fs mov dec aam leave rclb mov (bad) bound sub mov mov jge inc (bad) xchg dec xor loope xor stos and movsb push dec ljmp xchg int cmp mov mov push jp xchg adc pushf dec push xchg mov cwtl shl mov les (bad) mov xor lds xor mov pop cmp mov dec inc push lea insl mov cld popa int3 test popf mov test icebp fimull push jle push add jmp shlb adc mov xchg sub testl mov push sbb mov push ds scas xor lahf cmp inc loopne and into and push pop and inc xchg cmp mov dec aam leave shrb mov fistl pop bound sub mov mov dec lods inc jg dec jge jb mov xor or movsb dec push pop ljmp int lcall mov enter adc pushf dec xchg xchg mov cwtl shl mov in (bad) (bad) jno les insb fwait mov pop cmp mov dec inc (bad) lea insl mov add cmp lret popf mov test test dec call adc test nop lods or mov aaa inc jmp adc sub testl mov xlat data16 push ds iret push jge cmc sbb dec addl add jns mov je inc roll jnp aam ret cltd push cld hlt lds mov sti das or jp mov pop arpl jge imul lahf clc outsl pushf int3 xchg out push push nop inc add les lret cmp xchg es daa or mov cmpsb pop mov sbbb call fwait ja insb mov fcmovne mov push push in sbb mov pop jl nop mov and adc sahf gs imulb lods test lea roll add push movsl leave outsb or push adc xor mov scas repnz bnd data16 xor push jb lods dec (bad) stos mov sbb mov jb testl jge cmc sbb pop dec cmpsl bound xchg cmpsb add sub xchg roll jnp aam mov mov lds mov fildll or jp mov pop arpl mov imul lahf clc add push nop xchg add push sub inc xchg cmp mov aad dec adc adc cmp pop pop stc (bad) dec or (bad) ja jecxz xor mov push push mov shr loop in mov sarl mov jbe gs imulb lods (bad) dec out pop lea xor or pop movsl leave jle std push adc outsb out mov repnz sub fisttpll repnz push test mov std sbb mov jb stos xchg cmp sarb pop sbb push dec cmpsl cmc dec mov add fnstcw inc ljmp pop mov (bad) mov vpandn test xchg sti das jp jg dec xchg arpl mov sub inc push adc icebp icebp push mov outsl xor or jne push mov stos inc inc in in scas (bad) cld pop lcall jno cmp or hlt pop int nop cmpsb pusha mov inc xorl ja inc sub cmpsb mov sti (bad) dec aas push or xchg dec addr16 mov cs ljmp mov pop popa and mov popf testb test rclb enter ret adc pop lods dec shrl adc push call cmp sahf push cmp out jle push adc fstl std scas jo push dec xchg mov add and ss mov mov jecxz loop cld sbb cmp pushf xchg pop sub dec sub and jmp or add sub inc cltd adc icebp icebp xor mov outsl xor or xor stos jne in mov scas inc cld pop in fimull mov test cmp cmp pop pop int nop cmpsb hlt mov inc addl jb xchg cmpsb mov sti (bad) pop aas push sbb xchg dec addr16 or dec dec ljmp shrl popa and int3 testb test rclb enter ret adc push call push das sahf mov jle push adc cwtl es jb mov push adc dec add pop loopne inc mov daa adc sbb mov sbb jne push jbe and pushf arpl cmp or dec and fwait xor and or add sub inc cltd mov push adc xor mov fbstp sub stos jne in mov scas inc inc pop in fimull mov and jno cmp or adc fnstsw les movsl pop bound cmp loopne aad cltd mov sbb and insl xchg cmpsl dec sbb in mov hlt faddl mov jge ret in fbld aas leave mov mov push jo repnz fs loop call jmp inc insb repz or dec sahf jbe xor push sub into rclb nop adc jg push addr16 inc add rcrl cmp and xchg mov adc mov test dec push mov sub push and dec cmp dec mov pusha je pop push push cmpsb cwtl adc mov ret ljmp xchg in aam lret push push (bad) iret lods sbb mov sbb mov pop cmp jae mov in js lds les bound cmp loopne dec jnp movsl aaa (bad) aad sbb and dec std dec imul fsub lods mov (bad) mov ret mov leave dec push (bad) mov mov cmc jo call jmp lret insb xrelease inc jb mov dec mov push sub inc rclb nop adc jg packuswb or add rol scas jno xor add add cmp adcl xchg movaps test inc push or lahf dec sub and dec cmp pusha mov cmpsb je adc ret ljmp push in test lret push aam iret data16 push lcall test movsb mov je fwait mov jae lds andb adc popa dec xchg cltd movsl loopne aad sbb and dec std insl imul fsub loope stos hlt addl lea pop mov pop xchg push call std add rcll insb mov or aad out pop js cltd clc or pop aad cmpsb pop out xor mov rclb xor and jecxz adc aam fldenv mov xor in pop and pop stc scas leave push jmp or negl loop lret ret inc ljmp pop arpl sub mov repnz mov sub hlt xor and lods je jo add movsl ja dec mov lods loopne xor xlat cli inc adc int3 mov cmp mov jge push and inc cwtl inc mov in xor inc addb sbb inc (bad) addr16 push paddd enter daa stos dec jmp in or jl dec sub and push sub imul call std add rcll insb mov mov in xchg pusha or aad test js cltd clc out aas pop sti shll popf jp outsl jae fst mov or and jecxz adc popa cmp dec mov and sbb and pop stc mov push es inc scas push nop (bad) loopne test fisttpll mov arpl sub cld lock cmp fwait and and push je push add mov lods loopne xor dec cli inc sub sti xlat sbb adc sbb and inc cwtl gs inc xor cmp inc (bad) addr16 mov enter daa (bad) dec jmp in or jl dec sub and lea sub fs mov pop into imul push add std push orl or in test js aad out pop pop sti cltd cmpsb or int sarl out xor aam sub inc fcmove daa loop add push pop addl ret sti add cmp sarb inc aas pusha iret call scas xchg add leave adc pusha pminsw (bad) loope std sub out jns sbb rcl adc (bad) pop inc stos dec dec adc ljmp mov int xchg nop fdivrl lds insl add jp push sbb sbb xor cmp aam popf cmp arpl gs push adc or xchg pop in loopne das inc pop out mov jne push pushf movsb mov add incb mov xchg jnp jo mov jae push and mov out stos mov xlat repnz sub hlt xor jle sbb sbb pop aaa cmc repnz js in push mov aam lock push fcmove sub int3 inc rcll addl ret sti ret push in push cmp aas sbb call scas xchg add jl cli add ljmp das jmp loope jns sbb out rcll adc rclb or mov int cmpsl nop and lds jp push push negl fs in scas xor cmp inc outsb popa arpl adc or and xchg clc (bad) pop pop out mov or push sub add ds test mov xchg jnp jo aad jae push and mov pop mov push sub hlt xor jle and sbb pop aaa sbb (bad) sub in cmc mov push std lock jbe inc ficoml daa loop add xor sbbl sti ret inc in fnstsw add aas sbb call iret xchg or jl cli add ljmp iret cmp stos sbb in xchg aam mov jb ljmp out mov mov dec sub in leave cmp pop xor shlb xchg (bad) mov xchg int popf lret adc cmp mov pop mov jge xchg mov push loop push cmp cmp andb inc jecxz mov int mov pop sbb mov bound pushf xchg out ds pop mov lret into dec gs mov ret out (bad) movsb inc lret pusha inc or dec loopne mov push xor xchg dec xor fiadd push push or nop pop addr16 xchg les cld dec outsl adc mov xchg ljmp aas enter xchg or iret fsubrs mov movsb push dec sbb xor ds test jmp out xor mov (bad) adc in js or les mov cmp fbld (bad) aam sbb mov and lret dec std xchg imul fninit stos mov fmulp int ret add fs cs scas in out pop icebp imul in sub out subl shll mov repz sub cs inc int clc sub lret cmp aad push or pop aas cld xchg inc mov movsl jmp mov repnz nop and dec je (bad) je cmp add cmpsb jg cmp rorb push loope (bad) ficompl cwtl and jo adc or leave enter dec cmp inc mov mov inc or sub aam dec dec inc push shr jns outsb fs sub incb adc int out lar out popa out jge and imul aad push xchg dec les mov cmp mov rcrl ds fwait jnp pushf cltd cmp sub mov fisttpl cld lods outsb repnz xchg cld pop clc xor and js lahf loop rcll pusha loopne sti sbb mov movsl mov (bad) test jle or cmpsb and icebp out sbb lds mov mov push push imull test out das lcall in (bad) daa out ret push bound outsb jno inc cli adc fidivl (bad) push cmp hlt (bad) lret sub rorl add sbb mov mov sbb lea or lods jle cwtl or out cmp and dec sbb inc sbb mov and fistl jecxz add lds mov scas cmp fdivrp dec lcall ret test outsb dec scas (bad) hlt int3 dec inc pop addps adc xor sub push inc enter gs bound pop push roll sarl inc test adc into xchg cwtl xchg sub test fnstcw mov push sbb mov dec cmp xchg sub and and data16 pop into and push (bad) lahf push add mov pop xor lods les inc cmp arpl repnz mov and (bad) movsb xor ja mov sub mov lret mov test loope sbb inc lods sub cmp add dec mov adc push fs jo call dec not sbb int3 lret insb aam iret or (bad) lock fdivs mov daa cld jmp pusha mov das stc lds cmp lret push pop adc jno out clc mov push add loopne push xlat adc fcompl movb js sbbl subl cmc fwait cmp push jg pop inc xlat (bad) cmpsl ja insb pop mov outsb cld add mov sahf pop in cmp aaa icebp fistl shrb nop rorl jle mov rolb test iret fs in dec inc adc fwait mov aad inc jnp adc loop and outsl fnstenv sbb jmp (bad) call popf popf and push pop fild add and icebp test dec loop cmp push jmp (bad) ret mov aad les mov and stos call test cwtl in xchg push loopne sub sbb cmpsb insl subb adc insl pxor popa xchg fucomip in scas clc leave inc scas loop addl xor push sbb add (bad) dec stc je jmp push xor (bad) mov jp jo ret mov jl push rcr cld mov aaa or cltd fisttpll jbe dec fxch sub lret aas rcrb les outsb jne repz clc inc ret cli ret cwtl sub push jge iret jl inc (bad) sbb call scas xchg jnp ds push ljmp das out and je sbb push push jge int inc mov adc push mov sbb xchg mov sbb jne fs dec aaa push pop xor cs (bad) cltd xor cmp sbb outsl pusha fcmovu push enter mov pop sbb repnz ds scas xchg das sub int cwtl jbe inc (bad) arpl aad loopne pop jno insb push mov cmp inc mov jns dec jbe imul out push fldt rcrb mov daa repnz lods movsl cmp or sub adc (bad) data16 or jno push push ret dec inc fwait jmp lcall hlt adc and aaa mov stos push lods xor lods jae mov add movsb jne (bad) (bad) mov cmp fisubr jae clc xchg sarl jo (bad) push jle negb mov dec test xchg add mov je inc ret pop jnp aad ret (bad) mov (bad) mov inc cmpsb mov push push push aaa pushf dec daa imul inc cmp mov pop mov jo push dec cld mov mov daa inc push loop and rcl int3 arpl jbe xchg imulb popa lds adc adc sub xor int3 xchg xor pop lret pop xlat hlt push or add jg xor pop out pop fnop fnstenv inc pavgb es pusha outsb rolb xchg popf lcall push inc repnz popa mov (bad) mov xor mov rcr adc daa movsl es mov xlat test shrb fist ljmp pop jb xchg inc inc mov popl xor fbld mov fisttpl xor push cmpsl (bad) test mov mov in fnop and cltd jo in subl pop cmp sarb lahf pop int nop jmp xlat movsb pusha inc addl xor add xor ja xchg mov push daa mov cmpsl pop leave lds push mov in push and lcall and dec push movsb push lret cmove mov lea (bad) sub lahf das mov mov out jae mov mov dec dec push adc inc stos adc sub cmpsl xor jg and sbb (bad) int3 pop dec cmc push lcall orb fwait popf fidivl cld mov jge ret fwait sbbb imul (bad) fdiv divl mov xor fidivl movsb aas jp inc in es insb in pop shrl iret pop pusha sub imul stos into lds lea pushf rcrb and or xor subb push add sub movsb or adc xor xchg repnz fsubl ss or jbe push mov stos inc inc out out mov cld pop lcall jb cmp sbb adc cmp mov mov jp xchg bound inc das fdivs inc shll aad aas or ret push or inc call jle mov jns dec es sbb fimul popa pop mov adc and or or cmp or jo and inc pop xchg insl rorl mov dec dec out int out adc jecxz sub lret das and aaa and push aad dec ret xchg sbb or gs push addr16 sub lea stc cmp jp rcrb or sti inc lock repnz xchg cld outsb divl mov cs and (bad) sbb mov pop and notb mov bound fisubl inc shlb jp in pop jne jno pusha sub push inc jge loopne add sub cmpsl les fldl2t aad and imul out shrl aam cmc repnz xor mov adc push pop (bad) dec jne in adc inc jnp sarl cmp mov divl imul cmp pop ja mov add test mov add jecxz jp dec cld mov inc pop arpl pop (bad) jne and pop push lods addr16 les stos push add js jle inc out bound xchg jp adc adc mov stos mov pop mov sub and dec jo,pt popf and ret pop lea cmpsl je adc ret jmp add dec push nop jbe sub xchg out aam mov push aaa ret push aad push gs std dec push dec hlt pop popa xor stos xor sarb lcall pusha mov fistpl push push iret or bound pop repz xlat je sbb in mov les cs push mov cli cmp mov ss xor sub mov sub (bad) fsubrl push popa stos sub inc arpl nop lahf mov stos lods ljmp (bad) pop out aam jg mov in add (bad) jb push adc dec inc pushf ljmp hlt js movsl jl into outsb jecxz fildll cmp jns icebp mov pop jmp cld popf jle lock ja pop mov xorl rcll test push and inc xchg mov add mov jne inc addb xchg data16 fdivrs mov mov std xor test loope sub arpl mov xchg call mov add push adc pand xchg xchg lea repz adc js and cmc sbb out scas pop dec cmp stos xor test sub and shll stc push lret push adc pop inc dec hlt xchg sbb xchg pop outsb lcall js lahf test xor add outsl sti mov mov add inc cmp jg jmp rcrl sub fs mov ds mov hlt push dec das mov cmp cmp test adc pop xor test (bad) or popf adc pop div xor shrb cmp cvtps2pi lret int3 scas jp repnz pop ljmp xor inc sub int xchg cmp adc addr16 jle cwtl data16 inc mov rcr icebp add xor inc andl add fld pop adc (bad) enter or jge and push ficomp pushf and ret sbb sbb movsl push int inc mov adc push in (bad) mov rclb push mov sti rcll mov pop aaa jnp xor (bad) iret repz sub outsl sbb pop (bad) mov mov fwait sbb ss sbb xchg pop sub pushf lahf xchg jb inc int ret loopne pop jo insb push pop addr16 and dec test (bad) iret xchg iret icebp iret lods iret stos iret (bad) iret mov repnz cltd iret mov iret mov mov iret xchg cmpsb iret movsl iret clc iret xchg iret cmpsb iret cltd iret loope test iret out dec (bad) iret cmpsl iret stos iret icebp iret mov mov iret xchg iret out iret nop iret dec hlt iret mov iret jecxz into iret hlt iret or mov iret mov cmc iret movsb iret movsl iret test iret in cli iret or into iret stos iret mov iret in xchg iret mov icebp iret int mov (bad) iret lods iret mov or iret mov iret mov iret cmpsb iret out movsb iret cld iret hlt iret mov hlt iret cmpsl iret into iret mov mov in mov iret mov xchg iret icebp iret mov iret xchg iret test icebp iret sahf iret cltd iret mov iret std iret nop iret mov iret mov (bad) iret (bad) iret test mov iret iret iret mov mov xchg mov out test iret mov mov call iret xchg iret cwtl iret mov iret repnz or iret sti iret test jecxz mov iret xchg icebp iret mov iret stos iret sahf iret mov iret or iret into iret mov xchg or into iret fwait iret xchg iret mov iret cli iret in iret mov mov iret mov repz movsl iret mov iret test iret mov iret cmpsb iret call iret movsb iret or iret cmpsl iret mov xchg iret mov mov iret iret iret iret cwtl iret call iret clc iret or iret mov pushf iret mov mov iret mov dec lahf iret jmp dec out int mov mov in loopne repnz test test nop iret (bad) iret cltd iret in iret scas iret mov iret popf iret sahf iret or iret mov mov iret mov cmpsb iret test pushf iret cltd iret cmpsl iret xchg iret mov iret (bad) iret mov iret mov iret mov mov test iret in int mov cmc iret mov iret cltd iret mov mov mov iret sti iret mov loopne sti iret cld iret scas iret movsl iret mov loop std iret iret iret mov iret repz mov ljmp iret mov lcall iret (bad) iret mov iret mov iret cltd iret xchg iret xchg (bad) iret mov iret test or iret mov pushf iret out repnz (bad) iret nop iret mov cmpsb iret xchg iret test iret mov iret (bad) iret stc iret mov xchg iret (bad) iret cld iret out mov iret lock stc iret movsb iret test jmp iret test iret ljmp iret stc iret scas iret std iret xchg xchg iret nop iret xchg iret out iret mov iret int3 iret mov iret xchg iret xchg iret or iret mov cmpsl iret jecxz or or iret jecxz in test in iret mov iret dec movsb iret xchg iret iret iret xchg iret stos iret test (bad) iret test xchg iret lahf iret stc iret cltd iret int out iret cli iret int (bad) iret mov iret hlt iret (bad) iret cmpsb iret fwait iret or call iret (bad) iret mov iret in iret xchg iret jmp xchg xchg iret ljmp iret dec xchg iret call iret xchg iret mov iret fwait iret repnz out xchg iret clc iret test iret (bad) iret (bad) iret into iret mov iret mov test cli iret mov iret mov iret mov loope (bad) iret out iret loop ljmp iret jmp iret mov into iret fwait iret stc iret pushf iret nop iret int mov iret or iret xchg cwtl iret mov iret std iret (bad) iret stos iret mov xchg popf iret (bad) iret cld iret mov repz in iret xchg iret (bad) iret out xchg iret mov mov xchg iret mov mov iret iret in mov call iret clc iret mov iret popf iret mov mov iret mov dec mov in dec out into iret test iret loope repnz mov iret (bad) iret mov in iret scas iret (bad) iret jmp mov popf iret sahf iret or iret mov mov iret mov iret pushf iret lcall iret lods iret ljmp iret mov xchg ljmp iret mov test iret int cwtl iret mov iret mov cld iret mov cltd iret test loopne ljmp iret hlt iret cld iret test mov in iret stos iret dec lods iret (bad) iret mov lock repz xchg iret int movsb iret mov iret lcall iret stos iret mov iret mov iret cltd iret xchg iret xchg (bad) iret mov iret test or pushf iret out call iret cmpsb iret cmpsb iret xchg iret jecxz scas iret xchg iret repnz fwait iret scas iret mov stc iret mov xchg iret (bad) iret std iret popf iret lock xchg iret dec icebp iret cli iret movsl iret test jmp iret stos iret lahf iret test int lods iret xchg iret out mov iret jmp iret xchg iret out iret mov lahf iret in iret int3 iret popf iret or iret xchg iret in iret pushf iret repz cwtl iret cmpsl iret stos iret in sahf iret cmc iret jmp cltd iret cld iret iret iret out iret out iret xchg xchg repnz cmpsl iret (bad) iret hlt iret mov cli iret (bad) iret out iret (bad) iret call iret nop iret lcall iret into iret (bad) iret mov iret cmc iret lock cmpsl iret xchg iret mov iret call iret (bad) iret mov iret out iret xchg iret in xchg mov or iret lcall iret jmp iret xchg iret mov iret fwait iret repnz loopne xchg iret stc iret test iret or iret in mov iret mov in iret mov (bad) iret repz in call iret stc iret mov jmp mov iret or mov iret xchg iret lahf iret movsb iret mov in mov iret mov iret int repnz test out xchg iret out mov xchg iret xchg iret hlt iret repz lods iret clc iret (bad) iret xchg iret pushf iret mov iret mov lcall iret sahf iret loopne cwtl iret mov loope mov iret mov ljmp iret lahf iret in xchg iret int3 iret (bad) iret (bad) iret loopne mov movsl iret scas iret mov xchg iret clc iret mov scas iret mov iret mov iret mov iret mov iret scas iret iret iret movsl iret cltd iret out iret cld iret mov in iret xchg iret icebp iret lods iret stos iret cmc iret mov out iret cltd iret mov iret mov cli iret repz mov iret movsb iret xchg iret xchg iret cmpsb iret mov sahf iret test xchg scas iret pushf iret dec (bad) iret dec test iret repz test movsl iret mov test (bad) iret fwait iret hlt iret mov iret cwtl iret int sti iret or iret cmpsl iret mov iret mov cmc iret cld iret std iret loope sti iret xchg iret jmp stc iret mov iret into iret jecxz clc iret call iret mov mov lock ljmp iret lods iret mov iret xchg iret xchg iret mov iret movsl iret or iret cltd iret sti iret cmpsl iret hlt iret dec jmp stos iret lods iret or or icebp iret repnz mov mov xchg iret scas iret out iret mov iret mov in iret cld iret nop iret mov iret cmpsb iret mov iret (bad) iret popf iret lods iret in test cmpsl iret mov iret test xchg iret mov mov scas iret xchg mov iret cwtl iret mov iret out iret mov iret mov iret clc iret lock xchg mov iret mov stos iret sahf iret (bad) iret mov sahf iret xchg in iret jmp iret iret test or iret std iret jmp mov xchg iret icebp iret (bad) iret jmp iret iret iret mov iret mov repz std iret repz lcall iret mov iret cltd iret dec call iret stos iret or iret cmpsl iret mov xchg iret int mov iret mov out iret in iret mov iret (bad) iret int pushf iret into iret mov iret mov std iret mov ljmp iret test mov in popf iret out iret mov iret xchg iret mov in iret out (bad) iret ljmp iret (bad) iret xchg iret lods iret mov iret cmpsl iret cmpsb iret test or iret mov clc iret mov iret mov mov cwtl iret stos iret mov iret scas iret mov loope loope mov (bad) iret ljmp iret call iret test mov mov iret nop iret mov popf iret nop iret cltd iret out movsl iret mov lahf iret lcall iret in iret call iret jecxz repz out mov mov mov mov mov stos iret mov iret mov iret mov mov mov iret loop out mov mov iret mov iret mov (bad) iret movsl iret movsl iret xchg iret loope scas iret xchg iret icebp iret lcall iret (bad) iret mov mov iret (bad) iret nop iret std iret lock clc iret movsb iret test xchg dec stc iret test popf iret mov iret xchg iret out mov iret out iret xchg iret xchg iret fwait iret in iret mov mov iret (bad) iret mov iret xchg iret or movsb iret loope jmp iret call iret int in iret xchg iret mov mov iret mov xchg iret mov xchg iret mov mov sti iret in iret nop iret pushf iret dec loope mov iret mov iret xchg in mov iret cltd iret xchg iret iret mov out iret test iret cmpsl iret jmp hlt iret cmc iret cli iret repz out iret lcall iret popf iret cld iret sti iret lock loopne mov lcall iret jecxz mov iret movsl iret mov jmp iret or iret mov mov (bad) iret fwait iret hlt iret xchg iret jmp iret (bad) iret cld iret hlt iret dec mov jmp iret icebp iret mov iret mov iret xchg iret pushf iret test iret cmpsb iret mov iret loopne icebp iret repnz (bad) iret lods iret (bad) iret xchg iret in mov xchg iret lcall iret std iret mov xchg iret or clc iret mov loop sti iret mov iret iret iret popf iret popf iret scas iret mov iret mov icebp iret test out mov out int3 iret stc iret mov iret lods iret mov iret or iret movsl iret mov iret cmc iret jecxz mov test scas iret mov iret or iret into iret iret iret int3 iret stos iret loope (bad) iret test iret cli iret mov iret cli iret (bad) iret (bad) iret sahf iret (bad) iret cmpsl iret cmc iret scas iret dec in iret lock mov iret lcall iret or iret mov iret iret or cld iret out xchg iret into iret icebp iret mov stos iret mov mov mov cwtl iret stc iret sti iret mov mov popf iret repnz xchg iret mov iret mov iret cwtl iret mov iret scas iret mov iret dec test lock in iret repz scas iret movsb iret lock test repz fwait iret mov mov iret mov iret or iret cmpsb iret stc iret xchg iret mov iret stos iret ljmp iret (bad) iret mov iret mov mov call iret jmp iret (bad) iret mov iret std iret iret iret cmc iret (bad) iret loopne mov iret loope xchg iret (bad) iret movsl iret cmpsb iret stos iret mov iret sti iret (bad) iret jmp jmp iret mov iret out nop iret mov repnz iret iret mov icebp iret scas iret mov popf iret cmc iret mov iret mov iret mov iret dec (bad) iret test (bad) iret mov iret mov in mov iret test xchg iret repz mov in iret test xchg iret test iret fwait iret mov iret dec xchg iret mov iret mov pushf iret lock stos iret mov iret scas iret mov mov or stos iret (bad) iret xchg iret mov mov ljmp iret lcall iret repz pushf iret in iret hlt iret xchg cld iret test sti iret mov iret or iret test movsl iret cwtl iret mov iret or mov or iret in iret cmpsb iret iret iret xchg iret nop iret mov iret sti iret out iret mov mov iret mov int cmpsl iret mov xchg iret movsb iret stos iret mov mov iret fwait iret cmpsl iret ljmp iret popf iret mov mov iret mov mov lods iret scas iret cltd iret ljmp iret (bad) iret lock mov sahf iret mov mov iret test dec cwtl iret in clc iret loope iret iret mov mov out loop int3 iret xchg test iret lcall iret into iret nop iret lahf iret cwtl iret pushf iret xchg iret mov mov iret test mov iret fwait iret mov sti iret xchg scas iret jmp mov mov iret mov iret mov mov stos iret jecxz mov out iret iret mov (bad) iret mov int stos iret fwait iret mov mov mov iret hlt iret mov loop cmc iret dec test iret cld iret dec scas iret mov iret int3 iret (bad) iret jmp movsl iret int loope mov xchg iret xchg iret cltd iret xchg iret mov mov iret mov iret fwait iret nop iret or iret mov iret xchg (bad) iret stc iret test popf iret loopne repz mov xchg iret mov mov iret test iret xchg iret mov mov cli iret mov xchg iret or iret loopne mov iret repnz sti iret cmpsb iret xchg ljmp iret cwtl iret xchg into iret scas iret in iret test sti iret scas iret dec xchg xchg iret xchg iret xchg iret call iret test into iret mov iret nop iret in iret popf iret int mov mov iret lahf iret (bad) iret (bad) iret lcall iret out iret mov iret stc iret cmpsb iret xchg iret scas iret xchg iret movsb iret xchg (bad) iret xchg in iret cwtl iret sti iret fwait iret into iret out iret hlt iret iret iret lock mov iret (bad) iret icebp iret mov iret test stos iret jmp iret (bad) iret mov iret out iret in iret in or iret jmp test fwait iret cltd iret clc iret in iret ljmp iret mov iret xchg iret repz loope xchg iret cli iret stos iret in in pushf iret pushf iret lods iret mov iret (bad) iret lock mov in int3 iret out jmp iret nop iret test in icebp iret test iret cwtl iret lcall iret xchg iret mov dec mov iret mov test mov iret in jmp iret mov sahf iret movsl iret nop iret mov xchg iret ljmp iret xchg iret mov iret xchg iret lods iret dec in iret (bad) iret cmpsl iret loop loope cltd iret mov loop mov iret mov jmp or iret scas iret jecxz out xchg iret int (bad) iret mov loope mov mov mov lahf iret xchg iret stc iret mov mov pushf iret out iret xchg iret mov iret mov iret mov stc iret scas iret test lods iret cmpsb iret std iret call iret in iret xchg iret repnz scas iret stos iret (bad) iret mov call iret mov xchg std iret mov or mov xchg iret (bad) iret stos iret xchg iret scas iret iret iret lcall iret mov dec (bad) iret lcall iret mov iret (bad) iret dec test iret movsb iret dec scas iret or iret icebp iret int nop iret into iret cmpsb iret mov test iret dec cld iret (bad) iret (bad) iret pushf iret xchg iret mov iret out std iret sti iret jmp mov iret test call iret out iret loopne scas iret int3 iret xchg iret cmc iret mov mov (bad) iret stos iret mov stc iret mov iret in iret mov iret out cmpsb iret loope mov iret mov iret jmp iret mov iret jmp iret (bad) iret test test mov cmpsb iret ljmp iret call iret out iret into iret sahf iret popf iret jecxz nop iret in iret popf iret int cltd iret mov iret cwtl iret (bad) iret in fwait iret std iret scas iret call iret xchg repz mov iret mov hlt iret (bad) iret jmp iret in iret cltd iret hlt iret dec mov repnz mov iret xchg out loopne mov iret clc iret or iret mov int3 iret movsl iret (bad) iret xchg iret test scas iret lock icebp iret (bad) iret lods iret jmp xchg iret in mov std iret lcall iret std iret mov stc iret or iret stos iret dec mov iret mov iret iret iret out pushf iret lods iret or iret repz nop iret icebp iret out iret out mov lods iret int3 iret xchg iret icebp iret sti iret mov in mov iret or iret std iret mov iret xchg iret cwtl iret movsl iret mov out mov iret mov iret iret iret repz stos iret loopne xchg iret loope (bad) iret nop iret xchg iret cmc iret int3 iret scas iret cli iret mov xchg iret popf iret mov iret mov dec (bad) iret mov iret test iret stos iret popf iret (bad) iret lods iret in iret into iret jmp jecxz mov jecxz scas iret cmc iret mov mov iret cwtl iret mov mov cwtl iret clc iret mov iret popf iret repnz clc iret test or iret (bad) iret xchg iret jmp lahf iret mov iret mov mov std iret repnz movsl iret out iret lock (bad) iret mov iret mov iret std iret sahf iret mov iret sti iret int3 iret mov mov iret xchg iret xchg iret cmpsl iret mov lahf iret stos iret xchg test sahf iret clc iret mov clc iret stos iret repnz mov int test cmpsb iret mov xchg (bad) iret xchg iret cmc iret mov iret lcall iret popf iret mov iret loopne xchg iret mov iret stos iret mov iret mov iret repz mov stos iret mov iret lods iret xchg iret fwait iret mov iret mov iret pushf iret mov iret (bad) iret xchg xchg iret dec mov out (bad) iret std iret mov iret mov iret mov in xchg xchg iret in out iret hlt iret mov iret out iret stc iret mov repnz lahf iret std iret or iret lock movsl iret xchg iret mov iret cmpsl iret mov iret lock lahf iret scas iret out test iret scas iret popf iret stos iret in iret mov mov test xchg mov stos iret mov cltd iret mov iret jmp iret hlt iret mov iret cli iret repnz or iret mov iret mov loop mov iret jmp icebp iret iret iret mov jmp iret cmpsb iret iret iret xchg iret cli iret mov iret sti iret out iret mov or cwtl iret mov cmpsb iret mov dec movsb iret stos iret mov or iret (bad) iret std iret cmpsl iret int3 iret in iret mov (bad) iret out mov mov in iret stc iret mov lahf iret mov lods iret cltd iret repz icebp iret or iret or loopne mov mov iret mov dec mov in xchg iret sahf iret in test iret lahf iret jmp iret xchg iret in iret mov out iret loopne lock jmp (bad) iret sahf iret lahf iret pushf iret xchg iret scas iret mov iret mov iret popf iret lcall iret scas iret ljmp iret (bad) iret or iret xchg iret mov xchg iret stos iret jecxz mov pushf iret in mov in iret mov ljmp iret mov mov iret xchg iret mov lahf iret xchg iret fwait iret loope cmpsb iret mov cltd iret xchg iret out mov iret jmp iret std iret int loopne mov mov mov mov mov stos iret mov iret mov iret mov (bad) iret mov iret jecxz out test mov iret mov iret mov (bad) iret cmpsl iret cmpsl iret xchg iret jecxz test xchg iret repz fwait iret scas iret mov xchg iret mov mov mov iret icebp iret xchg iret dec icebp iret cli iret movsl iret xchg xchg clc iret sti iret stos iret lahf iret mov iret in iret loopne mov iret jmp iret xchg iret out iret mov mov mov iret repnz mov (bad) iret mov mov iret clc iret lcall iret or in test test mov iret clc iret movsl iret mov lods iret mov stos iret mov iret mov mov nop iret lcall iret into iret (bad) iret mov iret cmc iret lock cmpsl iret mov mov iret xchg std iret mov iret pushf iret in iret out iret xchg iret in or iret or iret mov mov xchg iret in iret jmp iret mov mov iret fwait iret repz sahf iret xchg iret stc iret stos iret (bad) iret jmp or iret in mov iret mov in iret mov (bad) iret int3 iret or iret xchg iret (bad) iret cli iret mov in mov iret mov iret mov iret nop iret sahf iret stos iret cmpsb iret in mov iret mov iret int3 iret icebp iret scas iret or iret out (bad) iret xchg iret xchg iret sti iret repnz iret iret dec mov xchg iret (bad) iret mov iret mov cld iret hlt iret mov iret scas iret sahf iret lahf iret scas iret mov iret mov repz xchg loopne mov loopne into iret cli iret mov iret scas iret mov iret popf iret std iret cmpsb iret mov mov (bad) iret (bad) iret std iret mov xchg test iret jmp iret lods iret scas iret into iret movsb iret jecxz lock stos iret mov cmc iret sti iret mov iret hlt iret mov lock lahf iret pushf iret mov iret mov iret test movsb iret stos iret dec dec movsl iret mov popf iret scas iret test lods iret or iret test iret in iret lods iret repnz mov stos iret mov mov mov lcall iret (bad) iret lahf iret int3 iret nop iret mov iret mov iret lcall iret test mov iret clc iret xchg repnz out iret int test iret xchg int xchg iret mov mov iret mov iret (bad) iret mov iret xchg iret mov iret movsb iret in stos iret loop cli iret mov mov iret mov mov ljmp iret xchg iret stc iret (bad) iret mov iret dec scas iret (bad) iret pushf iret loop mov iret jecxz xchg iret mov iret (bad) iret or iret scas iret mov iret jmp scas iret cmpsb iret mov iret loopne xchg iret mov int3 iret lods iret test repz test mov lahf iret (bad) iret mov iret mov iret mov iret dec (bad) iret test lock mov iret mov out mov iret xchg in iret int3 iret mov out iret xchg xchg iret stos iret int3 iret cltd iret xchg iret mov iret clc iret in iret mov xchg xchg test sahf iret repnz movsb iret mov iret scas iret mov test (bad) iret mov loop movsb iret icebp iret xchg iret mov (bad) iret in mov mov xchg iret xchg iret mov iret int sahf iret out iret (bad) iret or hlt iret mov iret or mov cld iret popf iret jmp iret repz mov xchg iret jmp pushf iret out iret mov iret xchg iret mov mov in cmc iret jmp iret mov iret iret iret mov iret cmpsb iret movsb iret mov mov iret xchg iret mov iret (bad) iret cmpsl iret sahf iret mov mov iret mov mov scas iret scas iret fwait iret jmp repz sahf iret sti iret pushf iret icebp iret mov cwtl iret mov mov mov iret stc iret lcall iret lods iret mov mov loopne jecxz int xchg stos iret xchg iret icebp iret xchg iret call iret lods iret xchg iret cwtl iret cltd iret sahf iret nop iret mov mov iret test mov iret xchg iret test hlt iret or iret in in iret xchg dec xchg iret (bad) iret in lock xchg iret xchg iret mov movsb iret nop iret test lods iret mov lock mov into iret stos iret xchg iret mov mov mov iret (bad) iret (bad) iret jecxz (bad) iret dec stos iret mov iret clc iret scas iret mov iret into iret (bad) iret in cmpsl iret iret iret jecxz test xchg iret xchg iret fwait iret in iret mov mov iret mov iret xchg iret xchg iret (bad) iret icebp iret mov iret xchg pushf iret sti iret xchg lahf iret loope int mov in iret mov mov iret stos iret nop iret mov xchg iret mov mov hlt iret mov nop iret popf iret clc iret loop mov iret int3 iret hlt iret clc iret mov iret xchg iret std iret mov mov iret test loop hlt iret test iret xchg iret xchg iret nop iret ljmp iret iret iret mov mov lcall iret into iret mov mov iret cltd iret lock or iret dec loopne xchg jmp iret ljmp iret scas iret xchg iret cmpsb iret or iret or iret lcall iret jmp iret icebp iret mov iret lock repnz mov iret stos iret movsl iret jmp dec mov iret loopne out iret call iret (bad) iret xchg iret in test iret stc iret out iret jmp xchg iret test xchg iret mov iret xchg iret int loop xchg iret sti iret movsb iret pushf iret or iret mov iret mov iret call iret in popf iret or iret out iret xchg iret stos iret out repz stos iret into iret mov iret int iret iret mov iret dec mov iret mov test mov iret in ljmp iret cwtl iret cmpsb iret xchg iret mov in iret jmp loope xchg iret movsl iret in iret mov icebp iret stc iret xchg iret scas iret clc iret out iret lock mov iret lcall iret pushf iret out test in (bad) iret lcall iret in iret iret iret icebp iret mov jecxz mov mov mov cltd iret xchg iret sti iret mov mov sahf iret call iret or xchg iret (bad) iret mov cli iret test iret mov iret xchg iret mov iret jmp iret out iret mov iret into iret xchg iret call iret jmp int mov iret xchg iret (bad) iret stc iret mov mov cld iret or xchg iret movsl iret xchg iret cld iret jmp iret xchg clc iret mov mov iret in iret lock mov cmpsb iret mov in in iret mov iret mov mov lahf iret mov (bad) iret cmpsb iret cmpsl iret movsb iret mov iret hlt iret or iret ljmp iret int (bad) iret out nop iret mov repz iret iret mov repnz scas iret mov mov iret in iret in iret mov iret mov iret xchg iret (bad) iret test (bad) iret mov iret test or iret mov pushf iret cmc iret mov iret sti iret (bad) iret movsl iret lcall iret out iret jecxz mov iret in xchg iret in iret xchg iret ljmp iret lods iret cwtl iret sahf iret std iret xchg iret out iret lahf iret iret iret fwait iret mov iret lods iret xorl notl mov mov jne daa andb jmp pop inc xchg pop pop test gs repnz movsl or into (bad) dec rolb les jns or repz movb insb inc push fucompp or xor jb dec cli fisubrl add add jle sahf dec (bad) arpl sub nop sub adc pop add or jge xchg dec add mov gs mov enter dec push rorb insb sub cld mov dec (bad) sub sahf (bad) pusha xlat das imul pusha sbb add cmp lods outsl inc stos mov push clc mov xchg xchg negb or xorl notl (bad) dec xchg cld adc bound and cmc xchg lods sarb pop pop test pusha inc repz movsl or into (bad) dec rolb les jnp dec shufps and inc mov add add aas mov sub daa push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push add add sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb stos sbb pop hlt xorl out add rclb fisubl and sub xchg mov mov pop test gs repnz movsl or into popl dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor add add add sbb push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jne mov adc adc cmp cld add bound daa and sub xchg mov add mov enter inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc add push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jne mov adc add adc cmp cld add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock add ljmp fcompl pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp add add mov jbe hlt sbb test xorb jne mov adc adc cmp cld add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub add add push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jne mov adc adc cmp cld add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns add add add arpl dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push push das in sub add sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jne mov adc adc cmp cld add bound daa and sub xchg mov mov enter lahf sbb repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc push add push jb cwtl add add xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jne mov adc adc cmp cld add add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock out inc xor add pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb call xorb jne mov adc adc cmp cld add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul add pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jne mov adc adc cmp cld add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns or repz add dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js add cmp dec (bad) sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jne mov adc adc cmp cld add bound daa and sub xchg mov mov enter inc repnz movsl or xchg lods icebp and into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp add add add xchg xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jne mov adc adc cmp cld add bound daa and sub cmc xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock out inc xor pop pushf popf and adc jbe stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb add add mov adc adc cmp cld add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli add add lock out inc xor pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret add mov push clc mov jbe hlt sbb test xorb jne mov adc adc cmp cld add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in add add aas mov sub aaa push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push add add add je (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jne mov adc adc cmp cld add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec add inc cmp imul arpl dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor add push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jne mov adc adc cmp cld add bound daa and sub xchg mov add add mov inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc push jo push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jne mov adc adc add dec xchg cld add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock add negb incb fcompl pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push add add mov jbe hlt sbb test xorb jne mov adc adc cmp cld add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov jle cmp add add cmovp inc rcr sub test adc stos das in aaa (bad) xchg imul add rcll sbb fbld rclb xlat xor lea dec insb in sbb ja stos jo lcall dec pavgb mov push pushf push add and xor push pusha push push xor repnz test push gs mov sbb inc sub adc xor or ja jnp pop mov xchg mov fs push fsubrl ret insl xchg lods fwait and test cli dec add push (bad) inc or mov adc xor mov inc or inc outsl inc stc pop je cmc mov add addr16 test sbb push pushf push out pmullw and fcmovbe lcall push jb pop loopne lcall cmc adc sbb xchg jmp sub cli add rorb xchg cmp fstl cmp sub out sub jbe ja test repnz fwait jecxz pusha dec cs jbe nopl mov xorl jl fnstcw mov shll add jg sub ret adc jne leave lahf add jo int3 jl rorl xchg cld jl and inc lods cmpsb cld dec add cmp lds into ficom jbe xor mov push adc sub mov imul xchg sbb push (bad) adc ljmp movsb stos test cwtl in add test mov loop dec mulb cmp sti movsb adc loop push mov push or rorb pop push lds movsb ds mov (bad) jno or mov add adc pop call lock cmp jle movb inc add add lahf sub insb add hlt sbb fidivrl popf and mov test cltd sub inc repnz rorl ret js jns xchg or and jg fbld ffreep mov or loop pop clc aad scas jmp inc adc xor push sbb or pop add pushf adc pop aam mov jns push mov xchg jle popa fild ljmp jge mov je xor arpl dec sbb adc mov cmp or sub pusha stos js mov add jae out or jno pop lods mov jno jmp push (bad) mov add add push xorb jmp add sub jg ss insl mov (bad) int or mov pop pop sub xor repz jle cli and dec dec inc lea or xor aas lahf ja call inc sbb or hlt out and pusha mov xchg int add jmp scas cmc and push fidivl mov arpl arpl incb in (bad) cmp ficomp sar or inc loopne stc mov push in imul mov push nop sub add and pop stc std sbb xchg (bad) sub cwtl popf and daa mov add add fs imul add push dec sahf hlt sbb aam xchg ss and shl xchg pop dec pop fidivr mov mov or push gs sbb ss cli push int adc dec dec jbe cmpsl outsl mov push mov lea addl popf movsb dec and fs cmp add adc inc add and jno xor icebp jno inc xor lea sbb leave cmpsb in pushf popf jne (bad) mov xchg fstpl sbb or pop popa nop pop pusha cltd fsub ja nop sbb inc (bad) mov mov test jmp add add insb mov sub data16 jecxz sub fs pop popa xchg negl push mov sbb inc call xorl testl add (bad) push and mov inc mov xor xchg dec add push cmc push lods inc lret inc imul adc arpl cs fwait mov pop jge leave jl xor push jp es (bad) ss fldcw stos cli push inc scas loopne iret andb xchg pop or sbb stc mul push aam fild pusha rcrb push jb enter xchg outsl sti mov add add fcomi jae das (bad) stc sub jbe pusha fildl xchg (bad) std xchg (bad) (bad) (bad) out je sbb shll cmp ds dec xor pop push cmp mov movsb std or loop iret jle pop jbe (bad) jle adc pop ret push mov int mov into pop std add add mov nop shrb push inc aaa into dec add pop call push or sbb jno push xor ljmp popa xor rorb mov pop cld andl daa out push pop lods repz add cmp shl pop adc repz add xor sbb fsts cwtl (bad) fidivl sbb or mov push rcrb inc add loope jl out pop adc sti dec fnstenv std ja imul cmp dec (bad) mov (bad) jmp sbb das imul imul loop aad (bad) mov push adc cwtl sar sub rcrb adc add je ret lods jmp or fimull imul movsb ret enter fstl int3 int jecxz stc cltd movsl pop jle popf and push (bad) jns imul pushf xor in dec adc mov fistp aaa sarl pop xchg out mov stos cli data16 add add add add out cmpsb insl mov cmp leave cld movsb stos in jbe mov jbe es jo rorb pop adc fidivrl fcompl pop jnp sti mov xchg jne scas mov dec in xorl cmp and arpl fiaddl add add out xlat fildl stos stos mov test test outsl mov or adc cmp adc bound inc inc cmc push clc or rcl fs pop xchg cmp leave enter xor lock int jns and into jmp imul cmpsb lods test mov fs lret or jle add ds out xor pop or lret fldcw decl icebp add mov shrb pop daa scas iret je dec adc push mov pop mov fistp fildll fldl icebp jge mov pop push push das mov mov mov lahf xchg sti gs xchg daa fwait add cs arpl out cs cmp pop (bad) popa jb adc (bad) jno pop nop insb std ss aas mov stos add call jnp jle cmp cmpsb inc push rcl ret std add mulb inc aas xor loop or push cli repnz mov jb (bad) pushf addr16 add dec in movb jb pushf xor lods fwait aas sbb sub repz test jb pop push cltd push push jns adc stos xchg lret push out sub test adc rcrl adc pop jle or add in sbb in add scas arpl (bad) pop sbb add jl lea sbb xchg dec pop cmp adc leave sbb or insl mov pop fdivr imul imul jle cli mov cmp fs mov sbb sahf sbb call xlat popf jo mov or dec push jae jnp dec mov and sub sbb add roll add add lret inc fwait ja or adc or (bad) dec adcl jns (bad) mov xor pushf mov shl pop xor mov test and pop nop push push mov lock xor mov mov bound and jns enter and pushf push jae jo fsub iret adc mov stc add or mov rcrb push jl test dec sbb pusha xor push cmc xor addr16 (bad) adc movsb in das push pusha aam add ss stos mov dec jno (bad) std sbb test stc jmp andl add add inc push sti add bound inc fucom inc mov mov mov mov cmc movsb or inc cwtl dec mov or ret orl mov push ds jle xchg outsl test cld push hlt test adc sarl cmp dec mov xchg inc outsl or add inc xor dec je fnstenv add stc push pmuludq push xor nop add clc pop and adc push push jl subl sbb std mov add add or or mov pusha add jne ret cmp push clc add add add flds call outsb nop jne mov dec adc dec xchg cld add jmp out mov call xchg add or inc inc repnz int iret (bad) iret push push bound pop add xor inc fwait popa mov xor aaa roll add add inc ret or ss stos cli or jmp or xchg into leave mov aas pushf popf mov dec addps pop stc pusha shrb xchg mov xchg int3 xor jmp add mov push and lock imul lods sub ds (bad) cld jmp add add or out mov xlat inc add add pusha xlat das imul xorb jno ret mov test mov or dec out dec mov aam mov notl mov lahf stos xchg insl int es push in inc iret cmp xchg aaa es cmp repnz arpl mov fsubrs roll or or fisttp je pushf xor inc xchg out sbb sub idivl dec push outsl inc fistpl sarl cmp rcll out inc push push pop push jne sub and sbb jns xor es xor rcll sub jmp imul cld sub add add xchg arpl cmp jmp add cmp ror mov (bad) das call pop inc in ret mov dec dec (bad) mov push jne mov mov cmpb inc xchg loope add and les jge mov sarl jbe test add out fcmove sub fisubl addr16 inc mov sub xchg or cmp push mov out aad sub dec sub push jnp dec mov dec sbb add xchg (bad) cmc inc xor popf pushf and dec xor iret repz subb ficom xlat in sti adc out and int3 in push (bad) ljmp out add mov pusha (bad) cld xchg push push out sub pusha imul and lods addr16 in and mov loope sti pop std pop outsl xor mov (bad) test outsl aaa (bad) ficomp push mov (bad) inc jb jne and les dec sarl mov rolb cmp pop pop pop test cmpsb push dec popf movsl or or (bad) adc insb mov inc cmp loope inc xlat std xor cmp loop stc (bad) mov call dec cmpsb add inc ljmp hlt adc add popf jb bound push xchg out scas clc push add or xlat mov push leave lds xchg xor dec popf pop cmc sbb jnp dec sbb jl pop sahf xchg cmp mov dec (bad) inc shr out je pop fistpll lahf sub pusha loop fsubrs mov and in add or mov add sbb data16 or adc xor push cmp xchg lds dec sbb cmp lods icebp xchg nop mov arpl cmc xor test inc ljmp int3 mov sbb into (bad) and jbe aam mov cs mov xchg icebp daa adc lock mov jo add add movsb xchg lods test stos cmp in rorl faddl xor fwait lahf mov test mov mov mov mov dec (bad) jge jno sub es push (bad) push add cmp push das in out ljmp mov jge sbb mov jno dec cmc in xchg or sub out cmp jno mov clc popa ds xchg scas push mov mov xchg mov imul pop test and mov inc cs mov add jb ds or mov (bad) cmpsb ret popf lret out adc sub aas fcomi imul adc enter pop inc pop stos sahf xchg or cwtl xchg mov inc addr16 sbb mov sti stos enter lock dec cmp cld adc sbb and jmp mov insb int3 in inc (bad) pop sub aas inc xchg jae cmc (bad) aas outsl add add cld shrl dec (bad) jg mov mov aas gs pusha xlat cmpsb fsubrs cmp dec in sbb pop pop mov into jg mov inc aas stos (bad) out aas sbb cmc sbb mov mov xorl aam xchg xor push inc or (bad) cmp addr16 test adc in into xor test dec call jbe arpl cmp out dec adc mov sub test pop stc sub xchg mov stos stos and mov (bad) inc fiaddl fcompl pop or mov xchg pop stc push mov adc lea add cs addr16 xchg pop into jg dec ficoml (bad) decl stos mov push leave jl inc imul in xchg out lret (bad) xor jne stc out lret cli ss ss stos rolb xlat jbe hlt inc arpl lods and fs jl adc xchg cld add mov (bad) out jns sbb aas cmp add and sub (bad) icebp jne mov shlb add ficomp dec cmpsl jmp idivb xor aaa xchg aas scas xchg imul outsb scas stos adc js imul mov xchg (bad) enter lock add add das inc lret mov xchg jb cwtl in repnz loope add jl pusha mov lret (bad) xor pop loop in sub std push mov push or mov cmp and jp ret fadds inc push fsub aas clc fcoms mov outsl in jb lock add add test jp lds fidivr bound fimull mov cmc sti mov in loop or mov sbb stos xorl adc loop jno or cs mov dec sbb mov or mov jo loop xchg inc sub cli or add jbe mov jmp inc cmc fsubs aam mov je adc stos pop or fwait lods add mov add pop popa nop push pusha and adc cwtl push scas test jg sbb std cs cld cmp ret rcll adc mov adc jecxz cwtl cmp add add add and daa or jmp dec add xorb clc ret in andl out (bad) or mov fwait ja or jo sub adc out insl push push jne shrb rolb push test jb add repz xchg mov mov add ffreep leave sub mov push mov cmp das push icebp out cmp and not imul pop daa sbb pop sbb xchg (bad) cmc int3 test mov pusha nop outsb jmp cltd test dec ss mov or jg es nop cld gs cmp (bad) or add and dec in rclb test xor inc stos xor push xchg hlt sbb cmp in popa dec dec aaa dec mov pop push loopne (bad) xchg mov or mov jmp or orb ret mov and outsl inc repnz repz push icebp and into in test rorl mov inc insb and mov push and xor arpl loop cwtl (bad) push lahf mov xchg push cli or lock mov cld dec lret adc addl add jge mov rcll push pusha ret inc mov popf test jg push sub mov js int3 cld je sbb sub iret xor pusha xlat movsb mov loopne in mov int3 ret fucompp imul mov jbe sbb jp insb in cmpsl (bad) data16 cmp test pop stc jb lds dec (bad) cmp test call or sbb pop fcmovbe mov nop sahf mov repnz es lods (bad) mov adcl xchg (bad) popf xor jl out rcrb xor int (bad) push or cmpsl mov cmpsb or lock repz xchg pop and pushf sti stos sbb (bad) (bad) out ficomp pop stc push (bad) lock xor jb lcall outsb in fidivrl jns push inc in xchg sbb lahf pop add add out je insl cmpsb inc movsb out out mov cltd fldenv out sub stos pop or jb sbb test jae and orl add add xchg cld imul stos in inc sub roll push pushl adc popf inc repnz bnd or je dec je orb or mov mov push sbb loopne adc call mov push jnp dec (bad) cmp push add sahf cltd inc ljmp add add add add cmc inc xor fs and dec add xor lcall sbb lcall jo icebp fwait (bad) pop pop push push daa mov jp jb shl flds sub sbb out mov movsl test mov inc and pusha xlat (bad) repz push jecxz xor outsb adc cmp pop or add jp stos movsb in test or fdivl sub dec xchg jg cmp fisttp sub xchg or mov jg movsb or lods cmpsl int3 sahf xchg fwait aaa push jnp or scas mov inc adc adc jmp jg xchg add sub js xor pop xchg test jp adc movsb aam jno mov lahf popf and jae dec jp xlat lcall stos lea pop test add cmp inc aam icebp mov xor cmp int std adc pop shl push dec or out je sahf mov pusha xchg das lods jne imul fucomi push inc insb negl xor cli (bad) mov js call adc adc out or push add ud2 xchg add mov sub aam movsl mov push stc sahf sub aaa pusha in inc mov bound dec std dec adc inc or add add and pop popa xor sub lock push mov push xchg jb out (bad) out fsts dec mov fnstenv dec dec jmp lods pop mov ds mov and jb fstl adc fldenv repz js and pop call add fisub sysret in xchg pop mov inc xlat adc pushf pop andb xlat inc imul (bad) mov inc (bad) mov add pop repz pavgw aam push cmp dec pop in das mov insb jno pop cltd mov dec jg inc sub shr fs rcr roll dec xor test adc inc ret int lods xchg inc xchg in cwtl test or mov ret push aaa fucomip cs out pop je pop das xchg push sar pop adc cmp sub or pop adc dec mov ljmp call fildll xor add add out and pop loopne jmp and push js lret mov push lock jge push dec sub dec std lahf scas xchg cltd aad mov mov ret dec push stos test add jecxz test and lods dec pop inc xchg mov push xchg clc int sbb add iret aam mov cmp out cwtl mov xchg sahf sbb inc jg int imul dec ror mov push leave (bad) xchg inc stos scas (bad) iret lret in les cmp adcb push sbb sbb mov push push stos push incl jnp popl je add mov movsb pop or and push add mov mov jl mov pop xor popa dec neg ficompl stc test pushf dec push xchg imull add jecxz fldt pushw (bad) movsb fildll jecxz roll inc stos cmp repz jne movsb dec adc xchg cwtl jg imul out add mov rorb and xlat (bad) xor cwtl xor ja cmp adc bound push jne fdivrs js xchg dec loop ret sub (bad) test (bad) addr16 mov (bad) push or cmpsl outsb add loop mov lock cs push inc adc pop call xor frstor repnz add dec dec (bad) xor xor adc test xchg mov sbb jnp movsb pop insb adc daa sbb mov or sub in cwtl push fisubl pusha pop push imul add es xorl pop clc mov popf jge hlt mov ss gs sub shrb cmpsb inc pop pop fwait in cmp xchg xor outsl mov aaa sbb popa push lods ret pop popa movsb scas addr16 fld cmpsl dec mov icebp mov lea sub add mov add add adc out xor mov outsb iret cmpsl push sub sub scas ret sbb xchg jecxz enter out jns test movsl add sti mov (bad) pop fbld push fadds push jb mov ds add or xchg xor inc cmpsb mov sti dec lcall cmp add push sbb mov jae fwait pop pop gs int3 pusha xlat mov inc jmp cmp ljmp pushf pop call xorb mov cmp push inc push out push fs pop outsl and fdivp xchg mov sbb inc aaa pusha xchg cmp adc outsb popf lods icebp add add int3 xor jo push test jb aad imul (bad) mov jno enter imul mov dec imul adc or lock xchg jnp incb xor inc push inc mov push push std scas fnstcw cwtl mov add test loope add xor jno,pn jl mov mov (bad) sti enter adc cmc xchg (bad) aam orb (bad) sub lods sbb lcall push jmp nop cli repz jecxz push (bad) mov pop js mov jmp or cmc scas mov daa jne mov ds dec (bad) mov rcll add add cmp mov sub ljmp or dec decl inc lcallw call fwait insb dec popa and inc sbb arpl decb jno cmpsb mov pop lret fsubrs outsb (bad) (bad) (bad) call hlt fcomps dec mov push pushf popf test (bad) cld add jns add es mov dec push in push into mov add mov dec push cmp xchg clc mov addr16 sbb ja repz cmp cmpl data16 pop (bad) pop xchg and and insl mov lea mov (bad) dec enter test cmc cmp add add insb lds out and es inc aas inc in dec imul cmpsb push xchg nop sahf sub cltd sub ffree add xchg inc inc jg or push std or ss movsl and xor mov lods cmovns adc neg adc push sbb loop add push repnz (bad) mov into clc adc add dec mov bound jo lods shrl xchg insb int3 loop xchg test (bad) lock cmpsb popf rcr dec pop das retw cmp enter mov cld xchg mov mov out je and imul call mov cmpl adc pop xor stc mov cltd ja out pop stos push fisubr clc xchg outsl les fwait mov mov leave mov fcmovbe xlat (bad) xor or cmp cltd cmpsb inc jno mov pop jne jo cmpsb xor cs fcmovb test aaa outsl dec mov mov out add call sbb out arpl ret push cli stos cli (bad) (bad) call cmc fsubs std stos or loopne sbb inc psubsb xlat pushf mov push jo lcall pushf mov leave call xlat bound outsb push es dec lret jp pop nop or add cmp add add out jl sahf jbe arpl jae,pn pushf pop pusha push shrl es sub test jbe and imul fisubr jl adc xchg cld add push push pop fwait aad mov pop pop js add sbb pop out icebp in xchg and mov (bad) test add xchg push or fmull xor xor push inc jo je and fnstenv dec and xchg mov insl and repnz cltd clc inc addr16 lods stos mov push pushf push out pmullw push inc fwait mov jmp sbb outsb push sbb xor popa sbb mov lret xchg add je mov add add mov js fimull or sub out cld ret pop out (bad) movsl pop push mov adc jecxz cmp fnstsw ja in insb in jecxz mov je cmp out cmc stos add (bad) pop mov shrb call xor pop and fdiv push call pop sbb jne arpl ffree xchg lods rorl dec jbe and sbb insb sbb aam push repz xchg mov lods jbe scas ja icebp mov addr16 fstps pop test inc ja inc lcall lods add repnz lret add or mov incl js mov xor jbe xchg or (bad) aas add js mov mov hlt sub arpl mov sub mov fsubs jbe cmpsl hlt and insl outsl in and xchg add les push imul movsl rcl test xchg fcomi decl test dec pop cmp pop test lahf inc mov adc aaa or leave lea cltd pop inc or and cmpb leave jns aam pop ljmp xchg mov sbb jge cmp add add pop aas enter dec xchg pop mov je push (bad) fildll mov sahf outsl sti jmp xchg ja mov loope inc loop ret cli dec xchg mov xchg pusha (bad) insb jmp push dec add xor sbb imul nop lret stos jno ret jecxz aad pop mov cmp add add push jbe xlat cmp loope cmp adc lods xorl cld imul ja inc sub mov aaa pop and lret scas or es mov popa cmp add jl arpl sbb pop push (bad) pop inc notl add add mov jecxz push or mov xchg mov ficomp movsl ss xlat in inc fwait mov aam lods (bad) xor mov sbb sar aam das hlt pop ret imul ds mov cmp dec scas jge sti push data16 stos mov pop jg xor in sbb and push pusha in inc stc pop xchg add sbb (bad) imul mov pop adc sbb lock xor call insb ficom cmp sbb shll shll add je cmp movb and dec jae push int3 imul jnp add imul fucomp mov btc mov rcrl pushf adc pop rcr lcall movsl xchg pop inc adc (bad) sti not insl adc fwait push and inc (bad) lock dec add add stos mov insb add sbb addb and adc push fcmovnbe jmp ret out mov cmpsl divb xchg (bad) mov sbb in add mov mov cltd and daa roll imul xor push jle xchg mov jmp clc fldl loop mov add add lods jp xchg dec fwait inc cmp or data16 xor fild adc ds ror sub add mov xchg mov jecxz outsb mov sbb adc movsb sbb inc arpl pop pop pop pop dec dec inc sti lcall mov (bad) fcmovnu adc movsl sahf add adc out sub (bad) or adc das retw pushl loope add add and in mov (bad) pusha push jmp (bad) cld sbb clc cwtl cmp or xchg mov mov imul sbb test xor add and stos dec imul pop sub inc std sbb jb ja (bad) dec rorb and jns mov lret test rep dec xchg and inc adc shrb xor cmp mov loop inc cmp cld mov outsb scas cli ja (bad) or arpl sbb mov popf scas add add push pop jbe aad inc mov stc push shlb rcrb mov mov arpl jecxz cs jbe (bad) sti movb repnz sub (bad) out je pop inc les fyl2xp1 lahf add jmp sbb pop or jb sbb movsl test add ljmp pop inc jg xchg lds and mov scas (bad) adc scas or cs jmp push ljmp lds mov mov lods addl jo (bad) dec loope lret mov shl ret push test push (bad) lret in neg pop jno add add add inc int3 mov sbb jg cmpsb sbb adc cli je and dec or iret mov ficom stc fmuls adc aaa pop popa (bad) lea imul mov in (bad) mov mov out pop xor pop and or push jl out ja mov inc fs das imul test add ds sub and pop clc mov mov faddl jl les lods jp or adc les out js xchg (bad) xor sbb or cltd cs sahf es scas fcmovu out (bad) les xchg xchg insb hlt (bad) cmc fisttp ret iret sbb inc xchg in jp ds (bad) leave sub add inc scas (bad) jecxz push or mov ljmp daa loopne iret fcompl or jb inc sbb fdivr fwait shr xor mov repz mov imul je pop dec fldcw repz arpl sti ja pusha mov (bad) shll (bad) jecxz adc movsb arpl adc jecxz cmp mov mov or mov dec add mov xchg fldt popf lea outsb add fimull mov fisttpl xchg imul mov inc xor sub add pushf mov dec in sti xchg jo jno insb push mov push sub mov addr16 test mov dec xorl pop dec sbb xchg inc imul cmp and dec std ljmp or sub mov and mov or and xchg jl pop dec lods xorb jecxz push sub pop xchg data16 pusha test pusha pop inc test ret mov inc push mov (bad) cmc ljmp andb pop (bad) jmp xor int3 sbb imul sub add add lea (bad) in inc sbb inc bnd imulb jb orl int outsl sub inc xchg dec into sub adc mov shl dec adc mov je xor dec mov je call ds xor out clc add jmp scas stos or aad adc pop add cmp stc mov jo xor pop mov mov ja push push (bad) sti in sub aas imul mov adc lret push in cmpsl sbb mov cmp and or mull or add pop cmp out imul cmpsb add add jg adc cmp adc incl scas inc add sub push lahf outsb in ret clc leave pop popa movsb scas addr16 arpl rolb dec sub repnz fwait popf into dec and out or leave jnp mov (bad) mov xchg mov xor and aas iret mull jecxz ja push and arpl pop mov adc inc je movsb and jbe cwtl popa jo xor in daa push test repz out das in mov sbb (bad) pop mov push cmp imul mov sbb jecxz mov add or into mov adc (bad) pop xchg xor loope pop addr16 jae adc mov add inc gs (bad) mov stc lahf (bad) xor js,pn fisttpl xchg loopne enter mov push and outsb leave jl loopne mov sub or push inc pop mov lcall add add jno pop push push inc and out mov push push lock push cmpsb (bad) push mov lds mov pop mov fcoms and and pop loop cmp inc inc push addr16 fimull sbb aad lods test dec jne sub xchg imul add or pop test cmp repz cmp dec loope mov adc or out and nop insb outsl adc pop andl cmp cmp outsl mov or insb std sbb fsubr xchg mov mov xchg mov sub stos mov in and into cli inc pop adc add add mov test stc out cmp outsl xor cmp xchg (bad) outsl xchg push loop data16 xchg loop cmp repnz int mov cwtl push xor mov sahf xor add stc push jne jo in adc iret pop sub cmp xchg inc pop dec (bad) pop incl add pop sub cmp adc in dec icebp cmpsb jecxz jne mov imul ljmp pop sbb add out jmp cld fidivr jg sbb jno pop push loopne inc xchg out sbb cmp push in inc or mov data16 and (bad) das sbb scas add add xor xchg adc lods sub cmpsl int3 (bad) mov sub loopne lea (bad) cmp fdivl fisttpll add cmpl decb cli insl mov stc mov fnstsw xor pop pushf ljmp add negb adc add add sbb jbe and js mov std xor sarb inc sub xchg jle pop ror rolb sbb pushf jns add jb addr16 pusha test pop (bad) jno mov (bad) sbb push mov jne hlt sbb add andl mov add add cld xor imul movsb sbb dec mov xchg dec pop test pop pop popf sub push xchg dec out xchg lods pop rcl mov push ja scas lea dec adc jle mov aaa cmp mov push in lret fldcw (bad) xor xor mov add add loopne into dec inc std incl and mov push add pop movsl jb sbb xor in or bndldx inc inc in dec inc (bad) sti rcrb cmc mov (bad) cld cmp lret sub lret xor in rcll test mov inc xor in mov and add movsl xchg jge xchg nop cwtl ror aam (bad) jno sub mov push mov jae mov sbb jne push clc sub roll cltd frstor or sbb push push sahf mov mov jmp loopne push push add cmp mov bound fiaddl icebp stos imul add dec sbb pop enter cltd or loopne pop mov jae (bad) xchg std lret inc fcomps add (bad) jg sub sahf mov inc push inc dec das pushf cltd and loopne cmc sub movsl xchg movsb repz inc aad stos pop stos (bad) mov orl mov movsl popf out scas adc jmp add and push or lds cli shl inc xchg ret cmp or pop out ds jbe shll mov fwait jl and dec push push (bad) fbstp cli test (bad) int mov pusha fnstenv inc jb jle,pn and movsb jb sti dec pop xor mov add or int3 rcll stos xchg pop sub out and jae xchg add lea dec es scas jp push test mov in xor and cli sbb pop push addr16 push add in loop sub or sarb adc jbe lret loopne add mov (bad) repnz popf push push lret pop out js push add mov rorb movsb ss pop jbe cmp outsb out add movsl add sbb push jle cmp jecxz cmp pop pop jecxz xchg enter mov test xchg pushf sub pop (bad) movsb jb sti dec pop xor mov mov mov xchg pusha (bad) dec adc into pop push inc imul lock mov push stos sub jns repz lcall xor sbb not sub mov hlt outsl stos lea cwtl cli add add jo cmc mov mov imul (bad) (bad) jb repnz repz loopne mov out cwtl add sbb pop and sahf jl rcrb insb fsubrs ljmp jmp jb dec jne sti add pushf xchg pop outsl add mov push cmp push inc (bad) popa adc cmp inc scas cs add add inc aas inc pop enter pop sub jecxz xor push push jg mov inc push mov or cmp jle out in je xor fdivs jge sbb fdivrp test loopne test scas cli jns test cmp add add add subl mov and push push add in sub orb mov arpl fdivl je test out (bad) mov xchg lods dec or and pop sbb jecxz sub inc sub (bad) mov (bad) call repnz jecxz add jle add hlt xor inc mov in jno aas popf lds pop inc jecxz (bad) or inc mov insl mov (bad) clc ljmp xor movsl test push lahf lds xchg loope mov xor rcrb inc repz or push aaa in pop cmp popa test sbb or add add test xchg mov inc arpl or push movsb jae lcall dec pop mov es pushf adc jo cmc xchg lods adc dec outsb xor lahf jg (bad) jp (bad) jmp push pop lods jl xchg lods imul cmp cld addr16 and mov pop aas jmp popa jb fcoms jne cmp mov movb int in icebp push aaa mov dec pop mov pop add and mov push subb jne mov insb add pusha mov popa xor mov enter or sub mov les adc cld cmp xchg add add mov jnp pop addr16 inc push xchg sbb mov repz stos mov sti ret imul add mov out xchg add jo repnz xchg cwtl ss xor adc mov arpl fcoml je add out ja add insl dec ja mov iret jnp pop out addr16 pop lahf jecxz aam cmp movsb decl and mov dec push xchg loop and mov jle std and mov sbb push mov lret ja jmp fisub jl mov test xchg pop fcomps sub jmp ljmp lahf push add (bad) lgs ds lea push jae mov xchg fs dec mov jnp in daa daa imul les testb lods xchg dec insl leave movsb (bad) fistpl jne xor sbb aaa cmp daa jge adc add lock push pop adc shrb push dec lcall add and (bad) or sub addl (bad) cmp (bad) imulb scas xchg cmp jmp mov shrb fidivr dec vmovlps nop cwtl or cmc scas cltd (bad) adc out clc ja nop jne ss push push subb jne push mov add add push nop jmp ljmp xor mov jo pop push xor popl pusha inc sbb dec cltd outsl mov push add in aaa inc add mov icebp out loope lahf ret adc mov xchg call sub jp out fildl add push js pop dec sete mov pushf outsl sti popa xor xchg mov xchg add pop insb xor lcall shlb and mov in mov (bad) call sarl daa rol cmp repnz test mov popf lea imul sub add add in popa dec dec sbb or cmp (bad) in dec call xlat sub jmp ljmp xor mov jo push sub or xor cmp xchg inc sub xchg scas xchg enter lock or fstpt popl add ret jmp repnz mov jecxz bound push fistpl cwtl dec xchg fwait hlt stos adc sbb push sub ljmp or out mov add dec mov aad sahf pop mov insl outsl jg test cli jmp cmp ret int or imul or add es notl gs push mov mov jle push mov into (bad) (bad) hlt out adc jmp enter push jb lods int3 add (bad) cmp jp or addl or sbb (bad) mov data16 add mov icebp pushf push and jne es int insb rcl jle ljmp clc xchg enter pop push xchg pop jae ficompl test sbb movsl loop or mov ret xchg enter jmp or test mov jb cmp ret sbb mov js fstl add pushl mov inc add sub dec cmp enter jg nop in ds and out cmp cmp inc into cmp subl xchg jnp xlat inc (bad) mov popf clc pop mov jp or daa dec rolb dec adc add jg push repz cmp xor je xor stc ljmp loopne mov lcall xor mov jl fcompl push stos sbb sbb push inc stc xchg mov (bad) in and inc (bad) (bad) lcall and sbb sub in outsl cmp jmp pop lret test out je call das imul cmp cmc add xchg jge sub test test mov inc (bad) sbb jno int3 popf mov dec mov push leave mov (bad) nop sbb add cmp xchg and inc movsb pop loopne fwait cmpsl cld cs mov adc int jmp lret xor dec leave sbb in popf addr16 gs pop popa push sub dec xchg cmp es imul adc dec bound je and xchg aad adc push popa and add sbb pop pop bound mov mov inc dec jo jecxz mov push repnz jns fwait or outsl sbb shll js outsl push lods imul lea dec inc mov cmp dec loope clc leave mov in pop shll jb addl jo adc decb mov add sarb out into pusha icebp mov lahf jmp test ret cmpsl dec leave pop xlat stc jge jl lret inc mov lds repnz js xlat mov push inc push gs sub popa pop adc pop inc loope outsl mov in push movsb push inc xor scas dec pop or push cmpsb pop xchg add pop shrb (bad) fildl repz rcl (bad) adc aaa push inc dec or ja dec pushf insb xor popf sarb mov jo xchg arpl das mov cwtl mov pop icebp mov out (bad) fucomip (bad) cmp sub cmp dec fisubr dec fldl add cld imul (bad) bswap and adc cli adc arpl and fnstcw add fsts mov jnp mov fidivr mov (bad) xor or xor lret lret cmp nop negb lds stos or add push cmpsb sub pop insl stc loop sahf lret shrb add sub pop repz xchg sbb jnp sar cmp push outsl sti adc shlb les jecxz xchg push lahf loopew rorb jge,pn mov popf mov fs pop or aam add iret push add add cmp pop sbb add cli clc stc dec dec xchg cli cmc pop jl sub add sub test and mov adc cli inc rclb cmovs ret xor inc pusha loope mov xchg lcall jmp sub jb add lods (bad) or dec test into shl int cmp cltd mov mov jmp pop add es leave and push xchg in jnp shrb movsb imul dec inc xchg rcr jns push lods mov es pop in jmp add adcb sbbl icebp aas and loop add add add xchg loope cmp xor inc mov dec (bad) iret imul jae loopne into add (bad) fbstp (bad) dec inc addl jg jle add push or sub lds insl int fnstcw push std adc insb pusha mov sub int3 ljmp add mov fisub lahf cmp jns shlb jae bnd decl jae cmpsl cmp xchg lahf mov and out ss jg push sbb fdivrl ljmp (bad) into hlt pop out adc jmp div (bad) stos pop push pop icebp push cmp hlt or imul add add add (bad) xor push dec lcall cmp (bad) fidivrl sti rorl (bad) mov pusha mov movsl movsl loop (bad) lret out (bad) je ficomp sub (bad) lret (bad) or cltd mov out fisubrl cmpb js pop or stc cmp xchg fldl add mov call leave mov pusha loope mov xchg jne mov pop test ds jnp add cmc ljmp push enter sarb or push out or push ror out popl and mov inc xor xchg lret xchg mov add xchg cli fimull mov gs call mov fbstp outsb push das addr16 jae inc mov ds pop mov jb lods jae addr16 cmpsb mov adc jmp sub fmuls hlt add scas (bad) stc insb mov mov popf mov ja add add add add mov fistpll adc insl pop adc or popa rclb negb cmc int3 cmp add mov (bad) and inc sahf fsub sbb jmp sub add push test repz ret les xor inc xlat mov jnp xor ror out add add mov addr16 cwtl jp out loop or xor jo add pushf lea cmp inc imul sub aas outsb adc addr16 jae inc mov aas sub dec add jo iret js pop out addr16 loopne mov out outsl inc ds sub add add lahf mov xchg pop rol add xor push out call mov inc mov leave jg push mov outsl mov out mov mov loope sbb fisubrl dec pop outsl pusha pop jns clc leave sbb rcr (bad) stos insb cmp pop dec lock cmc or fsubl xchg dec mov xchg or inc jmp cs inc mov sub sbb sbb pushf pop paddq or xchg arpl dec adc xchg add xchg xlat (bad) repz call mov mov jge mov cmp popf nop pop ljmp cmp scas mov ss add adc pop dec mov lret push mov cmp imul test sar (bad) inc push ret loop shr jg mov insb in mov push mov push xor adc cli dec ret jno es mov jbe (bad) cmpsb sub sbb pop ljmp (bad) jno or xor add add add (bad) dec pop adc dec lea mov lahf and movsl push or mov test mov cwtl mov outsb std cld leave xlat jno push xchg into outsl shld add popa push (bad) fs mov jle push xchg fimul or fs pushf outsl sti add mov inc dec adc add add sbb (bad) adc jnp stos jnp stos js cli pusha imul add dec push fcoms adc popa xlat jg movsl sar lahf scas dec xor xchg cmp dec mov fdivl adc inc push loop js jle push fcmovnu inc xchg mov push hlt push fcmovb lcall xor fldl add jo pop dec pop test add or sub mov into (bad) sbb outsb fcmovnb imul out pop mov icebp mov xlat mov sub repz sub mov fidivrl jg aam call imull pop ja scas enter lock mov mov sub xchg jp jo out popa adc jecxz inc push push sub push cmp push sub lods adc es sti mov insb (bad) imul out je pop outsb xchg mov std imul ret add push push insb hlt cmc push clc mov sahf outsb stos sbb cwtl jg adc test mov push cwtl xchg cld xor sbb jecxz out stos xor or test sahf out scas int sbb outsb (bad) movsb or push (bad) dec rolb jp mov ds std or cltd sbb and aaa jecxz scas out aaa sarl mov jmp lock add std dec negb jae leave and arpl jne (bad) call lcall and mov sbb adc inc jl and iret nop imul daa cli js jp mov fldcw cmp cmp dec pop fisubr pop shll popa xlat das imul xor push inc mov test stos mov add add add add cli fsts add sbb rolb mov out cld dec cmc adc mov lahf jne mov add push sbb inc rcll push (bad) test out inc add or shrb inc in cmc xor jmp xchg hlt mov pop lock stc rclb push jle imul lock mov lods outsl repnz jge ficom es cld sub rorl rcll ja sub in fisttpl dec pop adc (bad) loop (bad) pop js sub out imul add out (bad) pop and cwtl add mov pop lahf in push jecxz xor adc xor mov int xor inc mov scas add dec cltd gs adc xor clc sarb dec mov es dec rcrb xor fdivrs pusha or cmp push roll sbb jg iret stos mov cmp mov dec add add push cmp inc adc pop scas jg and xor dec (bad) aas cmpsl mov and and sbbb inc push movsb jnp cli sti pop jg inc jbe inc push rol jo jle arpl es xchg mov jne xchg jno mov or stc push adc push sub add call mov in xor (bad) popa (bad) xchg xor cmp inc mov ljmp push jl cltd push sub (bad) ss jl ja (bad) sub cmpsb out fmul imul mov adc outsl mov int3 jnp rorb in push ds insb in dec test jns push fwait jg cmpsl arpl addr16 push sub popa loope jge push iret insl xchg xchg jmp mov or sub inc aad jb push jge pusha jecxz inc ljmp push fisttpll scas fsubs aas and pusha roll loope cwtl dec pop fdivr xor jge xorl in dec lahf push stos mov add js and fistl and in (bad) pop in mov sub arpl inc fimul arpl in lahf dec sub push int (bad) dec outsb or dec (bad) adcl add call mov pop xchg shrl or out or (bad) mov mov mov mov add add pop pop dec xchg fldl jp pop mulb das js outsl fstl jl cmp (bad) mov adc jg (bad) xor es mov pop aad mov or xchg add cs add outsb int3 (bad) aad xchg adc les push mov sbb add ja mov out dec in rcr js pop fcmovnbe lods add push test and add fwait xchg pushf pop jg sub mov xchg mov test sahf (bad) ds mov iret mov fistpll mov sti mov ljmp or mov idivl loopne int inc mov repz add cmp insb add or dec xchg jle pop enter push ror cmp shlb lds mov iret popa cwtl jle inc sahf xlat int3 int3 mov or or jae push in mov ss pop add iret mov (bad) lret cmpsl jo push test jecxz xchg lahf push imul add ror (bad) fistp jmp aam cmpsl sahf imulb es sbb xor add ret cltd cmp stc das xchg mov xor mov sub cmpl adc push add stos fisubrl mov fbld cwtl and popf cmp je lahf lods fdivrs add or adc cmp je jg pop xchg mov aaa xor xorl inc dec mov adc sbb scas sbb lret or in sub loopne fs pop fs loop repz movsl pop shlb sub push push dec rolb cltd xchg cmp test js add add ret pop lods xor mov lods lcall inc popa lret loop xor outsl scas stos jno adc inc (bad) negl cmp adc dec mov aad mov sahf gs cwtl mov add jl pusha mov lret popf xor pop (bad) insb in sub std mov add inc push idivb insb push sub dec mov cmpsb cs inc mov test ret and pop clc mov test addr16 cmpsl out pop lds mov je and push sbb inc cmc push clc and shr fs pop mov test mov repnz movsl loop xor or andl int add aas mov (bad) ljmp lret pop inc xlat sub aaa add adc dec xchg cmp sub imul mov aas add pop lret jge adc lcall push jne pop jo sbb xchg les icebp adc mov in cmp in out imul aas cmp std jns lahf xchg fs xor movsb sub jge dec or dec jns push jmp xchg cli ror cmp dec stos mov xchg mov push enter call xchg dec std dec add cmp mov fcompl daa and add fs movsl int roll cmpsb jns or es (bad) (bad) xchg movsl or (bad) cld fistpl ja sub scas je or xor fcompl ja inc sbb sub repz sub adc xchg mov xor push sbb xor test adc inc or pop psllq daa cmp sub in imul xor push scas popf sub push loopne xor mov out cmp mov and inc sahf scas popa jg xlat das imul mov test xchg cmp jmp std jns lock xchg (bad) popa jmp lahf sti stos jmp lods les and sub pop repnz add fisubrl and aas fs lret fidiv and into rclb mov fcompl in fldcw mov outsl add sub fistp inc loop jmp es std add adc xor imul sbb or adc into dec sbb iret repnz mov idivl jo xchg jp pop cwtl sbb and (bad) movsl js je dec repnz and jb or lahf mov adc js stos jl or cltd push pop je aad lds dec (bad) mov mov xchg cmpsb aam and mov addb xorb jne mov js mov xchg cld les dec fisubl orl add xchg ds pop and push xor repnz hlt pusha xchg cli sbb iret (bad) iret push push add imul arpl lds int add clc pop cmpsb fwait sub inc loop adc dec xchg movsl fldcw sar fdivp imul nopl fcompl aad cmpsl fldln2 sahf orl fisub cwtl insb xor mov mov fiaddl jo add jnp sti js js mov psraw adc arpl push out je fstpt lcall outsb out xchg cli dec inc pop std imul mov aam xchg mov outsl xor icebp les mov das xchg cmp cmovns aad mov ret aam pop test inc jns loope shlb add pop pop adc fldl nop mov mov xchg mov ja adc mov fidivl loop xchg enter sbb loope into mov imul pushf pop xchg repnz ret subb ficom mov js (bad) jge test jecxz sbb add dec xchg jmp (bad) cli dec lcall cmp fstl xchg adc mov xlat jmp daa cmp nop and (bad) orl stc pushl xor hlt test (bad) xor inc pop jle or ds (bad) into jle adc xor out iret and jo sbb lods les mov aaa popf jg jbe xchg aad cmp cld pop jns dec in or mov lret sbb mov sub mov sub jbe scas repz mov lcall std push add sub push mov add pop (bad) xor push jb cwtl addr16 xor in cltd (bad) jp (bad) addr16 lret fimul movsb iret (bad) or cmp pop dec paddsw jg or push aaa lret jmp daa push jb jne push xchg cld faddp out mov mov jbe mov stos inc mov pop scas cmp cmc mov in js add (bad) rcl mov xor scas sub mov cmc xchg xor fdiv scas dec test dec pop push mov or push and into (bad) adc ljmp jae mov cmp or aas mov mov jne or adc inc pop mov popa sub or jae cmpsb xchg dec add add pop out adc out fcomip fwait and inc sti (bad) jl mov data16 movsl lods (bad) mov pusha nop push add scas and and xchg pop (bad) xlat test jo xor insl ja mov rcrl insl (bad) xchg and das jbe sub or inc outsb arpl outsl gs mov vmovdqa add stos mov sbbl adc jns test cmc inc xchg cltd xor cmp arpl mov movsl jns ljmp popf sub in cwtl mov lret pop pop test pop push test hlt or jae push push sbb dec and inc mov (bad) (bad) lret sub add data16 mov test xchg icebp jno inc xor leave enter jl jnp xchg sahf repz sahf lcall xor leave add aam insb stos fild cs test test or mov push cli mov rcll ret rorb sub ljmp add add dec out xlat mov pusha push lahf mov pmulhw roll aas movl shrl (bad) bound cmpsb cld lods or ja cmp sbb jne and sbb mov aaa pop ret mov test cltd cs adc mov xor add sbb (bad) test or dec mov icebp in daa adc aad sub adcl fstp out scas stos lods repz scas xor orl sbb inc std jecxz xor fstl stc add adc xor (bad) stc rcr mov out jmp jp add add jo or lahf xchg mov pusha imul mov xor fsubs movsb std in push pusha fcompl cmpsb push mov cli pop mov (bad) sar push hlt sbb test pop mov (bad) popf push shll cmp cld imul mov (bad) or out xchg out cmp imul dec add inc sbb ja fnstsw lock push jbe jo cmpsb pop mov jb cli leave sub and sbb adc xchg mov or xchg test icebp hlt leave int3 inc jnp jmp enter dec cld inc xor enter fadds push xchg pop aaa and push add in stc shrl add out xor pop jb and call (bad) sti aad je pop xchg stos addl dec (bad) sub sahf (bad) dec push mov and inc stos mov add mov jbe hlt xchg pushfw outsl outsl or push mov pushf (bad) hlt adc mov mov add add add jmp repnz out clc pause mov jo fwait sbbl jmp add int3 (bad) dec (bad) leave mov push jns subl rorl push into adc cmp aaa aam fnstenv push mov or outsb (bad) std jae std repnz out (bad) add add pushf xchg dec mov fisttpl xchg fstpl add fdivl push negl sahf outsl (bad) mov and (bad) incl sub xchg sti mov mov js cmp adc sub rcr fs xor push or jae inc les mov inc mov cmc push faddl add inc dec aad sbb pop fnsave jno or test (bad) je mov sbb mov sbb shr mov xlat or sbb repz je inc ret add lds mov test ja into dec and or xor add icebp out mov out movsb mov movsl jle sbb imul mov inc xor inc sbb inc push pop ja xchg pop pop not aas jno push stc leave inc out xor insl test and mov outsb inc and mov ret imul xchg mov mov stc cs out je fldenv int imul lcall xor push mov mov xchg (bad) dec and cli cmp adc ja ljmp inc sub xchg mov add mov icebp leave lahf xchg xor les hlt mov add sub jno ds sub je push xorl lret push push dec pop jl adc pop and aam xchg js cmpsl negb push adc xchg cmp jnp sbb leave stc out fistp pop aaa (bad) (bad) sbb dec push sbb sahf mov fdivl scas adc dec pusha jmp daa inc mov push idivb push jns xchg dec sbb add dec cmp push cmpsb popa or mov xlat inc outsl mov add xchg jecxz jb stos mov xchg loopne push stos xchg hlt sbb inc adc in int or stos xlat pop fs cmpsl mov aas mov dec mov mov xchg xor icebp fdivl dec xor xchg add add cmpsl pop push es sub cmp test movsb out inc fcomp icebp mov insl pop jo lret sub pushf insl push xchg cmp push add mov stos adc iret test fdivs out mov aam add push stc fiadd (bad) int ret js fildll jl add push cmp push adc in outsl outsl jl push push mov cmpsl loopne inc cmp dec push call mov pop mov fisub popa push dec in cmp mov add insb sbb pop and insb loop xor xlat mov jne in xor (bad) sub xor push jp outsl sbb add dec in push cmp sbb xchg mov inc repz es mov mov mov add inc cmp push loopne stc js mov cltd addr16 int repnz outsb in and aad sarl cmc (bad) (bad) in mov out adc mov aaa (bad) iret (bad) incl add in rclb sbb xor mov ss outsb int3 in fwait stos and stos sbb into cmp jecxz loop subl push and xor and xchg nop cld repz mov loope cmp push mov out lods xor (bad) (bad) cmp add add jne sti movsl notl rorb pusha dec fisubl test inc movsb pusha push inc aas inc rcrb iret or xor pop aad mov lods icebp scas into xor mov inc xchg cltd popa popf pop lods dec repz mov iret pop mov test hlt mov cmovno aad mov xchg mov imul add adcl ja movsl push (bad) loopne fdivl xchg mov cmp cwtl xchg mov mov je jge (bad) outsl out add es mov ret popa cmp (bad) xlat cmp pop daa cltd cmp test fdivrs mov dec push lods xchg inc jne inc (bad) or out mov jge push or jp clc lds xor (bad) in std adc iret cmp nop sbb in lcall xor sub pop jl inc xor std mov xor pop int3 out lock add bound sbb adc dec les jge insl mov ds mov fsubrs sbb xchg fstpl pop cmpsb or pushl inc (bad) (bad) sbb adc js jnp lock dec sbb xchg jl lahf movsb cmp cmp push push xor out inc lret out (bad) jmp outsl imul xchg and sub cmp and pop xor movsb in outsl or popf aas xchg mov popa fprem mov dec push fs insl lret xchg mov sub pop pop test fs repnz and repnz add pop add (bad) (bad) clc inc paddd xchg arpl mov sahf xlat mov sub pop daa push jl lods jmp ret repz mov js test sbb sbb inc sahf jl ficomp push or xchg jle addr16 cmpsb loope cmp xor jp add pop fwait imul sbb push out inc pop scas xchg dec (bad) cmp sub fidiv fisub cld xchg movsl lret loopne sub mov xchg out aad mov loope mov ja in xchg in jl mov xchg inc test (bad) jno or jp mov cli jne out loope mov add sub xchg scas sbb inc mov push js es dec rolb xchg cmp nop or js aaa lret in inc outsl cmp mov sahf mov ljmp rorb ret test into jae adcl jb test dec (bad) adc xor lods mov add aam push jb into mov add cmp or push aas sbb popf pop sbb or push insl call mov push jl mov mov cmp popa mov add push stc sub jnp pop rolb xor sbb aad aas (bad) mov xorl sti pop pushl lret insl lret test jl into je sbb enter fs or lret xor or xchg add popl leave in lret mov inc mov loop popf in inc mov xchg jl cmp xor jns and add or add add mov jecxz xor nop popa fdivl (bad) es stc mov icebp fwait subb in add push mov push push add add out (bad) mov call sub sbb imul dec xor adc es dec int aad mov loope add add jns in xchg nop aaa (bad) mov mov (bad) push dec lds cs lret inc sub ja rolb push pushl lea cltd dec mov push addr16 fild inc lods mov dec add nop test sbb and and add jo loop pushf mov insl dec es or dec cltd dec insl shrb mov jae xor pop pushf adc addr16 fistp inc adc pop bound lret sbb je (bad) xchg xor inc and sti aas pop stos push imul sub into xor add (bad) jge xlat lods scas cmp jne xchg mov push stos test or mov (bad) fisub push mov (bad) data16 mov mov (bad) mov rorl mov xor dec out test movsl xor les mov fildl inc cs cltd je bnd and mov mov js gs xor aaa and (bad) cltd or jl sbb cmp dec add pop fwait mov or and (bad) icebp rcrl pop push xchg sub js aad pop gs add jl and xor popf shlb mov incl add sti dec insl sub insb add iret inc add in loope xor mov aad lds mov mov rorl mov push scas fsubp mov repnz call jp jle push xlat sub rclb pop inc mov push jae aam outsb out xchg push xchg cmpsl mov enter add pop pop movsl insl cmpsl inc add mov mov jns leave stos inc push dec mov dec inc mov xchg ret xor (bad) out xchg or xchg mov cli pop icebp sbb mov adc sub mov ficoml shrb push stc adc add mov das js fiaddl das jl jno fwait mov lods lods mov test push add rcrb cs sub xor cmpsb pusha xlat lods scas and mov inc push jmp mov jbe hlt je xchg insb outsl xor lcall testl add inc push (bad) jmp push sub (bad) xor loopne xchg inc pop test in dec repnz dec frstor movsb mov test shrl jns mov movsl ljmp sub pop imul addr16 sub pop in sub icebp (bad) push mov shrb or and add jl rcrl pop mov inc push add push and push cmpb popa sbb lods fdivrl xor push mov sbb loopne adc add sub cmpsb fistl into ss pop sub and movsb push xchg cltd pop cmp mov push jae mov rolb test (bad) pop jle adc push mov fsubs aad test hlt xchg jmp ds xchg mov pop pop test lcall sti js fwait es rolb (bad) popa cmp (bad) xor mov adc int3 cld mov lcall add adc add add or sti or cmp dec xchg inc ljmp and adc xor das (bad) pop fistpll ficom xor cltd nop add jl pusha mov fstpl sub stos js clc pusha imul rcrb cwtl out adc mov add jae (bad) jno pop test pop mov std int ret lock cmp jmp shll fisub mov iret add jg cmp mov jo inc aas inc and cmpsb push push leave sbbl ret es lods test mov or in test fildll fstpl repnz mov insb popf stos lret addr16 xchg xor loop push or les push push push push add mov dec mov cli rcrl xchg (bad) shll mov xchg push push daa enter cwtl outsl icebp dec in aad mov pop xor fildl add das push add lcall mov add mov inc (bad) sub hlt sti or xor push jecxz (bad) repz fs add xchg jns lods cld xchg nop cwtl add test fs stc push int sbb jbe test or mov pop outsb outsl adc add add lods jb adcl lcall sbb jno or es (bad) cld mov aam popa mov or cmp push push stos push jne dec insl mov (bad) sub push push and and ficomp push inc push call ror push pop push xor leave jge add scas xor xchg pop xor enter (bad) pop xchg xchg cmp aam pop cmp cltd cmp andl cmpsb ret xor insb add pop repz jecxz aam out pop lret jle mov je or ja jmp xchg jo js add outsl mov insl mov pusha jg sbb imul dec pop add (bad) cmp hlt xor jno stc push sbb orl (bad) call vminps push xor pop (bad) in mov xchg dec adc jp xor pop lret scas jne cmc lret add loop add push sbb add cmpsl sahf outsl xchg jo in es xor dec (bad) xchg mov sub cmp into fldcw js pop lahf xchg mov enter add sub cmp adc and mov (bad) jno inc dec jmp dec std pop sub clc mov call addl add mov xchg pop pop mov dec scas sub push loope cmc xchg jmp xchg xchg fisub bnd or out icebp and sbb outsl sub add inc sub mov call lock inc or xchg leave push fwait jecxz aaa in stos cli pop add repz mov shrb fcomps inc xor pop call adc mov sbb pushf inc mov jo mov push frstor test ret jecxz xchg xor (bad) repnz sub jno inc sbb xchg mov add cmp inc xor ljmp mov pop cmp jo add push jns (bad) ja hlt dec mov cmpb js cmpsl rolb fcmovu pop (bad) mov lods insl call outsl cmp mov or mov and dec jae sub test lea shl aaa push push das je popa lea add add lods test ljmp je sbb rclb sub jae xor loope bound pop adc ret stc rol js mov mov imul cmpsb mov sbb das insl pop push ret (bad) sti dec sbb adc push push add add add aam sub mov mov jno nop out std sub add nop push mov out add pop dec add lahf je movl sbb outsl mov loopne push clc sub rcl fs pop lods sbb jmp pslld movsl int push mov lds mov jns leave xchg dec and sbb sub xlat pop sub xor repz sub mov mov lock jbe adc sub je jne cld mov mov or push xorl xor jno ret std pop jno add jnp sub aas inc dec into mov lahf pop call in clc add push sub jp cltd cmp mov imul mov cmpsb ret xor cld push clc or data16 orl leave rcrl push fcmovnb js mov xchg jg cmp mov (bad) in in jge (bad) pop add loop or mov call test or xchg inc mov clc add decl sahf and fs icebp xchg sbb xor lcall mov out xor sbb data16 inc pop divl fcomps pushf push adc push pop cltd cmp jo push sub jge notb imull adc mov daa and divl lcall xor xchg cmp dec or mov or ss mov xor rcr mov mov pop jge (bad) jbe jg rcl arpl mov je or add shl xor (bad) lret jmp mov push xorb int3 in and stos gs jno lods pop jle in and push xorb ret lea cli or test dec adc sub lds push xchg leave sub scas and fmul sub add mov dec inc xor xchg int stos xchg adc mov fistpl bound aas jnp les stos jmp push loope repz sbb xchg jmp sub mov xchg jbe ret (bad) push push xor dec (bad) scas call shlb adc out lock and outsb clc ss mov cld add add xor inc xchg cmpsl xorb or mov pop stc rcr xor out idivl pop jno je dec test rcll nop sub icebp push stos cmp jbe dec rolb and inc scas push js cltd ret push push (bad) pop clc inc adc in pushw aad roll add mov leave push test iret in cmpsb ret ds std sub sub int outsl sbb mov int3 arpl pop rol push mov in or or cmpsl mov jg les adc push push inc dec push sub mov icebp inc outsb sbb repnz push pop sahf fild dec and lods inc movsl fadds mov cmp shrb sub fcomip inc lahf sti cli jmp lds ret je (bad) adc scas fidiv int stc outsb inc aas push (bad) xchg mov and and pop cmpsl pop sbb dec jne push xor std enter cmpb add add xor icebp pop scas push pop dec adc aaa push xchg iret (bad) adc jmp push add or sbb mov (bad) fsubl sahf cwtl jecxz jns mov push cwtl dec pop jae adc (bad) push lret xchg mov test inc outsl scas adc add aaa push es sti ret stos lods adc fisubrl lods dec mov insb sub and in and inc clc cmp sti in mov push xor test fisubr (bad) mov popa inc cmc sbb cld push fs or es js,pn dec adc xchg les sbbb sub push fwait arpl cmp mov and mov loopne adc jecxz les aad fcomip cmpsb push icebp out pop scas add xchg push clc adc icebp imul out iret push clc pop adc lret mov ljmp pop stc rol js mov mov add sahf imul dec fcoms xchg pop cmp mov (bad) sti clc sbb imul aam cmpsl or mov pop cmpsb mov push hlt pop mov dec mov xchg cltd pop es push mov mov cmp inc cmpsb or not in cmpsl adc adc or aad std repnz add jns out sub lret in cmp xor inc popf adc in lcall pop dec cmpsb mov inc imul fbld xor in gs orb pop mov push cmp mov lret shlb xchg flds sub (bad) iret mov sbb pusha stc cmp mov mov repnz cltd stc add jl pusha cld dec les fcompl push in sub std mov xor dec xchg xor data16 adc pop and pusha xchg test cli pop jae loope clc dec xchg stos lock push sub mov push lret not inc sarb xchg mov cmc daa movsl test movsl in mov fnop nop rol push inc aaa into repnz push repz iret or mov jo adcb insl sarl ret out mov icebp pop int fstpt jo out xlat test mov incb mov and sti lods in or dec adc adc and or sub decl add xchg jp (bad) push xor popa nop pop pusha cltd fsub lods ds xchg xor xor push (bad) adc or clc rcrl icebp inc mov and mov push add add xchg pop mov and flds out imul mov test dec cmp ret xor (bad) in stc int3 jle ss addr16 adc mov fsubrl jne fisub rclb rorl insl mov fwait imul scas mov add add enter aaa in push sbb jno sub pop lret fsubrs sub pop sbb cmp aam mov inc xor cwtl lret fildl (bad) aad ror sbb and (bad) call int3 mov or push cmpsl pop adcl ret pop mov ret add add add add dec jge rcll push stc jge xchg jmp movb rolb insb std aaa scas andb movsl dec xchg jecxz test addr16 and sub dec stos cmp adc arpl jecxz arpl les sbb sahf ja gs repnz pop jmp std mov jl (bad) cmp lea jnp cli mov mov (bad) leave dec gs xchg into lods test or pop sub push push jns or inc fistl in rolb jno ficompl fistp push mov mov xchg jbe pop cltd ss push push add add inc dec push das retw (bad) movsl push fcmove roll push adc mov pusha outsb pop jl xchg sub out je push cmpsl push or arpl and in lret cmpsb ret xor jb loop dec rcrb icebp (bad) out (bad) mov jno les and jg out xor fidivl sbb cmc sbb add add les push mov fsubrl gs bnd add xor subl clc add pushf dec mov in sbb mov das popa mov add adc and rcrl daa cli lock sub out mov mov lods negb jecxz add fwait push in fidiv adc push sub sub subl jge push mov push mov pop (bad) pop out out daa cmp pop hlt xor ret daa xor xor dec add xchg andl add mov pusha dec push push adc push arpl pop xor add add add lods movsb push cmc aad xor repz data16 sbb ret jns (bad) outsl pop adc and dec inc loope lret je cli repz inc pop aam jl inc xchg loopne push dec pop push inc sbb mov aad jno in mov cmp push push cmc mov add stos push lcall adc adc xchg xchg xor lea xlat dec lcall jbe pop cld mov jno mov es imul cmc push sub mov sub repz jnp arpl pop xor pop xchg jb lods hlt mov lods pop inc ficompl pusha jne cwtl ljmp push movsb clc fcmovnbe nop mov mov (bad) jle sbb mov or ss pop ficompl inc enter lret push std inc mov in lret add icebp mov test mov pushf xor push cli lret aam mov add adc adc push test (bad) lock push sbb cmp nop mov and mov xor sbb and pop jb lret adc sti rclb shrl (bad) mov (bad) sub aad mov cmp xchg and (bad) mov mov je,pn test xor jmp lea dec std adc push or xchg mov jmp outsl jmp inc enter in push lahf lret js adc mov mov subl mov es inc pop test xchg xor sub (bad) mov add dec (bad) dec std (bad) xor int3 inc insl adc mov data16 sarb mov and and rol mov inc pop dec out sbb mov push and (bad) sti mov jns push clc stc push lods mov popf addr16 mov xlat call sbb loop add add es mov and mov sbb repz movsb jns das mov fdivs xchg iret fisttpl movsb dec xor pushf test add mov rcll sbb aad (bad) fiadd sti dec pop inc scas int3 popf mov push daa (bad) sub lea or out int add or xor cmpsl gs xchg sahf and jns cmp bound test mov popf ljmp sub sbb sbb mov leave push cmc or stc jns jns inc sbb jne adc addr16 jle mov mov mov add jmp int adc lds sub pushf in iret popf test cmpsb mov mov sar imul push lahf jge xchg aaa bound pop xchg xchg dec sub aam xor shl mov push cmp jbe (bad) es imul arpl ds mov add mov pop mov (bad) mov data16 add test jl movsb jp mov pushf scas clc orl jl popf adc push pop lret insb cmp jmp push faddl push adc cmp mov mov out out sbb out (bad) ja je imul out movsl lahf push in aam insb cs je ficom stos cmp mov jae pop mov movsb in xor sub inc dec add sub sahf test add fidivrl add test aad mov cmpsl add pop lahf mov adc jle pop ret jns fsubrs add add mov out je int3 lea xchg ret dec ljmp lock (bad) rorl xchg mov cmp xor inc push inc xchg or sub hlt imul dec roll hlt cmp pop pop lret mov lea (bad) bound dec add pusha xchg insl xor ds call lds cltd jmp fcomp mov lcall push sub sahf test (bad) jp adc rcrl (bad) hlt jg scas xor push adc lock mov cmp mov (bad) cmc sub xchg add add jo imul xchg testb jae test push adcl les popf cmc call imulb mov outsb sbb arpl out sbb stos jl stos pop jecxz mov mov xchg and rolb je ss inc cmp mov add jmp inc scas jmp dec cmp add jno (bad) in aaa push jp and cmp sbb (bad) repnz into js mov shrl int3 or inc rcl call push jg add fidivr mov mov shrl inc cmp mov add imul lods cmp adc jo dec jg push xchg out rclb outsb mov jno mov xchg sbb inc and in fimul ja in mov stc idivl pop push jmp adc aas cmp jb lods outsl mov (bad) repz mov out cmc adc paddsw pop add xchg icebp iret gs rcll adc lahf pusha pop xchg or pop loopne or inc inc imul dec lods dec (bad) and xlat icebp push sub mov jle or movq sbb inc and ret or mov xchg inc test movlps add add gs sub mov jp mov outsl xchg nop mov imul xchg je loope les push jmp sbb push add adc and in xor mov sbb xchg fwait xor cmp mov lods sbb mov mov sub jmp xor cmp mov sbb push sbb cli testl sub xchg or test dec xchg pushl mov jae push xchg test sbb fnstcw lahf loopne pop bnd cmp add add pop xchg push (bad) adc into xor jge in xor adcl inc test cwtl test (bad) cmpsl mov and lcall sti mov cmp shrb (bad) push scas jecxz xchg mov arpl ss fildl mov add add add scas loop inc iret (bad) sbb out sub sbb shlb add jne ret sub or mov pop leave imul xchg mov xor xor cmp lret mov inc dec pop jae out xor aas movsl popa out pop out cmpl add movsb jle pop leave lds mov aaa mov xor lahf pop scas dec or mov inc push (bad) hlt (bad) jae cmp lods pop mov insb push movsb mov addr16 out push sti inc scas stos clc cmp imul shrb and (bad) pop cmpb xlat scas adc push scas push mov cmp mov insb mov xchg jl xchg xchg cwtl jg or bound in or out dec xor push sbbb sbb int3 into test mov cmp inc addr16 mov push and jo fs jb mov push (bad) popf xor add iret push sbb sub add leave lods test (bad) pushf test outsb dec es testl or push xchg sub lock push shlb fisubrl mov scas jo mov cld xchg sbb inc fnstsw loop hlt movsl bound imul lods adc mov pushf mov jge cmp mov jb sub mov add jecxz lds cmp push clc xlat mov stc jl adc pusha or pop xor jb (bad) inc (bad) inc cs mov xor out sub mov jecxz std cs pop cmc xor pop push push pop repz stc mov mov scas int cli inc rcrl and mov fisttpll movsl mov mov loopne jmp into mov inc adc and and push insl and rorb jnp adc movsb loopne or inc pop repz sahf add rcll xlat xchg pop push jbe lods adc adc xchg sub xor push mov add add xor shll (bad) sti dec sbb jb lahf mov pop sarb add in insb push shrl pop mov aas cld call push cli test (bad) sub cli xchg das or nop in (bad) aaa test in test les xor in jle jmp add fst out cmc adc loope pop push mov (bad) lods icebp xor xchg mov jge mov xor repz ret inc mov cmp mov xchg int pop dec fcomps lea mov dec sbb jmp dec scas mov (bad) pop loope jmp (bad) dec cwtl cmp or add pop fild mov or pushf outsb xchg lret jno fwait stos movsl jns xchg inc jg sbb lcall ss (bad) dec fidiv jmp imul insb cmp dec shlb fisubl movsb fldt test cli jecxz loopne adc xchg cld or add insb ds push and add add jmp xor rcrb jle mov std and rclb ljmp adc (bad) sbb movsl icebp lea adc jne pop add addr16 sbb and outsb cmp lret fbstp outsl pop sub mov pop test push add cs incb idivb lds or push jp pop mov pop mov mov shll xchg mov cwtl lea daa data16 sub push aad sbb sbb addr16 add icebp lret insl mov mov andl movsb push ret dec mov out add add test mov xchg sbbl movsl dec add insb outsb or clc inc lock jp cld popf (bad) dec xchg ja xor (bad) in in jge xor fdivrs rcll (bad) dec stos xor push adc push adc mov cli lods insl mov adcl push ret dec and sbb jae add sbb push jp outsl inc loope lret fsubrs out orl pushf pop mov inc out fcompl scas push mov add pop aad pushf sbb ret sti gs sbb mov push add add or mov ficoml mov mov fs pop add stc mov xchg mov push scas push jo xchg cld jecxz loopne xchg dec stos mov adc add mov jns sbb push outsl aaa push (bad) imul rcll mov jmp movlps mov imul push ror popf sbb jg dec imull mov mov mov add enter push pop (bad) scas lods add arpl jae inc adc fistpl fist test out pop movsl stos cli xchg repz addr16 arpl dec and iret (bad) stc aad jmp mov stc or pop arpl inc sti sub aaa xchg xor add in sub push push ficoml push jmp inc jg subb addr16 dec mov out cmp or enter xor fsub add push sbb jmp repnz xchg imul cmp push (bad) push mov jl lods cltd pop xchg mov mov add add rcll dec mov jmp add fimull aam aas mov stc popl sarb lcall adc xchg ss push fisubl dec adc popa sbb or xor ja xchg and nop sub jns xor inc aas (bad) pop (bad) fild stos jb inc pop xor in jle and into in inc dec insb mov xchg add fcmovnu std js pop mov popa cmp cmpsl jae sub mov inc cmp rclb sar (bad) xor adc lcall push inc mov in inc add mov add fwait stos push mov xorl sub dec fisubrl sahf sbb popa xor jno notl mov imul ds lods out sbb xchg mov sub dec mov or cmpsl addr16 lods stos cli pop xchg jne dec insl mov push mov and adc xchg aaa ljmp and or movsb pop xor arpl aas and jbe loope jo (bad) iret ret push dec add sbb or push sub xor adc sub sarl rcll jecxz insl add cmc push in mov out cmp adc stos dec pop inc xchg in add rol mov dec mov or out sub (bad) mul inc jp cmpsb dec sub sbb pop pop sbb mov test jle inc mov icebp lret sbb dec dec cld mov test add sarl ja xchg or add movsl sbb iret jl dec je int3 mov inc sti lcall push xchg and pop mov xor adc cltd sbb mov ret add lcall dec pop jecxz pop ret rcll adc push lock dec and (bad) and es es (bad) jno pop mov std aaa mov mov jns cli dec add test xchg lds cmc loope inc sub call fcomps xchg lea mov mov (bad) jnp push stos loopne jp cmpsb lret xchg ret leave lret js popf nop aam aaa sbb pushf fadds add add arpl sbb das cwtl in adc enter and test (bad) xor push stos cli aas rcrb mov mov adc inc jg pop push push cmp std movsl rorl js adc shrl int3 dec dec incb sbb aad jp mov add fnstcw xor push dec adc inc or popa popf loop adc mov lahf scas xchg cltd cmc cmp loop (bad) je sub jg outsl ljmp and jp cld arpl dec xchg jno mov imul pop xor aad jle push mov inc sahf adc add or xor jo pop adc mov add inc mov icebp adc or call and repz addr16 push test and repz es je push cli jge call enter into dec adc iret repz lahf push push jg inc and loop add push add icebp iret and int jle js sub inc test imul cmp pop push mov pop fldenv lret xlat cmp test jle jmp pushf mov sbb cmp xor adc xchg jle sbb nopl ljmp adc sarb imul (bad) loopne add xchg push mov dec add sahf ja lahf inc repnz dec adc xchg js ror je ljmp fwait ret das and popa inc pop mov lcall inc and xchg mov sub mov aas xlat mov idiv inc fcompl pushf sti stos add push sahf (bad) ficomp adc (bad) jo add adc jae aas imul test fisttpl push das retw mov sub mov scas pop les sarb sahf push sub push pop jl add (bad) and dec cmc popa mov daa cmp shrb sbb sub (bad) xlat mov pop inc das jle std mov addr16 (bad) jmp xor mov aas push loope mov (bad) sbb inc repnz push and subb xchg in int jne (bad) test xor jnp mov push pop mov mov jno xchg int3 add xchg mov sub push cld rcll pop xchg negb negb sbb pushf sub xlat not lret push stc or pop xlat and push push je and notl or nop push jbe iret push in aas mov xor mov cltd adc mov push pusha push add pop dec std stc mov adc pop xor popa sub sub (bad) xchg cmp jns ret fcomi mov sbb cmpsl outsl or test pop aad sub out and dec out add data16 roll out roll pop adc cmp out push cli ret fs add add add add xchg outsl sbb outsl dec dec mov icebp pop ljmp push and pop out loopne push loop or scas mov ret js outsl dec mov inc push adc inc jo fdivr gs jo popa xchg push jmp sar mov (bad) push das in mov dec fldcw repz ja xor add insl movb rcll adc fldt in mul cmp loopne sahf add das xchg je inc xchg mov xor scas jb loopne call or cld pop mov jmp mov mov jl mov xchg dec pop iret insb add inc xlat push out pop into lret pop ficoml insl jp add xchg orl std sti mov add mov pop dec lret sbb jbe pop aas fldcw dec mov ret (bad) addr16 mov xchg sbb adc sbb mov icebp (bad) xlat in mov shr lcall or cmpsl xchg xor mulb add add fwait xor xchg push sub (bad) and sbb jne (bad) pop fwait mov sbb cmpsb pop in push ljmp imul stos inc push (bad) jo ret mov jmp mov push ret sbb jg arpl hlt arpl pop andl lods fsts mov adc xchg add out cmp adc push jb sbb ss pusha xchg (bad) icebp ja es rolb add jns jge cs and push or adc push sub aaa xor insb jg mov xchg jae out adc stos repz fmull fcom das mov enter add add add pusha stc xchg inc mov pop pop pop test add cmp xchg xor push ret sti dec xchg push cmc adc jl in movl add pusha mov mov (bad) jno xchg cmp push xchg lds call andb call adc das xchg lds dec mov mov imul stos hlt xchg cmp mov inc mov lods icebp scas push dec dec push loop jno mov repz mov pop fstps add mov cwtl xor sbb imul mov inc ljmp lods sbb mov or add cmp cwtl ret jo pop sbb or push or jl jne cmc and lods in xchg jmp push ret sti dec lcall ficomp pop cmp mov adc or stc lahf rolb insl mov add stos mov add or sbbb jb or jle jle push sbb sbb call xor mov pop inc xor sahf sbb xor sbb jle (bad) lock mov call add out hlt sbb movsb xor mov in test add mov jecxz xchg leave and cmp mov cli pop dec cmpsb cmpl ljmp pushf push out aad sub jl push sbb jne sahf fdivl or cli cmp xor inc repz and in cmpsl ss xchg dec dec into test lahf pop dec or dec pop cmpsl ror rcll add hlt scas xor sub sub (bad) jmp inc mov inc imul adc mov rolb cld sar inc dec gs arpl imul pop xchg mov sbb mov jno mov mov mov sbb mov movsl jno lcall lret dec test imul xchg (bad) ljmp adc mov lcall inc mov inc pop lret fldcw loop test insb sbb out inc bound dec add mov xlat pop stos cmc push add fistp in in xor xor mov adc adc mov in push ret cli dec nop push (bad) nop lret mov cmp cltd mov push sahf push push les cmpsl (bad) bound dec out aad jmp and mov sahf sbb inc xorl das xchg mul adc push lds pop ja xorl rcl in fs push test call or cli cmpsl int3 or mov test dec adc cld jb nop lods test repz pop out popf test xchg xchg sbb out mov mov xor sbb xor leave enter leave inc das cmpl stc mul mov pop fild shlb push and fstl mov adc rclb popa out push das push stos mov mov pushf push jbe rcrb xor cmp mov xchg iret cmpsl ret cmp jge test push fxtract mov es in pop jnp stos outsl or decb popf pop push mov pop add lock mov das sub stc or pop mov cmp inc jmp repnz iret or lods cmpsb ja fild dec shrb jno loopne andl aaa and int3 mov out mov mov outsb iret fs or adc dec (bad) lods in jle mov sub pushf pop push add add cmp lret addb lcall faddl pop jo pop pop popa sbb cmc cmc rcrl inc out hlt xchg inc test sbb mov (bad) cmp lahf sbb dec add cs data16 xor stc lahf rolb jmp loope cmp add adc test xor sbb cmc mov test lea sbb (bad) out jmp mov xchg or cltd mov xor je jo pop add icebp or jno push ljmp jae sbb (bad) into aam fcomip jb add out pop scas sub aad scas std adc in arpl into and into add xchg or xor and sbb mov add mov enter popf imul jb adc std js lret imul sahf pusha out je pop jp and add add and and hlt jge scas cmpl stc mov xchg movsb xchg outsb mov shlb popf inc sub std xor addr16 daa ja or es sub adc call sbb and lcall (bad) into test sub lret repnz add out dec cmp icebp mov (bad) dec lcall mov stos or xchg push inc jmp and adc stos xchg and sbb xchg lock lcall movsl and mov jle adc inc sub mov sbb xchg jp mov movsl add jo pop loopne push ds loope shrb push lock insb xlat das add cmp jne rcrl xchg out or in add sahf stc aam call notb xorb mov imul xchg adc adc pop out mov scas std mov mov jg sbb adc add cltd iret or shll (bad) int dec jo jns pop fsubrs pop lcall scas mov dec adc mov inc push pop test std cltd cmp lcall push pop ja int pop push push fiaddl add add insl stc sbb add mov add (bad) sahf je push adc ja in into inc xchg push mov stc flds sti ret mov dec adc xlat cmpl xchg mov iret cmpsl ret test sbb sti mov add xchg sbb arpl andl jle jle insb ret (bad) add enter ja add out sub roll into ret mov enter xchg sbb (bad) out pop jbe scas imul sbbl iret dec dec inc adc mov lcall adc xchg test outsb lret dec addr16 (bad) xor (bad) pushf popf jae mov (bad) or fist stos add xor push jb pop lock cmc jge lods xor and out xchg gs sti rolb add dec xor hlt cmp dec add in loope or data16 jecxz xchg xor push outsl aad jno ret cmp aas stc jecxz sahf shr call add add mov inc sub xchg lds arpl fcmove mov inc sub inc inc js xlat jmp test xor or (bad) lock mov les inc mov sbb movsb xor mov fstps push icebp or (bad) rorl jb xor add scas stos stos pop dec sbb insl mov subl and mov xchg adc test push jb iret mov sti push cmp xchg xor or lock sub ljmp js enter push and or addr16 cs add add (bad) jmp adc test mov fmull cmc sbb hlt outsl ljmp mov mulb adc cli dec ret jno cmp fidivl mov lods arpl inc jl rorl jg rolb les ret es dec rclb outsl divl mov sahf or add add push mov xlat sbb xor xchg push jp outsl adcl imul out ljmp xchg inc (bad) lock out iret mov out bound lahf flds dec jb mov clc pushf enter adc xchg adc lret xchg mov push add dec into sub gs add lods stos mov rol cmp je mov imul loope cmp mov push stos jnp xchg repz sti cwtl mov adc jecxz cli cmp fwait jns cmp orl xor mov sbb int3 xor pusha dec data16 int3 ret add add xor mov mov mov and stos sub sbb enter xchg jb and xchg out and add cs push mov jne test cmc lret xchg push fildl mov ror pop cwtl in gs ja jmp adc pop xor add sbb jnp jmp repnz add jmp ljmp mov pop pushf sub cmp xchg clc sti das cmp push jnp loop push orl cwtl jg xlat popf int3 pop mov pop popa (bad) jbe sarb mov dec pusha add add adc (bad) mov (bad) sti sbb inc sbb cmp dec mov cwtl mov in adc push (bad) call test (bad) pop notb pop dec sbb push xchg inc popa jnp sbb sbb inc sahf pop or add add cld add mov in mov adc inc xor test dec inc (bad) (bad) sub aas inc dec into jmp pop lahf (bad) mov cmp hlt mov cmpsb cmp hlt into push jmp popf sub cmp out sbb jno pop xchg insb std dec das xchg push stos pop add adc ror jle push jecxz cli add (bad) lret add int pop xor lds inc pop add loop or in and sbb cmc imul rcrl test fstl xor mov mov mov test cwtl mov add fwait leave cmc (bad) pop (bad) push push add out ret stos cwtl adc jne push and arpl jno bound or sbb push add in sub adc push add push leave (bad) dec rol mov adc push out jo pop and js ljmp cmpsl or fs test push aam inc adc push (bad) jno ret nop jmp add add stos jae push mov add pop mov lea push aam clc adc dec mov idivb daa mov int3 jl sbb cmpb push pop outsl test out dec jg dec pop pop call fistp imul cs and inc icebp in inc iret loope cmp pop aam push adc dec jmp mov std inc push (bad) sbb call (bad) js mov mov lret stos inc adc push mov hlt addl mov fcomip add jne sub rcr pop inc dec mov push mov ljmp js fwait mov cmp mov ret adc add jmp lret in dec and das imul and pop push pop (bad) mov mov cltd ja lock sbb (bad) cmp repz aam adc mov imul loope shrb scas sbb jnp ret fcmovnbe sub xor iret dec xor sbb es adc mov ljmp add jp mov cltd negb xchg push jbe out cmp mov test nop (bad) add daa mov fcoml push mov xchg test push adc xlat mov add adc mov pop add incl shll add xchg repz lea add add jl jns jbe,pn or aaa call mull cmpsl mov jecxz adc movsb es lods push fcoms jno dec push mov sbb aam mov push sbb push inc popa or pop fldenv sbb int3 ret (bad) sbb lret or xor inc pop ret insl jb test add xchg (bad) cltd mov xchg dec mov mov ret std int3 in jle stos xchg sub push movsb mov and les enter adc pop mov push dec mov xchg mov xor cmpsl icebp imul mov xchg jns loopne adc repnz xchg cmp push and add mov mov les rcrl jbe xchg push fildll repnz jo out iret (bad) cmp decl (bad) sub push (bad) sub scas inc mov shll xchg out aad gs (bad) cmp in adc jno xor in inc mov xchg pop sub (bad) jbe cld add add popa xor scas das mov adc imul mov pop jne test sbb fisubr jb push pop mov ret std int3 in jle or jle roll push push int fsub aas mov out cmp test jp mov mov in fisubr ja out (bad) jbe loop adc add (bad) xor mov dec fild mov mov mov sub push das push jb cmc loope mov add int3 or sub out std ret pxor mov and jmp and mov jbe add add adc mov sbb mov xchg sbb mov (bad) in in test cmp sbb xchg (bad) adc movsl mov mov sub jno dec sarb adc jns xor xor lret outsl lret int3 cmp mov pop inc cmpb pushf sahf scas ljmp xchg shrb fisub xchg fwait add pop (bad) xchg scas mov stc add adc sub lds push lods das in out pop jl dec push mov pop mov pop aam xor mov mov add fmull lods stos popf push loope jae ficomp cmp (bad) lretw jle aam mov adc push fiaddl fisubl add dec jbe lret in or test sahf ja cwtl mov adc repz les imul push add add mov jb pop scas lock lods sub mov enter mov test xchg loopne out mov jne mov jno pop pop jle (bad) mov push test adc cltd adc or popa dec dec (bad) call mov movb add add xor or cltd inc mov xor and xchg loope aad outsb mov (bad) cmp pop and dec mov cmpb inc mov adc ja ret je dec fisubrl stos inc mov push sub xchg aad aam int3 ljmp add add add (bad) xor jo push dec lcallw into pop jle jbe xchg push jns pop int3 ja mov jge mov jmp adc push sahf or movsb xchg lods test mov out adc sbb pushf repz and add pop fsub frstor lret ret add add test xor loope inc in ret sti dec mov lods push mov add (bad) shrd adc and xchg cld xchg push pop mov cmpsl adc and mov xchg int3 pop add xchg sbb shl addr16 ss xor fsubs xchg pop dec loopne gs (bad) out add pusha jmp or or mov pop aaa pusha xchg sub mov lods jp xchg or subb movb mov arpl lret in ret inc dec xchg mov push jnp scas adc and in adc push adc jg pushf popf scas fmuls add mov rorl push lods (bad) jb adc in call int inc lret xchg pop sbb aad jb xor flds sub add add cmp push push adc mov lea call dec add push sbb (bad) fcomps push out jb xchg lret aas mulb in add add popf jb mov inc dec aaa jl cmp lods mov rolb inc aas push mov (bad) xor call cmc (bad) lret js outsl xor cmp fld imul pushf xor out mov clc mulb xor aaa xchg aas stos rorb or roll outsb clc add add subl out inc mov cmp adc mov cld cmp pushf mov jae je fs mov inc dec inc repz sbb in jmp cwtl add fnstsw push fs xchg (bad) cmp adc hlt mov fwait cld mov cltd cmp aas xchg test and movsb inc stos jns int3 rcrb mov jnp fisub sbb push jnp cmp jne xor jmp decb adc fsubl push stos outsl sbb and in jns das mov in mov jne push pop inc movsb jmp imull repz or dec and icebp mov add in adc ss inc and imul xrstor je sete xchg add add popf in or jl mov jbe jo fdiv mov in sbb je dec sub in or stc aad pop mov pop lahf xchg push pop add insl (bad) push push jbe mov (bad) int3 (bad) jecxz andl jo stos mov pop xchg mov adc xchg xchg pop leave jle loope and jb cltd mov mov add dec test daa push jb int outsb inc inc jl aad adc pop pop and and in adc xchg inc or (bad) add (bad) dec or sub or push std or daa mov push gs shlb mov dec pushf cmp push add push insl mov push mov fcompl pop pop add inc sti mov mov mov and rcr or movsl sahf adc out sub lret sbb add dec (bad) mov push sub cmp dec fnstenv cmp out (bad) hlt push push int3 in out stc or lods scas xor out out (bad) jno inc push adc mov test fdivrl jg sar ret in andl xchg inc jns shlb pop add mov cmc gs or mov and xor cmp les cmc enter push xorl roll imul jns rcl push jp cmpsb push adc sbb xchg push sti jnp xor imul out xchg jle fsub test xor add adc add lock pop popa rorb repnz iret sbb push das orl icebp bound js adc xor rolb mov retw pusha xlat (bad) loopne and jecxz (bad) mov std sbb push mov sti fadds dec addb (bad) test lock add xchg cld xor int3 sbb insl rcr add dec cmc sub ss and test xor or ret (bad) adc cmp lea sbb cmpl les or xlat out mov push (bad) das inc fimull sbb cmp sub mov jb add mov lret stc push mov inc in xor jle jle mov rcrb inc in sub jle loop add mov je jmp rorb dec or xchg push sahf mov lods pusha pop push pusha scas inc push xchg inc bound cli loopne add jbe hlt fldt xor adcl mov add dec xchg cmp bound daa imul sub mov add jp jp cmpsb gs xchg pop or xchg inc or inc js or push pushf xor inc xchg arpl mov xlat outsl inc sub add add inc stc (bad) out mov jge cld mov outsb scas cli ja loope andl jmp push pop (bad) jne jne lcall lcall fildll xor adc iret (bad) cmc push das lea sub jbe loope add push xor dec (bad) scas call add jmp xor orb imul push jmp int scas xchg (bad) push inc es pop jae fisub (bad) sbb sub mov shll jl mov pop push jns es push lret add dec das cmc xchg out xchg out loop or sbb pop and ds jb lret lret pop xchg lods push cmp sub mov add add add adc mov and mov fcoml (bad) les fsubrl scas push lcall mov clc or ret stos aas xlat mov add arpl fucomip mov jle pop fist adc (bad) (bad) mov sbb nop add (bad) mov xor push push mov add test stos and jne cs pop push cmp jmp pop lret inc push in cmp data16 pusha xlat mov cwtl stos mov mov or sub lods outsw shlb pop mov call jns leave popf mov flds jns sbb push test lret call cmc (bad) (bad) lock cwtl addr16 inc cmp lcall push movsl mov mov push les adc jae mov jne mov xor and out or xchg jecxz sub hlt pop out adc (bad) fmul dec add cmp scas decl add adc cmpsb sahf outsl cmp jge and mov mov mov dec into mov decl add ja inc sub out sbb shrl mov (bad) imul ret inc mov xchg pop pop inc inc stos xor jg jecxz movsl jl cmp int mov adc iret push inc jo add add add aaa popa xor or (bad) lds mov aaa pop stc push mov cmp mov in inc sbb das mov mov inc pop ljmp mov lcall mov and rcl scas rcl pushf push xchg dec insl adc mov cltd adc popf scas add sti pop sub add pop sbb in pop pop xor ficoml dec ficoml das retw aas mov lods sbb imul xlat push out je pop jbe popa xlat das imul cmp push addr16 mov inc lds addr16 std jns lock mov jmp inc repz std lds bound popf sub sbb enter out and fdiv adc aam gs cmc (bad) sti sbb xor push push rorb or movsl mov push in out shl in aam call ja add xchg push daa jg in xchg out divb negb jb xor loopne int3 jne dec out mov add not mov and xor popf outsl sti xorl xchg mov sbb test stos sbb clc cmc lahf push or cmpsl hlt outsb sub lods lods popa xchg add xor stc lahf add sub push inc es push add sub ret sbb xor in mov or daa std jle adc and mov shrb and js,pn dec or bound xchg cmc pop jle xor dec dec inc mov inc xchg (bad) xchg inc cld sub arpl lret in lret dec in rorb test std or or push cli ja adc adc adc jb popf and dec cmp pop and push cmp and out stos pop cwtl outsl icebp pop in sbb jmp jp adc in jle out sub push mov fldcw add inc xchg les sbb hlt mov pusha and xchg ss cmp iret fisttpl dec fidivl cmp ficomp jns call mov adc mov xchg mov movsb push mov (bad) in in mov loope loope cmpsb stc test arpl add add sbb into add ficoml outsl sub inc xchg dec out mov and push imul cmp mov xchg pop sub add mov lahf divl cmp dec mov mov (bad) divb sahf fidiv pop popa (bad) push fadds mov lret (bad) mov sbb bnd mov fsts mov pusha push or adc das push or or mov xor insb rorb jb mov movsb hlt bound ljmp and jp cld mov dec xchg jno ret and add sub sbb xor js xor pop pop test and repnz push fisttpl or cltd stos or sub push and ja dec adc in jmp sub jp outsl adcl (bad) mov repz shlb popa adcl dec mov daa pushf mull inc push mov add jbe xchg decl inc adc fldenv or pop adc dec xor sub cmp (bad) popf arpl test pusha les or mov iret xor push cwtl inc pusha lods ds leave out aad jb push aas clc add jbe or mov (bad) fiadd add jne test and dec jb push mov mov jl lods movsb and or fcoml pop pop and enter adc lods jb fwait xchg aaa dec rolb lcall dec sub sbb lods inc sbb aam test sbb inc loop dec or xchg rcll jmp push repz out mov mov sub push xchg fstps and shrl and rclb adc test movl in jle out sub jb mov fldcw jmp iret hlt mov jmp sbb (bad) pusha pop push pusha jb loope (bad) jno add pop mov mov stos pop jecxz daa jge lret out stos arpl dec pop inc sub pop fld mov jecxz xor pop daa jg mov xchg out cmp xchg ja (bad) or jmp inc repnz cld lods jl mov jo mov push ret mov xor in add xchg out rcr sub aam (bad) jp sbb pushf in xchg pop add fcoml sbb adc (bad) jb mov leave fiadd pshufw pop popa sbb inc arpl jmp dec sub dec lcall cmp ss add inc mov sahf mov das mov loopne aas jmp out (bad) fcomps push inc ss dec mov out xor inc mov jmp mull mov xor xchg push movsl xor xchg ss test or out andl je inc cwtl cltd iret or in popl add add push fs frstpm(287 clc cmp std jo (bad) and fs int3 mov sub lcall scas iret pusha adc mov mov push xchg inc mov cwtl aam sbb pop cmp inc std jecxz xor pop stc add je cwtl in xlat in (bad) stc adc aam add xchg xor add fsts in sub jb jmp push inc cmp jecxz add adc dec push rclb xor mov mov add or pop insb adc pop aam into sbb adc xor xchg xchg pop gs dec dec and in in mov add add pop mov lahf dec xor adc mov dec lret adc repz fs push bound mov sub je push or (bad) in test test sbbl (bad) jnp inc fiaddl push (bad) adc jbe xchg or xchg sub add add repz inc xchg sbb sbb sbb inc push mov mov (bad) adc cmp stos inc (bad) mov jmp sub cwtl fldenv xor int (bad) xor dec hlt add dec push aad jp loope in (bad) xlat jbe sbb aas test mov or jg cld fcmovnbe dec xchg ja xor mov mov enter xor add mov sahf push pushf mov mov mov loopne ror scas pop gs lods test movsb mov and sub fwait mov pop push jp imul cli lods in subb pop add xor repz and add jp xchg lahf inc xchg push push jno lcall test inc mov push push and sub js mov std js nop adc add mov out je mov dec xor adc popa push xchg mov xor jmp adc es ljmp test push sbbl das jp dec sbb scas les adc andw rcrl imul sbb enter int3 mov cmc xchg int and or cmp insb mov dec and scas xchg xor adc pop data16 mov push inc into addr16 fldcw scas insl mov mov push sub je inc pushf popf and in into rorl loopne push jb pop test add cmp inc out push jbe jnp inc in outsl scas mov dec mov lahf (bad) sub jge jp jge popa and add mov sti lahf scas xchg cld cmp movsb call mov jno bound push xchg nop xor pop push jne xor std prefetcht0 mov pop pop pop xor in out mov mov sbb cmpsb lahf sbb jge adc (bad) ret icebp and pop adc inc imul add add pop shufpd or push test dec jae and aas xor fs mov jbe loop adc (bad) xor shrb rep stos xor pop out int3 lods rcrb pushf int dec loopne daa pop outsb push xor pop xchg adc gs sahf cmc in xor jmp aad inc leave lret lds js in out aaa add add push nop cmpsb repnz cmp mov inc in test mov hlt cmp test inc sub jmp ja hlt lahf xchg js pusha jecxz xorl clc nop ljmp bound daa jmp jns ret add mov xlat mov lahf dec ss sbb fcomip imul in cmp mov mov dec and or push dec sbb sub aaa cmp add adc test lods cli ja adc imul popf add popf dec dec (bad) aad push xchg fldl aad imul and into add add and push loope fs aas adc push pop das in scas mov xchg js jae jl add (bad) aas subl or inc imul pop popa push inc mov xchg cmp mov push scas popa punpckhdq lahf sub push outsl or push mov sarb xchg xor push add xor adc sbb in in lret xor cmpsl fstl fwait leave xchg adc pop jge xchg lods xchg cmpsl mov add cs jl jns,pt jno mov test repz push pop lret dec adc ss pop xor sti pushf dec and cli pushf test sbb xchg inc popa push fsubs cli ret into faddl add add pushf popf sub pop adc pop test std fs fwait addr16 ljmp and lret lods mov or das nop cmp dec sbb and add xchg stc das jl call dec call loopne arpl in aas sbb clc xlat mov xchg add or xorb pop push out fwait jge and lds fmuls daa cmpl and mov shrb pop ficompl adc or and xchg iret pop lahf dec imul adc test js inc pop and int3 (bad) in dec ret sbb daa aad add adc add mov sub call mov xchg xorl pushf and dec adc dec cmp pop add adc mov sbbl push data16 fsubl std js adc jecxz push int test std fstpt push mov add popa hlt jmp cmp pusha js int fist test sub sbb cmpl adc cmp inc add bound inc or lods (bad) cmp add lea jecxz mov enter lret adc dec test add pop pop push pop leave cmp mov add iret dec mov inc adc jecxz jp pop bound adc sbb cmp inc pusha (bad) sbb loopne lcall mov fcompl and and inc adc sti (bad) push add sbb sbb push and roll insb add mov aad xorl add pop insb mov mov jbe lods (bad) pusha pop pop arpl or pop sub stc pop jb,pn xor mov push test imul lea (bad) mov add sbb call hlt stc cli xorl cmp dec pop test gs xchg (bad) mov (bad) dec push mov (bad) fstpl (bad) test std or and pop adc sub aas xor imul nop or in pushl lcall jge jmp pop rcll js movsw add xchg sub lcall adc mov mov sbb add aam add xchg pop sbb push sti lret push inc jnp mov js fimull add int3 or outsb movsb mov andb mov pop xchg sbb daa stos mov lods jnp lret sti cwtl jae insb outsl out cmpl negl rorl add xor push mov add add leave test aam xor fidivr xchg enter add jno rclb (bad) dec mov xchg loope or repz pop inc fwait outsl sbb outsb fsts add cmc jno or sub jmp sbb in loop inc ljmp fcompl popf popf and in jns jge pop loopne push stc push add fidiv push repnz pop dec xor in aam test insl nop sti dec in xor push xchg lret das pushf xchg cmp jl fist popa lods xchg mov jae fldcw rcrb and adc sbb pop mov xor xchg dec add add test insb cmc cld out pusha mov mov push (bad) jle add pop bound xor insl push aam adc insb pop push push ja das jge aaa es sbb jns stc sti adc pop cwtl mov shlb inc jge mov rcll and add add xor push daa mov cli imul iret sub sub nop adc in sti and fs cmp cmp push xchg cmp popf addb sub xor push sbb sbb jns cs (bad) jmp int imul call loope add push cmp or sbb inc mov jle inc lea addr16 mov sbb xor (bad) pop decl outsb add pusha fisttp dec imul jne mov in (bad) sub add jp test cmp mov je ror pop dec add add push test inc push xor ret push xor pop clc dec mov popa jg test sub inc (bad) jl xor or sbb ljmp in xor imulb insl pop xlat push sub pop jnp or (bad) sub inc adc in rolb add add and xor (bad) pop mov out xor inc mov add mov push lds add fs jmp fidivrl sub test data16 xchg mov or sbb sub (bad) repnz iret imul xchg mov mov cs sahf sti cmpsb pop je ja add aam add mov cmova or xlat aas mov lods mov inc loop lcall push nop or mov push xor dec and enter pop lahf jmp add push and loope lret push adc fidivrl pusha dec outsl outsb or idivb imul lods cmc mov xchg add rcll leave add mov push jbe out (bad) jo xchg pop xor inc stos jne fucomp mov jae hlt sbb add adc add scas lahf lock xor cmp push push and mov xor inc sub pop xor add add add inc aaa sbb ja aad rolb cld mov mov mov jp jns in add pop and inc fwait in stc push dec gs adc roll neg imul outsl scas stos cli push inc xor cmp or addr16 push lret repnz mov rcrb jge rolb add add (bad) and mov insl nop add jge std pop arpl add in sti sar dec sbb mov ret loopne lret pop subl fisttpl lahf pop xchg imul add dec inc sub and sbb outsl imul push cmp jb adc add mov ja and dec pop daa addl int3 mov ljmp xchg jecxz loopne movsl xchg sbb fcomps sub lods js push rcrb xor ja mov sub push sub xchg add sub not out data16 or jge push addl add fcompl lret into jne callw add not daa jno push and movsb sahf outsl (bad) insl hlt xchg and and fwait mov adc adc jbe mov cld js adc jge jnp or out lcall outsl push pusha push test (bad) (bad) mov cmp push add clc fisubrl cmpsb push jp in insb aas cwtl push mov aam dec and mov add push sbb sbb adc int or mov inc pushf cltd bound ret mov lret inc cmp xorl mov lods or imul jp cmp add add sbb push push cli ja and push mov mov pop pop fcomp inc mov jbe setae add sub daa stos lret push xchg add xchg mul inc mov ljmp (bad) sti sbb inc cmp cmc nop mov icebp cs sub and add xor xchg stos jae sub jbe or aaa rorb in (bad) mov add jle adc (bad) in push fs mov and rorl xchg adc mov inc iret cltd movsb or mov imul add repz sub jecxz xchg mov inc fwait in pop add and mov in test (bad) jecxz xchg add call cmp jp add fstpl push sbb xchg orl or lock add jl jne xlat (bad) sbb seta lock inc dec je,pt xchg lea sbbb movsb mov push cs jmp xor mov dec xor into mov jecxz sahf daa or pop pop test cmp mov and xchg adc (bad) (bad) ja mov push mov scas int3 aas inc xchg add xchg pusha add in sbbl es or leave jl loopne lea jbe in (bad) js push inc and pop push push sbb mov in jno aaa push jp and xchg mov sbb stos cli xchg jae xchg pop mov add lret lret cmp outsb and and jp or (bad) or jge notb adc bound aad dec sub pop xor inc movsb or dec dec jno mov add mov mov rcl mov fwait cmp and movsb pop sub mov int aad fs (bad) or popf pop or out (bad) mov jne mov lods jbe adc cmp xor xor mov jle mov mov mov mov ja pop cmc imul mov sbb sbbb push std or inc notb sbb xlat test aad cmpsb cmp enter sub out pop lret fldcw outsb fimull clc pop mov inc xor pop add add jbe outsb gs test push jb cwtl xchg mov cmpb push stos and arpl es aaa pminsw pop sbb dec in out jmp mov jg and pusha pop sub push ret mov std inc sti fsub aas clc jbe sub test in (bad) fiadd out sub and add mov and mov xor arpl aas loope sbb dec in or iret (bad) dec pop (bad) sbb fstpl pop add repz push and or fwait mov test dec gs adc push adc and add add cmp xchg push push add mov lds inc popa push push xchg int3 jne fcomi mov in fidiv lcall and sbb lret adc jne inc or das in sub push fwait icebp mov insb (bad) cld xchg push lret rcll mov (bad) in pop xlat xchg iret fildl add adc push stos mov xor xchg mov jecxz test call and orl xchg cld mov jmp inc sub ret js xchg mov or push int in int3 addr16 pop cmc imul (bad) dec cmp cli les cmp and add add jb es in inc xlat clc pop sub arpl adc mov add xchg out xchg push or xor jno aas (bad) negb incb xchg nop mov ret pop loopne push stc push add xor addr16 cwtl add popa rorb imulb push stos and stos inc sbb jle paddsb xorl shrb fs das iret xor xchg mov push jecxz in cmpsb ret mov daa sub mov dec add aaa outsl addr16 xchg cld rcll dec mov pop push inc movsb push aaa ret outsl into inc sub ret mov out bound adc lcall jne (bad) mov inc mov popa lea in lock cmp fs and mov xchg sub in mov cmp push lock lret pop sbb jg or or fcompl pop gs dec mov sti mov pop fild (bad) (bad) fildll xor data16 add add mov xchg dec idivb inc ret sti dec jae xchg insl mov dec (bad) cld xchg push sub insl mov pop cmpsb mov mov push rcrb xor jp jmp lods mov lea adc insl or jb push push cmp stc mov dec orl add popa mov mov stc pop pop test gs sub jbe icebp and push sti or call (bad) sub jecxz (bad) add inc icebp cmc rolb (bad) fbstp inc loop adc sbb add icebp out mov shrb shrb inc xor dec lret repz add add sbb ret jne nop jg mov jg iret out mov (bad) ret sbb ret sbb das popl inc outsb jb mov push pop adc and or sub sahf pop mov popa pusha jb or mov es idivl push call mov add push mov fwait cmp xchg (bad) xor xor icebp scas pop and es mov push dec jne pop test mov insb pop sub fnstenv adc inc cmp dec jno or repz into into fimul les cmp fnstsw add adc add add dec mov ljmp fdivl pop movsw in pop pavgb xor jne add pop decl js mov adc aad cmp sbb push stos sbb fisub xor add in out je (bad) cmp repz popf scas (bad) mov add add imul push (bad) jbe jno pushf (bad) out rcrl xorl icebp push add sbb jno iret popf mov inc or aam outsb push push add in cmpsb push jmp popa repnz movsl or into (bad) iret push push mov or jae push push movsb mov and les adc mov (bad) call icebp cmp test pop (bad) xchg mov or test aaa cltd negb cmp or pop pushf popf and std adc xchg cmp dec sbb mov add pop xchg and mov push push jns out inc (bad) (bad) sti enter daa pop pop jmp imul add js add das jae das imul push push shll je jmp or aad (bad) and es mov in jecxz jle adc cmp xchg stos jmp or fisubl lcall ss mov stc cltd movsl or mov lcall add add jle or xor sti push in dec bound mov sub xchg push inc into movsb inc mov outsb scas stos cli or cltd (bad) dec insl shrb shlb inc xor lcall cmp jns lcall jbe or cwtl in mov imul and mov jb add sbb jb adc flds sti ret fwait lret mov (bad) fs out data16 adc mov jae fiaddl mov push mov pop clc mov cmp jne mov adc and mov adc sbb mov jne add fwait lods push test mov loop push push fisttpl or les or inc std or or push fwait in sbb jb iret sub sarl push and mov pushf nopl movsb sbb xor fdivl outsb jge and scas mov add imul add jl mov movsl cmp in pop popa xchg sti and stos jae or subb (bad) scas call shll ss sub iret fildl gs push push mov jmp shrb push pop mov inc sbb lods add dec sub add mov nop out cmp ja (bad) dec and xor jo adc jb cmpsl dec dec xor int xor xor pop in (bad) ljmp push push and aaa mov inc xor aaa cmp mov inc arpl (bad) push sub cli or aaa cs nop inc ljmp mov pop inc xor adcb mov inc sahf test (bad) icebp or mov push mov dec or inc jnp notl inc movsb nop push mov dec dec cmc sub rol add or out je (bad) mov push jmp mov jg bound das sub xorps insb fstpt out js xor and cmp out sub lahf stc (bad) jb cld add push sbb xor xchg jae insl inc sahf mov xchg ror mov push sbb jns cltd mov sbb mov ret cs pop jo into fisub xchg pop push adc pop xchg pop je popa fs push ret sbb out adc addr16 stc fcompl adc sti sbb xchg roll push clc es stos inc cwtl in xor mov jecxz xchg xor ljmp and js adc lret push cmp fmuls loop pop lahf xor add dec xor loopne and fdivl in adc xchg (bad) jbe jge and mov cld sub outsl stos pop pop pushf cmp mov arpl and roll jbe mov mov xchg rolb scas pop shrl stc pop (bad) adc jne or add gs and push adc outsb enter jp imul sub jns lcall movsb mov stos push (bad) loopne adc ficompl mov decb sbb in outsb mov and sbb xchg jmp mov add (bad) pop loopne adcb jp inc aad frstpm(287 add out xor mov or xchg cmp loope scas mov sbb aam loop jge jle nop hlt pop adc adc mov addr16 int sub xor lahf xorl fimull fwait pop inc aaa adc add add imull mov mov ret std loopne jle enter sub push leave xor fwait in aam or fstps jge pop enter mov lret shrb push sbb fistp aad or test mov sbb add test xchg inc sbb pop cmp (bad) jo mov xchg aaa jl pop lahf pushf cmp xchg pushw jmp lret in lcall push push xchg fucompp push pop stos mov xor xchg hlt lahf sub jmp fild ljmp and (bad) lock pop bound add add stos into push adc cli sti mov fmuls stos daa enter insl rorl cltd xor jnp xchg add pop movsl fs jle idiv (bad) popa mov push push fstpl or inc push nop pusha mov lcall dec sbb or lods jae mov add in out leave je jne add je mov addr16 pop xlat jge cmp sbb aas jb pop jmp pop popa nop (bad) xchg je and xor popf shlb (bad) pop jl movsl js jge mov imul les (bad) pop push mov (bad) test sub add xor add add out cld dec cmc xor sbb sbb ret shrb and pop lret nop or add enter and js ja lret inc cmp loopne popf add bound ljmp scas cmpsl jl adc sub jge mov stc ret add add cmp jnp out stos mov pop out xchg addl js outsl dec mov fsubs fist stc or mov loop or cmp imul dec sarb jge push pop rol cld xchg (bad) hlt mov mov (bad) and imul add xor cmpl xchg mov jecxz jns pop mov mov jnp leave and (bad) ja mov sbb inc sub mov ficomp dec gs jno mov push fdecstp dec mov dec sub jge dec push xor mov push mov cmpb push mov cld mov aam popa mov or cmp xchg push push stos push jne dec insl mov dec dec aam in lret and mov fidiv mov or out gs or (bad) in pop lock (bad) jcxz mov out jmp sbb pop jl cmp ret mov add (bad) cld xchg imul shrl rol pusha pop jb mov add lds push test xchg xchg push ljmp in xorl mov xor (bad) iret es inc sub mov jl add pop inc aaa pusha dec lea cltd movsl xchg lods add repz pop jg sub or or sub mov out mov adc sub xchg imull pop jno jmp faddp xchg incb in inc arpl mov cwtl out test pop lea ja mov in jno sub int add fist and jnp sti dec push movsb mov std pop xor stos fucomip jb push jne (bad) jmp jb outsb jg mov add scas iret pop (bad) cmp jbe mov (bad) lret sub sbb jle imul dec mov xor insl xor cmp add sar inc and dec pop adc lea inc cs or sub add or notb dec mov pop cmp xlat mov inc pop and in jg ds push insb xchg or lock (bad) (bad) cld pop out fwait test pop hlt jmp decl add pop (bad) xor add movsl icebp fwait mov cs test pop and fwait inc sbb aad ljmp xchg lahf jl mov cmp adc pusha xlat mov lahf faddl mov stos push add stos jae test in outsl addr16 test add adc call (bad) andl cmc sahf cmp mov add sub out rcrb icebp and mov dec ffree int imul arpl lret pop and pusha lods adc mov push add cmp lods inc loop xchg ja xchg mov cli data16 add add fwait insl mov cmp sbb lret mov adc mov push cwtl jne jb adc outsl push and push stos and sti dec jno lods dec and xchg push add imul shrl pop popf and mov andl pop out add cli add xchg loope clc jecxz sti rcrb gs mov push pop jp jle cltd sahf or cld push fcmovu std fisubl andb movsb bound sarb pop pop pushl lea xor sar scas cmp pop pop inc xor imul (bad) test aaa pop xchg pop cltd cmova out pop jo out or mov push lret lret inc sub int3 sbb imul addl mov fcompl pushf repz jnp mov add aas inc unpckhps movsl sahf outsl push sub (bad) pop in push sbb xchg imul aad lcall xor pusha imul fnstcw or add (bad) loopne das sub cmp add inc int adc push xchg xchg xchg movsl adc out (bad) xorb add bound repnz xchg jp insb add movsl or ja xchg inc out mov rol (bad) inc and pop cmp gs repnz loopne shrb pop and and add add or fidivr das shll or push sarl (bad) mov mov add dec es push nop or insl mov xor fcompl push mov jns or jmp lods lcall and daa (bad) popa mov pushf outsl sti mov mov sahf inc mov add sbb std sub fnstcw dec call mov aaa dec cmc xchg rclb (bad) jno ret (bad) mov jmp push stos test ds fdivp sbb inc sub cmpsl (bad) mov jne mov lahf cmp jmp push lret add je daa subl dec mov sarb add mov sbb inc mov and xor cmp mov and and pop scas pop push dec adc ja test xchg imul and jp xchg jge dec insl mov incb fcoml pop push mov jns add pop stc add add add lcall sbb ficoml cs xlat into in inc movl jo cli pusha imul movl imul in loopne sub xor inc repnz push clc add jbe movsb xchg les imul out add add dec xchg mov push jb or (bad) mov mov test lcall push push (bad) and adc imul ljmp xchg loop aas cmp and inc mov dec sbb sub jl mov inc sub add add mov lret dec mov push jp push xchg pop stc rol pop test jecxz sbb idiv sub leave leave shlb pop das in out imul in add nop adc push subb inc add rclb xchg and iret jecxz outsb adc loope mov (bad) jbe xor (bad) ss andl mov rcrb inc dec sub xchg (bad) xor lahf xchg mov lret fildl dec jnp sub mov cs std or lcall lods ljmp enter test mov and cli test call pop out leave movsb mov daa mov inc lea mov inc mov sbb jge fninit jg add in pop push inc add jmp push mov jmp popa and xchg add ss sbb out lret dec ds ss stos ficompl stos clc mov adc cmp lock mov (bad) pop jl pop (bad) mov lods push fidivl in daa add dec jbe lret in in pop add inc fwait into xchg clc inc pcmpgtd inc add and dec jmp sub sub bnd xchg clc push sbb pop mov test xchg sbb adc (bad) xchg lock cli or jmp ljmp and arpl jb bound mov jns lcall and jo push xchg ds popa cli push mov pop xor popa dec testb jmp mov add dec sbb xchg cmp jecxz pop psrlw adc or movsb out push (bad) lahf add jg inc and mov jecxz or pop aad xchg scas (bad) mov adc or xor iret or adc cmp movsb ja aam dec lcall add add pop cltd movsl mov mov dec or xchg xchg out pop sbb icebp mov in inc gs adc xlat mov or pop lock in testb out (bad) loop mov push jae fcompl pop sbb jne es outsb (bad) fist jb pop (bad) fildll lret xor push add and int3 in jl mov sub mov lods test pusha (bad) push mov sarb mov (bad) pusha push jmp mov jg fimull cmp mov mov sub mov shll mov jl imul mov add andl stos iret out pop mov jns cmpsb push jmp les sti sbb into (bad) iret push dec lcallw into add pushf pushf sbb pop dec adc in rorb fwait pushf push jp es dec push jns push test pop movsl loopne adc lods adc fistp pushf popf add add lock fimul sbb and pop gs fldl add lret jg mov push mov lods adc std adc add cld xchg (bad) popa dec shr test xchg pusha aas stos (bad) xor and rorl adc push push clc add addb add outsl addr16 mov push movsb inc push rclb cmpsb or sbb je add (bad) outsl shll mov fistpl adc int xchg lods mov dec ror insb enter adc (bad) test enter jb and push lcall int push pushf dec push loop add insl add test add movsb sbb pushf popf scas (bad) jbe mov aad mov cmpsb stc push (bad) in test mov xor inc cmpl out fnstcw xchg pop xchg out nop sub dec sbb stos or decl out je push and jmp and add add add sub push stc jecxz mov push xor imul outsl adc popa push lds out adc loop in loopne inc mov movsb pop adcl mov push stc dec mov fcmovbe xchg enter aas ret mov jmp jae add mov jmp repz loope fs lret movsl aas mov jle xchg in sbb sbb movsl jle out xchg (bad) adc sahf adc (bad) adc dec dec fiaddl push iret ficomp shl pusha leave cmc loopne out (bad) gs aas lret (bad) js inc lds nop repnz ret fsts sub xchg xchg xchg jo lahf cld cmp add push shrl out je cmpsl iret (bad) pusha pop jb add test ja js and fdivrl jge xor aad xor movsb jb jg sahf test movsb dec xor sub inc mov mov cwtl popf push sub out push (bad) data16 dec sub add inc enter push lds inc test push mov adcl insl or mov bound xchg rcr aaa stos imul es flds popa mov mov adc outsl mov popf test jb jbe rcrl or sar bound cwtl cmp pop adc mov jmp test add dec xor xor xchg inc cmp lret adc sahf cld js lahf iret mov xor push lock (bad) jmp movsb cmp pusha cmp daa hlt sub cmp or adc dec cmp mov fidivl cltd and daa shrl mov rcrb mov xor add add aas and and pop mov jmp (bad) xchg jecxz ss inc adc ret les jns push std fwait pushf iret dec and out push mov in mov leave lods test arpl mov and ss cmp jp inc or xchg fsts (bad) xor jbe,pt add mov or aas mov mov inc outsb mov clc push push outsb push (bad) adc jbe in jbe aaa cmc imul sarl cmp cmpsb mov pop bound scas adc (bad) (bad) xor pop dec cs loope clc add push popf hlt sbb int in jl iret inc cmp add in scas jl std mov addr16 push or fcoms or jle mov js (bad) shr stos inc fimull xor or lahf fsubs jmp out fcoml iret and addl mov clc sbb xchg cmp mov jnp jne pop mov pop add add cmpl ljmp mov outsl cmp dec add daa xchg push jo fisub stos adc push add js mov fist (bad) jg sub scas push pop jbe das out and cmp jecxz pop and mov (bad) jmp fnstsw sub add push mov add pop push cmp cmc push int3 lahf adc arpl jnp leave jle or mov mov pop push test dec daa and jg sbb (bad) xor sbb rcrb pop pop pushf imul xor orl and fs int popa mov add add jbe push repz (bad) lret sbb and out movb cmpsb adc push xor flds sub jo dec pop (bad) lcall mov sbb jo pop sbb hlt rcl out incl outsb shrl push dec sbb nop js fisubrl mov stos mov mov push fs mov adc xor dec jb push ret fdiv fdivrs push mov jnp stos inc mov jmp cmp or (bad) imul jns int mov scas push xchg mov mov js,pn or xor in mov shrl js add jl add dec and push ret jp sbb mov or jecxz cmpsl xchg cwtl dec sbbl pushf test repz sbb jne or mov sbb cmp and rcl cmp or addr16 adc adc inc add add push cmpsl sub js shlb mov imul pop or add in xchg je idivl mulb pusha mov lock mov and or test xorl movsl inc jmp mov jmp rclb roll int3 flds dec out or dec pop lods icebp scas push inc or loope lea mov int3 sbb add mov jle pop out add test loop dec sbb adc mov adc jne lret jno dec push jbe or cmc fcoms jo add or sahf adc mov and imul mov scas jo icebp rcrl pop adc iret mov or push loopne (bad) mov loop popf push sub pop jmp mov adc jbe jg arpl fs and pop cli sbb lahf dec sub add (bad) lock sbb rorl outsb ds pop lret sahf sahf cmpsl cli push mov sbb sub popa add jbe mov pop adc sub in gs jo (bad) pop jg inc fwait in dec mov (bad) call jbe pop pop mov mov inc sub jl jnp mov xor add add into in data16 sbb das pop ret jae mov test pop ljmp lea pushf lret xor pop lret jne mov dec std mov push pop (bad) or imul jb xchg xchg loop cltd (bad) and dec cmc and out jg adc popa fild shrl das sub push adc add out jle push nop mov push jne stos jmp inc scas movb push sbb imul pop repnz sbb push cwtl cltd iret or rcrl jmp mov inc mov push test inc sbb dec popf jnp bnd cmp cmc test popa lret lret fldcw arpl fdivrl dec negb mov adc push jp xchg push add and aas (bad) mov add xchg out addb aaa dec xchg push xlat push sti and ss js int3 jl lea sbbb jg movsl dec je push sub push add add clc jmp xchg and ret aad mov jge lock sbb pop test out lds or jo pop shrl push mov fcmove test push mov js add in lahf negl fs repnz data16 add lcall lea add add dec repz push pop mov or in aaa es cmpsl repnz leave and ss and movsl xchg cmp adc inc push xor pop adc sbb pop fild mov stc or mov adc and fwait sbb popf lods mov aas pop pushf add out outsb popa sbb cmp mov daa lret mov data16 jecxz daa call and mov xorl jnp (bad) repz andl adc mov out repz jg push bound mov scas js,pt or jmp in push cwtl leave dec ss push arpl sbb (bad) jo pop add fisttpll (bad) mov int in and fmull jp xchg scas clc sub lods and (bad) (bad) leave jbe pop pushf pushl cwtl sbb mov inc mov jno mov adc sar pop push sbb jno push loope gs rcrb add add ret test add xchg jle fsts test inc jnp mov js sbb xchg jnp cmp mov data16 adc add inc insb pop ret mov push aas or mov jns imulb fs mov adc mov cld insl xor dec lret add mov rcl or cld loop cmpsb ret mov mov clc lods mov mov cmp jb jno test rep dec adc icebp mov clc ss aam sub adc mov (bad) (bad) scas insl jg out xchg aad aaa ljmp mov out popf in add add cli ljmp call shlb fldcw lods adc push jbe not (bad) in mov adc or out add push popa and add add jb std repz jno pop mov imul out sub test add (bad) jae xorl idivl dec xchg stos mov rcrb outsb inc inc jl add mov adc lret int xchg lods icebp test rclb push (bad) (bad) fstpl movl popa adc mov mov icebp int or or add clc stc les cmpl inc ljmp mov adc repz mov pop push inc adc push cwtl dec divb adc xchg arpl leave repz int3 nop iret inc cmpsb test ret sti dec sbb fwait icebp inc imul imul push sub mov (bad) in xchg sub mov add dec cmp sarb cld shrl lret scas xchg or (bad) xor and hlt pop inc sub outsb ret lds mov out mov pop sub mov inc lret adc lods jb xchg dec dec cmp jmp (bad) and mov or add add cmp test out sti (bad) sbb mov push out or loopne pop das adc lods ja xchg add mov and pop loop or and int3 mov mov fs sbb jle xadd addl push enter or xlat js inc enter add lret mov jae loope jge mov popf xchg stos call je mov cltd xor push cld pop insb fimull daa cmpl hlt (bad) jnp rolb push jmp fwait adc add inc fcmovbe addb (bad) lret cld add xchg scas xchg jp adc idivl push xor addr16 flds scas insl mov mov push push nop pop mov test pushf shll add enter fistpll xchg inc movsb push push sbb pop test add cmp inc roll add push jbe ja pop in outsl lahf fwait sti pop sbb cmp add sti int3 inc cmp test and test das out nop ja cmovb mov and mov addr16 jg add jle or sub les add jns leave mov sahf and iret fcoml pushf or xchg cmp adc add or sahf repz leave mov push pop mov sub je push jp outsl dec rcrl adc xchg push sub sub mov leave aaa repnz dec mov stos inc aad pushf cmc pop pop mov push add add pop jp sbb pop pop jb mov xor add icebp (bad) mov hlt and in xchg jmp push jge int dec sbb xchg cmp push out sub ljmp fdivs push aas test mov fsubp mov or call outsb int mov xlat sub add rol paddb mov jmp push aas ljmp jnp fwait enter arpl cltd movsl int inc shll into dec or outsl cmp stc xchg or or mov jbe cld add xchg cltd jmp pop mov cmpl jecxz out push mul psubsb add jb adc pop shl iret fs je mov pop test push push push add (bad) std int3 scas lea popa nop mov imul aaa dec imulb in mov jns std js pop test ret cmp sarl data16 in pop push lret (bad) jecxz lds dec mov jmp (bad) pop mov int3 pop (bad) jbe xor inc cmp and clc mov pop or pop mov jl pop shr mov lahf ja or pusha in test (bad) sti xorl loopne loope or loop das push js xchg and or and pop adc shr (bad) xor cmp or dec mov jnp je pop (bad) icebp push push jns or add out (bad) cmc fcoms bound jmp iret xchg test add lea add incl shll insb inc inc aad pop pop sub movsl push fidivl imul lret (bad) test jnp add mov sahf fildl dec and and push fadds cmp in leave mov jbe jge push mov or (bad) cmp mov mov gs and dec jl adc roll notl fcmove lahf sbb enter lret mov add mov aad cmp test add inc repz cs (bad) and outsb (bad) insb inc push jp test mov outsb enter mov and fwait inc xor jns fdiv jle jg pop or and push add gs lret pop pop sbb cmc (bad) repz adc jbe xchg push int add add mov rcr ja dec cmp adc push add dec cmc mov add mov cmp stos pop fstps mov nop in cmc cmp mov cmp jg adc cli aas xchg mov sbb lds or je or add and lahf xchg sub xchg lods mov push fwait jnp pop push sub add push dec and popf jp lret hlt mov loop lcall push mov mov negb mov rcll rcr and fwait jecxz iret pop stc es std gs add mov ja pop in faddl sub inc (bad) jae (bad) lret push test jae jo addr16 ret sarl xchg pusha js sahf (bad) aaa aas test iret fldt fdivp pusha arpl pop js pop jbe mov stos movsb jmp or fdivl jge push push push push jb test jb and jmp mov loopne cmpsb clc fldl inc cwtl mov xchg lods ret hlt faddp inc es cmp jno push psllq cs and clc cmc sub fstpt stos imul addr16 cwtl daa out add mov cmp inc and add pop test pop cmovno push orl in xor or mov push das orl cmp xchg sub add insl mov jg add fildll imul cli push sar dec call mov sub adc jnp sarb pop inc cs cmpsb xchg cmp repnz sbb (bad) mov (bad) or push pop das roll inc outsb (bad) push xor into icebp jecxz data16 movsb inc incb or rep iret (bad) fs cltd jp adc pop jb repz add jns sub mov aas xlat lahf (bad) mov call pop pop loopne enter test jge fiadd bswap add push insb add dec sbb sub push sub stc jbe jns add xchg push daa sub test mov das out test mov jno dec ds aaa inc stos xor je jns dec aam xchg (bad) mov adc adc mov dec fisubrl rclb roll aam jecxz pusha in inc xor sub sahf cmpsl icebp and stc mov in loopne mov add mov ds fs pop nop js mov sahf and addr16 lcall inc ret sbb jg cmpsb sbb adc sbb adc adc pop pop shl or enter pop ret rolb mov fisubr inc pop test mov sbb add add dec (bad) enter add cmovg int3 xchg shll mov mov xchg js and fdivrl sbb jle insb in xchg mov jge jno xchg xchg notb mov mov mov mov cmc sti mov fs xor jns add add pop (bad) pusha (bad) scas (bad) xor stc (bad) mov dec mov shrb cmp mov xor xchg add data16 sti adc lock loope inc xor mov inc adc call and xor push outsl add add adc inc mov sbb dec insb sbbl add into mov js pop sbb loope mov pop sahf nop dec and loopne cmpsl adc add sahf test sbb cmp jle xlat mov inc loopne mov sti push pop inc arpl add inc dec jl sub je sbb enter enter push sahf sub aam into (bad) pop cmp mov dec jbe insb push into sbb dec and shlb dec adc inc pop scas test mov mov pusha and and push xchg outsl mov push xor fistp pop cmp add gs jns pop lea ds je fildll repnz outsl sti adc test fs jmp in jae xchg push in jg,pt dec adc cmp add jge mov movsl test std fisttpl (bad) clc pop push mov gs jecxz cmp fimul (bad) sbb sarl xchg add add ss jle cld and dec xchg xchg add les jle mov dec (bad) jbe mov sbb movsl or or adcl push js (bad) sbb sub pusha dec gs adc popa mov lret fdivl add add and pop dec cmpsl loopne (bad) into popf out punpcklbw xor pop int3 lret test xchg int ficomp push in cmp and (bad) enter pop ss in inc jmp and jle dec jl popl jl pop lock fnstenv xchg addr16 dec (bad) scas call pop out pusha xlat jg fcomps pusha push dec add add test fisubl andl test sub pop sbbl mov jmp mov adc dec fisubl mov (bad) mov mov out push push xor (bad) in pop sbb inc lret adc aas jmp cmp (bad) fistpll adc xchg pop ja push mov fcmovnbe xchg inc jmp adc cmpsl jne nop lods stos cli pop xchg jge dec insl mov idivb push and push data16 rcl mov repz ficoml in xor ljmp lds adc cltd js adc add add add add cmp adc cmp and mov scas mov loope cmp pop loop cld in jnp cmp cmp jb clc lds dec dec fisubl push dec sbb push lret outsl mov enter inc xchg scas pop dec nop add popl jns sub (bad) and mov pop scas outsb hlt dec adc cmp jp and mov scas inc cmp addr16 imul sbb incb out int fwait and inc sti mov ficoml mov jle pop or test pop xor add add sbb stos in sti aad call pop mov std adc adc mov push or sub sahf push and fidivrl sarb sbb mov xlat pop sub jnp cmp mov notl mov outsb add mov or inc sub add add pop add loopne cmpsb cmc jmp mov add jb sub in xchg push lahf jno sub jmp int3 int add (bad) dec adc repnz repz out lock imulb push and out xchg rcrb (bad) repz loopne adc pop inc pop push and add add push push call aam cld xlat hlt pushf cli adc xlat jb fdivrs push stos and sti dec xchg arpl sub scas addr16 lds xchg lret xlat inc imul jl sub xchg ret mov stc push int3 fsts iret xchg jns inc sbb pop cmpb fsts mov add fist mov mov inc pop mov mov xchg and mov sbb gs jno xchg or into add ret inc and in ret mov mov lock sbb adc aaa push xorps xchg mov outsb scas stos movsl push xchg adc add add leave test push out inc xor pop ret ret test xlat (bad) sbb in fcmovbe cmpl stos lea lahf outsl sti mov mov push out rcrb push jge invd mov stos js (bad) pusha imul mov lds data16 push push fcmovnbe jecxz stc hlt data16 xor add loop adc add mov jg fsubr xchg loop sub jle add xor test inc push jo xor (bad) fisttpl mov ds push jg std data16 and enter lret iret or push and and jl add xchg push mov call adc ret cmp pop add data16 mov fcoml fstps xchg mov xchg cmpsb sub sbb sbb (bad) dec adc das mov ljmp pop test stos (bad) fcompl pop popf sbb sub iret adc jg pushf scas cwtl push push imul ds cmp sti xchg xchg cmp push sub in out add sub adc popa push (bad) jno jnp jmp add cmp mov stos xchg or das insb cmp fistp aaa inc mov lret jg pop xor lea mov dec xor dec cmp sub xor lea jge movsl or dec dec inc push mov add add jns or jle aas mov icebp adc rorb mov out mov ss mov insl and or out cmp jp jns movsb cmp fstl jne push fist jp add mov (bad) movsb adc mov adc out and ret loopne jmp add add push (bad) sti enter mov mov je dec (bad) pop and (bad) adc jo lock test lock out jmp loope jne sub add outsl addr16 (bad) cld sar test jne leave sub or bound das (bad) test je add (bad) rorb add add pop adc mov (bad) testb movsb (bad) sbb sbb mov ljmp jnp int mov xor jmp push adc pop outsb icebp jno inc xor cld pop out inc xor (bad) or and sarl fldln2 sahf test aas jbe add push sbb popa ret push add fidivrl xor movl jbe jmp enter xchg movl xlat repnz pusha pop mov jecxz icebp cld jecxz loopne mov push dec push add pop push mov jno call jo or stos loope xchg ret add push jb stos xor mov ss adc sarb lret loope mov ret stos (bad) adc stos dec rolb dec sub repnz pop test repz cltd stos pop mov lret cmp xor xchg imul fldcw test xchg ud1 cmp pop outsb mov add add add jae pop xchg dec pslld aad sbb int3 jno push and int fs aad mov stos lcall mov ret add lcall mov imul scas adc xor or imul push mov mov sub xor xlat jbe add add inc push test fstpt gs jle adc cmp cld pop mov fisubl fsubrs je pop jno xor or and fcoml movsl cli movsl jbe and sub mov xchg aaa and repnz dec in cli js lret lds enter mov add mov add add xchg xchg ds in push ja sbb loopne outsb adc ds cmpsb pushf popf and (bad) jmp or inc cmc fiadd jo jo pop test add scas add dec daa inc xchg xor xchg arpl xlat fstpl test jbe lods cmp negl mov les and add push sbb pushw lds outsl mov xor mov push test inc scas (bad) or mov stos cmp in add pusha xorl ja xchg and mov aas xchg insl lcall lods dec xchg dec call mov andl ds or sbb (bad) stc add (bad) dec (bad) adc mov add mov test outsl sbb outsb dec dec mov push loop out fdivrs out push mov imul jg mov jge adc mov sub fstpl aad sahf mov (bad) xor cwtl gs scas in rolb (bad) lea cli outsb jmp pop in sub pop sbb mov rorl mov fwait or lods adc (bad) xlat das cmp popa (bad) insl push lret jno xchg js and aas fdivrl adc lods or outsl adc cmp test cmp jne cmpsb jmp inc scas (bad) jp insb dec les fsubr sbb or adc add add into pop call jmp or dec orl adc (bad) cmpsb jge in dec jbe (bad) mov enter cmpsl into movsb pushf mov cli or (bad) loope xchg enter out sub push pop dec int movsl mov pop pop aad stc cmp std jne and jo mov add arpl lret sbb pop adc das popl sub es das push ja mov push sub xchg (bad) mov and or xor xchg loope add stos mov add or ss sbb test add test test jle push stc push (bad) call mov push stos add add add add stos mov loop fsubrl dec (bad) sbb jns pop subl inc jmp (bad) pop test mov in pop mov dec sbb fbld mov cmp push loop cwtl pop xor push sub hlt popa mov inc adc (bad) imull adc dec pop inc into pop outsb loop fist cli xchg add sub pop adc push popa nop outsb jmp aad shrl lret xchg repz jg sti dec jae jo xlat into xchg sti add xor dec (bad) jg cwtl arpl and xor shl xor cmpsb (bad) jo mov fiadd sahf sbb leave int3 ds add add jne cmp mov pop (bad) mov dec sbb cmp pop jecxz mov xor roll aam mov inc repnz mov dec fadds scas imul mov add outsl dec adc fwait lods cmp aaa push icebp shl adc dec xchg cmp cli jns cmp mov xchg inc addr16 mov and (bad) pop jbe add jmp stos (bad) aam adc aaa js arpl adc dec inc (bad) cmp push inc js popf pop pop dec and add sub out je lea hlt mov and in fadd popl pop cmp fcmovb and aaa loope pop jbe loope hlt sbb icebp jl mov xor fwait sub xchg lahf pop mov out (bad) fnstcw sub xchg mov mov ror call pop sar scas jo jo xchg push imul fisttp push mov push les add add enter int3 ret popf pop aaa push icebp adc subl sbb pushf (bad) daa lock adc sbb sbb repnz pop mov outsb push add pop xlat push adc lcall push mov jne pop push jge and outsb fadds mov adc dec jne repz pop jge aas or add sbb jo ficom mov xor xor mov shlb mov pop jg stos (bad) les scas jno sar inc sub mov push mov inc ficomp pop lods cmc daa mov (bad) insb sbb cmpsl sarb xchg (bad) enter imul cltd movsl adc fwait add (bad) lret js xchg outsb cld dec jne dec in cli js inc sbb dec pop jp jecxz push sub xlat mov mov add cli adc dec (bad) xor push push pop pop enter mov jbe lods pop mov leave popa xor xor insl jl cmpsb xorb add lahf jmp or push loope cmc repz xchg (bad) (bad) shl dec sbb (bad) shll mov xchg loopne pop fcoms jno cwtl cmp orl xor call mov mov aam ja jmp mov and jbe mov enter add add ss inc cmovno dec pusha in cltd jno mov jp inc push adc push mov mov (bad) sti push sbb ljmp mov ret sub fs inc or cmp cli sbb add add daa mov xchg (bad) mov xor add push xorl pop pop or sub push hlt sarl sub ljmp nop xor mov pop punpckhbw xchg and sahf cmpsb (bad) mov test mov gs cmp add and les sub mov push mov push jbe add add mov add dec mov (bad) mov rcl mov and test mov cmc xchg inc dec mov xchg mov sub pop (bad) test jbe xor mov out sarb test in mov jne arpl adc dec out cmp sub stos nop or cmpsb andl add add add inc ljmp fdivl into jne int sahf mov jnp enter jb into gs mov and jl loope and xchg mov data16 jnp ror cs or sbb aaa add mov xchg sub mov adc jecxz aaa imul dec roll ss and hlt (bad) mov xchg hlt sbb (bad) mov inc imul mull xor test mov inc jne (bad) (bad) insl test sarb xchg scas mov or pop pop (bad) and je xor push adc cmp jno and test daa sbb aam pop mov test (bad) push jmp push add dec insl mov add popf and or and push pusha shlb jo sti lret lret adc leave testb popa fcompl arpl sti mov xchg pop add inc sub stos lock add add fistl (bad) cmpsl xchg cmpsl dec xor cmpsl adc or rol mov push aas int3 inc add xchg sbb (bad) hlt sbb xor clc mov mov les and add jg sub mov sahf in or mov stc or lods ss xor jl sbb sbb add cmp fwait in repz fcompl adc mov (bad) popl xchg jge dec insl mov incb sbbb popf inc les push bnd rcrl add jmp enter cwtl popa mov adc ror push fistp out nop add add je push fidivl jns or (bad) cld xchg push add push test fucomip inc and je mov mov cmp jecxz test (bad) inc inc xchg xchg jl jo cwtl jg or das dec pop in jp,pn dec (bad) mov lods jmp in fimull in sub cmc cmp int or add add in test sbb add mov mov sub jb fsubrs sub repz mov aas mov mov sub or in neg pop jno jmp movsl jle sbb imul dec ljmp and into jb xlat in adc call and add adc idivl xorb inc (bad) mov ret sti dec lcall pusha mov jge adc and lea loopne fmuls cmpsb lret mov mov jmp push stos stos jecxz sbb movsb dec add repnz cltd cmpl lods mov add add (bad) mov lods mov inc aas call loop aam sti cmp or pop aad add cs cmp (bad) jns or add lret push push mov test in mov push call je xchg mov scas std lods in jno mov xchg test xor add faddl jle add pop (bad) ss mov stc rol js or ret rolb mov jnp adc sbb nop pop push inc rcll jnp adc flds sti ret xchg sub add push mov and xlat das imul insb push dec or test cld pop inc rolb jbe inc sbb add (bad) test cmpl push divl std bndstx lahf stos mov aam scas mov mov pop fidivr inc sbbb js or in popf inc dec les cld (bad) outsl inc pop add push mov fs je fwait push aam push mov add insb and popa xor dec add cmc inc sub sub sbb mov xor out sub sarb lcall sbb int daa lret xchg mov ss push cmc push pop arpl stos nop cld test (bad) imull jae gs ret sbb jg xlat das imul outsb scas jecxz xchg loop icebp xchg cmp and jae fidivl rcrl mov cmp out divb inc jne loopne or scas (bad) cmp insb sub clc and xchg popa in int cmp in push dec imul jb mov sub mov sar lods mov xor cmp dec adc and push adc outsb les cmp (bad) ljmp pushf pushf fs push sbb repz rcrl sbb add or add cmp leave out sbb fistl subb (bad) sti and stos test add add jl subb add les mov in cmp push pusha cmovp aaa cmpb inc scas add loop insb add rcl mov jmp xor dec sbb add dec sub into jecxz pop mov sarb fnstsw adc jne add add push lods icebp and push mov dec sub lock pop fs cmp lods into fiadd push xchg aad outsb lcall xchg rorl push sub dec fist scas and mov rcll aaa jle (bad) xor mov push fbstp push in gs pop cld in repnz std stos add add or or mov push arpl and (bad) rorl jne pop lahf xchg cld inc fsubrs cs ljmp mov bound inc (bad) xor lea jle push popf mov xor sbb test scas push push loop cltd or inc mov adc sbb push inc popa add sub xchg mov mov pop test insl dec repnz mov push cmc into pop push inc xor imul xchg clc ljmp (bad) nop in xchg sti cmpsl sbb xor mov jnp loop xchg outsb and xor sbb xchg inc addr16 mov mov fcompl lahf pop and (bad) pop add add or adc std (bad) (bad) hlt pop xchg in xor or aad push and xchg mov sub sub cmp idivl adc aas or popa dec vmread data16 in lcall push ret inc mov mov sub mov inc jbe add jne hlt inc inc das pop in cmp test pop daa subl call add pop xor xor aas sbb jbe lcall out mov lea movsl mov mov icebp int3 or fstps add test in dec cs cli psubusw mov out pop int pop pushf popf test add (bad) lret and mov xchg push push sti jne and roll or mov mov in cmpsl ds stos sbb je js adc mov loope dec (bad) cs in push dec and jne mov cmp add add in aaa inc stos fsub fsubrs (bad) popf call rcr sub push mov sar xor mov frstpm(287 dec fisubl add dec es mov pusha (bad) sbb lea xor sbb movsl or clc cmp mov stc (bad) jae or movsl mov mov icebp int3 or add aas fstps add test in shrl popa mov sub jnp jg inc icebp fstpl fdivr call lcall push jno cltd push push popa nop (bad) in ror nop pop xor mov in out cmp scas sub lock add jne add push push push in out ja fnop iret push das loopne and push stos jno xchg xor loope jne push daa jge (bad) call push mov cmp push sub cld add insb ja ss imul movsl rclb roll mov (bad) sbb mov mov add dec rolb dec es lcall lahf movsl dec dec push push leave outsl sbb ds gs pop pop ret and (bad) lods nop mov mov addr16 inc ljmp mov dec or jl xchg lret pushf mov push es addr16 imul movsb icebp fwait jg add mov xlat test and xchg mov (bad) (bad) cmp and jecxz (bad) aaa add dec adc pop sub mov mov stc push sub (bad) aas mov cmp cltd dec js nop cmp insl or inc loope inc pop jl pop stc es dec addr16 in sub pop ret add add loop or ja push inc repnz lcall (bad) dec pop sbb sub jle nop inc ljmp addl fwait sub mov jno loop push (bad) in mov push push jb sub lds (bad) sub movsl mov inc and or add xor out push xor aaa sbb xchg jge inc mov ljmp jbe scas icebp ret in pop sbb imul (bad) mov mov das scas into das imul jns stos jno ret out mov inc pop pop dec clc mov (bad) test outsl xor mov mov (bad) xchg cmp stc cld imul arpl (bad) xor xchg ds mov aaa pop ret mov test movsl pop jb lahf cmc push inc push dec cmp imul pop mov fwait in sub xchg scas (bad) aam push inc xor add loopne inc movsl jle sbb imul add add jb out inc or dec mov pop push lcall and adc bound or xchg dec sbb popf push in outsb cmp sti (bad) mov ret rcrl or inc xor adc data16 in xchg (bad) cmp mov push cltd xchg (bad) sbb add pushf add mov xchg and jl stc mov inc scas mov sbb js les js scas out fucomp (bad) sbb xor mov hlt sbb xor or cmp out sub in aas push std jo out lds fs push mov sub add icebp or pop out pop (bad) lret jmp outsl scas stos cli push xchg adc fnstenv add repnz test mov and sub inc jb mov sbb aaa push in add jl push pop and inc sahf lods inc inc jnp jb loope mov cmp addr16 or push jbe jg (bad) pusha pop jb mov mov lock ret dec bound fcomps js andb cmp adc add leave push loopne repnz jnp jb mov sub shr fs imul out add adc push (bad) std mov dec pop adc js cmc or lods cmp test dec adc loopne jle cmp push and dec mov push add push loopne mov pushf mov pop pop fmuls imul push fiaddl test push push shll ret outsb sbb fidivrl fcompl jne add add add rcrb (bad) je pop push cmp and jnp (bad) jno out cmp dec mov dec push push push jecxz test mov test mov sub mov test inc bound mov pop cmp outsl pop pop test add call adc loopne call push or jl getsec cmp xchg (bad) fwait lret jo xlat (bad) fs dec fwait out dec xlat jp aad inc aam pop mov loop adc addr16 fcmovu add lock mov push movsb pop (bad) incb repnz jecxz cltd lcall adc add xor (bad) outsb andb jnp jmp jnp stos sub shl cmp test xchg loop rcll mov sub ljmp fmull cmp push push inc stos mov xor je jge aas ljmp das push mov dec xchg jg and add add add pop lea fwait mov sub cmpxchg int lahf xchg (bad) mov cltd movsl pop push sub cs cmpsl dec rolb xchg adc test aaa jae xor push inc in lods rcrb int3 mov xor loop jnp scas rcll pop icebp leave sbb pushf dec mov stos (bad) int add pop pushf push out pmullw push (bad) mov mov (bad) adc (bad) mov (bad) mov pop popa nop add mull xchg xchg movsb repz xchg repz xor xchg lret jg push push (bad) mull cmpsl mov in mov mov push clc jecxz cmp adc pop xor jl add sub xor mov mov sbb push bound int3 insb add clc jp xchg cmp int cmp in jge fsts add mov adc dec sbb xor dec in (bad) jle int out iret fwait and fdivs mov sub xchg xlat pop jp loop push mov add aam test push lods repz cltd pop and pushf adc inc add mov (bad) stc push mov and jb bnd jmp icebp mov dec loope xor xchg inc aas popl inc outsl lods test mov std js pop mov jle or data16 fistl lods inc mov ja xor cmp pop add clc mov call mov cmp ljmp rcll bound jecxz arpl int3 xor cmpsb push inc aaa leave repnz ss es xchg add fidiv adc or pop test repz add inc sbb cmpsb sub cmc aam push jp jmp xor and ror loopne,pn jns popa mov dec sbb inc sahf imul std pop add xchg mov pop add int xlat lret xchg mov (bad) adc cmp sbb add add cmp push out je fstpt mov and dec daa scas and das xor mov push loope jne hlt xchg gs nop cwtl mov xlat and les or jb mov ficoml cmp push movsb mov roll mov dec out xor enter mov or sahf imul and xor xor insl or aam pop mov aam push icebp lret dec cmc out imulb lods sti ja test adc pusha sub (bad) sub ficomp jle and rorb and sarl lcall add add lods add ror xchg fwait mov sbb sbb xchg xchg ja dec add ret cs mov cmp test lahf scas sub aad mov aad fnsave (bad) jbe jge scas mov loop (bad) xor cld inc cmp repnz push push dec xchg cld add jl pop jnp add add add add dec xchg out cmp cmp xchg or cltd dec add or and into pop sub inc xchg pop outsb inc push clc (bad) icebp mov dec mov inc sub lret cmpsl incb lret es sub (bad) out or pop jae int ja cltd and adc cld jns or push lret and dec push cwtl in mov jge les ljmp rcrb push jl jge mov stos push push add sbb out je mov add and pusha fmull cmp mov mov or (bad) jbe xor push pop mov add add (bad) add mov dec xchg cld add movsl or sub les sub mov pop push test sub mov lods icebp dec mov leave imul arpl ret pop add pop aam push (bad) ds mov sub cmp loop inc loope out fxam jecxz ja pop in loopne sub repnz out (bad) xchg sub arpl dec dec fildl out xchg xchg cmp sarl pop xchg rclb fisub int3 pop repnz mov xchg sti dec sbb lods nop lret out xchg cmp push cmpsl mov data16 in push (bad) nop iret fistl push nop and sub insb mov (bad) xchg push aam xorb in popa mov pop insl fwait outsl sarl push fs fidivl test xchg mov mov lcall or lods icebp pop pop cmpsb mov inc imul xorb mov xor in add add fstps mov loope loope es jbe repz sbbl ljmp gs pushf popf and in pushf cli dec pop and and jo (bad) aaa andl or js js jp sbbb dec movsb add sub cli (bad) xchg cli push xchg cmc fwait push rorb add add sub xor cltd cmp add jecxz rcrl cmpsl dec xor fdiv add xchg ja in or sub jnp jle add orl insb add add push sub dec cmp dec rclb icebp mov adc sbb cwtl lea add int adc lock std or or dec pop inc dec adc cmp xlat arpl xchg test cld cld inc or outsl mov ljmp fsubl (bad) ss pop stc cmp sbb add in lret adc jne inc mov pop adc in cmpsl cmpsl add mov stos test push leave pop ret jmp stos hlt mov jmp fcompl mov mov mov test mov out xchg mov dec bound adc sbb fwait xlat mov pop inc sub xchg ffree mov lods push mov fisubl imul aam sbb jge add add xor add jle jns imul mul inc cmp aas fdiv sbb cmp pop mov lea jge inc pop sub fwait (bad) imul xchg xor xor outsb push pop out leave jl dec adc divl dec (bad) and push add push lret and pop jo iret movsl sahf adc decl push (bad) repnz ret xchg xchg push aas std aad jbe mov inc insl sbb dec mov mov popa mov pop xor inc andb cmpsb add or xchg mov ds out sbb popf outsb insl addr16 dec repz sub inc add add les add mov push pop out mov aad mov leave movsb cmpsb push jmp ja xchg mov adc sub mov fcompl mov decl ficomp push popa xchg jmp dec lret or sbb lcall pop push ficompl test add add mov jno xchg rcll jp subb jb pop mov adc xor (bad) cmpsb mov lret xchg mov xor aas inc nop arpl repz xchg cmp imul add and out je scas mov push out (bad) notb jno add stos mov fiadd add mov call or popf outsl into mov mov stos mov inc and scas lret or in dec cmc sub xor and xor jg inc pop sbb sbb inc lret jb les cmp xchg ds jbe addr16 mov lea add dec pop hlt pop bound add add adc dec xchg loop sub sub sbb pop dec adc (bad) aas jmp xchg add test test push add dec lret push inc cwtl in xor pusha push enter dec fwait push push jnp aaa test sub fistl ret subb call fild add add or adc dec xor xchg pop sbb stos cmp insl sbb xchg test mov daa in or cltd movsl push dec xchg cld add xchg ja pop shrb nop sbb push insl adc lods mov dec ret mov aam fild add in mov (bad) jnp xchg imul adc (bad) push pop cmp sarb pop mov negb movsl fwait aas xlat dec popa mov mov stos sub mov in mov jge das shll adc mov mov mov sbb push adc ljmp je push dec sbb push jle add cmp push cmpsb imul (bad) pop inc cmpsl (bad) popa and sbb (bad) mov (bad) jbe mov out push (bad) jno xlat sub je or call push test enter xor in pop sar dec (bad) sub add push jae mov lret jp ja lret push rol std enter data16 call inc popf out jmp cmp mov pop int outsl insb dec pushf (bad) sub jns push test mov cmpsl loopne inc or mov jns sbb pushf mov mov lret add add add mov xchg jl test dec fwait rcr arpl das push adc es cmc push jnp insl jmp inc or push mov adc xor pushf pop pusha push shrl es sub test pop xor mov push cmpsl ret (bad) and pop hlt cltd or roll dec cmp fcmove sub inc sub pop (bad) data16 enter cmpsb sub adc pop insl movsb scas addr16 add fcmove sub mov adc inc lret imul ret dec addr16 cli mov jl lret jmp xor mov cmp mov xchg inc xor add xchg push gs add pop or cli fwait push cwtl out jb sbb sub jmp test pusha xor movl push mov push loope test push std fildl out (bad) sbbb mov sub lods mov out or inc add popa add movsb out dec mov jbe cmp xchg (bad) cmp and cmp lods xchg insl cmp lahf xchg xlat call (bad) mov jmp adc lods jp pop dec dec insb (bad) ret fld aaa xor inc push or out dec and les inc xchg pop mov sub imul add add jno adc cmpsl sub mov adc popf mov jbe push push mov sub and mov ret mov lcall fistl fstpl dec dec decb push sub mov cmpsb daa pop adc data16 adc cltd lods push or aam fucomi inc cmp das imul add push bound (bad) fcomps push mov xchg orl cmpsb xorb jne out sub inc sbb scas and sbb mov pushf jnp mov popf (bad) mov lods fwait and cltd addr16 lods xchg inc mov (bad) fstl js movsl dec dec push push int3 or inc aas mov out and imull outsl int pop inc loope (bad) mov in push mov cmp pop mov stos pushf mov pushf push out or ja mov out pop mov lcall sbb add ja jno jecxz mov jns repz add add push js jbe or cmpsl mov push lcall cmp out int3 add jno pop test ret dec fidiv popa push or xchg (bad) imulb mov cmpl and dec mov jmp shr jmp xor push clc call adc cltd es mov add ret cmp inc dec andb jecxz nop imul lret int adc xchg inc inc mov xchg mov jp jecxz add (bad) mov popa and push pop dec aaa cs xchg inc ljmp fcompl pop fcomp mov ljmp xchg cmp inc stc dec lret jmp mov add add arpl popf cmp cli (bad) pop shrb cmp push or iret aad mov sub pusha pop and data16 js push sar aas loop aad cli mov fidivr stos inc arpl lods test and inc cmc sbb cld push gs int3 and jl sub xchg mov mov les lods bound inc jnp sub call (bad) sub shl rdtsc xor movsl add lcall sbb dec lret out xchg cli or hlt push xchg adc dec rcll pusha fdivl add xchg pop pop inc je clc (bad) fildll push pop popa adc lret and jecxz sub lret loope cmp mov sahf dec lods adc jmp (bad) mov js cmpb push in mov imul lods dec xor dec cmc or movsb mov rolb xchg lods fs ss ficom add push mov sar or clc aaa xchg pusha xor stos ja out in std into jecxz js or aad (bad) sbb xor repnz rcrl adc dec jbe cmpsb dec add dec inc push or int inc fwait mov push (bad) ds fs mov jge loop fcomps fwait in cmp clc stos pop add add mov std movsb or mov pushf push out bswap push xchg or stc fmuls jg lcall mov mov jo fs out shrl sbb js stos add dec fisubr cli mov cmp push roll xchg push sahf mov das es das imul cmpsb ret cmp add lods aad outsl (bad) mov sub in mov pop data16 mov cmp adc ret inc out mov imul movsl sbb and adc into dec in adc jno inc xchg lods jp fstps cmp mov (bad) mov (bad) test test sub xchg jb mov nop sub sbb movsb nop mov jno dec mov add mov inc lret lds add xlat jl pop jg xchg sub jge neg cwtl (bad) jno (bad) or inc mov lcall pop test repz mov add mov add sub sbb pop mov in adc and dec ss ss stos cmp mov cmpb loope xchg dec cld adc mov imul ficomp icebp mov mov dec (bad) fcomip mov lahf xchg xor imul lods mov add mov jns or cli push js inc inc and into into sbb and dec mov (bad) xor xchg repnz push cld jbe cli or and mov decb stos pop and and pushf xor add fldl dec jo push call mov nop mov movsb dec push ds dec add push inc jnp lods mov mov jbe dec or outsb sub cmp push iret cmpsl andl push xchg cmp or dec push sti cwtl leave xchg mov mov adc pause cld add fimull daa sbbl xchg xor inc push ret add add mov lea mov or aas cli inc imul cli lea xchg sbb push fs xor mov lods pusha xor leave ss jl bnd adc clc divb test pop arpl cmp xchg mov repz mov adc addl mov and fstpl fisubr outsb sbb mov out int imul mov sti mov jb sbb sti outsb (bad) sub mov (bad) iret jmp and jge xchg cmp iret add or sub add xchg lock mov adc cli mov push fisubl subl jl jno std add mov lea fwait push xchg int3 sub mov (bad) xchg dec dec imul int3 into adc pop (bad) jecxz jns add push adc jb lock pop dec jge dec rclb add add out leave jmp je push ja lgs fstpl das ret cld mov adc or test inc mov call test hlt iret inc daa std js popa fwait xor (bad) or shll loop sub (bad) out gs gs inc sub jl add lret xchg ja hlt mov push data16 mov and adc les js xor pop (bad) xchg mov loopne sbb pop sub nop sahf push hlt xchg fsts adc sub js dec in mov icebp mov fs adc imul add jg cli addl lock mul psubsb sbb mov xchg sbb (bad) lret cmp push inc add mov and push and inc mov negb stos addr16 sub add adc push (bad) mov movsb popa pop cmp push sub add lcall aad cmp dec std gs cmp lods (bad) jno dec (bad) fsubrs movsl and and or clc sbb inc push insl mov jmp inc adc sbb inc call dec or xchg xchg lret cmc pop jle mov je cmpb add dec dec pop xor cwtl mov mov popa call aaa or lcall dec clc ja in cmp mov ljmp loopne shll mov or cmp xchg jge pop stc pop dec pusha rorl enter inc (bad) aaa sbb adc jb add inc jae lods icebp push xchg jl bound scas call pop int xor sub sub push mov cmp push test xchg jle lock popa shll loope jle adc xlat addr16 or movsl fisub and jle adc ds cs pusha mov test sbb add out cmp into dec jno lods icebp scas jnp add cs xchg cmpsb addr16 and mov pop scas inc mov out mov out jb and (bad) jecxz push test mov and mov cmp cmpsb mov sbb pop xchg pop mov add adc push add cltd ljmp inc (bad) inc negl sub sbb push push xor ja imul adc mov aam push fimull es adc add xor add sub and lcall outsb ret add mov and in sub fsts imul pop cmpb leave es dec inc ret imull push or lds xor bnd xchg (bad) fwait push adc scas xlat clc add (bad) clc push pop leave jmp fisubr scas in add shlb xchg nop add add sahf sub icebp (bad) rolb sahf aam cmp (bad) push and adc and inc xchg pop fldt stos js rorb pusha xchg dec call add leave rcl adc mov cmp stc lahf scas inc mov ret jo adc add notl add ljmp stos mov loopne inc sbb test push bound xchg mov aas xlat xchg mov mov and inc ret es dec rclb outsb lods push jns orb push std or iret sbb mov xlat clc lds xor push adc leave push jmp add mov xchg leave cli or xor adc jnp sbb mov ret and nop stos icebp jns push push pop sbb stos lea pushf in xor (bad) mov inc ret out jp in jg lods adc std sti ret scas adc ja mov pop shlb in test (bad) jecxz daa out lock add aas or sti add fs mov push mov mov jg rcrb cmc mov mov pusha xor into fs sahf shlb cltd inc and xor in push jle movsl or icebp out and rolb add orl mov in fwait jp pop jle xchg scas subl pop stos mov cmp out add incb in jmp inc xor xchg das mov test dec push sbb pop push popa jae enter xchg inc fldt ss lea lock pop push roll add xlat mov inc pop xlat sub mov mov test jo test mov adc mov loopne lods sbb or cld dec and rol or adc jae inc test push xchg into adc adc test iret negl call stc je (bad) mov std (bad) aaa loope push call out pop int jp adc sahf test or loope in xor fwait mov pop adc mov inc xor pushf pop mov rcrl test xchg scas lods decl aad xor in rcr add mov dec pop push das ljmp push push xor or adc mov cmpsb push fstl dec and punpckhbw daa enter cli jmp test add insl push sbb in xorl aad insb add aaa jmp insl or add mov jbe pop sub sbb adc test pop int3 (bad) std xchg mov or xor sbbl sar inc int3 fimul (bad) adc mov adc (bad) or mov add dec insl js loop fs into and je mov add cmc or pushf std ret in cltd mov xchg lods pop enter leave (bad) dec (bad) sbb or push jae stos sbb into add mov test in out je xchg jle test and jmp xchg cld adc pusha and sbb call or popf cmp add add mov cmc mov addr16 and push push or aad mov daa push mov xor xchg es xchg std cmpsb int3 ja jo push test jmp js mov cmpsb lahf popf ret je sub outsb loope sti mov int push rolb xchg (bad) cld nop or btc rolb mov jo jne lcall mov pop push lods push sbb mov mov cmpl push jmp adc mov lds or add xchg jle sub jae lahf sub cmp jmp add cmp add mov call fisttp cld cltd fwait stos xlat jmp xor push jmp je movsl lea test xor push imul nop cli jp fwait inc fildl ds sub adc pop repz lea pusha add (bad) call icebp or pop lcall sarl loopne xchg push loop pop mov stos jg pop pushf push and or jp sbb orl fidivr push into addr16 dec ljmp adc pop push inc in jp loope dec sbb cli sti ret xchg pop cmp mov add add adc aam addr16 jnp fcmove jb lret (bad) insl adc mov cmc push clc jecxz (bad) xor cmpsl sbb in xor jne into jmp and leave xchg lret movsb lahf out mov fcoml dec insl inc jns cmpsb dec lcall adc mov orl sbb cmp mov adc pop dec inc testl and mov adc lock cs fsub cld sbb pop pop dec (bad) cmp jp push dec push push jmp sbb adc ss cli add mov popf rolb and das and jo inc in xor pop insl cmp pop push or mov lret xor stc lahf rolb or adcl jg clc movups aam cmp mov push adc inc push sarb gs add inc jbe sbb jnp mov xchg xchg add adc out fcoml jne jns test inc jne jo push push lcallw xor jnp dec daa push sbb add (bad) mov push into xlat inc dec icebp add test shll pop dec sbb xor mov mov pop outsb test lret pop test dec jl add and loop adc and rcrb testl lock sbb int (bad) xchg (bad) mov or pop push cs loopne sub mov stc lahf scas std insl rcr cmp add fstps cltd movsl dec mov jg inc gs sub and sbb into mov sbb cmpsl jns dec scas test cmc mov (bad) loop cmpsb xchg sahf mov jb cmpsb add je mov lret in mov xchg js or into or jns mov call sbb pop xor jae out push mov add add ret pop aad (bad) fcompl mov add stos inc push adc adc pop dec jae adc mov xchg pop sbb mov dec es sti add ds test addr16 enter pop cmp aas fadd das sub push test in aas cli add add add cmp add xor mov dec pop mov into aas aas pop pop fs push fwait insl inc mov lods pop shrl pop pop in mov fwait dec xor or ret xlat sbb loop and xor mov mov jnp adc fbld pop sarb add inc mov stc loope xchg mov push pop repz inc loope adc or dec mov push test fsub sub fsubs inc ljmp add lcall add pop fidivl adc cmp push cmpps jge push stc enter add add lods scas cmp add sahf das sub sub cli push loopne (bad) jne in popf nop arpl das xchg enter push push cmp mov inc sub xor fimul lahf cltd arpl pop mov jnp inc push adc cmp add (bad) stos add push fcmovne pop cmovb (bad) cmp xchg inc xor push sub or mov in push jns push stos xor sbb std pop cmp and xchg mov xorl sub cltd pop adc outsl out and jae arpl movsb ljmp add or cmp or hlt mov movsb imul push outsl mov sub repz mov cmp jbe (bad) decl stc mov loope sbb int3 xchg dec cmp or mov ret ja xor mov push sbb (bad) jbe lods fwait out or aad popa aam aas adc add jge xchg and xchg lods icebp sbb rorl roll dec cmp stc ja stc fldenv inc jmp (bad) pop stos pop push lret outsl or loope ret imull enter repnz dec push test out jp sbb popa mov insb mov arpl nop int pop (bad) jmp lcall jge dec imul sarb add add add xchg scas cmp xchg adc or lods stos mov clc cwtl pop decl jmp or mov jb ljmp push jo mov call in aas cld flds call inc cmp jae ljmp mov lds adc add add insl or xor sub fidiv lods (bad) cs lret outsb jl fisttpl dec movsl pop mov jno cmp xchg (bad) cli mov out popa sbb je pop rorb mov lock mov mov in push out or loopne pop add push aad std ljmp fdivs stos push stc adc les testl sbb jl js adc ror out sti aaa mov add push xor jmp cmp je add pop ret test jno loope jnp (bad) cmc push clc lahf out xorl xor or fdivl cmc (bad) or sub (bad) in mov les sub subl sbb dec pop push out icebp ret sbb or and xor (bad) and and jae push adc dec popf test fmul push and mov test add (bad) cmpsb sbb (bad) jnp in leave fisttp mull sbb std cmp fstp adc or es sub (bad) rolb mov push push pop sub sbb or and cld dec pop sub daa push push scas call cmpb jmp jb or jb insl sub dec cmc icebp mov or mov movaps xorb or inc dec mov shl mov xor and (bad) into ds stos mov dec pop pop push mov inc test lock jge mov ret imul or call add movsl loope sub (bad) mov jbe in dec push jl push test xchg test pushf enter lcall xchg and xchg pop xlat ss pop stc rolb je xchg jle sahf ljmp mov inc ljmp xchg lret xchg push jmp aaa add mov (bad) fnstcw jecxz and aaa and cmovp dec (bad) cmp lcall nop cwtl or add or out push mov jne (bad) sub dec int mov shl inc inc fwait and jp push xchg insl jno add ficom mov ja xchg inc pop mov out xorl xchg arpl push pop xor scas js sti test (bad) jecxz push test dec mov adc xchg mov add sub sbb cmp xchg jge (bad) or stos mov call adc add mov mov in adc mov and stos mov std inc test jecxz shrl hlt fdivs das push mov imul insl imulb sarl fdivr or (bad) mov ss mov jno cli (bad) push xchg or daa subl movsl sbb fsubr cmp popf mov mov in mov and xchg cmpb sbb jns or ret mov adc and popf push xchg lods stc (bad) incb mov cld fs int mov or pop pusha xor insb (bad) fmul dec add dec mov add iret pop mov es cwtl repnz or or jne xchg push cmpsb mov sti ds test adc shll popf sub loop xor mov jmp dec mov mov add nop cwtl add xchg cld adc add insb (bad) mull mov xchg xchg xor daa jmp (bad) in sub js or dec shr cmpsl dec loope gs adc push (bad) ds inc movsb (bad) rclb mov jne xchg adc jno sub out mov jo fwait xchg push fwait cmp in jge and adc sbbl jl ss push sub sbb add dec xor inc insb test pop test inc in dec loopne and rol aaa dec push lods push in sti sbb in pusha xor scas pop sbb push ret fnstcw adc rclb adcb or sahf cmpsb push xchg pusha mov sbb mov xor add in (bad) bound int3 mov xorb lds add pop loope lds and pop pop mov fbstp sub sbb lahf orl sbb pop mov js mov icebp jo xor adc (bad) mov arpl jae mov add pop aas mov push loop or add adc lock aad mov mov (bad) hlt push jbe lcall and dec push sbb outsl repnz ss add mov (bad) ja inc popf lret out je enter repz xchg ret loopne or push roll add fs mov cmpsb sahf (bad) push xchg and xchg pusha fiaddl insl xchg inc stos mov sbb fcomps imul add inc sub dec sbb imulb and sub sbb cmp pushf jnp ficomp or inc sbb xchg into ret (bad) adc push xor jns leave xchg ja and xor test js into jns jp es dec push adc mov imul push punpcklwd arpl cmp and cwtl adc dec add xchg (bad) aad sbb or insl pop and pop popa adc jecxz push jecxz clc inc jb fadds lods sub cmpsb mov mov inc stos nop adc cmpsb shrb (bad) jmp daa cmp push shll scas adcl iret pop dec push stos scas fcoms repz insb add mov mov not test xor sbb (bad) test aas lcall add mov inc cwtl repz mov lds cmp mov sub sub imul dec ljmp sbb lock dec mov push xchg jb push push push add rcrb (bad) (bad) or pop pop pop cmp xchg xlat mov stc pop xchg dec test push push add jle mov fistp sub jns sti jb ss sub and mov or xlat das push dec add in ret jno cli into int (bad) mov idiv jns or dec (bad) mov je mov insb push nop in cmp add xchg lds insl int es push rcrl pop mulb enter jge sbb cmpsb fistpl fldenv jl xchg insb lock cmpsl xchg iret dec stos jae adc fs pop jb (bad) mov push (bad) ds and (bad) repz add mov add push leave ja jne (bad) cmp or test sar movsl negl popa nop (bad) movsl pusha aad add push das lea sub jo adc pusha inc imul std cmpsl mov ss es inc imul xor stos jno ret loop in test jae add add add shl jbe out insb ds pop sbbl dec jl,pt cmp lods mov roll inc aas push test mov popf fisubrl pminub or lahf cltd bound xor mov lret inc pop les mov and ljmp mov out and and add fildl jecxz adc dec inc enter and dec xor dec je insl dec mov fstpl adc and adc xchg shll cmp adc (bad) ja clc adcb sub pop mov fldcw mov scas call mov xor add (bad) loopne rorb push xchg loopne aad push dec push fidiv sahf sbb rol cmp lock in cmpsb jmp mov jg dec push xor into outsl aad inc adc pushf jg fidivr lea sub rep cmc inc repnz pushf mov (bad) dec mov fcompl int dec add add xor stos cmpsl mov subb fsubs pushf rolb icebp adc jns stos adc pop adc pop fstpt std call ficom dec add call xchg adc das jg mov out stos cwtl insb xor sub (bad) or insl dec lds add inc in fbstp pop fwait pop sarb inc or mov push push scas fxch test inc (bad) sbb es xchg mov lock enter mov popf lcall and cltd mov sbb cmp lret sub cmp mov pushf jle xor andb inc test lods addl add out imul ficomp mov mov ja out xchg into jo push divl xor dec js and jge xor jle out pop fsubrs ss loop xor push xor outsb cmp and fsub outsl test or xchg mov mov lods fild arpl (bad) xchg jo cmp and lcall sub int3 idivl inc dec outsl sbb sub out or outsb mov dec test bnd loope ss leave pushf lea inc jg push add add mov stos xchg inc js bound jo daa mov cmp push frstor mov hlt bound sbb lods int3 xchg mov inc mov lds imulb xor inc (bad) pop xor pusha les sbb mov fwait adc movsl adc inc hlt mov enter add scas pop cmpsl push in push add ret rcrl out mov mov push inc lds inc (bad) ljmp xor and out add clc ficoml or xchg xchg shrl in (bad) mov pxor ljmp scas pop jmp lret push inc push idiv lods add push xorl repnz js mov sub xor jg fcom dec mov loop adcl xchg or sub into dec lds scas inc aam mov mov inc stos repnz jle mov hlt add sub sbb in sub (bad) xor add add cmp test fdivs test cli roll push jne xor jg xor cmp pop jnp xchg xchg shll push fcomps add lcall and pop stc or add xor jb pushf dec fstpl cwtl in lods add add mov jnp inc repz mov lret call dec mov pop pop roll (bad) lahf push xchg lods mov test and loopne inc adc test mov pop sub loope vpor or (bad) repz jge outsl and lea dec (bad) xor add push lea popa dec loopne xlat push ret jp and aad movsl dec out addb push rclb pop pop scas test std fisub outsl shlb cmp xor dec outsb xor pushf loop test cmp loopnew stos lock outsb xchg pop ljmp out add add pop jecxz push (bad) sbb addl je adc cltd mov mov mov cli sub add cmp mov movsl dec cltd push push xchg inc push mov push fwait sbb (bad) jbe lcall test push fxam iret test mov and push xor inc xchg fcmovu sbb mov pop jbe enter add cmp test shll and aam fimull xor pusha lds push sarb int seto popf fistpl dec sbb or in mov int roll (bad) je pop arpl mov sar add add lods sti (bad) mov cltd aas enter clc rcll adc xchg push mov cld mov or inc pop in js cmp push into lods std daa xor pop add daa sub nop push cltd mov int3 mov mov pop jmp aad insl nop and add or sbb or bound aam movsb jb mov sub ss and mov xchg mov std or sbb aas lcall loopne cmpsb or test daa clc or dec loopne jne cmp std mov pop (bad) notl lds mov jge test dec add icebp adc or pop insl sub fst xchg mov (bad) mov adc leave adc jbe aaa test lods ja aas sub out pop inc jecxz pop negb cmc mov shrb ret stc imul jnp gs lock in xchg pop mov jne sti popf ucomiss push cmp push pop sub popa ret xchg mov out jmp loopne lods shrb xchg sub out push fmull fistpl pop out aad icebp scas das outsl or ljmp xor dec aas movsl pop icebp (bad) xchg adc add sub dec daa movsl xor (bad) dec out push cmp test fist (bad) xor push and sahf cwtl mov jbe sub div jae pop std loope xor jne dec roll sbbl jg and jb jecxz xchg clc or sub in es sub add add add add cmpsb ss or test adc adc ret inc lods addr16 inc xchg mov inc int3 in mov fldl adc lret int ljmp aad mov cmpsl push and push leave xor clc pop cmp movsl ss push leave sub stos mov mov cli sbb add fdivl sub sub dec add mov in notl mov pop test add pop notb add test sub nop jbe jbe pushf daa dec xchg sub insl pop xor test or push push shl scas jp mov jle pop in sbb daa mov jns push mov mov leave sbb mov insb pop or fsubr lock cmp add or insb inc jae aas add lea add pop sbb scas sti pop ret mov xchg inc mov icebp and stos adc or shrl lret lea lods add inc inc repnz ficom js cwtl sub or cmpsb mov insb enter pop repz aas mov push cmp (bad) push stos fwait mov loop xchg ss jno push xor shrl adcl scas push xchg cmp rorb add test ror mov popa insl ja std lods fistpll stos (bad) push pop ds xchg cli sti lret out mov idivl xlat jbe movsb xchg imul outsl addr16 mov push xchg mov (bad) adc dec and and imul xor mov call or inc fisubl into or fdivrp les xchg pushf mov fimul xor push inc and fstps add sbb push lock inc jbe pop rclb push int3 jnp mov fstpl sub xchg push push pop incl call jb popf popa pusha mov inc andl nop pop push movsb test jp jb jne je int3 inc lahf xchg mov cmp or pusha cmp test (bad) cmpb stc lahf rolb call push movsl dec push cld cmp push or lods loop insl pop cmp inc outsb je or sbb add scas bound sahf inc sub push jle cld sbb nop fmull pop dec cltd movsb or sarl shlb cmp or pop pop xchg sbb in sbb aam push repz daa test into dec lret jno cmp cld cmp jge out jge add xor and fist pop sub pop popa lret pop sub or bound push in test insb (bad) stos cmc nop mov cmp cmp arpl sub sbb adc ss test and out ret mov stc dec jb,pn loop add dec add add test xorb mov xor fsubl jg xchg cld push popa mov and out push inc sub push adc sbb ss push ror mov jp push aam adc (bad) sbb jmp pop call push sbb sub jp stc jmp add xor scas stos test test push shlb dec out clc push mov loope dec loope cltd lcall adc pop insl sbb test mov dec (bad) cmpsb push sub cmp into fsts ds test aaa data16 sub sarl add popa push (bad) jno (bad) xor dec outsl and cmpsl push jne call pushf xor roll cmc mov and add and ljmp out xchg push rorb lods (bad) movsb scas pop xchg fiadd iret ds push stc cs popf add xchg lock dec mov enter scas fsubrp sub push leave mov pusha adc push rorl jge sub aad mov gs mov cmp into movsl jl,pn jns inc dec xor push pop inc and xor push or les ss jl or add out inc stos inc jne outsl (bad) rcl sbbb push dec (bad) or sub xchg repnz xchg jg inc jns stos movsb adc jo cmpsl daa aas cmpsb jae jno and mov inc or jg enter xor inc pop lret mov imul fs fsubs mov add add stc fdivrl pop dec std js cmp mov xchg pop mov push popa mov add lcall cmp shlb xchg dec xchg aas cmp mov dec xchg and mov mov (bad) hlt adc sub jnp jecxz push xchg push add mov push xor fwait pop xorb and inc loope jae pop xchg inc push lahf (bad) sub mov pop cs cli pop cltd inc dec (bad) imul imul or cmp sub (bad) xchg dec mov fstps inc push and jecxz shl (bad) test stos in add add mov push into push int3 and pushf dec cmpsl push or push and and and pop repnz sub mov add mov cwtl cmp jle push sbb and out scas jnp test inc fcmovu mov lods in mov das insl add jg or mov ret andl (bad) xchg outsl cmp cmp (bad) jno call push (bad) and imul fwait ljmp inc rcll jns test sbb (bad) (bad) ror scas subb outsb mov push inc sub push cmp dec push add mov add mov pop jo jmp mov nop rcrl mov and dec sbb rol out sub push popl mov (bad) xchg mov dec adc leave sub dec inc repnz sar (bad) xchg add xor cmp add add add jecxz hlt notb (bad) pop adc and fs or or lret cmp pop test aas dec ss mov xchg sahf das iret mov push movups dec icebp and jl aad inc sbb and (bad) jg dec ljmp adc inc int3 mov mov std lret bound bts out mov inc mov adc (bad) cmp insl or pop mov mov xor xor mov xlat iret xor ficompl movsl lods mov popf xchg leave addr16 call jmp adc js imul ss add add leave or jp std dec pop mov ret loope scas mov in mov ljmp paddw and out push and adc mov int3 push lods mov outsb cwtl push xlat xor push mov mov flds in cld (bad) aas mov sahf cld js lahf lret xor inc jae or pop (bad) xchg shll repz pop push loope scas fidivr add andl loopne xchg cld xor or daa xorl aas ljmp cmpsb inc add lahf sbb xor adc (bad) push push je es mov mov hlt add jae push push movsl call mov ret jns push push inc jp mov mov fadds sete les jge jns mov mov cwtl enter pop mov jnp add push sbb adc outsl push mov pop dec add xchg xchg out rcrb stc jnp pop push sbb jo aaa out test add cld nopl insl in out negl jecxz adc mov lahf add pop fwait ret mov mov pop dec push stos test hlt sbb insb out xorb xchg enter cltd test mov add mov enter inc xchg xor add inc aaa jne sbb enter pop cwtl cwtl iret inc sbb or je fistp cmp hlt jne jno stc (bad) dec rcr dec and inc movsb dec adc lock mov sbb dec pop stos xchg jg in xchg out stos add pop out into add popf mov cmpsb (bad) ficomp push xchg sbb mov pop outsl sti data16 jge mov or push das mov scas cmp sti and dec mov mov (bad) cld cmp sbb adc cmp mov pusha push dec cmc xchg shll mov lods leave (bad) jbe xor fidivl in (bad) icebp addr16 aaa (bad) add (bad) sbb jg out or fidivl add gs sub gs js push dec push jae mov and pop ret stos sbb fstpt ret or movsl mov stos sbb scas int3 dec lds jbe or dec mov icebp mov icebp ret xor sbb stc add adc decb fcom leave lods pushf sub sbb push addr16 add addr16 fwait xchg outsl push cli mov sahf mov outsl aam mov pusha rcr fdivs lret add jbe ret movsb jge fdivs mov dec loopne call stc pop (bad) rcl sub cmp add mov lahf adc cwtl scas stc rep test sbb mov adc movsl sbbl adc or imul fs mov lahf sub insb cld pop subb mov rcl jno pop sub fs xchg mov push xor mov add arpl jns frstor add cmp push jo jne sub mov in xchg lret movsb fimull and or xlat jbe dec fs sbb ret inc and fdiv test jns nop xchg dec mov jne mov cmp outsl push xchg add outsb mov insl stc cli data16 fwait enter bound add add rcrl jb loope inc loope mov loop jb in cmp lea out push out push fcmovu xchg cwtl cmpsl and or popf ret sarl (bad) cmp mov mov roll push repz lods and es clc push fadds add add push pop jmp (bad) jecxz lods mov jp jle add rorb pop and inc and pop sbb add xchg js and xchg pushl adc cmp xchg sub adc jno loop repnz (bad) pushf test dec mov clc cs aaa jo jg and add inc add popf mov insl inc movsb push jp adc andl negl xorl xchg mov xor stos jno in jge out pop stos push int3 mov scas adc dec adc jne xchg aas xor adc cmc dec lock movsl xor cmpl movsb mov into xor pop add (bad) mov jge inc xor scas roll fs cmp in adcl inc pop pop or or jecxz xchg (bad) je test jne in sbb sbb xor dec stos ror roll (bad) jp pcmpeqd add inc fsubrs lcall jmp jmp shrl sub subl in xchg push xor push dec andb and push je sarl sub repnz cwtl push sub dec or jae,pn sarl rorl sbb xor cmc xor inc (bad) xor (bad) into mov pop div popa cmp and outsl mov mov sub xbegin outsb test pop pop outsb (bad) and push mov sub adc xchg cmp in notl push sbb jns in or jno faddl mov dec (bad) ds leave cld xor cs test arpl enter repz test adc pop in fimull mov loopne adc (bad) and dec mov test aad or js sbb pop jp fs jp pop pop (bad) jg fisttpl add (bad) (bad) rclb pop inc in add adc loopne mov (bad) outsb lods adc inc sub std jno sahf inc cmc hlt xor lods fdivs data16 popf push adc ljmp xorb adc mov sarb sub mov mov inc insl pop (bad) daa test scas add cmp cmpsl in sub fs and lods xchg jl pop std adc jae bound dec (bad) rorb test ds movsl js ret lret insb jnp jl push jge cmpsl out mov xlat lods lods movsb xchg cmp mov daa xchg adc add ja sbb add dec dec dec add jnp sub popf add outsl add pop popa je lea mov xlat pop mov mov jg data16 pop and (bad) jl gs add inc mov mov hlt or push mov inc (bad) cwtl in jno mov adc data16 lock and ljmp add cmp enter ljmp dec mov aad xchg inc and stc aam js addr16 xchg add dec faddl xchg cmpl or movl cmp jge int3 (bad) (bad) mov outsb mov sar mov sub lcall mov fmuls cs in test lock pop jp aam pusha push js xchg stos cltd cmp inc clc mov mov jp jge (bad) (bad) or sbb cmp mov test jnp xchg (bad) cmc inc adc pop aam add jb cmpl pop push or add add (bad) repz mov xchg fwait mov push ret mov push repnz mov arpl gs xchg push mov mov and shlb or repnz and icebp jl aaa pop mov cmc or sbb inc adc sbb mov cwtl cmpsb ud2 dec inc lret test scas push clc insb sbb add mov and and stc sbb dec push xchg sbb leave push idivb push jecxz add ljmp stc pop fwait xchg pop mov mov mov push and lock out aas xor sub arpl nop add xor test lret push fsincos outsb push (bad) xchg pop shr add add mov jmp enter xchg push ja mov mov ja push pop jns addr16 cli nop add es inc pop mov or mov test and fs jge lea inc and xchg jl push lret (bad) pop push adc add add lret dec into orb in jecxz call jle pop cmp sub leave (bad) dec jmp mov cwtl or mov jo cmp inc nop dec js lock jmp adc and adc inc xchg jno mov sub pushf dec sub jne mov jne jae in or mov adc xor test ds mov fidivrl add ljmp outsl je sbb dec pop outsl xchg jg dec pop roll mov or faddp stc mov call xchg inc out lret lret in mov decl mov push jmp cmp and dec push test pushl xchg mov xor sbb dec mov pop pushf popf je negl pop fildll pop test and aam cld mov add test xor dec inc js push aad add adc adc inc mov jbe (bad) add mov dec nop fiadd xchg sti adc gs jno (bad) in xchg push fldt shrb out fimul jg inc mov mov dec or dec (bad) xlat rcrl jno lahf add or jmp jns pop imul push inc cwtl add leave jge cmp mov mov jge ds insl scas xchg jnp mov fwait xchg aam pusha fmuls das xchg sub stos inc push pop in stc pusha pop inc repz cwtl out xor mov pop xor notl inc aad xor adc lret das xchg xchg cmp mov add add mov pop ss dec and sub mov fwait pop dec push push test mov mov addr16 mov push inc adc addr16 or jnp ss xchg cmp jmp fs pop mov pop pop lea mov jns push cmp add cmp or imul out dec and jle les adc roll xchg iret rorb adc rcll jecxz jb repz sbbl inc ljmp fcoms (bad) inc mov getsec xlat enter in dec add nop add sub pusha add add in (bad) imul sub jae xchg out flds sti ret fwait (bad) pop cmp sbb js mov cltd cmp aas jl xor sub push ret pop mov sti shrb dec or inc fs inc repz dec or int mov push movsb mov or add add ja mov lcall fstpl test sub mov push pop std or or iret scas in xchg sti mov gs sahf adc inc xchg outsb std daa mov dec jge outsb gs int3 inc xor mov (bad) add (bad) push fildl loopne add add lods push cwtl pop fs adc outsl sti push lahf (bad) xchg xor push and jb xchg out flds sub push xchg cmp jecxz adc mov popa mov cmp dec test aad cltd mov push jne es jno pop jnp aas (bad) aad xorl add fxch mov scas jmp push dec fidivl dec jns sbb aaa inc cs mov ss addr16 call cmc movb mov add bnd std mov or and sbb add fwait in aam loopne jle xchg icebp inc loope movsl mov cmp xchg gs insl add mov incb lcall popa addr16 (bad) push fildl loopne lods push cwtl in fs sbb cmp in fisttpll icebp adc mov xor (bad) xor add (bad) lods nop jge xchg cmp pmaddwd adc and lahf sub fisubl gs inc sub xor add inc adc cltd xor dec arpl cmp std ds outsb (bad) mov inc and push mov push mov into sub into repz sub imul int3 lret (bad) test aas xchg inc cli dec add std fistp andl xchg out cmp add imul std stc cmp mov in add jge xchg sti leave popa rclb xor mov mov and push movsb adc iret pop mov cli sub mov ret dec popf push in pusha test jno mov cmp (bad) sub rol xor movsb and (bad) in mov sub fistpll in mov pop imul or ljmp xlat cmp icebp xchg stc aas cmp fadd fldl imul fcoms and lcall lock enter (bad) insb dec test add xor pop or cmpsl xchg (bad) iret dec stos jnp push adc and (bad) mov jne movsd jne and push xor cli sbb stos ret dec nop sbb sub mov and int3 adc or fimul mov pop cwtl decl and add sub dec dec inc pop int3 in add jbe add add je icebp inc xchg jl enter mov inc lcall xorl push mov or or pop mov mov add cmpsl nop cwtl or jmp js popf adc insl ret aad jmp test cli ds xchg or add add pusha xchg imul leave int inc fnop dec mov in mov jb add repz and insl or pop outsl loope sub mov andb add cli lods in cmp aam lock mov int stos or and sbb adc jb add cwtl mov cltd push push pop mov dec insb pusha pop and aam xchg cli lods or lock into out push cli dec mov imul imul pop pusha aas push inc xor sub sub out pop jne lret in pop jnp mov inc sub pop xor jl dec dec xchg stos jmp add add dec fisubrl addr16 mov xchg push sar mov adc mov push cltd fisubl sub xchg ds out or movb pushf xor adc dec cltd mov pop mov jnp loop adc jl adc sbb imul nop cwtl fbstp out inc pusha add dec mov lcall clc push add in sbb jl xor add sub clc mov xlat jmp add xchg dec nop mov pop mov and pop mov rcl das imul fstpl jno ret loope mov outsl mov push adc mov inc loopne and push incb fiaddl dec xchg cld xor sbb jle (bad) je inc push inc jo mov enter inc repnz (bad) xor into (bad) cmp ret xchg mov inc push lock inc fwait nop push xchg orl inc inc stc clc and adc add and mov movsb xchg lods test shrl xchg addl (bad) outsl dec mov or jb or lods and jne add cmp subb inc movsb or dec dec jo adc in aad mov inc sub sub jb cltd cmp xchg inc add xor cmpsb ret mov and stos mov xchg cli fstps jns jecxz aad xchg mov leave or pop xor push stos pop add (bad) and (bad) jno out jmp gs js or push xor gs sbb cmc or cltd popl mov sub nop cmp pop arpl dec lods mov mov add mov mov inc loope mov daa mov adc dec (bad) inc xor dec fdivr mov xchg (bad) mov sbb mov cmp add dec push jnp imul or stc cmpsl ss and std js add add or cld xchg mov xlat rol or adc pusha pop push data16 data16 mov mov mov push fsubrs mov nop in push fisubr or inc dec mov pop out push mov mov aaa repnz pop or xchg or add cmp mov (bad) cmp xor cmp stc xor xchg mov push mov sub aaa mov cwtl dec push pop repz push leave lret inc scas ss loope lods push insb adc ffree dec pop shrb mov rcrl inc ds in and (bad) fldl pop lea inc sbb add add rcl out push jbe idiv pop sbb mov adc (bad) push cmp icebp mov shrb ret in push xlat and mov push pusha sarb push outsb stos (bad) xchg fidivr repnz sahf jge jbe pusha mov adc push mov stos or or in inc aas mov arpl (bad) dec loope gs sbb inc fldcw pop sbb xor fisubl adc imul or notb dec mov sbb mov xor xchg mov scas bound daa mov add sahf mov (bad) cmc cmp daa test adc xor lea pop xor aaa dec xchg push daa or xchg dec dec scas mov (bad) cld add pop mov les popa nop jmp loope lahf cmp es test dec bound sbb add (bad) test add add cld adc jmp xor sbb and mov jge js cwtl dec aam cltd push out pop in sub into sub mov xor pop test jg subl pop daa dec in mov sub adc cmp xchg test fcomps stos push push add loope mov loop mov out jne push pop sets aaa fdivrl add sbb add sahf sahf outsl outsb ret sub xor jle int3 in aas js inc pop xchg push aas mov movsl cmp insl mov mov adc xchg mov inc (bad) mov push movsb sub add (bad) out (bad) jno add xor mov jle (bad) jbe sbb sub xchg add std push mov cli sbb jmp push jnp jne mov fisubl mov dec ds xchg push popf push inc mov cwtd movsl or xor or jne dec out es or or cmc pop test fistpl add add and aam out pusha (bad) out push adc xor es std jae mov inc or mov popf and in loopne push xchg push push add mov mov popa nop add inc ror pushf pusha xor pop pop dec lahf test pop xor inc cmc xlat insb mov orb add add lds lahf xor imul xor lods mov xchg cmp inc stos mov enter call xor test jmp notb notl jg push add bound jo lahf xchg or lock out sbb popf mov sahf xchg repnz movsl jl (bad) mov add add loopne inc (bad) or or movsl add shll pop aam mov mov movsb jbe xchg (bad) out test stos enter xchg ss cltd aam and add mov and pop sub sbb lods pop or cwtl ficoml xchg push mov sbb sbb mov pusha or lods jmp jmp aaa (bad) xlat das cmp jecxz cmp (bad) jno ret mov cli (bad) lret mov push (bad) mov jbe jb ljmp inc repz adc std int3 sti incb xor daa imul cmc adc rclb add fs and test xor or xor push dec lcallw fstps (bad) dec movsb lea inc fwait mov mov mov enter loop xlat mov dec outsb inc push (bad) jae mov pop setle lahf jae pop inc mov jns mov movb lods (bad) in stos lea lahf outsl (bad) sahf jo mov sbb mov ret sti dec lcall jno push mov sahf mov call mov xor aas adc and push clc mov pop test or push mov sarb cltd xchg dec xchg cld push fidivl and loope in mov dec rcl dec mov mull pop mov fwait xor rorl (bad) cmp out je mov cli ljmp dec icebp lock ret lcall dec jecxz adc push gs sub sbb sti xchg inc add add add imul adc pop pushf lret lret and inc rolb push repnz nop push sti int3 (bad) sahf ja addr16 jmp test xor xchg out mov pop xchg xchg mov fnstcw popf xchg cmp cmp sub rcll sub jb iretw pusha aas std jo and adc xor sub add ja std insl ja enter jo jae (bad) sbb xor hlt pop insb cmp aas jp cmp mov push mov cld mov sbb mov cli cld in js jae or cmp add dec in bnd (bad) and pop scas lods lds mov push popa faddl add adc push adc xchg out sub lock xchg scas leave ja dec int3 jne insb mov adc adc stos push push lret jnp nop (bad) lods fs push xor push push movsb mov test xchg ja and push jp add add fucomi xchg pushf pop imul (bad) jno xchg mov insl stos call ret cld xchg jl insb dec andb (bad) dec pop in std xor shrb sub mov mov jns jmp push jle sbb lcall popa push jle jmp mov (bad) mov (bad) jge xchg add pop pop fcmove dec and xor jle sub pop jb imul cmpsb fcomip orl shll xor push push nop mov pop xor pop stc fcom pop repz mov in xor jmp test xor lahf sub je add dec sbb jbe repz call mov sub xchg push jno lcall jmp aad mov hlt call loope call push or imul cmp adc out add dec adc adc jae scas sub mov and sub xchg dec dec mov add adc es icebp and dec jne ret push sub test mov and (bad) popa icebp pop add (bad) xchg mov jnp or dec iret jg mov push sbb incb or sahf and jp push add scas push mov add std inc push ljmp scas int3 dec insl sub sysret pop loopne push addr16 lret in imul imul jge adc (bad) imul dec mov mov aas mov icebp add adc and and xlat (bad) ds add add add notl pushf ds add in call std sbb hlt imul iret scas push aas dec xor hlt cmc psubq and or adc or push aas mov out and daa outsb int repnz pop lret fldcw outsb repnz inc stos loopne iret addb mov add add adc xor ficomp inc and sbb mov add mov or stos or mov jecxz pop adc (bad) push push decl sub lahf (bad) mov imul ret lahf sub mov test dec std add dec cmpsl movsb add add mov movsl js cmpsb cltd mov inc xchg cld push bound insl adc jle test mov movsl jmp cltd dec aaa mov hlt xchg mov dec push daa insb dec test (bad) (bad) push lods mov inc outsl pop sahf cmp mov push lcall add pop jno cmp mov xor les xchg sahf lcall scas cmp sbb add out and xor das jae and jbe xchg pop and sub dec fldcw es pop clc jl dec xchg xchg sub pop xchg mov in sub xchg daa loopne add add or (bad) dec add mov jl (bad) jbe mov in nop mov popa add jl push push icebp adc xor out call insb add movnti icebp and sbb into pop xchg cmpl sar mov add add fs dec cld in arpl add pop lcall mov lock and scas stos xor jbe add test test xchg mov shll (bad) mov leave lret (bad) mov in jp sub dec sbb add add add add cwtl mov jmp pop sbb mov push pop xor push mov rcrb cmpsb xchg cmp mov add xchg jg clc movaps mov pop ret and sbb mov ret aad push inc cmc (bad) xor fiaddl sub dec jne mov cs adc xor popl xchg push dec xchg adc pop lret inc adc in ret jo aaa push icebp adc test fldenv jno or popa clc or fadd adc ljmp xlat pushf mov push sbb jb adc nop push mov add subl and test outsl lods stos mov js mov out jecxz add lret xchg push sahf mov ja fsubrl imul mov (bad) jno xchg test js and icebp (bad) cmp test sar arpl push outsb lcall (bad) ja mov xchg mov aas add lahf xchg in dec or mov or lahf xchg xor fdivrl loopne pushf add ret andl cmp scas mov push xchg xchg mov insl sub pop pushf mov cmp inc scas add lock xchg scas out stos repnz cmc enter jae jne sub add add push xor dec sub pusha rorl int adc sar xor cmpsb xlat out push sub es repz xchg jle jecxz sbb inc cmp mov xchg xor pushl dec inc dec jbe mov fist and adc add (bad) test addl add loope (bad) jb adc outsl outsb sbb pop jecxz mov jl (bad) test (bad) or jmp cltd dec aaa mov iret das js pop pop mov push test push loope andl cmp imul jge cmp pop jp imul xchg inc sub add pop xchg movsl dec out push lret stos loop mov pop fistpl or inc jb push and test pop and pminsw je insl push cmc mov fwait lahf in or jnp stos mov mov test int3 inc cmp adc lods (bad) movsb xchg shll int3 fiadd add jmp in push clc fild call lds or dec xor sub inc sbb (bad) call mov shr push pop imul jb nop cmp jp addl test daa scas imul (bad) test mov push int3 into (bad) movb push and xlat xor adc pop lcall cld and pop dec ud1 call push insb adc je xchg aam jne xchg jg pop or rcll stc add jb adc (bad) cmpsb fs loope icebp inc ret xchg push aas mov addr16 jo dec ja stos pop ret iret cmp add add and hlt sti or xor jae and add inc lods ret mov push fidiv cmpsb xchg mov nop or pop jecxz add cmpsb jmp fs push xor addr16 insl or stos mov adc (bad) jmp imul inc jns test xchg dec dec pop add or sarb xor mov (bad) sbb daa sbb jno mov sub or add lods pop icebp inc popa mov enter mov pushf pop mov pushf inc daa lock addb dec xor xchg inc fsubrl jl xor popl test rcrl je jle mov ja sti sbb pop lahf pop outsb pop jecxz adc iret cmp mov jmp and mov adc sti add mov adc xchg jle mov add pop pop mov inc cs and cmp test push push cmpl add add xchg adc xor iret dec lcall clc jp add outsl scas dec aam faddl repz inc fwait outsl sbb (bad) mov outsb adc sbb fldl test (bad) adc test inc stos leave fstl xchg push imul push xchg push add add add es (bad) push cwtl in mov repz enter ffreep mov mov test and ror sub imul or or jle adcb pusha push xchg and mov scas push loopne fwait bound xor mov or and mov dec pop stc std push add jecxz sbb lret or jmp nop mov gs test push dec repnz cs mov andl cmp sub dec stos xchg and xor pop int3 fdivrp sbb jb enter fnstcw dec mov pop pop jb xchg insl mov jecxz adc add mov test lcall push cmpsl lds jo add xor scas push push push popa nop dec ss inc sub dec lods test push adc sub jne sbb adc jmp jno mov test mov mov fadds add dec leave fidivl mov outsl or (bad) adc rclb push mov into (bad) pop mov std rcl lds psrld cmp jbe cmp add add fcmove jno aas aam out fisttp inc jmp push jno jae in fwait push adc test pop test adc pop clc loopne (bad) adc scas iret adcl xchg rcrl stos mov mov sub leave iret out sbb or add stos inc sbb stos sub dec xchg cmp jecxz sub (bad) xor iret add xor xor jmp int sub nop cmc out and push mov arpl jl or fiaddl negb jle inc push rcr xchg cld add fwait insl or xor or mov iret in pop scas pop jns and dec fiadd (bad) xchg dec mov jns adc add xchg and dec ja scas iret jecxz adc mov sbb ja in sub mov adc mov mov pop pop in out xor inc je pop jl push and jo xor sbb test adc cmovl repz add stos rclb lods xchg ror add mov add xchg push xlat ss mov xor jno xchg loopne jmp add add imul in aad sar push loopne in scas test mov xor (bad) insl test mov sbb les add xor sbb movsb xor mov sarb out xchg add and fs int3 (bad) hlt sbb fstps pop jp mov stc insl and mov cmp mov mov mov sbb leave sub or mov sti int3 fidiv push adc add and jmp or gs divb sub push mov or subb push jno les xor xchg push pop add popf sub push mov mov lods pushf mov rcr pusha jo mov inc jb adc shrl add add into lds mov xor lea aaa outsb ret mov dec repnz repz jle hlt and inc fidivl or dec sbb dec std mov test mov jecxz outsb sub imul mov jecxz test push cmp sbb jecxz test add add push iret (bad) iret sbb pop fild imul fadd and push out jl scas adc push sbb stos sbb hlt mov mov and gs adc ret and pop cmp and jae in inc std loop inc std mov std rcl lods add add repnz daa fsub mov cmc mov push mov lahf scas mov sbb mov loope mov pop mov sub popf adc out add adc jb mov dec or inc gs pop lods add call push adc enter lods test mov add orl pop dec jnp cmp inc in incb mov negb jp xchg push add jne stc sbb push mov pusha subl add test lret push ficompl dec shll sahf lea das (bad) shrl imul or push inc mov xchg dec cmp push mov xchg add sub enter push loopne mov insb sbb pop xor (bad) xor mov ds orl dec mov lret lret cs lcall adc inc cmp or js ret add das lea out in (bad) call das int test fdivrl ja pop stc imul out leave les xchg mov aam or inc jb push and test pop xchg sbb in leave dec add rorb sbb nop pop push movsb lods or stos (bad) test leave add add shl imul (bad) xlat cmp xlat in jo movsb jge jne mov pushf mov dec pop bound and in add adcb ss scas cltd js rclb push icebp adc mov loope fwait shlb icebp aam add push and sub sub loop mov lahf (bad) scas dec push jb add xor cmp mov aam sub xchg pop ret sbb xchg mov sub mov cmp jnp sub xor ret incl push or sahf movsb pop cmp cmp ds addr16 ljmp add add arpl ds sbb test insb aaa jbe or roll jge je xor adc (bad) fsubl lea dec mov mov lcall inc push mov lock ljmp xor push jle insb sbb push ficoml out fcom mov cmc add add ljmp dec mov xchg cltd mov shl mov (bad) dec rolb ljmp xchg xchg lods inc enter mov xor fldcw mov xor enter adc sbb mov in sbb jecxz jge add fistp add test jnp add xor push add jnp mov repz rcrb insb and test (bad) flds adc leave ret rorl xchg jnp add in sub jne scas sbb push dec mov fidivr pop imul (bad) nop cmp (bad) fmul jle add add mov test and inc loop ljmp add ss in pop movsb into dec and push dec xchg cwtl fsubs movsl das (bad) cwtl cmp cltd jg pop leave add ja xchg cmp lods test lret es les add pop xchg dec insl sub mov into and lret je push call or (bad) mov mov sti adc mov push in xor out pushf xchg add aas jo nop stos bound imul rcll test mov shr hlt insb insb dec pop xchg cltd sub dec push push push add mov nop cwtl ljmp in sbbl or jo test mov loope xor mov leave dec lea pop pusha movsb sti cmpsb int3 iret xor push test lea roll int3 and clc jge outsl mov add shrl sarl pushw or pop or jl (bad) sar add enter out jne pop fcoml jne daa pop outsb out and jb call test sub jecxz xchg add sbb lock pop jmp lock roll cmp add add sub add iret js dec and dec cmp push ret cmpsb mov xchg mov mov nop cwtl add popf cld push out sub push add sbb xchg orl jle sarb mov stos mov pop test bswap pusha push lahf gs mov add fucomip repnz pop add arpl int cmp outsl in in cwtl sub fnstenv push mov adc (bad) sub push add mov sbb xor gs ja cltd dec pop or scas fdivs adc mov sahf mov gs pop (bad) in inc inc add push jecxz adc xchg pop ljmp mov outsb mov jno arpl push ss (bad) das imul and (bad) inc stos mov fidiv out in cmp xchg cmp cmpb adc dec xchg cld mov subl jle mov xor add add or mov and shrl xor ja xor lcall xor popf repnz mov and (bad) xor bound inc sub or ret xchg mov arpl xlat scas outsl ss sbb cmp push push inc fnstcw (bad) mov arpl add jo pushf and insl nop add movsb push pusha push hlt fwait sbb and jno (bad) jl pop insl inc sbb jbe adc xchg push sarl scas sub icebp pop scas inc dec xor jae xor cmp mov adc fdiv add mov cmp mov add push fcmove inc fisubl or xor ret rolb sahf cltd push and cmp push popf xchg lods xchg jecxz es (bad) jmp aad das xor xchg pop (bad) lods gs lods xchg inc fwait in fwait jb adc pop and jns out pop pushf dec mov push cmp or sbb loopne (bad) enter pop mov sbb fisubl (bad) mov scas mov icebp fwait pushf gs in jo sub mov pop xchg push punpcklbw pop jbe lods pop sub push jge imul lods and cmp data16 pop fwait scas ds loopne subl push clc add loope jbe hlt dec popa ret leave mov sbbl sub inc imul jnp in int das push bound addl xor lods fcmovbe inc fmuls add insl inc fimull ret ror dec jns es cmp loopne add popa push jbe addr16 mov add jb mov into addr16 inc cmp fcoml out inc mov dec dec fiaddl andb mov and sti and (bad) fcomip add jne sub lret repnz jg out jmp mov xor add adc mov and add add pusha xlat movsb jge and fmull imul int3 sub push aam out mov scas jecxz inc popl add sub push inc mov xor mov orl out aas mov xchg pop xchg mov and clc jp fisubrl cmp mov enter add ds lret mov out (bad) gs dec jp loop push cmc test mov pop push fimull out mov pop xchg and stos leave fisttpll dec mov push pop jb cld stc stos xchg jb cwtl rolb mov aam in lret xchg xor cli mov add dec sbb adc les dec dec divb in xchg push mov leave cli inc sahf jae ss aaa mov popf mov outsl cmpb hlt pop cltd cmp lahf dec ss fiadd ja dec fisubl subl jle mov std sub sub cltd sbb in loope fildll frstor jp or sti lret and and sbb add shll pop jne xor icebp or mov jge pop repz fdivp aaa fadds out fisub mov push (bad) adc mov mov pushf sub and pop popa sbb rcr out sbb pop xchg pop xlat and jnp sti dec xchg arpl jle jecxz add not test movsl jle adc mov push push xchg cltd nop (bad) aaa and testl imul or fdivl and stc (bad) adcl add and roll shr inc inc (bad) out or adc repnz call pop xchg mov cmp xchg into and out cmp lea and or in add mov pushf xor sbb call sub mov add add test xlat (bad) and (bad) xchg lods fsubr sti gs stc adc outsb sti adc inc sub mov cmp (bad) (bad) ja stos jo cwtl lret pop lahf cld cmp push rcl adc sahf sub imul push pusha push dec cmp test aas dec push stos stos popa fnstsw hlt xchg lods sbb add cmp movsl jge jle sbb inc cltd push int or ja mov or pop jmp loop xor mov adc pand movsb sub cmp jp push call js dec movsb sub and adc mov add add lock xchg negb mov leave je sub sbb cmp stos pop push pop mov ficom data16 (bad) mov test daa fwait xor push inc js add into in fadds xchg (bad) std xchg out out je pop push ror imul inc push fadds insb dec and sbb xchg hlt xchg lods jl das imul jge and insb mulw mov fwait jno push bound daa or dec ds cs mov adc and cmp in adc push jb fwait dec dec cmp lret paddw cmpsb or push mov ds add addr16 sbb outsl test cld adc aaa push jp mov sbb mov or xor fistl add cli test pushf popf and (bad) push xchg push (bad) mov jo xchg cli aam dec mov xchg xorl out push das in mov sbb je sti nopl add jecxz push mov jns add pusha xlat das sti mov (bad) jno xchg pop push cmp cmp and sbb rcll in or jle popf inc (bad) ficompl mov sbb dec mov lds xchg adc adc inc pop xchg in add or dec push add add dec add (bad) ds aad cmp cs jo cmc jae aas pop iret dec jno inc xchg in fwait dec mov (bad) sarl jge es cli lea or inc mov dec lcall dec mov in pop stc push inc dec out daa scas or mov shr inc push add xchg int3 mov mov add dec xchg lds ja in into xor lahf sub mov repnz dec mov outsl xchg insb cs add jbe sbb jecxz insb in or mov aam cmpsb xchg xor jp pop mov fisubl fsubrs je testl pop mov jno popf adc in jbe movsl or push fmull add (bad) ss add xchg js aaa shll rorl mov pop mov sbbl outsb push add jae out outsb adc daa sbb mov (bad) fadd pop imul add (bad) mov adc lods xorl lret ret xchg pop and push aas sahf fisub outsb (bad) je sbb jo fldcw aas cmp psllq fsubs nop hlt iret ss mov das imul sub jmp (bad) push mov adc mov fdiv add clc int3 add add sub stos mov xor dec sub sub fldl pop test lcall flds (bad) dec shrb hlt add cmp sbb mov lea and maxps sub add test les add xchg dec adc sbb repnz xchg lcall cmc push add movsl sub xor sbb lret jg pop push push mov add xchg sbb pusha jnp insl and xchg jmp fisttpl pop sub add add mov jge and mov jg inc jge jno mull xor ljmp imul (bad) outsb sbb add out sub jno mov out lods jae sbb jb adc cmp repnz fstl xor in aam add pop cmp lret mov test and cli pop xchg dec imul inc in (bad) incb int3 xchg shrl rcr and ret cs fist clc xchg inc test push jae pop test add and dec mov adc in cmpsl cmp js xchg int3 ret sahf (bad) hlt jl sub add mov and xchg in inc inc xchg iret fistl inc lods ret mov hlt andps xchg aam adc add outsb outsl addr16 cmp pop orl push insl mov loope into js aad jb je add (bad) (bad) mov in xor push adc push adc and or add add imul dec loopne jb into sbb out add inc aaa in sub iret nop or adc in inc or iret xorb popa mov lcall lcall jl je cwtl sbb pop cwtl mov inc xchg lds push add add (bad) jno sbb repz xchg ret cmp into dec (bad) sub outsb mov das pop aad imul cltd pop ret push nop cwtl jb xchg in orl xor xor in jge,pn sbb xor add sbb xchg inc mov mov dec adc add add add (bad) or mov icebp pop cmc loope mov pop rorl xchg and inc (bad) js daa lea xchg int3 or outsb enter ror and dec push test lret dec pop xchg jg (bad) enter out jnp inc lret (bad) and sub jp push pop jecxz lds xor add add push push pop stos sub cltd ljmp xchg xchg scas dec xchg cli movsb mov in repnz jl js cmpsb pushf dec pavgw into mov je fist cmp je mov mov mov jmp into fsubrs outsb adc stos inc cmp adc add add add add mov cmpsb daa notl into insl std jmp fisubl test jmp sarl cmpsl adc shll add mov addl and test adc mov mov mov inc cmpsb jns out push sar aas sahf sarl mov test push popa sbb add xchg leave test iret sbb dec xchg mov lcall inc and nop xchg mov pop xor loope fimull stos and mov and out jecxz sbb iret xor int3 push and in xchg aas cmp dec cmp xchg loop aad inc dec push (bad) cmp add add in lock sub scas pop scas add cmp mov repnz ja mov (bad) out into popa std sti mov (bad) ja ficomp sub out loopne scas into ret lods push outsl dec sbb push jge sahf (bad) and cmc and pop sti sbb daa pop rol cltd fwait push inc es push add add cmp in test sub add cs popa out inc mov adc pop cli sahf mov xor mov jb or repnz iret addr16 push ljmp int3 cmpsl (bad) leave popa jecxz and es push adc jle fidivr outsb mov pop lret fcmovnbe sysret popa (bad) cs jb adc add mov pop sbb jnp aad aas stos xchg fidivl xor sbb mov cltd or movsl out aad xor cld loop xor pusha push aam inc cltd adc data16 cwtl fldcw pop lcall mov adc xor lock icebp data16 add std or push lret in jl cwtl inc and mov mov dec mov pop push test in push cmc xchg xor cltd mov das pop cwtl jp or daa pop stc push sub adc outsl sti mov pop xor jbe xchg pop jecxz shlb add push dec mov jle cmp fdivrl cmp in cmc bound hlt data16 and mov jb,pn fnsave cmp rorb adc push or sub int3 aad mov int add bound lods mov shl adc out shr fs sbb repz out add add add add into iret or std sbb jo and std aam dec or cmpsb push cltd arpl mov mov lds pop jno push sub sarl in mov cmp out dec jmp adc cmp fadd jp mov add sub xchg push daa push daa dec push and clc adc movsl add push or fidivrl pusha mov push adc scas mov pusha cld fidiv mov jl stos jl xor pop lahf sub inc dec cmp dec in insb leave out mov lods test sub push cmp mov mov addr16 add add xchg mov out inc or pop adc dec cmp lcall je mov cmp dec mov mov pop mov cmc or ud1 xchg cmpsl fdivrl ja loopne (bad) and enter into mov pop cmpsl jle cmp push rolb loopne enter and push sti jb or xor in out adc bound les les push mov or dec clc sbb dec jecxz add mull pop sbb jne lcall or jo insl mov out sbb mov fld push sti stos cmp lods add dec pop inc fstl sbb call lock and stos inc mov mov fmull out rolb les pop clc jp add pop dec sub cld dec jns xchg fxch jp dec bound jmp or inc push cmp jl ret das jmp fucomip push inc ret stos in iret andb out pop cmp jae mov es and test imul sub enter vpunpcklqdq aad and daa sbb pop addr16 les jns cmp in das cmp and add insl xlat jno cmp xchg xor (bad) (bad) in xor pushf aam insb sbb and or mov xchg mov push bound push mov cmpsl mov add lods lods xchg ret lret jb xchg add cwtl movsb scas addr16 ret adc xchg xor mov inc xchg loopne xor jnp adc mov hlt mov push push dec mov xchg shlb jle cmp sahf cmp and rcrb cmp inc lods scas push pop icebp or mov xchg adc pushf xchg push cmp enter scas add fisub push jmp rcll cmp fwait test adc or je and cmpb and scas loopne jno mov test je bound int sub jmp popa mov mov daa gs adcl js pushl sbb or mov mov icebp xchg pusha (bad) (bad) idivl cmp sbb jno lods or mov add add cmpsl dec mov lea xor leave dec and pop push imul xlat (bad) mov fldcw ljmp negb mov and pop iret or (bad) outsb scas movsb and je cmp rclb adc out inc push pop lds outsl outsl push xchg (bad) out mov pop sbb xchg mov inc nopl mov pushf cmp in jmp add mov cmpsl divb xchg cmpsb add sub adc jmp mov jle imul daa jle and mov and add add inc insb pop mov imul sarb xchg into jno jmp sti jno add inc cltd loopne inc test mov dec gs adc and sbb jecxz jle jbe idivl std fnstcw out hlt dec ret mov adc jge pushf arpl add stc push add pop pop sub mov test daa (bad) mov out in dec inc scas xchg xchg xor fcomip cmp repnz and aaa mov add add xchg call daa or fimull sti scas dec mov mov add fmull or mov add loop std lret push add push clc xor cmp sbb lods sub jmp imul xor xchg adc lahf repnz fldl pop (bad) pop pop sub lock ja mov popf nop pop popf movsb mov sub mov dec inc xchg mull rolb xor idivl aas lret xchg add loop aad mov cwtl iret mov pop jno (bad) xlat sbb aad sbb or xchg and pop adc test lahf rcll pop ljmp pop cmpsb shrl insl mov push sarb push in mov mov sbb xchg jmp and pusha and das stc lock pusha add add clc mov std sar mov push xor sti aaa popa or hlt jno cmp cmpl xchg mov push dec inc add dec out cmp sbb jle movsb sub sbb jle or xor imul test out sbb sarb add out cmp cmp lea fisubl roll mov or aas (bad) icebp fimul inc popf dec mov add ret sti jne stc adc inc (bad) adc push loope es ds popf shrl mov mov cmp aaa gs push mov sbb pusha test mov mov sub ss mov xchg sbb or dec ret les into fisttpll daa adcl dec mov aam pusha jl cmpsb push cmp lahf movsl xor ficomp jnp std dec pop pop movsl add add pop ss mov push ds loope int3 jle mov cmpsb movsb xor sbb add icebp stos test dec xchg or hlt xor inc rclb mov jge or or pop adc jp popa or xor cmpsl loop xor int push jge and repnz outsb lea add add ret mov push enter pop jecxz mov adc fwait jl cwtl addr16 and fdivr lahf cmpsl lods jle pop mov cmp in xchg dec les or mov jmp push inc xchg data16 xor sub sbb fdivrl mov xchg mov and add add int (bad) lret lret and loop jp xchg inc test dec cltd xor mov repnz or stos cmp popa or xchg das int (bad) std add xchg mov in mov pop jbe enter (bad) std inc xor xchg sbb mov jg pop inc pop mov call add stos lea icebp push pop xchg xchg xchg movaps arpl mov clc pavgb in add mov push sub mov pushf fild fsubrs inc leave push jmp rorl mov fcmove imul (bad) jbe hlt xchg movsl mov jl jle fimull jmp (bad) add (bad) push mov jl lods in outsb inc xchg xor loop or cmp cli adc repnz (bad) and sub cmp fstl test xchg pop adc sbb add shll sub aaa or mov insl inc imull movsl in and cmp pop out add add adc test dec mov sbbl std movsl test mov cmpsl adc and int3 adc add jle insl xor lea (bad) hlt mov dec scas shrl mov in or fsubl push add (bad) sbb mov pop add imul cmp mov mov mov push imul je int lret (bad) je les sub cmp push xadd les pop cmc cld lods mov mov inc rcr pushf inc xchg inc (bad) dec fisttpll cwtl stos ret adcl mov fs test sub sbb jl xor fnop out or add jne mov push (bad) rorl pop lods lcall sub adc sar add adc push push push and scas mov push movsl mov xchg call (bad) pop mov or inc das test fwait test add add outsl jmp and (bad) andl lret cmpsl hlt rclb sbb jecxz adc jle and rcrb add (bad) sar pop mov dec enter lret push push imul mov les es lods icebp ja cmpsb cld dec rolb dec sub lock add inc mov xchg outsb insl or pop cmp (bad) mov sub icebp out mov mov jne inc insl mov cmp aad loopne mov dec inc (bad) repz and (bad) cmc int3 mov jo cmpsb adc cmc bound push mov jmp outsl jae jle out flds pop int3 push je xchg sbb cltd cmp sahf lret cmp mov xchg scas imul dec push in lods mov adc in jnp mov icebp add scas dec pop lods clc inc or mov sub push (bad) mov bound add loop jg sbb pop lahf inc mov add or add jo cmp and jne jno jmp fs mov clc ss ror sub sub icebp (bad) (bad) xor xor sete gs xor fildl mov jmp mov inc mov pop clc (bad) ffreep push dec fldcw mov cltd add loopne rolb xchg in mov sub add pusha mov pop sbb ret cld xchg xor loop ljmp js rcll aaa enter push cld mov ret xchg xor or mov adc js test call mov jae jp stc lds popf lret add arpl ss fcmovne imul rcrb xchg adc xchg dec mov mov ljmp call cmp movsb sbb fcmove sub sub push xchg repnz push mov (bad) cmc sub jmp jb sahf (bad) sbb fsubrl sbb cmp push pop rolb add fildll ret xchg sbb les mov jno in jp jnp imul stc outsb mov ficompl adc scas jnp fiaddl ja mov scas fdivrs and jecxz inc out stos add add ja xor jb xor mov dec cmc jne xor int fcomps sub xchg jecxz jnp inc cmp ficom les hlt f2xm1 cmpl lret or jnp int mov lret shl or sub mov add lret rcll add insb repz xor mov cmp fbld push shufps pop mov jle leave add test jo out aam fisttpll outsb ljmp pop cld or adc cmp mov aam mov lds test cltd xlat stc lahf rolb add add sbb cmp cmp jbe cmpsl dec addb jl test enter xchg std les xchg mov lods imul (bad) in stc mov mov sbb call mov push test jno sub (bad) push stc adc iret pop mov add xor cmp dec and arpl adc das sbb push xchg dec scas add dec xor fbstp dec lods mov decl dec cwtl das xlat in cli adc push jmp vmovaps jge das outsl data16 sub (bad) sti ds dec loopne xchg sub rcll out add scas mov imul rorb arpl and xchg ret shr in add lahf or or jle inc push push dec xchg cld add jl inc jns adc ds xchg into les imul and add mov cmp dec ret out lahf xor clc jno dec stos cmpsb sbb or inc fimul rcrb into ret fstl fsubrs xor cmpsb cmc test jnp,pn inc rcll ljmp push movsb pop mov scas loop popa jmp add add cmp adc add xlat jno ja cmpsl repnz sub sub push sub iret mov pushf scas mov and mov xor push (bad) into mov mov jne scas test mov repnz aaa ret (bad) ljmp mov fst mov out out add icebp movsl sbb ss pop rolb sbbl repz mov mov jb lret jnp xchg fstpt lcall outsb mov es insb (bad) iret mov fstl nop push sub fistp or add add or lods push in das pushf ja cmp lret pusha nop push pusha dec es xor popf das outsb inc fisubl cmp lock or adc les cmpsl mov and pop popa xchg aas mov rolb popf and add xor inc ret dec mov pop ret enter xor lock inc xchg jno inc rcr dec cmp or adc push push aas inc pop ret and dec sub int (bad) rcrb pop xchg mov mov mov mov fisttpl add mov pop jno adc (bad) xor lret xchg xor sbb cmp mov cmp sete add pop cmp movsl jb mov jne lcall cmpsb lea push clc xor add jl dec nop ret scas mov and (bad) ss inc das or js adc cmc pushf mov cwtl push rcll insl mov pop cmpsb mov mov push (bad) jno dec push mov cmp add jecxz mov daa push mov call (bad) jae jno fwait cmp inc push mov or or out sub dec xchg (bad) sbb cltd adc push hlt pop jle push (bad) inc push orb mov fcmovu test xchg ret les push loopne fwait arpl add add add sub pop push push adc clc sub push les sbb sbb push cli popf hlt mov leave je dec lahf dec jno bound lcall jne jno xchg pop imul cmpsl inc loop dec sbb je add repnz cmp repnz arpl enter add add bound clc cmp dec (bad) scas ds iret xor push adc (bad) dec movsb xchg (bad) (bad) cmp in (bad) das je adc mov cmp int3 insb or ss xchg das inc enter int3 lods lea xchg xchg lods icebp and lea cmp add add mov sub or or xor mov daa inc or int push rolb mov xor inc ljmp rcrl or data16 and pop fist stc fadds cmc loopne cmp xlat in or sub and fucom loope jmp add add push or jecxz and ret sub xchg mov xchg mov ret cs outsl cwtl (bad) pusha xor in push movsl dec pop cmp dec in outsl mov fwait test and jb aam sub (bad) call loope xchg and pushf nop dec ret and pop xchg loope sahf scas aas scas inc fcomps xchg inc test mov fwait rclb push sbb add rorl mov mov or or mov lods stos cli pop xchg gs dec insl mov mov fldenv dec cmpsl adc mov jmp (bad) add push sbb cmp xchg in mov pop enter fwait out sbb jl pop mov pop ja (bad) xchg mov ja adc lahf jmp and sub aaa push stos jns mov outsl stos sub stos jnp (bad) stos (bad) dec mov test pop inc das pop sub add add mov les jle mov cmp cwtl ja push inc push and out cli (bad) sbb jp sub (bad) xor ja test jne ret stc push lahf ret in pop jae loopne (bad) xor push mov inc (bad) out in add (bad) or adc scas leave cmc mov mov xchg mov out fstpl adc ret nop and push movsl sahf adc out sbb or mov mov cmp add frstor pushf and push (bad) popa pop mov scas xor xchg lock (bad) xchg pop sahf pushf mov cltd rcll add xchg aaa mov out pop rcr jae test and jp dec (bad) decb insb xchg (bad) inc xchg aas cmp cltd pop push pop ja gs repnz mov mov test push leave mov add lahf ret in pop jae push das push mov add ss sub enter outsb mov mov sbb dec mov jmp fdivl jnp addr16 sbb pusha push popa pusha stos inc rcll add insb das in test cmp lret push stos test (bad) (bad) or outsb push jne sbb (bad) mov add add add (bad) iret cmp lds int jle mov cld or jb insl fdivp xchg cmc mov sbb mov imul rcll or lods adc and pop cmpsl adc cmc jl xor (bad) ds push cmpl mov inc sbb and sbb ret xor aaa push and stos int3 jbe pop out cli or lock enter pusha inc out imul sub jnp call stos push mov jp mov cmp cs imull cmp mov sbb add add nop jns push (bad) mov dec test sbb imul nop inc in psadbw addl push push cltd xchg pushf imul (bad) sub cwtl repz pop adcl scas jbe push lret mov sbb scas push imul add add fdivr adc es pop adc mov mov mov out push ret or add cmpsl cmp fistpll and faddp adc adc xor cmp sub in jg andb ss sub (bad) mov loope stos jno rorl pop dec push addr16 test (bad) cmp movlps daa sahf mov add xchg cmp push or mov cmp scas jp jnp mov outsb jbe loop xor (bad) cmc in dec cmp jecxz mov mov div sbb pop test daa icebp xor int3 (bad) movsl add add mov sub mov arpl pop imul push (bad) idiv mov popa and sub jne andb sbb jae pushf ds jp jmp stos xor out or hlt les ja lods into mov fnop sub add add insl repnz ret xlat popf pop sbb std and fwait loopne les and loope inc lock push cmp insb sbb fsubl lock ret dec add (bad) aaa lret sbb imull pop jo add mov stos mov std xlat pop pop bound pop roll add dec mov popf dec pop in pop fisubrl xchg iret mov xor pop outsl or test xchg push inc add mov push cmpsb pushf cmpb dec jl fs ficom nop pop or vmovupd xchg mull addr16 fiaddl loopne inc (bad) pusha ljmp das dec jecxz sti mov movsl mov adc das sbb hlt leave fldt add pushf faddl pop lret mov test ret mov jbe pop popf cmp xchg mov push dec add xchg es inc jle scas cltd in sub pop mov shll inc mov pop hlt out cmc in pop je imul sbb dec andl insb jo ljmp pop push fadds loopne push rol mov mov add cld fs mov fcoml push and imul jb fidiv aaa cwtl pusha and insl cmpsb xor mov mov test sarw add add add jb out (bad) jns cmp popf in neg mov test adc insb push sbb popa movsl jno inc out subl inc in sti inc inc lret dec pop inc jg and xor sbb pop ds cmpsb mov mov lea mov pop push dec mov sub add add ss sbb je lret sbb add scas inc mov movsb pusha push lock sbb mov mov mov or imul jbe jno cmpsl push test rorb sub (bad) inc (bad) cmpsl (bad) iret sub loopne dec push add sub add mov pusha shr adc add add push mov data16 test bnd dec jnp sbb and add mov or mov cmp ja negb int3 ficom dec jmp cmp fnstcw ret jbe xor inc cltd lea addr16 push arpl fistpl cmpsl loope xor pop lea or loop sub and add add loope adc outsb add jo fwait scas cli push inc insl cmp and mov mov insl and loope sbb xchg (bad) stos les icebp (bad) and insb mov scas movb fsubrs push xchg push (bad) (bad) or mov mov mov pop sbb and add rcll mov pop mul sahf sub ljmp les icebp jb xchg sbb push xchg fist inc imul xor cmc outsb (bad) pcmpgtb mov test cmp mov jne jne pushl add hlt xor lret insb xchg push mov and fisubl mov adc ret sbbl loop jecxz orb sub shll stos jge and push inc mov test arpl sbb xchg dec pop pop in pop add repnz inc sbb mov cmp lods fisubl sbbl push mov cmpsl cmpsb push shr jecxz sti repnz ss (bad) dec push xchg and xor inc popa sbb xchg es rclb xor adc push and imul push jecxz sub add add (bad) push xor dec int3 sbb push mov jae inc lahf movsb sbbl push (bad) call movsb rcll fdivrl or jge int3 xchg jl das mov sbb mov jne rcrb pop xchg repnz and adc cmp add add frstor cmp inc push jge or dec jp fistp sub call pop (bad) out das test cmp push lcall cmpsb push cwtl in in xchg jmp out fistl stos sti pop cmp (bad) iret cmp and or jns cmp xlat neg cmp add add xchg faddl cmpsb sub mov inc push add mov mov mov andl jns movsl mov add pusha pop fstpl mov ja and xorl adc lcall div sbbl fwait (bad) and mov outsb push add loopne cmc inc add mov cmp add (bad) hlt cmpsl sub int3 test or push jb leave stc jnp pushf mov ljmp add aaa mov insb mov imul mov aam test sahf jne lods cwtl jle lea insb mov add push inc shll das bound inc mov inc outsl xchg outsb hlt shl icebp mov (bad) in xchg orl sub push or das jne push (bad) scas sarl sbb pop ja (bad) inc icebp testl fcomps add loopne pop leave ja xor mov add dec jg and adc int3 cld xchg mov xor dec add jmp je jl dec push jle and dec or addr16 pusha fmull cmp mov cs xchg cmpsb in daa jne and ret and and or push outsb scas xlat notb fucomi scas ret movsl les cli adc dec jl add add pop lahf pop (bad) hlt fsubr das pop test mov dec mov repnz xchg das ffree xchg outsl ficomp fild cmp inc sbb aaa inc add ss inc lods xchg aam push inc ds dec insb inc jo sub push cmp test dec (bad) jns ret and adc and jge sahf jle add add lret aad lret inc in or movsb lock scas cmp xor dec cmp movsl shrb mov sub sti addr16 popf cld inc push ljmp aaa leave (bad) out test imul pop add imul lret in addb cmpsb mov pop aaa xchg pop pop mov test add add jl inc push pop push mov fcoml push add push fistpl dec aaa pusha or cli data16 mov (bad) cli inc icebp iret pop iret jecxz nop test inc dec push mov jge js cs int sbb xchg loop les dec addr16 neg push mov in aaa cmp pop (bad) jmp leave adcl add add or dec xor in pop movsb pop bound sti outsb mov dec into hlt pusha or jae mov lret or popa pop or mov dec mov xchg jo stc loopne out popf inc cld je lock popa and loop in dec mov popa outsb mov or push sub sub stos fxtract push add pop add cmp inc mov js sarb sarl mov mov pusha (bad) loope lods shlb adc ds or pop call pop test fldt enter pop jnp ret out aas add icebp mov sbb aam addr16 out xor or push sbb xor cmpsl jo inc shll sub and aam adc mov aas adc and lcall jae xchg xchg mov inc adc dec add sar testl jb aas popa (bad) ds xor repnz pop xchg add add scas cwtl mov rcl clc push sahf loopne arpl rorb gs inc cld loopne lods scas (bad) mov subb hlt push lret or jno ret repz fnstcw daa pusha mov xlat push in jae sbb cmpsb lahf ret sub mov adc call add movsl outsb imulb jo aas mov aaa jns push push mov push pop xor add (bad) sbb mov pop stos inc jns arpl jge pop cmpsb mov push sahf in insb inc out dec pop or out int mov xor in add add sbb push es and sbb push (bad) mov or test jno call and sub jle enter push jne das mov bound adc jg mov ss inc jb cmpsb ret adc data16 push loope sti jae in xchg adc cmpsb pop jl xchg jle repz pop xchg call add mov test push cli push int daa jb add adc cmpb dec dec scas and sbbb push lds push mov shll out jnp fcoml lods mov enter mov popf outsb push sub add lds sub xor out ret pushf mov add add stc push xchg nop xchg or push test ret jo mov bound sub jns xchg out pop jnp jb ret lods nop cmp mov xchg push adc cmp adc (bad) subb adc add add cmp lods mov jno mov mov mov xor fsubs sti outsb adc or addr16 outsl ret test decl aaa hlt repnz mov ret cltd adc std gs jne jne sub sbb movsb sbb mov in aaa movsb or mov dec cwtl push add mov rorb decl aaa add test outsl add and xlat xor push movsl jg,pt mov inc push mov pop push fwait test in jmp inc mov cwtl push movw roll push pusha aas adc mov stos xchg or push fldenv in popf add add scas fbstp addl and mov enter cs add or fwait xchg fnstsw mov pushf inc dec imul and xchg dec mov pop xchg push inc adc divl jb (bad) iret xor mov add es fild xor jb in (bad) repnz dec cs xchg xchg nop add (bad) ljmp sahf in xchg test sti jmp push adc addr16 ss gs and shrb es int inc adc int3 pop jns insb sbb int3 dec (bad) out xchg bndstx add addr16 dec push sub insl mov cmp outsb push in test adc jo sub cli inc mov jp sub cmp ja mov repz or je dec push in cmp cmpsb rorw ds dec mov dec and cmp das push add pop jne (bad) dec sbb sub sbb testl pop dec in fdivs in xchg out andb push jne lea and mov push mov mov cwtl lds mov pop outsl jmp cwtl ficoml mov push xor enter bswap dec aam xchg cmp mul hlt cmpsb push add add add cmpsl jo mov push cmp jp mov mov rclb mov outsb fbld je lock mov scas sub std sbb push mov popf and cmp les dec pop lea xchg jo test repz adc add popa (bad) aaa xlat xchg mov pop (bad) fmull inc cltd inc xchg sbb jno int cmp push jp mov movsl mov jnp sbb push and jmp xor fsubs ss fist stc or and das sbb or or xor (bad) add jl xor adc bound lret loop cld xchg ljmp xchg inc adc pop (bad) test inc cltd movsb (bad) pop xlat mov lock mov ss leave dec in or les xchg sbb jb xchg xchg int mov xchg push lcall add clc mov jns mov dec test shrb mov cmc sbb jno shll push xchg sub inc roll and push mov pushf cmp push inc sub push jo in pop and jecxz lds inc ret popa lock add add inc data16 inc pop inc in add inc push xor ja inc test sbb (bad) sahf cmp fwait mull push nop sahf es cli push leave mov ret sti add (bad) fwait enter inc mov lret aaa mov add pusha and (bad) push sub das mov inc cmp add add add mov sbb or (bad) xchg cs pop or jg outsl xchg mov push ljmp lock sub push cmc loopne or bound scas aam les and setno push mov ljmp lret mov push out in cs pop mov add pop (bad) dec mov int3 lds pushl xor mov roll push inc adc push movsl add aam xchg adc jge repnz aad add cmp ljmp in sbb test fs sti push xchg cltd cli insb ficoml fst add cmp cmpsb in add int add repnz lret ror mov popf pop dec mov mov fcmove rorb mov pop icebp and ss xor daa rclb push pop lea aad movsb xchg loope movsb ds and and jg in or mov mov out pop shll sbb add add xchg xor ret sbb xor in mov cmp aaa aaa jae int3 dec or pushl mov pushf int fidivr dec push stc cli lock mov ja (bad) std cld push test and and fildl pop leave jmp aaa mov stos je sbb dec sub test lods add xor cmp adc lock popf add cld inc ja push je xchg sahf call sub les pop mov insb les mov (bad) xchg shlb test xchg and inc sti mov ja shlb rcrl cs cmpb (bad) or test add mov movsl inc out movsl in in sub add pop adc jno sbb push orl dec mov xor jmp sbb jnp fistp int push lret push xchg cmp pop icebp in dec in fnop dec push rolb (bad) xor mov (bad) in sub add add add jnp cmp xchg lret sbb add das mov push popa rcrb xlat lcall ret mov cmp mov (bad) sbb adc mov ret jmp ds sti mov out ljmp mov dec add add add push cmpsb out mov das mov dec and mov mov test xor inc movsb add jo rclb add mov sbb mov jno mov popa std cmpsl jp icebp lock or dec mov jno popf push pop sub sarl xor push add aaa cs mov test testb mov (bad) cltd (bad) mov cmp pop lcall stos pop pop fwait mov imul in jne inc lret fldl xor or in xor ss std lock cmp and add ret mov incb add add in push stos push push push cwtl mov into popf test das scas cmp insb in pushf scas int3 fwait clc sbb int es sarb xchg addl push (bad) add xchg jae in cs out xchg sub and or pop mov iret push or jnp pushf popf or shll test ret xchg jl popf movsb les mov sub jb xor in hlt test push dec ds rorb fnsave mov arpl lret push adc push mov add lret sub xchg repz push pusha push shrl xchg cmp call pop loope add in xchg jns xor push (bad) mov inc ret pop aam and pop sarl sub int ja (bad) push nop addr16 sub movsb aaa out xchg mov fs xchg test fwait out add aas add (bad) cmp lods pop cmpsb xchg adc xor or (bad) pop add test xchg dec mov or dec push add rorl addr16 pop mov lods out mov push and out int fimul dec mov and (bad) dec scas neg jle xchg and outsb (bad) decl pop push cmp add imul add pop or push nop (bad) and mov add dec lcallw popf iret jne (bad) or daa add adc int3 (bad) xor int cmpsb icebp imul (bad) inc or insb push xor ljmp add push addr16 jbe cmpsb adc and pop adc sti pop jb add dec pop pop mov rcr push cmp sahf gs loop sub jge mov mov jne gs cmp rcr xchg cmp pop nop and jo and xchg lret shrl rcll pop push sbb cmp cmpsb ret arpl lock inc jmp mov add int xchg and mov rol (bad) xchg xchg pop sub lahf sub push inc xor inc sbb fs jp movsl jle mov stos pop loopne or ljmp inc sub daa fxch push ja or ficompl mov jmp inc jmp test jo loopne mov inc into mov pop push inc das in push lret inc cmp movsl mov enter mov xchg mov dec xor mov or push mov test adc and adc std pop or int or pop out rcrb mov sti cwtl icebp dec loope push jg (bad) (bad) mov addb dec test daa data16 scas das fnstsw jo mov cs (bad) or negl or push dec cmpsl popa leave inc js iret aas sbb jns ja add aam xchg call xchg or cltd pop xor sub sbb cmp push add add add pop scas icebp ljmp push pop aas xlat push movsl les and sub or mov xchg les mov mov sbb inc dec jmp inc into fcmovne sbb and lods test (bad) adc sbb out adc jle stos xor int fsubs stos mov add add ljmp dec iret mov aad lods or fwait xor test dec sbb je sahf mov xchg and (bad) push xor nop inc popa jno mov imul repnz add jecxz ds int3 sub mov xor hlt sbb and add add in lcall inc mov inc pushl xor das xor out (bad) mov mov je mov stc and jl sbb adc ffree or xchg inc clc popa jg add push lret enter jmp pop int adc enter inc cmp pusha mov sarl sub add xchg idivb sub lds es fstpt nop cmp mov sahf repnz add scas das inc lock orb pop jae std mov imul and and dec cmpb pop sub lods sub mov rclb xchg cmp add (bad) pusha mov loopne mov cmp cmp dec lea scas xor add sahf add cmpsl ja sahf and push sahf ss js,pn dec data16 (bad) jae (bad) mov movsl or push xchg sbb add sbb aam xchg mov jo mov mov dec fst pusha sbb push jge add add sbb mov or push fdivr sbb (bad) out and dec dec insl mov pushf cmpsb mov stos mov mul mov aas or inc out jmp pusha adc xor stos sub push xor out ds cwtl rclb test cli push add add push dec in or jle push rcrl dec test rclb fs mov test and rcrb sahf jno cwtl lds lcall inc pop shll mov and int3 mov mov xor jge imul cmpsl cmpsb push shr loopne loopne and mov fcmove jo add jae inc adc dec xchg and xchg pushf cli movsl lock mov clc scas adc add xor mov adc aas idivb jle add xchg sbb leave aam fdivl dec mov out ficomp dec cmp mov cwtl in xor lcall xchg xor add add inc aad insl mov out ds pop lahf xchg cmp push add movsl lds or popa sbb xor dec mov (bad) inc and (bad) stos stos mov push mov jl add cwtl inc fiadd rcll jg mov int mov sbb dec xor imul add add test cmpsb sub sub (bad) dec rolb pushf stos (bad) icebp add loopne pushf or and inc fwait mov adc test and jbe pop dec push add mov sbb pop and add popf and push push mov hlt push add add pop shrb (bad) outsb sti sub push fisubl call jnp sti adc iret and pusha push roll push (bad) rcrl data16 pusha xlat ja pop pop pop jno test jns sarb and push sub flds in jo lds call inc lea mov pop movsb repz repnz sbb jmp sub dec add cmp insl sbb cmpl out mov jmp hlt mov ja inc push inc dec mov dec cmc mov movsb notb stos jge orb ss (bad) arpl add xor and lods xchg das insb cmp lahf sbb add into js sub out je push jge push pop fldt iret ss xchg cli add cmp sbb les sub (bad) pop inc in leave daa cmpsl push xor mov adc mov imul pop jecxz repnz mov aaa imul cltd jle das and add add fisttpl movsb or (bad) jae mov push in mov push push aas and cltd cwtl mov mov mov lods push sbb fs cmp mov and outsb push sub sbbb leave push xchg adc sbb cmp fimul cmp inc ret mov sti lea add cwtl push dec mov cmp ficoml adc mov push inc sub adc cmc lret mov cli movsb sbb add orb pop adc rclb pushf sbb cmc imull mov mov (bad) ficompl add sub in stos mulb mov inc shlb add add cmp mov xor lds fwait inc arpl dec cmp cltd (bad) decl or jmp mov cwtl jle,pn lahf xor aas xor sub mov divl mov lret lret pop movsl xor pop (bad) mov and fcoms jns (bad) jno js add add (bad) push pushw cmc adc int3 or sbb inc repz mov adc ds shll iret push add xchg cmp jp imul int3 or clc mov push hlt xorl cs test arpl add iret ret xor xlat jp push pop dec out lea das mov pop jl lret fsubr aaa push xor gs rorl arpl (bad) pop cwtl sbb pop mov dec jecxz inc (bad) je jns fdivl mov xor (bad) cmp jns fstps and inc push xor add add and lcall in and loop lods push aaa in cmp sub xor movsb rclb mov sbb pop stc push aad xchg push mov outsb shlb cltd mov lret test mov imul lcall shr movsb sub js and mov push xchg push xor mov test aas loop push insb daa pop sub inc jb xchg cmp scas push sbb adc fisubl (bad) clc mov mov cmp adc push imul xchg push xor movsb cwtl mov add mov xchg dec mov mov mov xorb mov pop imul clc cld push adc add mov xchg scas out pop mov xchg lahf mov inc addr16 mov mov mov (bad) add inc mov lret jae loop add insl jnp adc jns (bad) lret roll or dec and cmpsw cmpsb cmp and xchg jo mov push sbb mov stc inc sub sub aaa xchg pop fildll into jbe and sahf sub inc fidivr in aam fldenv sti dec xchg loopne mov fisttp pop mov xor rol sub adc jnp clc repz push mov xor ffreep daa xchg in sar sbb sub mov pushf jno js int3 mov pop jbe push and arpl mov fucomip test push sbbb lds imul cmc xor xlat add ret inc data16 pop or or ja mov out sub mov jg sbb xchg and mov mov and cmp sub cmpsb call in cld jno pop cwtl cmc (bad) aaa jo sub pop js fs push inc jmp add mov loopne ret sbb dec sbbb ffree mov and shrb hlt inc cmp mov sub loope xchg dec dec dec mov (bad) xor stos xchg fwait imul sti mov adc out inc lret int loopne stos push cmp mov loopw mov daa xor pop js (bad) iret ficoml add add sbb cmpsb popf test js aaa push ss in ljmp divl cmpb push lret or mov icebp cmpsl btr jle mov adc xor test in gs into cmp arpl out push dec mov add add jae sub sarl and test sub pop dec out movsl fwait popf sub fcomp or shrl out ss addb pop (bad) adc jae add jns sub pop dec int3 scas xor pop fcmovne pop pop iret int unpckhps add std repz sti fsubp mov out xor push mov pop or movsb out xchg mov movsb sbb das rorl sti (bad) xchg sbb iret outsb (bad) fcmovnu pop imul mov add and xor xor into iret cltd lret sbb cmpsl sbb ljmp mov add pop or dec cmc cmpsl or dec dec dec jo add mov addr16 mov loop cltd and pop xchg (bad) push stc mov lea or daa fstpl xorb cwtl jb push xor push push aaa in arpl psubq ljmp dec popf and adc push inc iret add in jmp inc lcall mov push testb shlb roll xor jno adc jns sub dec es lea (bad) daa and cwtl cmp push out xchg or cmp in in jle in or aam es add cltd in cmp mov into (bad) movsl lock mov push cltd cmp jmp cmp lds jno fnop jne nopl adc aad inc sbb sbb stc hlt movsl into fist or add sub cmpsl xor aad in pop lods cld sahf int3 lret pop mov cmc movsb mov add outsl jp jg cmp rcll mov pop ja adc add sbb insl add push aas jbe push addr16 mov adc icebp inc insl sbb lahf sarb gs jae xor cwtl stc roll hlt dec sub pop jnp pop add add (bad) push fistpll test shll mov mov cmp cmp push xchg xchg push (bad) mov movsl test dec pop and pushf cmpl mov jle pop outsb and inc lock lret add dec mov and and daa pop stc or enter inc add cltd add inc xor add lods push nop sub imul adc jno push push inc cmp sti adc inc jbe dec dec xor and (bad) popf test push lods cmpl adc std lret sarb mov sub lock add ljmp das cmp decl test call ret jmp jno loope clc or dec imul dec imulb lods lods push call test push rolb or xor push sub (bad) imul loop cmpsl dec lods popf test inc and add xlat ret cmp rep mov sbb dec pop and pop jl scas mov mov and push testl aas (bad) fcmovb jbe mov add inc xchg scas outsb jmp xchg mov and ss inc inc jecxz inc xor or jl das leave lcall sbb pusha pop lea adc sbb rorl or aad pop in mov in cld std cmp aaa and inc push int jmp dec xchg test bound ret fiadd jnp pop push int rorl sbb or das sbb std (bad) arpl ss lret pop and and inc push or pop jne push (bad) cmp or mov cmpsb xchg mov ljmp jp (bad) mov inc imulb ficoml mov dec gs ss ljmp inc popl rcrl mov lods push pop or dec push paddq insl insb sarb adc xchg adc loope pop or cmp mov adc rorl int out cmpsl add shlb arpl mov pop add insb notb ds cmc les push jp aas das fldenv xchg xchg dec mov loope das mov inc push std fistpl ds call adc jbe das jecxz xorl cmp movsl jne iret and and or fldcw sub cmp call out xor dec mov arpl mov test popf adc dec cmp shlb inc inc mov out dec loopne cwtl jnp push add stc mov sti mov push fbld aam mov lcall push repz jo fildll inc mov jns not cmpsb jge aas cmpsb stos mov scas dec sub push fistp out out hlt pop adc das icebp push jl sar push and cld cli add add adc sbb mov xor jmp cmp inc cmp int insl sbb inc dec mov rol jns cli pop cmpsl jne xor aad or adc mov sub das in inc adc fs push movsl xor pop ljmp dec adc dec push push (bad) mov add repz mov mov loopne cmc lods fstl jl push ret clc jae fs fnstsw add popa data16 into lea out and movsb ret int lahf cld mov lea das fldenv inc mov and out lret cmp fadds add add insl leave xor or adc std fmulp mov or (bad) and ja push adc test aaa mov dec (bad) lea aam push cwtl mov pop pop dec adc stc scas push inc imul pop dec dec test aaa mov fsubrs push add dec out enter add add cmp shrl lods test out mov data16 dec adc mov xor aaa loope dec pop pushf cmp fldcw cmp cli fdivs cmpsl rcll daa loopne aam cmp (bad) call out mov sbbb addb add add mov inc movsl xorb mov mov icebp cmp pop pop scas jae adc gs decl setge mov push cmp cmp add cmp repnz xor insb or sbb int3 (bad) dec cmp stos test jg mov add ss js jle sahf ljmp int xor in repz arpl mov mov addr16 mov fsubr sub mov jne push add add out lret lret clc fwait cmpsl push adc pop aas call mov xor inc pop or int sbb fistpll adc js cmp scas loopne mov xchg push loopne mov je sbbb subb lret mov add xchg cmp lret push jp add mov and xchg push dec jecxz rclb cli subb cmc leave xchg fwait jg ljmp sbb lds add scas mov dec into (bad) and fisttpl js jnp mov dec repnz adc bound dec fisttpl les mov or inc and pushf sti (bad) jmp out fidivr daa mov (bad) xor lock xor or imul push rsm cld loope mov aad add add jmp enter fimull std rcl dec movsl jmp aaa mov lahf dec int xlat or (bad) mov inc pop movsl cmpsb out aam xchg (bad) mov add lahf jne push fwait jo pop cmp aaa mov mov push test rcl add lahf nop movsb cmpsl ret push (bad) lret lahf std (bad) cs jg xchg mov ret mov cmp ja in loopne out (bad) test repz stos mov jmp sbb std mov inc push cli push push jne mov jg jbe jmp mov pop insl inc (bad) (bad) cld push adc jecxz or pop out add loopne je cmp in mov (bad) sub loopne xor das cmpsb xor xchg leave inc adc (bad) xor push inc mov pop push sbb stos out add and adc jne jb dec fldcw cltd sbb popf adc repz mov push push mov int data16 add lea notl cmovb es into (bad) cmp ret in mov and movb mov mov (bad) mov push test inc fimul inc dec lds push adc add idivl stc cld xor push push pop adc push xor add cwtl push fnstenv xor sahf jne add pop add xchg jo insb xor les pop repnz xor cmc scas loop mov inc stos outsb push (bad) dec repnz mov pop leave (bad) in mov mov shr sub push inc add and ds add add add add and mov xchg popa sahf adc jne (bad) pop jns cwtl daa mov add dec into fidivr fwait shrb xor loopne mov push xchg xor mov mov std inc sub cmc or repnz or push push cmpsl sub (bad) sbb jb in fsub mov cmp mov movsl scas call ds fdiv in loopne push pop in xorl add add into or sbb cmp icebp lahf or mulb pop adc xchg (bad) jo orb xchg xor lock in and mov movhps es les hlt add push cmc fsts dec sti add movsb ret negb jge sbb popa outsb shl mov mov (bad) in aas adc rcl or jmp sarb add (bad) mov and add nop cmpsl lods popa std jns add out mov call sarb cmp idivb lret popf adc add daa sub jle lret loop xchg clc jb out jle mov mov pop ss dec jmp and int3 jg xor stos fistpl and dec mov js push add or mov icebp inc mov aam jns cmp test dec stc enter or or add add popa rclb inc call xor mov push xchg cld or in mov jmp or fwait push lds aaa inc lock xchg pop lcall mov out outsl mov test outsb in inc stos cwtl enter imul mov add mov mov call movl es notl dec lahf pop loope sbb jbe cmc xchg xchg sbb xchg enter pop fcoms push das xlat xchg jg add inc mov (bad) xchg inc jae,pn pop (bad) mov pop mov mov add jnp lods xchg jb pop adc dec dec add push pushf jo pop push adc dec xor pop or push mov jae enter sub pusha ljmp pop outsl and lcall inc decb out push xor sti idivb sti add cmc loope xchg sbb mov popa add movsb outsl nop pop cli rcr shrl inc sbb mov nop xchg inc sub or sub aad out mov dec jno imul inc adc mov mull xchg pop pop push dec popa fisubl cmp mov lret add (bad) data16 les adc (bad) hlt iret jp cmp sbbb arpl and fsubrl push push xor icebp sti (bad) (bad) pop mov cmc inc xor sbb inc ljmp int push in inc rorb out xchg sub xor idiv add ds mov popf jae clc pop loope push sti movsl push sub mov sbb add xchg adcl jo hlt loope cmp cmp inc into dec lds mov clc dec das jecxz jne loopne adc pop inc leave push push repnz sti lret adc push cmpsb xchg fdiv mov dec xor dec and or dec nop fisubl outsb adc sbb lahf mov pop fnstenv xchg aas cld push add sahf addr16 fstpt out rdtsc push cmp pop inc or jbe daa mov dec jnp scas jmp mov adc mov sub xchg shlb (bad) adc outsl jl push rcrl int cmp cmp inc fisttpl sahf mov pushf inc cmp pushl jp inc popa add jl jge mov bound (bad) xchg or or fisttp movsl add insl je add sbb lea call add in fnop push jg int adc push sahf notb mov inc add ret int3 scas lods xchg les dec xchg mov repz cli jle fucomip mov push stc adc cli push jns mov mov insl (bad) (bad) jmp mov cmpsl sub add pop ret hlt xor mov pop das lret cwtl fdivs movsl adc sub call loopne add lods sub adc dec sbb test sub jg mov insb jecxz sub bound cmp outsb mov cmp rcl inc dec ret dec adc out xor les jo push fldt test sbb inc xchg int ss dec sbb imul adc jo fisttp jmp (bad) jbe adc add daa jmp or add dec jg pop lcall pop jbe in or fmuls jge adc lods push mov mov test rcll je stos cli jmp inc pop movsb es sbb rcrb pop add add adc adc (bad) int stos add push divb jbe and and push jp jge pop adc cmp hlt or js and into push pop xchg call dec out loope ja ss test jbe ss xor sub (bad) pop add push pop je test outsb cmp cmp sbb divl ja push adc test pop and sahf mov in icebp repnz mov push mov jecxz xchg add fwait bound xor lahf mov in pop push mov pop sub add add mov jns repz pop jns xor or movsb pushf xor into imulb lds es outsb ret xor aam hlt add fidivl cltd nop aas lea and fimull xlat out mov imul mov mov aad cmp adc fidivrl cmp add add pop push push sti adc mov add pop in insl sbb jl push push js cmp cmp loope,pt mov dec sarb xchg enter or ds dec pushf loopne ja inc fbstp jae fldt push (bad) sub adc inc push fs sbb ret popf fistp add dec cmc pushf leave sbb mov dec fcmovnbe dec inc shrb push xor jb mov (bad) cli dec mov mov movsl iret test or or inc xor jae pop lret stc jbe ds xchg mov pop fldl and out aas add fimul add add inc adc (bad) fistp add adc fsubs incb mov std dec jnp inc mov in gs repnz movsb insb mov je aaa icebp arpl or rolb inc jge xchg negb orb push push xchg dec xchg xor adc stos pop insb addb mov rolb mov out ds pop sbb leave lcall sbb add (bad) xchg xchg dec adc adc mov js aaa xor rorb xchg xrelease dec sub stos mov idivl decl pusha je pop jb das addl jae jnp (bad) nop add (bad) mov push dec jb out aaa lea jle adc add (bad) fisttp jecxz cld fistpll cmp sti and stc cmp or or cmp adc jecxz xchg scas bound pop sub ss push test sbb mov lahf xchg imul add add dec enter or mov aad jg cmp add sbb xchg inc or pushf sbb add push (bad) test lods sub xlat neg fldcw (bad) fdivs jo stos add mov xor subl pop mov pop aad scas movsl jno add lods loopne sbb pop mov out pop sub ss adc jmp dec jle das jns cli out sbb pop les out push push inc clc not push (bad) imul out pop shll lcall inc aad lahf je mov scas mov fistp imul ret dec dec mov lds daa push mov add jns ror add mov loope nop ret pushf hlt cmp fbstp mov lods inc xchg cmpsl xor or pop (bad) inc jl dec mov insl aas lcall xchg adc loope je aaa mov in sbb pop enter xchg lret fidivr test add or loop mov mov into test sub stc (bad) mov (bad) je or pop imul adc lcall jg (bad) dec ja fs inc cmc mov lcall inc mov fcomi or lret movsb mov add add out jg mov (bad) jo jg inc cmpsl scas xchg test xor xchg push stos cltd outsl hlt je ja pop loopne (bad) mull dec adc rcrl sbb mov out xchg xor mov fnsave mov pop popf (bad) inc pop pop int3 push cmp add das test popf ja dec and adc pusha cmpsl xchg in inc scas shrb push add push gs mov mov in imul aaa addr16 into pusha daa dec sbb sbb cmpb aam dec or dec add mov jmp dec aaa in inc mov add es icebp pop fsubrp (bad) rcll sti int3 mov sbb dec (bad) sub jecxz (bad) mov inc repnz mov fdivrs ret in shrl xlat dec sbb push leave pop idivl (bad) loop add in mov pop loop or std mov pop (bad) (bad) mov add add ss sbb and (bad) aaa data16 cli leave inc daa xor push call push test pop dec sub mov fsubr es mov mov ja mov push mov inc add adc xchg add sub cli fstpt cmp jns loope insl add dec mov cmp and ror (bad) xor int push adc divl mov mov cmpsl sub lret andl sub mov bound inc push add fidivr mov adc lea add pop daa in lock mov divl in inc pop in sub outsl (bad) jecxz or movl add add jno clc rclb call dec mov push push das fistp leave jnp neg lods cwtl std jl mov cltd movsl cld push mov and faddl paddusw mov lret or test xchg inc or add clc pop mov mov xor add xchg xor je mov std insb stc adc jmp iret sub adc xlat test ret in rcr fdivr push dec aaa dec and sbb mov cmpl jne push push cmpsl sub aas dec ljmp push add add out cmp push push incl int3 js jle pop aad cli xorl mov loopne xchg inc xor adc jp js add pop xchg and es dec nop mov pushf testb sub cli clc mov in popa dec push adc push cmp (bad) aad dec mov add arpl mov into xor mov aaa pop mov mov mov jge xchg and (bad) add imul cmp jg imul arpl xor inc rcrl pop sbb push sbb jo jb adcb dec fcoms pop or dec sbb ret daa dec dec testl add add mov pop repnz adc les fldcw sahf in inc inc fild jbe mov push mov or rorb mov clc insl push add out or sub subb mov pop cmp roll loopne jl fisttpl inc daa insl push mul test jno add add aam xor mov dec or fmul dec ret mov out dec aam push and mov addr16 cmp xchg lahf test int ficomp fadds test xlat pushf imul pop inc pushf call aas adc loope mov call stos cmp cmovne add add into test out jns test stos out mov repz lock fs inc sub lock adc push xchg shlb jmp std lea jne icebp nop idivb mov push data16 lods scas fisub repnz and movsl jl cmc mov (bad) ss in add add xchg fidivrl test inc test mov add lods int3 or das adc push xchg add cmp mov fmuls mov scas pmullw lcall sub mov add outsl dec cli insb imul sub fwait sub add dec mov add mov cltd mov mov fdivrs xchg dec sub adc sbb test aam adc test fs test lods jns int mov push fisttpll imul test (bad) (bad) loopne cmp inc cmc cli mov (bad) mov (bad) xor add dec mov adc jb jne inc cmc out and sub mov mov iret out fistpll jl pop xchg add pop int inc (bad) sti fnstenv fs pop jo ja lock pop shll sub stos add repz pop and push jecxz mov xor jp mov shl add add push mov sbb push (bad) sar out lea mov ret aam cmp pop mov jmp xchg loope sbb xchg xor fbld pop scas leave jecxz in pop lock daa mov cmc mov jno dec (bad) sets mov ds lods jp mov jecxz or add add add and mov jecxz iret (bad) popa sbb mov scas push int lock push adc pop rorb insl mov cmpsl cli insb or scas sbb and push jecxz in mov or and test sbb and lock pop iret cmpsl hlt lods loope lods sub add add ds jl and loop cmpsl mov into dec xor mov mov xchg je insb sbb sub mov (bad) cld mov sub fsubl jo pop dec cmp jns pop adc mov movsb add ret das movsb adc fst pop sub jno and cmovp sbb icebp insb xor xchg insb loopne mov cmp push mov repz add pop dec and inc sub (bad) insb or test cwtl movsl test xor in xor repnz (bad) push dec cwtl push add mov add sti cmc mov mov inc (bad) mov add mov movsl ror add outsl cmp sbb sbb inc add pop enter (bad) mov imul in or (bad) in dec pop fdivr xchg repz aas cmp cmp std add cwtl (bad) jno bound jae push mov pop stos inc pop add add add outsb fdivs mov ss (bad) push out xor in xchg mov es jns lret mov lret adc sbb notb repz dec out mov xchg adc mov sbb sti aad push into jmp add add insb jne into pop sbb imul mov and sbb ss enter stos mov enter adc clc mov dec add and sbb and addr16 add dec push inc pop ss (bad) pop outsl or mov jmp (bad) mov adc sub add xchg pop leavew (bad) addl or enter scas jae loopne jne jp (bad) jne inc nop loopne pushf or repz xor imul in inc inc mov or sti iret adc loop popl jo cld test xor sub jmp push cltd fsubl mov mov icebp jo add add dec pop jne push jae lods insl jmp movsl mov lock idivl pop bound iret loope pop roll ret mov inc insb mov aas ss cmp outsb imulb or (bad) xchg sub mov xor cmp addr16 add aad and mov test data16 add add cmc (bad) iret lds (bad) js lahf xorb jb cmc cmpsb loopne sbb jb mov test xor movsb out out sub push mov push icebp xor xchg or cmp xchg sub adc cwtl in ds lods insb ja lock add add xchg push (bad) cld mov cmp mov add enter jecxz js mov add pop pop push adc loopne jle fimul test mov xor fistpl dec lea push pop (bad) mov push stos and movl inc aaa push hlt and test bound (bad) sbb mov cmpsl add arpl imul (bad) int outsl outsl orb sbb mov je dec jge movl ret outsb inc adc dec jns cld mov test jae inc mov icebp ja add rolb cli push stc sbb lret push pop add xor push popa int jmp jge fwait imul xor rorb dec mov xchg cmp rolb (bad) ds insl imul fisttp jge scas and sub inc fistp pop das in repz add push mov popa je stc cli add push pop or (bad) das pop bound insb loopne incb dec push jp and data16 sti adc lods cs xor jno jmp dec adc lods xchg sti mov stos (bad) aaa push pop loop js pop xchg add stos dec inc and or loope push bound ds jne mov loope sub std js xchg lock mov out or and clc in lcall lahf pushf out push jecxz in addl rolb mov mov ljmp add add popf push sub (bad) lds nop mov mov clc sbbl lea xor imul insb pop leave mov sar cmp jmp jge nop mov int3 rcl ret jecxz push les push imul or add add or stos lahf xor jno sbb add add or repz ret lcall add cmpsb cmp push add xchg jecxz jbe js stos mov inc sbb jbe shlb pusha mov and sbb (bad) (bad) (bad) sbb add movsb adc xchg xor lds fisubr jg mov mov jae (bad) (bad) stc jae xchg data16 push out lock icebp (bad) ds mov outsl inc pop sbb xchg mov orl sbb dec push mov sub orl hlt fildl sub lods add or jmp pop in in subl xor std icebp xor enter push rorl dec ljmp jmp fnop xchg fdiv gs mov aam sub mov jnp cmp les xchg xchg rcrl test mov sub mov add faddl push jecxz or out dec cmp add push sti fnstcw aad mov nop stc dec (bad) xchg das into and loope pop cmp xchg cmp fnstcw and jae fwait inc dec sti sbb adc lds clc jg sti sbb mov rcrb add ficompl and dec (bad) (bad) out das outsb sbb test inc dec test mov inc enter ret (bad) sub add leave xlat jl cmp and (bad) jno adc sbb cmp inc rol push push sbb sub dec js imul push sbb es je bound pop adc xchg add mov push mov dec add in repz (bad) out addr16 mov xchg cmp xchg les les aad xor lret dec int mov in xor mov pop inc add repz lods push xchg or jbe js mov xor and cmp adc fist pushf sub lcall jno mull push inc pop xchg fisubr jl pop adc leave adc cmpl (bad) call mov scas push xchg push (bad) repz and test outsb adcl mov mov push out scas daa mov aaa jl pop arpl sub mov sub jl xor sub inc std add sbb dec and enter mov mov dec cld rcll adc xchg mov outsl mov ja sub xchg cmp sub arpl jl add add xchg sbb xor dec (bad) adc ja out out movsl test pop aaa test push cmp test cmp repnz idiv neg lock sbb add stos inc pop enter arpl insl leave mov adc pop lods test enter xchg mov leave push inc fcomps lods sbb cmpsb dec mov cmp cmp add arpl add cmp cli pop jnp bound sbb jo add or daa (bad) mov lock (bad) adc sbb cmp adc cmp jae inc dec pop int mov mov push xchg ljmp mov scas or cwtl add cmpsl cmp xchg mov add cli into repz dec mov shr pop shrl insl add in push mov ja popa inc icebp cmp add int je mov int lods mov sahf mov add lock add js jns nop push xchg lods fwait push push push add sbb push push sti insl mov (bad) push add shrb sub iret inc push jp mov icebp sbb and sbb push and notb jp jno mov clc mov rcll into sahf mov jnp movsl int or je dec cmpsl xor jnp ret push ret cwtl sahf rcl push and xor adcb and and mov adc mov sarl fucom sti bsr roll jb aad mov insb lret xchg movsl xor movsb int xchg sbb rclb imul lret dec data16 fadd (bad) cwtl loope mov add add add mov imul icebp ret adc adc jae rolb jmp fiadd xchg ljmp sub in push fimull mov mov dec repnz dec cltd aaa (bad) in aam out mov xchg push inc lods add jmp rorb adc xchg pop cmpsb jl mov add pop push cmp das sbb sbb loop outsb popl testl in in in (bad) ficomp jae sbb mov mov inc enter insb sub sbb out and lds scas fs dec add jmp mov adc add movsb mov dec and inc dec xor iret mov sub add jle lock lret mov pop add int cmpsl in enter push push stos push and xchg dec dec fistp or fisub movsb ror imul jns call cmp lods aad add push add xlat or add sarl push in mov aas hlt pop mov xchg cmp and cmpsb out jno shrb les je das xchg rolb (bad) movsb mov stos dec dec (bad) dec or cld jle enter mov push and ja add add mov inc inc inc push lock aad mov inc enter movsb inc aaa inc adc rcr aas push daa incl and mov push shr cmp xchg pop lahf mov inc pusha xlat sbbl xchg daa mov es cmpsb daa pop lods sahf or push lret sarb enter lahf js (bad) test lcall sbb jne lods mov ficoml test push xchg mov lock sbb push jmp out arpl icebp leave xor clc add test cmpsb pop dec mov xchg and xchg push adc call add aas dec pop mov out insl push xchg test add loopne add pop push mov fcmovnb xchg aaa cld in imul cmp push push int3 aaa pusha add cltd jge div and sahf sub pop cltd (bad) xor in loop xchg pop jg inc jo cs jmp test in or dec cmp in add (bad) in mov movsb bound sub out fldl aas mov outsb nop popf mov (bad) push pop cmp mov (bad) sub (bad) pushf adc and (bad) jecxz in test daa mov stc fimull test add pop imul adc in ffreep or das cmp js repnz add add xor out outsl rcrl test ds mov jg sti orl es fdivrl iret mov inc xchg sub cmpsl divl in inc lahf out pushl xor jmp ds iret xchg roll in out loop pop add inc outsl jne dec and (bad) or leave sbb add inc or mov cmp rcrl dec sbb call adcl and imull (bad) or sbb mov mov push pop fcmovu ljmp jns sub int3 adc adc jne hlt bound ret push pushf (bad) adc push sbb add inc in (bad) mov xorl fs pop out adc pop jp mov pop lret scas jo mov jmp mov adc inc in mov cltd jmp mov and or (bad) mov mov push lahf jecxz imul out pop cwtl gs les mov dec xor add mov popa or jmp cs xchg xor pop push (bad) arpl into scas push jno lahf or xor adc sbb das shrl dec sbb sub popw popa mull xor add loope enter fldcw jne mov and call cmp testl add push (bad) xchg out lods je mov outsb sub out sbb mov sub pop sub adc jno sbb (bad) in inc cmp push js (bad) xor shl pushf clc stos out dec addr16 xchg jl out ret iret and xchg push push mov inc ja inc mov push fisubl insb cmovp push testb add add xor (bad) je or or hlt popf test mov into addr16 push dec notl outsb jmp jge and cmp pop (bad) xor mov xchg mov icebp test cltd push leave mov ss mov popf out pop add int3 inc imul mov dec adc cmpsl dec adc xchg jb inc cmp loopne xchg fdivrs and mov jne xchg leave pop cld and jo cmp fnstsw cmpl aam push cmp loop or jo push (bad) add int3 xchg and mov movsl cld out (bad) and dec and cs pop and sbb addl add or clc jno and jbe int3 aad adc sbb shll data16 test dec push cwtl ljmp jmp loopne fs pusha repnz mov fiadd mov fsubs insl xor into xchg addr16 bound mov add xor popf arpl testl push movsb js rclb stc and inc cmp pop mov cmp sarb mov cmp pop mov lods push mov add and out pop out dec pusha pushf dec sub test sub clc pushf mov pop (bad) pop nop ss out js and mov sub js nop stos add in mov loop pop cmp adc test pop xor dec jg mov xchg cmp clc inc mov pop (bad) repnz das sbb xchg pop mov rep jle push xorl cmc ja popf popa popf rclb jne gs inc cld cmp (bad) cmpsb add add add and mov cli jmp lret mov sahf rorb dec pop dec pop mov idivb (bad) xchg gs cmp adc cmp mov add cmpsb nop mov inc loop mov pusha pop add mov (bad) leave idivl mov (bad) pop out into fwait xor cmp push jae bound adc cmpsb nop les or test and adc movsl add lret jl xor inc (bad) ret xchg (bad) ljmp cld ljmp pop enter and (bad) jo xchg pop decl aas popa mov xchg loopne mov ds dec adc dec fwait int3 fs in jl movsb in gs cli aam dec sti inc movsl dec mov test notl dec out (bad) jno movsl jmp and test int3 ds mov sbb (bad) rcrl push or adcb loope pop lcall xchg inc loopne sub pop (bad) cmp mov sbb mov int xlat imul xchg add push xchg pop stos ljmp outsl pop mov sti fidivrl clc (bad) dec cs add mov (bad) popa add dec mov stc ss jnp test jne icebp sbb in or xchg mov inc add adc add pop cmp dec hlt pop push push scas test addr16 aaa sbb add adc lret stos rcr mov mov imul add push xlat adc movsb std xchg pop jo dec sbb inc mov jle mov test sahf push add dec call jo add and data16 (bad) enter lods test xor inc push adc add cmp mov mov jle jno push add pop sbb mov and aas jmp mov pop jb aaa scas fisubl scas push add inc xchg sub ljmp add fdivrs pusha test xchg in mov inc psadbw mov push imul fistl lods mov mov out pop idivl movsb xchg sub pusha push scas or fdivs icebp ret xchg xor lock pop xor lods mov push imull xor add add les mov fisub int3 loopne mov sti call adc ds dec fcoml out mov fistpll add imul xchg adc clc jmp mov addr16 mov out xchg dec adc in cmp fwait mov jmp jp movsb into push mov add xchg fsubl jge (bad) iret frstor lods push cltd or push scas dec xchg ja add loope mov lret cmp les nop (bad) or mov cwtl cmpsl sub mov cmpsb call lock bound xchg pop inc pop inc or mov xchg fildll xchg add and stos mov add or adcb scas ret roll hlt icebp (bad) and mov cmp cld mov jb scas xchg fiadd clc sar sub jl scas in mov ret and icebp icebp sub sarb loopne js leave fmulp dec inc mov test cmp push ret pop scas stos cmp mov iret add sbb aaa xchg outsl mov fs and (bad) push mov rcrb add shl in mov jg (bad) mov sub xchg jo cmp cmp jnp aam mov loopne lret scas int popa and roll movsb in aad and push cs add test pop mov add sti in pushf xor mov mov and or testb lcall cs mov and jl arpl fcmovnb push pop hlt es data16 pop push mov mov push mov aas test fdivl cld cwtl fist jo pop lahf inc add rcrl or test mov pop mov out dec popf mov lcall loope roll cmp pop sbb sub cmp push ret cli call push add jae jp jmp xor in es repz loop add ret sub sbb mov xchg adc add sbb sbb ss mov cmc lods xor cmpsb inc ror cmp xor xchg repnz push lods scas fbld gs sbb lock roll roll add add ret lea inc (bad) fnstcw push xchg cld ljmp (bad) xchg and das pop out inc xchg out cmpsl fisubl jmp mov pop xor dec and cld or push iret sub dec mov lods jge (bad) jp iret jl xchg scas outsb pop mov add lods mov push cmc insb jnp adc adc push fld jo adc and fwait scas mov sub mov fldcw loope test fucomp jb push add mov jge in popa and pop push test ret add add mov sbb lcall xor in arpl jo sub push adc scas mov jns mov loop loope aas jg cmc mov add mov (bad) pusha mov rcl (bad) jb es sbb mov inc scas lock xlat out xor add lret in push xchg sbb cmp cmp sbb push pop bound jb nop and mov cs enter pop sub rol xchg call pop pop shr insb (bad) xchg (bad) int mov cmpsl fs pushf std jbe popf (bad) enter sbb cs shlb inc add cmp loope mov sbb enter std jl push jb daa sbbl dec fwait repz xchg movsl jnp adc test fiadd push insb daa mov push push jbe lret movsl stos stos call loop,pt test sahf mov xchg and stos clc inc jp jmp sub add mov and mov add sbb rolb and insb mov push mov fnstsw inc add mov mov test out jns ja pshufw mov insl imul mov imul arpl cmp icebp bound jge pop pop in inc adc mov add add xchg lods cwtl fildl scas pop jmp clc inc add xchg adc mov fdivl divb lahf sub int3 (bad) push sarl xchg pop aas mov scas add add cmp stos in add out sub (bad) fimull sbb cmp lret repnz add add pop enter mov sarb loope (bad) div mov outsb cmc lret add xchg outsb adc outsl or les mov dec lods dec sbb jmp and add push dec cltd and sbb or sub xchg pop dec pushf aam sub pop rcll or or lahf dec dec ljmp mov xor (bad) inc movsl cmp dec push imul fidivr insl add insl sbb xchg and insb idivb pop daa push adc xchg (bad) and and xchg aas std (bad) lods movsl int xorb int3 fs mov sbb shrl and lods nop jbe test cmpsb cmp ljmp loop test cmpsb imul lock popa cmpsb sub scas adc enter xor test (bad) mov iret ss mov mov in and mov add lds cmp ja and test ret add insl mov loope cmpsl inc adc (bad) in adc or loopne cmp lds sbb insb jo ret mov bound test or adc jmp out xorl sub mov in addr16 rolb add inc jle leave mov loopne pop jg sbb xor fs repz push sbb push fwait (bad) shlb cld cmp mulps fdivs enter sbb cmp shlw dec sbb cltd mov incl add test fwait in lds mov add pop push out lods jp stc add imul push fdivrs dec push mov ss push mov push out push cmp loop push add push (bad) gs sbb and fsubr and mov imul jns sbb es add add pop sbb sbb push int xchg xchg inc lods fsts je std jo sub lea push push jbe jb cli push loope mov (bad) or jp ficoml mov mov mov jp xchg scas mov cmp add js movsl mov loop push dec sti (bad) jge push jb lds mov xor fstps and arpl pop push in push cmp sbbb and jbe sbb daa inc mov mov mov mov mov and lock (bad) leave inc push cmpsb add add mov mov sbb pop test sbb sub movsb adc xor cli cmp jmp pop sahf imul or sub push xchg sub and nop push fwait add jg aam add mov mov pop leave movsl sbb mov mov add sub xchg not pop push add fisubl std scas fild ret in xchg ret std enter insb sub jb push daa enter jae sub call and stos ja push aas xor (bad) jne loope int push pop inc xor xor cs lcall add std mov lea dec mov loop mov sar inc clc sahf lret adc adc (bad) adc popa bound sbb ret clc mov xchg mov in scas fwait push outsl cld push pop sahf out pop push aas mov lock (bad) xor xor or or push add mov in mov xor addr16 or jmp addr16 dec jl enter fdivl test fidivl xor aas lods jecxz daa scas mov outsb clc xchg rclb (bad) hlt adc mov fisubrl mov mov cmp add mov scas inc in add pop out push aas testb call or fwait call in sbb imul jbe popw push je xchg lea dec sbb movsb in rolb in sbb pusha mov add int (bad) mov icebp jle lea imul add add add jmp xchg (bad) pop int sbb ret cmp mov push dec leave imul and xchg out test cmp dec cmp mov test addb pop sub (bad) jg mov mov sub enter adc aam addr16 push or dec push push test add add mov mov test and es test mov lcall push push xchg jnp pop int enter mov rcrl call or insl lock pop mov inc and ret inc jp push jmp adc jb imul nop notb mov addl fwait inc leave sahf xchg push fisttpll xchg fisub loopne fcoml xchg jmp push repz std loopne add arpl aaa pop call test std or xorl (bad) push and pop std fstl lahf jge,pn xor add lods mov test mov mov adc push xor (bad) int movsb sti fnstsw xlat mov pop int mov xlat test ror in scas jns xor push (bad) xor push lret or stos (bad) outsb inc dec popa (bad) push rcr xchg fnstcw (bad) scas lods add add cmp mov cmpsb in cld adc and xchg loopne mov sub loopne inc in mov xchg xor test jo inc lcall inc adc xchg loop sub std test shl adc pop fnstcw push or push dec lods gs leave xchg bnd stos cmc sub and pop ds cmp add add jmp inc repnz or cmp icebp mov lret in cli loopne fwait ja les popf or decb outsb outsb or popa cld xchg inc fsub fisubl bound scas fsts adc aas mov imul mov xchg ds mov pop mov (bad) ficoml stc fmulp mov jecxz movsb adcb clc fnop inc and cmp in and mov adc mov lds loope arpl (bad) movb js and (bad) repz data16 fidivrl pop xchg addr16 inc and into jo mov or or add aam mov out xchg popf cmp adc dec xchg mov gs lahf cmpsl lea ret int3 and jae pop mov loop sub add jnp cmc inc mov and test loop jmp dec lods push lods dec (bad) mov pop movsb outsl mov jne xchg rcrb add add mov lods adc jle dec mov in add gs gs push cld xchg test or jmp jb jge pop fstpt movsb cwtl ret (bad) push inc add mov popa out insl push sbb lods fidivl call dec xor xor and sub dec stos sub mov xchg jge inc test aaa and clc outsl pop ljmp or lahf imul mov scas (bad) jmp push loop and pop call pop (bad) lock push hlt mov insl into test inc (bad) enter and call out shl push inc mov stc bound add loop jmp jmp push and add or iret mov lret xor (bad) into int mov xor popf push add dec pusha jge fldcw cmpsb fstps xchg push loope adc pop ljmp aaa adc jo mov push andl add add add das xor shrb mov mov (bad) imul (bad) xor mov mov mov fimul and jnp mov xor out mov push lock js xchg cmp push push lock push pop test jle jne subb xchg xor cmp cs pop ds cmpsl cld mov sti (bad) xor push and ret cmp rcl fimul mov mul pushf sub xor adc addr16 xchg sbb repnz ljmp sub pop pop les inc stc and jg nop push add push loope jg sbb into and add (bad) int3 inc ss fcomps mov adc pusha js movsl dec add add sub ljmp notb jp mov int cmp or mov jnp outsb popa addr16 or inc das fs xor jae adc dec and add add add add test mov lock xchg enter cli popf fbld movsb mov add mov stos jge sub mov push lock mov fs stc fbstp rcrl and rsqrtps sub aaa jmp push ds insb test jnp cmp addr16 add add push mov pop mov dec xchg pop pop shr mov fmulp sbb lret cwtl xor jecxz adc iret ds xchg inc jmp sbb pop inc pop pop imul fidivr hlt push (bad) xchg xchg pop ret xchg fnstcw daa repnz push int push xor dec clc rcl or xchg push ret xchg push clc add add adcl repz pop int3 pop (bad) je xchg dec nop ret inc jnp sub jle popf inc insl xchg mov adc mov mov sub pop sbb inc inc inc and dec add adc lods push mov sbbl inc xchg sub dec cli vminpd mov cli mov rorl dec cs faddl mov push or push cmp xor mov mov adc call jge pop outsl stc sti ret fstl and lahf ret jge rol aam leave jge mov push add cmp mov add cmp pop (bad) js add adc jnp sbb lcall scas xchg cmp mov cmp pop lahf js imul mov pop xor mov mov mov aad repz dec das cmp push sbb mov mov lcall add scas cli cmp pop sbb xchg pop cltd cltd test mov xor jnp push mov ret jb rcr adc daa jg mov pop mov add inc xlat push jns jmp sub int lock (bad) mov nop or add xchg aas rclb daa pop imulb cmp add and dec sbb or and sub out fwait rclb pop and lahf out je xor pop xchg (bad) mov jg xchg sbb insb sarb sbb clc andb ret push jne sbb sub loop mov push addl fnop add add jg aaa jbe push cmc xor xor or stos mov nop mov xor push and cmp loope fisttpll call (bad) fimul dec rcrb stc mov push inc xor xchg sbb inc test sbb (bad) inc cmp daa cmc mov (bad) nop cmp test add imul fistl mov xchg iret mov (bad) inc mov add (bad) and xchg pop push dec mov lock pop inc xor and mov shlb cli jae jle,pt in bound bound pop sarb loopne xchg cld mov mov add cmp mov stc jge icebp sbb add mov addr16 fwait push jbe repz hlt lds mov repnz sub or inc divb leave inc clc lods xchg addb je inc enter adc pop in and xchg dec inc das fdivrs cmc mov addr16 ljmp jg out int mov jl cs (bad) fisttpl lock or stc in fdivs aas iret (bad) std or out sub clc pop mov repnz icebp pop jne int test insb gs xchg cmp sub dec movsl pushf xchg rcll in sar vpaddusw mov iret lock mov add or cmpsb xchg push mov and mov inc sarl xchg int3 mov dec sub aas (bad) adc das xor xchg ljmp mov (bad) cld imul pushf ljmp mov ret (bad) xchg sbb push add add or daa mov movsb xchg mov (bad) or add dec in lret push jns lahf pop pop mov adc roll or pop (bad) rclb dec into out xchg jg mov cwtl push rorl jecxz (bad) xchg popa rcl sub lret mov rdpmc cmp add bound add in add fdivr cmpsl mov js push inc lds gs pop lcall sbb in sbb xor test hlt xor and enter mov sbb outsb dec xchg cmpsb or lea ror popf (bad) lea in mov sbb sbb add cmp rorb sbb insb roll adc in push dec sub gs inc cli insb lock mov sub push dec imul inc mov pop insl mov jo mov fidiv sub stos sub adc (bad) jne call pop cmp add add stc xchg mov jge cmp enter testl cli rolb xor push pop jmp or std incb mov gs xchg das lret mov mov (bad) jae xor mov jl in das pop push sbb add xor dec pop mov icebp dec jo call movsb fsubl add xor and (bad) mov (bad) icebp cmpsl stos push inc xor lea scas in or lods ss mov mov mov adc xchg ficoml pop cmp test pop pop pop addr16 jmp add repnz out pop push mov jl scas mov push testb xchg fadds jne std int (bad) shrl jns jl or pushf adc xchg and ja mov sbb out ds and inc loop (bad) gs in push mov lret lds hlt adc jmp and push sub lods repz xchg jne mov cli push pop out das push out push popf push mov lcall stc std lds jle loope pop out sub test mov and add clc data16 cmp imul iret int3 dec inc int3 lods jg pop neg cld test push fadds lahf xchg pushl mov dec dec mov mov xchg jg es xchg add fcompl dec divl fmul jl push idivb pusha les jle or into shrl pop pushf andl push pop (bad) push repz pop push sub mov fsubrl mov sbb jno push int3 adc mov sbb arpl loope cltd popf push roll sub mov ljmp ja test mov (bad) xor bound xchg lds bound lods lret cli jp repz inc add add add mov je adc in push jnp xchg dec mov loop mov mov outsl es lahf push xchg test jo faddl inc cld sbb or movsl gs cmovno daa les lcall push outsb outsb mov and add imul mov pushf and ss jo xchg popa cmp out jl js jge lock sbb sub sub nop mov adc fnstenv rcrb push add xor jp mov mov ret mov cmp cmove enter mov movsl repz shr popa adc sub add cmpsl sbb adc sbb sbb xchg xlat arpl cmp dec pop lcall out sti inc imul sub mov lahf push mov (bad) fs pop push push (bad) shlb sbb and stc fisttp adc jp dec sub les lods arpl mov out add jo jnp lea aam (bad) sub rcll mov xchg fisubr jne ret and fiadd inc andb jnp dec cli jb cmp in hlt stos xor mov ljmp fldpi popf cmp mov ds stos mov flds add cmp fidiv lret popl ret xchg movsb xchg int aas sub add leave add repz out sti enter jne xor mov mov push and popl jno rol jb adc loopne adc outsl mov sbb pop xor and add dec fnsave popa sub add push mov dec es pusha in xchg fmuls mov lret push xchg aaa mov stos hlt jne out jae icebp cmp scas sbb lds xor mov divb jbe fidivrl sbb mov cli (bad) push aam popf dec divl lock add das adc fsubrs out jnp in jno add adc sbb loopne lret dec shl jmp jbe mov lahf push mov sahf xchg icebp mov in xor sbb pusha int adcl push inc jno fisubrl push inc jge lret pop in out bnd rcrb adc adc and sub add sbb cmp pop jge (bad) fildll lods mov int3 fsts in mov xor stc jl or mov fs xor adc inc cmpsl es mov xor cltd aam arpl cmp cmp sbb dec adc jbe add add pop sbb jae mov int3 xor push and roll or jb (bad) mov loope dec mov inc sahf sub pop pop or dec notl lds out int mov pop push jbe add push pushl inc jle adc aas rcrb loop,pt pusha stc push das es add add dec sub jb cli mov jae jmp ret in icebp lds and in popf je test aad iret jnp sarl out jge cmp aam xlat xor sbb push cmp aam adc xor fild xor test xchg cmc mov inc mov jp adc je add add in sti lahf pop and fs cwtl jne das sbb jle sbb rcll sub decb cld sti lods ret mov mov adc and test int3 mull add add sbb and ret icebp mov imul in nop mov cmp add add xchg cmc xchg jno fildl testl cld popf aam sub or mov add (bad) push cs xchg push int3 les cmp fucomi mull cmc push pop pop push and cmp inc arpl inc jb leave or (bad) sarl push incl leave mov stos add cmp add or push xchg in aam in loope mov add (bad) mov cs adc mov mov scas aas sub ret mov daa mov imul insl loope popf mov mov test inc mov out mov sub or pop push mov (bad) jl inc sbb outsb imul ja mov repz mov sub mov mov jmp leave popa push leave leave adc dec idivl pop (bad) into fldenv rclb pushf push push cmp movsl (bad) movsl jnp mov outsl push ss dec push outsl roll ret test add add lar push scas sbbl (bad) jecxz scas std mov mov in rcl jp and mov imul sbb ss and leave in cmp fnstcw cli mov cmp jmp sahf or lahf cmc or repz loopne js mov xchg test insl sti pop pop add push fsts outsl xchg xor push xchg adcl push hlt inc mov push sub inc ret ja or or dec outsl mov gs sub mov pop fisubr push or (bad) xor int3 sbb adc xor stc cs add add mov push inc sbb mov push push sub mov fisub into cmp mov add je jo (bad) notb leave stc divl or bound push cmp cmp sahf mov jecxz xchg or jl test stos es enter pushf and outsb bound inc add add push jmp push stos (bad) cwtd out in push notb test lea clc adc lret sarb push dec call aas stos iret sub add imul (bad) pop xchg push iret pop or loop or push jmp and sbb popa test cmp add repz inc mov pusha jnp in loope jbe mov push mov outsb push jb jnp mov std sahf cmp cmp sub pop (bad) sbb and bound xchg sbb out rclb push mov scas pop (bad) negl cwtl jb inc out fstps mov add xor cmp mov lret and jns ja das in fdivs dec movsb adc lods pop and inc les xor sbb jbe mov ja outsl lcall aaa fnop (bad) out std push or imul (bad) sbb popa xchg jnp js inc imul add notl xor (bad) rcll push mov dec imul repz and and xchg rolb mov dec ret sub iret and push test or sahf mov (bad) cmpsb xchg fist ds int3 (bad) fucomp int push push pushw addb xchg icebp repz lea out jo xor into jge divb lret jnp dec imul imul lahf stc lret add push push out pop or mov sbb test cli and adc sub mov mov insb rcrb bnd cmp sub lea out add inc jge jns test xlat adc inc and lahf test and cmc cld std (bad) and dec out dec mov int3 sbb into rcll push stos jg ljmp or ljmp lods les pop cmp sbb cmp outsl inc mov pusha int clc iret movsl movsl (bad) cmp aad mov jmp repnz int sbb inc leave jae add lods mov inc pop lret lea incb pop out add aas push and lds adc jno (bad) mov mov jo inc in jg mov xor cwtl (bad) add or xchg cmp in daa or ja add add cmp add inc sub jbe cmp jmp shll cltd push jmp jns mov and mov inc popa adc movsl or cmpsb fs lret leave xchg push jb lret push and or lock scas push lods fimull (bad) and ret (bad) data16 add sub out mov inc adc outsb and jns sub xor je xor add cmp rclb nop nop mov mov sub cmp test mov outsl js or icebp push mov cltd inc aam nop sbb (bad) sub ret ja and scas mov and add add mov sbb scas insl pop aas outsb cmpsl jne jle shlb push test (bad) outsb jg or icebp das (bad) int3 out mov test (bad) es xchg pop pushf dec test mov cld test adc push mov stos (bad) or ror pop pop push add xor add ret mov dec sbb aas mov enter fiaddl pop xchg xlat rorb mov and push clc push rorb jecxz int3 cld pushl and subl cltd xchg outsl incl inc in daa mov mov jae es es mov adc ljmp inc dec xchg pusha cmpsb and sbb shrb ret and stos es pop mov dec jmp lret je mov test testb sub push (bad) shrl subl cmp jb add fildll xchg cmp aaa adc jg sub leave shll adc dec lods push sbb sub mov les adc and adc cmpsl jns jl pushf cmp xchg shl lds pushf mov ret xor (bad) aaa mov and push mov pop jne push movl add (bad) cmp inc or adc dec stos xchg cwtl pop iret pop aas das dec ljmp out icebp add into and add popf lea mov in enter pop (bad) das addl stc jbe addr16 into push rcll sbb xchg or push adc (bad) outsl cmpsl lret cli add mov js sub push cli fdivs les and loope pusha jno push fwait sti outsl xchg or flds ret cmp es fdivs or push xchg adc dec lret sbb shlb sub push sti aad lods push push add clc mov stos movl add pop sbb add leave sub outsb fistl lods aam insb mov sbb repnz stos jo,pt or pusha clc out push daa mov test mov (bad) and inc or addl jns loope sbb lret inc add aam outsl sub or push add add out sub sbb repz (bad) cmp jae lahf cmc gs out daa enter js bound xchg pop or out inc xchg or dec int3 out ret sbb outsb fs push insl xor cmp mov sbb imul xor lds dec sbb sbb inc (bad) mov dec add imul clc scas dec pop daa sub repz cld (bad) lcall cmpsb pusha ljmp cmp imulb lds rclb xor fimul cmp or jb cmc (bad) lret jae sbb loopne add pop push incl add dec pushf clc jo cmp insl popa lock mov out dec push mov ds push leave aad aam adc (bad) xchg cmc popf fcmovb push (bad) mov adc stos add scas ret rorb pop sub ja imul xchg xorl stc daa cwtl xor add loopne std mov ja das adc mov inc cmp (bad) mov and dec outsl and push js (bad) fimul add inc inc dec lahf mov push mov ljmp sti xor cmpsl jnp gs movsl fdiv jno jbe loopne ljmp cs ret adc in pop jecxz push scas mov push mov les loope add xchg sarl jle out (bad) idiv stos mov lds insl inc popl xchg mov mov xor nop mov outsl jl sbb (bad) jmp and cli lret add dec inc frstor sub hlt fcoms pushf mov out mov imul pop lods xchg mov ficom pop (bad) cwtl push inc push cltd into xor imul in xor ja xchg mov or inc pushf (bad) and xchg adc sub push cmc sbb mov add xor insb stc mov adc mov ret fiadd xor jbe push loope div cmpsb and mov inc lds push subb inc sbb xchg cmp repz insb and xchg pop sub mov mov (bad) jo mov jno std inc pushl std sbb daa add clc mov cld pop and std mov or dec out ret pop mov jbe test popf dec imul add cmpsb cmc adc xor and adc mov push leave jg adc pop xor ss scas testl pop push dec cmc and scas mov scas jle pop xchg pushf mov lea lahf enter loope dec mov pushf add scas pop cltd push push mov daa jns test into scas shlb jmp lea sub cwtl in setl and movsb or out imul adc add repnz aaa lds dec cmpsb cltd pop outsb pop nop mov rcrl loopne dec popf mov cmpsb cmp pop adc mov sarb (bad) mov repnz pop (bad) into aaa scas loope repz pop pop fisttpll mov sbb js lret aad mov push dec outsl push push in push ja das js jl ds arpl test add xchg cmp mov cmp movsl dec imul and pop orl or jge outsl push mov fsub push arpl stc push ror stc cmpsl push (bad) mov shll and sub js cmc jmp xchg cmc call mov pop cmc push mov add in pusha movsl sbb push nop ds test divl das inc out fwait mov jae repnz push (bad) cwtl bound pop mov push or outsl adc push dec pop jmp call jle mov ja cs mov dec push sub or inc in add add sbbl (bad) xchg jle aaa jno lods popa loopne xor push ss or mov iret test (bad) xor daa inc out fcoml cmp adc nop mov push mov scas sub idivl adc or jge arpl jb add add mov xor add and (bad) mov jmp ljmp jmp arpl pusha popa daa jmp xchg pusha sbb push inc mov repnz lcall cs push divb out add inc (bad) cwtl xor loop xchg push mov arpl add add pop icebp and shr or mov mov sbb dec test inc in data16 or jp and icebp add xchg stos test clc popf jg hlt push int jne adc add adc fsubl fs pop mov push mov ffreep and nop movsb das pusha (bad) mov push push iret or (bad) or sti mov and or add pushf or incl cmp cmp jle add inc push imul push push repz mov push add add mov popa sub testl push mov jns xor pop test or sub jbe ret in adc lcall repz sti add jp fs xchg (bad) lods cmp pusha sbb push xchg std jae push movb mov cld pushf cld hlt notl add add mov mov mov pushf aaa mov push jnp mov push inc add sar xchg mov and mov jb rep mov arpl fwait pop add jecxz shlb jbe pushw jmp xchg jne loope add orl ja xchg int3 mov sbb xor xchg jbe add jbe pop xchg dec (bad) mov jb xchg dec sahf adc stos inc (bad) lds mov clc imul push movsb pushf dec pop lods push or mov sub cmp and or test (bad) popl cmpsl xchg (bad) lret nop repnz lea push flds add (bad) pop pop in push leave test les mov fs sub (bad) mov ja aam jbe push rcrb cmp pusha inc rcll jns jg cmc mov ret jnp inc das mov int popl je xchg int3 sub xor cs pop push adc insb daa test (bad) cmp fldenv pop jne add mov mov subl outsb sbb lcall mov movsb and int3 imulb inc mov lret pop xor mov xor adc dec loope cwtl arpl or repz jmp adc sbb inc mov add test (bad) lret movsb push mov enter adc pop outsl in mov or adc (bad) aam xchg fisubrl xor mov imul push int push inc lahf push mov arpl int cmp bnd sarl leave aaa lock mov xor add add iret jns rolb xchg enter aam push push jge call (bad) (bad) (bad) outsl cmp lcall mov shlb cmpsb call mov adc jle int3 push mov fs (bad) testb cmpsb inc outsl hlt (bad) je jo rsm xor add in cmc xchg enter fmull cmp rorl push dec int stos pop and cmp pop sub mov data16 mov xchg xchg pushf in ret test cli ds fadds (bad) xor stos mov inc jl sbb inc into insb sti adc xor jns sub js add test jg loop or out (bad) xor stos (bad) out cld lods mov movsl cmp insb lods nop ficomp xor push inc ret dec adc mov mov add bound rcr test inc repz push scas push push rorl stc (bad) mov add pusha sub cmp repnz sbb mov push or enter fimul repnz dec adc push test ss in or jmp xchg ja add xor jg out adc pop cmp pop cmp adc insl xor loop mov (bad) or adc mov test lret inc or push cld adc test addr16 mov jno clc xchg push (bad) dec fisttp cs fiadd mov dec dec cmp pop dec rcrl pop repnz or (bad) dec fdivrs hlt pop sahf or mov or mov aam aas cld jmp add test dec addr16 and xchg push pop negl push push mov mov cmp mov or adc (bad) jge push add cli lods mov mov push adc mov decb sahf andb push daa and add add mov mov in fisub int mov jmp mov into repnz cwtl xchg scas jle push inc cld mov cld fs sub inc leave or hlt mov mov (bad) mov mov int in iret xchg repz cmp leave lret mov es or push daa jecxz std cmp or inc mov lods xlat pop xchg ljmp adc lahf ds cld mov lea mov xor (bad) pusha jg cwtl and jp imull repnz mov (bad) cmp dec or inc ljmp lcall dec sub loope mov leave mov mov push pop cmc scas cmp xchg jnp sbb push popa adc push pushl inc mov hlt xchg pusha dec xchg xor dec add cmp inc mov mov imul ss data16 cmpsw or jmp add add mov xor mov mov push or sahf pop push jp jno std jno xchg dec mov sub xchg loopne push jmp lods int cmp mov add dec push push or dec mov lods ds jbe pop pop lcall xchg mov sti xchg sub add pop leave sub out pop into scas adc dec (bad) lret ret jns sarl push mov jp jb add adc out popf mov dec aam add mulb or aam or pop sahf (bad) adc sbb imul jns pushf dec add ss or or add popa mov or data16 aad mov or dec jg dec std adc not add cmp xor negl jbe rolb movsl mov bound add insb call and dec aam or pushf xor mov dec xor jb add xchg subl inc pushw sbb push pop jmp xchg jmp packssdw push jp pop push mov push sahf das or data16 aam insl outsb mov push es sbb enter sub mov mov xor lahf push xchg add (bad) or jg in in xchg (bad) mov clc xchg jbe (bad) je fiadd jmp add loopne push fidiv dec mov dec test imull mov loop pop rcl loope popf xchg pop imul add add cmp xchg iret frndint cmp push mov cmp (bad) (bad) adc in ss and jecxz jns fstpt pop and xchg int3 pop (bad) out movsl add jne in mov push pop lahf enter cwtl sbb or and and mov jbe mov sub xchg rcrb add add add adc ficom and movsl ret cmp inc add (bad) mov pop sub rol inc clc pop mov (bad) cli jp imul jo imul hlt cmp push jae in sbb bound popf or gs ret sub and add add pop and sbb out stos inc sbb mov stos lcall out mov mov outsl fnstsw sahf outsb or and push gs (bad) mov fs jl pop push (bad) cmp cmp xchg xchg and add std jnp jle push adc pushf in add mov pop sub mov jmp ss add pop sbb or cmpsb cmpsl in cs dec outsl fisttpl adc dec push jmp fs arpl xchg mov xchg fs xchg lods xor xlat push mov and pop cmp stos insl mov insl adc inc add inc sub mov loop mov clc leave inc test adc sbb (bad) ret mov mov movsb imul (bad) lahf fisubl inc or mov adc mov test lret push mov jbe jmp inc mov jmp push or push inc mov add add out int movaps sarl lcall ljmp add imul mov es adc and shr movsb out xor ds std xchg inc cwtl data16 push (bad) movsb sbb mov adc in cmpsb cmp xor sub jo fisttpl fwait mov mov lret subb aas movsl push mov mov mov movsb scas (bad) jns orl push dec add dec cmp inc loop mov lds std mov cmp and sub xor inc fiadd div mov jno xchg repnz ret call jae push sbb fdiv sbb jo dec aad lods sarb inc loope and outsb rcll in pop mov aas sub mov xor in mov cs mov pop jge jb xchg push fstpl and stos mov add pusha leave out leave mov push pop xchg ds (bad) adc fistpll push jo ja push int3 xchg sti mov push dec addr16 and jbe sub xlat sbb or inc fadd and pop sbb outsl loope pop mov or lret sahf mov add add mov (bad) sti xchg jae jno cmp mov jg add xorl in stos pop aaa pop or and mov push add jnp xchg popa adc clc ja loope out or lods nop add stos push cld add out pop mov repnz mov sub mov mov lret mov popf loop dec push push adc xchg and mov fwait pop jns mov (bad) jne jmp lret es data16 add js movl push roll test sub mov jge inc push lods mov rcrl mov jbe and dec mov imul ljmp icebp es fcmovne arpl in test jo mov cmp dec push pop aad add mov lret aaa and fmuls lods mov hlt lret adc popa movsb (bad) xchg notb cld jecxz mov ja fdivrl mov cltd fmuls adc dec fdivs cmpsl add (bad) sbb cli dec shrd fcomps scas stos push (bad) loope dec jno pop mov mov inc rorl pop popf and mov add ret mov popa into push and or rolb add xor js mov pop and xchg push or dec mov push xchg int xchg incb add ficom push aaa aad loope lret or addr16 and jecxz test push iret mov add xchg pushf xchg loope (bad) push test aam lea xchg mov mov lods test (bad) xor add pop jl je (bad) push (bad) cmp add add jge jl cmp sbb lret rol adc cmp dec mov add leave cli jno add pop jecxz xchg xor mov jg and icebp pop xchg lds pushf adc cmp popa jg outsb outsb cmp insb lods xor arpl and add jge mov add add cmpsl mov insl out out sub pop lock mov sbb arpl fstpt mov (bad) cmpsb jbe mov jp je test xchg mov sub js pusha fnsave lock sub add rclb adcl lods repnz add add pusha rcll pushf mov nop sbb mov xor push bound push lcall inc mov icebp fadd cmp sub popf cmp jnp in (bad) adc (bad) mov and fisttp push mov popa push jbe insb sbb xchg imul ror imul add add int3 adc push iret (bad) xor jae push adc addr16 dec sub dec shufps pop aad arpl in std cmp test dec adc inc fildll lret cmpsl popf int jp andl inc pop ja push adc dec je es cmp inc shrb xchg cmp sbb and mov sub sbb hlt loop lret (bad) xor jmp add mov xor mov repnz sub stc fsubl pushf ss inc lock sarl shrl stos xchg into dec cmpsb fldenv ds repz test (bad) pop lret xchg or out pop inc sbb xchg (bad) cmc inc dec (bad) xor iret pop xchg add and int3 sub insb fstpt shrl fmuls xchg cmp mov cmp (bad) imul int lahf xorl pusha loope add scas fucom fwait icebp gs push js xchg repz xchg push sqrtps dec mov test nop int loopne inc out jo sub and int3 xor movsl fucomp out mov das cmpsb mov and stc mov sub inc mov ret xlat movsb xchg in ret lea cmp pop pop sub cmp fbld adc dec (bad) sbb inc mov xchg inc inc aaa rolb dec adc dec shll inc xor push pop and (bad) not xchg outsb subl push jmp shl push add inc out pop jb cmp into lods lds and push add ja jmp xchg les je jbe je inc neg inc addl fwait pop rorb lcall sbb shll (bad) enter xor pusha jle call dec mov daa nop cltd xchg and dec xchg sub in leave rorl jne xchg fwait ret add add aas mov pusha xchg push stos and sub cmc movsb cs mov outsl mov fwait outsl sub les movsl (bad) repnz push call sub aaa imull inc outsl lods repz rcll or aas adc adc jbe cmp jmp xchg sub add add push jo mov repnz cmp (bad) xchg sub das mov nop in daa sbbl fmuls lea push insb gs lods in int hlt mov xor jl push xor fld cli (bad) cwtl mov lock mov cmpsl jo pop jp fmull adc xchg scas cmp sub add pop lret push dec cmp stos pop pop xchg into movb test loope arpl fwait push shr and ret adc xor ret xchg pop aaa rol mov scas cmpsb ss and jno jp fadd xchg xchg dec sahf inc push inc pop dec xchg inc jb dec pushf sbb and add add add movl (bad) pop inc dec xchg negb lods fwait in mov cltd mov out add jg jle cmp xor fimul ja or mov mov xchg mov test pop pushf in dec mov sbb lea jge mov mov ds xchg hlt mov loope test (bad) xlat pop jb push sbb or pop cli ret mov jae hlt pop jg jbe out push push add push and scas insb or lret dec shll enter les adc xor add add mov inc jne bound call ljmp rcrb or or outsl jp enter mov sub dec inc mov icebp popa cmc aad sub mov cmp test add and pop or (bad) adc inc jl push fisubrl insl lahf aaa mov add adc leave test xchg pop imul into js or push ss and imul mov xchg cmc adc fisttp fistpll pushf popa shrb bound imulb gs lds lds icebp xchg fisubl pop les mov roll and cli test repnz push push stos add add jno inc ss repz or xchg xchg or in dec xchg out dec dec mov sbb lock pop insl stc mov loop lods pop pop int push push idiv fdivl cmp cs repnz xchg (bad) hlt lods mov adc lahf mov mov add add outsb mov sti je scas cmp int fidivr clc in jg loop pushf mov inc imul lea jnp mov add lods cld push xor daa xor scas sbb lcall dec or (bad) mov stos adc adc fcoml add add add add loopne bound xchg lahf cmp ds jg loop mov jns (bad) dec pop push inc push mov add dec addr16 inc nop cmpsb mov jp aad xor push je xchg mov add sbb in out mov and enter cmp add inc imul add mov lds in jg rcrb xchg pop jnp jecxz xchg popa out popw add (bad) fdivrl xchg rol or mov xchg sbb mov mov or mov jo dec adc push pop pop (bad) jl push push ds mov ror dec (bad) cs mov pop add add pop stos push xor mov jo xor pop (bad) and scas movl mov inc push inc cmp cmp xor sub je jg repz mov mov jo add pop jno insl adc rcrb inc fsubl lret scas arpl and add popa shrb jecxz or xchg sub mov jg mov mov in xchg (bad) dec arpl scas ja into ds cli in xor push xor addr16 (bad) mov hlt cmp rorl push and scas (bad) (bad) out add dec fs add lods lcall pusha xor cmpsb (bad) mov repnz sub xchg xor xchg gs sbb fstpt je sbb leave (bad) imull fsubl pop sbb fdivl into pop mov (bad) stc sahf push sub ds mov int (bad) arpl jg into je iret aam add add ret or pop arpl arpl mov pop push test adc add adc std mov jle pop dec mov shll repnz aad stos (bad) jae int3 sti mov xchg lcall or rolb sub outsb inc sbb divb push cs add insb dec xlat push mov push ja fnstsw inc mov dec divl sarl inc gs call repz scas adc xchg inc mov std fdivl or adc repz lods xchg sub xchg aas (bad) (bad) lods mov mov sahf dec mov inc xchg add inc mov and sahf push lcall jg xchg mov dec aas (bad) mov in callw fsub xchg cmpsb dec sub adc and rol les sahf decl inc jne add shrl outsb push cltd sub adc cmpb cltd rcl pop stos insl mov add add (bad) push ds cli push sbb into inc enter sbb sub pop stc mov jle in xchg or nop add cmp push xor lea test fdiv in push mov xchg fwait dec fisttpl xor jb cs cmc sbbb jno add ds sub jb mov push mov dec mov add push das inc out xor insl xor push add subps adc lock jb imul jne out daa cmovne sub xor sahf bound mov xor mulb add movsl es jmp cwtl imul cs fadds pop cld sbb mov or sbb mov xor or pop mov (bad) sub into ret fldenv sahf hlt fnop out or ljmp xchg (bad) push aad test mov add jmp pop sbb stc fwait push out xor outsb xchg data16 fcomi jne cmc jno push movsb lea rcrl inc or je in mov push mov and sbb imul data16 mov jns adc xor mov sub sarl push scas outsb lret add int xor xchg push sahf (bad) ljmp inc loope scas sub fs sbb xchg jne mov xor xchg and das cmp enter lahf imul into xchg outsb lods sbb adc stos outsl fnstcw daa sbb in lret mov flds bound bound stos fucom loop sbb sahf popf xchg (bad) test mov movsl push insl mov push or rcrb enter mov adc loope dec jl jmp push mov (bad) mov (bad) out lahf jp sub int mov arpl push push aaa dec pop add add aam cmp ret rorl jle xchg jb pop cltd sti mov mov (bad) mulb add out fbstp ret adc fcmovnbe cmp dec icebp inc test pop clc lock das lcall jle lcall adc xchg xchg hlt rclb movsb mov repz add out insl dec shl gs adc add push aam sub mov aad hlt es mov cmp push mov fs mov sbb data16 mov dec test ret push add test in mov ficompl xor adc js fcomps cmpsb inc int dec jmp push pop lret std cli leave push pop push inc ds mov pushf adc adc loope sbb sbb mov mov xor gs lret jp or inc (bad) repnz xchg cmc inc or cwtl dec sahf push and loope enter loopne in pop cs mov mov add jne xchg jns ret loop mov mov icebp dec xor inc movsb lock mov xchg push ljmp mov repz js imul mov (bad) pushf ds dec and xchg mov hlt rclb pop (bad) xchg push xor adc addl add add je aas aad addl xor fistl xchg xor out mov outsb (bad) daa lcall insl imul ljmp fs pop and inc xor insb and sbb cwtl xorl xchg (bad) aam add or in adc mov (bad) roll aad loope or divl jb mov in inc in cmpsl add add cld aam and and imul fisubr addl xchg outsl sahf cmp dec mov mov rorl cmp inc pop sbb movsl fs jnp std jge les or push sti inc sub pop mov in xor icebp (bad) and gs jae into pop xchg adc sub sbb xchg hlt sbb push push push push adc inc mov inc adc jecxz dec add mov mov mov or stos push lea dec imulb push inc dec add mov and pusha in js es sbb aam inc add jae jmp xor pop mov pop test pop imul and inc mov xor clc insl (bad) clc ds add cmpsb inc mov mov add cmp mov or cmp rcrb sti mov aaa pop loopne lahf lahf fstpt jmp test loope repnz xor mov adc xlat rorb call jmp push jnp sbb sub imul add add rclb pop inc xor mov and cltd add in pop mov mov loop shr cmp sti inc (bad) daa push xor stos push mov and fisubrl jo mov push xor (bad) into nop jp xor jbe sbb push jle xchg (bad) sub add pop xchg dec jmp xor (bad) xchg in (bad) mov scas cmp or mov test mov imul jne dec dec out push add or and dec data16 nop add aad pop pop jno mov ret push lock lds add add mov into stos pushf xor fsubrl jnp mov jbe sahf inc inc ljmp cli test sti adc inc nop stos sub and cmp insb stos (bad) leave in adc push or mov mov stos mov aad push jmp fdivp cld test incl insb data16 xchg enter subb mov add mov stos movsl cmpsb sub lods push ficom jl cmpsb fsubrl int3 das xchg push bound shl xchg lcall fisttp sahf mov (bad) shlb lret sub outsb xor jns rcll es fdivr stc imul add push mov sbb xlat shrb xor nop or xchg mov jl std add scas mov lods dec test push pop xlat and stos fcomip bound (bad) pop cwtl pop sub and push mov push pop repnz fwait cmp jno pop fcompl and add sub push jbe and add add or sbb ret mov pop in adc call jne adc mov push adcb je (bad) xor mov fs sbb xchg add addr16 dec (bad) push das in sbb mov adc xor adc jb cmpsl sbbl add add lcall xor loope mov daa jmp test int mov (bad) jbe jecxz out fisubrl int3 fist loopne xchg scas jge sbb sub roll test add ret movsl sbb into out or fsubs push mov add or dec out (bad) sarb sahf fsubrl xchg cmp mov mov cmp xchg std xchg push (bad) jno jl pop jmp (bad) xchg fistp lcall test (bad) mov (bad) mov and jg sbb shll pop and add add xor push pmaxsw mov ficompl adc add (bad) mov decl jg in mov sbb lods addr16 jae inc sbb pop stc push jae fistp adc nop or cmp push xor jne push stos adc inc pop mov mov add rorb cltd cmp inc or jne pop (bad) loop add cltd sub popf es es arpl sbb mov popf push push inc sbb ljmp jns fwait sub (bad) cli mov repnz or (bad) mov fs and add add or inc sbb das mov push mov adc mov notb jecxz cmp xchg stc push or inc loope loopne clc add xor jo insb pusha (bad) mulb mov pop int3 sbb mov pop int3 jo pop mov inc xor mov js stc inc dec add add in sbb (bad) mov lods and loop lret movsb xor mov lods push divl xor cmc lcall fnsave mov jne shll in movsb push sub jb call sub inc add dec mov xchg std mov mov add xor (bad) jg notb mov xchg add add push and out mov mov sbb imul dec aad (bad) dec push jb xchg outsb cmpsl (bad) stos sbb xchg enter sbb or popf je aam mov aaa sub mov and repnz (bad) fcomip jg cmp sbb xchg xchg iret mov jl sub add add push addr16 lock mul lods inc call (bad) imul cmpsb sub inc add imul js mov xchg insb movsb and sbb mov imul mov sbb mov out rol sbb jl push push ret dec loopne add test mov mov push imul fs mov sbb sbb cli push inc ljmp cmc push jne andb bound enter inc add enter xor jno push push ljmp out jg xor cwtl in add jbe push fisubrl das sub or or out jl dec push mov sub xchg insl fldln2 jmp fnstenv cmp pop pop daa push shr negb inc xor mov mov call (bad) dec or clc sub sub shlb cmp adc scas daa mov aam add add add add or adc mov and outsl nop pop and push in pop cmpsl add push das dec cmp mov xor in xor push or xor push cmp mov pop ret push mov xchg lea dec mov mov call sbb add and fs jmp push popa sahf gs cmp sahf loopne cwtl add mov cmp enter cmp scas pop rep push fisttpl inc (bad) stos cld flds jnp xchg std adc inc adc mov jns inc out cwtl roll add subl pop outsl xchg xchg add rcl push iret push mov sahf outsl stos bound jp out push repz cmpsb lods push adc add mov jmp inc test sbb test clc inc hlt enter test pop xor inc pop (bad) push imul lret mov lahf arpl test js icebp push xchg sbb and movsl ret xchg jns xor inc and inc jg jp pop out into orl cmp add sarl pop pop jb and clc ret out jbe out std arpl xchg dec repnz xchg lahf xchg add shl and sbb push or push jbe sbb add mov cmc adc test push add pusha nop aaa mov mov ret dec test mov sbb cltd mov (bad) sub push dec ja xchg out lods cmp jecxz jns xchg cmpsb mov gs dec into je into cwtl add xor enter and add add leave pushl cmpsl xchg in popf les add pop mov loopne ljmp push cmp ret mov out loopne xchg into xchg xchg fildll (bad) push ljmp jecxz mov mov pop mov pop shll daa inc add mov ja cmpsl add xchg incb dec xor xlat nop enter jp xor pop repnz xchg inc jle mov popf mov mov lds xor es cmp (bad) incb lret popf mov push jbe shld lds jl pop int rorl mov push push mov add sahf mov jp push sub clc cmc xlat in dec inc dec add dec jbe int3 lds push rcll push sub cmp addr16 jle (bad) jmp xor mov (bad) lds pop cld call lret icebp icebp pop mov arpl sub pop mov insb mov pushf movsb and cmp aam in outsl aam mov push and mov ja ja ret mov xor sahf pop ja push icebp and scas add adc xor inc cwtl push pop pcmpgtd out sub sbb shl loope movsb mov loope inc sub arpl xchg add add les mov clc xlat jne aas mov mov sbb dec adc pop and negl scas push jmp cmp fcompl test mov dec ljmp test mov cmpsl lds imul rcr ret shrl aad mulb adc add pop adc xor mov mov dec jp mov int jo pushf adc cmpl jnp xchg or std adc cld cmp add std (bad) jno fldt mov jb jns adc incb leave jp scas repz pop dec decl mov push sbb add add cmp repnz push jnp pop pop fidiv pop sbb stos inc rclb and jbe pusha xchg xchg add mov inc popf aam push adc clc lcall add push xor leave sbb cmp enter fsubrs mov fs ror add decl pop cwtl imulb jae mov lret scas add jmp mov (bad) xchg mov push lods jno sub lods mov ret cwtl dec lret loopne mulb push notl in lock fcmove mov cmpsb mov jo dec inc jne push in pop out and imul ret in cmpsl test jmp in nop arpl inc in push sub mov dec cmp mov sbb in cmp test (bad) mov test push loopne lock outsb xor jl adc push lds js and (bad) faddp add (bad) icebp cmp pop sbb popf push cmp cltd dec (bad) aad and popf ret lods enter dec inc repnz jno pop inc mov stos cli mov daa jno subl xchg aas cltd sub hlt inc lds jl stos mov cmpsb (bad) cltd xchg repz xchg loop jmp pop add int pusha cmp add add cmc data16 and add hlt popf sbb jo pop mov cmp push inc sbb or mov mov cmpsb mov mov (bad) jno lahf stos xorl cld mov cmpsl xchg and mov rcl rorb or outsb lcall adc add je insl sbb (bad) mov mov adcl pop mov std fdiv clc jbe mov sbb pop pop cmc mov sub jns inc and sub jns adc daa loopne mov loopne neg mov sub incb pop data16 adc add add push dec (bad) pop xor aas out xor mov std arpl xchg jnp nop fs mov fdivr cmp add pop mov mov rorl mov mov or inc push inc xor in popf (bad) xor dec pop scas mov jmp sbb iret jne add push dec cmp aad out popf push sahf lods loop popf scas cmp xchg aaa sbb dec push aad ret jge loop cmp adc idiv push jnp pushf arpl (bad) int3 cmp sub js sahf mov push xor call movsl mov adc and pop addl add add add add jl lea stos lods (bad) xor mov jle lret in dec lret mov cmp dec stc mov jns cmp jbe aaa mov negb (bad) adc mov ds pop or loopne cmpsw gs push sbb xchg lock dec fldcw push aaa int3 jge sbb les insl test inc cmp cmp xchg mov popa int3 loop in and out cmpsb push xchg add inc data16 pushf mov loop dec movsl test bound leave aam jbe ljmp in mov cs mov imul lods pop mov cmp ret pop scas jne pop pop xchg cld loope sbb add cs jb stos das or mov cmp mov lods adc inc or fistp or mov sbb pushf xchg fxch fnsave cmp inc data16 cli sti mov sahf xchg push cmpb test mov leave xlat or lahf push popf dec xor xchg push add add repnz inc fmuls test xchg call scas push mov mov cld rorl sbb js aam mov jne out mov pop roll mov fwait rclb adc in push imul pushl jl (bad) fidivrl push push in jge in lods (bad) stc lods cmp mov (bad) rcll mov in data16 dec inc mov ds sub xor ror arpl fnstsw sub pop xchg jle enter fcoms imul add or dec jb fldl cmpsb js mov in sub movsl dec mov adcl add add jae and enter js sbb push call lret push jae scas jo (bad) jae outsl pop fbstp jne loope inc xchg inc std test pop ret ja,pt pop sbb (bad) cmp cmc cmp pop mov push rcll ret add lcall dec inc (bad) pop aam adc jp call xchg int ss jmp rol mov cltd mov and lods sub inc and add enter sub into js sbb mov pop fiaddl sbb and or push mov pop mov roll (bad) pop xchg cltd or add add fstl xchg shrl movsl aas mov mov adc mov dec leave cwtl mov loope mov ja mov ret (bad) scas mov das xor incl mov dec xor dec in fnstcw push fidivr icebp fisubl aad add lcall cld mov mov sbb push outsb push xchg (bad) inc cmp aaa add push jmp adc stc dec mov popf inc dec out sbb cltd aaa mov xor cmp push mov jge jae ficom xor push icebp or cmp andb std xchg mov add insb repz jle xchg lds movsb stos and popa out (bad) xor in cmc mov lahf cltd xor outsb inc repz dec fsub mov rcr ds dec adc psubusb in dec neg push pushf inc dec es fcoms cmp (bad) mov into or add cmp cltd pop in jns push push aad int3 or into and ds sub jae dec ret pop and cld popa insl inc sbb insb stos cmp add jo das mov xor xor adc and inc fdecstp stc subl or call repnz xchg add add add add orb sarb loop ja test adc outsl lods into push das lret adc push aad (bad) or into mov pusha std pop jo bound pop stos test adc loope pop fnstcw jmp and out movb int3 lea pop mov sub inc out push mov add push loopne or mov cmp int stos rol popf hlt fs dec cltd push inc cli outsl sbb repz into inc jmp subl cs stos cmp scas (bad) std je mov fs cmp inc add int jmp jg cltd inc push (bad) cmc inc push (bad) add add rol insl fsubl daa add sub cli push data16 shrd je repnz leavew ficom push cmp call inc xor subl xchg and pop mov stos cmpsl mov loopne int3 fadd pop test cmp sbbl ljmp cmp (bad) add cmp push add sub pusha mov notb push test popf imul xchg sub pushf leave pop jae add frstor cmp (bad) push loopne shrb fdivrl lods sarb mov xchg iret add push lahf inc and push inc sbb stos mov loopne in test lods xchg std popf fidiv sbb daa repnz add jge bound inc adc mov mov popa cmpsl loop jns subb aas jnp aas push adc push (bad) in and in cmp out pop cmp sbb (bad) movsb fs std inc or frstor out lds dec lds enter jge dec pop cmp xor add add icebp (bad) fs jg and cmp jbe sub mov or xchg add add (bad) cmpsb mov push or loopne xor mov add aad mov sub imul lds lret mov sub daa decb enter add int3 cmp mov pop mov ljmp mov mov insb stos arpl xor dec scas inc dec in in arpl inc out fs les fs and adc data16 push xor icebp lods mov nop in rcrl lret fdivr lods repnz insl je add add mov pop xchg or int push push pop pusha dec adcb imull (bad) std cmpsb jecxz push xor data16 outsb sbb mov sub jge push pop arpl adc test or jp jbe mov fstpt mov sbb cmc mov pop inc mov fwait or cltd cs mov add add cld add cmp dec mov mov movsl add jne fdivrl shll mov mov xchg aas cmovs jbe inc scas nop xchg sub loopne xchg sub jmp je xchg sub repz jmp mov stc or mov pop fs pop in out (bad) mov cmp movsl jne,pt xor lret shr popa cmc pop inc push stos and mov popf leave fcoml cmp mov cld pop add pop arpl sub sub xchg sbb dec ja cltd push dec mov xchg mov arpl push pop inc cmp add add cmp ret cmp pop jb xchg mov fwait jge xchg shrb ret popf movsb xlat jno sub adc addr16 and jae xchg (bad) fistl fidivrl std incb pop xchg imul mov rol xchg movsb xchg scas rcrl mov pop xor sub scas cmc int3 xlat in aad lahf add add adc lock jp mov mov js cmp test dec or mov push out pop jmp pop or push aad in outsb rcrl lds aaa sti rol mov in mov ja out mov pop nop scas or in mov loopne scas sahf mov (bad) pusha lret push imul adc cmc xchg aaa push sbb sbb gs repz add cltd inc dec imul fstpl fsubrp mov cli jne lock xor mov imul push cs cltd or or ljmp addb sbb mov pop xchg or add jae xchg push mov dec mov jae movsb in cmpsb pop cli pop or call out mov fist inc daa dec lods cmp xchg mov jb in inc mov das xor adc xchg mov sub (bad) jge pop adc pop add mov add jbe cmp push fisttpl mov data16 (bad) stos or xor push add dec insl jb lea jg push and call inc in daa in aad xchg ja (bad) fwait add scas ds scas jbe faddp mov mov mov lahf in mov je jo enter add add add test or in cli ror mov xor mov cs aam repz addl roll mov ret inc sbb or and mov mov out push mov out rcll arpl imul loopne pop repz push add push add add sub mov push cmp or mov stos push pop inc pop repnz adc daa ljmp lret into add or mov xchg or out rcll sahf cmp add mov sbb adc cmp or sbb mov add pusha (bad) js test and lret andb sbb xchg movsl std mov pop or jo call lods cmp mov mov (bad) imul push lret bound push fprem1 leave dec mov xchg es cmp out pop lahf lea cmp daa or add insb lcall add jg addr16 nop push lock jno xchg rcrl jnp mov add or cs jmp xor scas jns mov xlat (bad) sti xchg arpl inc push xor repnz in (bad) xor inc xor sbb xchg mov ds outsb inc clc test add add cmp addr16 iret loop shll stos inc in loopne mov mov loop dec cmp int3 add cmp (bad) (bad) mov jle lret pop or push clc bound xor add stc shlb aas cld cmp in jmp inc (bad) sbb dec add mov repz cltd ret jg pusha sbb push cs mov mov aas lcall cmp cs xor rol push insl sub ds dec mov and dec xor fwait push cmp fild (bad) (bad) dec mov pusha dec movsl stc or add jnp inc iret xchg add add andl mov mov or jno rclb push ljmp mov out in divb ret pop test pop adc push mov mov mov xorl cmc sub cmc mov mov movsl pop dec arpl bound out mov or outsb add push sbb loop pop cmp outsl mov sub and jo movsb push mov mov mov xchg inc jne push dec or mov add adc mov dec (bad) inc cmp sbb xchg add xorl adc adc add add (bad) jmp mov xchg mov dec mov mov cmpsb pop enter cmpsl mov lds in addr16 mov test xchg adc adc xchg sbbl push sbb imul and pop pushf jo (bad) in loopne add aad add adc cmpsl xchg jno dec push pusha ljmp add movsl push test add jno push cmpsb lahf jb cld pop out add out data16 lock into (bad) mov loopne jb inc test shrl or mov sbb ss cmc xchg out dec push cmpsb lock in dec cmp std pop mov add add clc cmp fwait std insl jg mov xchg mov xor sub sbb mov fmuls das movsb shl rol dec cmpsb dec mov (bad) mov jecxz xor out fcmovne mov (bad) mov mov adc cmpsb add (bad) clc loope mov or add xlat out inc pop mov cs mov inc lcall imul xchg stc divl add dec in push cmp inc jns xchg imul fildll pop pop jne jb mov sahf je mov dec cmpsb scas xchg popa inc pop cmp pop fwait xor pop or mov add inc push out (bad) (bad) push sub inc or fcoml mov lock mov std cli in sub push fisttpl adc jge (bad) enter jb dec loop ljmp cs and iret or mov movsb jl push shll mov outsl cmovg add movsl daa inc sub popf add clc inc lahf pop call xchg mov clc in iret icebp push hlt lcall mov lea xor icebp movsb jl mov dec lret and inc scas aam shrb xchg iret mov cmp adc shrl cmp add add add add and sub sub mov xor iret out aaa mov out sub scas out xor fbld xchg (bad) adc or mov dec dec dec fs (bad) (bad) or arpl (bad) mov xchg mov xchg jnp nop lret fnsave pop int3 mov push lcall add sbb pop xor int3 cs imul repz sbb push lods sub cmp js push addr16 xor jle xor mov inc jns lea iret cltd insb out enter inc fcoms mov repnz push ret das mov xor add add aas jae lret inc lret adc push push das dec xor push aaa imul icebp cmpsl add add sbb mov enter loope jns and adc xchg add mov cmp insl pop repnz sbb lret (bad) fnsave xor cwtl mov dec fdivs mov roll mov test pop aad mov push mov out adc mov stos out pop push inc mov cmpsb mov nop dec jns pop loop les inc in sbb and xor push scas pusha dec mov dec xchg push pop decb inc jbe add add jae (bad) xor out fidivrl push push (bad) cmpsl inc push lahf outsl cmp jo lock pop addr16 mov dec inc arpl imul lods push and xorl lods (bad) mov hlt and outsb mov add imul mov pop hlt (bad) cld push lret jb sub and and ljmp lret push leave push xor xchg mov pop scas or dec xor pusha xor xchg ret mov dec mov sub aas fimul test inc mov jns popf cs mov add movsl and outsl inc adc pop movsb out inc or stos lret xor jp enter ficompl pop insb sbb sahf clc fiadd mov mov inc mov push xchg clc in out fiadd inc xor lcall pop inc pop je rcr jnp mov add (bad) xlat (bad) lret inc (bad) das gs add divl jbe cli mov jns mov add daa and adc add add add aaa pop jecxz inc mov or idivl push repz fadds js inc pop adcl loopne dec sbb test arpl or loop lcall test mov lret mov stos fs loopne scas xor pushf pop (bad) push push outsb rclb mov xor imul xchg xchg test jne mov je cmp rcrl jle mov sub xchg pop pop fucomi mov jmp xchg add jae mov lcall fldcw sbb movsl jl sub mov cmp je pop push jno test pop lea (bad) call ja roll add add jecxz imul dec adc fwait in test sarb imul je aaa xchg ret stos cs cli fisttpl cmp xor jmp push mov ja sbb sbbl ret mov cltd adc push sub lds dec fsubrl mov add or jns xor push pop in pop or sarb icebp cltd shll add stos inc outsl nop push sub mov outsl sbb xchg sub dec stos (bad) jge cmc jb mov pop adc inc dec clc mov inc cmc out popf loop lds jg,pn xor pop mov jne jae pop outsb add je sbb jne fdivr sahf mov cmc imul mov in and mov test pop push sub scas jp push icebp loop jne jo nop sub rcrl (bad) or push in ds dec inc and arpl mov mov (bad) cmp push jno arpl das xchg or adc add xchg (bad) icebp shrl stos or mov pop cs pop popa cli pop scas xor pusha test int3 cli jne arpl jbe fs les add push cli pop or fadd or inc aas sub in pusha sub cmp call into xchg mov jne ret mov mov dec xchg addr16 hlt jns xchg (bad) pop enter (bad) adc mov cwtl dec pop adc (bad) shrl loopne cld aad mov mov shlb add and xor (bad) jo jge popa jp in pop js popa or out dec jb sbbl fisttp aas icebp cmp add add cmpsl xchg leave or push adc fdiv pop fdivrs psllq pop sahf aam fstpl pop movsb imul int3 popf pop out fs xlat jns push sub sub dec pushf pushf adc cmc cltd lret xor push jecxz adc dec shrl pushf add pop sbb xlat mov popa jne,pt scas sbb gs push nop inc (bad) and aam and pop imul stos ficoml sub andb cmp jns lods cltd repnz mov adc jge je xchg fwait repz lcall cmp mov and (bad) cmpsb (bad) xor cmp jae cmp add (bad) mov lret jp inc lret (bad) add xor sbb and mov xor call in lret add stos test fist out push sub xchg jno xlat daa mov fdivrp decb mov cmp popf adcl (bad) data16 and xchg inc outsl sub shlb push xchg int3 mov popf and mov pop rcll and test jne fldl cli scas sub subb in inc aam sub jno inc and and mov lahf or mov rcrl adc arpl cld int3 lcall out adc (bad) inc insl imul movb (bad) xor push mov add test or int3 sbb (bad) add push dec or mov and icebp rcrb add std cwtl (bad) jg push cmp jmp mov cli dec dec pop test lock js jae inc and imul repz insl mov add add test scas sahf (bad) mov pop scas roll mov dec push out sub popf jmp xchg sub xchg lret adc adc or repnz roll add add bound pop inc jg add ret cmp (bad) xchg cmp mov add add insl insl jmp push cld sub mov out mov dec xor (bad) pop and push cs xchg mov adc aaa xchg leave inc movsl andb nop inc push int std xchg add mul xchg daa (bad) pushf loopne and and mov repz add add sbb mov pop out das cmp or repz sbb mov sbb xorb add pop int clc mov lcall push inc mov xor js mov sbb fnsave cltd or outsl mov imul in add add aas mov jo (bad) adc xor in ljmp outsl loopne add xor or mov add and inc movsb cld push mov dec rcrl js xchg pop mov adc call jle pop (bad) and add inc aaa xchg enter lea add mov mul pop int jge push or push fistp inc cwtl inc pusha es (bad) dec scas cmpsb cld bound adc popa popa sbb adc push ds sub add pop pusha cmp sbb pop (bad) jnp fnstenv xor adc fcompl mov or sbb add mov pushf sub xchg mov pop cmpsl sub dec cli jne movsl sbb pop mov push sub leave push xchg jmp and ja xor dec push loop sbb mov jmp jmp jle sub mov sub sub or popf cli (bad) xor add clc cld jbe jo syscall inc movhps push adc dec xchg ret push std inc in insl sbbl stos push std loope fistl sub push mov pop mov test xchg push nop jle into jbe push push or adc pop fistpll xor inc or add jne dec cmp xchg imul out xchg leave sub daa jl dec dec bnd jmp inc test fsincos and cmp and jecxz inc adc mov cmp aad xor xor inc jge push push mov stc ljmp incb add loope es ss xchg lret pop arpl lcall inc add shl (bad) jbe aad popf jmp rol enter jmp pushf add test push clc adc sbb lods imul adc in in push sub inc pop cmp nop stos adc add ret sbb (bad) push xor xor or cmp inc xchg out push stos (bad) test push cmc mov sub fucom repnz sbb adc pushf pop mov sub mov fs cld out push xor pop pop fsts cmp stos fsts js xchg mov dec fimul or add and ljmp mov pop cmp xchg jbe test xor cmp outsl adc ja mov push fsubr add call dec sub sbb mov push cmpsl mov or adc dec leave cmp xor popa jl shll cli or ja mov add add cmp testb add insl mov (bad) and in out (bad) (bad) xchg das call imul mov mov scas or js inc xchg ffree cmp ljmp popa rcrb lcall call repz mov packsswb fs (bad) cmpsl ljmp cs add add (bad) jbe cmp mov inc test xchg clc sub fistpl inc sahf mov or sub mov pop mov test sti mov (bad) dec aad xchg xchg mov in mov or push push sub xchg xchg xor or cmp cli sarb insl jge add xchg jbe gs aam or inc jge stos out and inc dec push inc test bound mov lods dec mov popa dec mov hlt bswap dec lds xchg shll nop inc jle push cmp nop dec popa fwait mov js mov sahf (bad) lods mov dec and add adc cld (bad) inc sub aam add xchg mov pop fsubrs enter or jae rcrl xor xor cwtl repz push lret mov repnz outsb mov sbb shll ds push or jl cld into or orl add pop mov repnz or and aad ret rcr mov jmp pushf mov pxor loope repz pop cmp pop std bound fimul fsubl pushf sbb and cmpsb lret inc (bad) movsb mov cmp mov jno cmpsl lods xchg movd add ljmp imul pop imul das in pop repnz sub enter in cmp (bad) sbb (bad) js jmp (bad) inc and stos dec inc scas jne int fdiv fucom loop divl sbb inc sahf cmp xchg lods std test (bad) mov dec dec stos push xchg movsb push xor mov pop add addr16 dec sbb mov add or add pop mov xchg inc and add xchg mov inc out out sarb mov shrl les jmp and push adc sub aam in add push loopne scas ja mov pushl jbe (bad) out cmp call hlt jg sbb add int inc cld subl das lret pushf dec loop push arpl std hlt pop cmp inc pop lods iret jmp adc fild mov mov cli in ja test adc in mov and cmp pop mov in pushf fstp push or std adc add add lock jl (bad) repnz xlat and (bad) mov stos xor (bad) dec dec push mov pop popa mov es cmpsb jne js fildl hlt xchg addr16 add or inc (bad) imul or sub mov push cmpsl cmp (bad) jno jle xchg ja add fldt push pop stos add fist xor clc dec (bad) mov lods insl aad (bad) adc in cld inc dec mov mov mov mov cmovne mov mov mov xchg fstpt and push jbe loope ljmp add add add pop imul fidivl push mull pop (bad) lods sub stos loope loop adc lock shl pop (bad) imul push jecxz ja xor adc mov cs aad stos stc mov jecxz lods jno add sahf xlat roll nop test xlat xlat (bad) js ss xchg adc out das sub cbtw test xchg shrl adc push mov bound add rorl shrl aam sub loopne fcoms iret xchg test dec mov outsl pop inc das je dec push loopne jmp mov (bad) aaa pop addr16 ret loopne cmpsl xchg or xor shrl jecxz cmpl pop mov mov mov adc in push fnsave mov dec pop xlat pop lods mov into imul add pop sbb mov mov leave rol into sbb add addr16 adc mov jae xchg xchg mov popa inc xlat push pop push fdivrs jge jb add out add aaa or mov push das inc loopne sbb outsb cmc fcoml mov mov pop scas jl mov out push and jbe (bad) jp ret stos (bad) nop xchg jo inc lcall scas xchg mul xor int ret iret xchg inc sub dec add or lea jno roll aas (bad) mov dec aad (bad) (bad) jmp fdivs mov bound mov stos mov and bound cltd aas in imul add add add dec adc aam gs in sub sbb mov jmp (bad) mov add movsb dec sub mov xor sarl (bad) sub jge cmpsl mov and or add pop sbb movsb cli in cmp pop js mov push inc fimull add inc scas push (bad) xor iret sub in lods mov mov xorb jns add std popf lods jmp (bad) adc fimull mov pop in mov cmp jg loopne sbb imul std sbb xor mov cmpsb add add out push leave sub (bad) jge repz lahf xor je sub jmp mov ds scas aaa or fistpl lea pop mov cmp jns call cmp mov adc mov pop loop pop or sahf sar jns xlat clc jae cmp add mov es (bad) rolb mov xchg test add lds (bad) mov ror jmp inc xchg leave xlat outsl jle pop pusha and addr16 adc mov mov xchg push lods in pop jbe cmp adc and dec stc add lock dec outsb and cmp insb nop add and and fadds cld int pop pop jmp jle jne dec (bad) xor movsl pop push xchg fld lods arpl mov pusha fs das cs mov mov in pusha mov mov pop inc pop xchg lds rolb inc int3 dec add cwtl daa leave stc sbb add pusha mov scas mov sahf xchg mov popa dec mov out or aas repnz ss or dec dec outsl cwtl outsl xchg dec lods jne cltd aaa loop cmp inc fmul pop addr16 sbb xchg push outsl loopne stos shrb push (bad) jmp inc lock (bad) mov sar add sbb es mov jecxz lret inc jne or int3 jno xlat and out cld pop dec (bad) dec stc (bad) jne ljmp je pop ljmp and inc and adc test in xchg cmp pop pop lcall nop addb movsl add jnp test mov inc and jb repnz out insl out fildll ljmp in cmpsb aam ss into push lods jb lods jae cmp push insb lret dec rclb movsb mov loop (bad) das int3 loopne inc fdivr or jns cmp cmpsb mov andl loope mov aam pop and jge fcomps pusha jg add (bad) scas (bad) jmp cmp mov push aas inc xor (bad) mov adcb and jb push sbb xor in jp add dec hlt fwait push imul mov push push pop xchg and out repz and mov or dec add add add dec pop int push or movsl and outsl mov add adc cmp (bad) mov cmp stos mov or xchg jno dec aam fidivr bound lods in (bad) lahf xor mov (bad) imul or pop shlb add add pushf pop or lea xlat jae jl mov (bad) je cmp pop and jl mov icebp in call mov mov add divl pop daa int add jnp or inc mov sub je stos xor sub loopne add add add jo into aad xchg pop movsl shrb nop jecxz loope push mov inc jo and xor pushf adc xor je xchg sub sarl cwtl aam sub ficoml lods push cmpl arpl aam cs push xchg jns inc mov xchg xchg test cmp add inc mov clc jae sub mov sbb pusha push push and sub popa and in mov cmpsb jg orb jge arpl inc cs leave (bad) fldenv cmp adc sub lock mov jb inc mov inc sub mov mov push add add out inc fildl into (bad) popa (bad) xorl dec mov adc fcompl pop lahf xchg or mov ja sbb sbb fs dec jp fistl sub jae mov rcr mov cmp ds outsb xchg mov (bad) mov lcall (bad) insl add jne mov call or stc pop inc in bnd aaa sbb lods add pushf add (bad) pop jecxz pop jns inc pop push mov jno scas jae adc daa popf add inc pop xchg fnsave pusha arpl cmc ret ds lods pop mov xchg xor iret mov add push xchg add xchg xor mov or sahf test sbb mov or notl add or push (bad) add mov mov mov lds in frstor push pop (bad) jp mov fcos andb in and arpl cli add cwtl les daa decl inc fimul clc push (bad) in sub lea aas xlat mov push mov nop iret cwtl mov fsts dec push mov stc pop pop arpl cmp inc adcl mov dec testb jecxz bound mov dec add movsl das cld and xchg test xchg cld int3 pop aad mov lcall pop ret gs xchg ret call fs xchg xchg add pop outsl jns adc dec and es outsl xchg cld jg inc sub pop sti sbb testb add jbe dec jns int3 mov inc xchg outsl sub xchg ja add aas lcall inc (bad) fs push xchg cmc push es or mov cwtl aam pop xor loop stos scas add ljmp (bad) repnz sub dec out dec aam jge (bad) (bad) out mov mov lcall mov sbb lock inc mov mov cmp xor jbe mov inc xchg mov mov aaa ret add pushf test int mov cs inc mov sub (bad) btrl and mov mov mov movsb sub add and jno,pn xchg or add mov sti iret out das xchg inc dec lahf icebp xchg andb push cltd cmp push stc movsb inc pop mov push pop in jns cs sarl dec cmp push cmp inc pop mov mov ret loope xchg rorl jmp cmpsb sarb in xor jo mov ret rorl (bad) sub addr16 test mov jp push cmc lds ret and xchg hlt add into std fwait rcr (bad) imul fwait iret sarl jl in enter jbe js pop scas insb and mov jmp bound xorl jnp inc aad inc fldl cmp cld je xchg pop movsb bound mov cmp mov mov pop mov push popa or or and stos jbe stos mov mov das mov js,pn imul push test fisubl sahf dec mov adc push icebp sbb mov cmp add movsb in nop bound mov in xor mov mov and and fcmovnbe add mov sub jge adc loopne addr16 fnsave stos cmp cli xor mov lods adc orl inc pusha test inc push data16 mov cmp add movsl inc test or cmpsl fisttpl or mov mov sub rcll push insl xchg push pop scas movsl es scas xchg xchg xchg and dec pop jl cmpsl cmp inc xor jg or pop (bad) mov add fild add int leave xchg out out test jae lods inc push or iret cltd add cli fistp mov mov clc jmp das scas movsb loopne cmp pop push jae xor inc inc mov adc or fs cmp iret mov mov xchg push sub sbbl icebp insb insl dec clc or fsub jns enter add adc mov add cltd fistp ds push xor cmpl dec mov loope enter ljmp cmp (bad) push test sbb leave into jge mov sub push (bad) mov cmc or push pop cwtl sbbl pop rcll and jno pop and aad add add add add leave xor shrb (bad) inc in cltd add push fistl dec lods and in roll inc inc inc loopne xchg cmp test cwtl jmp xor jns scas adc pop ss enter incb data16 scas sbb jg stos test int3 scas pop inc jnp and fistpll add pushf xchg cmp leave fdivl stc pop mov sti repnz mov and (bad) jb clc in jl inc fcomp (bad) stos lret in inc jg pop aad pop (bad) sbb cmp int3 jae inc or jbe jecxz and repz and fisubrl pop out xor enter insb cmpsl cmc or pusha leave mov add add je iret lahf insl daa in cmp shll jnp ja (bad) jmp sbb fdecstp push and daa mov mov pop dec lods mov sub lods or mov pop (bad) insb lock hlt adc fldcw pop stos inc xchg mov dec add gs repz add xchg fsub out es xchg mov test lret sbb pop adc mov lret test test cmpsl push jns imul fwait inc cmp sbb fucomip pop cwtl icebp inc in movsl pop loope js insb movsb cmpsl lret inc popf movsl aad sbb iret aas add add (bad) mov cmp popf iret es shrb pop push cmp sub jl (bad) mov rcll jb pop xor je mov or xchg cmpsb mov enter stos fwait xchg das ret icebp push inc fcmovnb pop pusha movl (bad) int3 mov add add jge cmc rolb enter rcrl inc cmpsl sub movsl mov test adc sbb xor enter loopne jae lods aaa mov cmp loope fstpt adc outsb into icebp adc mov hlt jp xor bound int sbb pop add add aam sbb hlt (bad) je jl inc push jno adc fnstcw add scas push mov pushf (bad) xchg sarl or pop arpl mov sbb bound jne xchg mov (bad) cmc rorb pop xor adc push fdiv jg test fcmovnbe dec dec mov jbe adc (bad) mov roll dec sub inc les sub sbb shrb cld adc nop decb movsl dec mov jge cmpsl inc dec mov ljmp dec or stos shr or cmp gs call lods and sub (bad) js mov aas arpl repnz mov push xchg pop insl (bad) icebp and cld xchg mov stos cmp int pop push xorl aad dec mov push in push imul jg mov les jb cmc addr16 jg adc and test into shll add add add int rorb mov lock mov (bad) cmp jp clc push and xor ja movsl lret mov inc sbb pop and jecxz stc push fisubl test mov fldpi mov mov cmp dec and lods mov lahf es cmpsl movb mov add push test lret cmc test fildll lods jne,pn jns das cmp add scas inc dec call loope cld and sub adc xchg mov lea nop lret in jecxz inc mov adc cs or xchg xchg fwait nop roll add add inc fs imul adc aam dec jp,pn jl add dec movsb out pop fucomi ret jg scas mov cmpsl das cmp cli lahf sub mov call ret icebp xchg mov dec out rol jp fiadd lret push popl mov sbb pop dec (bad) icebp pop sub arpl test lahf xor adc mov stc jg xchg les jmp std sti cli mov dec lcall mov pop push adc add fstp mov or out mov rorl dec mov jnp dec inc jle jecxz add rcr bound pop pop jmp add lods inc sahf pushf dec outsl fcoml adc rcrl les pop dec push pop stos aam (bad) lods mov push cmp (bad) in fdivs inc (bad) push push mov movq mov push stc in inc push cli sub pop cld roll push in dec inc popf aas cld mov add add dec add jp sbb push in xor jae add popa add push imul test jo hlt test inc inc rcrb jle push sbb pop xchg cmc je or repnz mov addl mov sbb mov cmc rcl jne sbb sbb add bound pop cmc mov mov pop out cmp pop mov sub pop jmp adcl sbb imul fldenv fisubl (bad) or ja stos mov pop gs adc test adc mov int3 imul push mov add (bad) insl mov cmc jns test bsr add test fdivs (bad) lahf inc add out aad jno pop sub or mov inc pop movsl sbb cld insl mov inc cli imul or stc add jae cli jno in outsl sub icebp mov movsb dec add add push inc ljmp bound and outsb lock sub test cwtl pop les inc cmp adc mov inc xchg (bad) icebp cwtl (bad) cwtl cmp lret add test jp jno stc xchg mov stos insb push xor ret fcmovnbe faddl add xor add mov jp ret mov xchg cmc movsb adcl lds fcomp cmp rcrl es push xchg sarb imul in imul pop iret loopne bound (bad) in (bad) cld stos mov push jp cld cmovo testl add add cltd or (bad) pop inc sub (bad) gs inc mov test pusha cmp mov xor xchg inc pop dec aam add in cmp into cmp pop xor mov adc mov mov lcall in jbe jle sti lea sub add add out cltd das lahf sbbl add and sub loop sbb push ja outsb icebp pop lods add pop enter push mov aad fs dec movsb mov sbb adc pop arpl jne test mov add adc push xor push in or lcall lcall add cmp xor mov mov sarl mov outsb (bad) mov fistp clc inc xchg jmp inc jb mov scas in push pop stos mov mov xor into nop bound imul jecxz inc test outsb fidivl mov mov jecxz ret cmpsb sbb add mov cli lret mov cld mov fisubl mov cmpb je xor (bad) sar lods dec fs test cmp adc repz aam add mov mov inc cmp sahf mov scas jno (bad) pop scas xor add xchg jmp dec cld pushf pop pop pop pop xchg mov xor bound out cltd mov (bad) or push mov cmp cmp rcrl std jne lcall pop or add xchg xchg pushf mov leave fcoml jecxz dec or add cmpl fildll xchg popa adc enter sbb addr16 ret cmp aam cmpsb enter mov push mov cli nop push movsb mov xor arpl daa sarb repz mov fnstcw aad jns in dec push fucomip stos fimull in add sub jo xchg js xor test (bad) repnz pushf mov mov cli hlt push adc stos jmp movsl mov fnsave pop inc leave ljmp mov jecxz (bad) xor cmpsb inc sti pusha (bad) fwait (bad) int pop mov scas jl pop outsb and mov in dec addr16 std mov xchg ffree lcall mov mov int3 call push mov or mov add repnz ja sub jo lcall gs pusha test pop add lods fadd je add add shlb inc mov stos and pop or pop xlat lret insb mov sahf es bound adc inc test insb jp ret in and sub lea jb outsl lret lds jge popf aas jne es icebp popf (bad) cltd push push test cmp cld insl ret pop leave adc (bad) xchg push add sbb js call imul cli push sti fs pop mov cli xor (bad) (bad) cld push push hlt test ja ja imul fldenv aam (bad) push and inc cmp dec adc sub loop sbb push cmp lock or sarb aaa aad dec (bad) int stos (bad) je ret out mov sub sbb out insb dec lcall add loop jmp into add dec add jg pop out jl mov adc mov xor (bad) rclb or (bad) and pushf mov adc lret daa pop jle jp (bad) mov push int3 jl lahf jbe loop push mov mov mov into push int jne jnp pop movsb jmp fwait aad ss leave fsts mov cmp push push jmp add jno inc repz push int3 lods cmc mov (bad) push repnz push scas notb loope jg inc pop sahf int3 mov addr16 sub jmp or ffreep sbbb ds shr mov movsl out inc stos outsl clc clc cs cmp add das rclb aad mov adc lods std insl shlb fcoml fcomip imul adc mulb pop add jecxz in dec dec stos adc xchg adc (bad) rorb lret cmp lds ljmp pmullw aad xchg add insb push out shrb pop push add das or ret fsubl sar ss lds cmpsl push jns push jecxz add insb jbe bound fdiv mov inc cmp sub jnp and test mov push push push (bad) add add jg mov ret mov sbb hlt loopew lea sub xchg jg or dec mov int3 int3 stos push dec pop sti xchg cmp icebp adc xchg jno stc outsb in sub pop or xor bound mov mov mov push cmpsl sbb sahf or pop xchg pop mov cmp add inc mov std mov aaa jo mov (bad) popf and iret sti repnz imul imul push pop add or push dec int push repz (bad) mov int3 dec or insb mov int outsb cltd jmp xchg mov pop leave stc jbe add add and pop out xlat leave popf push call dec jecxz pop test mov or lods in shrl aaa pop scas xchg sti loop std dec rorl aaa (bad) or jp add aad push je or mov cmp ret fabs jmp mov into sbb stos mov add outsl sbb and inc shrb andb mov and dec sub add ret std xor xchg and adc xor mov fs mov cwtl and pop push xchg (bad) stc out clc mov outsb add test loopne jae bnd sarl lea dec sub lea punpcklwd insl mov cmpsl dec pop test jecxz unpcklps mov js lahf mov mov mov xor pop sbb cmp fnsave add icebp cmp sub adc subl adc fstpt or jl sahf loope jp dec dec push add movsb bound hlt push cs in xchg loope lret rol pusha jecxz cmp jae mov adc and ljmp mov push fimull jne in inc push std pop push xor (bad) mov imul mov stos mov add sbb inc mov xchg pextrw es or cmp cmpsb jge push push adc xor cld push cmpb enter movsb push mov add mov adc cmp aaa add mov loope inc fld (bad) mov out cmp in lock lods push jg stc add nop movsb lock or mov push adc pop lods and in xorl in inc and pusha fwait or cmp decb pop mov cltd mov js shrb les cmc jmp lret pushf cmp add popf xchg mov lods xor cmp xchg and rcrl jae or aad xorb jo rorl add and pop mov add ja sbb cmc inc sub imul rorb cmpsb cmp iret xchg pop repnz and mov insl jno or xchg (bad) fisttpll iret int (bad) push repz xchg jp movsl test repnz movsl out push jns mov pop push pushf adc pop sub dec je (bad) repz jp leave lock out xchg test push lock mov addb jb nop dec mov sub call add dec test imul in pop stc (bad) repz bound and mov mov es mov out clc cmp dec in pop xor sbb clc xchg mov aam outsb loop into sbb int3 sub jne adc jp into jbe lahf loopw arpl and mov add sbb xor mulb add shlb xor movb sub gs imul js lods dec cmp add imul enter insb sub je aaa xor mov sub inc inc insl jle cmp movsl jo xchg mov xlat (bad) or pop icebp je mov mov mov popa imul lcall xchg sahf ljmp ror push in add enter and ret stos cmp movsl loope cwtl movsl ret push or faddl scas jns pop lea add mov fwait scas push repnz mov sbb push out xor push pop xchg xor jb mov jno add movsb scas pop lcall xchg add (bad) frstor scas pusha xchg popf jg mov mov sub bound fisub mov pop push test out subb add add icebp dec in aaa loope je int data16 int3 fwait mov loope andl mov push cld adc mov (bad) cmp dec mov iret mov mov inc sub (bad) (bad) into movsb sahf inc pop push jle stos and jmp js mov add add and iretw pusha dec dec ret fmull cmp cmc sbb or dec dec (bad) std sarb dec pop inc or cmc adc fwait xchg dec sub bound popa mov xor sub sbb or mov insl mov ror jge ljmp add cltd int3 pop (bad) shll je outsb in ljmp stos lods roll mov add mov data16 je dec mov jle dec in pop xor cmp jle fnstcw push inc mov inc loopne dec mov movl mov sbb cmp imul add add lea adc rcrb aad test lret jb cmp pop jg add or dec add sbb aaa jae,pn aas inc scas addr16 mov xor adc mov sub dec add lods ret xchg xchg movsl or add and (bad) leave in inc lea dec sub add add inc adc or jae es lret adc notl adc das add sub (bad) inc jmp jns jmp cmc jg push or stos adc and push mov sbb dec mov push fnsave ficoml add add cmc sub (bad) rolb icebp mov pop shrb mov sbb xlat fnstcw xor cmpsl cmpsl jne cmp xchg mov fistpll test inc lds dec outsl xorb xchg les out sub pop pop sti call pop cmp test add xor add mov adc cmp push ss jmp mov pusha js es push lahf cmp (bad) push pop shll mov mov scas repnz les xor pop rorl cmpsl test jmp testl cld inc push iret add add pop sahf push inc xor cmp xor mov pusha es sub xchg imul hlt rorl adc test pop popa je insl sub out arpl xor push into xor xchg cmp xor xlat push rcrb jo sbb lcall add aaa sti test cmpsl dec into adc push sub jb or pop das inc fnsave mov jne (bad) aad lods in loopne inc fwait jb cmpsl sub pusha icebp cmp in outsl push jb dec aaa cmp adc lock test popa cltd aad add jno aaa xlat sbb hlt int add pop stc mov (bad) lret adc aas lret add mov popa pushf sbb cmp sub mov jno xor cmpsb iret lcall fisubr adc pushf adc mov xor sbb je int3 mov fwait inc notl fistpll into insb leave fwait insb in mov aaa popf icebp fs and imul push fist mov sti cmpsl fs pop push shll add scas mov cwtl sti call fiadd pop cmp pop es adc cli lods sbb enter loope nop insb adc repnz add pop jbe arpl out pushf jbe mov inc pop xor sub dec xor inc inc push sub or xchg add pop pop dec and bound outsb pop sbb jb xor idiv mov ret dec call jle push xor add add sbb mov out add mov jae cld jecxz dec loop sbb or sar rorb mov jl mov shrl pop (bad) xor xor in repz cmp mov inc test mov daa jle jge ja punpckhbw outsb loopne pop mov jge shl cmp add cmp cmp sbb outsb jne sbb sbb jp (bad) stc add fidivr push fld adc or addl nop ljmp lods pop rclb xchg mov mov aaa hlt mov insl and add enter add popf cmp pushf cmp add add xor cmpsl add out outsb mov cli and pop ja pop icebp xor sbb jl insl dec aas mov lods divl mov jno jns dec or fxch movsb xor stc jo loopne mov jle (bad) (bad) cmc leave jae mov cmp push loopne and outsl inc jb inc nop sub insl fs sbb pop xlat xchg das cmp adcb test daa push jg fwait hlt shlb insb mov (bad) (bad) icebp push xor cmc or mov xor pop dec ret jbe rcrb push mov mov sub lea xchg shrl or fwait cwtl mov pop jbe enter (bad) mov mov icebp call xor xlat sbb movsl xor ja jno xor pop std (bad) or sbb inc mov ret sbb lcall xor cltd dec pop rorl movsl outsb dec insl daa inc adc jbe xlat add mov into cmp lcall pop mov cwtl jb pusha into push fwait cmpsb adc sbb pop dec lret add dec jp mov mov mov inc lret andb sbb out outsl fmul dec ljmp cmc aaa adc mov js mov (bad) mov jno shrl pop jb or jl or fs aaa test jl mov or jae pop mov mov ds or jecxz and mov adc pusha sbb imul jbe mov dec cmc or (bad) cmp lods enter sub mov inc push sbb cwtl mov mov shrl jbe adc mov outsl xchg and mov ret aaa (bad) repz mov nop sub cmp aas clc xchg (bad) mov push mov in sti testb cmp in add xor and fbld add push mull add clc mov in rcl lret fistpll scas add lahf and jo jbe das jg mov xchg out dec inc rcl (bad) fstpl jae add xor dec test jp sahf lods mov jl nop dec sarb loope jno inc lock mov sbb push sbb pushf sbb add shr mov mov sub (bad) lock sbb pop add lea stos mov add inc xor addr16 cmp jp jb xlat sub lods pop pop pop test push xchg cmp push and push icebp sarb ret mov jp add ret mov cmp xchg call cmp aad aam cmpsl idivb sbb pop (bad) sbb es mov setno dec int3 movsb mov dec pop repnz insb xbegin popa mov push in (bad) (bad) mov sbb in rol movsl (bad) rcrb dec std sub shrb mov add outsl outsb push mov cmp xchg mov sbb and add insl test inc jns addl pop mov pop rcl jge sbb jbe and roll mov or dec xchg adcb (bad) dec cmc scas nop sbb outsl mov (bad) mov ljmp add or ljmp in (bad) jge sub or inc cmp or (bad) mov dec or push pop shrb mov jp insl push pop sub int xor hlt ficom mov ds inc jle sbb inc push or push dec mov jno rcr push fbld call xchg jecxz adc iret mov push js call leave (bad) jge or mov sahf scas out out jge xchg sbb mov xchg icebp sub loopne ja je xchg fisttpl aad into push mov dec inc popf pop and mov pop sub sub das add add jbe leave cmp mov adc bound add xor (bad) cmp cmpsl aam stc cmc push stos insl addr16 and or aas rorb cmpsl jae sarl sahf sbb jl xchg sub insb outsl push push lock ja lret fmull jle in dec xchg add sbb sbb and repz and pushl jp or xchg inc stc adc lods mov mov xor pop add (bad) push mov cltd pop push adc inc scas inc (bad) std rcr call jb xor cmp test ds or das cmp les sub les adc push (bad) cmp imul call js sbb xor sub jecxz push xchg mov lcall dec mov out dec pusha inc sbb lret mov pusha scas mov add cs jmp jo pop out sbb push jge mov ds icebp out xor mov test ret sub mov out add inc add jne insb mov pop and pop pop das mov in dec ljmp or mov rorb in call mov adcl dec roll add add add mov xchg or cmpsb mov (bad) lock pop mov push or or mov int3 (bad) icebp mov pop cwtl stc cmp pop inc std aaa loopne push lcall lret mov mov adc (bad) cmp and add add call mov test ss out or inc (bad) lea cltd pop repz std add dec or ficomp push test and rcll mov add sbb mov mov rcrb mov inc add inc push repnz and fildll ds popa jne xor fisubrl sbb mov daa not lret mov leave test mov push mov jmp and fs addr16 mov aam movsb scas jnp lret dec inc in jb lock pop out sub scas xchg add (bad) fs sub nop dec xchg jae xor lahf push mov dec pop jle dec mov scas mov scas xor mov ljmp ljmp xlat adc push ds ret inc mov sub je mov mov or xchg adcl add test (bad) mov or in repz dec mov mov test pop adc jle clc xchg cli push (bad) mov sbb mov aas (bad) iret int3 push movsb xchg loopne mov mov sub xor add dec int3 fidivl mov (bad) icebp dec or dec shrb ss xor mov mov scas lret test aam stc pop pop push outsl inc mov mov cltd and push hlt sub (bad) in mov andl xchg mov xchg aad lret rolb jmp ret push jb mov in mov push psubq cmp loopne jne mov xchg out xchg add pop pop cltd and xor daa or mov add test out mov jmp jle jge ret mov dec outsl fwait add (bad) jl xchg add (bad) into loop jne jno clc jbe adc jnp ret mov int3 mov push and dec in sbb add (bad) idivb scas cmpsl and sub ret enter sahf int add adc adc xor shrl stos cmp in (bad) jo dec xchg fiaddl cmp lahf ss ljmp mov sbb (bad) and xchg dec jno jb pop rolb test mov and xchg test dec enter les push mov stos je and pop mov cmp insl jb sbb inc mov pop pop outsb scas loopne sbb jns (bad) loope and insl addr16 add loope idivl pop cwtl out or inc push jne xchg scas mov jg mov lcall adc jne (bad) xlat xor in or adc (bad) push add add idivl loop mov and lock je pop lret sahf ret adc call add repnz sub xchg stos xchg push loope movsb add icebp rorb mov loop ss xchg fwait or cli sti sahf (bad) pusha pop jae lock xchg adc (bad) cltd enter fmulp imul dec testl inc out mov sti inc dec loop add and sub add add jecxz loope mov pop xchg xlat xlat ror and ret push inc xor push xor push lcall lods ss dec daa (bad) pop pop cmpsb es mov mov rcrl loope mov call mov cwtl jne sti scas rcr cmpsl sbb jno aad or cwtl inc inc push jecxz test add and rolb imul jmp lret xchg jns or sarb mov dec add je lahf push loop aam cmpsb ljmp rcrl xor hlt je xchg repnz mov push iret pop pop dec (bad) loop mov (bad) mov test arpl mov add mov push sub adcb in repz xchg mov xchg mov lods push xchg adc and inc cmp pop and mov cwtl movsb push enter sub cmp xchg sub fmuls inc mov xchg mov sahf (bad) (bad) ja inc (bad) inc add mov call jnp pushf adc sbb stos test mov lret mov pushf out or cwtl push adc es sbb mov shrb leave cltd jnp pop sub in mov pop cmp xlat mov mov enter test push arpl jmp add mov cmp loop nop inc xorb stos mov push je fsubs pop adc sub push xchg inc mov (bad) popa mov daa clc fisubl dec int3 mov and loope out adc icebp shl ficoml dec mov stc popa adc add add leave loop cmpsl and bound je adc cltd imul push int3 (bad) ja dec xor mov pusha cmp mov inc cmp aas xchg rorb cmp xor (bad) adc jge daa in arpl or popf je jle daa mov fdivs xchg sti inc fs sti push movsl ret add jnp movsl adc lret add mov xchg xchg pop (bad) scas push mov sbb mov inc pop or add std pop push popa insl inc cli adc mov data16 cld insl lahf into (bad) nop lods loope mov arpl dec std add or cld push orb scas mov ljmp add jb dec jmp lcall mov xchg xor mov push mull and fwait adc xchg mov lret imul push js pop out cmp sbb es ds mov cmpsb jl push fsubr jne cs aaa gs sbb add cmp test scas out rcl pop and std sti cmp fidiv sbb jp mov jl sbb push push mov push push jl push inc cmp jno (bad) paddq mov xor dec adc inc fstpl push stc cwtl and dec jmp ljmp push xchg movsb add add outsl dec jl mov mov sbb inc out dec push mov push push inc popa push jae fs inc lss mov add dec xor arpl (bad) push xlat xchg dec jne mov int3 loope movsb neg leave xlat sub mov (bad) add sub mov pop fwait mull shlb pop test test fidivl aas push xor pop rcrl push and (bad) cmp sahf and adc sarl and jns lret pop mov stc jmp xchg jae lods popa xor xchg adc xor mov xchg xor add add ret ret pop push push mov push dec fdivp (bad) (bad) or lods inc mov test jmp xchg cmc stos sub ret jp dec sub shl pop mov clc or sub rcrb xchg mov dec xchg sysexit or mov cli fimul add (bad) and lcall sbbb add push jmp lds std mov add imul fcmovbe jge ljmp rclb daa lea push mov test push gs adc push out pop mov jmp sub add add pop xor sbb roll push enter or cmp (bad) xor dec rcr jns sbb js hlt adc xchg rcrb mov ds (bad) pop lods idivb sbb inc sbb mov sti bound ss add in mulps out cmc xchg push out xchg xor fstl sub add imul dec (bad) sbb iret outsl cmpb jnp,pt push ret mov jbe sahf sbb push mov cltd and fiadd xlat scas lods into das mov xchg adc imul sbb push repnz loop dec fistl popf rol push sub jle mov adc xor and pop mov test mov bound jmp xchg fidivl mov iret and out fidiv cld add mov jne push add xor push fisttpll add add add add cwtl into (bad) xchg test out leave in jne out cmc mov cs jecxz std (bad) jbe shr out popf popa outsl fdivs adc scas and fwait arpl movsl mov aas sbb (bad) mov loopne pop imul push add lahf cs jle ret stc sbb arpl outsl lcall arpl in dec xchg inc xchg push aam outsb mov je mov jl mov fwait icebp test jge fs add int3 fcmovbe fsub sarb dec shr gs add pop fisttpll imul dec ret call pop adc and rolb enter fmuls add or and mov push mov adc dec dec notb loope mov mov lret xchg repnz jo (bad) scas push add push mov mov lds ss shlb inc add imull cmp push mov mov dec push xor add dec loop and jge cmp (bad) je xchg mov shrl jnp mov icebp add stos pop inc xor iret ds leave xlat xor int mov inc xchg xor test ds add sti or dec adc aas inc mull dec inc add loope,pt repz jnp cmc cmp mov imul or lock jno push arpl mov loop or pushf es dec and pop out inc xor pop pushf popf and adc pop add pop stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jne mov add add jle adc cmp cld add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock xchg inc ljmp fcompl pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp add stos mov push clc mov jbe hlt sbb test xorb jne mov adc adc cmp cld add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub out je (bad) pusha xlat mov fcmovu in out hlt cli incl push adc push and xor cmp pop pop bound jb jge cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fildl loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound add jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je add add mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or sub dec dec push push pop bound jb jge mov add lods mov mov xlat fsub out repnz add or pop sbb daa add inc dec push push pop bound jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg add mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push pop pop gs jne jg mov stos mov add mov rol rcl fnop in out cmc cli incl pop and aas inc dec dec push pop pop fs je jg mov test (bad) lret (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jns test mov mov add add leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in add ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz incb or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp add push add add es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and das xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push add insl jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec add add pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop add je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb add ja (bad) xchg add ret enter fucom call add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl add mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov add mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in add idiv add or push sbb sub xor push push pop pusha gs jne jg mov add add add add (bad) lret (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov add add add mov ret rcl fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addl mov rol lret rcl fneni(8087 out lock add or adc xor dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov add fcmovu in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add unpcklps push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz add add repz incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge add mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or add adc sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push add add sub xor aas inc dec dec push pop pop imul mov mov mov aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and add xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub add inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb and sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha data16 imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul add jg mov test (bad) lret (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl outsl je jg mov test (bad) aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul add mov mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec cmpsl lods mov mov xlat fsub out icebp add cld add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb add or unpckhps pop and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add and add sub xor dec push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push add gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor add ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or daa sub inc add pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop add pop gs je jg mov movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl insl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in add cmc cli incl pop and das xor aas inc dec dec push pop pop imul add cmpsl scas mov ret fcomp out hlt cld add adc push es pop pop insw je orl enter in repz add or push sbb sub cmp dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) ljmp push adc sbb and xor cmp pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add and add aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test ret enter fucom call add or pop sbb es add add cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub add push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc add dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or push sbb sub cmp dec push add add pusha gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop add popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl add insl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je add test mov mov fcomp jecxz in repnz add or pop sbb daa sub cmp dec push push pop pusha imul jg mov test (bad) leave into aam fsubp jmp add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg add xchg xchg pushf mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov add sahf mov mov xlat fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp jmp add or daa sub inc dec push push pop popa imul addb movsl add (bad) leave iret aam fsubp jmp add push adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and xor ds dec dec push pop pop arpl jb jge xchg lods mov add add rcl fneni(8087 in lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test mov mov add enter fucom out repnz add or pop sbb daa sub cmp dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or sub inc dec push push pop popa imul addb movsl stos scas mov mov add aam fsubp jmp add push adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad fild add ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out add add idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add add or pop sbb sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add add add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add adc das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop fs je jg mov test ret enter fucom out repnz add or push sbb add add and sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa add sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and cs add cmp inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp add push push pop pop gs je jg mov test ret leave into rcr fucom call add or daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec add push push pop popa imul addb movsl stos mov mov aad (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop add add pop arpl jb jge xchg lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop add add je jle mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa imul jbe addb movsl stos scas mov mov fcmovu in out hlt stc incb or adc sbb cmp push pop bound jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge add add pushf mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul add add test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fsubp call add or daa sub ss inc dec push push pop pusha gs jne jg mov add mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and sub dec dec push push pop bound jno jl xchg add add rol rcl fcmovu in out cmc cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne jmp cmc sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods add mov mov (bad) fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fucom out repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test mov fcomp loop in repnz add or daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov add lret fcmovu in out hlt stc incb or adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov add (bad) fneni(8087 out lock cli add and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop fs je jle mov test mov mov xlat fldl add add out icebp idiv add or push sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov scas mov mov xlat fucom out repnz add add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or add sbb aaa cmp inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps add add and xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add or adc add sub xor dec push pop pop imul mov scas mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pop gs jne jg mov test ret leave into rcr fucom call add or daa sub add add cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad (bad) jmp add push adc push and sub add inc dec dec push push pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and das xor aas inc dec add dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push add add gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop popa add jno jnp xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl add add jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je add jle mov test mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb add mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop popa insb jno jl xchg movsl stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg add xchg pushf mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov add add mov fcomp jecxz in repnz add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out hlt stc incb or adc sbb cmp push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov add add aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add or adc das xor dec push pop pop imul mov lods mov mov (bad) int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into add add add rcr fsubp call add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or sub dec dec push push pop bound jno jl xchg stos mov mov aad add add in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out add add lock add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test ret enter fucom call add cld add or pop sbb es aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add add or adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add unpckhps pop and das xor ds dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test ret enter fucom out repnz add or push add sbb sub cmp dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or pop sbb es cmp dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or add sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa insb jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub add cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor add add add ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb sub cmp add add push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop add add outsb jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs add add jp test movsb test (bad) leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa imul add jnp xchg movsl stos scas mov rol iret aad (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jb jge add mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov xchg cltd sahf mov mov fcomp jecxz in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb add mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg add lods mov mov (bad) fneni(8087 in lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push pop and das ss dec push pop arpl test mov (bad) aad (bad) ljmp add add hlt stc incl unpcklps push and das xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov rcr fucom call idiv add or push sbb sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add add add or adc sbb cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or add adc das xor dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add pop or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or sbb aaa cmp inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aad (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loope jmp idiv add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc add add xor dec push push pop pusha gs jne addb movsb test ret leave into rcr fucom call add or daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub add aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb es cmp add add push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb js orl test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec add add pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor inc inc dec push push pop add add push jne jg mov test (bad) lret (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs add add jns test mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb add mov lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl je jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb add mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa imul addb add add add xchg lcall mov (bad) jecxz out hlt stc incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out hlt stc incb or adc sbb cmp push pop popa insb jno jl xchg mov mov (bad) fndisi(8087 out lock add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul jg mov test add leave into rcr fsubp call add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov add mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov add lret (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and inc inc dec dec push pop pop imul mov lods mov mov add fucom out repnz add or push sbb es ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jl xchg stos mov mov aad loopne in out cmc sti add or push sbb and inc inc dec push push add imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp add hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop sub cmp dec push push pop pusha imul addb mov mov aad (bad) ljmp or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc add sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or add sub aaa cmp inc dec push pop pop bound jb jge mov test mov mov xlat add jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das add xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor add add add dec push pop pop arpl jb jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos mov mov aad loopne jmp cmc cli add add and inc inc dec dec push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop add add imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop gs add add jp test movsb test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop imul add mov test mov mov fcomp loop in add stc incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in add idiv add or push sbb sub cmp dec push push pop pusha gs jne jg add add lahf movsb test ret leave into rcr fsubp call add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in icebp idiv add or pop sbb daa sub cmp dec push push pop pusha imul addb add xchg lcall mov (bad) jecxz in repz std add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and add xor aas inc dec dec push pop pop arpl jae jle mov add add add mov ret rcl fsub out icebp idiv add or push sbb add ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound jb jl xchg add add rol rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es aaa cmp inc dec push push pop popa imul addb movsl stos scas add mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl imul mov scas mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa add jno jl xchg stos mov add mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov add leave iret aam (bad) jmp add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pusha gs jne jg mov movsl stos scas mov mov aam (bad) jmp add push adc push and xor cmp pop pop arpl jb jge xchg mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov flds fsubp jmp add push adc push and sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fucom call in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fiaddl loope jmp idiv add or adc xor dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter add in out add add stc incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or add push add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps sbb and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or add pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fsubp jmp add or sub inc dec push add arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and xor dec add pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 out lock add and add add add cmp inc dec dec push pop pop imul mov lods mov mov fcomp loop in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add unpcklps push and cs ds add add add push pop pop arpl jae jge mov mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb mov mov aad loopne ljmp adc das xor add dec push pop pop imul mov lods mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and cs ds dec dec push pop add add push (bad) xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and sub xor push push pop pop gs je jg mov test ret leave add aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl add add jb jge mov cmpsl lods mov mov rcl fucom out repnz add or push sbb es ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl add jge mov cmpsl lods mov mov (bad) fsub out lock add or adc xor push push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl addl mov rol rcl fcmovu in out cmc cli incl or adc das xor push push pop pop gs je jg mov test ret enter fucom call add or adc sbb cmp pop pop bound jb jge add xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb add xchg fwait mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push push pop pusha gs jbe addb add mov mov aam (bad) jmp add push adc push and xor cmp push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov add add (bad) leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov add rcr fucom out repnz add or pop sbb es cmp dec push push pop pusha imul add pushf mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae add mov test add add fcomp jecxz in repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov add add rcl fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jl xchg stos mov add add xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) faddl add out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jle mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp out hlt cli incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp add std add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out cmc cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add add or sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or add pop sbb es xor cmp push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and add xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or add pop sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc add sub xor push push pop pop gs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa add ja (bad) xchg lods mov mov (bad) fneni(8087 out lock sti add pop and add xor dec push pop pop add jne jg mov test (bad) leave into rcr fsubp call add or daa sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor add add add cmp inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jno jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pusha gs jne jg mov movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec add dec push push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push add pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov (bad) faddl loop in repnz add or push sbb sub cmp dec push push pop pusha add imul addb movsl stos scas mov mov flds loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs add add jp test movsb stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul add mov test ret enter fucom call add or pop add cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli add sbb and inc inc dec dec push pop pop fs je jg add test mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov add xchg cwtl sahf mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push add imul mov add add mov rcr fucom call add or daa sub aaa cmp inc dec push add bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov add test mov mov xlat fucom call add or pop sbb daa sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor cmp pop pop bound jb jge xchg lods mov mov rol rcl fndisi(8087 out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge mov mov add mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound jb jl xchg lods mov mov rolb add add fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov rcl fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp add out repnz add or pop sbb es aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out add icebp idiv add or push sbb sub xor push push pop pusha imul jg mov stos scas mov mov (bad) jecxz out repz incb or push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp testb add cld add add daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add add or push sbb and inc inc dec dec push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb daa sub cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or add add sbb cmp push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock cli incl add pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp push adc push and sub xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and add add xor ds dec dec push pop pop arpl jae jge orl test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub add add inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc add push pop pop gs je jg mov test mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg lods mov add xlat fucom out repnz add or pop sbb es cmp dec add pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop add add push je jg mov test ret leave into aam fsubp jmp add push adc sbb cmp push pop bound jno jl xchg stos mov mov aad loopne jmp cmc add add or push sbb sub cmp dec push push pop pusha add add push je jg mov test ret leave into rcr fsubp jmp incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs add test movsb test ret enter fucom call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle add orl test mov mov xlat fsub out icebp idiv add or pop sbb es add cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and das add dec push pop pop imul add mov test ret enter fucom out repnz add or pop sbb aaa cmp inc dec push push pop popa imul addl mov rol iret aad (bad) ljmp push adc pop and das xor ds dec dec push pop pop arpl jae jge mov add add mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound add jle mov add mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jbe addl mov rol rcl fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test add (bad) int3 rcl fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or sub dec dec push push pop bound jb jl xchg stos mov add aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov add enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb add rol rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop pop fs je jle mov test mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov add add aam (bad) jmp add push adc push and xor cmp push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fadds add fucom add out repz incb or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne out lock add or adc xor dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fldl add add call add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out add idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add or and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add sti add or adc sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa insb jno jl xchg ror xlat fsubp ljmp push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom call add or daa sub add aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov rcl fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor add add dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp add pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push add das xor dec push pop add imul mov mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pop gs add add add add jp test movsb test ret leave into rcr fsubp call add or daa sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and inc inc dec dec push pop pop gs je add jg mov test (bad) leave into rcr fsubp jmp add push adc sbb cmp inc dec dec push add arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add mov stos mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop gs je jg mov test ret enter fsubp call add or daa sub inc dec push push pop bound jno jl xchg fwait mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop bound jb jl xchg add add mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop arpl je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov add mov rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov rcr fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test add mov fcomp jecxz in repnz std add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov add add iret aam fsubp jmp add or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov add add fcmovu in out hlt stc incb add pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom add add in icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb sub add inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp add add incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl add test mov mov xlat fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add add add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc add push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp push pop bound jno jl xchg add lret rcl fneni(8087 out lock sti add add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub add cmp dec push push pop pusha gs je jg mov test ret enter fldl jecxz out repz incb or sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor add add pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and das xor ds add add dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out lock add sbb sub cmp dec add add add add pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub ss inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or daa sub ss inc dec push push add imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa add data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl add outsb jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop fs je add jns test mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop imul test mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addl add add movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jnp xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg add xchg pushf mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov add add mov rcl fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha imul jg mov stos scas add rcr fsubp call incb or adc sbb cmp push pop popa insb jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop bound jb jge xchg lods mov mov add (bad) int3 rcl fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fsub out lock add or adc add cmp dec push push pop pop gs je jg mov test ret enter into rcr fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fsubp call add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter add add fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fiadd add jecxz out repz incb or daa sub inc dec push push pop popa add jno jl xchg cmpsb stos mov mov aam (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) add out hlt cli incl unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp add add cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop arpl jae jge mov mov mov xlat fsub out icebp testb add add add or push sbb sub xor push push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or add pop sbb daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter (bad) in out repz incb or sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc add sbb cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or add daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp or adc pop and sub xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das add dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor add add dec dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb es cmp add add push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec add add pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or sub inc dec push push add insb jno js (bad) xchg lods mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor cmp pop pop add add insb jb jl xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl add js (bad) xchg cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul lea add enter fucom call add or pop sbb es cmp dec push push pop pusha gs add add add jne jg mov test (bad) leave into aam fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa imul add lcall mov (bad) in out repz incb or adc sbb aaa cmp push pop popa imul addb movsl stos mov mov aam (bad) jmp add or sub inc dec push push pop popa data16 jno jnp xchg add add movsl stos mov mov aam fild in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov xchg xchg pushf mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea add mov ret rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push add daa sub aaa cmp inc dec push push pop pusha imul addb add (bad) leave into aam fsubp jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb or adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos add lret (bad) in out hlt stc incb push adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov add aad loopne jmp cmc cli add pop and das xor ds dec dec add imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov test mov mov add ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter add into rcr fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa imul addb mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc pop and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad add add in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in jmp cmc cli incl pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add add or pop sbb es ss inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb add push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add unpckhps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push add sbb and inc inc dec dec push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub xor cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or adc sbb and sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and add add xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc xor cmp inc dec dec push pop pop add jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc inc dec push push pop pusha imul addb and inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc pop and aas inc dec dec push pop pop imul mov scas mov mov add add add fsubp call add or sub das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz call add or sub xor ds dec dec push pop pop imul mov mov vpxor add adc push es dec push pop insw je (bad) mov mov (bad) into aam (bad) jmp add push adc pop and aas inc dec dec push pop pop gs je add add test movsl stos scas mov mov fnop in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam loopne ljmp or push sbb sub cmp dec push push pop pusha gs jne jg stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb add or adc push and sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or add add sbb es cmp dec push push pop pusha imul addb movsl add vaddsubps fnop in out cmc cli incl unpcklps pop and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub call or adc push and add xor aas inc dec dec push pop pusha outsb je jle mov mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub add push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz in repnz add add push adc sbb aaa cmp dec push push pop popa imul addb movsl stos mov mov aam fsubp jmp add or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push add push pop pusha imul addb movsb test (bad) leave into aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop add pusha imul jg mov test (bad) leave into rcr fucom call add or pop sbb es xor cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha add jo jp test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl add outsb jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) ljmp push adc push and sub inc dec push push pop add insl add add jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps pop and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg test mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jb jge xchg xchg pushf mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul jg mov test ret enter fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov add mov rcl fsub out lock add and aas inc dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) jmp add or sub inc dec push push pop popa imul addb add add mov rcl fucom out icebp idiv add or push sbb and aas inc dec mov lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp adc das xor dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock add sti add and aas inc dec dec push pop pop gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb add add es ss inc dec push push pop popa imul addb mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub add cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop gs jne jg mov test (bad) lret fcmovu in out hlt stc incl unpcklps push and cs add add add add add push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov add fsubp jmp add push adc push and xor cmp add add pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc das xor dec push pop pop fs je add jp test movsb test (bad) leave iret aam fsubp jmp add unpcklps pop add inc inc dec dec push pop pop gs jne jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge add mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul mov add add mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa add ja (bad) xchg add cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop imul mov mov add add add add rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub inc dec push pop pop arpl jb jge mov cmpsl lods mov mov add rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insl jb jl xchg lods mov mov xlat add fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 out add add idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad loopne ljmp add push or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad loopne ljmp adc adc das xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret (bad) in out hlt stc incl push adc push and sub xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec add imul mov mov mov (bad) in out hlt stc incb push adc push and cs add ds dec dec push pop pop arpl jae jle mov test rol rcl fneni(8087 in icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub dec dec push push pop bound add insl jb jge xchg add enter fucom out repnz add or pop sbb aaa cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and sub cmp dec push push pop pusha imul add jp test movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jno jl xchg add lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out add cli add pop and inc inc dec push push pop pusha gs jne jg mov add lcall mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test add mov fcomp jecxz out repz incb or adc sbb cmp ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jno jge xchg lods mov mov int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test ret leave into rcr add fsubp call add or sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov lods mov mov (bad) fsub out add icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz add add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or add push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam (bad) jmp add push adc add add and xor ds dec dec push pop pop arpl jae jle sti add or push sbb sub xor push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb and aas inc dec dec push pop pusha gs jne jg mov add add ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge add mov add enter fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addl mov mov fcmovu in out hlt stc incb push adc push and sub dec dec push push pop bound jb jge xchg cmpsl lods mov add mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov add iret aad (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov rcl fndisi(8087 out lock cli add pop and xor ds dec dec push pop pop bound jno jl xchg cmpsb stos mov mov add aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov fcomp jecxz in repnz add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov add xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov fadds fsubp call incb or daa sub ss inc dec push push pop pusha gs je jg mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fildl add loopne ljmp unpcklps push and xor cmp pop pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub ss inc dec push push pop pusha gs jne jg mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov aad loopne ljmp push adc add and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) add out hlt stc incb push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test (bad) leave into rcr fsubp call add or pop sbb es cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out add idiv add or adc das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repz add clc std add or pop sbb sub cmp add push pop pusha gs jne jg mov test ret rcr fucom out repnz add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock add incl unpcklps pop and xor cmp push pop bound jno jnp xchg movsl stos scas mov mov (bad) in out repz std add or daa sub ss inc dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add add push or adc das xor aas inc dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp unpcklps push and xor cmp push pop popa insb jno ja (bad) xchg stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test mov mov xlat fucom out repnz add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli incl add unpcklps push and xor ds dec dec push pop pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test ret rcl fsub out repnz add or add adc sbb sub xor dec push pop pop imul lea test mov mov loop in repnz add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb add and aas inc dec dec push pop pop imul mov lods mov mov (bad) fsub out lock add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock cli add and sub xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpckhps pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad add out lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in out cmc cli incl unpcklps pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp inc dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or sub add dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp add push push pop popa insb jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 or push sbb sub add cmp inc dec push push pop popa insb jno add add mov stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pop fs je jg add test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jb jge mov lea lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push push pop bound push orl cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg xchg xchg pushf mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or es cmp dec push push pop pusha gs je jg mov add cltd sahf movsb test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli add pop and xor ds dec dec push pop pop bound jb jl xchg add mov rol rcl fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop popa imul addb add add movsl stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop imul lea add (bad) int3 rcl fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods add mov mov (bad) fneni(8087 out lock cli add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa imul addb movsl stos scas mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov ret rcl fsub out icebp add std add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test mov mov fcomp loop in repnz add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov add (bad) int3 rcl fsub out lock add pop and das xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov add iret aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb add cmp pop pop bound jb jl xchg lods mov mov (bad) fildl loopne jmp idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne addb movsb test (bad) leave into rcr fsubp call add add repz incb or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add or adc xor dec push pop pop imul test movsb test (bad) leave into rcr fsubp call add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or add add sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas add rcl fneni(8087 in lock cli add and add inc inc dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub add add cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or sub inc dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock add add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out lock add pop and das xor ds dec add dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and cs ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push add add bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jl xchg movsl stos mov mov aam fsubp jmp add or daa add dec dec push push add insb jno jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa imul addl mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop popa add imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp call add or pop sbb daa sub cmp dec push push pop pusha gs outsl jne jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop add imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul add jne addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs je jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pop fs je add mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge add add sahf mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop arpl jae jge mov add lea lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg xchg fwait mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov rcl fneni(8087 in out cmc cli incl unpcklps push and sub inc dec push push pop popa insb jno jnp xchg add add mov mov (bad) jecxz out repz std add or es cmp dec push push pop pop gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov add add mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul cltd sahf mov add add add mov rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov enter fucom call add push adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat add fucom out repnz add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec add pop arpl jae jle mov test mov mov fcomp jecxz add add repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or add add sbb aaa cmp pop pop bound jb jge mov mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop add add aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das add aas inc dec dec push pop pop arpl je jle mov test mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu add ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec add dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push add imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop add aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa add imul addl mov rol rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno add jbe addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa add jb jl (bad) xchg lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret leave into aam fsubp jmp add push adc sbb cmp push pop bound jb jl xchg add add lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addl mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov add ret rcl fucom out repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl add stos mov mov aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov add add add mov aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test les add into aam fsubp add out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov add fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) add add add jmp add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz add out repz incb or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop add jbe addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add add das xor dec push pop pop imul mov mov mov fcomp loop in repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb sub inc dec push push pop popa insb jno jl xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov add ret enter fucom out repnz add or pop sbb add add cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor cmp inc dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) add ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec add pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub cmp dec push push pop pusha imul addb movsb test (bad) leave iret aam fsubp jmp add or sub inc dec push push pop popa data16 jno jnp xchg mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr (bad) jmp add push adc push and add xor aas inc dec dec push pop pop imul add test movsb test ret enter fsubp jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge add popf mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb add stos scas mov mov (bad) jecxz out repz incb or adc sbb aaa cmp push pop popa add ja (bad) xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop imul lea add mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb add mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov test add scas mov mov fcomp jecxz in repnz std add or sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov add add fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov add iret aam (bad) jmp add push adc sbb cmp pop pop bound jb jl xchg stos mov mov aad loopne out icebp idiv add or adc xor push push pop pop gs je jg mov test ret enter rcr fucom call add or pop sbb daa sub cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop bound jb jl xchg stos mov mov aad add add in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out add add repnz add or push sbb and sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) jmp add push adc push and sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cmc cli add pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push add push (bad) xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add add adc das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov scas mov mov xlat fucom out repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea mov mov fcomp loop in repnz add or pop sbb add daa sub ss inc dec push push pop popa insb jno jl xchg cmpsb lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb sub add push push pop pop fs je jle mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and add add inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds add add push pop pop bound jb jge xchg stos mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and xor ds dec dec add add pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aam (bad) ljmp push adc push and sub dec dec push push pop popa insb jno jnp xchg movsl stos mov mov aam fsubp jmp add push adc sbb cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out hlt stc incb or adc sbb aaa cmp push pop popa add imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom call add or daa sub aaa cmp inc dec push push pop pusha imul add jo jp test movsb test ret enter fucom call add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb sub cmp dec push push pop pop gs je add add test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out lock add or adc das xor aas inc dec dec push pop pop arpl jae jge orl cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and aas inc dec dec push pop pop arpl jae jge mov lea lods mov mov (bad) fndisi(8087 out lock sti add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop arpl jae jge mov cwtl popf mov mov (bad) fndisi(8087 out lock sti add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov add add mov (bad) fneni(8087 in lock cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg add add vaddsubps fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov add add iret aam (bad) jmp add push adc sbb aaa cmp push pop popa insb jno jl xchg movsl mov rol rcl fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov add rcl fsub out icebp idiv add or adc xor dec push pop pop gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha imul jg mov test ret leave into roll fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) add in out repz incb or adc sbb aaa cmp push pop popa data16 jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp out cmc cli incl unpcklps pop and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock add cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) jmp add add add add push adc push and sub inc dec push push pop popa imul addb movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz in repz std add add add daa sub ss inc dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pop gs je jle mov test ret enter fucom out icebp idiv add or add sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add add add and cs ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc sbb sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub add aaa cmp inc dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb sub add add cmp dec push push pop pop fs je jle mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add pop and das xor add inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc incb or adc sbb cmp add push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz out repz std add or daa sub aaa cmp inc dec push push pop add pusha imul addb movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom call add or daa sub cmp dec push push pop pusha add push jne jg mov test mov mov xlat fsub out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out lock add or push sbb and aas inc dec dec push pop pop arpl add jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jb jge xchg lods mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb add mov stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge add mov mov (bad) fndisi(8087 out lock add and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add sbb and das xor ds dec dec push pop pop arpl jae jge mov add mov mov xlat fsub out icebp add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov fsubp call add push adc sbb cmp pop pop bound jb jge xchg lods mov mov add add int3 rcl fndisi(8087 out lock add and aas inc dec push push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov add aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) add jmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul (bad) xchg cltd lahf movsb test ret leave into rcr fsubp call add repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add pop or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg cmpsb stos mov mov aad loopne ljmp add adc das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc add add and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa add inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul lea lods mov mov fcomp loop in repnz add or pop sbb es add add inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push add push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repz std add or daa sub aaa cmp inc dec push push pop popa add jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop pusha imul add addb movsl stos scas mov mov (bad) in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg add add lahf movsb stos scas mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop fs je jg mov add mov mov fcomp jecxz in repz std add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop pop imul mov mov mov xlat fucom out repnz add or pop sbb es aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods add mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jl xchg lods mov mov add rol rcl fndisi(8087 out icebp idiv add or adc xor push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg stos mov mov rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad add (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in add add repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fucom call add add add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) jmp add push adc push and xor cmp push pop bound jb jl xchg lods mov mov aad loopne jmp cmc cli add or adc pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or add sbb aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb add add sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub add cmp dec push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out lock add or adc xor inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec add pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop add add insl jb jl xchg lods mov mov (bad) fneni(8087 in lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repz std add or xor cmp push pop popa insb jno jl xchg stos mov mov aad loopne ljmp adc xor dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb mov stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov add lcall mov (bad) jecxz out repz std add or sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov add ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jb jl xchg stos mov mov rol rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov add leave into aam fsubp jmp add push adc sbb aaa cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov rcl fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push push pop arpl jb jge xchg lods mov mov (bad) fildl loope jmp idiv add or adc xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne ljmp add lock cli incl pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add std add or daa sub inc dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add add sbb and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and sub xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor add ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and pop pusha imul addb movsl stos scas mov ror xlat (bad) in cmc std add adc and xor ds dec push pop gs je orl add popf mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test add lods mov mov xlat fsub out icebp idiv add or push sbb sub add cmp push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs aas inc dec dec push pop pop arpl jae jle mov test mov add mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) lret rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov (bad) fsub out lock sti add pop and cs ds dec dec push pop pop arpl add orl cmpsl lods mov mov add rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop fs je jg mov test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge pushf mov mov xlat fsub out icebp testb add cld add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp add unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add add adc push and add add xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov (bad) fneni(8087 in lock sti add and add cmp dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom call add or daa sub aaa cmp inc add pop popa insb jno jl xchg stos mov mov aad loopne jmp idiv add or adc xor dec add pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz incb or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha add add add jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul add add test mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp add mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub dec dec push push pop bound jb jl xchg xchg pushf mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad add out lock sti add and aas inc dec push push pop pusha gs jne jg mov add (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov add rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov add add int fcomp loop in repnz add or pop sbb add sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg test mov mov xlat fsub add add in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or adc xor push push pop pop gs jo jnp xchg cmpsb stos mov mov aad loopne ljmp add cmc cli add pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli incl adc pop and das xor aas inc dec dec push pop pop imul mov scas add aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or add add daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and add xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add add or pop sbb es ss inc inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor cmp add pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add push adc push and xor add push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub dec dec push push pop bound add add jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg add add movsb test ret leave into rcr fsubp call add push adc sbb cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 jno jnp xchg mov add lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl je jle mov add add mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas add iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg test mov mov add ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov rcr add loop in repnz add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pop fs je jg mov test mov mov fcomp loop out repnz add or push add daa sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add clc std add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fsubp call add or pop sbb daa sub cmp dec add pop popa data16 jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc add add push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out hlt stc incb add or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push add push and xor cmp push pop bound jb jl add mov mov (bad) fneni(8087 in lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpckhps add sbb and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp unpcklps pop add and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov add fneni(8087 in lock cli add pop and sub xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp push adc push and add xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc push and sub add add push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp incl push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor add inc dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc sbb cmp push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pop imul mov lods mov mov (bad) fsub out lock add add and inc inc dec add add pop pop imul mov lods mov mov (bad) fneni(8087 out lock cli incl pop and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp push adc push and xor cmp add bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop add insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec add pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or sub inc dec push push pop popa add jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul add add jnp test movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb es cmp dec push push pop pusha imul addb movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pop fs jne add add add lahf movsb stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs jne addb movsb test ret leave into rcr fucom call add or pop sbb es cmp dec push push pop pusha gs jne add jg mov test ret enter fucom out repnz or push sbb sub cmp dec push push pop pop gs je jg mov test ret leave into rcr fucom call add or daa sub ss inc dec push push pop pusha imul jg mov add xchg lcall mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg pushf mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul lea add test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov add add mov mov fcmovu in out hlt stc add add pop and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov add mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret add leave into rcr fucom call add or daa sub cmp dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or daa sub add cmp push pop popa insb jno jnp xchg movsl stos mov mov iret aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) add add loope jmp idiv add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out icebp idiv add and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub add add in repnz add or push sbb sub cmp dec push push pop pop gs jo jnp test movsl stos scas mov mov (bad) jecxz out hlt stc incb or adc sbb cmp push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add out hlt stc incl push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp cli incl pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov test ret enter fucom out repnz add pop or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or pop sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc add add push and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fildl loope in icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb add and inc inc dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and sub xor push push pop pop fs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fucom out repnz add or add sbb daa sub xor cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub add cmp dec push push pop pusha imul addb movsb test ret enter fucom call add or pop sbb es cmp dec push push pop pusha imul jg mov test ret leave into rcr fucom call add or pop sbb es cmp add push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or pop sbb daa sub cmp add pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa imul addl mov mov (bad) jecxz out repz std add or daa sub inc dec push add popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul add fwait mov mov aam fucomip hlt stc incb push adc push and sub inc dec push push pop bound jno jl xchg cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop imul add jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor cmp inc dec push push pop pusha imul jp test movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam fsubp jmp add push adc and aas inc dec dec push pop pop imul add mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov add xchg cwtl sahf mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pop add jne addb movsb test (bad) leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha gs jne jg mov add cltd sahf movsb test ret enter fucom call add or push sbb sub xor push push pop popa imul addb movsl stos scas mov mov (bad) in out repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov movsb test ret enter fucom call add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub ss inc dec push push pop pusha imul addl mov rol rcl fcmovu in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp sbb and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov add rcl fndisi(8087 out lock add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat faddl jecxz in repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov aam fsubp jmp add push adc sbb cmp push pop popa insb jno jnp xchg movsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fiadd jecxz out repz incb or sub xor cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp add cmc cli incl pop and das xor aas inc add push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb add or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add add adc das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add or sub inc dec push push pop bound jb jge xchg mov mov fcomp loop in repnz std add or add daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and add xor dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc dec push push pop pusha imul addb cmpsb stos mov mov aad fndisi(8087 out lock add or adc xor push push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor inc inc dec push add add pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa add add jo jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or and xor cmp pop pop bound add jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha insl jb jl xchg lods mov mov xlat fsub out repnz add or push sbb and sub inc dec push push pop bound jno jl add addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov xchg xchg popf mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov add add (bad) leave iret aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop arpl push je jg mov test ret leave into rcr fsubp call add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov add enter fucom call add or sub inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jno jl xchg stos add int3 add add xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp add add call add or daa sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out add add add stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz add add push adc push and xor ds dec dec push pop pop arpl jle mov test mov mov xlat fucom out repnz add or add add pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fnop in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or add and sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and xor cmp pop pop bound jb jge xchg test mov mov xlat fsub out icebp idiv add or push sbb es add cmp dec push push pop pusha imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp add add push push pop popa imul ja (bad) xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov rol iret aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop add add je jle mov test mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add add jnp test movsl stos scas mov mov (bad) in out hlt stc incb push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov mov fcomp loop in repnz std add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb xchg lcall mov (bad) in out add cli incl pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec dec push pop pop fs je jg mov add xchg cltd sahf mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor cmp push pop bound jb jl xchg mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and add aas inc dec dec push pop pop imul mov add scas mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor cmp dec push push pop pusha gs jne jg mov stos scas mov add (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol add add aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov test (bad) leave into rcr fsubp jmp add or sub inc dec push pop pop bound jb jge xchg lods mov mov (bad) add add loope jmp idiv add or push sbb and inc inc dec dec push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out add add lock add or adc xor dec push pop pop fs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jge xchg cmpsl lods mov add xlat fucom out repnz add idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or pop sbb aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp or adc xor dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or add and sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) aam (bad) jmp add unpcklps pop and das xor add aas inc dec dec push pop pop imul mov scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec add add imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop add add add je jg mov test (bad) leave iret aam (bad) jmp add pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl pop and aas inc dec dec push pop pop gs jne add jp test movsl stos scas mov mov fcmovu in out hlt cli incl adc das xor dec push pop pop gs jne jg mov cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl add cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jb jge xchg add add popf mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test lods mov mov xlat fucom out out repz std add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor push push pop pusha gs jne jg mov stos scas mov add aam fsubp jmp add push adc push and sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov iret aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub xor cmp push pop bound jb jge xchg lods mov mov add fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fsub add out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test ret enter fucom call add std add or daa sub aaa cmp inc dec push push pop popa data16 jno ja (bad) xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp add unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc cli add add add das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov add fsub out repnz add or push sbb add and sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repz std add or daa sub cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc inc dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp incl unpcklps push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc add pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub inc dec push push add add insb jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out hlt stc incb push adc push and cs add push pop pop add add je jg mov test ret leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor cmp dec push push pop pusha gs jne add add jp test movsb stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb add add movsl stos mov mov aad (bad) ljmp unpcklps pop and cs aas inc dec dec push pop pop imul mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop arpl jb jge xchg add xchg popf mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop imul mov add ret enter fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test add mov iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb cmpsb stos mov mov add fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or and sub dec dec push pop pop bound jb jl xchg lods mov mov xlat faddl add out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in add add clc std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb add or sub inc dec push add arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fucomi lock cli add add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp cmc sti add pop and sub xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz incb or adc sbb cmp push pop bound jb jl xchg test mov mov xlat fsub out repnz add or daa sub add cmp inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push add add add add arpl jae jge mov cmpsl lods mov mov xlat fsub out in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pop add gs je jg mov test ret leave into rcr fsubp call add or daa sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor cmp inc dec push push pop popa insb jno jl add addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop fs je jle mov add mov lods mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pop gs jne jg mov add cltd lahf movsb test ret enter fucom call add or pop sbb es cmp dec push push pop pusha add jbe addl mov mov fcmovu in out hlt stc incb or adc push and sub inc dec push push pop popa data16 jno jl xchg mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg add add (bad) aad (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jge mov test mov add xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol lret rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov flds (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov add fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add cld add or pop sbb add sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in lock cli incl or adc das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop add sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc xor push push pop pop gs jo jnp test movsl stos mov mov aad (bad) ljmp unpckhps pop and add sub xor dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es add add add inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor aas inc add dec dec push pop pop arpl jae jge mov cmpsl lods add int3 rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec add push push pop pusha gs je jg mov test ret rcl fucom out icebp idiv add or push sbb sub xor push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub xor push push add pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom add out repz incb or daa sub inc dec push push pop add add insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or sub inc dec push push pop popa add add add jnp xchg movsl stos mov mov aam (bad) jmp add or sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam fsubp jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jno add addl mov mov (bad) in out repz incb or adc add and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jge add mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec add imul add test mov mov pop or push sbb sub xor pushf movsl lods mov cmp inc dec push pop popa push mov mov ret leave rcl fsubp in repz add push adc cmp inc dec push pop add jo jle mov mov ret xlat fsubp in repz add add or push sbb inc inc dec push pop bound ja test mov (bad) lret rcr loopne in hlt cli add push adc aaa ds dec push pop pusha outsb jne (bad) mov lods mov ret (bad) fucom jmp clc incl or cs pop pop insw je (bad) mov add add int fsub jmp or sbb daa cs inc dec dec push pop imul test mov ret lret fsubp in repnz add movhps aas inc dec push pop arpl jp xchg lods mov mov loop lock add adc push and inc dec push pop imul xchg mov mov jecxz icebp clc incl or xor cmp dec push pop arpl jns xchg mov mov jecxz repnz add movhps aas inc dec push pop arpl ja xchg mov (bad) lret rcr loope out idiv add add sbb daa cs pop pop data16 je jl mov mov ror aad loop lock add sub aaa ds dec push pop popa push mov mov (bad) lret rcr loopne out hlt sti add adc pop es push push pop gs jae (bad) mov mov roll add rcl (bad) in hlt sti add adc push es dec push pop imul mov mov ret xlat fsubp in repnz add or das xor pop pop insw je (bad) mov mov ret lret loopne out idiv add adc pop es dec push pop pop insw je add orl mov ret lret loopne in hlt sti add adc pop es dec push pop fs jae addb mov mov loop lock add sub ss pusha outsb add test sub aaa ds dec push pop bound ja test add mov vpaddq jecxz icebp clc incl or xor inc inc dec push pop arpl jns xchg mov rol (bad) fucom jmp cli add push adc cmp dec push pop gs jae orl lret loope out idiv add adc and das ss popa push add test into aad jecxz repnz add push push sbb inc cmpsb mov out testl cs pop popa push mov scas mov mov fcomp jecxz in repz std add or xor cmp inc dec push push pop pusha imul addb add add add mov stos scas mov mov (bad) in out repz incb or and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov xchg cwtl popf mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fucom call add or daa sub ss inc dec push push pop popa imul addb add add mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor add pop pusha gs jne jg mov add add add ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor cmp push pop bound jb jl xchg stos add add lret fcmovu in lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov add fsub out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov add add rcl fucom out repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg test movsl stos scas mov mov (bad) jecxz in repz incb or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov add mov (bad) jecxz in repz incb or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov add lret rcl fnop in out cmc cli incl or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or pop sbb es cmp dec push pop pop data16 jae orl mov aad fild add ljmp push adc push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp add add cli incl unpcklps push and cs aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub dec dec push pop add imul mov scas mov mov fcomp loop in repnz std add add add add pop or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock add or adc sbb daa sub ss inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne ljmp add unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb add sub cmp dec push push pop pusha gs jne addb mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and add xor ds dec dec add imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp jmp add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and cmp dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge xchg test mov mov xlat faddl jecxz in repz std add or sub add inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec add add pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop add gs je jg mov test (bad) leave iret aam (bad) jmp add push adc push add aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound add add jl xchg stos mov mov add fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 in lock add or push sbb sub cmp dec push push pop pusha imul add lcall mov fcmovu in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop pusha add jno jl xchg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or and sub dec dec push pop pop bound jb jge xchg add add mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov add add ret leave into rcr fsubp call add or sub xor cmp pop pop bound jb jge mov add ret enter fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov add add rcl fsub out icebp idiv add or push sbb sub cmp dec push push add insb jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop imul mov lods mov mov add ret enter fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop gs je jg mov test ret enter add fcomp loop jmp add or daa sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop arpl jb jge xchg mov mov add fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom out icebp idiv add or push sbb sub xor dec push pop pop fs jne jg mov test ret enter fldl add out repnz add or pop sbb es cmp dec push push pop pusha gs jne addb movsb test (bad) leave into rcr fsubp call add or and sub inc dec push push pop popa insb jno jl xchg stos mov mov aad (bad) add out hlt stc incl push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov rcl fndisi(8087 out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov scas mov mov xlat fsub out icebp testl add add add or push sbb sub xor add pop pusha imul jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz add incl push adc push and xor cmp push pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fndisi(8087 out lock sti add or adc das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fsub out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge test mov mov fcomp loop in repnz add or add add push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb es xor cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc incb push adc add push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add pop add aas inc dec dec push pop pop arpl jae jle mov test mov mov rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) in out repz incb or adc sbb sub inc dec push push pop popa add jb jl xchg stos mov mov aad loopne jmp cmc cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and add add xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call incb or adc sbb cmp add add push pop bound js test mov mov fcomp loop in repnz add or daa sub cmp dec push push pop pusha gs je jg mov movsb test ret leave into rcr fucom call add or es cmp add dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov aad loopne ljmp push adc push and xor cmp add push push pop bound jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or and sub inc dec push push pop popa data16 jno jnp test movsb stos scas mov mov fcomp jecxz in repnz add or push sbb daa sub cmp dec push add push pop pusha gs je jg mov test mov mov rcr fucom call add or push sbb es cmp dec push push pop pop gs je jle mov test mov mov xlat fsub out lock add pop and aas inc dec dec push add pop pop arpl jae jge xchg lods mov mov aad (bad) ljmp push adc push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz in repnz std add or pop sbb es ss inc add add imul addb movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz std add or daa sub aaa cmp push pop add add imul addb movsb test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound add insb jb jl xchg movsl stos mov mov aam fsubp jmp add or daa sub cmp dec push push pop pusha imul jnp xchg movsl stos scas mov mov (bad) jecxz in repnz std add or pop sbb sub cmp dec push push pop pusha add add add add je jg mov test mov mov xlat fsub out icebp idiv add add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp pop pop bound insl jb jl xchg stos mov mov aam fsubp jmp add or daa sub cmp dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add or adc das xor ds dec dec push pop pop arpl jae jge xchg mov mov (bad) fneni(8087 out lock cli add pop and xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aam (bad) jmp add or daa sub aaa cmp add push push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aam fsubp jmp add or daa sub cmp dec push push pop pusha imul jp test movsb test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov rcl fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jae add add xchg cmpsl lods mov unpckhps pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov add add fsub out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fldl loop in repnz add or push sbb sub xor dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) in add out repz incl push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in add out hlt stc incb push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out hlt stc incb or sub inc dec push push pop popa imul jl xchg movsl stos mov mov aam fsubp jmp add stc incb or adc sbb aaa cmp push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz add or add sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam fsubp jmp stc incb push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add or adc push and sub dec dec push push pop bound jno jl xchg movsl add into aad jecxz in repz std add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop add insl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fucom add out repz std add or add and sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa insb jno jl xchg mov mov (bad) fneni(8087 in lock cli incl pop and add cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out lock add or adc das add xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push add daa sub cmp dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub aaa add add inc dec push push pop popa imul addb movsl stos scas mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and cs add add dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec push push pop pop gs je jg mov test ret enter fucom call add or push sbb sub cmp dec dec push pop pop fs je adcb adc and cs pop popa imul cltd mov (bad) (bad) call unpckhps sbb sub aaa ds dec push pop arpl js xchg scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec add add pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in add cmc cli incl pop and das xor aas inc dec dec push pop add add imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb add jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop imul add test mov mov (bad) jecxz out repz incb or adc push and xor cmp inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov add add lods mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add mov fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge test mov add mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jb jge mov test mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) lret rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov add add fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov rcr fsubp call add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom add in repnz add or pop sbb daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt add incl unpcklps pop and cs aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add add or add sbb aaa cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp adc add sbb and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa add inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop add insb jno jnp xchg stos mov mov (bad) fneni(8087 out lock add and add inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop add imul mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push push pop bound add insl jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out add idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg add mov stos mov mov aad loopne jmp idiv add and inc inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov add add mov ret rcl fsub out repnz add or pop sbb aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add or push sbb and inc inc dec push push pop pusha gs jne jg mov test add add leave iret aam fsubp jmp add unpcklps push and cs cmp inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov add mov xlat fucom out repnz add or pop sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc xor dec push pop pop gs jne jg mov stos scas mov mov add aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge orl test mov mov fadds fucom call add or daa sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp add out hlt cli incl unpcklps pop and cs ds dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha data16 jno jnp xchg cmpsb stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or add pop and add xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub ss add inc inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec add push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or daa sub inc dec push push add push (bad) mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop add add imul addl mov rol rcl fndisi(8087 out lock add or adc xor push push pop pop gs je jg mov test (bad) leave into aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop imul add add add je jle mov test ret enter fucom jmp add push adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add add mov mov rol rcl fneni(8087 out lock sti add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov add add lods mov mov fcomp loop in repnz add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp jmp incl unpcklps push and das xor dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov vaddsubps fneni(8087 in lock sti add and aas inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add add fucom out repnz add or pop sbb daa sub add cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 add in lock cli add pop and aas inc dec dec push pop pop fs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jae jge mov test mov mov xlat fsub out icebp add add add cld add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov stos mov mov aad (bad) ljmp add add unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or add push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and add xor cmp pop pop bound jb jge mov cmpsl lods mov mov rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es add cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and sub add add add dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or adc sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop add imul mov scas mov mov fcomp jecxz in repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno add jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push add imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb (bad) xchg lcall mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub xor cmp pop pop bound jb jge mov add mov ret rcl fsub out icebp idiv add or pop sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb add add lret rcl fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pusha gs jne jg mov stos scas mov add add add add (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov add (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) in add cmc cli add pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov flds (bad) jmp add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or sub dec dec push push pop bound jb jge xchg test mov mov xlat fucom out add idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp add add pop and cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or add add pop sbb aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add and and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov stos scas mov mov fnop in lock cli incl pop and add add dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pop gs jne jg mov test (bad) leave add aad (bad) ljmp adc das xor dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc pop and das xor ds dec dec push pop pop add add imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps sbb and inc inc dec push push pop pusha gs jne addb add movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push pop pop bound jb jge mov popf mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos add mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop add jo jnp test movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs jne jg mov test add add (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov add (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov mov mov aad add in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out add add add idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and aas inc dec push pop popa push mov mov rol rcl fsub out icebp idiv add or push sbb add add daa cs pop pop insw je orl mov ret rcl fsub out icebp idiv add or push sbb daa sub add inc dec push push pop bound jb orl rol rcl fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop add arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop fs add jns test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub xor push push pop pusha gs jne add add add lahf movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul add add lcall mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave iret aam fsubp jmp add add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in add idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fsubp call add add add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor cmp pop pop bound jb jl xchg lods mov mov aad loopne jmp cmc cli incl unpcklps sbb and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov fcomp jecxz in repz std add or pop sbb es cmp dec push push pop pusha gs je jle mov test mov mov xlat fsub out icebp idiv add or adc and sub xor dec push pop pop imul mov lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and add xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push add bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and add add xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or sub cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp add inc dec push push pop pusha imul jg add movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop pusha imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb daa sub aaa cmp inc add add push pop pusha imul addb movsb test ret enter fucom call add or push sbb es cmp dec push push pop pusha gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jg mov test mov add fcomp loop in repnz add or push sbb sub cmp dec push push add pop pusha gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop add imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov ror fucom jmp add or sub inc dec push push pop bound jno jl addl mov rol rcl fnop in out cmc cli incl add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne addb mov test (bad) leave into aam fsubp call add or daa sub inc dec push push pop popa imul addl mov rol iret aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg xchg pushf mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov xlat fucom out repnz add or push sbb sub cmp inc inc dec push push pop popa imul addb add mov aad (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test add add (bad) int3 rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg cmpsb stos mov add (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae add mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov add add lret rcl fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) lret add aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov add flds add add in out repz incb or adc sbb cmp push pop bound jno jl xchg stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom call in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out icebp testb sti add or adc xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add add push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or add adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add and inc inc dec push push pop pop gs je jg mov test ret enter fucom call add or add add add add daa sub inc dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa add add add sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor add inc inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb add mov test mov mov xlat fsub out repnz add or push sbb sub cmp add add push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push add pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop add outsl jne jg mov test rol iret aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add add jnp xchg movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je add add mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 in lock sti add push or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov cltd sahf mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov add test mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec dec push pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jb jl xchg stos mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jle mov test mov mov add ret enter fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov test ret leave add into rcr fsubp jmp add or sub inc dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock add and aas inc dec dec push pop pop imul mov scas mov mov fadds add fucom call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop add repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp add sti add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or sub inc dec push push pop bound jno jl xchg stos mov mov fsubp jmp add add or daa sub inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add pop or add adc sbb sub cmp dec dec push pop pop imul mov lods mov mov (bad) fneni(8087 in lock cli incl push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam fsubp jmp add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add pop and das xor aas inc dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) jmp add push adc add aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom out icebp idiv add or push sbb and cmp dec push push pop pusha gs je jle mov test mov mov (bad) fndisi(8087 out lock cli add add and xor cmp pop pop bound jb jl xchg movsl stos mov mov aam fsubp call add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out lock add pop add add xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fsub out icebp idiv add or adc sub xor aas inc dec dec push add fs je jle mov test mov mov (bad) fneni(8087 out lock cli incl push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam fsubp jmp add or add add cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add pop and cs ds dec dec push pop pop arpl jb jl xchg stos mov mov aam (bad) jmp add or daa sub add add aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom out icebp idiv add or adc das xor dec push pop pop imul mov test mov mov (bad) fneni(8087 out lock cli incl push and add add add cmp push pop bound jb jl xchg movsl stos mov mov aam fsubp call add or pop sbb es cmp dec push push pop pop fs je jg mov test mov mov (bad) fsub out lock sti add pop and cs add ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test ret rcl fsub out icebp idiv add pop and das xor add ds dec dec push pop pop bound jb jge xchg add lret rcl fneni(8087 in out cmc cli incl push adc push and xor cmp push pop popa data16 jno jl xchg movsl stos scas mov mov (bad) jecxz in repz std add or pop sbb sub cmp add add dec dec push pop pop imul mov lods mov mov (bad) fneni(8087 out lock cli incl push and xor cmp push pop bound jno jl xchg stos mov mov aam fsubp jmp add or daa sub cmp add inc dec push push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov add fneni(8087 in lock cli incl unpcklps push and xor cmp add add push push pop bound jno jnp xchg movsl stos mov mov aam fsubp call add or es cmp dec push push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and das xor ds dec add dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcomp jecxz in repnz add or push sbb sub xor dec add imul lea lods mov mov (bad) fsub out lock sti add push or adc das xor dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp push adc push and sub inc dec push add add popa imul addb movsb stos scas mov mov fcomp jecxz in repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push add add insb jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or pop sbb es cmp dec push push pop pop imul mov lods mov mov xlat fsub out lock sti add pop and sub xor aas inc dec dec push pop add push (bad) xchg lods mov mov aad (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or adc das xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aam (bad) jmp add or sub cmp inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pop gs add test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop add imul addb movsb test (bad) leave into aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul add test movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jle mov add test (bad) leave into rcr fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg add pushf mov mov (bad) fneni(8087 in lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov add test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods add add int3 rcl fndisi(8087 out lock sti add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa imul addl mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov add rcl fneni(8087 in lock cli add sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov add add add fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov xlat fldl loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out add add icebp idiv add or adc xor push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov (bad) fsub out lock add sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp add add add push adc push and sub dec dec push push pop bound jb jl orl cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jge xchg stos mov mov fucom in repz add push adc add add push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jb jl xchg cmpsl lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and add sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz in repz std add or es xor cmp dec push push pop pop gs je jg mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor add aas inc dec dec push pop pop arpl jae jge mov mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli incl pop and xor add add inc dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov rol iret aam (bad) jmp add or daa sub inc dec push push pop pusha imul addb movsb test (bad) leave into aam fsubp call add or daa sub cmp dec push push pop pusha gs jne jg mov test mov mov aam fsubp call add or daa sub ss inc add push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub cmp dec dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec add push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push add add insb jno jl xchg movsl stos scas mov mov (bad) in out repz add add push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop add imul addb movsb test ret enter fsubp call add or pop sbb es cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop add add jae jle mov cmpsl lods mov mov (bad) fneni(8087 out lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg lods mov mov aad loopne ljmp unpcklps push and add xor aas inc dec dec push pop pop arpl outsb jae jge mov cmpsl lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop bound jno add jbe addl mov mov (bad) jecxz out repz incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsb test (bad) leave into rcr fsubp call add or daa sub cmp dec push push pop pusha gs jne add jg mov test ret enter fucom out icebp idiv add or push sbb sub cmp dec push push pop add imul jg mov test ret enter fucom call add or es cmp dec push push pop pusha gs je jg test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor inc dec push pop pop bound jb jge xchg add xchg pushf mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb add mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test add (bad) int xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat add loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb test add ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop gs je jg mov test mov mov int xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov (bad) fsub out icebp idiv add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add sbb and aas inc dec dec push pop pop arpl je jle mov test mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg stos mov mov aad fild add add ljmp push adc push and sub inc dec push push pop popa data16 jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop pop bound jb jl xchg stos mov mov aad (bad) add add out hlt stc incl push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add add or push sbb sub xor dec push pop pop imul mov test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add add push or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add add add adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add add adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov (bad) fneni(8087 in lock cli incl unpcklps add add add push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp push adc push add add sub xor cmp push pop bound jno jl xchg movsl stos mov mov aad fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov (bad) fneni(8087 in lock cli incl unpcklps push and add sub xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc incb or adc sbb add add aaa cmp inc dec push push pop popa imul addb movsb test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add add daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or daa sub ss inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb aaa cmp add dec push push pop popa imul addb lods mov mov xlat fucom out repnz add or sub inc dec push push pop popa insb jno jl mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop imul addl mov rol iret aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop add push jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor dec push pop pop fs je jg add mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb add xchg lcall mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add or sub dec dec push pop pop arpl jb jge xchg add mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov test add mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov add add (bad) lret rcl fneni(8087 in lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp pop pop bound jb jl xchg cmpsl lods mov mov add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp add loop in repnz add or pop sbb es xor cmp push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out add lock add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add add incb or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl outsb jae jle mov test mov mov fcomp loop in repnz add add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or add adc xor dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc add push and xor cmp pop pop bound jb jl xchg add int3 rcl fneni(8087 out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb add add aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb daa sub xor cmp inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) add ljmp unpcklps pop and das xor add ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or sub add inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp push adc pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and aas inc dec dec add imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add and inc inc dec dec push pop pop add imul mov scas mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push add push add jge xchg lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul add addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg add lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jle mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb add xchg fwait mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa insb jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge mov add add mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop imul mov scas mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov aad (bad) ljmp push adc push and xor cmp pop pop arpl jb jge xchg lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul mov scas mov mov rcl fucom out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa imul addb movsl stos mov mov add (bad) aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov ret leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop add in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne jmp idiv add and inc inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp jmp add add incb push adc push and xor ds dec dec push pop add imul mov mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz std add add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp adc add add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb add (bad) aad (bad) ljmp unpcklps pop and sub xor dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub add add add pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out add sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop add pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 add jno jl xchg cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor add inc dec dec push pop pop fs je add jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg add add lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov add mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl add mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul sti inc dec dec push pop insl jae add add xchg scas mov ret (bad) fsub ljmp xor aas inc dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jno jl xchg stos mov mov add add rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad fnop in lock add add or adc xor dec push pop pop fs je jg mov test ret leave into rcr fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 add jmp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp add sti add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc push and xor add inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add add pop or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or add adc sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add push adc add add aaa cmp pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out lock add or adc das xor aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out lock add pop and das xor add cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs add inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop arpl jae jge xchg lods mov mov rcl fsub out icebp idiv add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out lock add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec add push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad (bad) ljmp push adc push and sub inc dec push push add insb jno jl xchg movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb aaa cmp push pop popa imul addl mov mov (bad) in out hlt stc incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa add add insb jno jnp xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) jmp add push adc push and add xor ds dec dec push pop pop bound add add jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae add add mov cmpsl lods mov mov (bad) fsub out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge add add mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop add je jle mov test mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop imul add add test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov add add mov mov xlat fucom out repnz add or push sbb sub xor push push pop pop fs je jle mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov add lahf movsb test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into aam fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb add ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas add add rcr fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jl xchg movsl stos mov add add aam (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out hlt stc incb or adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov into aam fsubp call add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov add add aam (bad) jmp add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov add add fcmovu in out hlt cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad add in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and xor cmp inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp add out cmc cli incl unpcklps push and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb cmp push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz out repz add std add or daa sub aaa cmp inc dec push push pop popa data16 jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz add add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add add pop and ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add add or adc das xor aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock add adc das xor aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc add and aas inc dec dec push pop pop imul mov lods mov mov rcr fucom out repnz add or push sbb sub cmp dec push push pop pop gs jne jg mov test ret enter fucom call add or pop sbb add es cmp dec push push pop pusha gs jne addb movsb test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out repz incb or sub add add add aaa cmp inc dec push push pop popa imul addl mov mov fcmovu in out hlt stc incb or adc push and inc dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or and sub add dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec add add pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec add pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa add add jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl add add add jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into aam fsubp jmp add or sub inc dec push push pop popa data16 jno jnp add addl mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg add add movsb test ret leave into rcr fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg xchg pushf mov mov (bad) fndisi(8087 out lock add or push sbb and aas inc dec dec push pop pop fs je jle mov test mov mov rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg add mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add and sub xor push push pop pop fs je jg mov test scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa imul addb movsb test add mov rcr fucom call add or daa sub inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov add (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test ret add into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub add cmp push pop bound jno jl xchg movsl stos mov mov iret aam (bad) jmp add or daa sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov add fsubp call add or daa sub cmp dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or daa sub cmp dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa data16 jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and sub inc dec push pop pop bound jb jl xchg stos mov mov aad (bad) add out hlt stc incb push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aam (bad) jmp add push adc sbb cmp push pop bound jno jl xchg stos mov mov aad (bad) jmp add add stc incb or adc push and sub inc dec push push pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jl xchg mov mov (bad) fneni(8087 in lock add add incl push and xor ds dec dec push pop pop bound jae jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl add add unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jb jl mov scas mov mov (bad) in out hlt stc incb or adc sbb and xor ds dec dec push pop pop arpl jae jge mov test ret enter fiadd in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor add add inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub xor cmp add pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop add pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc xor push push pop pop gs jne jnp xchg movsl stos mov mov aad (bad) ljmp adc das xor dec push pop pop fs je add mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg add xchg xchg fwait mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and cs ds dec dec push pop pop arpl jae jle mov add mov rcr fsubp jmp add push adc sbb cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods add mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov scas mov mov add ret enter fucom call add or daa sub inc dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add add daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov add add (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fiadd add jmp add push adc push and xor cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp add idiv add or push sbb and inc inc dec push add popa imul addb cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb add add or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or add add sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop add das xor ds dec dec push pop pop imul mov lods mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es add add cmp dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp jmp add push adc push and xor cmp add add push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub add in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb es ss inc dec push add popa imul addl mov rol rcl fneni(8087 in lock sti add or adc xor push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb unpcklps pop and cs ds dec dec push pop pop arpl imul mov scas mov mov fcomp jecxz in repz std add or sub inc inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add push adc push and sub dec dec push push pop bound jno jl add add fwait mov mov aam (bad) jmp add push adc sbb cmp push pop bound jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop add je jle mov add lods mov mov (bad) fsub out lock sti add pop and xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb add add mov mov xlat fucom out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp push adc push and sub dec dec push push pop bound jno jnp xchg add add mov rcr fucom call add or push sbb sub xor push push pop pop imul mov cltd sahf movsb test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop imul mov test mov mov rcl fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound jb jl xchg stos mov mov ror aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov add add lret rcl fneni(8087 out lock sti add and inc inc dec dec push pop pop gs je addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov mov mov xlat faddl add add add loope in icebp idiv add or adc das xor dec push pop pop imul mov scas mov mov fcomp loop in (bad) or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add add push or push sbb and aas inc dec dec push pop pop add outsl je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add add add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov (bad) fneni(8087 in out cmc cli incl add unpcklps pop sub xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov mov mov fcomp loop in repnz add or pop add sub cmp dec push push pop pusha gs jne jg mov test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) in out repz incb or adc sbb add sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop bound jb jge xchg stos mov mov aad loopne ljmp unpckhps pop and das xor add add ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub xor inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec add push push pop pop gs je orb stos scas mov mov (bad) jecxz in repz std add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub inc dec push push pop popa data16 add add jnp xchg movsl stos mov mov aad (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov rol rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop imul orl test mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul add add test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb lcall mov (bad) jmp add or sub inc dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs jne addb movsb test ret enter fucom call add or sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov add leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha imul jg mov stos scas mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jnp xchg stos mov mov add lret fcmovu in out hlt stc incb or adc push and sub inc dec push push pop popa insb jno jnp xchg cmpsb stos mov mov aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov add rcl fneni(8087 in out cmc cli incl unpcklps push and xor aas dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad add loopne ljmp or adc das xor dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp pop sbb daa sub aaa cmp add push push pop bound jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound ja (bad) mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc add push pop pusha gs jne jg mov test ret leave into rcr fsubp jmp add add add add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp push pop popa insb jno jl (bad) xchg lods mov mov (bad) fneni(8087 out icebp idiv add or add adc xor dec push pop pop imul mov mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov aad (bad) ljmp push adc add and sub inc dec push push pop popa imul add fwait mov mov rcr fsubp call add or daa sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out lock add or adc add add and aas inc dec dec push pop pop arpl jb jge xchg stos add int3 rcl fneni(8087 out lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop pusha imul addb movsb add (bad) leave iret aam fsubp jmp add or add add sub inc dec push push pop popa imul addb movsb test ret leave into rcr fsubp call add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test mov mov xlat add loop in repnz add or push sbb daa sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and add add add ds dec dec push pop pop bound jb jl xchg stos mov mov add fneni(8087 out lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and xor add cmp push pop bound jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa add add inc dec push push pop popa imul addb movsb test (bad) leave into rcr fucom call add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add pop or pop sbb sub cmp add add dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov (bad) fsub out lock sti add pop and add add inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov aad loopne ljmp push adc push and sub inc add dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa add xor cmp pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop add insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push add add pusha imul addb movsb test ret leave into rcr fucom call add or push sbb sub xor dec push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push add imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl push and xor ds dec dec push pop pop add bound jb jl xchg lea lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound push (bad) xchg lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl add mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound add add ja (bad) xchg lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg cmpsb stos mov add fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound add jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa imul addb movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne jp test movsb test mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pop fs je add jg mov test mov mov xlat fucom add in repnz std add or pop sbb es cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in repnz add or push sbb and aas inc dec dec push pop pop imul add popf mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fildl loope in icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov cmpsl lods mov mov xlat fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov (bad) fneni(8087 in lock cli incl sbb and aas inc dec dec push pop pop arpl jae jge mov lea lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov (bad) fneni(8087 in out cmc cli incl unpcklps push and xor cmp push pop bound jno jl xchg xchg fwait mov mov aad (bad) ljmp add adc pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg add mov mov (bad) in out repz incb or daa sub inc dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb add lahf movsb test ret leave into rcr fucom call add or daa sub cmp dec push push pop pusha gs jne jg mov test mov mov xlat fsub out repnz add or push sbb sub xor dec push push pop pusha gs jne jg mov add mov xlat fsub out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out icebp idiv add or xor cmp pop pop bound jb js orl cmpsl lods add add int3 rcl fsub out icebp idiv add or push sbb es cmp dec push push pop pusha gs jne addb movsb test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov add (bad) lret rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov add add lret fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods add int xlat fucom out repnz add or push sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov add (bad) in out repz incb or sub xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs aas inc dec dec push pop pop arpl jae jle mov test add int fadds add fucom call add or pop sbb es ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in add add icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg movsl stos mov mov aad (bad) ljmp hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call incb or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad (bad) ljmp unpcklps push add aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add add add or pop sbb es cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop bound jno jl xchg lods mov mov aad loopne ljmp sldt adc pop add aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push add push (bad) xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop add imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub xor cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or sub inc dec push push pop popa data16 jno jnp xchg mov mov (bad) fneni(8087 out lock add and add cmp inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb test (bad) leave iret aam fsubp jmp add push adc sbb aaa cmp add add push push pop bound jno jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or pop sbb es cmp dec push push add add gs jne jg mov test (bad) leave into rcr fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov rcl fndisi(8087 out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incl or adc das xor aas inc dec dec push pop pop arpl outsb jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jno add add mov stos mov mov aad loopne ljmp or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb aaa cmp inc dec push push pop popa insw jne orl add test mov mov xlat fsub out icebp idiv add or push sbb es cmp add pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg add xchg pushf mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc add pop pop bound jb jge xchg add mov mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop bound jb jl add mov add (bad) int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov add add mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs jne jg add movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add int xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov add rcr fucom call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov mov mov aam add fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz add in repz std add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave iret aam (bad) jmp add stc incb or adc push and xor cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add pop or pop sbb daa sub cmp dec push push pop pusha imul addb movsb stos scas mov mov fcmovu in out hlt stc incb add add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp add unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp inc dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or add daa sub aaa cmp inc dec push push pop pusha imul jnp xchg movsl stos mov mov aam fsubp jmp add push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or add add add add sub inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop pusha imul jbe addl mov mov (bad) in out repz incb push adc push and add sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam fsubp jmp add push adc sbb cmp push pop popa imul addb add rol iret aad (bad) jmp add push adc push and sub xor cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or sub add cmp push pop bound jno jl xchg mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) ljmp push adc push and xor add inc dec dec push pop pop bound jb jl xchg stos mov mov add fsub out lock add pop and das xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli add pop and das xor aas inc add push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and cs ds dec dec push pop pop bound jb jl xchg stos mov mov rcl fneni(8087 out lock cli add pop and cs ds dec add pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad loopne ljmp or adc das xor aas inc dec dec add push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop add add imul lea lods mov mov (bad) fndisi(8087 out lock cli add push or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock cli add pop and add dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop add add add jae jle mov test mov mov (bad) fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out lock add pop and add xor dec push pop pop imul jns test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop add add add test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul add mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop add imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul orl test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea xchg cltd lahf movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pusha gs je jg add movsb test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov add stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa imul (bad) mov lods mov mov fcomp loop in repnz add or push sbb sub cmp dec dec push pop pop imul mov add mov mov rcr fsubp call add or daa sub ss inc dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp call add or pop sbb es cmp dec pop arpl jb jge xchg lods mov add mov rol rcl fneni(8087 out lock cli add push or push sbb and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb test add fcomp jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp push pop pop arpl jb jge xchg lods mov mov (bad) lret rcl fneni(8087 in lock add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das add cmp dec push push pop pop gs je jle mov test mov mov add rcl fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov test ret enter fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter add loop in repnz add or pop sbb es cmp dec push push pop pusha add jno jnp test movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) add jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb daa sub ss inc dec push push pop pusha imul jg mov add (bad) lret (bad) in add add out repz incb or sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa insb jno jl xchg mov mov aad loopne ljmp add add cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) add loope in icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add push or push sbb and aas inc dec push push pop pop fs je jle mov test mov mov rcr fucom call add or pop sbb es cmp dec push push pop pusha imul jg mov test ret enter fucom call add add add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub cmp dec push push pop pusha imul jg mov test ret leave into rcr fucom call add add daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add or sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam fsubp jmp incl push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc add and sub inc dec push push pop popa insb jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec dec push pop pop bound jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop add add cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and sub xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc add xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add and xor dec push pop pop arpl outsl je jg mov test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub add add inc dec push push add insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsl stos mov mov aam loopne lock add or push sbb es cmp add add push pop pusha imul addb movsb stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl add leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock cli add pop and das xor aas inc dec dec push pop pop imul jae jle mov test mov mov fcomp loop add hlt stc incb or adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fiaddl loopne ljmp adc das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg add mov stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jge mov add add mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps add and inc inc dec push push pop pop gs je jg mov add add ret leave into rcr fsubp call add or daa sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas add mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl outsl je jle mov test ret enter fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov rol rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop add imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov int fcomp loop in repnz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos add int3 rcl add fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jbe addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov movsb test (bad) leave into aam fsubp add jmp add push adc push and xor ds dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fneni(8087 out lock add add add or adc xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out add cli add pop and aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb add or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom add out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or add push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb add add sub add cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and sub add xor dec push pop pop fs je jg mov test ret leave into rcr fsubp jmp add push adc sbb cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss add inc inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jp test movsb stos scas mov mov (bad) in out hlt stc incl unpcklps pop and cs ds dec add pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound outsb jae jle mov test mov mov fcomp loop in repnz add or pop sbb aaa cmp inc dec push push add insb jno jl xchg stos mov mov aad loopne jmp cmc cli add and inc inc dec dec push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add or sub xor ds dec dec push pop pop arpl add js (bad) xchg cmpsl lods mov add fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul jp test movsl stos add lret rcl fneni(8087 in lock cli add and inc inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fcmovu in out hlt cli add add and inc inc dec push push pop pusha imul addb add add mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov fcomp jecxz in add stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne addb movsb stos scas add aam fsubp jmp add push adc push and sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov add rol rcl fsub out icebp idiv add or push sbb sub add cmp inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov iret aam (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp add mov mov xlat add add add loope in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov rol rcl fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jp test movsb test (bad) lret fcmovu in jmp or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec dec push pop pop fs je jg mov test mov mov fcomp jecxz in repnz add pop or pop sbb daa sub cmp dec push push pop pusha imul addb movsb stos scas mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock sti add add adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov add xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add push add sbb cmp push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp or adc add add add sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out add idiv add or pop sbb and sub ss inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or sub add inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or adc sbb add ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock cli add pop and das add xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add and sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb es add add add add cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub add add push pop pop bound outsb jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push add push (bad) xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push add add add pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop add popa imul addl mov mov (bad) in out repz incb or sub inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl push orl cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul add je jle mov test mov mov add fsubp call add or daa sub ss inc dec push push pop pusha imul jg mov stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs jne add jp test movsb stos scas mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa insb jno jnp add addl mov rol rcl fcmovu in out hlt stc incb push adc push and sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp or adc pop and cs ds dec dec push pop pop arpl jb jge add add add mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock cld add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb sub xor push push pop pop fs je jg mov test mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg mov add cltd sahf mov mov fcomp jecxz in repnz std add or daa sub add push pop popa data16 jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg add add mov aam (bad) jmp add push adc sbb xor ds dec dec push pop arpl jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos add add lret fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha imul jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or daa sub ss inc dec push push pop popa data16 jl xchg stos mov mov add vaddsubps fnop in lock cli incl pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov add aam (bad) jmp add push adc pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fucom out repnz add or pop sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad add (bad) ljmp push adc push and cs ds dec dec push pop pop arpl jae jge xchg add ret rcl fucom out repnz add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub aaa cmp push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp unpcklps push and cs ds dec dec push pop pop imul mov lods mov mov fcomp loop jmp add or adc sbb cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp sldt add add push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es add cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp clc add insl je (bad) mov mov rol aam loop lock push movhps inc dec dec push pop gs jae addb mov mov loop icebp clc incl movhps inc dec push pop pusha outsl jbe test mov mov jecxz lock push or xor inc inc add add add add pop pusha insw jae addb scas mov (bad) int3 rcr loop icebp clc incl push adc cmp push pop pusha push add mov (bad) fsub jmp cli add adc and das aaa aas inc dec push pop gs je orl mov (bad) in cmc std add adc and add xor inc dec push push pop insw je (bad) mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop add fs je jg mov test (bad) leave into rcr fsubp jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa data16 add ja (bad) xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb ja (bad) xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jl (bad) xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg add int3 rcl fneni(8087 out icebp idiv add and aas inc dec dec push pop pop arpl jae jge add add mov mov (bad) fneni(8087 in lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop bound jb jl xchg xchg xchg pushf mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg cmpsb stos mov mov aad add out lock cli add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov jecxz idiv add or adc xor cmp dec push push pop pusha gs jne jg mov test add aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne addb movsb stos scas mov mov add leave into aam fsubp jmp add push adc push and sub dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub add cmp inc dec push push pop bound jb jl xchg lods mov mov add add add fndisi(8087 out lock add and aas inc dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub add in icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp add cld add or push sbb sub cmp dec push push pop pusha imul jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or adc sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov add fcomp loop in repnz add or pop add sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add add xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor add add inc inc dec push push pop pop gs je jg mov test (bad) leave into aam fsubp jmp incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp add add push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push add add pusha imul addb movsl stos mov mov aam (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb es cmp inc inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul jo jp test movsb stos scas mov mov (bad) jecxz out repz incb push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb add add movsl stos scas mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc pop and cs ds dec dec push pop pop arpl jb jge xchg add add mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb add add vaddsubps fnop in out cmc cli incl unpcklps pop and cs aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addb movsl stos add add lret fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock add add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov ret rcl fsub out icebp idiv add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg stos mov mov add add rcl fcmovu in out hlt stc incb push adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter add fcomp loop in repnz add or push sbb add ss inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov mov mov add xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad add loopne ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push add insb jno jl xchg stos mov mov aam fild add jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add in repnz add or pop sbb sub cmp dec push push pop pop fs je jle mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp add idiv add or adc das xor dec push pop pop imul add test ret enter fucom out repnz add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fsub out icebp testb add add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl add add add pop and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov xlat fsubp jmp add or add add sbb aaa cmp inc dec push push pop pusha gs jne jg mov test mov mov fcomp loop in icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov (bad) fneni(8087 in lock cli incl unpcklps add add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push add sub xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp or adc das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and add add cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) ljmp push adc push and sub add xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out hlt stc incb or adc sbb xor add add cmp pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out hlt stc incb or adc sbb aaa cmp add add dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz incb or daa sub aaa cmp inc add dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or daa sub ss inc dec push push pop add insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp add pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repz std add or pop sbb aaa cmp inc dec push push add imul addb movsb test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha add add add outsl je jg mov movsb stos scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 imul addb movsb test ret leave into rcr fucom call add or pop sbb es aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pusha gs add jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret add into rcr fsubp call add or daa sub ss inc dec push push pop pusha imul add test movsb test (bad) leave into rcr fsubp call add or pop sbb es cmp dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or pop sbb es cmp dec push push pop pusha imul jg test movsb test ret enter fucom out repnz add or push sbb sub xor push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec push push pop pop fs je jg mov mov lods mov mov xlat fsub out icebp testl adc sbb daa sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop popa imul addb add add scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg add mov aam (bad) jmp add or sub inc dec push push pop popa data16 jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb xor ds dec dec push pop pop bound jb jge xchg add cmpsb lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods add add lret rcl fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov add fsub out lock add pop and xor inc inc dec push push pop popa data16 add jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov add aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov fiaddl add in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test rol rcl fcmovu in add out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov fcmovu in out hlt add incl push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fsubp jmp add add add or sub inc dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 out icebp add cld add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add sldt add pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push add xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and add xor cmp inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add pop and das xor dec push pop pop imul mov stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec push push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs add add add jne jg mov stos scas mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs jne add jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov add test mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov add mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg add rol rcl fsub out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb lods mov add lret (bad) in hlt sti add adc pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out add add repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp testb add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl add or adc pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add add and sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or push sbb daa add aaa cmp inc inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pop gs je jg mov test ret enter fucom call add or daa sub add add cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas add add dec push pop pop imul mov scas mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul add fwait mov mov aam (bad) jmp add push adc push and xor cmp add pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push add fs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa add add jb jl xchg stos mov add fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop fs outsl jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or daa sub cmp dec push push pop pusha gs jne jp test movsl stos scas mov mov (bad) jecxz out repz incb or sub dec push pop popa imul addb cmpsb stos mov mov aad loopne ljmp or adc xor dec push pop pop gs je jg mov add add stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg add add mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb add movsb stos scas mov mov (bad) in out repz incb or daa sub add cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop pusha imul jg mov add add (bad) leave into rcr fsubp call add or pop sbb sub cmp dec push push pop pop gs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound push (bad) xchg stos mov add rcl fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jno jl xchg movsl stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test add mov (bad) jecxz in repz std add or pop sbb es cmp dec push push pop pop gs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge xchg cmpsb lods mov mov add (bad) lret rcl fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push push pop bound jno jl xchg mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa imul addb movsl stos scas mov mov add add into rcr fsubp call add or daa sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jb jge xchg stos mov mov add rcl fcmovu in out cmc cli incl unpcklps push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test mov mov add add fcomp loop in repnz std add or pop sbb es cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov aad add add (bad) ljmp push adc push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz incb or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) add call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom out add clc std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fsub add out icebp idiv add or push sbb sub cmp dec push push pop pop gs jne jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov (bad) fsub out add add idiv add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp push adc push and xor ds dec dec push push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz out repz add clc std add or and sub inc dec push push pop popa data16 jno jnp test movsb stos scas mov mov fcomp jecxz in repnz add or push sbb es cmp dec push push pop pop fs je jle mov test mov mov (bad) fndisi(8087 out lock sti add pop and ds dec dec push pop pop arpl jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsb test ret leave into rcr fucom call add add pop or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec add pop pop fs je jle mov test mov mov (bad) fndisi(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc sbb cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov fcomp jecxz in repnz add add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 in out cmc cli incl sldt add add push and xor cmp pop pop bound jb add xchg cmpsb lods mov mov aad (bad) ljmp push adc push and sub dec dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz in repnz std add or add add sbb sub cmp dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul lea lods mov mov aad loopne ljmp push adc add add and xor cmp pop pop bound jb jl xchg stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb add (bad) aam (bad) jmp add or add daa sub aaa cmp inc dec push push pop popa imul addb movsb test (bad) leave into rcr fucom call add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add pop and add sub xor ds dec dec push pop pop arpl jae jge xchg lods mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam fsubp call add or daa sub add cmp dec push push pop pusha gs jne jg mov test ret enter (bad) jecxz in repnz std add or pop sbb sub cmp dec push push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and das add add ds dec dec push pop pop bound jb jge xchg stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne addb movsb test ret enter fucom out icebp idiv add or push sbb and add add aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in out cmc cli incl push adc push and sub inc dec push push pop popa imul addl mov mov (bad) jecxz in repnz std add or daa sub aaa add cmp inc dec push push pop pusha imul addb movsb test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov (bad) fneni(8087 out lock cli incl push and xor add add dec push push pop bound jno jl xchg stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb and aas inc dec push pop pusha data16 jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and cmp dec push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push add imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop add add push je jg mov test (bad) leave into aam fsubp jmp add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je add add test movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg add add movsb test ret leave into aam fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov add add lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov (bad) jecxz out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg fwait mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs jne jg mov add test ret leave into rcr fsubp call add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp push pop bound jb jl xchg stos mov mov rol rcl fcmovu in out add sti add and aas inc dec dec push pop pop imul mov scas mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps and aas inc dec dec push pop pop imul mov lods mov mov int xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or adc sbb xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add add fndisi(8087 out lock add and inc inc dec dec push pop pop fs je jg mov test ret enter fucom out repnz add or pop sbb sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) add jmp add push adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop imul mov lods mov mov xlat fucom out add add idiv add or pop sbb es cmp dec push push pop popa imul ja addl mov rol rcl fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp testb add add add or adc das xor dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp or adc pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test mov (bad) in out repz incb or add add sbb aaa cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb add and sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and add add inc dec push push pop bound jno jl xchg lods mov mov aad loopne add icebp idiv add or adc das xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub add cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc inc dec push push pop popa data16 jno jnp xchg movsl stos mov ror rcl fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock cli add pop and sub xor aas inc dec add dec push pop pop arpl jae jge xchg lods mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push add push pop pusha imul jg mov test ret leave into rcr fucom call add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop add push (bad) xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push add popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha gs je jg mov test mov mov xlat fucom out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound add insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub ss inc dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl add js add popf mov mov (bad) fneni(8087 out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa imul add jo jnp test movsb test ret enter fucom call add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae js (bad) mov cmpsl lods mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jno jl xchg movsl stos add lret rcl fcmovu in out hlt cli incl unpcklps push and xor cmp push pop bound jno add jl xchg movsl stos mov mov aam fsubp jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or daa sub ss inc dec push push pop pusha gs jne jg add add movsb test ret enter fucom out icebp idiv add or pop sbb sub cmp dec dec push pop pop fs je jle mov test mov mov xlat fsub out lock add and aas inc dec dec push pop pop arpl jae jge mov add add cmpsl lods mov mov aad add out lock sti add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop bound jb jl xchg add stos mov mov aad (bad) jmp add push adc push and xor cmp push pop bound jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb cltd lahf movsb test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov (bad) fsub out lock add sbb sub xor dec push pop pop imul mov popf mov mov xlat fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in out cmc cli incl unpcklps push and cs ds dec dec push pop pop bound jb jl xchg cmpsb stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repnz std add or pop sbb sub ss inc dec push push pop pusha gs jne jg mov test add add enter fucom out icebp idiv add or push sbb and add dec pop jae jg mov test ret leave into aam fsubp jmp add or daa sub inc dec push push pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop arpl je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat faddl loope in icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov test mov mov xlat fsub out in icebp idiv add or adc das xor dec push pop pop arpl jae jle mov test mov mov (bad) fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add cmc sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg cmpsb stos mov mov aad (bad) ljmp add add push adc push and sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or adc sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop add xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa add sub aaa cmp inc dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp call add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov mov fcomp loop in repnz add or push sbb and add dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub add inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub xor add dec push pop pop imul mov lods mov mov (bad) fsub out icebp idiv add pop and ds dec dec push pop pop arpl jb jge xchg stos mov mov fsubp jmp add push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or pop sbb es ss inc dec push push pop pusha imul add add jnp test movsl stos scas mov mov (bad) in out repz incb push adc push and xor cmp push pop bound jb jl xchg lods mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul jle mov test mov mov xlat fsub out icebp idiv add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg add add mov stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor cmp dec push push pop pop gs jne jg mov cltd lahf movsb test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge mov add cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub dec dec push push pop bound jb jl xchg stos mov mov rol rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop popa imul addb movsl stos mov mov add add lret fcmovu in out hlt stc incl push adc push and xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test ret enter rcr fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) faddl add out icebp idiv add or adc xor dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne ljmp add lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call std add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add add add push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and sub xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add or sub add cmp push pop bound jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp add inc dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz std add or daa sub ss inc dec push push pop add pusha imul addb movsb test (bad) leave into rcr fsubp call add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound add add ja (bad) xchg lods mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc ss push pop bound jno jl add addl mov mov (bad) in out repz incb or xor dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp movhps and inc inc dec push push pop pusha gs jne jg mov add add ret enter fucom call add or push sbb sub ss inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or pop sbb daa sub ss inc dec push push pop popa imul addb movsb stos add leave into rcr fsubp call add or daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov aam fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp pop pop bound jb jl xchg stos mov mov add add lret fcmovu in out hlt stc incb push adc push and sub inc dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov add aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jge xchg lods mov mov aad add loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub add jmp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul (bad) xchg cltd sahf mov mov fcomp loop in add repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs je jg mov test ret enter fucom call add std add or pop sbb es cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz in repz std add add add or daa sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha imul jg mov stos scas mov mov (bad) jecxz out repz std add or add add sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc add and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and add add cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fndisi(8087 out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add and add add aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc xor add add inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub xor dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push add pusha gs je jg mov test ret enter fucom call add or daa sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop popa add add add jl xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps pop and xor ds dec dec push pop pop arpl jb js (bad) mov scas mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop arpl jae jle mov lea lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov add cltd sahf movsb test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop imul lea add mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl add (bad) int3 rcl fsub out icebp idiv add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jg mov test mov mov rcl fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop popa imul addb movsb stos scas mov mov add add leave into aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov add iret aam fsubp jmp add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov add (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub cmp dec push push pop pusha gs jne addb movsb test ret leave into rcr fiadd add add call add or pop sbb es cmp dec push push pop pusha gs jne addb movsb test ret leave into rcr fsubp call add or pop sbb daa sub ss inc dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz add in repz std add or daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp call clc std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or add sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam fsubp jmp add or and sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub cmp dec push push pop pusha gs jne jg mov test mov mov fcomp loop in repnz add or push sbb add add add xor cmp dec push push pop pop gs je jg mov test mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov mov fcomp loop in repnz add or pop sbb sub add cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor add add dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc add push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and das xor ds dec dec add push pop pop arpl jb jge xchg lods mov mov aad loopne jmp cmc cli add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor cmp push add add insb jno jl xchg movsl stos mov mov aam fsubp jmp add push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz incb or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl add insl jae jge xchg cmpsb lods mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa imul add add addb movsb stos scas mov mov fcomp jecxz in repz or sub inc dec push push pop popa insb jno jle lea mov loope icebp stc add movhps and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add add int3 rcl fndisi(8087 out lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov aad (bad) ljmp push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov into rcr fucom call add or push sbb sub xor dec push pop pop imul mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov add (bad) fneni(8087 out lock cli incl push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jno jnp test movsl stos scas mov mov fcomp jecxz in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl add (bad) int3 rcl add add loope in icebp idiv add or adc das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa data16 jno jl xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs je jg mov mov rol iret aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp add incl push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne add lock sti add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add add pop and cs ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp or adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push add sbb pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl add add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec add pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add and add das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das add add aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc das xor add add inc dec dec push pop pop imul mov test mov mov xlat fsub out repnz add or push sbb sub xor push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec add add pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov add fcomp loop in repnz add or pop sbb sub cmp dec push add pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb daa sub cmp dec push push pop add push jne jg mov test ret enter fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb es cmp dec push push pop pusha add add push je jg mov test mov mov xlat fsub out add idiv add or pop sbb daa sub ss inc dec push push pop pusha imul jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul add jnp test movsb stos scas mov mov (bad) jecxz in repz std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp push pop popa imul add jnp test movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or add sub dec dec push pop pop bound jb jl add addl mov rol rcl fnop in out hlt cli incl unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp push pop bound jno jl xchg add mov stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa data16 jno jnp xchg xchg fwait mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push add insb jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop bound jno jl xchg add mov rol iret aad (bad) jmp add push adc sbb aaa cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp or push sbb and aas inc dec dec push pop pop imul mov add lods mov mov (bad) fndisi(8087 out lock cli add pop and xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop popa imul addb mov add lret (bad) in out repz incb or daa sub inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or push sbb sub xor dec push pop pop imul mov lods mov add add rcl fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov add (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test add leave into aam fsubp call add or es cmp dec push push pop pop gs je jle mov test mov mov add enter fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov add lret fcmovu in out repz incb or daa sub inc dec push push pop pusha imul jg mov test ret leave into rcr fucom call add or push sbb sub xor dec push pop pop imul lea lods mov mov rcl fsub out add idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb sub xor push push pop pop fs je jg mov test mov mov fcomp loop in repnz add or push sbb add sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) in add jmp add or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) in out repz incb or sub inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out add hlt stc incb push adc push and sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp add incl unpcklps push and xor ds dec dec push pop add push orl cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fucom out repnz add or add pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub ss inc dec push push pop pusha imul jg mov movsl stos scas mov mov (bad) in out repz incb or adc add push and sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps push add and xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb daa sub add cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub add add dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push add add pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop add imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa add pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound add push (bad) xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs add add add add test mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop fs jne jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs add add jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jl add mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jge mov xchg cwtl popf mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov add leave into rcr fsubp call add or pop sbb es cmp dec push push pop pusha gs jne jg mov add mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb aaa cmp push pop popa imul addb add add add movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos add lret rcl fneni(8087 add jmp idiv add and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov rcr fucom out repnz add or sbb sub xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock cli add pop and das xor push pop pop gs je jle mov test mov mov rcl fsub out icebp idiv add or pop sbb es cmp dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb sub add cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam fild add add ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fucom call add repnz std add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add add and aas inc dec dec push pop pop imul mov test ret leave into rcr fucom call add or daa sub inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp add add push adc pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or add add sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods add int xlat fsub out icebp idiv add or push sbb add sub cmp dec push push pop pusha imul addb movsb test (bad) leave into aam fsubp jmp add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and add add xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub add add pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out add idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp add inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push add popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop imul add outsb jae jle mov test mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs jo jp test movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge add mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jl xchg add mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or push sbb es cmp dec push push pop pusha imul addb movsb stos add lret rcl fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jl xchg stos mov mov aad loopne jmp idiv add and aas inc dec dec push pop pop imul mov scas mov add fcomp jecxz in repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp or adc xor dec push pop pop imul mov mov mov add int fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad add add in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in repz cli add push adc and xor ds dec push add push jns xchg iret (bad) fucom jmp cli add adc pop and dec dec push pop insw jne add lods mov (bad) int3 aam jecxz icebp stc add movhps inc dec push pop arpl jp mov mov (bad) fnclex add add lock add daa das ss popa push lea mov (bad) (bad) call or sbb sub cmp inc dec push pop gs jne test mov loop icebp clc incl push push push es push pop popa push xchg stos add mov mov (bad) loope in repnz add or sub xor dec push pop pop imul mov mov mov loop icebp idiv add sub cmp dec push pop imul addb movsl stos mov mov aam (bad) jmp add cli incl and es aaa cmp dec push pop pop imul test test enter loop in repnz add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub add xor cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor inc inc dec push push pop pop gs je jg mov movsl stos mov mov aad (bad) jmp add push adc sbb cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor dec add dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat add loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor cmp pop pop bound jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb add add jge xchg cmpsl lods mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz add or daa add xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or sub dec dec push pop pop arpl jae jge mov add add ret rcl fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb push adc push and sub dec dec push push pop bound jb jl xchg stos mov add add rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs add addb movsl stos mov mov add mov fcmovu in out hlt stc incb unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov fneni(8087 in lock cli incl and aas inc dec dec push pop pop imul mov mov mov add fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor dec push pop pop imul mov mov mov fcomp add add add add call add or daa sub aaa cmp push pop bound jno jl xchg stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov (bad) fsub out add stc add or add sbb es ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add add or push sbb and inc inc dec dec push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add add adc das xor dec push pop pop gs je jg mov test ret enter fucom call add or sub aaa cmp inc dec push push add insb jb jl xchg stos mov mov aad loopne ljmp unpcklps add and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor add add aas inc dec dec push pop imul mov stos scas mov mov (bad) in out repz incb or sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb cmp add add push push pop popa insb jno jnp xchg cmpsb stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec add pop popa imul addb movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul orb stos scas mov rol rcl fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop add add imul mov scas mov mov fcomp in hlt sti add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock cli add pop and xor ds dec dec push pop pop bound add add jl xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom call add or push sbb sub xor dec push pop pop imul add add orl cmpsl lods mov ret rcl fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov add iret aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov add xchg cwtl popf mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov rcr fucom out repnz adc sbb cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov add ret rcl fucom out repnz add or push sbb sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov add add (bad) fsub out icebp idiv add or sbb and aas inc dec dec push pop pop fs je jle mov test ret enter fucom out repnz add or pop sbb daa sub ss inc inc dec push pop pop bound jb jl xchg lods mov mov (bad) fildl add loopne jmp cmc sti add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp push push pop pusha imul addb movsl stos scas mov mov (bad) in ljmp add add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz out repz incb or add add sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sbb aaa cmp inc dec push push pop popa imul xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and add xor dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa add add aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor add inc inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add or daa sub inc dec push push pop popa insb jno jl xchg mov mov (bad) fsub out icebp idiv add or adc xor add add pop pop imul mov test ret leave into aam fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into aam fsubp call add or daa sub inc dec push add add popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop add add je jle mov test mov mov fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb test mov (bad) in out hlt stc incb push adc push and sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb add mov stos mov mov aad (bad) jmp add push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp push push adc push and xor add push pop pop arpl jae jle add mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop pop imul mov add add mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop gs je jg mov add ret enter fucom call add or daa sub cmp push pop popa insb jno jl xchg mov lods mov mov (bad) fndisi(8087 call or adc push and sub inc dec push pop pop bound jb jl xchg stos mov mov rol iret aad (bad) jmp add push adc sbb aaa cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov leave into rcr fsubp call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pusha imul (bad) xchg cltd sahf mov mov aam fsubp jmp add or daa sub inc dec push push pop popa data16 jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fildl add out lock add or adc xor dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov mov fcmovu in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg mov mov (bad) fneni(8087 out lock sti add sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add add or pop sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add add adc sbb and inc inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add or sub inc dec push push pop bound jb jl xchg lods mov mov fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb add add add xor dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha imul jg mov test (bad) leave into aam fsubp call add or daa sub add aaa cmp inc dec push push pop pusha imul jg mov test ret enter fsubp call pop or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and sub inc dec dec push pop pop bound jb jl xchg lods mov mov aad loopne jmp idiv add pop and aas inc dec dec push pop pop imul mov test ret enter fucom out repnz std add or daa sub aaa cmp inc add add pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop sub xor aas inc dec dec push pop add imul lea lods mov mov (bad) fndisi(8087 out lock sti add or adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop add imul mov lods mov mov rcr fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul add jp test movsb test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push pop pusha imul addb movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop pusha imul jg mov test ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out add clc std add or daa sub inc dec push push pop popa insb jno jl add add mov mov aam (bad) jmp add push adc sbb cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl mov add xchg pushf mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound push (bad) mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg pushf mov mov aad (bad) ljmp push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or sub inc dec push push pop popa data16 jno jnp xchg add mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha imul addb mov add add leave into aam fsubp call add or daa sub cmp dec push push pop pusha imul addb movsb test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop imul mov lods mov add rcl fndisi(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp push pop popa imul addl mov mov (bad) call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol iret add fneni(8087 in out cmc cli incl unpcklps push and xor cmp push pop bound jno jl xchg stos mov mov add rcl fcmovu in out hlt stc incb push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov add fcmovu in out hlt stc incb or adc sbb cmp push pop popa insb jno jnp xchg cmpsb stos mov mov aam (bad) jmp add push sbb and sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov aad fild in out hlt stc incl push adc push and sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov rcl fndisi(8087 out jmp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add add idiv add pop and inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add pop or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pop gs jns mov mov ret fucom in hlt cld add unpcklps pop and ds dec dec add push pop pop arpl jbe test mov (bad) int3 rcr loope in repnz add or pop sbb daa sub inc dec push push pop popa insb jno jl mov mov mov xlat fsub out icebp idiv add or pop sbb sub cmp dec push push pop pusha imul jg mov add add scas mov mov loope jmp idiv add and aas inc dec dec push pop pop fs je jle mov test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs jns xchg add add aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test leave into aam fsubp jmp add or sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov add add aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fsub out icebp idiv add pop or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov add add fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov add loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop add add in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp add cld add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz push or pop sbb and sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz std add or add add sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor cmp dec push push pop pop fs je jg mov test mov mov xlat fucom out repnz add or push sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp inc dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor dec push pop pop imul mov test ret leave into rcr fsubp call add or daa sub aaa cmp add add pop data16 jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop bound add add jl xchg cmpsb stos add lret rcl fnop in out hlt cli incl push adc push and xor cmp pop pop bound jb jl xchg mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb add (bad) xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in out cmc cli incl unpcklps push and xor cmp push pop bound jb jl add pushf mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) add lock cli incl pop and cs ds dec dec push pop pop bound jae jge add add mov mov fneni(8087 out lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cwtl popf mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg mov mov (bad) fneni(8087 in lock cli incl unpcklps push add aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out cmc sti add pop and aas inc dec dec push pop pop insw je (bad) xchg lods mov add mov rol rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov movsl stos scas mov add fcmovu in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add add rcl fsub out icebp idiv add or push sbb xor push push pop pusha gs jne jg mov test ret leave iret aam fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad add in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) add loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push pop pop imul mov scas mov mov xlat fucom out repnz idiv add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop gs je jle mov test mov mov xlat fsub out icebp idiv add or add sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add add add pop or push sbb sub xor dec push pop pop fs je (bad) mov test mov mov xlat fsub out icebp idiv add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or add sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec add imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov (bad) in out repz incb or adc sbb add cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov add fneni(8087 in lock cli add pop and das xor add cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor add add inc dec dec push pop pop arpl jb jge xchg stos mov mov aad in add push adc sbb aaa cmp push pop popa data16 jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa add imul addb movsl stos scas mov mov (bad) jecxz out repz std add or and sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound add insb jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop add imul addb add add mov mov aam (bad) jmp add push adc sbb cmp push pop popa insb jno jnp xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg add xchg xchg pushf mov mov (bad) fndisi(8087 out lock add and inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov add add mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pop gs je jg mov movsb stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb or adc sbb cmp push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound ja addl mov add aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc add push pop popa data16 ja (bad) xchg stos mov add aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos scas mov mov add (bad) lret (bad) in out hlt stc incb or adc sbb aaa cmp push pop popa imul addb stos scas mov mov (bad) jecxz out hlt stc incb or adc sbb cmp push pop bound jno jl xchg movsl stos mov mov add add fcmovu in out hlt stc incl push adc push and xor cmp pop pop bound jb jl orl mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into roll add fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor cmp push pop bound jb jl xchg stos mov mov fcmovu in add add out hlt stc incb push adc pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop popa insb jno jl xchg stos mov mov rcl faddl loop in add repnz std add or daa sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp add pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp or adc sbb aaa cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc add add sbb aaa cmp inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp or adc sub xor dec push pop pusha gs je jg mov test ret enter fucom call add or pop add es cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and add add xor ds dec dec push pop pop bound ja test movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jl xchg cmpsl lods mov mov (bad) fsub out lock add and aas add add push pop pop imul mov mov mov fcomp loop in repnz std add or pop sbb daa sub ss inc dec push push pop pusha imul jg mov stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock cli add pop and xor ds dec dec push pop pop add bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa data16 add imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb aaa cmp push pop popa data16 jno add jbe addl mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge add mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop bound jb jl xchg add stos mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov fnop in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jge mov add mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jl xchg lods add mov mov (bad) fneni(8087 in lock add and aas inc dec dec push pop pop imul mov scas mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov add mov (bad) in hlt stc incb or adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into add add (bad) jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fiaddl (bad) ljmp unpcklps push and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop and sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pop gs je jg mov test ret enter fucom call add add pop or daa sub xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add add or pop sbb es cmp dec push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf mov mov fcomp jecxz in repnz std add or pop sbb daa sub aaa cmp inc dec push push pop popa imul jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and add das xor aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul test movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and sub add push push pop bound jno jl xchg cmpsb stos mov mov rol rcl fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc xor add dec push pop pop imul mov mov mov fsubp ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop add add add je jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul jae jle mov add ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fucom jmp add or daa sub inc dec push push pop popa imul add lcall mov fcomp jecxz out repz std add or daa sub ss inc dec push push pop pusha imul jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pop fs je jp add lahf movsb test ret leave into rcr fucom call add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter add jecxz in repz incb or daa sub inc dec push push pop popa imul addb mov stos scas mov mov fcomp jecxz in repz incb or sbb aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jb jge xchg mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov add aam fsubp jmp add or sub xor cmp pop pop bound jb jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fucom out repnz add or push sbb daa sub aaa inc dec dec push pop imul xchg mov mov rcl fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad (bad) ljmp push adc push and sub inc dec push pop pop bound jno jl xchg movsl stos mov mov aam add in out hlt stc incb or unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound add jge xchg cmpsl lods mov mov aad add in out cmc cli incl unpcklps push and xor ds dec dec push pop pop bound js orl cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec add pop popa data16 jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp testl add add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or sub inc dec push push pop bound jno jl xchg mov mov (bad) fneni(8087 in lock cli add add unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pop fs je jg mov movsl stos scas mov mov (bad) jecxz in repz std add or add add sbb daa sub ss inc dec push push pop pusha gs jne jg mov stos scas mov mov fcomp jecxz in repnz std add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb add add es cmp dec push push pop pusha gs jne jg mov test (bad) int (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in icebp idiv add or push sbb and add add xor dec push pop pop arpl jae jge mov cmpsl lods mov mov rcl fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and add add add add add cmp push pop bound jno jl xchg movsl stos scas mov mov (bad) in out repz std add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test mov mov fcomp loop in repnz add or pop sbb sub cmp add inc inc dec push push pop pusha gs jne jg mov test (bad) leave into aam (bad) jmp add push adc sbb aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp or push sbb and aas inc add add push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push add arpl jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop add add push je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop imul add orl test mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul jg mov test ret leave into rcr fucom call add or daa sub inc dec push push pop popa imul addb add add stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp pop pop bound jb jge xchg add mov aad loopne ljmp unpcklps pop and cs aas inc dec dec push pop pop imul xchg cwtl popf mov mov (bad) fndisi(8087 out lock add pop and cs ds dec dec push pop pop arpl jb jge xchg add vaddsubps fcmovu in out hlt stc incb push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub ss inc dec push push pop popa imul addb movsb test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec push push pop pop fs je jle mov test mov add ret rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov add iret aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl je jle mov test mov mov xlat add loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) call or adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out add add add stc incb or adc sbb cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr add in out hlt stc incb push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp add or adc xor ds dec dec push pop pop arpl jb jge xchg cmpsb lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push add and sub xor push push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc add add and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push pop pusha gs jne jg mov test (bad) leave into aam (bad) jmp add push adc push and xor add cmp inc dec dec push pop pop arpl jae jge mov test mov mov xlat fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop add jne jg mov test (bad) leave into aam fsubp jmp add unpcklps push and cs ds dec dec push add add pop pop arpl je (bad) xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 add jbe addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb add js (bad) xchg cmpsl add (bad) int xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop arpl jae jge add orl cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc sbb cmp push pop popa insb jno jnp xchg add add mov mov aad (bad) ljmp push adc sbb cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha imul jg mov add test ret enter loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa insb jno jnp xchg mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add fucom call add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg cmpsb add stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add adc sbb sub xor dec push pop pop fs jne jg mov test mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha gs jne addb movsb test ret leave into rcr fsubp call add or daa sub cmp dec push push pop pusha gs jne addb movsb test les add leave into rcr fsubp call add or and sub inc dec push push pop popa imul addl mov mov (bad) jecxz in repz std add or es cmp dec push push pop pop gs je jle mov test mov mov add add add int xlat fsub out icebp idiv add or adc das cmp inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub cmp dec add pop popa data16 jno jnp xchg movsl stos mov mov aam fild add in out hlt stc incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec push pop pop push test mov mov fcomp loop in icebp testl add cld add or push sbb add sub cmp dec push push pop pop gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add add add unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add add pop or push sbb sub cmp dec push push pop pop fs je jle mov scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push add push (bad) xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or add add xor dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jmp add push adc push and xor add cmp pop pop bound jb jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp add add add add dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or adc xor dec push pop pop imul mov lods mov mov xlat faddl jecxz in repnz std add or daa sub inc dec push push add add imul addb movsl stos scas mov mov (bad) in out repz incb or sub dec dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl push (bad) mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor push push pop pusha gs jne add add test movsb test ret leave into rcr add in out hlt stc incl unpcklps push and cs ds dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp add mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg xchg fwait mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb add sub ss inc dec push push pop pusha imul addb add mov fcmovu in out hlt stc incb or adc push and sub dec dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test add add int3 rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul orl mov add add leave into aam fsubp call add or daa sub cmp dec push push pop pusha add jo jnp test movsl stos scas mov mov (bad) jecxz in repnz std add or pop sbb es cmp dec push push pop pusha gs je jg mov test ret add add add enter fucom out repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov add (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov rol iret aam (bad) jmp add or daa sub ss inc dec push push pop pusha gs je jg mov movsb test (bad) leave into roll add fcomp jecxz in repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli incl pop and xor ds dec dec push push pop bound jno jl xchg movsl stos scas mov mov flds add add add fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or pop sbb es cmp dec push push pop pop gs je jg mov test mov mov fcomp out add repnz add or push sbb sub xor dec push pop pop imul mov stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul jg mov test mov mov xlat fsub out add add idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp add cli incl unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) ljmp push pop push and sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp add add unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock add or adc sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add push adc add sbb cmp pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb daa sub add aaa cmp inc dec push push pop popa insb add jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp add inc inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul test movsb test ret enter fucom out repnz add or push sbb sub xor push add add pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov ret rcl fsub out icebp idiv add pop and das xor ds dec dec push add add arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop add imul addb stos scas mov mov (bad) jecxz out repz std add or and sub dec dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno add add addl mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov fsub out icebp idiv add pop and aas inc dec dec add pop fs je jle add mov test ret enter fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov rcl fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov add mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov add add mov fcomp jecxz out repz incb movhps and aas inc dec dec push pop pop imul mov test (bad) lret (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg lods mov add fsub out icebp idiv add or adc sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp jmp add push adc sbb cmp push pop bound jb jl xchg stos mov mov aad fildl loope jmp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fucom call add or sub inc dec add pop arpl jb jge xchg cmpsl lods mov mov (bad) fildl add out lock sti add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call in repnz add or pop sbb aaa cmp inc dec push push pop push jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add add push or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fucom out icebp idiv add add or push sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov scas mov mov fcomp loop in repnz add or push sbb sub xor push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb add sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub xor cmp inc dec push push pop popa imul addb movsl stos scas mov ror aam fsubp call add or pop sbb es cmp dec push push pop pusha imul addb movsb test (bad) leave into rcr fucom call add or pop sbb daa sub cmp add dec push push pop pusha imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out clc incb or daa sub aaa cmp inc dec push push add add imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop add add add jae jle mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop arpl jae jns orl test mov ret lret fneni(8087 out lock sti add and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb add add add xchg fwait mov mov rcl fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov test (bad) lret (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov add add mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec push pop pop arpl jae jle mov test mov add add rcl fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out hlt stc incb add adc pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov add (bad) int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add push adc sbb cmp push pop bound jno jl xchg stos mov mov rcl fneni(8087 in lock cli add and aas inc dec dec push pop pop imul xchg cltd sahf movsb test ret leave into rcr fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fldl add jecxz in repnz add or pop sbb daa sub aaa cmp inc dec add pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam fsubp add add out repz incb or sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsb stos mov mov (bad) jecxz out repz add clc std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or sub dec dec push push pop bound jno jl xchg lea lods mov mov (bad) fneni(8087 in lock cli add incl pop and cs aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr loope out repz std add or sub inc dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa add add inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop fs jne jg mov test (bad) leave into aam fsubp jmp add adc inc inc dec add add pop pop gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc push and sub dec dec push push pop bound push orl test mov mov xlat fucom out repnz add or push sbb es cmp dec push push add pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop add add imul mov scas mov mov fcomp jecxz in repnz add or pop sbb daa sub ss pop pusha imul jg mov test ret leave into rcr fucom call add or push sbb sub xor dec push pop pop imul jns orl add ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test ret rcr fucom out repnz add or push sbb sub xor dec push pop pop fs jns test add add mov mov fcomp jecxz out repz std add or sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad add out lock add pop and aas inc dec dec push pop pop arpl jae jle mov add add lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jle mov test mov mov xlat fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov add lahf movsb test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop popa data16 jno jnp xchg movsl stos add leave iret aam fsubp jmp add push adc sbb aaa cmp push add insl jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov add rcl fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add rol (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or sub inc dec push push pop popa insb jno jl xchg mov mov add add (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv push or push sbb sub cmp dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add add repz std add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov aad fndisi(8087 out icebp idiv add and aas inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add clc incb or sub inc dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or add pop add cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or and sub inc dec push push pop popa insb jno jl xchg stos mov mov fucom call add push adc push and sub dec dec push pop popa insl jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and add add inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul jbe addl mov rol rcl fnop in out cmc cli incl unpcklps pop and cs ds add add push pop pop arpl jae jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push add push pop popa imul addb stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound add push (bad) xchg lods add int3 rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in icebp idiv add or push sbb sub xor push push pop pop gs outsl je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test enter fucom call add or daa sub inc dec push push pop popa imul add add lcall mov (bad) jecxz out repz incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add pop and das xor ds dec dec push pop pop arpl jb jge add add mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov xchg cwtl popf mov mov xlat fsub out idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and add xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test add scas mov mov (bad) jecxz in repz std add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) jmp add push adc and sub dec dec push pop pop bound jb jl xchg cmpsb stos mov mov rol iret aam (bad) jmp add or daa sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or sub dec dec push push pop bound jno jl xchg movsl stos mov mov add iret aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop pop arpl jb jge xchg lods mov mov add add (bad) fneni(8087 in lock cli incl pop and cs ds dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat faddl loope in icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test ret enter fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz add repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp add mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jae (bad) xchg cmpsl lods mov mov (bad) fsub out lock add sti add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add push or push sbb sub xor dec push pop pop imul mov mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test add leave iret aam fsubp jmp add add or daa sub aaa cmp inc dec push push pop popa imul addb movsl scas mov mov fcmovu in out hlt stc incb or adc push and sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) jmp add push adc add push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb add add sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp incl unpcklps push and xor inc inc dec push push pop pusha imul jg mov stos scas mov mov fnsetpm(287 jmp add push adc push and xor add add add pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add and aas inc add add add dec dec push pop pop imul lea test ret rcr fucom call add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom call add or pop sbb es cmp dec add add pop pusha gs jne jg mov test ret enter fucom call add adc sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) faddl loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor inc dec dec push pop pop arpl add add jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop fs je add mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb add mov stos scas mov mov (bad) jecxz out repz std add or sub inc add push pop bound ja addl mov rol iret aam (bad) jmp add push adc sbb cmp push pop bound jno jl xchg add mov mov aam fsubp jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb add lahf movsb test (bad) leave into rcr fsubp call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pusha gs jne jg test add (bad) leave into aam fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop popa imul addb movsb test (bad) leave into rcr fsubp call add or pop sbb es cmp dec push push pop pusha imul addb movsb test add fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test mov (bad) mov mov (bad) lret fneni(8087 out cmc std add adc and das aaa aas dec push push pop bound jb jl xchg add rol rcl fcmovu in out hlt cli incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop imul lea lods add mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop bound jb jge xchg lods mov mov add add (bad) int3 rcl fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov rcl add loope in icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop arpl jb jge mov test mov mov xlat add fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov stos scas mov mov (bad) jecxz add add repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add add pop and das xor aas inc dec dec push pop pop add outsl je jg mov test ret leave into aam fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub add cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg test mov mov xlat fsub out icebp idiv add or pop sbb es cmp add dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec add push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc pop and add xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound add insb jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae add mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl add addl add add mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps and sub xor push push pop pusha imul addb add add mov mov (bad) in out repz incb or adc push and sub dec dec push push pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop fs jne jg mov add test (bad) leave into rcr fsubp call add or sub inc dec push push pop popa insb jb jl xchg lods mov mov ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov add (bad) lret rcl fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov add aam (bad) jmp add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov xlat faddl add loope in icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out add in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp testl add add cld add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam (bad) jmp add sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) add jmp cmc sti add add das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or adc sbb and sub inc dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub add cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor add add add inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and cs ds dec add dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop add pop add jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha add add push jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop gs je add add test cmpsb stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg mov stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl je jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl add add fwait mov mov aad loopne ljmp unpcklps pop and add xor dec push pop pop fs je jg mov stos scas mov mov fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add push adc push and xor cmp pop pop bound jb jge xchg test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jns orl stos scas mov rol add add rcl fnop in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov flds add in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out add repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov rcl fsub call add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb add add or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or add sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push add add and inc inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and cmp dec dec push pop pop gs jne jg mov test (bad) leave iret add fcmovu in out cmc cli incl pop and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop add pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and sub inc dec push push pop bound add ja (bad) xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl add mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jno jnp xchg cmpsb lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha imul addb add add rol rcl fnop in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu out lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov add mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) lret (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov add add add add add into aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat add add loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli add add unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl sldt add add push and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jge mov test mov mov rcr fsubp call add push adc sbb add and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc add add pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push add add imul addl mov rol rcl fneni(8087 out lock add and inc inc dec push push pop pusha gs jne addb cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jo jnp test cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop fs jo jnp add fwait mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov xchg cltd sahf mov mov fnop in out cmc cli incl pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave iret aam (bad) jmp add push adc push and add xor aas inc dec dec push pop pop fs je jg mov add (bad) lret fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge mov cmpsl lods mov mov ret rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or sub inc dec push push pop bound jb jl xchg lods mov mov int3 rcl fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) add add loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc das xor dec push pop pop fs je jg mov test (bad) leave into aam loopne ljmp add lock cli add and inc inc dec dec push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov rcr fsubp jmp add add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or add adc sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push add add cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or add pop and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub add add cmp pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss add inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push add add imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul add jns test movsb stos scas mov mov add loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) lret rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add add lcall rol rcl fneni(8087 in lock sti add and aas inc dec dec push pop pop gs je jg mov test (bad) aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov xchg cltd sahf movsb test ret leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or add xor ds dec dec push pop pop arpl jae jle mov add add mov fcomp jecxz out hlt cli incl daa cs dec push pop arpl jns mov mov mov fcomp loop in repnz add or push sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb es aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp cmc cli incl pop and das xor dec push pop pop imul mov test (bad) leave into aam fsubp jmp add or sub xor push push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add or adc push and sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or add adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos scas mov mov fcmovu add jmp cmc sti add add and aas inc dec push push pop pusha imul addl mov rol rcl fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test ret leave into rcr fsubp jmp add push adc sbb add add cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and aas add inc dec dec push pop pop fs je jg mov movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul nop xchg fwait mov mov aad (bad) ljmp unpcklps push and xor ds dec dec add push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub add in repnz add or daa sub aaa cmp inc dec push pop pop arpl add jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul add test movsb test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom call add or daa sub inc dec push push pop popa insb jno jl xchg add xchg pushf mov mov (bad) fneni(8087 out icebp idiv add or push sbb and cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add mov fcmovu in out hlt stc incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov rol rcl fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul mov stos scas mov mov (bad) leave iret aam fsubp jmp add push adc xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov add add rcr fsubp jmp add push adc push and sub dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne add in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc sbb cmp pop pop imul mov scas mov mov fcomp jecxz in repnz add clc std add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl sldt add adc push and xor ds dec dec push pop pop arpl xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc sbb add cmp push pop bound outsb jae jge mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor add add inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov add aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp idiv add and inc inc dec dec push pop pop gs add add test movsb test (bad) leave into aad loopne jmp cmc cli add pop and cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle add sahf mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha gs jne addb add add add xchg lcall mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add push adc push and cs ds dec dec push pop pop arpl jae jle test add movsb test ret enter fsubp call add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop pusha imul addb movsl stos mov add add iret aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb es dec dec push push pop bound jb jl xchg lods mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov add add add fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov (bad) fsub add add in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test ret leave into rcr fsubp call add std add or and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl add add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add add adc xor dec push pop pop gs jne jg mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and add add aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub add cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov rol rcl fndisi(8087 out in repnz add or pop sbb daa sub aaa cmp add add push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp idiv add and inc inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha add add add jne addb cmpsb stos mov mov (bad) fneni(8087 in lock cli add and cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jb add (bad) xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc pop and cs ds dec dec push pop pop arpl jae jle add mov test mov mov xlat fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp push adc and inc inc dec push push pop pusha gs jne jnp test xchg lcall mov fcmovu in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos scas add iret aam (bad) ljmp push adc push and xor ds dec dec push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp incl unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov ret rcl fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addl mov rol rcl fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov add fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fcmovu in out cmc cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jg mov stos scas mov mov (bad) add jmp add push adc push and sub inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp lock cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop imul mov mov rol iret aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge test mov mov fcomp jecxz in repz std add add add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push add add and inc inc dec dec push pop pop fs je jg mov test ret leave into aam fsubp jmp add push adc sbb cmp pop pop bound jb jl xchg lods mov mov xlat fsubp call add or sub add sub inc dec push push pop bound jno jl xchg stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor add ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds add dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp adc xor dec push add add imul mov scas mov mov fcomp loop in repnz add or sub inc dec push push pop add insl jae jge mov cmpsl lods mov mov xlat fsub out icebp notb dec push xor bound pop xorl notl cmp cld add bound daa and sub xchg mov mov enter inc repnz movsl or into (bad) dec rolb les jns or repz dec and inc fwait in adc mov sub aaa push jp loop adc and cli or lock out inc xor pop pushf popf and adc pop fist stc push add push jb cwtl in xor jmp test xor push push das in sub sti dec sbb std js lahf xchg cmp push sub sahf (bad) pusha xlat das imul push pusha push (bad) jno ret mov cmp push clc mov jbe hlt sbb test xorb jb pop inc mov pop pop dec dec test test test test test mov cmp cmp cmp cmp cmp mov test cmp cmp test cmp mov cmp test cmp test cmp jmp cmp test cmp cmp cmp cmp test cmp cmp test xor cmp cmp test cmp test cmp cmp test cmp cmp ret call cmp cmp test cmp cmp mov test cmp cmp test cmp mov test cmp cmp test cmp inc cmp cmp cmp test cmp mov cmp test cmp cmp test mov cmp test cmp cmp test ret pop cmp cmp cmp cmp test clc adc cmp cmp test cmp cmp jmp subb inc lods outsl sahf adc mov movsl inc insl jo xor cmp or lret mov pop mov sti sub test cmp test cmp cmp jmp test cmp cmp cmp cmp pop test cmp test test test add test test cmp cmp mov test cmp cmp cmp test mov inc nop test test test cmp test cmp test test cmp dec test test test test cmp cmp cmp cmp test cmp dec cmp test cmp cmp cmp test nop test test test dec cmp test cmp test test cmp test test test test dec cmp cmp cmp cmp test cmp cmp test cmp cmp xor cmp test nop test test test cmp test cmp test or test cmp test test test test cmp cmp cmp cmp call test cmp cmp test cmp cmp cmp test nop test push test test cmp test cmp test cmp cmp test test test jne mov cmp test cmp cmp cmp add test test cmp test cmp mov cmp cmp cmp test test add cmp cmp cmp test cmp call cmp cmp cmp cmp test jmp test cmp cmp test test pop cmp cmp cmp test cmp push cmp cmp cmp cmp test push test cmp cmp test test push cmp cmp cmp test cmp mov cmp cmp cmp cmp test call test cmp cmp test test pop cmp cmp cmp test cmp cmp jl cmp cmp cmp cmp test mov test cmp cmp test test sub cmp cmp cmp test cmp mov cmp cmp cmp cmp test sub test cmp cmp test test call cmp cmp cmp test cmp mov cmp cmp cmp cmp test push test cmp cmp test test mov cmp cmp cmp test cmp push cmp cmp cmp cmp test push test cmp cmp test test push cmp cmp cmp test cmp call cmp cmp cmp cmp cmp jmp cmp cmp cmp cmp test pop test cmp test test cmp inc cmp cmp cmp test push test test test cmp test pop test cmp cmp cmp cmp inc test cmp cmp cmp cmp pushl test test test test xor cmp test test cmp cmp pop cmp cmp test cmp cmp mov cmp cmp test test cmp jne test test cmp test test mov cmp cmp cmp cmp test cmp cmp cmp cmp test dec test test test cmp dec test test cmp cmp cmp dec cmp test cmp cmp cmp dec cmp test test test push mov or test cmp test test cmp pop xor push cmp cmp cmp test cmp popl cmp cmp cmp test cmp jne test test test cmp test jmp test cmp cmp cmp cmp jmp cmp mov iret jg sarb shr dec (bad) test jge lea pop pop test data16 repz mov cld cmp es (bad) fs and dec pushf mov out aad push jnp lret into (bad) jb sub lods sub sbb mov popf pop fisttp (bad) jbe xchg loopne mov add push jae cltd test shll mov pop xor ret out mov jns lahf push clc add cmc or sub stos xor xlat in insb in and cmpsb subb test pop adc xlat cmp cmp mov test test test test pushl cmp test test cmp cmp pop cmp cmp test cmp cmp mov cmp cmp test test mov test test cmp test test push cmp cmp cmp cmp test mov cmp test cmp test cmp mov cmp cmp test nop test mov cmp cmp cmp test test dec test cmp test cmp cmp dec cmp test test test cmp dec test cmp cmp cmp test cmp jne test test cmp test cmp mov cmp cmp test test test dec cmp test cmp cmp cmp dec test test test cmp test dec cmp cmp cmp test test cmp jne test cmp test cmp cmp pop cmp test test test cmp mov test cmp cmp cmp test mov test test cmp test cmp mov cmp cmp test test test add cmp test cmp cmp cmp mov test test test cmp test mov cmp cmp cmp test test add test cmp test cmp cmp mov cmp test test test cmp add test cmp cmp cmp test lods test test cmp test cmp test je cmp cmp test test test add cmp test cmp cmp cmp mov test test test cmp test cmp jne cmp cmp cmp test test mov test cmp test cmp cmp cmp jne cmp test test test cmp mov test cmp cmp cmp test push test test cmp test cmp pop cmp cmp test test test push cmp test cmp cmp cmp push test test test cmp test push cmp cmp cmp test test push test nop cmp test cmp push cmp cmp test cmp test push test cmp cmp test test push cmp test test cmp cmp push test test cmp test test call cmp cmp test test cmp add test test cmp cmp test ret inc lods outsl sahf adc mov movsl inc insl jo xor cmp or dec lret mov pop mov subl jne pop iret jg sarb shr dec (bad) test jp jne inc gs pop test data16 repz mov les mov (bad) fs cmovs push out aad jnp loop into (bad) jb sub lods sub sbb mov popf pop fisttp (bad) jbe push repz call add cmc or sub in stos xor xlat in insb in and movsb cwtl adc icebp add jge mov lea push iret in es shl ret push lock test jmp cmp sar xor loope and lret jmp lock xor lret xchg lock xchg loope xchg lret call fcoml lock dec mov sbb pop ljmp sbb (bad) mov add push jae cltd test shll mov pop pop xor out mov (bad) jns lahf push clc add cmc or sub in stos xor xlat in insb in and cmpsb subb inc lods outsl sahf adc mov inc insl jo xor cmp or dec lret mov pop mov subl jne mov iret jg sarb shr dec (bad) test jp jne gs pop pop test data16 repz mov les mov (bad) fs and dec pushf mov push out aad push jnp loop xor (bad) call pusha pushf mov jnp repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz repz push rorl mov hlt mov cmp fisub lea cli cmp push mov rorl pop mov aam pop pop inc sbb into movsb rorb data16 mov push or shr cli mov xchg mov push and mov pop dec scas pop mov rorl pop mov (bad) jbe mov mov (bad) jbe mov mov roll mov xlat pusha out rorl pop mov mov outsl mov (bad) xchg mov mov pop pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je pop (bad) je add movsb cmp jno rcl mov fisttpl pop mov mov loope mov mov dec das dec pop int3 push xchg adc push hlt cmp jg rcl shrb cmp jle rcl mov aam pop sub pop mov rorl fcomps xchg or mov jbe xor mov sub push mov roll pop scas mov inc push ficomp or rorl pop mov stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp and stos icebp aas sub mov add push push and stc push and cmpsl pop mov roll mov push imul lahf cmpsl pop mov (bad) mov pop les fwait mov sbb andl rorl mov clc mov cmp push in les ret mov rorl mov dec cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp les xlat mov inc movsl rorl push movsb cmp mov (bad) mov xchg mov in xlat pusha sbb lea pop or mov xlat pusha popl cmp pop mov xlat pusha jbe rorl pop mov rorl xchg adc inc mov xlat pusha scas mov mov dec jle pop mov rorl enter add lea pop or mov clc mov pop mov in pusha jecxz rorl ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp ret cmp mov (bad) mov push inc pop mov cmpsl test sarb dec mov fistpll pop loope jo mov imul clc cmp jo rcl or xchg pop mov rcrl dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov sahf dec mov int3 add sub pop mov pop int3 cmovs jg mov sub xchg arpl insb jb rcl shlb sub pop mov rcl or nop pop mov sub pop mov pop int3 cmovs xchg pop mov adc push mov rorl pop mov rorl pop mov rorb inc mov cli mov push dec pop mov push mov aad into or pop fcoml adc pop mov fwait pusha mull fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds push stos fadds cs lcall sub add xchg or cmpsb jl mov pop int3 push movsl push mov mov mov lret mov scas test addr16 test mov mov shl pop lret pop mov xchg rcl fisttp popf nop pop (bad) fsubs jecxz negb jnp pop aam and mov cmpsl adc mov repz push addr16 pop in push lock mov pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop aad pop pop xor test pop lret push in int3 mov mov je pop loop shl xchg push loopne in cli nop rorl shl movl ficompl cmpsb jp fcmovnbe fistp sar mov mov mov xchg (bad) mov movsb (bad) mov mov fwait aam mov push mov sub or push push icebp pop dec (bad) (bad) aad shrb sbb hlt mov fisttpl hlt sub fsubs aas add mov pop leave dec sub test in testl rclb pushf (bad) shr addl int3 rorb rcrb dec adc pushf test popa xchg add push dec dec sub pop mov jp pop mov pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub shrb pop add sub push movsb cmp mov sub add mov js pop sub push mov inc jle rcl rcrb jne mov (bad) test (bad) push lret pop lret pop lret pop pop cmpsb mov into mov sub movsb pop cmp inc mov (bad) mov ljmp sub mov cmp sbb andl rorl push mov sahf xorl dec xor movsb pop sub or nop pop mov rcl add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov shr (bad) mov push jne pop andl rorl pop clc pop mov and push jno aam add test incb rcl mov das jbe pop movsb (bad) shr (bad) pop add sbb sarl fsubs fdivs mov xlat fcmovbe neg jbe pop xchg fdivrp fimul mov mov sub aaa mov xlat add sub movsb xor mov mov fs mov sub into cmp mov push sub shl pop sub jbe int3 rorb pop mov pop ficom loope or pop int3 jg rorl mov rorl (bad) cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp dec adc cmp pop xchg sub pop sub inc and mov (bad) pop mov rol xor divl movsb pop ficom loope or push jno scas push push push mov pop ret pop (bad) lcall and jno mov shr push (bad) out pop jp sti dec sub fcmovbe cli fisttp or sub movsb (bad) lret or stos rorl cmp sbb rorb out rorl iret mov (bad) mov pop jae pop sub dec sub mov sub pop mov fimull sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov sti sub mov jecxz lret mov sub pop mov pop ficom loope mov sub pop mov adc pop mov pop sahf pop ljmp mov lret cli cmp sub pop ficom mov jno scas push popa push mov rorl imul mov mov loope into cmp mov push cmp shr cli nop rorl or sti add rorb xor pop les (bad) pushf pop mov sub xor push dec jecxz rorl pop mov sub movsb jo cmp shrl inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc xor inc mov (bad) fisubl mov addb adc mov adc mov (bad) pop test shr xlat add mov pop mov jae pop mov rorl pop mov (bad) pop test rorb dec jecxz rorl pop mov rorl push pop loope or cmp mov arpl pop lret push lock out mov (bad) pop test pop clc mov jbe adc mov test inc dec ret mov je pop mov sub shlb cmp pop mov outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb outsb xor sbb sbb xor sub shlb pop les sub shl mov arpl rcl mov and sahf pop mov mov jno aam add sarb mov in mov mov (bad) (bad) pop inc or in fmull shr xlat pusha pusha mov fidivr pop pop int3 cmp mov push movsb cmp mov es lret mov sub cwtl aam mov mov mov movsb (bad) sar (bad) pop inc and fsubl rorl mov lds scas pop sub std mov xchg pmuludq fisttpll hlt xchg pmuludq fisttpll hlt xchg pmuludq fisttpll hlt xchg pmuludq fisttpll hlt xchg pmuludq fisttpll hlt xchg pmuludq fisttpll hlt xchg pmuludq fisttpll hlt xchg pmuludq fisttpll hlt xchg pmuludq fisttpll hlt xchg pmuludq fisttpll hlt xchg pmuludq fisttpll hlt xchg pmuludq fisttpll hlt xchg pmuludq fisttpll hlt xchg pmuludq fnstenv clc mov jbe movsb sub fcomps xchg jb mov sahf lea cli cmp pop sub fsubrl mov sub lcall ficom loope mov insb jne mov roll movsb and mov cmp pop dec pushf xchg pop mov sub or push mov pop ficom loope mov sahf lea cli cmp scas pop sub fnop rorb mov lret mov cmp scas pop sub (bad) rorb pop mov push or roll fmul rorb pop mov rorl pop fisubrl repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test repz test mov pop (bad) sbb rcr movsb aaa stos mov push ss mov push ficompl roll fdivrl mov mov fmull data16 fs scas push out mov rorl and mov out xor roll pop popf push (bad) pop mov rorl fwait scas push lret pop mov rorl mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov pop mov mov mov pop mov out lods pop mov rorl pop pusha cmpsl hlt data16 rorl dec mov out les xor xor cmpsl call fldt (bad) mov mov out mov adc pop popf rorb addr16 mov push ss mov mul pop pop inc sbb pop mov dec mov sub iret mov scas mov cmp movsl pop sub pop lret push cwtl sbb enter and ret mov inc mov sub daa mov cmp mov nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret nop lret rorl pop mov rorb pop mov sub xor adc (bad) jbe xor mov inc cmc pop mov sub shlb mov push jno scas push pop movsl pop sub mov pop sub rcrb dec das mov xlat loope mov mov sub movsb xor pop jb arpl jecxz pop fs in and mov mov mull rorl pop mov rorb pop mov rorl cs mov mov cmp mov jno stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add stc add rcrb dec das mov (bad) jbe and mov or roll add sub movsb xor cmp cmpsb pop sub pop sub arpl data16 pop pop int3 and mov mov mov inc mov jecxz sbb xchg cltd fmuls pusha lock mov mov pop xchg push (bad) pop popf push (bad) ljmp and subl dec pop (bad) push mov mov adc dec pop movsb rorl push and pop mov rorl pop mov rorb inc mov fisttp pushf mov adc dec mov aad pop sub rcr dec rorl pop mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov leave xchg inc mov cmpsb test rorw and pop mov ret mov rorl pop mov sbb mov rorb in (bad) popa xchg jbe sub xchg cltd add push jmp rorl and mov push pop les mov sbb sub sar fisttp cwtl mov rcr xor jbe,pt lret pop lret pop lret pop mov xchg shlb hlt push sub or xor pop into pop dec inc mov adc arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl dec cwtl arpl fsubs jecxz lock pop movsl popa enter fbld test lock shl fisttp clc out mov in add in (bad) dec sbb ljmp sub cmpl mov mov mov mov xchg fbld sub fwait mov mov pop movsb lds xchg mov test in test lock mov push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and push or and pop jno mov adc push mov lret or and mov dec mov pop scas mov mov xlat xchg push pusha pop dec cmp lcall mov popa shr pushf movsb fsubr pop and mov mov adc push mov pop ja rolw xor mov mov sub adc push jno mov rorl pop mov rorl push mov rorl pop mov fildl inc scas xchg or sar test sbb and dec cmp lods pop ja rorw xchg sub xchg pop sar push sub or mov sub popf out jmp out pushl clc cmp pop mov fild movsl and (bad) push pop xchg push and mov test xchg sbb adc jns fisttp outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg out outsb xchg pop hlt push sub mov rcr xor adc jno mov sub mov cmc andl rorl cs jb pop mov sub rcrb dec pop mov test sub mov shl pop lret xor xchg bound cmp arpl mov fsubl adc inc sub leave sbb jmp cs adc inc mov xchg push xchg xchg xchg or aad dec fcomps roll pop dec std cltd pop mov dec movsl pop mov rorl mov ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds ds cmp push mov pop adc mov mov jbe mov mov shl movsb pop inc adc fiadd mov mov rorl lods mov imul mov push aad or mov cmpsl adc fildl outsl mov lret mov push arpl rorl xchg sub add hlt xchg enter cld mov aad mov test cld push sbb mov pop int3 add mov push dec pop sarb push mov pop adc mov out mov pop adc mov out cmp mov sar push (bad) pop mov fsubs bound (bad) add mov mov rolb mov jmp pop mov roll (bad) cwtl rorb push and mov pop xchg push sub sahf sbb mov and outsb mov inc xor mov inc xor mov inc xor mov inc xor mov inc xor mov inc xor mov inc xor mov inc xor mov inc xor mov inc xor mov inc xor mov inc xor mov inc xor mov inc xor mov inc push arpl rorl pop mov rorb mov and loop cmp mov rorl pop mov rorb mov sub movsb and mov mov pop jae (bad) jmp jg rorb add mov fdivrl sahf test sar iret add mov and sarb push in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs in push gs shlb dec push into fadds and mov or pop pop lea adc cwtl sub mov aad or and (bad) jecxz sub daa stos xlat mov push xchg add cltd add test fcmovnbe pop push dec das mov xchg loope mov mov lret into or mov pop aad movsb adc lcall sub or mov or mov les int sti and sub pop mov cmp mov sub inc mov rorb xchg sub rcll (bad) shl xlat jbe sub lods fmuls dec mov or aad in sub rorl in pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs pop fs aaa jbe into cmpsl in aaa int3 shll jns jbe lds sti push iret mov pop dec sbb pop mov in xchg shll inc sub adc les call xor stos mov repz pop shll sub sub ds cld sub mov mov out cmpsl fisubr leave cmpsl in or sarl and sub ds loopne lret nop out into cmpsl mov sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub pop add sub sub das cmc mov loopne xlat pushf out or mov xor mov jbe out cmpsl fnstsw sarb in bswap mov popa stos inc sub adc shll cmp xchg icebp pop dec lds pop popf std adc mov push (bad) mov das mov sub das loope in ret mov idivb in lds pusha inc mov or js push cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl cmpl mov sub das repnz cs fnsave (bad) mov aas mov sub das out std sbb mov fnsave (bad) mov aas mov sub das repz sbb mov fnsave (bad) mov aas mov sub ds out int out in mov popa mov lds in sub xchg int3 or mov mov out std push fdivrs in or mov mov jecxz in cmp mov sub mov sub test movsb in jmp movl cli adc mov icebp xor shll mov sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub pop sub inc sub pop lds std xor mov sub mov sub shll js jbe leave mov fldcw iret cmpsl in cmp xchg icebp pop dec jecxz movsb pop lahf out les sti and shll jne jbe leave mov enter ljmp rorl adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cltd ret adc cmp cmp cmpsl iret xor xchg in cmp mov sub dec xchg nop sti shll das lds in pop dec ret pop xchg in das lock in sub mov outsb movsb pop sub lock std and mov popa ret jbe int3 mov sub sub xor cmpsl loopne aad int ret push (bad) mov das mov sub sub mov ds in not popa mov sub or mov in mov sub aaa iret mov in aaa (bad) lds jbe call cmpsl in pop leave mov sti and stos ficomp inc mov mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov stc sub mov jbe mov orl pop sub xor mov popa add jbe lds enter loopne aad in sub shll jbe jbe lds in pop dec adc movsb pop and int3 mov cld das lds movsb out std pop iret mov loope sarl mov fnstsw sarb in or mov mov out std sbb leave test pop movsb pop xchg in das hlt mov sub mov xor shll mov sbb imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul inc xchg imul jbe mov cmp test sub mov icebp das lods (bad) ds fisubr enter int3 mov sti shll cmp sti stos or mov xor cmpsl cmpsl or mov aaa (bad) cli test stos ret repz (bad) fwait ret (bad) fidivl cmpsl (bad) cmp mov push leave mov xor mov loopne les sub mov das divb out repnz out into mov pop mov sub push stos test xor mov fstpt movl and jbe (bad) ljmp or icebp test mov in mov mov movsb rorl movsb pop rorl mov sub pop mov sub pop mov add mov mov popa mov sub pop (bad) mov in mov popa mov sub sub mov xor mov sub sub ds mov test adc dec bound pop xchg or jbe (bad) xor pop dec push pop movsb pop xor aas in popa add jbe mov cmp movsb (bad) rorl movsb pop jg pop mov rcr js fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl fdivrl faddl add add loopne cmp ret jae ss cmp lods fnop push xchg daa xor mov int mov stos pop icebp leave imul push cmp or or mov sahf and ja pop mov test xor push les in dec add std inc dec push xchg ja sub push out (bad) jmp or cld scas push sbb lea xor pop nop jle out jne (bad) push cmp jp movb and adc loop xlat jge movsb cmp jecxz sbb in add or sub jecxz imul into jg (bad) mov mov mov sbb hlt pusha and in ljmp inc aad inc sub shrl xor rcr cli pop push mov insb add repz fstpt mov jge jae or lds jmp movsl dec (bad) cltd cmpsb loopne aad sbb aaa pop cmp mov lret push sub push jmp pop xchg fsub loope stos cmc lds (bad) jle (bad) in pop gs leave add sar repnz dec divb call (bad) divb mov int3 ljmp or dec mov imul inc cs std fstps into rclb nop sbb push lcall inc xor cmp add imul addl dec test test xchg jle dec sub and popl pusha mov cmpsl mov ret jmp add mov jbe outsb lret push aam iret stos popa jp xlat cli icebp pusha sbb mov lock mov jno jae or lds jmp adc (bad) cmp loopne aad cltd out (bad) cmp mov push sub (bad) insl lret or dec pop xchg push loope stos cmc faddl mov jle (bad) in fbld aas leave add sar das hlt dec push jo repnz call ljmp repz or dec sahf mov inc cs frndint into rclb nop adc jg lcall inc rcr scas add xor add imul adcl xchg dec pop mov sub xchg and dec subl or imul pop xchg push cmpsl cwtl adc mov ret jmp rcll mov lret push push xlat iret icebp pusha jp fwait cli or test movsb mov lahf jl jno jae mov or lds mov cmp loopne dec jnp cmpsb aaa (bad) aad sbb mov sub mov lret push jmp (bad) xchg push loope pop cmc fsub lods mov (bad) int les aaa test dec jmp adc push nop lods or sarl cmp mov iret xchg test (bad) cltd mov sbb mov sbb repnz push ds mov pop mov cli lahf cmp xchg arpl mov iret aad push (bad) and and mov (bad) cmpsb loop xor push fistl out movsb ja mov add dec popl xchg mov jb xlat xor mov loop movsl or lods jne xchg call cs imul lret es fnstenv mov fwait jp xchg adc xchg shrb xor std cwtl sbb mov or insl cmc mov fwait cmp push jg pop inc xlat shr jbe imul mov or jle cld add in int3 add sahf pop jecxz aaa test dec jmp adc push nop rorl ret add jmp adc cmp iret (bad) cltd xchg outsl fdivp jl mov push daa sbb dec mov stc ds repnz mov das mov lahf and iret aad push (bad) pop mov and mov fsubl dec aam leave rclb int3 movsb ja mov cmpsb outsb dec sub add mov sbb jge mov xlat xchg xor stos and lods jne xchg call cs or lret negb adc sub fwait jp xchg adc xchg mov cwtl shl mov or insl cmc pop lds (bad) cmc fwait mov pop cmp sarb dec inc pop (bad) ljmp add cld (bad) int3 test sahf in or jmp dec adc ss rcll ret add jmp pop cmpsl cmp mov iret xchg cltd xchg sub test fidivrl mov push push stc sbb repnz push ds mov das mov sub cmp and loopew pop iret and push pop and sub fnstsw cltd jge push sbbl jmp iret mov sbb inc inc ljmp xor mov jmp sub js sbb rcl dec rolb adc das dec push cmpsb ss cmpsl mov into lds jp mov push imul cmp xor cmp inc outsb sahf arpl adc test gs xchg pop in loope mov lods or push sub mov movsl insb dec imul add test xlat es xchg je mov mov dec test jb mov out sub dec xor sbbb jnp mov cmc repz fimul jbe inc fcmove daa loop add pop or scas hlt sahf les cmp sti add jge sarb inc andl insl or mov inc inc sbb push aas movsb pminsw loopne es inc (bad) jmp sub jns sbb rcl push rolb adc das dec adc mov into xchg xchg nop push cmp pop mov push imul cmp xor cmp aam sahf cmp arpl test gs xchg pop in loope jae pop call lret lods mov mov add add mov (bad) xchg mov xor and icebp jb mov dec sub cmp adc sbb pop sub cmc repz mov lcall jbe push fcmove sub int3 inc rcrl les jne hlt sahf stc inc ret scas (bad) les add sbbl jmp mov insl inc sbb inc pminsw loopne movsb dec inc xor mov sbb xor push adc rclb dec adc mov into xchg cmpsl nop push cmp xchg mov pop mov and pop cmp push into push jl hlt pop mov mov inc mov sbb pop jns pop cmpsb push sbb xchg xchg aas aaa or fimul jmp sub jb (bad) aad and int inc scas pop test paddq cmc push xchg rolb enter lods lret testl nop push pop push call jge jg cmp out es push fnstsw push adc mov xchg in pusha cli jp add and xchg daa mov into adc jecxz dec push std popf and mov data16 cmp jmp popa dec add inc outsl cltd out mov inc cwtl push cmp repnz imul (bad) xor insb jne push mov stos mov in mov inc pop lcall jno cmp push push push jl hlt pop into pop xchg ljmp inc inc xorl mov jns pop cmpsb mov sti (bad) xchg aas push or xchg dec stos aaa int3 sub jb jmp fnstcw aad les int lods scas pop movsb loope inc fisttp test rcl inc (bad) push insl enter ret lret testl nop push push call jge sahf fwait cmp out jg push adc fstl (bad) scas jo push dec xchg mov add and jp mov into adc jecxz loop std sbb mov cmp popf xchg mov sub fs ja ret das or add outsl popa out rorl cmp repnz je mov mov fisttpl xor stos jne in mov mov inc pop in fcmovbe and lcall jg cmp sarb pop into push xchg ljmp popa inc addl mov xchg cmpsb mov sti (bad) pop aas push sbb xchg xchg stos aaa or dec dec jmp fnstcw jb (bad) aad and int inc scas scas dec (bad) xchg push jg je jbe xor and push arpl ja xor cwtl (bad) or mov sub repnz aas pop fdivrl jmp cmp scas adc sahf dec push xchg mov fwait (bad) mov out test xor (bad) mov mov mov pop les fsts and cs pop into stos mov out lods popa out cmp cmp xchg adc insb or aad cmc dec out dec push data16 push sub cli xchg jb cltd cmp (bad) rorl cld fisubl inc icebp outsb repz clc xor das and push loop rcll popa and mov movsl mov (bad) test jg dec mov adc bound jne ret dec incb insl pusha in mov jg je xchg lock and jbe push imul or je xor stc repnz pop sub iret pop cmp mov jmp scas mov pop jge push adc xchg (bad) aaa mov fwait sbb mov movl mov test call pop cmp xchg test nop dec cs jo pop add fs add mov xchg fstl xchg or aad aam out or push xchg jb cli cmp (bad) rcrl or and inc icebp hlt repz clc xor js jecxz and xchg push mov sti sbb mov push mov movsl test cmp dec (bad) insb int3 jg ljmp gs ret dec dec mov jg dec leave xchg push xor je jbe push imul ja cwtl cmpsb dec in je xor or mov sub sbb jns jmp scas mov pop jge push adc sahf dec adc add ret sbbl xor outsl mov test xor mov aaa pop stc mov push daa arpl leave dec ljmp imull lret adc les das and pop adc jno inc pop mov xor or test add jle lock (bad) jge and (bad) lods lds shrb xchg push mov (bad) int xor stc xchg adc mov imull imul icebp xchg cmp push aaa std adc nop mov inc inc jecxz (bad) ss mov sahf sbb pushf (bad) cmpsb pop mov lret into dec mov jp jbe iretw or pusha lock bound cwtl mov mov (bad) jne xor (bad) fwait xchg fcmovb daa xchg outsb mov addr16 and mov push cltd xlat inc dec fcmovne jae pop xchg xorl sub movsl push sbb push in movsb mov test in push sub sbb mov and add jne hlt dec pushf icebp add push sub call push sub imul popl cmp es cmp test push push (bad) or sahf test jb inc pop adc jle divb cmpsl loope sarb jne push jnp,pn pop mov repz mov add and es jns mov jno inc push bound pop pop xorl xchg ret mov stos add mov jge inc xor mov mov push pop popf push insl cmp xor xor (bad) fwait add ret outsb xchg arpl rol mov and mov mov xlat xchg dec fistl into inc xchg or cwtl pop std or push fsubrs sbb push in movsl mov movsb pop inc fsubrp push test sbb mov loop add jne and pushf shlb dec or sub cmp cmpsb cmpsb pop xchg push nop sbb add sub imul fs cmovg (bad) mov cmp xor push push or xor test (bad) or jb mov divb in jle (bad) jo cmp adc cmp pop push mov inc repz pusha jmp loopne es lahf jbe repnz inc push inc adc xorl stc xchg ret pop (bad) clc mov xor mov lods mov inc or pop popf push insl cmp xor push dec lock (bad) outsb xchg fisubl xchg les cld dec outsl adc mov xchg das fistl into inc dec or cwtl pop xchg or iret fsubrs sbb push in movsl push dec sbb movsb mov test in sahf sub js mov and pushf (bad) jne hlt dec or gs dec cmpsb cmpsb sub push jmp jg push ret test das mov int inc pop rcrl push xor and je mov bound pop push pop (bad) popf sbb nop push pop add mov iret fwait jmp fldlg2 aad addr16 faddl mov push mov xchg cltd xchg cmp popa xchg xorl sbb xchg and push xchg inc stos in fiaddl sub and add mov lods push pop push outsl ljmp mov rolb imul (bad) xor dec sbb mov call mov sbb lds cmp ret (bad) pop push movsb jl cmp dec xor add mov ss xchg sbb pop insb sub dec pop ja (bad) lahf aas mov mov inc or dec lcall das mov int dec pop (bad) hlt inc dec inc xor pop sub mov xor bound lods popf sbb nop push movl pop mov dec fwait jmp fldlg2 iret insb adc (bad) mov jg mov cltd xchg scas pusha test xorl sbb xchg and stos xchg inc popf in push sbbb and daa mov push add outsl adc mov mov mov xchg in popl sbb dec sbb mov jbe in arpl aaa sbb lea dec ja vpunpckhwd pop push ret jl decb movsb xor cmp mov ss xchg sbb mov insb sub dec pop pop dec mov mov mov lahf or dec lcall ret test scas (bad) hlt int inc pop mulps push xor sub enter gs lods jns pop push push (bad) popf mov nop xchg pop add dec pop jmp mov iret fwait addr16 (bad) insb and mov mov xor add add sbb xchg sbb mov imul inc dec mov testb cmp dec xchg rorl lret faddp pop adc cld int movsb adc mov pop mov das push fwait sub push test in xchg mov arpl out pushf push pop mov inc mov pop xlat pop int3 jb cltd cs adc ficompl hlt fs sahf (bad) adc fsubrs jg je mov ss mov enter sti or pop in flds sub cmp sbb bound sub (bad) mov pop out dec inc xchg insl pmulhw popa clc loopne repz loop roll push pop imul aad div push movsl stc mov sbb iret jo mov or stos jge push ret inc dec mov xor aaa fldl dec sbb xchg sbb mov imul inc dec popf dec les cmp loope xchg jnp aas dec fsubrl rcrl cld int movsb adc repz (bad) out das jae sub test xor outsl arpl mov or inc jb pop cs gs ficompl scas fs sahf (bad) hlt inc sbb jmp (bad) cmp aad xorb mov pop mov sar enter pop in addr16 fist push fchs test pop ljmp mov pop sub inc mov pxor popa xchg loopne in scas clc leave inc repz lds lock imul aad div dec ds mov stc sub in cmp or mov jge push ret inc mov aaa dec add xchg add and sbb inc xor and push orl les inc idivb xchg repnz dec fsubrl rorl lret int pop adc repz (bad) mov push and out movsl xchg dec add xor jns jbe mov ja test js fucomp xchg xor cmp test test mov sti clc lahf jle cwtl pop ret cmc jecxz push fiaddl jl inc (bad) sub sbb xchg stc pusha leave dec enter or dec pop aas pop (bad) (bad) jp inc data16 das adc mov or sbb adc xor add jle and insb cmp xlat push lds push sbb out push sbb pop daa rcrl inc lret popa (bad) jae fidivr outsb shrb pop and and cmp mov jbe fnstenv mov imul pop daa adc imul cld and xor sbb adc xor shrb fist stos cmpsl dec jno inc or xchg inc add dec hlt popl jbe mov sub push js ja xchg scas mov xor test sub cmp push xor clc int3 jle repz ret lahf jecxz cwtl fiaddl aam call sub aaa or enter leave pop ljmp dec dec inc pop aad jp outsl data16 das push sbb adc into in adc xor jle and insb cmp xlat push sbb lds rorl push cmp nop pop stos rcrl inc lret pushf (bad) jae fidivr outsb rolb push pop push std and mov push inc repnz bound jbe inc je imul add daa fwait inc pop push loope xor sbb out xor insl adc adc stos cmpsl jnp mov xchg inc inc mov popl jbe (bad) jns and mov ja xchg scas js fucomp or mov cmp test fs clc int3 xor sti ret lahf jle cwtl pop add jecxz push fcmovbe jl,pn cmp adc fidivr sub imul loopne fnstenv push cmp gs lret andl (bad) sti out pandn sub pop fldl jne out jecxz xor sbb int mov adc inc in push mov and leave rcll push mov cld aam dec fs pusha dec lods sbb cmp xor pop dec sarb stos xor (bad) cmp sbb popa dec clc push pushf sbb repnz xchg hlt xlat pop sub loope fdivl inc adc or (bad) sahf jno mov mov ds test cmpb ja test insb and outsb pop lahf cmpsb outsl in shl mov scas inc sub add les and adc mov daa pop jmp add mov and xchg cmp lret enter add cmc imul mov push loopne push xor inc cmp and cmp adc psadbw sub (bad) pop stc jg pop jecxz jne sbb arpl into int mov inc dec adc xor xchg leave nop xchg mov fdivs rcll cld aam dec fs sbb push call cmp stos das insl (bad) shrb xor cmpl or bound repnz hlt fdivl inc adc or jno or mov std push subb jp lea insb add sbb pop lahf dec outsl in outsb loop cmpsb scas inc shr add les and cs xchg sbb out ret jmp mov xchg dec (bad) lret out fdivl inc popf pushf pop mov adc pop fiadd add push and cwtl pop bound jmp nop test inc sbb xchg das pop pop sub in add sbb jns cmp lahf cmp adcl sub sahf je (bad) data16 xlat popa and imul cmpsb jno jmp cmp mov hlt xchg ja call adc adcb push or dec js out pop mov mov roll out sub cmpl notl cld fimull out sub sub mov push mov pop pop lahf enter sbb or cmp mov jns (bad) mov and fwait dec push adc lcall push cmp loop and adc mov stos scas outsb sbb mov lock inc (bad) pushf pop fmull popf jbe mov xchg pop fistp push clc push and pop jb xor test inc es lret pop pop sbb in add sbb jns daa xchg lahf or cmp or sub xorl fistpl imul push and rcll cmpsb inc cmp mov push xchg ja call test andb adc or js out pop leave push mov shll out subl push jne adc dec cmp add xchg dec arpl test fisubrl inc out xchg cmc sarb pop pop push enter sbb or into mov dec imul (bad) mov iret fs push and fwait mov adc aam inc jp adc mov and stos insb lock pop imul inc (bad) out fdivl and xchg jbe pop ficom pop and pop jb xor pop jl add lret mov das pop jnp pop dec sti add daa sbb xchg or push in sub sahf je addr16 or js (bad) shlb add fisttpll cwtl testb ss adc mov test clc clc push sub hlt xor mov fstl iret mov sbb push mov fisubrl pop jo out cmpsb mov movsl mov xchg sub push mov sti and add dec or sub subl pushf aad lds fsubp jl daa cmp mov pop sub mov push in dec pop xchg imul cli lods cmp xchg int ret (bad) or and add je dec pop mov cmp jbe,pn sahf adc (bad) mov imul ss or push mov insb add repnz fidivrl in and dec rclb imul fwait jle mov imulb icebp mov sti loope xchg aaa add inc push cmp int jb sbb pop adc std movsb (bad) adc pop (bad) cli call xor xor sbb adc into mov fs or pop out dec popa inc fist daa xchg scas xor je jbe or add cmpsb test mov icebp in stc jecxz fdivs cwtl fistpl xchg fld hlt adc stos cmp imul sti xchg adcb push pop and fdiv divb mov xor mov addr16 pop shll into pop pop sub push mov stos mov cmp or xor cs sub inc push adc repnz push mov outsl xor or jne push mov stos inc inc in in mov cld pop lcall jno testb not sbb adc cmp mov mov jns xchg popa mov inc fdivs cld call arpl mov or rol push or repnz out jmp mov js dec and mov loope sbb outsl mov outsb sub or or cmp mov and dec ffreep mov mov into mov pop ret mov ljmp xchg rorb xlat jb mov push aad dec ret test pop mov dec pop test xchg stos lea ror lcall mov push insb push addr16 mov aas xorl pop push xlat inc mov je inc jno mov es lods cltd add sbb lcall ss dec aad lret call je fs sub inc shrb mov jle dec (bad) xchg push xor jecxz out or bound mov movsl dec jmp pop ljmp loop xlat mov cmc xchg xor movsl fldcw outsb adc cmp or push jns icebp push mov inc jle aam cld inc je lock aas mov jg mov dec imul sar dec fs mov mov inc and sbb js and bound imul scas or mov mov lret orl faddp mov lret into (bad) mov icebp call lahf add (bad) mov lar popa out jge and imul aad pop xchg dec les rorb push cmp mov rcrb ds fwait mov pop insl roll pop push inc icebp mov pusha mov inc pop clc xor and es loop rcll popa loope sti sbb mov movsl mov (bad) test jg or jmp jne ret dec std add in mov cmp xor lcall out (bad) daa out les test sti test jno inc cli adc fidivl (bad) push cmp hlt or iret jp pop pop int3 push dec movsb repnz mov cld cmpb cmp jbe aas out ja mov cmp ja or lods jle cwtl or popa inc push mov xor cmp add cwtl inc sbb mov and and sub dec lahf nop or cmp repz dec xchg inc mov outsb int3 ffreep pop pop push mov das outsb dec scas (bad) hlt int inc pop addps adc xor sub push inc enter gs bound pop push push (bad) pop inc lock xchg adc jmp mov iret push and (bad) aad and pop add push gs push sbb mov push ds scas xor xchg sub cmp add push and add add add add add add and add add or test add add add sbb add add add push add fimul add and add add and test add cmpsb sldt sub add and add inc add add add add add add add add add add data16 add add and cmp shl iret add jae or add push add cmpsb add (bad) dec add cmpsl xor inc mov add shrl daa mov add cli in add (bad) pop add dec add movsb and cmp jle jbe jbe cmp out pop jnp add xchg and cwtl out lods add movsl inc add pop add je inc lret and orl lds and xor add scas hlt ret lods inc add lock icebp push add add add addl lahf les add pop add stos adc add add adc xor or push add add xchg sub mov sarl add cmc jp adc add mov add xchg add mov pop add add imul sar add popa add mov sub add (bad) add xchg or xchg add jge add mov add jge pop nop pop add lods add test add (bad) incl adc add inc add dec add imul in mov add (bad) add bnd add push add mov add jl add stos sbb add mov add mov add lods and inc mov add add mov add push rcll jno mov inc jmp sub sub dec add nop add cmpsl pop add shrl and jnp pop imul or push add pusha add mov sub sub cmp push les (bad) push add add (bad) aaa add bound adc lea or add mov add mov popf add scas xor inc fisubr sbb sub adc add cli aam cmp push add jb add (bad) pop add jns push (bad) jne mov push add jmp add jl add scas sub xor sbb test xchg sub dec add into dec add movsl sbb inc lds popa loopne add mov xchg add rcrb stc mov add cwtl adc and inc add jmp add jle jnp jnp dec lret sbb cmp push test add mov add jo dec mov iret add scas inc add mov sub sub jae out (bad) out add movl int3 data16 js mov xchg add imul fcoms adc and idiv testb mov add inc add jns add cwtl xor push int3 pop add rolb mov sub push mov add mov sub jle sub sbb sbb test mov dec ljmp sub add cmpsb inc add xchg and and sbb sbb xor add lret dec incl pop xchg add dec add push add into mov mov hlt mov sub cmp sbb add fstps xchg add mov or add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add insl add add add add add add add add add add add add add jp aas aas aas jp insl add add add add add add add add add add add (bad) fidivrl aas jp add add add add add add add add xchg xchg pushf fistp mov outsb adc jp insl insl mov add add add add xchg aam (bad) ja mov xor adc cmp cs add add add add add add add mov inc inc xor jp add add add add add rcl or push mov sub test add nop aas jp add add add add (bad) div sarb or int pop les mov insl insl add add add add iret pop (bad) mov mov jle ret pop add sub add add add add jg and dec sub inc int add pop lea add add add push jb xor out test lret rorl mov jle cmp add add add pop out ret pop sbb lret rol push xor pop mov add add mov ret jae jbe rcrl jne ret (bad) mov add add mov mov popa add pusha leave xchg ret ret sbb insl add add xor enter push adc adc adc jne mov push fsubrs add add xor inc lods mov rcrl xor fsubrs add add mov imul popa add fwait fwait arpl xor leave bound mov add add add (bad) in cmpsb lods lods mov lcall pusha leave xchg add add add or fwait xchg inc (bad) (bad) lods sub rol mov xchg add add add loop ljmp and inc (bad) cmc jo pop test dec or add add pop cwtl lret stos ds dec dec jns mov pop test aad add add add add add push mov fdivl enter test pop xchg add add add add daa push cltd je jno,pt lods testb aad ss add add add add add add xchg mov sub lods in in jae jo jl xchg add add add add add stos adc icebp test mov adc add add add add add add add mov arpl push pop add add add add add add add add add inc int3 int3 int3 int3 mov xlat jg add add add add add add add add add add add sub loopne mov mov add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push pop (bad) js add incl add cld add jg add aas clc add pop lock pop loopne add loopne add loopne add rolb pop rolb add add add add add add add add add add add add add add pop loopne add lock pop clc add psubb add cld add pop incb add incl add (bad) clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add add insb add or add outsl push add jno add jo add ja add jo add jne add adc add jne add mov add jl add jg add (bad) or add cltd push add mov add (bad) adc add cltd sbb adc pop add adc push stos sbb adc pop add test sbb sbb add add mov js mov add xchg and and sub add lea add xchg xor and cmp xor add xchg cmp cmp cmp push scas and sbb and sbb add mov and das test add mov add mov add cmpsl xor sub xor xor movsl cmp cmp add mov xor add cmp das mov xor ss add mov add mov add mov inc add inc add stos dec add inc add mov dec add dec add mov add push add inc add inc add inc add pop add pop add inc add dec add inc add dec add dec add add dec add add push add push add pop add pop add add pop add outsb add imul cmpsl outsl add add jo jns jns jnp jg jbe jp sub inc add inc add enter lret dec add inc add rolb rorl les xor dec add rorb xor dec add lret push add rcrb aam add fistpl cmp pusha add loope add dec add dec add dec add dec add push add mov add push add add pop add pop add pop add pop add pop add pop add add imul push shll pop shll push fildll pop lret pop lret jl popa (bad) bound (bad) leave bound push imul int3 insb add imul aam add jge jno jb jb jne jbe ja jae ja jns jns jb jle jns jnp jp jge jl jge inc loop add je dec in jne dec out jns push ljmp push icebp jg pusha loop add xchg xlat mov jno addl jno lea jnp xchg add lcall stc mov fs add addl jne popl jns xchg add lcall mov add rorl sbb xchg mov mov mov mov mov xchg add fstps add loop add loopne add jecxz add in add fidivrl add cmc stos add divb add lods add mov stos out mov add repz movsb std mov add hlt int (bad) cmc les (bad) add jmp add not add sti roll enter (bad) not add cli (bad) add icebp fldl (bad) fiadd loope loopne jecxz loop call (bad) jmp add std in add (bad) lock (bad) incl add mov add or add pop and xor es or pshufw add sub movsl test and pop pop add inc xchg stos rcr fnstcw int3 test pop add add add add xchg test lods test cmpsb lods lret int sahf inc or add add mov lahf lods lods xchg aas push push add add add mov loope dec dec lea insl add add push jns ja inc daa (bad) (bad) std call sahf nop cmp sub add add cwtl jnp jne cmp jns sbb adc add add dec movsb jle jbe imul cmp pop dec adc add (bad) adcl imul in xor dec cmp add add add lcall sti stc mul jp push cmp pop add add add ret scas push jno sti stc out cwtl aaa xor add add iret mov mov mov push enter jae ss add add fwait out mov mov imul xor adc add add add mov mov xchg test inc inc dec sbb add add add mov test inc push and mov ret mov js and add add add add mov in jmp rcll add pushf xchg adcb addr16 add add (bad) incl (bad) (bad) incl incl incl cld add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) incl (bad) (bad) incl sub add and add inc add add add add add add add lods add add pop add add inc add xchg add aam addr16 add incl lods add add leave add popl add data16 add or imul enter decb insl or push outsl push decl jo decl outsl or incl push add add ret add add push outsl or outsl or or (bad) adc (bad) and daa mov ljmp ljmp mov lods and and sbb sbb adc decl insl or add addr16 add fiaddl data16 add or push jne (bad) addr16 ljmp mov decl lcall pop jmp (bad) jmp lcall pusha call push decl dec pushl mov and decl insb or add incl data16 add test add add adc jp jmp mov (bad) cmp push ljmp insl (bad) jle cmp loopne call jecxz call fisttp ljmp push push rcll cmpsl cmp and adc add addr16 add xchg add add add add jnp inc adc sti and sub inc mov lcall arpl jp jge mov (bad) call out lcall call popf lcall cltd call fiaddl decl dec ljmp xchg sub adc adc push push incl addr16 add xchg add add jg or sbbb mov (bad) ds lcall (bad) pushl jp test mov xchg mov test xchg jle cmp jl jle sbb incl loope call xchg decl (bad) jo dec ret dec ljmp jne incl data16 add dec adc and call pop jmp outsb pushl js outsl (bad) jne shrl pop int decl dec incl inc (bad) aas mov inc decl push jmp pushl je sbb decl xchg jno jno dec ret sub (bad) add incl data16 add sldt add push jnp push adc cwtl xor les push int lcall lcallw popa decl push (bad) cmp inc ljmp mov inc pushl lods cmp (bad) cmp xor lcall pop ljmp jno sbb (bad) jg jg push mov pop decl imul add incl add add adc daa (bad) sub dec decl decl push (bad) cmp dec ljmp sarl and xor or incl out fdivr iret in iret dec lock (bad) bnd pushl mov lcall lods and das mov incl inc jmp arpl ja ja jae jae pop (bad) pop pushl scas xor adc incl data16 add enter or add add mov sbb inc decl pop pushl (bad) dec pushl ret aas jmp cmp and adc (bad) (bad) (bad) ljmp repz (bad) in (bad) in incl dec decl cmpsl adc push test daa (bad) ds pop ljmp jmp (bad) incl inc lcall push incl data16 add inc adc sub sbb imul lret movl sub inc jmp les jmp enter xchg and dec mov push (bad) out (bad) out (bad) jmp jmp lcall push decl test sbb and inc lcall pop lcall pop incl inc jmp je incl gs add mov add add cmpsl xor mov xchg ljmp inc ljmp lret sub inc ljmp dec ljmp dec lcall test jmp lods out out (bad) out (bad) call (bad) jmp decl mov call lods sbb call test ljmp mov incl inc call push incl inc ljmp mov call jge incl add add lret push nop sub jmp int3 dec ljmp int ljmp iret dec ljmp int3 dec ljmp leave dec incl pusha pushl mov cs in push push (bad) call (bad) in jecxz loop call mov lcall mov call scas and adc and xor incl adc sub adc add incl gs pop xchg xor push mov ljmp rclb rcll xor lds or adc lahf les (bad) in cli in (bad) in std in (bad) in (bad) in pop out out in in sar aam mov out mov ljmp mov call cmpsl pop jmp mov (bad) cmp and incl push add sbb cmp mov mov pushl (bad) push (bad) cmp pop (bad) cmp mov sbb mov (bad) (bad) push push (bad) in (bad) in jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp jo or sbb sbb mov adc lods pop decl mov incl push incl gs sbb cmp test mov test cwtl ljmp fcoms fisub aas loopne incl insb jmp mov ljmp jl call in (bad) cld (bad) cld lcall jmp out out jecxz jecxz fdivrp fdivrp in jecxz and decl mov call mov call stos sbb pop stos sbb jmp lods and adc mov incl imul push mov cmp test xchg (bad) mov fbld loop,pt incl insb incl decl je and (bad) cmp fnop (bad) repz jmp jecxz jmp jmp (bad) ljmp jmp (bad) lcall das call mov call scas sbb call test sbb push movsl adc or push incl data16 and cmp dec int3 addr16 (bad) call (bad) cmp imul dec jmp decl je dec icebp jbe and dec jmp mul (bad) out (bad) out (bad) in (bad) jmp mov int lcall ret cmp and sub adc and adc adc push cmpsb adc or or add push incb add add add test dec pushl cld fcos inc in je dec out js dec lock dec out jnp dec out js dec in je sub jecxz out std out call cld xlat decl (bad) jmp inc ljmp movb mov sub adc adc decl cmpsl adc pop xchg or add outsb pop iret add push and scas inc fstl jne idiv cmc jmp repz dec cmc cmp dec icebp jge dec lock incl ljmp scas inc (bad) jle xchg ljmp (bad) ljmp rorb das into dec ljmp movl sbb sub lcall mov call lods sbb incl xchg incl add add mov push and test (bad) (bad) (bad) lcall sti test dec stc test push hlt cmp inc jmp jecxz call pop pushl push pushl push ljmp into dec ljmp movl adc adc dec lds push lods push decl cwtl adc or incl jne flds push or and push ljmp (bad) (bad) (bad) mov sti nop incl jp dec lock inc ljmp cmp fstps aam ljmp cmp push mov pop pushl lcall mov decl adc decl jns cld push ja inc push rolb nop sub pop lcall (bad) (bad) push push lcall lock jecxz jo aaa loop ljmp push ljmp aad ljmp rorl iret dec decl popa lcall out adc mov sbb push mov decl jge decl jnp jno add add (bad) pop jmp mov lret sti xlat lcall (bad) push push inc cli int3 jmp out mov lcall clc (bad) (bad) mov fistpll sbb and jp sbb or add sub mov pop lcall jle cwtl jecxz inc clc into (bad) (bad) fdivrp loope loop into (bad) sar mov fnstsw sub scas sub adc and jne sbb add add cltd add sub pop dec jo mov ret dec jmp mov dec jmp mov cmp pop cmpsl xor adc nop sub adc es adc sbb sub dec inc and inc lret aas negl cmp sbb xor pop xchg xor adc and add pop jecxz add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc pop (bad) incl add incb add cld add jg add pop lock pop loopne add add pop rolb pop rolb add add add add add add add add add add add add add add add add add add add add add add pop lock pop clc add psubb add incb add incl add addb jmp add (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add jb imul add add push add pop push add inc add incl add dec add ss add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add sbb (bad) (bad) (bad) incl add add dec add add add dec add dec add dec add add add add add add jo inc add (bad) (bad) incl add add dec add add add dec add dec add dec add add add add add add and inc add (bad) (bad) incl add add dec add (bad) (bad) incl add add sbb dec add sbb dec add sbb dec add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl mov xor lea mov mov mov call mov push push push call mov lea call push push call lea call push jmp testb je lea call lea call ret lea call ret mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor cmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jne push push call mov mov lea push push call fnclex cmp jge push push push push call cmpw je call lea push push mov movl call mov mov lea call lea call cmp jne push push call mov mov push push call fnclex cmp jge push push push push call mov push call mov lea call lea push lea push push call mov add cmp jne push push call mov mov lea push push call fnclex cmp jge push push push push call mov mov lea lea mov mov movl call cmp jne push push call mov mov push push call fnclex cmp jge push push push push call call mov lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call mov lea push lea push lea push movl movl call mov lea call call push lea push call mov push call lea call lea push lea push movl movl call test jne mov test jne push push call mov push push call push push call fstp lea push call lea lea call mov mov movl add push jo push mov call cmp jne call mov cmp jle mov push push push lea push movl movl call add push lea push call lea mov call test jne mov cltd and add sar mov mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov lea lea mov mov call mov push push lea push mov mov call push call mov call mov mov mov test jne push push call mov push lea push call push push lea push call push call add fwait push jmp lea push lea push push call add lea call lea push lea push push call add ret mov lea call lea call lea call lea call lea call lea call lea call ret mov pop pop mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop nop xor ret nop nop nop nop nop nop nop nop nop nop nop nop nop sahf sahf sahf sahf insb mov add (bad) (bad) (bad) (bad) (bad) (bad) ljmp add adc add add test or mov mov add mov add mov add mov add mov or cs or dec mov or push add xorb jle or mov or scas mov or into mov or out mov or pop add andb or cs add push mov add insb mov add mov or mov or add add or (bad) mov or lods add andb idivb or adc or and or inc mov or jb or jl or sbb add xchg mov add stos mov or add add dec push push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add bound outsb add mov pop pop jbe popa inc jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add push imul xor incl pop pop jbe popa dec bound gs cmpsl add fs imul imul pop jbe popa dec bound gs fs data16 pop imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa dec bound popa jb or inc insb insb inc jne arpl outsb inc popa insb insb add push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa push bound outsb add pop inc dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add mov pop pop jbe popa inc jb gs je dec imul pop popa fs imul xor add stos add fs imul cwtl add jbe popa push popa jb jae dec gs add jbe popa dec xor popa jb add add jbe popa dec outsb push je inc add pop pop jbe popa push popa jb fs add jbe popa dec popa je dec gs inc popa insb insb add fild pop pop jbe popa dec popa je dec gs inc popa insb insb dec add jg pop pop jbe popa push popa jb gs bound fs data16 push add dec popa je outsb add add jbe popa push je dec outsl jbe add mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound add 