xchg mov jb push mov jb push jb inc mov jb mov mov jb int jb add jb xchg mov jb fwait mov jb mov mov jb xchg mov jb inc mov jb add jb xchg mov jb mov mov jb insb mov jb add jb xor movsb jb jne jb xchg mov jb jne jb out mov jb frstor jb add add pushf sub add pop inc add add add pop inc add add add adc add add stc sbb add add add (bad) sbb add add add add add inc sbb add add add add add fstps inc add add add add add add dec sbb add add add add add mov add add add add add and add add add add add add movsl sbb add add add add add add adc inc add add add add add add insl sbb add add add add add pop push inc add add add add add add sbbl add add add add add add inc add add add add add add jnp inc add add add add add add lcall inc add add add add add add pop and add add add add add mov add add add add add sbb inc add add add add add add jp inc add add add add add add fsubl inc add add add add add add cmp add add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add inc add add add add sub pop add insl inc nop lock sub add add add add add cmp jns outsl outsb gs imul add add dec xor add test dec fdivrs inc xor negb insl and mov fsubrl and cltd iretw adc pusha rcll dec add add add add add fs imul or push outsb popa imul outsb xor sbb add and and add popa imul outsb xor xor out add cmpsl or add or add add push inc xor add or add add fcoml add lock add (bad) decl add add add add add add add add pop inc add add inc add add jl add mov add mov add dec bound push jns fs outsb fs add dec jns outsl outsb gs imul add add enter add add adc add and pusha add or inc add adc add inc add add add add shrb in xor negb add add add add add add add push add add sbb dec outsl sbb inc jae pop add add add add lahf stos add add add lods pusha inc add add pusha loopne pop adc popa dec sahf xchg call dec add add add add fild add sbb inc add add add add xchg sub mov mov das stc call add add add add push add inc push add add add fs inc add add push add add mov mov xchg addl add add add add add std add add aam inc add add mov clc xlat mov xor inc repz ficoml add push add xor add add add lock inc add add add add pop xorl je inc fwait inc add push add add push add cmp add add inc add add push add add sub pop pop inc rorl sti popf mov pop add add push add repz add loopne inc add add add addr16 jno xchg push xlat stc sbb add or add add add out add add add clc das inc add add add add (bad) sbb iret inc mov mov push les add add add push add sbb add add add aam inc add add push add add in in pop dec mov mov or add add add incl add aam inc add add add add sbb pop add add pop inc add add add add add inc add add add push inc add add add add add add add add push inc add add add adc add mov add cmp inc add add add adc add add add add add inc add add add inc add add add add add add add add adc pop add add adc pop add add add inc adc pop add add adc pop add add add pop adc pop add add adc pop add add adc pop add add add add inc add add add cmovno pop add add add add add add add cmovno pop add add add fs inc add add add push inc add add add or add jl inc add add add add lock add add add add push or add add add inc add add add or pop add add inc add add add or pop add add or pop add add add add or pop add add or pop add add add pusha or pop add add or pop add add or pop add add inc add add add inc add add add pop inc add add add add xor inc add add add push inc add add add add add add add add inc add add add add add mov add inc add add hlt add add add add add add inc add add add inc add add add add pop add add inc add add add add pop add add add pop add add add add add add add add pop add add add add add add add add pop add add add pop add add add add add pop add add incl pop add add add dec incl pop add add inc add add add add pop incb pop add add incb pop add add std inc add add add add add add std inc add add add cld inc add add add add pop cld inc add add add cld inc add add add sti inc add add add add add add inc add add add cli inc add add add add add add add add cli inc add add add add push add add inc add add add clc inc add add add inc add add add clc inc add add add testl mov add add inc add add add testl mov inc add add add inc add add add inc add add add cmc inc add add add add add add cmc inc add add add hlt inc add add add add add inc add add add inc add add add add add inc add add add inc add add add repnz add add add add cmp inc add add add icebp inc add add add add pop icebp inc add add add inc add add add add js inc add add add inc add add add out inc add add add add add add add add out inc add add add add add add add add inc add add add in inc add add add inc add add add add fsubr inc add add add add add inc add add add jmp add add add add pop jmp add add add jmp add add add ljmp jl inc add add add ljmp loopne inc add add add add add add add add call add mov add add inc add add add call add int3 out add add add add and inc add add add out add add add add add inc add add add out add add add add fs add add add add fsub inc add add add add cmp inc add add add jecxz add add add jecxz add add add add add add jecxz add add add loop add add add add add loop add add add inc add add add add insb loope add add add loope add add add add add add add add loopne add add add fild pop add add add inc fild pop add add fiadd pop add add add add inc add add add inc add add add fldl pop add add add add add add in inc add add add add add add add add inc add add add add je inc add add add fildl pop add add add js inc add add add fiaddl pop add add flds pop add add add pop flds pop add add inc add add add fadds pop add add add add add fadds pop add add xlat inc add add add add add add add add xlat inc add add add add insb (bad) inc add add add inc add add add aad add add add add add add add add aam add add add add push aam add add add aam add add add add add add add add roll pop add add rolb pop add add add xor inc add add add roll pop add add inc add add add roll pop add add rolb add add or inc add add add or add (bad) (bad) incl add add add xor add add add add add add iret inc add add add add add add add add add inc add add add add mov push es add inc add add add add add add add adc xor add add add push add add xorb jnp push add add adc cmp add add add or add add xorb jnp or add add add add add or add clc xorb jnp or add inc add add add add add adc add clc xorb jnp adc add inc add add add add add add clc xorb jnp add add inc add add add add add sbb add clc xorb jnp sbb add inc add add add add add add add xorb jnp adc add inc add add add add add push add add xorb jnp push add add adc push add add add add add add xorb jnp adc add inc add add add add add adc add clc xorb jnp adc add inc add add add add add add add xorb jnp add add inc add add add add add or add clc xorb jnp or add inc add add add add add add add xorb jnp or add inc add add add add add adc add clc xorb jnp adc add inc add add add add add add add xorb jnp add add inc add add add add add sbb add clc xorb jnp sbb add inc add add add add add add add xorb jnp add add inc add add add add add add add add xorb jnp add add add add add add add add xorb jbe pop add add adc addb add add add add add xorb jbe push add add adc test add add add sbb add clc xorb jbe sbb add inc add add add add add clc xorb jbe sbb add inc add add add sbb add clc xorb jbe sbb add inc add add add add add add xorb jbe add inc add rolb inc add add add rolb (bad) (bad) (bad) incl add add add add add xorb inc add (bad) (bad) lcall sub and sub aas sub dec sub pop sub data16 jae inc add sub lcall add inc add sub fldt inc add sub cmc sub add inc add sub sbb inc add sub sub inc sub push sub pop sub push inc add inc add inc add sub mov sub shrb inc add sub in sub stc sub push sub adc inc add sub sub sub inc sub push sub popa sub outsb sub jnp inc add sub mov sub mov sub (bad) sub jecxz inc add sub std sub or inc add sub and inc add sub sub dec sub add add push es add and xor inc add adc adc sbb add add incl add imul add subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp add add or inc add add add (bad) incl add add inc add add add add add sub add add fs add add add sub add add shrb inc add add add sub sbb sub add mov push xor pop jp add add add push jbe je inc add adc xor add nop sbb adc add pop xor clc xorb inc add add add adc cmp add nop sbb sbb add mov inc add xorb inc add add add adc cmp add nop sbb adc add adc inc add xorb inc add add add adc inc add add add add add xorb inc add add add adc inc add add add add xor clc xorb inc add add add adc dec add add add add inc add xorb inc add add add adc dec add add add add xorb inc add add add adc push add add add add xor clc xorb inc add add add add add add xor clc xorb inc add add inc add add add nop sbb add add xchg xor clc xorb inc add add add adc pop add add add add xor clc xorb inc add add add adc pusha add add add add add xorb inc add add add adc add add add add xorb inc add add add adc push sbb adc add add add add je push add add adc insb add add add add inc add xorb inc add add add adc jo add nop sbb pop add add je test inc add add add adc je add nop sbb or add sbb inc add xorb inc add add add adc js add nop sbb adc add je inc add xorb inc add add inc add add add add add ss add xorb inc add add inc add add sbb or add sub inc add xorb inc add add add adc test add nop sbb add add mov inc add xorb inc add add add adc mov add nop sbb sldt add aaa inc add xorb inc add add add adc mov add nop sbb push add add inc add xorb inc add add add adc nop add add add add je loopne inc add add add adc xchg add add add add cmp clc xorb inc add add add adc cwtl add add add add add xorb inc add add add inc add add add xorb inc add add add adc mov sbb sbb add or inc add xorb inc add add inc add add inc add (bad) (bad) incl add add add add inc add xorb inc add (bad) (bad) incl add add sub push sub xor inc add adc adc clc sub push sub xor inc add adc adc and add inc add adc cmp inc add adc dec sub add inc add adc cmp inc add adc jo inc add inc add adc cmp inc add adc cwtl sub add inc add adc cmp inc add adc shrb push sub xor inc add adc adc call sub xor inc add adc adc adc inc add adc cmp inc add adc cmp inc add adc cmp inc add adc pusha sub inc add adc cmp inc add adc mov inc add adc cmp inc add adc mov inc add inc add adc cmp inc add adc fsubrs inc add adc cmp inc add adc add inc add inc add adc cmp inc add adc sub inc add inc add adc cmp inc add adc push cs add inc add adc cmp inc add adc js inc add inc add adc cmp inc add adc mov sub xor inc add adc adc enter push sub xor inc add adc adc lock add inc add adc cmp inc add adc sbb inc add inc add adc cmp inc add adc inc das inc add inc add adc cmp inc add adc push sub xor inc add adc adc nop das inc add inc add adc cmp inc add adc mov sub xor inc add adc adc loopne inc add inc add adc cmp inc add adc or inc add inc add adc cmp inc add adc xor inc add inc add adc cmp inc add adc add add or inc add add add (bad) incl add add inc add inc add add add add add add add add push inc add add add add add add add add add inc add cmp add mov push inc inc add inc add add add add push inc add inc add adc xor add nop sbb or add add inc add xorb inc add add add adc cmp add nop sbb adc add pusha inc inc add xorb inc add add inc add add add nop sbb sldt add je fs inc add add add adc inc add add add add inc inc add xorb inc add add add adc inc add add add add add xorb inc add add add add nop sbb or add rolb add xorb inc add add add adc dec add add add add inc add xorb inc add add add adc push add add add add xorb inc add add add add add add inc inc add xorb inc add add add adc pop add add add add inc add xorb inc add add inc add add add add add je mov add add adc pusha add add add add inc inc add xorb inc add add add adc add add add add add xorb inc add add add add nop sbb adc add mov inc add xorb inc add add add adc insb add add add add je call add add adc jo add nop sbb sbb add push xorb inc add add inc add add add add add inc inc add xorb inc add add add adc js add nop sbb sbb add and add xorb inc add add add adc jl add nop sbb push add add add xorb inc add add add adc addb add add add inc inc add xorb inc add add inc add add inc add add add inc add xorb inc add add add adc mov add nop sbb add add nop inc inc add xorb inc add add add adc mov add nop sbb sbb add in inc inc add xorb inc add add add adc nop add add add add inc add xorb inc add add add adc xchg add add add add je insb pop inc add add add pop add rolb (bad) (bad) (bad) incl dec inc add xorb inc add (bad) (bad) incl adc pushf add add add add je js inc add add add adc mov sbb add add lock inc add xorb inc add add add adc movsb add add add add add xorb inc add add add add add add cmp xor inc add adc adc movsb cmp cld cmp xor inc add adc adc int3 cmp cld cmp xor inc add adc adc hlt cmp cld cmp xor inc add adc adc sbb inc add cmp xor inc add adc adc inc cmp add cmp xor inc add adc adc insb cmp add cmp xor inc add adc adc xchg cmp add cmp xor inc add adc adc mov cmp xor inc add adc adc in inc add cmp xor inc add adc adc or inc add cmp xor inc add adc adc xor inc add cmp xor inc add adc adc pop cmp inc add adc cmp inc add adc test inc add adc cmp inc add adc lods cmp inc add adc cmp inc add adc aam inc add cmp xor inc add adc adc cld cmp inc add adc cmp inc add adc and inc add cmp xor inc add adc adc dec ds add cmp xor inc add adc adc je inc add cmp xor inc add adc adc pushf ds add cmp xor inc add adc adc les inc add cmp xor inc add adc adc in ds add cmp xor inc add adc adc adc inc add cmp xor inc add adc adc cmp inc add cmp xor inc add adc adc fs inc add cmp xor inc add adc adc mov inc add cmp xor inc add adc adc mov inc add cmp xor inc add adc adc fdivrl inc add cmp xor inc add adc adc add or or inc add add add add (bad) (bad) incl add add leave inc add add add jne and add add add add and add add add dec inc add add add inc add dec inc add add add push inc add add add sbb inc add adc xor add nop sbb or add mov inc add xorb inc add add add adc cmp add nop sbb add add or inc add xorb inc add add add adc cmp add nop sbb push add add inc add xorb inc add add add adc inc add add add add push inc add xorb inc add add add adc inc add add add add push inc add xorb inc add add add adc dec add add add add add xorb inc add add add adc dec add add add add push inc add xorb inc add add add add nop sbb or add add add add inc add xorb inc add add add add add add xorb inc add add add adc pop add add add add push inc add xorb inc add add add adc pop add add add add inc add xorb inc add add add adc pusha add add add add je int3 and add inc add add add add add push inc add xorb inc add add inc add add add nop sbb sbb add pop push inc add xorb inc add add add adc insb add add add add xorb inc add add add adc jo add nop sbb push add add je add inc add add add adc je add nop sbb or add jo inc add xorb inc add add add adc js add nop sbb add add add add add push inc add xorb inc add add add add add add push inc add xorb inc add add inc add add sbb push add add je xor inc add add add adc test add nop sbb pop add add push inc add xorb inc add add add adc mov add nop sbb add add cmp inc add xorb inc add add add adc mov add nop sbb adc add cwtl push inc add xorb inc add add add adc nop add add add add push inc add xorb inc add add add adc xchg add add add add inc add xorb inc add add add adc cwtl add add add add je jl inc add add add adc pushf add add add add pop inc add xorb inc add add inc add add rolb (bad) (bad) (bad) incl add add add add add xorb inc add (bad) (bad) incl adc movsb add add add add pop inc add xorb inc add add add add sub add adc cmp inc add adc push dec inc add adc cmp inc add adc js inc add adc cmp inc add adc mov dec inc add adc cmp inc add adc enter test inc add adc cmp inc add adc lock inc add adc cmp inc add adc sbb test inc add adc cmp inc add adc inc dec inc add adc cmp inc add adc push dec inc add adc cmp inc add adc nop dec inc add adc cmp inc add adc mov dec inc add adc cmp inc add adc loopne inc add adc cmp inc add adc or add adc cmp inc add adc xor add adc cmp inc add adc pop dec inc add adc cmp inc add adc orb test inc add adc cmp inc add adc test inc add adc cmp inc add adc rorb add adc cmp inc add adc clc dec inc add adc cmp inc add adc and add adc cmp inc add adc dec dec inc add adc cmp inc add adc jo inc add adc cmp inc add adc cwtl dec inc add adc cmp inc add adc rorb test inc add adc cmp inc add adc call dec inc add adc cmp inc add adc adc add adc cmp inc add adc cmp add adc cmp inc add adc pusha dec inc add adc cmp inc add adc mov add adc cmp inc add adc add add add add add (bad) incl add add add add add add add add pop inc add add add add add pop inc add add add pop inc add add add pop inc add pop inc add add add add add add add inc add pop inc add adc xor add nop sbb add add pop pop inc add xorb inc add add inc add add add add add add xorb inc add add add adc cmp add nop sbb sbb add adc inc add xorb inc add add add adc inc add add add add inc add xorb inc add add add adc inc add add add add pusha inc add xorb inc add add inc add add add nop sbb add add sub add xorb inc add add add adc dec add add add add je xor inc add add add adc push add add add add popa inc add xorb inc add add add adc push add add add add inc add xorb inc add add add add nop sbb or add cwtl bound clc xorb inc add add add adc pop add add add add bound clc xorb inc add add add adc pusha add add add add inc add xorb inc add add add adc add add add add je andb add add add adc push sbb add add or clc xorb inc add add add adc insb add add add add add xorb inc add add add adc jo add nop sbb push add add fs add xorb inc add add add adc je add nop sbb sbb add sbb inc add xorb inc add add inc add add add nop sbb push add add inc add xorb inc add add add adc jl add nop sbb or add aam inc add xorb inc add add add adc addb add add add inc add xorb inc add add add inc add add mov add xorb inc add add inc add add sbb pop add add inc add xorb inc add add add adc mov add nop sbb sbb add inc addr16 add xorb inc add add add adc nop add add add add xorb inc add add add adc xchg add add add add addr16 add xorb inc add add add pop add rolb (bad) (bad) (bad) incl add add add add inc add xorb inc add (bad) (bad) incl adc pushf add add add add push je inc and add add inc add add sbb adc add add add add inc add xorb inc add add add inc add add add je pop and adc add add add aam inc add add adc cmp inc add adc cld pop inc add add adc cmp inc add adc and inc add add adc cmp inc add adc dec pop inc add add adc cmp inc add adc je inc add add adc cmp inc add adc pushf pop inc add add adc cmp inc add adc les add add adc cmp inc add adc in pop inc add add adc cmp inc add adc adc inc add add adc cmp inc add adc cmp inc add add adc cmp inc add adc fs inc add add adc cmp inc add adc mov push pop inc add adc cmp inc add adc mov inc add add adc cmp inc add adc fcompl push pop inc add adc cmp inc add adc add inc add add adc cmp inc add adc sub inc add add adc cmp inc add adc push pop inc add add adc cmp inc add adc jl inc add add adc cmp inc add adc movsb pop inc add add adc cmp inc add adc int3 pop inc add add adc cmp inc add adc hlt pop inc add add adc cmp inc add adc sbb inc add add adc cmp inc add adc inc pop inc add add adc cmp inc add adc insb pop inc add add adc cmp inc add adc xchg pop inc add add adc cmp inc add adc mov pop inc add adc cmp inc add adc in inc add add adc cmp inc add adc or inc add add adc cmp inc add adc xor inc add add adc cmp inc add adc add push add enter add add add (bad) (bad) incl add add add add add gs js inc add add add add add inc add add add add add add push add add add outsl inc add inc add add add ja nop and mov add add add nop sbb add add or add xorb inc add add add adc cmp add nop sbb adc add outsl inc add xorb inc add add add adc cmp add nop sbb adc add shrb clc xorb inc add add add adc inc add add add add inc add xorb inc add add add adc inc add add add add inc add xorb inc add add add adc dec add add add add jo add xorb inc add add add adc dec add add add add jno add xorb inc add add inc add add add nop sbb or add mov add xorb inc add add add adc push add add add add jno add xorb inc add add inc add add add nop sbb push add add add xorb inc add add add adc pop add add add add xorb inc add add add adc pusha add add add add jb add xorb inc add add add adc add add add add inc add xorb inc add add add adc push sbb sbb add mov inc add xorb inc add add add adc insb add add add add je add xorb inc add add add adc jo add nop sbb adc add insb je add xorb inc add add add adc je add nop sbb or add add add add je add xorb inc add add add add nop sbb sldt add je mov add add adc jl add nop sbb pop add add xorb inc add add add adc addb add add add jne add xorb inc add add inc add add inc add add add jbe add xorb inc add add add adc mov add nop sbb or add xchg jbe add xorb inc add add add adc mov add nop sbb pop add add jbe add xorb inc add add add adc nop add add add add add xorb inc add add add adc xchg add add add add xorb inc add add add adc cwtl add add add add inc add xorb inc add add add inc add add add add add inc add xorb inc add add add sbb or add mov xorb inc add add inc add add inc add (bad) (bad) incl add add add add jns add xorb inc add (bad) (bad) incl add add push add adc cmp inc add adc test inc add push add adc cmp inc add adc shrb add push add adc cmp inc add adc clc push add push add adc cmp inc add adc and add push add adc cmp inc add adc dec imul push add adc cmp inc add adc jo inc add push add adc cmp inc add adc cwtl imul push add adc cmp inc add adc shrb add add adc cmp inc add adc call push add adc cmp inc add adc adc add add adc cmp inc add adc cmp add add adc cmp inc add adc pusha insb inc add push add adc cmp inc add adc mov add add adc cmp inc add adc mov inc add push add adc cmp inc add adc fsubrs add add adc cmp inc add adc add add push add adc cmp inc add adc sub add push add adc cmp inc add adc push insl inc add push add adc cmp inc add adc js inc add push add adc cmp inc add adc mov push add adc cmp inc add adc enter add add adc cmp inc add adc lock inc add push add adc cmp inc add adc sbb add push add adc cmp inc add adc inc outsb inc add push add adc cmp inc add adc push push add adc cmp inc add adc nop outsb inc add push add adc cmp inc add adc mov push add adc cmp inc add adc loopne inc add push add adc cmp inc add adc add add or inc add add add or (bad) incl add add inc add add add fs and inc add add add inc add add add inc add add add inc add add add jp add jp add add add inc add add add sbb sbbb add adc xor add nop sbb push add add je mov add add adc cmp add nop sbb or add add add add jg add xorb inc add add add add nop sbb or add insb jg add xorb inc add add add adc inc add add add add jg add xorb inc add add inc add add add add add inc add xorb inc add add inc add add add nop sbb sbb add addb add sbb sbb add inc add add add add add addb xorb inc add add add adc push add add add add addl in sbb push add add adc push add add add add je mov inc add add add adc pop add add add add addl xchg pop inc add add add adc pop add add add add add xorb inc add add add adc pusha add add add add xorb inc add add add adc add add add add inc add xorb inc add add add adc push sbb adc add pusha addl xorb inc add add add adc insb add add add add je adc inc add add add adc jo add nop sbb sbb add sbb add inc add add add adc je add nop sbb add add je inc add xorb inc add add add adc js add nop sbb add add add add add test clc xorb inc add add add add add add je inc add pop add add adc addb add add add xorb inc add add add adc test add nop sbb sbb add in inc add xorb inc add add add adc mov add nop sbb sbb add inc xchg clc xorb inc add add inc add add inc add add add je push stc inc add add add adc nop add add add add xchg clc xorb inc add add add adc xchg add add add add add xorb inc add add add sbb sldt add xorb inc add add add pop add inc add (bad) (bad) incl add add add add inc add xorb inc add (bad) (bad) incl adc mov sbb or add mov xorb inc add add inc add add inc add add add mov clc xorb inc add add add add add inc add inc add adc adc push jp add inc add adc adc jl inc add inc add adc adc movsb jp add inc add adc adc int3 jp add inc add adc adc hlt jp add inc add adc adc sbb inc add inc add adc adc inc jnp add inc add adc adc insb jnp add inc add adc adc xchg jnp add inc add adc adc mov jns add adc cmp inc add adc in inc add inc add adc adc or inc add inc add adc adc xor inc add inc add adc adc pop jl add inc add adc adc test lods jns add adc cmp inc add adc lods jl add inc add adc adc aam inc add inc add adc adc cld jl add inc add adc adc and inc add inc add adc adc dec jge add inc add adc adc je inc add inc add adc adc pushf jge add inc add adc adc les add inc add adc adc in jge add inc add adc adc adc inc add inc add adc adc cmp inc add inc add adc adc fs add inc add adc adc mov add inc add adc adc add pop add enter add add (bad) incl add add inc add add add data16 rorb add and add add rorb add fmuls add aam inc add mov add mov push mov inc push inc add add add pop ja je inc add adc xor add nop sbb adc add pusha mov clc xorb inc add add add adc cmp add nop sbb push add add je test inc add add add adc cmp add nop sbb sbb add sbb je mov inc add add inc add add add nop sbb push add add add xorb inc add add add adc inc add add add add popl clc xorb inc add add add add nop sbb sbb add sub inc add xorb inc add add add adc dec add add add add xorb inc add add add adc push add add add add nop inc add xorb inc add add add adc push add add add add inc add xorb inc add add add adc pop add add add add je sbb inc add add add adc pop add add add add xchg inc add xorb inc add add add adc pusha add add add add add xorb inc add add inc add add add add add xorb inc add add add adc push sbb add add or inc add xorb inc add add add adc insb add add add add inc add xorb inc add add inc add add add nop sbb adc add les je pop and add add add adc je add nop sbb sldt add xchg inc add xorb inc add add add adc js add nop sbb adc add jl inc add xorb inc add add add adc jl add nop sbb sbb add fcoms add add add adc addb add add add je mov add add add adc test add nop sbb pop add add xorb inc add add add adc mov add nop sbb adc add add add add xchg inc add xorb inc add add add inc add add add inc add xorb inc add add add adc nop add add add add je mov add add adc xchg add add add add xchg inc add xorb inc add add add sbb add add pop xchg inc add xorb inc add add add pop add inc add (bad) (bad) incl add add add add xorb inc add (bad) (bad) incl adc mov sbb pop add add add xorb inc add add add adc movsb add add add add xorb inc add add add add fmuls inc add adc cmp inc add adc add inc add adc cmp inc add adc sub inc add adc cmp inc add adc push mov pop mov xor inc add adc adc js inc add inc add adc cmp inc add adc mov mov xor inc add adc adc enter pop mov xor inc add adc adc lock pop mov xor inc add adc adc sbb inc add adc cmp inc add adc inc mov pop mov xor inc add adc adc push mov xor inc add adc adc nop mov pop mov xor inc add adc adc mov mov xor inc add adc adc loopne inc add inc add adc cmp inc add adc or add adc cmp inc add adc xor add adc cmp inc add adc pop mov pop mov xor inc add adc adc orb xor inc add adc adc test inc add inc add adc cmp inc add adc rorb add adc cmp inc add adc clc mov pop mov xor inc add adc adc and inc add adc cmp inc add adc dec lea pop mov xor inc add adc adc jo inc add inc add adc cmp inc add adc cwtl lea pop mov xor inc add adc adc rorb add adc cmp inc add adc call mov xor inc add adc adc adc inc add adc cmp inc add adc cmp inc add adc cmp inc add adc add or or inc add add add inc add (bad) (bad) incl add add inc add add jo jne jl inc add add add es add add add add add add add sbbb add mov push sahf inc add inc add add add add es add es add adc xor add nop sbb add add or inc add xorb inc add add inc add add add add add add inc add xorb inc add add add adc cmp add nop sbb sbb add les je or inc add add add adc inc add add add add lahf inc add xorb inc add add inc add add add add add add xorb inc add add add adc dec add add add add lahf inc add xorb inc add add add adc dec add add add add inc add xorb inc add add add adc push add add add add xorb inc add add add adc push add add add add mov je pop daa inc add add add adc pop add add add add inc add xorb inc add add add adc pop add add add add je jo inc add add add adc pusha add add add add mov je js inc add add add adc add add add add add xorb inc add add add add nop sbb add add mov xorb inc add add add adc insb add add add add inc add xorb inc add add add adc jo add nop sbb or add jo inc add xorb inc add add add adc je add nop sbb add add add add add mov je shlb add add add add nop sbb sbb add sub add daa inc add add add adc jl add nop sbb adc add test add daa inc add add inc add add sbb add add loopne inc add xorb inc add add add adc test add nop sbb add add cmp inc add xorb inc add add add adc mov add nop sbb adc add add add add xorb inc add add add inc add add add movsl inc add xorb inc add add add adc nop add add add add inc add xorb inc add add inc add add inc add add add je xor inc add add add adc cwtl add add add add cmpsl inc add xorb inc add add add adc pushf add add add add add xorb inc add add add adc mov sbb pop add add cmpsl inc add xorb inc add add add pop add inc add (bad) (bad) incl add add add add inc add xorb inc add (bad) (bad) incl add add inc add adc cmp inc add adc lods cltd inc add inc add adc cmp inc add adc aam inc add inc add adc cmp inc add adc cld cltd inc add inc add adc cmp inc add adc and inc add inc add adc cmp inc add adc dec lcall xor inc add adc adc je inc add inc add adc cmp inc add adc pushf lcall xor inc add adc adc les inc add adc cmp inc add adc in lcall xor inc add adc adc adc inc add inc add adc cmp inc add adc cmp inc add inc add adc cmp inc add adc fs inc add inc add adc cmp inc add adc mov inc add adc cmp inc add adc mov inc add inc add adc cmp inc add adc fcompl inc add adc cmp inc add adc add inc add inc add adc cmp inc add adc sub inc add inc add adc cmp inc add adc push pushf inc add inc add adc cmp inc add adc jl inc add inc add adc cmp inc add adc movsb pushf inc add inc add adc cmp inc add adc int3 pushf inc add inc add adc cmp inc add adc hlt pushf inc add inc add adc cmp inc add adc sbb inc add inc add adc cmp inc add adc inc popf inc add inc add adc cmp inc add adc insb popf inc add inc add adc cmp inc add adc xchg popf inc add inc add adc cmp inc add adc mov cltd inc add adc cmp inc add adc in inc add inc add adc cmp inc add adc add add or inc add add add add (bad) (bad) incl add add enter xor add add jne sub add cmp inc add add add test add xor add sub inc add test mov push lods inc add add add add mov dec sbb add add adc xor add nop sbb pop add add xorb inc add add add adc cmp add nop sbb push add add inc add xorb inc add add add adc cmp add nop sbb or add jo inc add xorb inc add add add adc inc add add add add scas inc add xorb inc add add inc add add add add add scas inc add xorb inc add add add adc dec add add add add je mov inc add add add adc dec add add add add scas inc add xorb inc add add add add nop sbb adc add add add add inc add xorb inc add add add add add add xorb inc add add add adc pop add add add add mov add xorb inc add add inc add add add add add inc add xorb inc add add inc add add add nop sbb adc add lods mov add xorb inc add add add adc add add add add mov add xorb inc add add inc add add add nop sbb or add fs add xorb inc add add add adc insb add add add add mov add xorb inc add add add adc jo add nop sbb add add sbb inc add xorb inc add add add adc je add nop sbb add add js inc add xorb inc add add add adc js add nop sbb sbb add aam inc add xorb inc add add add adc jl add nop sbb or add xor add add add add adc addb add add add je sbbb add adc test add nop sbb or add add add add mov add xorb inc add add add sbb adc add inc mov add xorb inc add add add adc mov add nop sbb adc add mov xorb inc add add add adc nop add add add add mov add xorb inc add add add adc xchg add add add add inc add xorb inc add add add adc cwtl add add add add je in inc add add add adc pushf add add add add mov add xorb inc add add add adc mov sbb sbb add insb mov add xorb inc add add add pop add inc add (bad) (bad) incl add add add add mov add xorb inc add (bad) (bad) incl add add test inc add adc cmp inc add adc pop test inc add adc cmp inc add adc subb add adc cmp inc add adc test inc add adc cmp inc add adc shrb inc add adc cmp inc add adc clc test inc add adc cmp inc add adc and inc add adc cmp inc add adc dec stos inc add adc cmp inc add adc jo inc add adc cmp inc add adc cwtl stos inc add adc cmp inc add adc shrb add adc cmp inc add adc call test add adc cmp inc add adc adc inc add adc cmp inc add adc cmp inc add adc cmp inc add adc pusha stos inc add adc cmp inc add adc mov inc add adc cmp inc add adc mov inc add adc cmp inc add adc fsubrs inc add adc cmp inc add adc add add adc cmp inc add adc sub add adc cmp inc add adc push lods inc add adc cmp inc add adc js inc add adc cmp inc add adc mov test add adc cmp inc add adc enter mov inc add adc cmp inc add adc lock inc add adc cmp inc add adc sbb inc add adc cmp inc add adc inc lods inc add adc cmp inc add adc push test add adc cmp inc add adc nop lods inc add adc cmp inc add adc add or or inc add add add or (bad) (bad) incl add add inc add xor add add add add mov add insb sub add add aam inc add add add mov add fdivrs add fdivrl mov push mov inc add add add sub jl inc add adc xor add nop sbb add add fs je pushf sub add add inc add add add add add add mov je lods sub sbb add inc add add add nop sbb adc add sbb inc add xorb inc add add inc add add add nop sbb push add add inc add xorb inc add add add adc inc add add add add mov je shrb inc add add add adc dec add add add add mov je in inc add add inc add add add add add je lock or add add add nop sbb sbb add call xorb inc add add add adc push add add add add add xorb inc add add add adc pop add add add add xorb inc add add add adc pop add add add add rolb xorb inc add add inc add add add nop sbb adc add add add add inc add xorb inc add add add add add add je inc sub or add inc add add add nop sbb pop add add ret clc xorb inc add add add adc insb add add add add add xorb inc add add add add nop sbb or add enter clc xorb inc add add inc add add add add add inc add xorb inc add add add adc js add nop sbb add add add add xorb inc add add add adc jl add nop sbb pop add add ret inc add xorb inc add add add adc addb add add add les clc xorb inc add add add adc test add nop sbb or add xchg les clc xorb inc add add add adc mov add nop sbb push add add les clc xorb inc add add add adc mov add nop sbb sldt add add xorb inc add add add adc nop add add add add xorb inc add add add adc xchg add add add add inc add xorb inc add add add pop add rolb (bad) (bad) (bad) incl add add add add inc add xorb inc add (bad) (bad) incl adc pushf add add add add movb xorb inc add add add adc mov sbb adc add push movl cld sub adc add inc add add inc add add add je add inc add add add add add mov inc add adc cmp inc add adc add inc add add adc cmp inc add adc sub inc add add adc cmp inc add adc push mov inc add adc cmp inc add adc jl inc add add adc cmp inc add adc movsb mov inc add adc cmp inc add adc int3 mov inc add adc cmp inc add adc hlt mov inc add adc cmp inc add adc sbb inc add add adc cmp inc add adc inc mov inc add adc cmp inc add adc insb mov inc add adc cmp inc add adc xchg mov inc add adc cmp inc add adc mov mov inc add adc adc in inc add add adc cmp inc add adc or inc add add adc cmp inc add adc xor inc add add adc cmp inc add adc pop mov inc add adc cmp inc add adc test inc add adc cmp inc add adc lods mov inc add adc cmp inc add adc aam inc add add adc cmp inc add adc cld mov inc add adc cmp inc add adc and inc add add adc cmp inc add adc dec mov inc add adc cmp inc add adc je inc add add adc cmp inc add adc pushf mov inc add adc cmp inc add adc les add adc cmp inc add adc in mov inc add adc cmp inc add adc adc inc add add adc cmp inc add adc cmp inc add add adc cmp inc add adc hlt xor push inc add (bad) (bad) incl add add xor stc decb outsb lahf cmp int inc cmp add add or pop enter add add inc add add add add add add add add add and (bad) (bad) (bad) ljmp add inc add add add add incl add add add (bad) call in inc add add add add fs (bad) incl add add add inc add (bad) (bad) call in inc add inc add add add incl add add add (bad) (bad) call in inc add add add add fs (bad) incl add add add cmp (bad) (bad) (bad) call in inc add inc add add add jne (bad) incl add add add add (bad) (bad) call in inc add add add incl add add add push add (bad) (bad) call in inc add add shlb add incl add add add inc add (bad) (bad) call in inc add add add data16 (bad) incl add add add (bad) (bad) call in inc add add xor add incl add add add inc add (bad) (bad) call in inc add iret inc add add add jne (bad) incl add add add add (bad) (bad) call in inc add iret inc add add add jbe (bad) incl add add add or add add add cmp pop add jae add jae pop add push add add jae imul add jo pop add add add jb add add xor add add and push add add add add add xor add add sub add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add arpl jb outsl add outsl add je and push add jae jne popa add add je jne add outsl add add cmp cmp cmp inc add add add outsb add add jae pop add jns jae je add xor xor cmp inc add add add outsb add add jae pop add jns jae je add cmp inc add add add outsb add add jae cmp add add cmp pop add imul outsl add jae pop add jns jae je add xor xor cmp inc add add add outsb add add jae cmp inc add add add outsb add add jae pop add jns jae je add xor xor pop add bound add cmp inc add add add outsb add add jae pop add jns jae je add xor xor pop add imul outsl add jae push add ja add push add add add add add add add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add jns jo add add outsl add add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add add push add dec add add outsb add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add arpl jb outsl add outsl add je and push add jae jne popa add add je jne add outsl add add cmp cmp pop add add add jo outsb gs imul fs imul dec jne je arpl fs dec outsl jb outsl jne fs add jae insl outsb jae outsb jns gs outsb aaa add add jb gs imul add add jae imul push outsb gs inc gs fs addr16 gs jae outsb add add dec outsl outsb popa jb push add insb fs insl jae jne jae add dec popa jae imul jae imul pop insl and mov fsubrl and pop (bad) dec (bad) and push lret shrb in xor negb addl lea jne cmp xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add cmp inc add add add add add add add inc add inc add push xor add add xor add pop add add gs xor add add add gs dec outsb jne add rolb int3 rolb add add in inc add or je jmp push mov call jmp add add outsb jne push jb jo inc js add add rcl add roll add add lock add or je jmp push mov call jmp add add add add jb gs xor add add push add add imul inc inc inc add add inc add inc add add cld ss add or je jmp push mov call jmp add add add add inc popa fs jne gs jb je push je add add inc add add or inc add or je jmp push mov call jmp add add add add imul or add inc gs imul outsl jb add add add fs outsl arpl add add add je gs imul add cld roll or inc add add adc inc add or je jmp push mov call jmp add add add add outsb insl insl cs insb add add add add imul jb jo jb dec gs fs add add add add and inc add or je jmp push mov call jmp add add add add je gs outsl popa jb dec popa jns jne dec popa insl gs add rcl add rolb add add sub inc add or je jmp push mov call jmp add add add insl outsl jne gs gs outsb je rcl add inc add add cmp inc add or je jmp push mov call jmp add add add inc insb outsl jae inc imul roll pusha roll add add inc aaa inc add or je jmp push mov call jmp add add add add data16 je imul addr16 js add cld roll movsb roll add add push aaa inc add or je jmp push mov call jmp add add add add dec outsb push arpl add add add rcl add roll add add pop aaa inc add or je jmp push mov call jmp add add outsl outsb jbe jb inc gs jne je outsl arpl add add pop roll cmp inc add add push add add add add or je jmp push mov call jmp add add add add je insb imul push imul rcl add add je inc add or je jmp push mov call jmp add add add add insl xor cs insb add add insl insl inc gs popa outsb imul je add add aam inc add aam add add xorb add or je jmp push mov call jmp add add outsl insb jns gs dec jne inc add add cld roll xor inc add add mov inc add or je jmp push mov call jmp add add add add arpl outsb jne popa imul add rolb jl inc add add cwtl aaa inc add or je jmp push mov call jmp add add roll sbb inc add add movsb aaa inc add or je jmp push mov call jmp add add imul cs add add adc add inc outsl arpl outsb je jb jo jb imul inc add (bad) inc add add mov inc add or je jmp push mov call jmp add add add add js gs gs popa jo inc add insb rolb pop (bad) inc add add mov add add add add or je jmp push mov call jmp add add add add je bound arpl jo add add roll movsb (bad) inc add add enter mov or je jmp push mov call jmp add add add add je jne jb outsb je push dec add pop roll in (bad) inc add add aam inc add or je jmp push mov call jmp add add add add je outsb jne gs jne je je insl add rcl add xlat inc add add loopne inc add or je jmp push mov call jmp add add add add jbe jo xor add add test inc add inc add add in aaa inc add or je jmp push mov call jmp add add gs gs jo popa je inc add add pop roll enter add add clc aaa inc add or je jmp push mov call jmp add add add add je outsl insb jns imul cld roll adc inc add add add inc add or je jmp push mov call jmp add add inc push inc push dec xor cs dec dec add add pop add add je arpl add inc add add add adc inc add or je jmp push mov call jmp add add add add je outsl outsb jae insb gs je insb dec popa outsb fs gs add pop roll lods fadds add add sbb inc add or je jmp push mov call jmp add add add add fs popa je add roll cld fadds add add sub inc add or je jmp push mov call jmp add add add add outsl jae dec gs inc imul outsb outsl outsb arpl add add cld roll cmp inc add add xor inc add or je jmp push mov call jmp add add add push gs popa jbe dec gs add inc add add inc cmp add add add add or je jmp push mov call jmp add add add add je jb imul inc add pop roll aam inc add add dec cmp add add add add or je jmp push mov call jmp add add add add popa jae push popa jo add add inc add inc add add pop cmp add add add add or je jmp push mov call jmp add add add add gs je inc arpl insb gs je jb popa bound add rolb pusha fiaddl add add cmp add add add add or je jmp push mov call jmp add add add push jb jo jb push popa jo add inc add add jo inc add or je jmp push mov call jmp add add add push gs insb outsl jae dec gs or add inc gs jns inc outsl insb outsl jb inc push jns fs add add pop fadds hlt fiaddl add add jl inc add or je jmp push mov call jmp add add add inc jb popa je push arpl popa bound outsl outsb je gs jne arpl add roll pop fildl add add mov inc add or je jmp push mov call jmp add add add add inc push rcl add add xchg cmp add add add add or je jmp push mov call jmp add add add add jb fs insb add add add gs gs outsl outsb outsb arpl outsb inc add in fildl clc fildl add add mov add add add add or je jmp push mov call jmp add add popa insb imul je add add rolb inc faddl add add lods cmp add add add add or je jmp push mov call jmp add add add dec outsl arpl push outsb insb outsl arpl pop roll mov inc add add mov add add add add or je jmp push mov call jmp add add add inc outsl outsb outsb arpl push jb outsb je jb insb addr16 aad add faddl add add les inc add or je jmp push mov call jmp add add add add inc imul je js add rolb sbb inc add add sarb inc add or je jmp push mov call jmp add add gs jbe inc jb je arpl push arpl outsb add add pop roll fldl add add fdivrl inc add or je jmp push mov call jmp add add add add jae je jb outsb je jb add add aad add add call add add add add or je jmp push mov call jmp add add add add je outsb jne je insl push arpl rolb cld fldl add add hlt cmp add add add add or je jmp push mov call jmp add add add add ja outsb imul arpl add rcl add add add add inc add or je jmp push mov call jmp add add gs arpl push arpl add or add push gs imul add roll nop fiadd add add or inc add or je jmp push mov call jmp add add add add je jne bound inc outsl jb popa je add add pop roll call add sbb inc add or je jmp push mov call jmp add add gs popa jae inc jb outsl jb add add inc add inc add add and inc add or je jmp push mov call jmp add add add add gs imul add add add add add xor inc add or je jmp push mov call jmp add add jb gs gs jne arpl add add inc add fild add add cmp inc add or je jmp push mov call jmp add add add add imul push outsl insb jne add add insb rolb or inc add add dec cmp add add add add or je jmp push mov call jmp add add add add gs je inc insb insb imul outsb dec outsb imul add roll pop loopne add add push cmp add add add add or je jmp push mov call jmp add add add add je popa jo jne add rcl add add pusha cmp add add add add or je jmp push mov call jmp add add add jae gs insb xor cs insb add add add outsb inc js arpl jb jb add add loopne add loope add add insb cmp add add add add or je jmp push mov call jmp add add add jbe jb imul add add add push gs outsb jae popa insb insb inc imul dec loope add inc add add js inc add or je jmp push mov call jmp add add add add je outsl outsb jae insb gs outsl fs pop roll movsb loope add add test inc add or je jmp push mov call jmp add add add add js jb gs outsl outsb je outsl insb inc gs imul add loope add add nop cmp add add add add or je jmp push mov call jmp add add roll movsb fiadd add add pushf cmp add add add add or je jmp push mov call jmp add add add add outsl ja imul jns arpl rcl add inc add add test inc add or je jmp push mov call jmp add add add add gs popa outsb arpl inc outsl outsb outsb arpl outsb inc add add fildl mov add mov inc add or je jmp push mov call jmp add add add jo push add push outsb push jne jb add or inc add jecxz add add sarb add or je jmp push mov call jmp add add add add je jb outsb je jb jb jbe jb add add aad add inc add add int3 cmp add add add add or je jmp push mov call jmp add add outsl insl fs xor cs insb add add or add inc imul inc and add inc add add fdivrs inc add or je jmp push mov call jmp add add rolb add inc add add in inc add or je jmp push mov call jmp add add add add je inc dec dec outsl fs cld roll xor inc add add lock add add add add or je jmp push mov call jmp add add add add jae jb dec outsb jne je insl inc add rolb je inc add add cld cmp add add add add or je jmp push mov call jmp add add add add je jae jb bound arpl outsw jb popa je outsl outsb inc add add rolb mov add or inc add or je jmp push mov call jmp add add add insl imul dec inc add add in add add adc inc add or je jmp push mov call jmp add add add add je popa jo gs insb popa addr16 add roll push in add add and inc add or je jmp push mov call jmp add add add add je outsl insb outsl jb jo arpl add pop cmp cmp fwait sub xor dec dec cld roll pushf in add add sub inc add or je jmp push mov call jmp add add add add addr16 imul lock add in add add cmp inc add or je jmp push mov call jmp add add add add je inc inc js rcl add out add add inc cmp add add add add or je jmp push mov call jmp add add add add jae push jne je gs popa addr16 rolb js inc add add push cmp add add add add or je jmp push mov call jmp add add outsb insb outsl arpl imul add inc add out add add pop cmp add add add add or je jmp push mov call jmp add add add add je jns je insl inc gs jne je popa outsb addr16 inc add pop roll or inc add add push add add add add or je jmp push mov call jmp add add add add popa jo outsl arpl add add js cmp insb xor pop push pop repz adc popa dec sahf xchg call dec pop roll pop out add add je inc add or je jmp push mov call jmp add add add add gs inc inc insb push popa jb insl add add rolb mov add cmpb add or je jmp push mov call jmp add add add insl imul arpl rolb add inc add add mov inc add or je jmp push mov call jmp add add add add insb imul je insl add rcl add inc add add cwtl cmp add add add add or je jmp push mov call jmp add add add add je imul je add cld roll nop call add movsb cmp add add add add or je jmp push mov call jmp add add add add push outsb imul imul add call add mov inc add or je jmp push mov call jmp add add insb outsl jae push jb outsb je jb add add iret jno sub mov inc jns jae popa fs add cld aad add jmp add mov add add add add or je jmp push mov call jmp add add add add je outsl jb fs jb outsb jae outsl jb add add roll test inc add add enter mov or je jmp push mov call jmp add add add add outsb fs js arpl popa bound add loopne add jmp add aam inc add or je jmp push mov call jmp add add add add gs je inc dec inc push popa je gs inc jb jae add add roll sbb inc add add loopne inc add or je jmp push mov call jmp add add add add gs je inc imul jns add add pop roll push add in cmp add add add add or je jmp push mov call jmp add add add add outsb fs imul inc add add rolb mov inc add add clc cmp add add add add or je jmp push mov call jmp add add add add je gs outsl popa jb push je je add add rcl add ljmp add inc add or je jmp push mov call jmp add add add inc fs insl jo je imul insb gs rcl add inc add add adc inc add or je jmp push mov call jmp add add add add js jb gs outsl outsb je outsl insb inc gs imul add add sbb inc add or je jmp push mov call jmp add add jo outsb inc jbe outsb je outsl add add pop fadds in inc add add sub inc add or je jmp push mov call jmp add add add add fs jo popa je push gs jne arpl add pop roll sub inc add add xor inc add or je jmp push mov call jmp add add add add insb imul imul add inc add inc add add inc cmp add add add add or je jmp push mov call jmp add add popa jbe dec jne inc insb outsl jae add add or mov insb rolb shr add add dec cmp add add add add or je jmp push mov call jmp add add add add outsl jae inc jbe outsb je outsl add add inc add add pop cmp add add add add or je jmp push mov call jmp add add add add gs je dec arpl dec outsb imul rcl add add add cmp add add add add or je jmp push mov call jmp add add add add outsb fs outsb jbe jb outsb insl outsb je je imul loopne add add jo inc add or je jmp push mov call jmp add add add add outsb inc jbe outsb je add pop roll clc in inc add add jl inc add or je jmp push mov call jmp add add add add ja imul cmp inc add add mov inc add or je jmp push mov call jmp add add add add insl push gs outsl insl jo jae je outsl outsb push imul jo gs gs jae jae imul add aam add add add xchg cmp add add add add or je jmp push mov call jmp add add add add outsl bound inc gs je insl dec popa insl gs add pop roll loopne inc add add mov add add add add or je jmp push mov call jmp add add popa imul outsb je jb push add add cld aad add inc add add lods cmp add add add add or je jmp push mov call jmp add add add add fs je insl inc add add pop roll jl inc add add mov add add add add or je jmp push mov call jmp add add add add outsl jae inc insb imul add rcl add out inc add add les inc add or je jmp push mov call jmp add add add add je imul imul je outsl jb je add add inc add lock add add sarb inc add or je jmp push mov call jmp add add add dec outsl outsl imul jb jbe insb gs imul popa insl gs add inc add add add fdivrl inc add or je jmp push mov call jmp add add add inc insb outsl bound push outsb imul inc add add call add add add add or je jmp push mov call jmp add add add add imul inc insb outsl jae add add lock add add hlt cmp add add add add or je jmp push mov call jmp add add add add insl inc gs popa outsb imul je outsl jne je add add aam add inc add add add add or je jmp push mov call jmp add add add add je jb jbe je dec bound arpl arpl imul fadds nop icebp inc add add or inc add or je jmp push mov call jmp add add js jb arpl outsl outsb inc add add lock add icebp inc add add sbb add or je jmp push mov call jmp add add add add jo arpl inc inc insb push popa jb insl add rolb sub inc add add and inc add or je jmp push mov call jmp add add jae popa fs outsl fs je add add pop roll je inc add add xor add or je jmp push mov call jmp add add add add gs push gs imul arpl arpl imul add add cmp inc add or je jmp push mov call jmp add add add add outsb gs je inc outsl outsb jae insb gs je insb inc jbe outsb je add add inc add repz add add dec cmp add or je jmp push mov call jmp add add add dec outsl imul inc add rolb fs add add push cmp add or je jmp push mov call jmp add add gs outsb addr16 push imul inc add add pusha cmp add or je jmp push mov call jmp add add add add je jne jne fs outsl insl jo gs outsl outsb push je je jae add pop roll lock add add insb cmp add or je jmp push mov call jmp add add add add imul add insb rolb inc hlt inc add add js inc add or je jmp push mov call jmp add add add add addr16 gs outsl jb dec gs add pop fadds mov inc add add test add or je jmp push mov call jmp add add add push insb jae gs popa insb jne add inc add hlt inc add add nop cmp add or je jmp push mov call jmp add add add add insb jns imul cld roll adc inc add add pushf cmp add or je jmp push mov call jmp add add add add insb insb push popa je add add cld roll pop cmc inc add add test inc add or je jmp push mov call jmp add add add add insl push gs outsl outsb jbe jb imul jne add push outsb fs gs jns gs add add gs imul jae add aam inc add add mov inc add or je jmp push mov call jmp add add add add inc gs push je jb insb popa arpl outsb je add roll or inc add add sarb mov or je jmp push mov call jmp add add add add je imul add rolb pop testb add int3 cmp add or je jmp push mov call jmp add add add add je outsl jns jne jae jb add rcl add add fdivrs add or je jmp push mov call jmp add add imul gs jb dec gs fs add add add testb add in inc add or je jmp push mov call jmp add add add add imul outsb je outsl insb add inc add testl lock add or je jmp push mov call jmp add add add dec jo outsb inc popa arpl jo jbe outsb je outsl addr16 add insl imul add pop fadds xor add add cld cmp add or je jmp push mov call jmp add add add add je gs inc imul js add cld roll fdiv inc add add or add add add mov or je jmp push mov call jmp add add add add je popa jbe inc imul add add movsb jecxz add inc add add adc inc add or je jmp push mov call jmp add add add add gs add pop roll jo inc add add and add add add mov or je jmp push mov call jmp add add add add insl inc gs outsl outsb je js add add aam add add sub inc add or je jmp push mov call jmp add add add add gs gs jns je insl push imul rolb clc clc inc add add cmp add add add mov or je jmp push mov call jmp add add add add jbe dec jne dec gs popa add inc gs je jb gs add imul add inc add add add inc cmp add add add mov or je jmp push mov call jmp add add add add jbe dec jne inc gs gs popa jo inc add insb rolb mov add push cmp add add add mov or je jmp push mov call jmp add add add add je outsl jb fs jb outsb jae outsl jb add add roll in stc inc add add pop cmp add add add mov or je jmp push mov call jmp add add add add jb popa je add add pop roll cmp inc add add push add add add add or je jmp push mov call jmp add add add inc gs jne jb outsb je jb arpl jae add inc add add add je inc add or je jmp push mov call jmp add add add add je insb popa jae dec outsb outsw inc add add rolb enter add add cmpb add add add or je jmp push mov call jmp add add add add outsl bound inc fs je insl inc add push insb popaw outsb addr16 jae add inc add sti inc add add mov add add add mov or je jmp push mov call jmp add add add add je insb addr16 je insl push gs inc add rolb fs inc add add cwtl cmp add add add mov or je jmp push mov call jmp add add add push popa imul insb gs bound arpl roll lods sti inc add add movsb cmp add add add mov or je jmp push mov call jmp add add add add gs je push arpl outsb add add roll clc sti inc add add mov inc add or je jmp push mov call jmp add add add add arpl jae push outsb fs jne imul add add inc add inc add add mov add add add add or je jmp push mov call jmp add add add add outsb jae popa je inc arpl insb gs je jb add add rolb xchg cld inc add add enter mov or je jmp push mov call jmp add add add push outsl insb jns outsl insb jns outsl outsb add roll in inc add add aam inc add or je jmp push mov call jmp add add add add je insb je add roll sub inc add add loopne inc add or je jmp push mov call jmp add add add push jb je push jb imul imul inc add inc add add in cmp add add add mov or je jmp push mov call jmp add add add add imul arpl jne je popa insl gs add pop fadds mov inc add add clc cmp add add add mov or je jmp push mov call jmp add add add add je data16 outsl outsl je outsl outsb imul je jae add inc add incb add add add inc add or je jmp push mov call jmp add add add add jbe push outsl inc js add add roll push incb add add adc inc add or je jmp push mov call jmp add add add add jo jb outsl outsb popa je inc fs insb imul outsl ja add imul cmp add rolb xchg incb add add sbb inc add or je jmp push mov call jmp add add add add gs jb outsl insl insl inc jb outsl jb add inc add incb add add sub inc add or je jmp push mov call jmp add add add add je popa imul outsw add inc add inc add add xor inc add or je jmp push mov call jmp add add imul jae je add add add add inc ds add or je jmp push mov call jmp add add add inc insb addr16 imul add rolb int3 incl add add dec ds add or je jmp push mov call jmp add add outsb fs gs popa addr16 add add rcl add add add add pop ds add or je jmp push mov call jmp add add add add je outsl outsb jae insb gs jne jo je push add push outsb arpl insl jne popa je jbe outsb gs add add inc add inc add add fs add or je jmp push mov call jmp add add add add inc insb insb outsl arpl add add inc add add jo inc add or je jmp push mov call jmp add add add add je jb outsl jb je inc insb imul inc outsl jb popa je add rolb cld add add add jl inc add or je jmp push mov call jmp add add add insl imul arpl push popa je push rolb push add add add mov inc add or je jmp push mov call jmp add add add push gs outsl jbe inc outsl outsb je gs jne arpl add roll pushf add add add xchg ds add or je jmp push mov call jmp add add add add imul add cld roll call add mov add add add add or je jmp push mov call jmp add add add add gs je dec popa je push push push outsl outsb gs outsb xor add cld roll sub inc add add lods ds add or je jmp push mov call jmp add add add dec outsl popa fs je imul inc add add mov add add add add or je jmp push mov call jmp add add add add inc insb imul inc outsl jb popa je jbe imul rcl add add add add les inc add or je jmp push mov call jmp add add add add je dec inc inc outsl insb outsl jb popa bound add add roll sbb inc add add sarb inc add or je jmp push mov call jmp add add add add outsl ja ja gs outsl jo jo add rolb push add fdivrl inc add or je jmp push mov call jmp add add add add outsl bound dec gs outsl jb push je je jae add inc add add call add add add add or je jmp push mov call jmp add add imul outsb je outsl jne arpl add add pop fadds cld add add add hlt ds add or je jmp push mov call jmp add add add add je popa jae inc arpl gs outsl jo jo add rolb dec add add add add inc add or je jmp push mov call jmp add add add add je outsl insb jns imul cld roll cwtl add add add or inc add or je jmp push mov call jmp add add add add jbe dec jne inc gs outsl jae je outsl outsb add insb rolb loopne inc add add sbb inc add or je jmp push mov call jmp add add add add outsl outsl jae push imul insl popa je add cld roll sub inc add add and inc add or je jmp push mov call jmp add add inc dec popa jo je imul add inc add inc add add xor inc add or je jmp push mov call jmp add add outsb je jb jb je arpl push arpl outsb add add pop roll rolb add inc add or je jmp push mov call jmp add add add add popa fs imul roll adc inc add add dec aas inc add or je jmp push mov call jmp add add gs insb addr16 je insb dec inc add add rcl add add add push aas inc add or je jmp push mov call jmp add add add inc fs gs popa je inc add rolb pushf push inc add add pusha aas inc add or je jmp push mov call jmp add add add add popa jo imul pop roll loopne inc add add insb aas inc add or je jmp push mov call jmp add add add add outsl ja jne jae jb add rolb and inc add add js inc add or je jmp push mov call jmp add add add add insb insb dec jae inc imul dec imul jae add dec gs insb jns jb jo xor inc jb insl bound jae add add rolb push add test inc add or je jmp push mov call jmp add add add add gs je push imul inc add rolb aam inc add add nop aas inc add or je jmp push mov call jmp add add add add insl dec outsb jae popa insb insb dec dec inc inc add aam inc add inc add add pushf aas inc add or je jmp push mov call jmp add add add add je push inc gs je jo add add rolb or add add test inc add or je jmp push mov call jmp add add add add je outsb push inc imul imul add cld roll mov inc add add mov inc add or je jmp push mov call jmp add add add add je popa insb gs gs outsb je imul roll add inc add add sarb add or je jmp push mov call jmp add add add add je push push outsl imul add inc add add int3 aas inc add or je jmp push mov call jmp add add add add ja arpl add add rcl add add fdivrs inc add or je jmp push mov call jmp add add add add jae imul rcl add or add add in inc add or je jmp push mov call jmp add add arpl push imul cld roll and inc add add lock inc add or je jmp push mov call jmp add add add add je gs inc push je jb js jb inc add cld roll push add cld aas inc add or je jmp push mov call jmp add add add add outsb fs jb jbe jb gs popa add add add add or add or je jmp push mov call jmp add add add add addr16 gs arpl dec insb fs addr16 jb gs add gs add rolb add inc add add adc inc add or je jmp push mov call jmp add add add add gs je push outsl jo jo outsb jne rcl add inc add add and add or je jmp push mov call jmp add add gs outsl outsb jae insb gs jne jae jb outsb outsw add add pop roll test inc add add sub inc add or je jmp push mov call jmp add add add add jbe dec jne inc jb popa imul add add insb rolb clc or add add cmp add or je jmp push mov call jmp add add add add addr16 jb popa je dec gs js add inc add add add inc inc inc add or je jmp push mov call jmp add add add add insb imul inc add add push inc inc add or je jmp push mov call jmp add add add add insb jns outsl outsb add fs jne jae jns outsb xor dec gs gs je add add cld roll int3 or add add pop inc inc add or je jmp push mov call jmp add add add add insb jns jb ja add add roll sub add push add add add add or je jmp push mov call jmp add add add add popa bound outsb jne je insl add rcl add add add je inc add or je jmp push mov call jmp add add add add gs inc outsl insb outsl jb jo arpl add add roll mov inc add add addb mov or je jmp push mov call jmp add add add add insb outsl arpl gs imul bound add add inc add push inc add add mov add or je jmp push mov call jmp add add add add dec inc dec inc push jb arpl add add rolb push push inc add add cwtl inc inc add or je jmp push mov call jmp add add add add je jo outsb inc insb imul push imul pop gs imul add rcl add add movsb inc inc add or je jmp push mov call jmp add add add add je jb outsl jb je inc insb popa jae add add pop roll hlt push inc add add mov inc add or je jmp push mov call jmp add add add add je imul inc js inc js add add roll inc cmovno add add mov add add add add or je jmp push mov call jmp add add add add je bound arpl add roll mov inc add add enter mov or je jmp push mov call jmp add add add add jo push imul cmovno add add aam inc add or je jmp push mov call jmp add add add add fs arpl jae inc outsb imul add inc add adc add add loopne inc add or je jmp push mov call jmp add add add add outsb jae popa je dec gs popa add add dec popa jae jb jb outsb je jb add rcl add add add in inc inc add or je jmp push mov call jmp add add add add je gs push outsb add cld roll mov add clc inc inc add or je jmp push mov call jmp add add add add je outsl insl insl push jb jo jb imul roll cld adc add add add inc add or je jmp push mov call jmp add add add add je gs imul popa insl gs add pop fadds dec adc add add adc add or je jmp push mov call jmp add add add add jne dec outsl outsb imul add aad add add sbb inc add or je jmp push mov call jmp add add gs jns gs popa add add rcl add adc add add sub add or je jmp push mov call jmp add add add add jae popa addr16 outsl js js add add jb jb jb gs jb add rolb and inc add add xor inc add or je jmp push mov call jmp add add jae popa fs gs fs je add add pop roll jl inc add add inc inc inc add or je jmp push mov call jmp add add add add je imul inc js inc js add add roll les inc add add dec inc inc add or je jmp push mov call jmp add add add add je jb jae dec jb inc js add cld roll adc inc add add pop inc inc add or je jmp push mov call jmp add add add add inc jb gs popa je dec popa outsb fs add add rolb pop adc add add fs inc add or je jmp push mov call jmp add add add add je jae jb gs jne je inc dec inc add pop roll movsb adc add add jo inc add or je jmp push mov call jmp add add add add jo jb outsl outsb popa je dec popa insl gs imul outsb je add inc add adc add add jl inc add or je jmp push mov call jmp add add add add insl inc gs jb jns outsl outsb je js add add aam add add add mov add or je jmp push mov call jmp add add gs jo popa je push outsb add add rcl add add xchg inc inc add or je jmp push mov call jmp add add add add je inc dec inc push add add pop roll fcoms add add mov add add add add or je jmp push mov call jmp add add add add gs insb xor add add add insl insl popa outsb fs imul addr16 add sbb inc add adc add lods inc inc add or je jmp push mov call jmp add add add add imul outsb outsl ja gs popa addr16 add rcl add add add mov add add add add or je jmp push mov call jmp add add add add insb arpl imul add add add roll les add les add or je jmp push mov call jmp add add add add jne push gs jne arpl popa outsb addr16 addr16 add pop roll adc inc add add rolb add or je jmp push mov call jmp add add add add je popa insb gs gs outsb je imul roll pusha push inc add add faddl add or je jmp push mov call jmp add add add inc insb popa jae push imul rolb lods push inc add add call add add add add or je jmp push mov call jmp add add add add jne inc jb popa imul pop roll lock inc add add hlt inc inc add or je jmp push mov call jmp add add add add inc push dec add add add add jne push popa addr16 imul pop inc add inc add add add add or je jmp push mov call jmp add add add dec outsb jae jb dec outsb jne add imul add add rolb mov inc add add or inc add or je jmp push mov call jmp add add imul outsl push jns je insl push imul pop roll fcoms inc add add sbb add or je jmp push mov call jmp add add add add insb dec outsl jbe dec gs outsl jb add add inc add sbb add add and inc add or je jmp push mov call jmp add add push add add add add cmp add cmp add inc add add add add dec add add add push add add add push add add jne insb add add imul outsb add insl add cmp and add add add add mov sbb add inc add insb add and jbe add jae imul cmp and add add and add push add outsl add add je and jbe add jae imul cmp and add sbb add inc add insb add and data16 add jae cmp and add add adc add inc add insb add and dec add cmp and add push inc inc ss dec dec add add pop pop jbe popa push popa jb jne add jbe popa push je dec xor add jbe popa dec xor je add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa inc jb gs popa jb add add jbe popa push je inc popa je push jb imul outsb gs add pop pop jbe popa inc jo xor add pop pop jbe popa dec xor jns add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa push je inc outsl jo add add pop pop jbe popa dec gs add add jbe popa inc jb gs je add add pop pop jbe popa push je dec outsl jbe add add pop pop jbe popa push jb outsb je bound add pop pop jbe popa dec jb jae insb je push bound add add lcall popf cmp mov pop insb push sub push adc lcall pop icebp sbb dec outsl sbb inc jae pop inc hlt adc xchg pushf inc mov dec stos xchg repnz lods xor or stos add xchg inc jns insb outsl outsb gs add push outsb fs imul jne jo add push imul add add bound gs xor arpl outsb imul jne push push jb add add push outsb gs popa je gs add imul add add jo jb gs arpl outsb add add gs insb gs jb gs add add insb popa insb popa add push popa outsb fs outsb cmp add inc jbe gs add inc gs popa je jb xor push bound jae jae gs gs xor add insb imul push add jb arpl je jb add fs popa jbe add add outsb insb xor dec popa arpl push add inc fs outsb je add imul outsb add push imul insb insb gs add dec outsb jae imul add arpl jo gs imul insl jo imul aaa add add inc outsl je je imul gs add add jb data16 arpl add add push imul jne popa insb add add push jo outsl addr16 je add add loopne mov enter hlt jb fwait lahf cmpsb jg and inc mov jmp mov mov das stc call into mov inc mov dec jb dec insb jne xor add dec outsb outsb gs add add add je je insl outsw jb jns imul push gs imul fs popa bound cmp push bound outsb fs outsb je add je outsl outsb popa insb imul add insb jbe push jb jb outsb add inc jo js insl popa insb imul add popa jbe jb add add push jbe outsb gs imul fs outsb add imul add add outsb jbe insb jne imul add outsb jae popa outsb insl gs fs jae outsb jae add dec push outsb gs outsb imul xor add outsl arpl gs add push jb imul jae add add pop fs jns push add inc popa outsb fs add inc insb popa jae jb gs xor inc gs cmp add jb arpl imul add inc insb imul jns imul outsb jae je jb jb add add dec jae fs arpl outsl jne add add push imul jo jb gs add add push jb push imul imul add add data16 popa insb imul inc jb outsb fs jb je jae add add jb jb addr16 fs aaa add lds lcall cmp mov inc lods int clc push (bad) ret sbb dec fwait xchg adcl bound rorb imul jae add add add add pop popa insl gs xor imul gs add add outsl je bound outsb gs inc popa imul add dec outsl jb bound fs add dec jb outsl jo je arpl cmp add inc popa jbe jne imul insb insb cmp inc outsb arpl jb gs xor add jo gs insl insl gs add add dec popa outsb fs add fs jne add dec jo jne je je add add gs outsl insb imul jo jb outsb je gs jae fs dec gs outsb xor push jae xor inc outsl arpl outsb imul xor add outsl arpl jae jb gs add add popa jb popa imul popa jb jbe jb add add push gs imul add add jne data16 jne jb add inc jb jns outsl outsb add jb insb imul jae add add add push jb outsb jae je add add dec adc fimul jne pop push cld aam fbld xor push inc mov xor push outsl (bad) mov clc xlat mov xor inc repz ficoml leave xor mov stos inc fcomip mov popa jae outsl jb gs add push je insb insb imul outsb jae add add push fs jb outsb add insl popa outsb insb gs add add imul gs outsb addr16 xor add add insb jns outsb add add gs imul push outsb push xor add inc outsl arpl jb add bound popa je outsl outsb gs xor add outsl insl imul addr16 add arpl outsl jae outsb xor je imul fs gs add add dec jns outsl arpl insb gs gs outsb gs imul push push imul arpl je popa insb imul add add jo imul add je popa jb push push je gs jae jb add inc jb jbe jae outsb jae add push jb addr16 insl insl gs outsb addr16 jb push imul gs add jb jb jae outsb add add add inc jne outsl je js jae add inc outsl outsb imul add jb imul add bound je gs jae add push outsb popa jo jb jbe bound gs add add fadds xor notb subl push push out data16 inc mov fwait sub pop xorl je inc fwait inc add pusha fbld inc (bad) repnz inc js popa outsb jae add gs imul xor add inc data16 jne outsb imul add push imul jb fs gs add inc jb gs jae data16 insb gs gs add inc data16 jb outsb imul dec popa jb jb je popa add add insb outsl arpl gs je insl gs gs outsb jae add popa outsb jae jb add add push popa outsb imul outsb jae jb gs outsb xor push insb gs xor dec jbe popa add add inc popa jb outsb je jae fs jae add insb imul outsb jae add insb je jb imul add imul imul add add bound jae add add add jb jbe imul add add jns outsb fs je gs add outsb jae imul add add inc gs insb imul outsb fs imul add popa fs imul add add insl jo insb je addr16 add add jb jb outsb addr16 jne add add outsl fs jae outsb jae add outsb jbe jae gs add inc outsb arpl arpl add add push mov adc and inc mov xchg xor sub pop pop inc rorl sti popf mov das xchg add outsl aad inc mov loope iret add push jne push arpl imul insb jns add gs imul push popa jb addr16 jo imul inc imul jb outsb add add inc popa fs data16 xor add jb outsb addr16 popa jae insb imul add imul addr16 xor add add gs outsl popa fs add add jb gs add insb jns add add jae outsb add push jne imul gs add dec outsl outsb push jne je outsb add add add inc arpl je imul add inc gs je popa xor add add push add add dec gs imul add gs jb imul add push outsb fs jne jb outsb xor add add addr16 gs outsb jo je outsl insb outsl imul je jne jae gs inc jae popa insb outsl jo add add push popa imul outsb imul jb insb add dec outsl outsb jae outsb arpl imul and inc subl out jg daa adc fild inc mov lods fistpll mov cmpsl addr16 jno xchg push xlat stc sbb add push dec mov inc sbb gs je jae add insl bound add inc gs insb arpl outsl insb imul push popa jb outsl imul xor inc outsl insb outsl outsb imul inc jbe outsb jne add push imul push gs gs add add jb jbe jb imul imul dec jb imul inc popa jb imul add jbe imul add add dec imul outsl outsb add dec outsl outsb jo outsl bound outsl jb add add inc imul add add dec popa data16 jb xor add add imul add add inc insl jne outsl jne outsb gs xor inc jb insl imul jae add inc outsl jb je jns inc insb imul xor add outsl jb imul add push gs add add popa bound fs add outsb arpl je outsl outsb outsb add add jns popa jns add outsb imul jae add add dec jo popa insl insb imul outsl je jb gs add add insl imul outsb add add insb aad sbb cmp dec lock out fwait push xchg xlat ja (bad) loopne (bad) sbb iret inc mov mov push les fldt xchg dec lods imul int insl cmp addr16 bound imul add popa jae jne imul add jb xor add push jb outsb je jbe jae add imul gs add add outsb gs outsb add add inc data16 jb jo jb outsb xor add push jne gs add inc outsb gs jns jb jne add inc outsl jb jbe addr16 add insb gs add push imul jb gs add add inc jo gs imul push bound xor add jae outsb imul add dec popa je outsl outsb popa insb imul je jb add outsl jne arpl add add jb gs outsb add add imul gs add push popa imul jne gs outsb addr16 jb outsb imul add inc jno imul add popaw bound imul jae add add jb gs jae add add addr16 jo gs add insb insb imul cmp add add outsb je jb add jb jne jae dec jne imul push insl arpl fiaddl in cmp sub cltd dec (bad) lahf nop push pop cmp out loope dec mov mov cmp pop dec xchg sbb xor jb outsb je outsl jo insb outsl imul outsb addr16 jae insl outsb gs xor dec popa outsb popa jo add inc je popa outsb popa insl imul imul gs add add add add inc gs imul aaa add addr16 jae imul add dec jns imul insb insb outsb add add inc insb popa arpl popa outsb fs push outsl insb fs add inc imul add add popa jb insl outsb je insb insb jns add jb jae jns imul outsl insl jo gs bound add push jb imul insb gs aaa add add push popa jb gs insb outsb aaa add push gs add inc imul jb gs add add outsl imul inc outsb jb jb gs add add jb imul fs dec fs imul je arpl add add push jb je arpl imul push imul outsb gs inc popa insb popa outsb je imul add outsl gs add push outsl insb imul gs jne jbe jb imul outsb xor dec xor sbb loopne pop adc popa dec sahf xchg call dec inc popf iret jno sub mov cmp xor or stos add xchg xchg add add add jb outsl jne fs add jb outsl bound gs add add inc add add (bad) (bad) (bad) jmp add outsl bound gs add add add in sldt pop add add add add add add imul add or push outsb gs fs xor add or adc pop mov adc add add add add or inc gs popa je jb xor add or push imul gs add add push pop adc add add or push popa outsb fs outsb cmp add or push arpl jae outsl outsb jae add or or add adc add add pop add jb outsb je add or push fs gs jae xor add add pop inc pop lock add incl xor add add gs insb gs jb gs add or push push jae outsb gs add push test fs add add add add or push outsb imul add adc inc jb gs outsw jb popa jb jb xor jbe sub add add add add or inc jne outsb popa jbe add or inc push outsb fs xchg add push add add or inc outsb outsb outsl outsb arpl add or push je gs gs xor add or pop push or adc add add add add or push outsb gs popa je gs add push add jbe xor add adc pop adc add add add or add imul outsb add adc inc imul jbe imul gs add adc dec adc incl sub add or add outsb insb xor add pop add addr16 je xor add adc dec adc incl sub add or add insb popa insb popa add or push popa fs insl popa addr16 add push test adc add add add add jb data16 arpl add or push jae outsb fs jae add adc adc lds adc incl xor add push or inc insl jo imul aaa add or push push je js jae add adc add adc add add or dec outsb jae imul add or dec gs insb jns imul or xchg adc adc add add add add or outsl je imul gs add add push jb add cmp (bad) add add add or inc push jns fs sldt insb imul gs outsb xor add add add adc adc add add add add or inc outsl jb arpl je jb add push add outsb imul add push cmc add clts movups add add add add or inc jns jae popa fs or imul outsb xor add adc or adc add add add adc add arpl push add add jae jo insb imul mov adc incl xor add adc insb imul push add pop add insb jae jb add rsqrtps das or or adc incl xor add push lldt arpl jo gs imul add add popa je outsl outsb gs add or push lods push (bad) pop adc add add add gs add push add jo popa jae insb insb popa bound add adc mov push add add add add push add outsb jae jae gs gs xor add or inc arpl outsb imul cmovo push mov incl sub add sbb add gs add or dec insl jo gs popa jb add add or sbb incl das add add or push imul jne popa insb add or push popa addr16 outsb je add add adc or adc add add add add or gs gs arpl outsb add pop add popa je jae add adc test incb adc add add add sbb add jb addr16 je add or push outsl ja jb outsl popa je add add or or add sbb incl add dec xor sbb adc jno xchg push xlat stc sbb xchg xor sub jg daa adc dec lods xor or stos add xchg mov add add add insb fs insl jae jne jae add js sbb add and and (bad) (bad) jmp add xor add add add add inc add add add add or push gs gs add lldt jb data16 push jae add add adc add incl sub add add bound add or push gs imul add or pop adc add add add add or inc popa jb imul add or push imul jae add add movsl or add or inc gs imul outsb add or push outsb outsb outsl outsb arpl xor add add (bad) adc incl xor add add gs imul jae add or inc outsb jae insb imul sbb movsl add mov adc incl xor add push or inc insb imul xor add lldt outsb push gs jae jb add or mov add add add or inc outsl insb outsl outsb imul add jae outsl outsb jae outsb xor add adc or or push add add add add or inc imul push or push popa insb outsl insb imul repnz add add add add or dec imul outsl outsb add or gs fs popa bound add add cli add adc add add add add or inc insl jne outsl jne outsb gs xor add jae outsl outsb jae bound gs gs add or or add incl sub or dec popa data16 jb xor add or dec gs jb imul xor or outsb push adc add add add add add outsb jo outsl bound outsl jb add add jae add add or adc or or incl xor adc push imul gs imul imul or push jo jae jo jne add push cwtl or add or incl sub add push or push gs gs add or inc push imul jecxz repnz push adc add add or dec jb imul add or push push popa arpl popa add or adc or add add or push je bound fs add or push jbe jb gs add add sub adc add add add add or push popa jb outsl imul xor add adc push je gs outsb imul jae add or stc adc adc incl xor add adc dec outsl outsb imul jae add or push imul outsb gs xor insl adc adc adc adc incl sub add adc add jns popa jns add or push jns outsl outsb jns imul adc add adc push adc add add add add add jae insl insb imul outsl je jb gs add or push push outsb imul mov ds add add add add imul outsb gs add pop add imul sbb push adc add add add or insb arpl outsl insb imul or inc insb popa jae ja jb jae add or push adc adc adc add add or inc insb outsl jb imul add pop add insb outsb gs add add incl sub or inc imul add or dec outsl je jbe outsb gs xor add push push push xlat add incl sub add sbb push imul gs xor add imul cmovge xlat add add sbb incl sub add sbb add outsb jne add or inc insb outsl ja imul push push ret (bad) or add add add or arpl je outsl outsb outsb add or dec outsl outsb outsl je insl add push loopne add adc add add add add add outsl je jns add or push outsb popa jb imul and (bad) or or sbb incl add dec xor sbb sub pop pop inc rorl sti popf mov mov push mov cmp xor or stos add xchg lcall add or dec outsl outsb popa jb push or je jbe jb je jb gs fs add add inc add add (bad) (bad) (bad) jmp add popa jbe jb je jb gs fs add test add in add add inc add add pop add bound jae add or dec outsl outsb imul insb outsl jbe xor add adc movups add add add add add imul outsb imul add insb gs imul bound inc add adc add add add add add jb imul add or push je jne insb jns add or or fwait add add incl xor add add add outsb jae outsb arpl imul or inc insb bound imul test imul push xchg add add incl sub add add arpl outsl jo add pop add insb arpl jae add adc add adc incl sub or dec jbe jb imul add add insb push add add or add adc add add push add jb popa insb add or inc data16 gs imul addl adc add add add add or dec jne addr16 jae gs sldt outsb fs outsb imul add pop dec adc adc adc add add add add or arpl outsl popa fs add or inc outsl outsb arpl fs jns add add or or add or incl sub add or add jb gs add or inc outsl jb imul add add add add add add add push add outsb push jne je outsb add add add jb jo insb xor add add pop (bad) add or or incl sub or push jne imul gs add or inc outsl jb jae imul pop loope inc push fwait adc or incl sub or inc popa fs data16 xor add or dec popa jae outsl je gs add adc push adc incl sub add push add jns add or inc jo insb popa jb je xor pop adc or or add add or push fs add or dec outsl je imul imul pop add push push push add adc add add or dec gs imul add add jbe jb imul push jne fmuls add add add add adc push jne push arpl imul insb jns add push add jne jo add adc dec adc adc adc incl sub add adc add jb je popa xor add pop add data16 jns add add popf pop mov incl xor add adc dec jns imul addr16 xor add or inc imul je gs add or or adc or adc incl xor add adc add arpl je imul add add jb gs outsl jo add pop mov incl xor add adc addr16 gs lldt popa outsb imul insl imul add or adc or adc incl das add add or inc imul jb outsb add add add outsl insb outsl addr16 add or adc adc add add or push outsb fs jne jb outsb xor add or inc imul imul or or incl xor add sbb add jae outsb add adc inc popa outsb insl popa jb jae imul jb add push imul or add add add add str outsb jo je outsl insb outsl imul or imul gs jns add add loope cmp adc add add add add adc inc jns imul outsl insb imul push add outsl data16 or add cmc or sbb incl sub add sbb add gs add jb popa insb je jb outsb jae add or or or or sbb incl xor add sbb add jb addr16 jo imul or inc data16 add adc add imul add dec xor sbb (bad) in in pop dec mov mov arpl fiaddl in cmp dec lods xor or stos add xchg cmpsb add add add add addr16 imul add add add inc add add (bad) (bad) (bad) jmp add add mov add out add add inc add add add add adc dec imul gs imul outsb xor add or push push imul or add add incl xor add add add je outsl jo insb outsl imul add add insb imul ljmp add incl xor add add inc imul jb gs add or push outsb push imul cmpsb add or movups add add or inc imul add or inc popa jb popa outsb fs add adc pop orl add add add add imul popa insb gs aaa add or dec outsl insb gs imul add xchg or pop and adc incl xor add push or dec fs imul je arpl add or dec outsb je jb outsl arpl xor add or jo adc add add or inc popa jns outsl imul add popaw je jae gs add add xchg xor push add add add add or push gs add adc push outsl imul jne fs outsb outsb gs jae jb xor add adc or mov adc add add add add or popa outsb je imul add add jb popa arpl popa outsb add add adc add add or incl xor or push imul je jb outsb add add add jb imul fs imul roll or packsswb adc add add or push je imul add or dec popa jbe fs jae add push sub pop or incl das add add add jb gs insb outsb aaa add or inc outsb gs insb imul outsb add push dec or or incl add add addr16 jae imul add pop add insb imul add add pop lret or incl sub add push or inc je popa outsb popa insl imul add jae outsb outsl ja add add jo adc add add or push jb je arpl imul add addr16 outsb addr16 jbe jb outsl jbe fs add or adc add add or push imul outsb gs add or push popa imul add add push mov (bad) incl xor add adc add outsl gs add adc inc outsl jb jb outsb imul imul fildl xchg or incl sub or inc insb popa arpl popa outsb fs add or inc jne insl gs add adc stos or add add pop add insb imul add gs jb imul pop add or pop push add add push add outsb popa jo add or je gs jae jb gs add push jl test push push adc add add add add jo jb insl outsb je insb insb jns add or inc jne bound jae add or iret adc adc incl sub add push or inc outsb jb jb gs add or inc outsb je arpl jo insb add add or in adc add add or outsl insl jo gs bound add or push gs insl gs xor add add daa add incl das add add or dec jns imul insb insb outsb add or inc outsl insl gs imul add inc movups add add add add add fs add str jo jb imul gs add adc add add add add str addr16 jae insl outsb gs xor add or dec imul add add xor adc add add add add or push jo imul gs add adc push insl jb bound jae outsl insl data16 jae add add or sbb incl xor add sbb add imul aaa add or dec jns je arpl imul sbb jle iret add sbb incl add dec xor sbb sbb dec fwait xchg orl ret cltd xchg js jb cmp cltd iretw adc pusha rcll movsb add add add inc gs gs imul or bound outsb gs outsb je outsl jb outsb imul add inc add add (bad) (bad) (bad) jmp add outsl outsb outsb gs outsb je outsl jb outsb imul or add add add aad add inc add add add add push jne jo jb insl insl gs add push add insb imul and and daa or add incl xor add add add popa jb popa imul add add arpl jae jb arpl xor add add add add incl add add or jo imul jae add str insb imul jp add or push pop adc movups add add add add add jae insb insb cmp add or push jo outsb fs bound xor add adc or add add add add outsl jo je arpl cmp add adc dec outsl outsb outsl arpl outsl jb outsb je jb arpl add add push movups incl xor add push or inc jb push jae xor add or pop outsb fs fs add or add add add add pop add outsl jns outsl outsb add pop add addr16 gs imul je insl jae add adc or push add add add add pop add jbe jne imul push push add add or or incl sub add or add jo jae gs add or push imul jb add add adc add add add add push add imul add or push arpl popa jbe outsb popa add or xor loopne adc add add add add or dec jne imul jae add push add insb insl mov add add push adc add add add add add arpl outsb imul xor add or push imul add add or adc adc add add add add outsl je bound outsb gs add or push je jb jae jb fs add push fisttpl popl lea or incl add add or push jb outsb jae je add or inc outsl outsb outsb arpl outsb popa insb add adc or add add push add insl gs xor add push jne add or adc lret push add add add adc add jne data16 jne jb add or push imul popa jae add add push adc add add add add or arpl jae jb gs add or push jns imul jae add or cmp adc add add add adc add fs jne add add add imul imul add push enter aad adc add add add add or inc outsb arpl jb gs xor add or gs outsb imul inc or add adc add add add add add add add add imul add push pop or or add add add add outsb fs add or inc gs jb insb jae jae add add adc adc incl xor or push gs imul add adc push jne fs imul xor add push sbb or pop adc add add adc push outsb jo jb outsb je gs jae fs add outsb outsl jb outsl outsb add movups inc or add add add add or dec popa jb jbe jb add pop add je insb xor add pcmpgtw jb jo adc add add add add or dec outsl jb bound fs add lldt insb imul fs add or or sbb incl das add add or push jae gs gs add or dec outsl outsb outsl bound jae popa xor add or pop adc adc sbb incl sub add sbb add insb outsb xor add jae imul lds and dec or sbb incl xor add sbb add gs outsl insb imul add imul gs jb add add jmp incl add add dec xor sbb sbb iret inc mov mov push les ss cmp dec lock dec lods xor or stos add xchg ret add add add add jae imul add add jae imul jb gs add add inc add add (bad) (bad) (bad) jmp add jae imul jb gs add test add hlt adc add add add add add add sbb push popa imul jne gs outsb addr16 jb outsb imul add or dec jne popa outsb je xor add or push adc add add add add add bound xor add or inc outsl outsb je jb imul int bound lock adc add add or inc jno imul add adc dec imul jb jne popa jb jb add add adc add add add add add add addr16 bound imul add lldt imul je bound add or add add incl sub add add outsb outsl jne arpl add or inc popa insb insb je insl gs add add dec or add incl xor add push or inc outsl jb jbe addr16 add or inc push insb popa jns jb add push sbb adc add add or inc outsb gs jns jb jne add or push insb push insb jb jb xor add psubsb leave adc or push add add or inc outsb imul gs add pop add imul (bad) and jg stos add add add add or dec gs gs jae add pop add outsl jbe xor add or push add incl cmp add or add addr16 add adc inc jb gs jae popa jb gs outsl jbe outsb xor add or test push or or incl cmp adc dec popa je outsl outsb popa insb imul je jb add adc inc outsl gs jb jne fs gs add add movsl adc or add add add add jbe outsb je jbe jae add or inc popa jb popa insl outsl jns xor add adc cmovs add add add add push jne add or inc gs imul imul addr16 or movzbl adc incl das add add or push imul jb gs add or push insb popa je outsl jb jae add add pop xlat adc adc or add add or dec jbe jae jne imul add outsl jb jp je outsl outsb xor add or or or or add add add or jae outsb imul add adc push fs gs jae je gs gs gs add push add (bad) incl xor add adc add insb gs add adc push popa jb jae insl jo je outsl insl imul add or add add or inc imul gs add sldt push jae jne jae jae add add in xchg or adc incl sub add adc add outsb je jb add or push ja je push in rclb stos add incl aaa add add add imul gs add adc inc push insb imul push add or movups add add or push jb popa bound imul jae add pop add jb gs add add add adc incl sub add push or inc jb gs outsb add push add gs outsb add or or push pop adc adc add add add imul push push arpl add or adc push adc add add add add or gs jo jb outsb xor add or inc jb jae jae imul add adc adc pop add add add add add insb xor add or push gs outsb fs add or or adc add add add add or inc popa jb gs outsb add add add imul outsb je outsb aaa add adc push or or sbb incl sub add sbb add jb jne jae add or push outsb push outsl jne add or incl das add add add addr16 jo gs add or dec imul jae add add movups add add int3 xor sbb add xlat mov xor inc repz ficoml dec adc fimul jne pop push cld aam dec lods xor or stos add xchg fadds add add add jae imul push outsb gs or imul jae popa insl jo outsb gs add add inc add add (bad) (bad) (bad) jmp add imul popa insl jo outsb gs add cwtl add add or add inc add add or dec gs imul add add arpl je bound imul add or and mov incl aaa add add adc dec jns outsl arpl insb gs gs outsb gs imul add jae jb gs add adc add insb or add incl xor add add add insb jns outsb add or jb popa je outsb imul push and cmpsl add add add or push popa jae outsl jb gs add or inc jo outsl jo jae je add or add adc add add add add imul add or push gs addr16 popa je outsb add jmp sub or add incl aaa add add adc push insb jne popa imul fs gs add or gs imul je arpl add push inc push push or or add add add or push outsb push xor add push add popaw insb fs je jb jae add push fmuls adc add add add add push add bound popa je outsl outsb gs xor add adc push imul fs outsl jbe fs add or adc pop add add add add or push je gs jae jb add or dec jne jae gs insb imul or push push adc add add add add or inc outsl outsb imul add add gs arpl add push push add or incl sub add or add popa jb insb imul add insb gs add adc incl add add add outsl addr16 insl insl gs outsb addr16 jb push imul gs add or push outsl jb gs gs or movups adc adc add add add add arpl jb add or dec jne jb fs add add or add add add add or dec jne addr16 jb push add jne outsb outsl insb xor je rolb or or add add or push jne gs imul add or inc jb outsb insb popa outsb imul lds and push add add adc push je insb insb imul outsb jae add or inc outsl insl imul xor add add add (bad) incl xor add adc add popa jo jb jbe bound gs add or inc popa jb bound outsb xor add adc or add incl sub add adc add je je js jae add or push gs jo jb add push jecxz insl pop jo adc add add add add or push outsl insl popa outsb insb gs add or data16 jb outsb fs add push addl adc add add add adc add imul gs outsb addr16 xor add or push gs popa jb outsl jne add add add add add add add bound insb je gs jae add or dec outsl outsb addr16 fs je xor add add bswap adc add adc incl xor add push adc inc arpl je popa insb imul add add insl xor add (bad) add adc adc add add or inc popa jb jb jae outsb add sldt jb imul fs adc or sbb adc add add add add or push jb arpl outsl jae outsb xor add insl gs gs add add add pop add add add add pop add jae jb outsb add pop add bound imul add push stc add sbb incl sub add sbb pop gs imul add outsb outsl ja gs add add adc add add add add push add outsl insl imul addr16 add or push arpl outsb jae popa outsb aaa add add pushf or add add add add jo imul add add insb insb xor add push add mov sbb incl add add dec xor sbb xorl je inc fwait inc add fadds xor notb subl dec lods xor or stos add xchg in add pop add add adc inc gs fs addr16 gs jae outsb add popa jae gs popa jae imul sbb add and and (bad) (bad) jmp add jae gs popa jae imul xor ss add pop or add add inc add add add add add imul jb gs add or inc jb popa imul je gs add or or add incl xor add add add je jb outsb imul add inc imul je jb fs add add add or incl add add pop add jo outsb jae add or jo imul jae add push imul adc add add add add add jb jb je popa add or jne imul xor add add ljmp cmp add add outsb jbe jae gs add pop add fs je addr16 imul outsb gs add adc adc add or inc insb popa outsb jae jb add or push je gs outsb jae add or mov adc add add or push imul outsb imul add or push gs outsl outsb jns popa insb add or or push add add add add or push gs outsl arpl gs or inc insb outsl outsl jb outsl popa jb jae add push lds jns dec adc pop add add add add or push push insb gs xor add or inc imul add or add push mov incl cmp add or add insb imul outsb jae add adc dec outsl outsb arpl jo gs imul adc or or incl add add adc popa insb imul outsb fs imul add add popa insl jo jb add add pushf add add add add add add arpl arpl add or jb jae jb bound add or adc or incl sub add or imul add outsb outsw jb outsb gs add add or or or incl das add add or push jns jae imul add or inc data16 outsl jbe gs add add inc or or add add wbinvd add imul add or push imul add add add adc add add add add add dec jbe popa add or push imul jae add add add (bad) incl cmp add adc push outsl insb je jb imul adc inc imul outsb imul jb gs add adc push imul add adc incl xor add adc add jae jne outsb imul add or dec outsl outsb addr16 gs jb add adc or add or js imul xor add push add insb popa outsb add or add adc incl xor add adc add je insl gs gs outsb jae add pop add jo imul hlt or add adc add add add adc outsl fs jae outsb jae add or dec outsb je jb xor add add add adc incl xor add push or fs outsb addr16 jne add or inc outsl arpl jb jne gs add add add add or inc arpl gs imul add sldt popa imul imul pop testb shrd push add add add add adc push popa outsb imul outsb jae jb gs outsb xor add insb gs gs add push ret rsqrtps adc add add add add sldt jb outsb je jae fs jae add pop add arpl insb imul or sbb incl xor or insl jo insb je addr16 add push add gs jb outsb gs gs add add add add add add add add adc inc jb gs jae data16 insb gs gs add or dec imul jae add or or sbb incl xor add sbb add jns outsb fs je gs add or push gs gs insb popa add or pop adc incl add add dec xor sbb sub mov mov das stc call lock mov enter hlt jb cmp xor or stos add xchg in add add add add jae insl outsb jae outsb jns gs outsb aaa add imul jb jo imul inc add add (bad) (bad) (bad) jmp add push jb jo imul add dec adc add add test add inc add add add add or pop fs jns push add dec outsl outsl jae bound jb gs add adc movups add add add add push jb imul jae add push add outsb imul jae fs add or emms adc adc add add add add push add gs cmp add push add fs imul gs add add or add add add incl cmp add add add imul fs popa outsb fs outsb add or jae arpl je jb xor add or pop or incl xor add add insb jbe push jb jb outsb add or push insl jae outsl jbe aaa add or or add add add or push imul jo jb gs add or pop outsl outsl imul gs add or movsl or add add add add bound add str jb fs imul gs cmp add add (bad) or movups add add add add or inc insb popa jae jb gs xor add or push arpl je push add or pcmpgtw data16 pop add add add add push add jb gs outsb imul xor add or inc fs je jb jae add push pop adc push adc add add add add adc dec gs je insl outsw jb jns imul or push imul add add add jnp adc add add add add or outsb fs jb je jae add or push imul jns add or jl rcll adc add add add add add imul add or inc imul fs add adc les adc incl xor add or jb arpl imul add push add jae imul jb xor add add in add add or incl inc add add adc push jb push imul imul add pop add imul jne gs outsb addr16 gs add push mov insb push sbb adc add add or push jb arpl gs add or inc jb insb insb gs jb add or adc add incl xor add adc add je outsl outsb popa insb imul add or inc imul add push les sahf add or (bad) incl xor add adc dec jae fs arpl outsl jne add or popa jo imul add or scas add adc incl sub add adc inc outsl outsb jbe insb jne imul add inc data16 add adc push stos adc adc incl add add sbb inc insb imul jns imul outsb jae je jb jb add or push popa insb popa outsl jo imul dec or adc incl xor add adc add outsb imul fs popa bound cmp add push add fs add adc or outsb add adc incl xor add adc outsl js insl popa insb imul add or inc pushw gs add or loop adc incl sub add push pop add outsb outsb gs add pop add fs add (bad) adc push test adc add add or inc jb jbe jb add adc push imul gs jns outsb jae add push cwtl add push add add add add sldt jb jb addr16 fs aaa add add bound add or or add add pop add add add add push add fs add or push outsb outsl ja jb data16 add adc nop adc or sbb incl xor add sbb add data16 popa insb imul add push add jae imul outsb addr16 add or add push add sbb incl add add or push bound outsb fs outsb je add or dec jne jae outsl insb fs add add pop adc add add add add add outsb jae popa outsb insl gs fs jae outsb jae add lldt arpl jae imul xor add add popf or sbb incl add add dec xor sbb sbb dec outsl sbb inc jae pop es popf cmp mov cmp xor or stos add xchg inc stos add (bad) movsb add add add jae popa arpl fs outsl jb insb jae outsb fs add add inc add cmpsb movsb add insb je add sbb add add add add add add add add add sbb add add push add add dec jmp xor or lods cmp je mov dec dec dec cmp jne mov dec dec dec cmp jne xor push push push push push addl push push push call add ret mov push loop push push push mov add jmp pop jmp pop call push pushl push call cmp je call push push xor pop pushl push call jmp mov adc cmp jne jmp mov imul pop mov mov mov mov dec cmpw jne mov mov inc mov bswap cmp jne cmpl jne sub push call mov mov push rep mov xor pop cld cld cld cld cld cld cld cld cld cld xorl cld cld cld cld cld cld cld cld cld cld jmp push jmp pop jmp pop call push push push push call pop jmp call push push dec outsl je data16 arpl inc add lret (bad) (bad) decl inc dec dec add ret (bad) (bad) decl push gs outsb outsw jb popa je outsl outsb push jb arpl jae call test sbb rcll mov iret ficomp outsb pop mov into into rcrl xchg pop inc mov mov push (bad) std into shll dec rcrl aas es sbb iret push popa inc push addr16 into (bad) jo (bad) cltd cmpsl inc pushf popf pop xchg leave cltd (bad) xchg cmp out into rcll jnp rcrl dec mov jae rcrl dec mov (bad) cltd add adcl out rol push xchg rcrl into mov jecxz rcrl xchg into rcrl push xorl daa lock dec mov (bad) cltd ja mov adc inc push adc popf mov scas ficoml lods mov loop mov std xchg mov ficomp jle rcrl jp rcrb jne cmp jmp rol test mov repz cltd cs cltd icebp dec adc jne xchg (bad) cltd cs fimul mov jb rcrb cmpsb int3 rcrl dec pop aam daa jmp jno rcl xchg lret cs lcall popa sti rcll rcll mov cmp push mov cltd incb cmp into (bad) icebp dec rcrl dec mov cltd dec in cltd cli into rcll (bad) daa pushf mov into mov mov cmp jmp mov cltd (bad) jmp test sahf mov cltd dec mov add in mov decl icebp in sbb popf add fabs into shll pop rcrl pop movsl (bad) cltd (bad) xchg cmp xchg into mov cltd push cmp cltd incb popf pop sbb cmp rcll mov daa add rcl ja cmc adc into rol push add xchg mov adc ds cltd movsb imul inc pushf popf pop jae cltd (bad) xchg cmp lock rcll mov daa cmp data16 ja in mov cmp jmp rol push dec fistp jne aad push fcmovnbe cltd movsb cmpsl xchg dec pop fdivl cmp cltd (bad) xchg cmp lock rcll mov into rol pop or cltd (bad) xchg cmp lock rcll cmp popf pop xor cltd (bad) xchg cmp lock rcll mov into rcrl into mov int3 testb decb cltd stos sahf cs jle fstpl stc or cmpsb daa xor fcmovnbe cltd movsb es xchg dec pop fsubrl into mov fcom cltd movsb cmp push dec cltd dec cmp aas push rcrl cs push add push les (bad) xor into rcll inc add xor data16 cmc xchg jne xchg adc jbe cltd dec adc inc mov cltd (bad) cltd mov int3 (bad) dec ds jge shr pop inc xchg xchg pop jnp cltd incb mov incb movsl pop sub xchg fsts cmp cltd incb fstl mov cltd (bad) xchg pop fsub daa dec mov into mov mov rcll into rcll mov mov rcrl jne pop or rcl cltd pop pop (bad) cltd (bad) xchg cs (bad) xor data16 lahf pop fdiv lret adc dec xorl (bad) cltd incb test shr lock inc push sbb or rcrl dec mov (bad) cltd cmpsl xor scas inc xchg xchg sti or cltd (bad) sahf cmp (bad) into rcll mov into rcrl adcl call (bad) jne pop fsubl into mov (bad) iret ficomp sahf inc pop cmp inc (bad) cltd movsb es xchg dec adcl (bad) daa inc mov into mov ret adc pushf mov repz rcrl scas xor jb cmp xor in fcmove cs ret dec rcrl into mov add addr16 adc dec pop in repnz xchg xchg ja push pop repnz ja mov into push (bad) cltd incb movsl jne fstpl xchg rcrl add rcrl popa push (bad) cltd incb mov push rcll enter or cltd incb pop stc into rcll popa or cltd incb leave ja sbb stos inc dec push stc into rcrl adc rcrl dec pop push dec rcrl dec pop mov adc into rcll popa fcompp cltd incb sbb into rcrl movsb stc adc cwtl cmp cmc into rol movsb dec pop mov or inc popf (bad) into shr and cwtd (bad) into shll cli push popa (bad) mov shrl test cltd add xchg dec mov sbb into movsl jp xor (bad) (bad) cltd iret pop andb pop int3 repnz lea rcrl in rcrl mov into shr daa xor (bad) into shll ret inc rcrl decb xchg mov into rcrl dec rcrl inc fcmovu cltd dec ficomp scas inc data16 (bad) into rcll jns fstps movsb (bad) xor rcrl dec pop push bnd jge rcll dec push cltd (bad) into rcll mov ret jnp movsb lahf jne rcll ret iret cmp cltd dec push cltd (bad) into rcrl mov rcrl mov cmp inc rcrl mov into rcll popa (bad) cltd dec dec cltd (bad) into rol (bad) cmp repz dec xor into rcll mov into rcll popa (bad) cltd dec dec cltd (bad) into rol (bad) cmp push pop cli and adc add push xchg cmc into rcrl adcl cltd (bad) stos jo dec rcll mov dec lods sar fsts jno fstps dec rcrl dec into fstps std jns xchg dec pop jmp (bad) mov pop cltd out into shrl sti into fstpl cmc into ror add fstps scas movsb cs scas mov cmp nop mov (bad) mov rcll cld xor (bad) into rcll jns fstps add fstps (bad) into sar jne leave cltd dec pop fdivr inc subl dec cmp ret in ja push pop testb aas (bad) pop or loopne iret xor jnp mov adc lret adc dec pop fsubrl mov out mov pop (bad) cli inc lahf leave ja mov in inc sub aas xchg repnz adc ja fstps aas ficomp out dec adc into rcll mov pop aam daa popf mov into mov (bad) rcrl xchg es fcoml rcl jne mov (bad) dec sub stos inc mov mov adc (bad) rcrl dec cs divb cmpsb xchg xchg into mov cltd xchg into mov lret mov popa inc push aam xor adc into rol push pop fstps cmc into rcll mov cmp into rol push mov cltd incb subl daa ret mov into mov (bad) rcrl mov cs push mov cltd (bad) xor dec shll lret divb loopne stos (bad) pop fsubrl mov ret xchg into pop xchg add cs cli inc xchg out sub dec pop fsubrl into mov mov pop into divb jecxz test rcll rcll jmp test ljmp dec adc into sar inc out push popa or call jmp inc mov jne fstpl test cltd leave sbb into ficomp int cltd cwtl xchg mov cwtl dec sub out or sahf dec rcll mov cmp into rol push push (bad) cltd (bad) xor mov cs jge rcll incb adcl pop (bad) out inc pop cmp aas movb add push popa inc push insb cld into rcll mov into rcrl jmp lds mov imul leave rcrl test xor sbb into ficomp int3 rcrl dec shr ret inc pushf popf pop sbb cltd (bad) xchg cmp mov xor cs sub cmp popf mov cltd (bad) xor data16 test cmp xchg dec rcrb mov mov jno enter into pop into divb mov popa inc push sar rcll mov cmp push jge cltd incb adc pop dec adc into ror jne fldenv xor sbb (bad) cltd dec rcrb add sbb ficomp icebp int3 rcrl jmp rcrl dec pop push xchg rcrl out rcrl dec pop push (bad) iret rcrl (bad) (bad) cltd ja push cwtl dec pop push xchg iret rcrl incb sbb add rcrl dec ror add cwtl dec push outsb iret rcrl dec rcll jns rcrb decb ficomp ret adc je rcll into shll dec dec cltd dec in and into rcll (bad) repz dec ficomp ret rcl cltd rcll into shll mov adc mov inc cltd decb movsl lock lret jle mov jmp xchg in aam lea in stos repz xchg movsl aam int cltd jle test pop icebp dec push cltd dec in cwtl dec push in cwtl and rcrb stc iret rcrl push rcrl (bad) xor dec shll pop rcrb dec (bad) jo xor cmp cltd decl cs rcrl dec cs (bad) iret rcrl dec xchg dec push rcrb dec shll mov cltd (bad) and rcrb dec cs rcrl dec cmp jne gs dec push popa out mov movsl cmp xor rcrl (bad) (bad) cltd add cs add rcrb ja push pop mov rcrl dec dec rcrb dec rcll mov fwait mov cld into rcrb dec cs rcrl dec pop push push iret rcrl add into ror xchg lret jp rcrl dec pop (bad) divb loop stos scas cmp (bad) movsb cs mov pop xchg into pop into divb jecxz stos mov pushf add rcl movsl inc lret repnz into into rcrl aaa (bad) pop (bad) div test ss adc jne cmc xchg iret pop pop (bad) testb mov mov add ss pushf movsl or mov jge shr out test (bad) lcall push pop cld test cmpsl add ljmp mov pop cltd jbe jns dec push and into rcrl dec rcll mov lahf (bad) adc sbb jne cwtl dec rolb or inc ja pop popf hlt iret and aaa sarl adc adcb out sbb xor adc icebp mov rcrl dec rcll add in fcmovu mov cmp cltd (bad) lcall and iret rcrl add incl adc rcl call rcrl icebp inc aad mov into shr repz dec rcrl adc lcall repnz push pop ret into rcll and adc sub adc ljmp adc rcrl stc into add repnz mov mov push pop cmp rcrl dec rcrl pop xor (bad) (bad) daa xchg xchg dec mov (bad) iret movsb lea fstpl cmp popf cs mov into cmp cmp popf cs mov into pop (bad) repnz adc jg rcll lret rcrl repnz rorl repnz rol ja mov xchg mov mov rcrl cmp rcrl inc iret mov ds xchg sbb into movsb jbe pop fstpl (bad) mov rcrb dec cmp or jo,pn enter inc xchg lea fstpl cmp ret cltd (bad) es lahf dec push popa (bad) mov rcrl pop enter lcall iret scas xchg repnz adc xor sbb lods es lahf dec rclb enter adc decb cwtl mov pop lahf fimul pop lahf lods mov lahf stos mov lahf fimul pop lahf cmpsl mov lahf lods mov lahf stos mov lahf mov mov cltd jne fstpl cmp ret cltd (bad) movsb (bad) repz cwtl cs ljmp leave push fnop cltd incb xchg jg roll jbe nop sbb int3 mov (bad) into movsb imul sbb into lret movsb (bad) repz movsb (bad) repz movsb (bad) icebp dec rcrl scas xor repnz pop cltd loop ror test mov sbb (bad) mov gs imul std into add aam mov repnz mov adc rcl cltd sti or cltd incb xchg (bad) xor loop xor mov rcrl movsb (bad) repz movsb (bad) icebp dec rcr test test repnz pop cltd loop (bad) repz cwtl cs cli dec pop pop fcmovne ror test xor (bad) xor into (bad) jo enter movsb (bad) repz sahf cs ljmp leave jne leave sbb into ficomp enter dec sub add cmp jne push popa inc push mov mov outsl loope dec pop fldz inc xchg movsl cmp ljmp jge ficompl pop int3 pop push lcall fxch inc xchg mov cltd adc inc and ds mov ljmp push ds shrb pop pop in fcmovb pop mov fnop jge sar jge shr invd aad incb pop (bad) into pop aad ret fcmovb pop (bad) push push mov pop fwait jbe xchg (bad) or cltd lcall fptan inc xchg lea pop rcl ljmp dec stos popf test xchg cltd mov jmp ret mov xchg mov jge stc xor push movsl (bad) std lret (bad) fwait pop jne mov cmp jle decl lret test dec aad lods lahf test jnp rcrl cmp adc stos cmpsb rcrl ljmp pop dec rcrl cmp adc inc (bad) fstps ja aam ret std jne leave cltd dec push pop rolb adc int jno inc pop xchg (bad) into rcrl pop ficomp inc rcrl add pop mov mov imul vmaxps mov lahf outsb xchg (bad) mov aad incb sbbl inc xchg lea pop rcl (bad) cltd dec push pusha (bad) mov pop in out in mov pop in adc adcl jg rcll mov into xor cmpsb inc cltd movsl jne fnstenv (bad) or fstps call mov mov ss loop ror xchg lret test cltd add xchg dec mov jo cmp data16 cmc mov xchg dec scas mov mov rcrl sub cltd decb movsl (bad) jg cmc sbb into adc test scas mov mov rcrl sub cltd decb fsin into sub fmulp loope mov push out mov stc ds push cltd into push movsl mov cmc fsin (bad) adc lock cltd dec cmp and rcrl dec (bad) jb or adc add data16 fstpl cmp popf push jb ret rcrl dec pop pop jne fstpl lret mov into mov in inc lds (bad) mov push pop (bad) rcl cltd xchg into mov cltd xchg int3 mov iret add movsb xchg jg roll test cmpsl popf jg adc fwait cmc into add push pop (bad) rcl cltd xchg iret mov repz movsb shll sahf adc mov ljmp scas popf cs mov fstps je in jo sti loopne mov jbe popa mov inc xchg mov jg movsl cwtl dec (bad) repz into xor movsb inc lea mov into mov into into rcrl mov xchg rcll (bad) fld inc adc aas not cmp rcrl jne cmc lea cmc xchg ja cmc popf ja push pop repnz mov lret aad xchg xor dec jge rcll incb mov cli int mov icebp dec push cltd dec push mov test shr adc pushf inc mov push pop hlt lcall and into rcrl mov pop fiaddl mov push mov shr loope xchg cmp loopne mov xor sbb (bad) push pusha cld mov imul sti xor in ljmp and into rcll lods enter les hlt dec sub popa or cltd jne cmc popf jne cmc popf std mov xchg mov dec ljmp into movsb imul imul aad cmp iret rcrl in mov das push int xlat sbb or arpl cmp mov into loope (bad) mov lds jne cmc xchg je pop mov into movsb insl cmp sar pop (bad) rcrl jle jne dec aam clc jbe cltd dec adc pop xor lret test lea mov push cltd sub loope jmp scas movsl cld fsubp (bad) fcmovu sbbl rcrl mov mov fmul cmp mov icebp mov (bad) icebp (bad) mov adc out (bad) aam out loopne fsubp test fsubrp cwtl notb loope lret fsubrp mov std lcall lds scas mov cli mov (bad) into xchg mov (bad) fimull mov mov in nop in icebp mov out repz cwtl notb in repz mov sbb xchg (bad) ret fsubp mov fcoml cmp xor jmp mov icebp mov int3 in (bad) jno xor (bad) cltd test xchg cltd test pushf cltd enter ror xchg cltd mov popf cltd push (bad) cmp add rcr decb shll and data16 into xchg cltd mov sbbl add rcrl (bad) fcmovnbe cltd dec rcrl dec rcrl dec rcrl dec rcrl dec rcrl dec rcrl add mov lcall jno daa cs cld popf mov mov mov cmp mov jecxz push cmpsl cmp add mov into xchg mov (bad) jno and mov in mov mov mov cmp pop xor ficomp movsl movsl (bad) mov cmpsb cltd push fistpll add xchg fwait mov mov jb xor fmuls and movsl fcomps mov mov add mov pop pop xor lret popf clc lea mov add mov std fwait into cmp xor iret xchg mov nop cmc xchg mov cmp xchg mov sub mov cmp lea fist es jae xor fist cmc cmp pushf mov lcall cmpsl adc ficomp stos (bad) lock cs ljmp mov push cmpl in mov mov icebp mov mov adc ficomp mov mov jno and mov clc mov mov lea cs faddl stos mov mov (bad) jno and data16 stos mov in fwait sahf mov ljmp xchg xchg mov mov mov movsl cltd push sub mov in fwait mov fwait mov add (bad) jno and lea jecxz push fnstsw add xchg loope lods movsb in fwait (bad) (bad) jno es mov cmp mov xchg loope lods movsb in xchg mov add movsl cld test mov aam mov cmp mov mov int mov cmp mov mov xchg mov cmp andb popf mov movsb clc xchg xorl (bad) and andb nop mov mov cltd push pop and andb fwait lcall push daa aas add mov test mov mov (bad) cld popf mov cmp fwait lods movsb (bad) mov stos sub (bad) into cmp lea cmp nop mov mov mov cs mov mov into cmp push sahf clc cltd push lret cmp iret loope (bad) mov cltd dec cmp pop xor cltd dec (bad) jno aaa cs rcrl add cmp pop xor sub popf cmp inc xor mov mov mov add and mov mov cmp jne jne and adc add push daa lock xchg adc nop ss push or pop add out imul push cmpl nop xchg dec jg call push cmp xor adc inc int mov xchg inc xchg inc fldl mov push lods pop lcall jno adc dec or push pop and inc sarb bound sbb inc adcl arpl xlat jb cmpsb mov lret js fwait mov xchg sahf push cmp mov notl mov (bad) icebp mov sub xchg in jecxz,pn outsb andl (bad) jno daa cs rcrl add rcrl add (bad) leave cwtl mov (bad) cld xchg cs rcrl add rcrl add rcrl or into (bad) jno aas cs rcrl add rcrl add rcrl push xor cltd dec roll add das lods push sub test fidiv dec cmp sub mov cli dec dec jp lods sub push das jge in xchg pop xorl lock mov jnp pop insl mov (bad) mov jns lods adc insb pop fwait nop adc pop inc cs sub sarl pop ja fistl inc cmp insb inc add xchg loope (bad) mov jns es xor push int aaa ret sub loope sbb outsb outsb fdivr (bad) (bad) adc push adc scas push mov test imul and les add aad inc addl mov jno aas fsubr test shll or add cmp ret jmp adc aaa inc fisubl pop or ret mov mov insl and sbb add stos ja sub and dec xor mov ljmp pop test js int push xor inc inc mov dec mov stos cld mov mov cltd test in cmpsb jg mov jbe ret add push sbb add stos outsl cwtl cmp jp out aad jg daa jecxz push sub inc hlt (bad) stc cmp mov mov inc test leave movsb cmc ss adc sbb ljmp int ja sub out xchg enter call decb xor inc sub lods jno cmp mov push out push in pop (bad) jae pop lret mov jg shll pop hlt das inc imul test mov cli rclb sti add fs jae lods or mov ds xchg mov fwait dec syscall int3 mov je sbb in pop sbb pop incb test test add xor jo or mov outsb jg int pop mov push pop adc pop add sahf notl enter mov lock dec movsb sbb mov push mov cs fisttpll pop in enter lcall or mov push (bad) in jp mov push pop jmp sub push sub inc mov push cmpsb dec int3 lret mov adc adc scas in jp cmp inc mov ret mov and or outsl leave movsb outsb jne push pop int mov rolb sub popa js add add std add fdivr mov imul fnstcw sub notb jae push push push jecxz dec adc (bad) mov (bad) in xchg ja mov repz lds xchg (bad) cmc ret xchg mul sbb mov stos ror pop xchg std arpl test xor js sbb pop xchg das fdivrl insl test lods rclb jo (bad) scas (bad) (bad) (bad) adc mov sar leave xor xchg xchg jmp into adc imul pop int3 add or in cmpsb insb lock (bad) cmp mov loop mov cmp mov push or adc (bad) pop addr16 inc sbb fsubl (bad) (bad) mov dec jne int3 jo pop sbb pop add mov xchg call xchg xlat push (bad) rcrb popf adc and lahf push jge clc aas dec out pop dec cmp out pop cmpsl add lods adc push nop jno jl (bad) out dec in dec scas xor cmpsb mov out iret rcrl int3 andb add xlat push int lcall cmp stc jl dec mov rcr dec xor xchg push shll sub xchg mov test xlat mov lahf sub mov ljmp int3 jnp dec out inc in test js les cmpl cltd adc aas iret dec xor (bad) repz cmp lock push jnp push rcrl mov add xchg cs xchg xchg jns or sub fsubrp icebp add repnz pop jb lds js jo inc vpackssdw faddl push out je push arpl sbb lock jmp stos pop fcmovbe das sbb xchg fsubrs pushf inc loopne js jl mov ljmp idivl fcmovnbe clc das movsl mov pop cmp mov (bad) jbe jnp jmp sahf into inc std push cli jg cld xlat jmp xchg adc jmp outsl adc push mov mov je (bad) lea push movl jle sub pop mov mov add inc add pop add movsb mov jp pop cld jnp pop cwtl inc or push arpl push scas or jl repnz orl pusha test sar mov add fstl (bad) cmpsl adc xchg test loopne mov movsl out test aas ljmp daa or lea inc jae adc xchg cmc rcl sarl aam ret sub cld xor mov jae lret xor pop sti sub stos in jge outsb or (bad) jb enter add or jno gs stos or std pop add cmpsb push (bad) jle xchg mov lds mov fimul in xchg mov push (bad) hlt sbb adc sub (bad) lret cmp mov jmp rcl or rolb xor adc in push scas jmp fstps jmp notb rorb (bad) sbb mov bnd or inc cmpsl mov lods jge (bad) cmovae pusha insl int3 push push daa test rorb jge sbb test dec pusha daa inc and dec cmp mov pop xchg pop clc into xor sbb insl test pop cmp je (bad) sub cmp mov shlb and int mov sbb lcall dec lock scas jmp scas pop imul aas cmpsl les cld adc mov pop test loop nop notl xor lock dec in iret xchg mov loop xchg dec add outsl xchg xlat add gs push inc sti loope mov outsl xor mov xor cld sub push cmp jbe cmpsl cli stos cmc xor sti adc in sub ret push stc insl cmpsl scas in cmpl imul andl lods outsl arpl sub add cli sarl jb roll adc (bad) neg arpl (bad) push pop out lods inc cld sbb add jae pop push cs std jmp mov fadds pop pop mov ds pop (bad) or (bad) repz sub sbb iret movsb mov jg pop aad out imul mov test into decb xchg jne pop pop insb pop add das mov scas xor adc mov lret inc add lea test lea xor fwait add scas cs add in imul push push jbe adc or inc sub movsl lret std push fcoms xchg add aam mov icebp push gs leave mov dec xor pop ret xchg dec mov or movsl jecxz mov inc out je fldl2e adc add dec xchg jmp (bad) mov mov adc fcomps xor jle fucomp ss xor lods push adc inc fwait xchg lods pop adc dec dec and sbb loope sti shlb inc es mov decl mov push in inc dec pusha push add lock sbb push les jns hlt sarl stos or sub hlt sahf test sti lods dec xor js ja push cs pop sti and push cmp push lods daa fsts sbb cltd lcall mov pop mov sbb sti inc mulb mov sbb adc insb repz xchg outsb mov mov fistpll loopne ret push insl popa sti (bad) adc rcl enter and inc add mov sub in iret inc in outsb jae mov mov xor fdivrl dec mov cmpsl and adc das loopne push icebp (bad) jno loope imul lret inc int3 lcall fwait push mov aam cmp in fcoml push outsl fsubl shlb mov xchg lea and popf mov adc xchg lret shrl out or int lcall push and out (bad) mov dec sbb mov mov pmulhw push lock mov jb call mov add out out dec test dec inc test mov and stos cld cwtl xor aaa (bad) fcomp xor push leave sub idivb repnz xchg mov into cmpsb add shrl mov push or clc ljmp cmp fstl pop or leave lods mov pop adc push add int3 jecxz dec dec sbb and imul popf xchg das inc sub xchg in jbe addl jns xor testb repnz sub shlb in mov lds (bad) adc je,pt and add xor cs mov sbb stos shrl dec loop sub call and jmp push pop aad sub pop jo outsb lret rcl xor ret sub xor sbb push sub mov xchg movsb sub icebp adc push and (bad) cmp iret mov inc (bad) in (bad) xor mov pop arpl adc aaa loop aas sarl cld daa push sub pop popa (bad) lret mov test lret insb inc shl xor (bad) pop flds or and pop dec ja ss out pushf cltd (bad) cmpsb icebp jae pop pop fidivrl (bad) out rclb adc mov and sbb popa xchg cmp mov mov mov rolb cmp (bad) mov mov es andl cmp or cmp sbb mov movsl std add nop mov push notb xlat mov sti ss std shll jle xor jg sbb push sbb dec test js addl hlt es add inc add xchg outsl ss mov aad cmpsl cli lods mov in xchg imulb or inc inc pop and and cmp mov pop xchg xor mov mov push mov adc push subl pop mov mov pop adc lcall int3 sbb add and xchg fiaddl fwait xchg dec aad aaa inc gs dec and lret dec pushf push js movsb subb gs icebp or cwtl cmp mov gs je (bad) xor bound icebp loopne (bad) daa fwait popf fdivrp or test sbb inc mov lods imul push push jbe lcall sub rcrb push outsb mov mov mov pop daa movsb repnz jae stc sub in shlb inc xor adc mov into jno into loopne mov mov pop scas addr16 mov cmc adc leave sbb in out adc pushf adc add pop mov inc movsl lock push fimull ret add push or sub in dec fist jb insl stos iret xor idiv dec or cld or xchg mov pop adc sub lea jbe cmp pop mov stos insb xor int movl call pop add (bad) mov gs int3 jb iret jnp out mov fcoms sub clflush aam xchg out (bad) adc decb insl stc jo jns test jge bound je aad idivb (bad) js in mov mov int bound gs and negl leave out mov push inc (bad) loopne imul out out and mov add (bad) jno adc dec outsb xchg xchg pop shl cmp dec test sub daa or sub adc add sbb cwtl in sbb arpl xor push (bad) pusha rcl mov in adc es xchg aam idivl adc cltd shlb jg sbb sub inc push shl push mul dec mov mov inc insb cmp pcmpgtw or add xchg sub push jns call sbb and or and mov or mov dec or fsub xor mov mov inc add mov loop or sbb xchg adc aam and cmp addr16 or fldl cs dec sub lock inc xor lea outsl mov lods (bad) sbb jns sti adc dec addr16 pop push scas lret or cmpsl sarl sahf adc inc repnz aam sahf pushw in iret lock aas movsl sbb aad push jge xchg clc mov imul js add or test xchg push mov shlb cmpsl adc mov lea pop jbe jg mov mov adc cmpsb fs int3 push push xor xchg add gs stos fstpl imul inc mov inc das adc push cld (bad) fmul out mov sub xor shll sti mov test xchg xor (bad) mov sub pop lods loop (bad) cwtl nop adc xchg in inc (bad) and cmp mov in add lret lcall sbb pop mov shrb inc repz loopne rcll int3 mov cmp jecxz movsl fucomip data16 cltd test dec (bad) adc mov popf popf cmpsl aam jmp enter outsb leave xlat mov fcoms in popa out dec or je leave cmpsl insb adc push pop mov stos mov in loop sbb push and out fsubrs sbb pop es or or jp lret and jbe jecxz or call lds xor adc jecxz xchg fwait jg push push adc popf push cmp dec bound cli sub pop jbe lret inc inc mov and jmp repnz inc (bad) cmp out scas je lret sub and or aaa cmp pause mov and jmp jno popa jp adc xchg stc xchg mov int3 sub inc gs inc sti cld mov inc or adc xchg dec (bad) fisttpll dec mov pop dec imul enter push ret push cmp mov inc mov bound cwtl xlat mov int3 loop push sbb mov mov dec dec inc mov xor insl inc nop pop inc rorb mov ret shl mov dec (bad) mov sbb push loopne push cltd test pop mov push mov or fnop xor js mov jp das xchg es pop out lods movsb mov lahf push iret cmp sbb int3 mov sub inc not xchg and mov int inc push lods jns push mov out (bad) dec leave xlat and imul es inc pop push in mov (bad) loopne int3 cwtl sti sahf jns dec imul cltd mov les jmp (bad) xchg inc idiv mov mov out mov insb daa movsb cmp fildll mov js fnstenv push enter aaa insl mov add in pop cmpsb and aad fldcw shlb fistp lret mov ja lret push sub sbb mov fucomi (bad) cli stos in cltd xor icebp or dec mov and lods push add aas imul sbb jbe push lahf mov shrl xchg (bad) cmp insb jmp imul hlt jo lds cmp sbb dec add int mov mov leave xchg push cmpsb adc ret leave mov sbb inc xor push mull dec out (bad) fidivrl add outsl stos mov test out imul mov sarl (bad) or sub in xlat add xor fs ret (bad) gs test sbb dec std jl inc or ljmp and loop cmp arpl int3 repz fwait mov hlt int movsb jecxz or mov sbb mov idiv test jnp cs insl push enter xchg ds fistpll popa adcl cs cli or add xchg push sub xlat push push pop xchg mov cmp pop ljmp or adc inc mov mov imul push leave fsubs mov xchg or jmp mov cmp lea push jae pop aad inc mov int jno aaa jbe rorl inc rolb aas shl pop into pusha dec testl dec std and lahf push aaa aad insl nop repz leave movsl cmpsl loopne or movsb fs ret sub into sbb into push add dec pop push mov jae push fistpl insl sar cmp inc mov hlt mov mov stos sub rolb pop cli and in jp je in js int3 lods xchg mov mov bound inc mov mov sub outsl out int jl push xchg aad movsl int insb sbb nop out ja jno popf mov (bad) push jle jae mov mov fs jp add lods movsb and push out inc lods mov jmp or add loopne adc dec mov insb loop repnz lahf push mov sub dec push imul mov mov jbe xchg lods and inc mov (bad) int3 pop xchg cmp adc jle ret mov call (bad) mov into push add sahf enter cmpsb or (bad) sub fldt popf or mov inc jl jb repz icebp out (bad) push mov aam and xchg test sbb cmc adc jmp pushf pop or je xlat push repz mov jb xchg scas jl popf push lds mov out adc (bad) push pop fsubl sub or push mov inc jmp inc jo xor arpl scas push ljmp xchg ret cmp cltd pop aad xchg dec lcall push push lret adc andl xchg gs mov inc cmpsl jne push icebp pop push xchg lcall xchg scas cmp and cmp cli jmp push lods iret sub xor xchg mov aad mov mov mov adc sub arpl dec ljmp adc cmp jge stos mov insb (bad) cmp push aas test js and cmp dec jae out stos cltd mov inc pop bnd lock or adc or adc lods enter (bad) in pop mov mov leave jl dec dec ret mov pop jbe ret sub inc lea addr16 ficoml data16 arpl mov cld fucom movsl mov lcall sbb mov aaa ret jmp mov add test test es add aaa push pop jbe aad sub and or mov int inc testl pop push cmc sbb pop and popa rcr adc jle or mov leave cld jns push adc imul mov aaa adc or jae iret aaa inc sbb cmpl cld mov (bad) sub add mov dec ds jbe fisttp push fldlg2 xchg je jp push stos ljmp sub add xorl shlb add sbb ror and push lds jp or repz add fwait aad mov cmc xchg ljmp jle xor pop push cmpsb pop or sub sarl inc pop xchg insb aas mov (bad) fcomip nop sbb inc fidiv mov aam xor outsb loopne shrb aas hlt push cmpsl jnp movsb insb cli mov jge (bad) push leave jb stc pop mov and dec roll test in pop or stc mov or pop andl arpl xchg push mov sub rsqrtps movsb mov sub test sbb fidivr xchg jmp popl cmpsl ljmp adc lret cli clc fistpl ret lret aas mov in lods lret js fildl xor or pop scas xchg icebp (bad) psadbw inc add and rolb mov subb divl jl bound jmp xor mulb mov push pop leave lea es jl sbb bound pop out lcall test jnp cmp pop xchg sahf (bad) aaa push nop inc scas rcl in clc cmc lods es scas (bad) aad lods inc scas fadd dec adc sub test inc xchg push fmul roll std cwtl testb jo lret js fnop or pop mov pop cmp add cwtl fwait xchg mov xor nop ret imull push jno cmp sbb inc inc lret cmc adc mov push push add data16 das mov lcall popa ja add push mov out xor dec inc push aad ficomp lcall mov rcr mov outsl mov jl stos add in bnd insl cmp movsb xchg sbb and mov sar sbb pop outsb jl (bad) adc pop ljmp lahf push or sbb inc scas jmp test xor mov xor push sub (bad) rcrb pushf insb imul aaa xor out lcall xchg sbb out in push mov das and xlat outsl or mov out pop adcl lods hlt or ja push pusha ljmp cmp jbe ss dec scas fwait mov sub test (bad) dec jnp or rorb and shrl int jnp xlat jle cmpsb inc (bad) subl or cld leave in ret insl dec inc test fnstenv (bad) sub stc xchg lret jb sbb lcall push lock flds mov lock les (bad) (bad) and sub daa stc xor outsl sbb push add adc inc mov enter jge in popf lods sbb ja gs notl cwtl dec divb sub jns inc xchg ja inc push add add and mov mov jl call mov push sub jmp in iret fwait stos lret jne dec jbe imul dec fs or cwtl dec iret xchg xchg mov leave cmpsl mov push inc mov and es or sub jge jmp jne icebp xlat les inc pop loopne lret push lret sbb popa mov je xchg int3 nop aam mov jle (bad) pop inc in pop mov aas loope (bad) push sbbb test xor cld scas push xor dec xchg push push scas or jbe xchg mov icebp or pop or int3 lret and cmc and dec and push enter rol stos inc mov xor xlat pop js in into outsb jge stos adc jae pop sub roll mov (bad) dec icebp pop dec sbb (bad) out add inc sbb or daa mov leave cmp mov inc inc insl add jge lods adc aam push dec jge fucomp je adc mov fisubl jbe pop push (bad) rcrb cmpsb cmp mov and and data16 outsb (bad) in and ret dec and iret add add inc or jg shrl pushf pop stc leave daa das jmp in (bad) ss (bad) lret mov jb test jecxz adcl jbe push addr16 push sar enter inc outsb movsb in dec cmp sbb xor xchg pop pop cmp mov fcmove mov adc minps popa (bad) fiaddl fnstcw push int3 inc cmp cmp movsl or outsb lcall pop xor std inc xchg int3 insl and cltd xchg push xchg pop push cltd mov aad push aad in dec leave arpl sbbb out sbb cmpsb xchg add sub mov or mov mov in dec adc jae sbb xor imul das cltd adc (bad) pop rorl mov fistl dec xor lods dec dec sahf in mov outsl adc cmp fcmovne mov mov hlt push jo (bad) ret jle xchg sbb jo mov sti pusha add mov adc dec push (bad) push cmp fwait sbbl mov popa jecxz adc dec nop call movsl ficompl jae jo negb add inc cld test cmp jp pop stos shl repz pop push xchg push xor lret inc or mov lea mov pop mov int3 pop js cld (bad) mov mov out leave rolb pop adc xchg xor js xor push mull jb push mov xchg daa ljmp xchg ds sahf dec arpl pop and xchg cmpsb push sbb inc push xchg jne sub or pop xchg cmp pop orl dec ja jg sbb lock xchg dec das push push nop insb sub aas pop enter lea xchg scas pop fidivl inc negl test (bad) mov enter sub dec orl mov daa push lods pop sbb mov std pop bound popf pushf sbb xchg pop daa (bad) (bad) push sub jno jno xchg cltd sbb sub adc clc xchg sub and cmpsb arpl xchg or push pusha and jecxz xchg lock repnz inc mov (bad) mov sbb idivl jne enter adc adc cmp js mov mov mov aad mov xor push cli (bad) jp pop dec add subl aam cmp jno pop mov inc rcr dec add sbb inc mov icebp jl mov dec or add or adc adc mov mov or in push int loopne sub mov dec sbb fs xor loope mov jge mov xor mov cltd out cmc push dec inc imul movsl test mov pop movsl cmp inc add lods mov or sbb sub ret sbb in cld mov xchg outsl aaa fwait mov push out mov out pushf jp xchg (bad) out xchg bound dec push imul data16 xchg dec lock paddb (bad) cmp lods sub mov sbb and js sub aam and adc push jge push sahf jnp rcll pop dec add cld clc cmpsb push add jmp fnstsw shlb and mov sbb (bad) lea scas pusha dec xchg xchg test arpl nop into and xchg (bad) out sbb cld das jl scas stc mov inc sbb dec aad jno push sbb push ds jae out js mov push mov or pop dec js outsb hlt lahf cltd pop jbe (bad) je or lds mov (bad) cmc push pop mov fwait mov jnp mov adc sub ds sub leave jns call imul int push jnp fcmovnu repnz out nop jne mov loop mov popa mov flds jae lock je mov cmp test fsubrl (bad) xchg mov and dec pop stos leave lret out iret sti mov dec ret outsb pop call xor (bad) push cmpsl ret push in sub call inc lcall or pop adc inc repnz sbb hlt push push inc out movsl rcll std test jb dec pop ficoml jb out loopne subb cmpsb lods push les (bad) stc cmp sub push pop lods add fisubrl out jp pushf je in imul test clc and or push sbb push mov xchg push inc pop mov arpl ljmp mov movsl loope inc lret cmp call and aad adc outsl cli and cmp and hlt and add aam aad adc cmpsl lcall push aaa cmp dec add cmp and cmpsl test (bad) push addl mov rcll fcmovne sub hlt cltd dec cmp mov insl dec and xlat dec hlt pop adc jp jmp fldl jle mov imul push and pop cmc and aad and pop pop (bad) mov cmpsb jns dec (bad) fcmovnb shrb sbb xlat push mov dec mov imul jl mov xchg mov sbb adc pop pop push loop cs movsb aaa loopne ss pop negl push daa sub sub dec or gs add pushf adc push or cld faddl add out (bad) push call ror mov (bad) xor push xor ja inc adc loop icebp fsts rclb or push lcall cmpl es test add jle,pn pop test sbb loopne into lock pop out mov aaa fsubrl jecxz int dec inc out mov (bad) adc push incl mov push test jns dec pop inc and push add cmp dec std ss mov pop mov ss das mov sarl sbb call xchg push dec popa fdivl dec popf notb (bad) in lcall push pop jmp scas insb and loope inc sbb shrl jne pop pop push jg mov push popa (bad) pop out cmp add dec ffreep test cmp xorl pop roll sub mov add das mov xor insl add lahf jg pop xlat inc mov adc out movsb je cmp jae scas xor jl cmp jge xchg popf data16 xor add mov pop ss fwait pop fcomps jle inc iret sub cmp add rcll push mov xor (bad) sahf push rol mov imul subb (bad) mov xchg subl stc mov or insb cmp or pop aaa repnz cmp aaa mov pop mov test adc mov xor adc jl push imul lock out push dec pop (bad) iret mov push iret dec inc repz clc pop xchg jge dec cs lret rcr fmull mov repz or shr push or mov cltd cmp push test or jmp pop cmp pinsrw enter lret sbb xchg jo in fcom xor pop mov out and jecxz in and test dec dec xor inc dec jae ret mov and (bad) fcomps in fwait mov mov mov fstp lcall pop or iret das and dec or (bad) push pop jmp push push test sub and jecxz jp push fcomps adc mov cmp pop adc xchg mov fldt sbb mulb mov sbb or and jmp dec pop mov push loopne jo inc xor cmp shl add pop jle cmp loope jge,pt and xchg dec pop mov adcb je in mov js lock movsl jge pop sbb lret lahf adc jo mov cmpl leave iret pop adcl push jge repz jnp cli lcall push push or xor arpl inc rorb repz xchg xor fsubrl sbb addr16 cmp std push mov stos sbb call push xorb fdiv addr16 jne daa push add into dec lret xlat jae lahf sbb jno insb lcall lcall jae scas orl xchg cmp sub lcall push aas mov enter xor xchg orb cmpsb dec dec xchg xor jns mov dec inc movsl lahf lahf sbb sahf mov or or out test xor rorb sbb jl inc inc int3 enter in les add dec and test mov lcall cmp add mov movsb rcl dec inc or dec add lock outsb das adc sbb (bad) loop popa sub cmp sbb sbb mov clc ds push pop pslld enter inc inc xorb push fs push sbb mulb sbb or mov mov dec push dec mov xchg pop insl nop jns rol in jnp cmp push sbb and cmc adc movsb in rcll ret or divl test jmp or mov in cmp push das int cmpsb ds bound push mov xor or or aas in dec dec insb mov xchg mov mov pop dec insl add sub daa lock test outsl call out adc sub push das rcr dec enter fstl pop loop testl movl push xlat xor jge pop arpl inc jecxz imul int3 mov dec or fisubl sarb clc or shr into std loope (bad) (bad) mov adc xchg mov in sbb add pop jo pop dec add gs or cmp call out mov or sbb xor nop jp pop sub test dec xor or mov (bad) enter mov adc jno mov mov or sar adc bound jb dec popf icebp pushf jge cmp outsl push lods mov fs stos pop pop push (bad) mov mov lock inc mov lcall inc insl sub sub or insb shlb repnz mov lods divl sbb mov push scas xor sub cmp out pusha push xchg or adc jnp mov sbb push mov fisubl and and mov push push ljmp test xchg xchg movsb test sub xchg and ja jle jg xlat mov (bad) into inc mov das dec cmp add dec inc jecxz stos adc jbe cld lcall test pop idivb push sbb xor sbb lods popa xchg push int3 inc lock mov xlat lds xchg aas sbb cltd pop (bad) (bad) in notl and push pop jns sub lods jo push pop lock lahf xor and pop mov (bad) movsl das imul leave cmpb sbb inc jne xchg iret fnstenv ljmp les insl sbb ret and lock (bad) gs add cmpsl rcpps in adc scas and lods cwtl out mov clc mov rcrl sbbl sbb pop cmpsb je push pop mov lods mov fidiv cld xchg in dec movsl inc mov test test int out lods jno fld mov repnz mov ss outsl jnp arpl xchg sub sbb inc lahf or call sub imul cmpb (bad) xor inc pop lahf sbb loopne mov insl movsl dec outsl dec out cwtl imul pop fnstcw pop outsb push bound cmp arpl or jle inc enter lds repz pop insb test bound enter dec adc pop repz lea dec fidiv cmp jmp cmp out bound add fiadd bound mov mov pop adc adc rolb sbb pop xchg movsl xchg xchg jp popf fs (bad) push inc or inc lds mov jns pop lds mov popa cmc mov mov jecxz lea dec scas push jne xchg insb (bad) and push mov jecxz out adc fimull ror mov sbb pop inc ret dec aad pushf or xor cmpsl (bad) in dec mov jmp adc (bad) adc fwait or jge jecxz lret mov clc int xchg xchg xchg jp pop fildl stos xlat insb dec into aas leave repnz xchg inc int3 test lret or mov pop pusha idivl adc fsubp lcall mov sti pop (bad) sub ret call pop fiadd ja push cmpl addr16 push pop in jmp add out nop sbb outsb stc adc xchg or cmpsb mov inc and iret mov lea jle int3 mov loopne ljmp loop jno adc mov xor popf mov cmc inc dec inc inc cmpsl fnstenv cs or and pop push sarb dec push rol in mov mov and in jbe jl (bad) ljmp pop jg je cltd rcrl (bad) xchg inc mov push js repnz jbe mov add xchg cld pop idiv push mov in sub dec dec cwtl inc xchg stc and imul push out xchg frstor cmp loope or inc dec pop xor decl mov scas ja xor popa and push in dec sarb push mov call repnz pop pop inc clc loope push cld xchg rcl pop dec mov jle test mov shrb add jo rol inc fstl xor mov into mov es inc sub pushf push es fnstenv mov enter lods inc cmp xor push mov mov sbb iret inc mov out (bad) xchg loopne inc sahf mov mov xchg and mov dec cmp iret icebp fildl xchg jle mov mov adc andl add jmp (bad) out or les lods lock and xor or jmp (bad) xchg mov test jmp in push call cltd shlb ficomp mov sbb scas fadd sbb std bound mov ss cmp lret loop and mov pop add fidivl icebp jb sub pop xor test jg sub mov pop ret xchg push xchg stc out xchg mov adc add mov cmc out arpl (bad) stc lahf adc cli sbb in push xchg dec or fcoms push (bad) push or and cmp outsb cmp dec jns ret jbe lods push movsl dec bound inc inc test aaa sub pushf scas fldcw sbb cmpsl data16 inc dec sbb jl inc leave inc xchg pop jecxz mov mov mov (bad) dec xchg mov xor push rcll aaa or insb add xchg scas push out mov and int3 enter inc aad loope mov pop mov mov pop lret sahf cwtl inc in (bad) mov js pop and mov mov je fmull das (bad) add pop pop setg xchg sar mov (bad) push push and inc imul outsl idivb mov fwait xchg int mov scas addl mov cmp shr mov fwait xor xchg push push sub aaa mov and adc sahf sub or daa addr16 adc hlt or mov jp xor outsl or fs jnp dec pop nop and and mov push imull loopne lea cmp dec movsb mov lret push mov sbb addr16 mov outsb dec repz js add nop sbb cs sbbl scas sub fldt out lods call cwtl insl inc jl push imul out mov pop in cwtl push add mov xchg popa push ficoml mov outsb sbb xor mov aas ss xor dec push popa or aam sub int xchg jb lods scas mov cmp (bad) repnz cmp push or xchg fist mov jmp dec shlb mov inc (bad) mov lods and dec or push dec lcall adc jno arpl cmc inc fmull xorb jmp sub push cmpsl cmp insl inc and sub cmp idivb push imul (bad) ja push loopne insl out lds mov incl addr16 and hlt je jge lods mov inc cmp subl lock mov clc adc (bad) mov adc xchg pusha test mov pushf in cmp cmpsb ret out mov (bad) and (bad) or xchg push lock xchg lods addr16 jmp sbbl roll and lret ret stos outsl or push mov jge mov and mov ds inc shrb xchg mov into ss adc push orl nop cmpsl add and clc adc iret cmp inc or push or mov ret (bad) into imul clc and je mov cmpsl test xchg inc jg sub insl gs cmp sub xchg mov sahf (bad) es sub push mov call mov xor jl out sbb roll pushf addb add in xor aaa adc addr16 push push fcomi dec stc shlb fisttp or popf out cmpl or shrb lds sbb rorl pop mov int3 add xchg in fdivr mov sub xchg fistpl inc sub push pop gs cld fiaddl test cld dec out out sbb cmp mov in cmpsb fidiv (bad) sub jne pushf jb test ror mov icebp add rol mov in inc sbb daa cmpb (bad) (bad) push mov adc pop mov lea xor lret sub inc out xor add (bad) xchg cmc xor divb mov (bad) cmpsl outsb xlat nop pop popf push shll mov ret imul add (bad) insl fwait mov inc sbb lahf mov ss lahf cmp (bad) xor push adc iret pop push shll lcall int3 sbb scas sbb addl lods and sub xchg fstps mov or lret lret movsl rorb pop mull mov pop sub dec fimul inc mov and jecxz repz mov sti pop shr jb adcl add xor ja insb jge sub leave outsb addr16 xlat pop ljmp jle jge xor rcll cmp iret stc in inc jecxz pop mov xchg gs push xor mov xchg sub mov mov inc cmp xor or outsb xchg aas leave mov (bad) jmp inc push cmp lret add ljmp xor ljmp jecxz cs dec ljmp push cwtl push test iret adc cwtl repnz xchg out dec push push xchg xor inc jnp fprem cmp fs xchg lahf lds xor and inc lcall lret aam in jle push iret mov push int cmp aad mov enter dec and sub test popa test sub sbb sbb or pop cmp add or in mov mov andl cmp sub pusha push test stos jno sbb pop jecxz or xchg sub inc pop or cli es test mov jl dec in out arpl jno in test pop loope cmp rclb leave sti inc xor enter fnstsw pop cmp fmull lsl (bad) cmp and andb push cmp test xchg (bad) addr16 cli (bad) or orb xchg cmp loopne lods mov push ficompl cmp xor or (bad) sbb pop sub sahf repnz out sahf mov addr16 nop add cli xor inc clc cmp imul aas mov mov out mov xor mov xchg daa mov nop inc js cmpsb or sub out je xchg fild inc lock sbb adc movsb sti jmp inc inc call jl jbe push push jne imul dec xor jo out sub out ret in sub pop std xor xchg imul insb xor cmpl push cmp push shrb mov and loop mov lock gs push pop bound rcl fisub lods sarb jo dec dec clc mov pop imul mov jae icebp xchg pop pop mov fs sub mov and addr16 adc sub enter push and push mov mov lods (bad) in (bad) mov fnstsw inc xor lret push cmp (bad) pop sti fdivl loopne movsl ds cmp adc adcb pusha jae push ss jne pop pop mov adc mov mov in pop stc out inc jne (bad) cmp das (bad) ljmp sub movsb xchg pop jge sub push mov dec das mov ja xor bound aad cmpsl and subl xor adc cmp fidivrl (bad) mov adc sbb js stc mov pop enter or repz movsb (bad) stc jns mov jb lock inc mov aad jno mov or mov cld std add repnz lcall jecxz and sub test rcr call adc mov fidivr notb mov or lods mov push scas jl dec ja xorb mov mov aam dec inc aam add fcmovbe rcrl inc test sub sarb sbb or pop sbb outsb lods pop xor out mov pop xchg inc push ficoml mov jae and push lahf sub ja loope in imul jg enter xchg xchg mov mov fild xor adc inc cmpsl jbe jo mov mov xchg mov jne pop push jbe pop ret cltd jb sub push loop test mov movsb clc mov cld and jp (bad) jle mov test lods push mov push jle je fnstcw decb fwait dec ja test xchg push or jp jns popa cmp arpl (bad) les pop inc pop lds mov std mov mov cld mov insb call dec xor clc sub test out cltd dec push ja mov xchg cmp cmp xchg cmp into cmp xor mov es fnsave adc adc pop test icebp insb mov sbb and rol mov dec sbb push dec mov cmpsl (bad) push stc pushl add cmp sbb stos xchg push xor mov xchg aad repz cltd push pop cld stos clc stos mov cs test dec push lods stc (bad) pop mov pop mov xor in jns divl pop xchg jmp scas cli stos cltd ret mov popf pop lret mov xlat mov iret lds clc addr16 test int adcl jp mov in jg dec ja push mov aad dec aad test lods (bad) mov ljmp pop xchg in pop and in into sub lahf scas in or mov sub xchg push sub rclb add push addl lods push add mov (bad) repz xchg jg (bad) jbe jg stos popa xchg mov test pop cmc aaa xor sbb int3 cld inc stc push sti mov lahf cmp inc xchg jo jmp movsl adc and pop subl sti sahf clc sbbl inc leave mov inc insl and fwait push pop ds lods aaa addl push sub mov cmpsb sbb jbe mov scas xchg sub push sti int3 jne rclb es xor hlt mov test mov rcll inc add jecxz or cwtl pop xchg (bad) sahf adc les lds scas push in cmp sbb data16 fnstcw adc cmpb enter inc push aad test call mov scas stos sbb (bad) aam insl ds xor stos imul mov or call cld and mov and lods lret or in jecxz cmp push sub adc test pop cmpsl jg push xor or sub dec jno sub add or mov std movsb and (bad) out test cmpb mov mov cmpsl sub pusha ljmp test outsb pop (bad) dec pusha fmuls sub ds xchg das cwtl jne xchg shrb xchg pop xlat not pop into ja test dec mov mov ret jns lods dec dec adc pop jp add push out ret inc aas push pop pmuludq adcl imul enter xchg cwtl pop jmp mov cld inc adc or flds aam sub jo es pop mov push sbb jl jo add mov insl fldcw das mov pushf shrb mov popf sahf icebp and cmc xchg adc mov fbld add in hlt ja ret bound mov nop xchg sbb add sub (bad) jae cmpsb or icebp roll jo xor add add frstor push daa shl mov mov sbb cmp xor mov pop and cmpsb mov call xchg imul mov push cmpsb push inc ljmp fild mov daa pop sub jo lods jp lds mov mov jnp int mov decb fldl insl dec cmc xor cmp add cltd mov iret xor inc pop inc fwait inc sbb pop mov cmp push in sbb xchg jl lods push or lret cmc and push stos push jge xchg pop dec push sbb nop inc popf and arpl inc dec in roll insl mov cmp mov std lock xchg mov ja jg lods xchg aad scas ret out out sbb loopne push jno fmulp inc data16 out pushf mov mov dec mov push in rcll shrl jmp pop fcoml sub jne stos push cmp mov inc rcl xor ja sbbl jnp push sbb inc inc adc lea sbb or cs ds lods mov in (bad) pop jg dec pushf pop nop lods dec sub push sub add push movsb pushl xor loopne inc dec stos in sbb adc fdivrs xchg and hlt out idivb aaa sbb or lahf cmpsb std (bad) je (bad) (bad) push inc mov inc lret in xchg out xchg or scas adc (bad) xor mov fadds aad xchg sarl int3 les out xchg test mov mov mov mov loop jae inc mov mov pop or sub (bad) sbb lahf ljmp pop xchg add jb lret les inc adcb pop sub loopne cmp and inc fdiv stos movsl dec xchg push leave or ret push mov jb (bad) in jb and ds mov mov jl clc in or cmp pop push cmc (bad) dec std iret jbe enter (bad) cli jle ja (bad) aam out sub cmpl mov scas dec adc stos out push sub inc stc into jno push add mov gs subb xor repnz adc add (bad) cld ss sub cmp nop mov pop xor aaa ds clc mov pushf push (bad) (bad) xchg in and or lcall adc jp sbb (bad) cmp mov or cmp jo loope nop ljmp xchg and aas movsl sbb xor push or lea add enter int push pop rolb aam xchg bound fadds cmp xchg pop scas icebp xor out xchg xor jns (bad) hlt mov inc push bswap aad lea int clc stc stos nop test into (bad) stc inc mov in xchg xor sbb xchg dec mov or push xchg es jl xchg adc or xchg pop mov ljmp jo das sahf int3 rorl push xlat or pop mov mov dec cltd jmp inc jecxz push arpl inc sbb out icebp cli push mov sti arpl pop adc in cmp push pop lock inc and stos outsb pop repnz mov sbb (bad) adc xor jge fstl int3 out mov es sahf xor and fistpl add dec xchg pop inc test rcrl (bad) inc (bad) in sub (bad) fcoml xchg inc mov lods pop out cli aas cs insb xchg ja mov aas addr16 lahf jge cmp cmp sbb addr16 pop adc push inc add pop mov xor out ljmp sub cmp push mov jbe fnstcw loop cmpb xchg lods xchg int3 fdivrs shrl std and mov mov push cmp std fstl enter cmp (bad) nop sbb je inc xchg add scas mull outsb and jmp das pop cmp sub shrb sbb (bad) in cmp ja ret dec pop mov mov cwtl icebp imulb and cmpb test cmp xchg into mov xchg orl stos dec call inc adc mov inc xor push (bad) scas in cmp xchg je mov test test inc test and cmp in call xchg add js mov jmp push pop jo fucom out ret push ds mov das dec cmpsl insb and or cmp add jae jmp sub fistpl push mov jno cmp movsb out push sti push inc mov pop mov out xchg rclb insl mov add mov xchg outsl ja aaa ss sbb dec xor pop fcmovnbe jo push and add sti divb dec pop mov push dec push or loopne pop push add push mov dec inc test aam mov mov sub cld fadds mov push rclb insl das add lods xchg mov aas push mov mov insb xchg lret dec xor push lock decb sbb cwtl loopne pop mov stos or and test sahf push xlat popf lret push sub pop add mov jmp add gs scas cmpsl or mov loopne test mov ljmp bnd ljmp addr16 jne cmp rcrb or add cltd mov das cmpsb stos hlt sub mov xchg pmulhuw cmc fcomi xchg enter cmc xchg into (bad) in dec flds adc gs movsl daa in sbb leave sub xchg push sub dec push popf xchg mov sub lds fbld out pushf dec out aam lret stos (bad) jno jne xlat mov jbe inc sbb jp and mov mov dec xchg inc outsl adc les syscall dec mov idiv outsb scas addr16 mov fwait mov jno and adc inc lds ja sub in leave xor and sti or pop inc sarb imul adc inc pop (bad) ja xchg repnz mov rorl lret xchg add flds add insb lock cwtl mov xchg out push stos sbb xchg jge dec cmp cmpsl loope fst movl stos inc out cmp mov (bad) jo outsl (bad) hlt push inc push push cmp int pusha repnz mov xchg cmc std movsl iret jl dec pop xor xor push add adc rcl and xlat movsl sub arpl loop sbb adc jnp jae loop daa fsqrt loopne mov cmp iret std pop add mov push test mov rolb push cmp gs out in mov inc mov xchg ret aam inc mov jl inc mov (bad) pushf movsb sti hlt nop adc xor aaa adc (bad) adc gs jge shlb mov in aaa inc hlt push arpl add rcrl mov in out rcrb adc or push sub jl sbb or pop shll sub dec jg aas push pop inc insb xchg xor push sti cmpsl sarl (bad) add shrb in jmp cld lods push sarb jae,pt pop testl scas pop and rcrl loope fsubrl add sbb add mov sub xchg sbb add and or or cmp bound mov ret sbb (bad) inc lcall pusha ljmp add imul pop jns push loop jg pusha pop jle outsl out fidiv (bad) icebp mov mov mov pop arpl jae out scas lock jno mov aaa fwait and (bad) push or xchg mov imul popa imul in out jo divl stos mov mov dec movsl mov enter mov aaa adcl adc pop or mov or sbb (bad) jecxz or sbb notb icebp mov (bad) imul xchg jnp mov (bad) jb mov cltd ds outsl test push divl push insl loope and jbe dec xchg lods subl ja (bad) bound xchg mov or dec cmc sbb pop add push fmull jp rorl int (bad) out sar pushf mov je and shrl pop (bad) cmp cmc adc sub stos inc scas xorl ret fsubp (bad) mov sub inc fwait xor push mov mov rcll stos jp xchg ds and and sub pusha jb pop gs xor mov xor (bad) mov movsb adc test mov jns jmp add inc or stos cltd fsubr adc mov jae loop mov dec cmpsl inc inc int3 pop cld out and or testl scas xchg dec js test jg scas aaa jns or aam lods sbb cmp xchg cmovbe add je fistpll fwait loop and sarb xchg notb nop cs xchg outsl adc cmpsl shlb xchg pop sahf ljmp mov clc sti stc sub or cmp gs mov push aas sub inc xchg inc inc inc das lret mov cmp ds popa lock add and inc xor xor adc in mov sti jmp or pop adc shlb jmp add imul xchg pop in js ja notl mov push cltd std test es dec and and xor in mov shlb jecxz ljmp push xor stos adc aaa mov dec call scas and jecxz mov mov jb pop (bad) loope sub jnp (bad) jns sub or mov lods (bad) scas lea ss ljmp cmp dec aam dec fldpi insb in rclb into test in xlat dec xchg pop aam add pop iret mov or pushf adc movsb cmp hlt mov xchg sbb or ficoml mov push xor into nop cmp sub or fiadd cmp push les mov sub add ret pusha or je shll lahf sbb mov test cmpsl dec ljmp mov add in lahf or add icebp fprem popf daa test in clc pushf pop sbb (bad) add sbb sbbl adc adc inc icebp inc cmp dec sub mov inc inc push call jns jecxz ss xchg nop pop push jno or sarb jecxz cwtl scas sub push das mov addl (bad) loop xor add xor adc xchg ret iret ljmp inc cmpsb mov dec mov rcl cmp gs xchg xor test lret test lahf data16 out pop jb pop cmp fs movsb xlat fisttpll hlt mov dec pop repnz cwtl in mov adc or lahf xor and mov inc pop sub mov ds sbb mov (bad) loopne stc mov (bad) mov out stc push dec mov aaa test push adc aaa cmc movl fmull adc test sahf cld or dec jle sub inc aad call ret mov je mov inc mov and inc pop data16 jp push adc and mov push sbb inc es cmp (bad) into movsl mov sub add cltd js dec subps jne xchg (bad) shlb xor in cmp out (bad) stos sub icebp dec pop add lods pop add push dec inc movsl inc dec in pop mov ja adc jecxz fwait call dec mov (bad) xor out sbb pop hlt lea pop ljmp mov xchg sub cmp mov aam bound sub dec aas das sub std mov xchg repz imul mov mov mov rcl fdivs (bad) xchg adc imul or js incl jmp mov jne mov nop (bad) nop inc scas in cltd sub outsl pop jbe cmp and in sahf jmp mov sahf aam jbe jbe addr16 out xchg cs leave gs sbbb pop pop mov insb cmp fwait pop (bad) outsl (bad) rcrl aam or or xchg ljmp mov push arpl add (bad) push into js dec add js rclb addr16 inc outsb mov xchg scas imul xor out xchg mov sahf pop (bad) flds jb mov mov mov inc push cmp aam or sti leave cmpsb push cmp xor cmpsl in (bad) movsl pushf mov ret cmpsb mov lret loopne cmpb fildl (bad) dec xchg xchg jle popf dec fidivr adc out repnz cld arpl dec pop and jb xor xchg jmp leave stc das mov push or lcall push scas xchg fninit cmpl mov mov xlat mov and gs out sarl fbstp das jge rorl sbb sbb xchg sub loope pusha daa sub jle mov ret enter and cltd xor aam push mov jns adc (bad) stos or notb sti rolb outsl and and aaa (bad) in popf in mov pop les xor lahf hlt sbb dec ret les pop les out xor adc or cmp rorl sub std outsl jl sub jmp jmp ss vpaddsw xchg push xorb std loop add or negl (bad) sbb pop insb fwait stos iret add and or loope dec les fisttpl sbb jae rorb or lahf push movsb stos test mov lods xor cmpsl aad push lret push push push call fisubl jle cld cmpsb lods scas and outsb rcl jns mov aam dec mov adc roll push sbb jmp sbb jo (bad) dec inc sbb gs pop notb jl jecxz ffreep jb in push popf jae mov jns adc popf pop inc rcrb outsb divl ss stos aas mov hlt push pushf (bad) sbb xchg mov lods lcall rolb flds and sti pop dec and data16 mov movsl mov adc pop xchg jl into pop dec and mov into fisubrl sbb fcomps push decl test ret push loopne adc imul mov nop xor jno repnz add daa xchg test dec pop mov dec sub fmull pop outsl jns pusha stos add cmpl xchg sarb xchg out fldenv fstpt inc jge loopne pop push inc mov cld jbe leave cld movsl add scas mov nop outsb icebp cmc xor adc jmp jnp dec inc inc fwait add pushf pushf inc xchg xor outsl cmp jns sbb aas add xchg pop jp inc mov pop lret test in xchg mov jne mov fstpl (bad) sbb jb stos ss subl cmp pop cmpsl fwait sbb fst cmpsl rolb jp fistpl rclb mov gs mov js std mov enter sub dec pop push or movsb mov aad jecxz je jl sbb cmc pop rcll jno leave addr16 cmpsb repnz dec imul fcoml and cmp sti in sti push mov mov stc or and lock jno iret pop sbb rcll inc repz cltd mov (bad) sub rcll adc int3 sbb xor ret sbb sub add dec icebp pop mov mov ror sub pop mov aam les adc sub or inc je xchg pop mov mov (bad) cmp or js mov (bad) iret test test ds test ljmp movsl in mov pushf insl je inc aas cmpl decb add jp fisttpll add clc fcomps sti cmp lret mov and jg pop push popa push pop int (bad) jmp push lahf mov xor mov sub das mov jmp and xor cmp pushf (bad) pop ja fbld lds fsubs jp movzbl mov (bad) push ss pop or sbb dec push add pop adc pinsrw popf lock pushf lahf add jns adc dec add sub setns icebp out sbb fild mov mov and mov adc int3 jb cltd subb pusha dec rclb push cmp in lea pop sbb lock dec xchg out add fnstenv push mov sbb inc sbb jge mov daa mov xor add and or addr16 call cmc fiaddl lahf out pop xchg test fbld cmc pop roll mov mov dec sbb (bad) cli adc out inc lds and xchg push movsl aam or cmpsl add add testl add andl insb jns inc stc popf push xchg std push pop pop pop push hlt or sub xchg mov xor cmp les arpl xchg jecxz mov add mov xor mov out hlt ret ficomp push push sarl popl cmpsl mov xchg jp (bad) xchg xor sub and int pop mov insb mov mov aad push or sbb adc mov out scas inc mov outsl test push les inc dec inc xchg insl pusha popf cmpxchg out dec add cmp (bad) xor push jae in sub pop or cwtl aaa addl dec (bad) mov xorl fxtract xchg std out (bad) out into push ds aad lahf ljmp cltd repnz jne int3 je imul mov inc xchg jb sub inc test shrl mov ja and es test dec inc jecxz mov dec push outsl in lea gs loopne dec cmp fsts in (bad) push int dec in fcmovbe in xor mov sbb cmp mov je leave xchg data16 sbb fistl js dec push inc mov adc sub ljmp push cmpsl repnz mov inc xor jmp loop sub add imulb popa add fcomip add lret or rolb mov je iret (bad) dec sub mov outsb scas xchg inc or xorl pop push dec insl aaa js dec fsub (bad) shrb mov les sahf sahf gs xorl loope sti pop aaa push push jo repnz jo adc sub (bad) jne or push push js dec xor clc outsl pop jne rcll outsl andl cmp dec (bad) and hlt mov outsb cwtl push inc daa push outsb fidivr scas imul dec dec dec cmp call hlt dec loopne ret sti out pop push in jo add jae (bad) mov xchg pop cmp data16 sarb lock out cmp inc aas cmc sub test push aaa push clc int add add dec enter push nop das loop dec addr16 fmull lds (bad) stc aaa inc cli lcall stos cmp mov jns xlat popf add sti movsb sbb stos pop scas cltd jns scas popf and das adc nop pextrw push push rorl insb adc jmp data16 cmc bound imul adc mov push push repz pop pop jg sbb jle pop jb icebp fistp ret sbb out les sbb jge loop cmp (bad) es pusha sti out addl mov movsb movsb stos mov xor std outsb sbb paddsw sub xchg add jl imul adc clc (bad) in jge bound ret jmp dec jecxz ljmp pop pcmpeqw test call stos sbb mov cli jg pushf adc mov bound enter je pop dec mov mov and shr stos sub xor test mov push out mov fadd mul pop pop cmp jnp aam pushf bndldx or pop and cmp mov inc push push repz mov xlat rcl fidivr outsb jg std in dec movsl (bad) mov pop js push adc jl pop jl inc dec mov in and or movsl add shrl (bad) dec dec dec add setns cmpsl enter sub (bad) aad sub lret daa push psllw popa xorl mov mov cmp or leave outsb and popf mov divb in pop cmp jmp bound and out mov cmc arpl lahf mul push test cmpsb mov ud2 fistp dec cwtl psrlw movsb out adc sbb js fisubrl pop jmp push js shr outsl (bad) icebp mov inc loop leave add lret inc std lods lret sbb mov or (bad) cli add sub jbe pop repz lcall bswap jle jl fcmovnu insb pop pop insl sar fnsave cmpsl dec je push mov inc adc (bad) xchg mov lahf cmpsb mov aas pusha xor jge cmp sub das jecxz test fisttpll xchg addr16 popa dec fnstsw jle jb enter push inc rcll insl xor mov movsb arpl xchg pop popa add jecxz push fistpl ja cmc xchg lcall sbb pop (bad) lcall (bad) sti add add nop push xor stc cltd lret adc push fsubrs pop addl imul daa mov imul adc or or jge arpl sbb mov push hlt xor cmpsb nop shll jne mov sbb into lret lods adc imull testl jno jp pusha inc sahf ljmp dec ljmp shlb jecxz sti cmp cwtl mov sub sub aad add adc sbb bnd and mov pushf lcall popa (bad) ja lock jl push mov dec dec into dec es ret xchg push sub jl enter push repnz xor lods movsl dec jp cli outsl mov add ljmp outsb fisttpll cmp jno std (bad) push aam mov mov xchg enter cmpsl jb inc or pop mov ljmp pop fcoms pop adc add int lret or pop ja int3 aas pop lret mov mov scas insl (bad) mov jmp sub add (bad) pop jo test call insb icebp incb pop mov jnp xor fwait es adc xchg out stc data16 sti mov fsubrl jns call lock lds pop jae xchg push or dec popf inc push cld fstpt dec int3 (bad) and pop xlat xorb pop mov xor cmp push pop das cmpsb sahf cmpsl xchg mov mov and (bad) adc bound loop loope inc out std xor out adc and cmp es jne lcall icebp sahf mov xorl dec xchg or add int3 js imul push add insb call cmp lahf mov lods mov je add mov sbb lea pop adc push pop pop rclb mov test and cwtl movswl xchg and and addr16 scas repnz add ja outsb call out mov sbb jmp mov adc movsb mov scas xor xchg sub aaa (bad) mov inc repz and ss push scas pop xor xchg call add mov dec fmull stos xor push mov inc xor add cmpsb sahf pop aam and mov pop aad shl mov inc aaa xchg in imul sub mov int3 movsb sbb mov int3 sub repnz pop mov add mov add pop add sbb popa dec jae iret shlb inc pop jmp pop push ja mov and and jge sub push jg lea inc icebp ss clc or xlat mov idivb sub std push in jb sbb jl xor fisubrl scas sbbl loope mov and push (bad) mul pop scas leave xor imul (bad) out bound jmp push fistpll add xor (bad) jnp and pushf stc btc stos xchg dec cmp in xchg insl pop xchg lock popa jnp in mov jp adc dec xor in mov mov pop mov adcl add repnz mov push xchg pop repnz cmp scas popf jle xchg outsb adcl repnz sbb sbb inc test aas jo enter pop xchg cmc ret imull add lds lea scas in fcmovnu (bad) loopne les mov dec rolb add or imul mov lock stc lret dec xchg mov popf dec mov ds out mov pop fisttpll mov pop xor mov push add xchg shl fcom outsl push js cmp or add test (bad) sbb loop repnz adc inc nop cmp (bad) test (bad) lcall rcll pusha inc pop inc (bad) repz lds jg bound inc (bad) xor inc sbb stc inc dec cld call xchg and pop (bad) out jo jle cmpsl (bad) add decl rcll jb movsb idivb and mov xor fucom es pop sbbl cs add je jecxz (bad) xchg mov rorb adc stc push pop popf sti mov (bad) mov ja xchg out adc ja or lods mov and cmpsl ret je sub mov push shrb jns iret movsb inc cmp dec clc repz arpl xchg je and scas mov ljmp fdivrl inc (bad) into dec mov adc int3 lahf sbb add (bad) jo push (bad) mov dec sub shr out bound pop and sub jmp push xchg lea xchg (bad) adc int inc xor push (bad) out push aaa add iret xchg sbb and lret dec jp adc sahf pop xor (bad) lret das repnz daa sbb push sub fimull lds lds fcompl cmc mov xchg add cmp repnz ret jnp and loopne lock insl sub inc popaw jnp sbb dec mov push xor add pop pop lods inc std pop insl xchg add sahf je push mov fistp and in add mov xlat cmp outsb xchg mov stc subl dec pop clc sub adc outsb inc sub xor cltd mov xchg dec bound roll fcoms shll sub jp jp ss xor xor xchg xor cltd pop mov and in sub sbb fldcw movsl (bad) jl fadds std push or lahf clc push and mov (bad) out add inc mov jmp rcl lcall push cmp lea adc jmp push ss cmpsl ss inc inc add push aad jp repnz jne inc outsb and pop adc pushf sub in dec scas pusha popa or flds fadd jb sahf lret sbb cmpb in cli test popf mov jbe aas insl sub adc ror adc adc mov jp mov add insb pop ret test ret test push (bad) or push shrb (bad) hlt push push xchg or cmpb loopne int3 cli jle mov outsb mov lds inc jp negl test (bad) loope out icebp jne xor push sbb (bad) sbb add push dec and mov jno mov popf cmc popa mov stos mov faddl and ja bound pusha fnstenv jns push mov dec xchg aam mov mov mov pop popa jle cmp cmp loope lock jne cmp cwtl xor pop out sub fs cld or ss push js in mov mov bt insl pushl jge (bad) cmpsl dec insl loopne sub jg adcl xchg push in lock xor setl mov (bad) push in fcomip and jle lods mov popa mov (bad) dec dec (bad) into enter xor adc jnp stos inc lods je cmp push rolb ss mov adc fwait pushf gs stc loope or mov mov hlt jp jge pushf scas ss icebp xchg sahf add dec inc mov mov imul push xor adc push mov xchg cmp fwait mov (bad) dec addl (bad) inc sti xchg mov fdivrs mov or cmp dec lock sbb inc jp pusha fnstsw out push int3 adc fidivrl mov iret fs loop std fistpll jmp pop pop (bad) push jo mov shl and das push and (bad) and in jp in add imul adc idivb mov int jo pop out and xchg xor ja adc test dec sarl or sub lods dec push mov (bad) int3 repz mov (bad) jnp gs cmpsb shrl cmpsl lods pop or das mov mov hlt (bad) and cmp sbb lret jg in mov test aas pushf sub addl (bad) ss sub xor cltd xchg stos imul dec dec ljmpw xlat and cmc pop and cmc add cmc sarb test cltd fdivrl mov dec imul insl xchg jle test out dec sub loope inc dec scas dec jns repz shrd sbb sub dec stc (bad) insb cld fstpl or mov outsl mov cld jmp sbbl or xchg rorb lcall add fnstcw cmp js adc add js pop add inc dec ljmp das loope push dec nop loop gs sbb loop inc adc pop int xorb add mov pop fdivrs adc je mov ret stos dec push into insl sti mov pop cmp insl pop cmp mov bound xor xchg stos ljmp and push cs inc cmp cs test jge bound (bad) (bad) add pop enter mov sysenter jp pop xchg imul mov repnz rcrl mull or rolb mul push packssdw movsb aaa adc ret xchg push lret mov mov adc (bad) xchg out cmpsl (bad) and push aad repz jne mov mov shrb pop mov lds cwtl jmp je popa lock fistl dec cli pop popf xor stc lock mov xor mov cld mov ret lcall jbe js or mov test std add leave in hlt dec fldcw mov icebp in inc xlat cmp sti stc sbb mov dec adc in xchg xchg movnti or adc push jl popa sub clc dec and xlat xor (bad) jp je mov das sbb shll inc bnd inc imul dec lods jl mov adc and ja mov jp cmp push dec out movsb out jns pop daa call add ret mov lahf lss stc and mov lret adc push stc push mov insb mov les pop or pusha mov (bad) repz sarb fwait cmp es rclb lahf insb push push test sub dec das and inc in pop push pop popa lcall cwtl ds lock adc jmp lea adc xor cmp scas aaa mov push inc mov jp,pt and in repnz and sti les fwait ret adc jl fwait pop jge pop (bad) mov inc or stos dec stos cmc cmp push dec lods mov lea stos inc pop loope and movsl pop or jmp adc das clc ret arpl test push aam xor in aas mov test adc pop cmp cmp fwait (bad) jne lods jo jmp out cmp les or mov mov pop inc in nop xlat int mov pop in mov adc ja fs push push sahf inc js ret gs mov xchg lods jns adc lods push sub lahf and pusha mov mov mov jp cmpsb enter mov shl int fwait fwait je das js sbb add mov push imul idiv push adc mov or inc jle jle dec popa jbe mov mov repz scas mov pop icebp mov imul push in test or lret idiv adc dec (bad) fnstcw push xor inc cmp and push mov data16 je jg gs in mov inc inc adc bound call push cmpsb mov push xchg in push aam fist int3 dec xchg xchg push mov jns jno xchg jle sti cmpb or pop and mov adc or sbb lret xor (bad) sbb bound push cwtl adc ds sub dec repnz push ljmp push ljmp ja xor dec adc enter int3 dec inc xchg lods lcall rclb out cmp pop out pop cmp test mov cmp (bad) mov scas pop insl dec mov cmp xchg jl pop jno out sti dec sbb lds mov or shrl push jns mov pop lret push nop jne outsl xorl xchg std push push pop sarb push int3 push mov jl cmpsl and loope add mov inc inc and sub iret mov stc jecxz (bad) insb jnp aaa pop outsb pop jae mov fldt outsl push xor std outsb test rclb add cmpsb insl xchg pop in cli test aad imul cwtl test roll jb and sub adc sbb lods xor cmpsl jns sti insl scas push cld cli jno push out stos push and loope cmc clc ds push clc fsubrl scas jne mov shrb rcr mov xchg popa fs pop add mov in jl inc xchg pop (bad) outsl dec test inc xor and sahf sti xchg push (bad) in fdivr inc xor inc xlat fsub sub sti je inc loope pop cli add or inc lahf test pusha movsb xchg popa lahf scas xlat fisttpll shrb mov pop inc fstl int3 adc nop das cmpsb cmpsl dec mov sbb mov mov jge test es fimull (bad) aaa out cs xchg (bad) push cmpsb lcall push fcmovnu test dec addl aaa jmp push insl les cmpsb data16 popf push xor sbb cmp fdivrs push (bad) rcrl stc push or fwait push in bound sub jb das xlat mov adc sub jg lds js adc incb lods mov add fiaddl and clc mov lret icebp cld call (bad) mov push xchg mov repnz inc dec stos inc sbb aad sub in inc xchg data16 inc hlt fwait pop sbb mov dec cs leave cmp add pop add leave mov lahf xchg pop jae sub mov push fist push cs pop xchg cmp and xor mov pop mov shrb das inc or push les aad fbstp push push jmp insl jecxz push mov mov test test mov bound fldpi push out xlat push pop in pop mov dec fsubrs xor jo lods pop xchg sub (bad) test pushf sub xchg lock lock gs xchg mov add test and add inc mov daa ljmp xor dec dec pushf inc (bad) mov cmpsb xor hlt lret stc outsl or stos and addr16 or push or lret or pusha cmp (bad) mov mov pop mov shrb jle add inc pushf in inc frstor cmp clc je xchg aam rcl adc cmc fistp cld mov inc mov bound xor leave aaa mov mov and mov dec push sub enter sbb lret or jbe cmp lea adc xor xchg inc pusha mov fisubr ja cmp mov cmp sub lret cmc stc cmp dec sub ret adc jo cmp lock popa imul inc popa inc movsl jecxz mov cmpsb push sbb lcall adc mov inc adc lds xchg loopne jns loopne pushf xlat or adc lahf mov push cwtl movsb push js mov (bad) cmc inc push lock fldl push addr16 xchg jge lcall popf ficom inc loopne sbb and and mov fldenv inc cmp enter xchg rcll mov pop mov out ljmp das out jae sub notb jo and mov rcl xchg dec mov mov loope sbb pop sub sbb mov aad inc jne and dec mov dec push add mov and mov xor and jg pop scas (bad) cmp mov and mov adc cmc dec adc test sbb xchg jnp cmpsb sti inc jg aad cltd (bad) lret in addl pop or lahf icebp xchg adc fwait clc add fisttpll sbbb dec xchg inc xlat mov lods ljmp jae mov cmp roll inc stos pop jle inc jno xor mov shll pop lret das mov cltd nop addr16 and or lret xchg popf xchg mov stos adc out jl inc lret popf push jae add adc pop bound or jae push daa mov js pop movb and fistpll xchg jns (bad) jg pop adc jo aaa jmp iret fucomip sbb aas sbb adc xlat add mov cmc out jecxz out cmp das test mov loope and cmp add aaa or mov mov imull push das dec stos pop rol pop iret mov lods sbb out iret inc repnz pop sti cmp ljmp sbbl dec aas xchg popa mov xor pusha (bad) daa dec sbb stos add dec sbb jns xor and or imul loope push pop lret sti test adc sub fild (bad) out add (bad) xchg fisubr cli jne cmpsb fwait mov mov jb fistp pop in xchg movq and das je and decb sahf fisubl dec lret pop dec fwait xchg jns mov jo jns sbb fcomps iret cmc movsl xor adc fildl dec adc scas jb mov out mov ret mov add mov pop or mov js and pop js mov outsb xchg cltd fstpl insb jmp into sbb es cmp jle sub adc lcall fstl add dec cmp xor pop or sub pop mov adc div push mov out aas rsqrtps rorb stos outsl dec loope fisub sub and sub push cmp out movsl das fcmove mov push out sbb xorb sub mov imul stos popa xor sahf adc or pop inc push mov xchg movsl fldcw das jmp loopne sarb and repz shl and fstpl pop pusha adc (bad) sub mov aaa pusha pop jns inc out (bad) push lret popf xor call lret xor iret jg es or cmp push fadds stos mov dec dec cli add cli add push mov inc fsubr mull adc mov push or add out cltd cmc loopne mov fwait push pop psubusw adc dec dec jo bound and push in cmp add pusha cmp cmpsb imulb push mov push nop fistpll mov sbb push mov mov sarl out mov sti (bad) shlb lret push incb divl (bad) or enter daa and leave in aaa iret outsb mov repz leave or xor xor adc dec test cmp sarb cwtl into nop iret inc jecxz fsubs fistl mov xchg mov push out mov (bad) push cmpsb jns clc push in lock shl into cmp inc inc sub call jae xor cmp dec mov (bad) imul daa adc (bad) mov outsl test ret cmp mov test fistpll pushf cli xchg push sarl mov push mov (bad) fldenv roll cmp (bad) mov push repz std push inc (bad) mull sbb pop sarl jno in xorl and or rcll pop pop sbb push clc repz fisubrl inc fdivrl (bad) (bad) setne ror je arpl mov js repz push shll pop fstps or sbb jno pushf xchg scas xor cmp and jns or insb or test push jecxz imul xor pop jns push fiadd sub movsl out and xor loopne xchg mov rcll mov cwtl test sbb sbb or in mov xchg adc jbe or xor jmp adc imul add inc (bad) gs stos movsb mov std rclb jns mov pop das out data16 push xor xchg xlat push add fcompl sub out cmpsb int3 std fwait push adc je insl movb movsb (bad) loop jge das insl mov clc shrl leave std cli push mov adc add sbb fnsave aas fwait mov or xchg xor aam xor mov push sbb inc cltd lods mov enter ret pop loop push test mov and push jb loop sbb es cmp popa sub cld inc or or movsl and cld jl lcall aas mov loop insl fimull popf inc xor jb jb shll icebp lahf xchg jmp outsl iret sub xor lret add lret jp xchg fmull mov mov add push push ret std xchg lret (bad) inc push (bad) into pop mov push mov not push xchg mov and inc lds cmp into lret xor lahf mov pop xlat in lds inc incb idivb xor outsb and fwait out mov xchg and sarl sub mov sti lods insl cmp mov aad or test into (bad) dec (bad) movsl je repnz popl sub mov and stos jg inc sbb outsb stos inc imul bound shlb (bad) jl xchg sub cwtl adc sahf mov push mov imul out jp add in shlb loopne push cmp pop sub (bad) (bad) shrb jle cmp mov int fmull loopne leave xlat mov int pop les xchg and (bad) inc inc mov repnz mov into (bad) push dec jo jno fmulp and lcall fdivp cmp shrl xor push daa enter sub lods dec int aaa clc or mov pop cs test lret inc xor mov test sub dec sti sub jmp lret pop dec (bad) jecxz xor mov aam gs jmp dec push ret sub fstpl add jmp pop mov icebp addr16 (bad) and xchg das inc int loop lods (bad) aaa cmpsl xor in and mov dec xchg cmp test pop in div sub cmpsl push lret (bad) xchg loop aad loopne jle jg aas inc jo out sub xchg mov pop cmp sub nop jae add mov js push sub imul inc fdivrl inc jb int3 ljmp mov pop shll add mov fcompl mov push out es jp mov std out dec mov xchg dec outsl jmp lahf orl test dec mov cmpsb mov out sub cmc xchg jno pop shlb clc add mov (bad) lea loope add jge jmp test push (bad) std cmp (bad) inc bnd scas loope ret jb mov inc cmc xchg inc fildl call xchg int sub lcall je push or out mov cmp push sbb xorl loopne cmp xor in es inc adc fnstsw add inc jp xor mov aam push xchg into iret xorb jnp insb pop xchg das js and xor and js ds jo pushf mov dec aas add nop mov dec divl out sarb xor test sbb rorl fcmovb cld xchg pop ret jle or sbb push mov xchg add sbb sub insb ljmp pushf mov sti cmp push aas loope test popf loop rorl hlt hlt jmp lds (bad) pop lea push sub pop pop add stc call test mov push lcall mov dec fxch int3 loop loopne jle mov icebp and popa in rorl cltd cmp inc std jl xor in jge iret xchg test mov mov cld fwait and jmp mov mov jecxz pop cs in ljmp neg jns sub dec sub lds xlat call test push mulb mov shrb add std nop test cmc fidiv call mov xor iret in pop mov insl (bad) cld pop xchg mov dec arpl out test dec and jmp test dec cwtl mov sbb adc jmp add sub adc in or stc cltd xor (bad) mov dec or mov xor rcl xchg jl or jecxz (bad) je xchg pop repz inc out xor cli mov xor sbb xor pop dec scas pop call xor inc sub mov mov shr arpl clc fwait bound push xor push inc mov lds repnz and push shrb or add nop nop les rclb sub je adc xor bound cmp add sub cmpsb ret hlt jecxz and mov inc sbb xor xchg nop call sbbl xchg bound pop sbb idivb pusha sbb lcall mov or cmpsl push or jns scas cs mov es mov out loope push lret push jno jbe stos add rcrl push (bad) call sahf rolb out and pushf mov mov ret mov ret inc shl lret jno or out add push dec sbb add scas je (bad) push (bad) adcl mov (bad) mov sbb (bad) or push mov orb movsl push mov xchg test xchg xor movsl call (bad) cmp lds popf add test imul setne mov adc ret ss ss rep xchg clc push stos repnz mov mov fsubs (bad) ss shll and push ljmp jge adc in fs mov ja aas mov addr16 out outsl lea xor rcrb mov gs inc inc push jg hlt enter and inc stos sbb xor mov inc pop sbb fwait add jnp adc xchg mov (bad) subl (bad) mov inc mov inc (bad) mov fcoms les dec xchg rorb jbe push mov dec mov pmaxub mov adc mov xchg hlt clc xchg sub aad xchg add (bad) jae sub jp idivl ret lcall int3 gs clc mov subl popf sbb ret pop xor mov adc out mov stos fstpl mov out dec pop mov dec out iret popf (bad) in addl js mov shr dec mov daa es adc loope jl xchg in arpl stos push dec push ljmp rcrb in leave (bad) mov lcall and movsl (bad) fsubr leave fadds push lret mov jnp push xchg lea repz sub xorl int test popl dec test jns insb imul push inc daa test inc rcrb imul aad add sbb stos sbb jle cltd lahf xchg xchg xor movsb add in xchg xor adc decb push mov add scas mov pop (bad) cmp add cmp add xchg xchg clc xor or mov mov dec jo mov ljmp fwait incl xor std aad fstpl out sbb or iret lret xor push lock and jno (bad) pop push int3 push xchg mov mov (bad) ljmp bound fucomi aad ror dec test pop pop (bad) xor jne mov or or ret in fidivr mov andl xchg dec adc cmp adc popf mov (bad) movsl lock lock popf psubusw add mov std mov inc sub mov movsl push insb or push imul xchg daa mov or insl lahf pop or xor cmp or jno (bad) jmp xor sbb cmp in mov bound aam fsubs mov mov xchg jg (bad) push push test dec dec adc mov lret adc jbe mov ss xor (bad) lret jne lock lea jmp rclb sub ss inc jno repz adc mov xlat mov pop mov bound les jle loope movsb xorb adc insl xor jns lea loop pop out pop jae xchg sbb iret dec stos in jbe lret rcll jge or outsb repz push mov lcall mov aad scas lods incl add cltd out xchg fcompl jno add ret cli adc and add sub (bad) push in aaa cmp iret std dec xor repz pop fs cvtdq2ps es dec imul xchg pop out dec popf test mov inc push imul aas mov insl hlt add fmulp dec add xchg clc enter inc mov pop mov dec sub ljmp mov std hlt lcall cld jno rorb out ds inc ja add xchg xchg frstor xor or add adc add fcompl dec cs outsb mov mov je adc xchg test push or daa mov lret cld test pop in push clc sbbb int divb mov and xchg movsl (bad) aaa aad add arpl movsl (bad) bnd mov jmp subl xchg repz dec mov push cmp shrb fmul cli repnz push test pusha xchg push pop ja loopne and mov push or adc inc ds adc cmp add addl outsl test ljmp imul stos xchg add push outsb adc mov jl xchg stos (bad) out xorb mov mov repz cltd addr16 leave xchg push lds mov cmp add xor movsl out inc xlat and into mov add out jp add add lret mov ja pop and inc xchg pop bnd mov ds lahf mov cmp (bad) xchg fisubl js or (bad) test or aam fsubrs mov iret xor xchg popa adc (bad) dec test idiv mov repz bound cmp iret cld xlat aas sub call (bad) mov sub gs inc push xchg push cld test in pop imul mov (bad) fmuls inc dec pop loop push pop in call std clc je fiaddl sub and dec or (bad) (bad) (bad) mov ret or and lods fiadd or mov popf shlb push in icebp lahf inc mov daa popf out push int push cmpsb pushf pop and scas aam cmpsb and rcrl dec push aam jo or mov mov scas mov or lret call dec jecxz jmp pop scas int and int3 push mov ja scas xchg outsl pop cli das fs rolb add fsub loope sarl cmp les xchg les orl mov fdivrl fmul dec (bad) xor dec cmp enter dec jae lretw imul inc jno sarb xor hlt leave mov push dec es and and jb push movsl cwtl bound mov test (bad) insb arpl dec lahf lret ss sub push push mov inc add jp ficom xor xchg ljmp insb sbb (bad) xchg push inc pushf mov ds push in scas mov cmp mov fsubl push loopne and in lods fcmovb cmpsb lods or pop ljmp aad cwtl push call (bad) xchg dec push sbb add dec lret daa mov call hlt std mov xchg hlt jl add fdivl cmp add jp ret xor repnz push and mov orl cmc sub and inc jecxz addr16 out push xor mov pop popa test mov add jmp or fnstenv cs repnz pushf adc lret in imul cmp and rolb hlt mov push pop sub sub int3 mov inc (bad) fcompl xorb aas fcoml out (bad) ds jae sbb xchg insb in inc xor cmp cltd inc pop push sbb ret pop les and cwtl ss sub xor hlt xchg dec cmp out mov scas (bad) bound xor mov xchg out fs cli sbbl push jno aaa push scas movsl xor aas mov push jnp out xchg aam pop sbb or or ret add nop sti mov push mov and out sbb adc test int pop jg mov into sbb push in sbb mov push mov cmpsl lods add cmp xlat rcll aad nop mov out test push lcall pop test add rcll inc stc aad call xchg sub pushf sub or insb lock mov push push mov fcoms les inc xchg mov xor inc cmpl sbb and (bad) xor mov imul and mov jge pop cmp (bad) pusha mov cmc mov push insl outsl rcll inc dec sbb lods stos (bad) pop std jecxz es mov loope sub mov (bad) cmp repnz sub rolb adc movzbl sbb pop fwait adc mov sub enter int3 inc lcall lds add cmc mov pop clc test push sbb icebp sbb dec and or aad loope scas push mov in jmp mov xchg in cmc push nop push cmp jge inc dec faddl bound inc push xchg xchg dec pop cmp cmpsb cmc (bad) jl stos add stos cwtl (bad) fwait popl fdivl jle outsb outsl stos xchg in aam pop mov inc jnp sahf and inc dec scas or push or outsb jns cltd and paddw cmpsl or inc ds jns mov fs push imul insb int movsb or call pop jb,pn dec push fbld ds xchg xchg ret mov rclb lods and fcmovnbe pushf into aad insl fcoml outsb (bad) mov sti in (bad) dec scas call add jo inc dec add (bad) fidiv push enter cmpsb enter testb add jp cmp inc movl mov adc add cwtl mov xchg jno neg adc push mov sti in pop in stos jle (bad) cmpsb mov dec add mov cmp lcall int3 sub inc adc xor and pop adc push subb dec out enter or out test or ret mov das jmp mov inc ror and jle cmp lods mov jns jnp call pop xlat mov cmp lock sahf mov shrl push sbb negb jp sarl jecxz (bad) js loopne mov das or rcrl fsubr not push mov ds pusha adc cli sbb jns and ret mov xchg xchg fucom dec mov cmpsl icebp sahf or outsl mov add push sbb dec xchg pop sub fidiv xor dec jle mov push scas sub mov pusha xchg out push cli addl mov mov xchg xor (bad) lock add pop int3 repnz sbb sahf out lss gs jbe jmp push lcall push push sub and shrl mov mov neg pop aad jg mov inc mov jl mull and pop lret ds inc push lret (bad) sarl xor mov dec or rol dec inc scas jecxz pop in mov outsl cltd dec movsb lahf push pop inc aad inc imull fstl jnp out pop push fstpl inc sbb push insb popa fadd mov lahf xlat test outsl stos sbb scas sub cmp or push out stos xchg outsl adc push inc push and ds adc pop scas jo xor cld adcl loop fdivrp mov sub mov inc xchg sub mov shrb popf sbb jecxz xor ss or fs ds js add lcall insl clc mov test jecxz adc sbb push aas jno cltd scas add call ret std (bad) xor loop add sbb fisubl jo into jmp and (bad) pop test fs pop dec and jae pop je imul lret test mov xchg (bad) mov push sub sub lock movsb dec dec fstpt push aad fistp cmpsb sbb adc xor and push sub xchg mov cli or aaa jno sti jno mov dec sub mov repnz cmp cli daa xchg ljmp aad bound xor xchg mov jg popa sub scas fidiv add rcl jnp pop mov xchg pusha (bad) jae clc xor iret jmp (bad) aam out (bad) jp in lahf dec inc xor sub mov cwtl sub imul lret pushf in and mov or push adc xor stos add lret mov push ds sub dec test fcoml (bad) psllw push add xor and pop je mov mov jnp nop xchg push pop mov cmpsl es addr16 loop rcrl or mov jge adc (bad) outsb jno adc insb cli cmp push imul lea hlt xor mov sahf mov adc cmc xchg inc xchg mov cmp sub lock push pushl into sub or mov sbb repnz dec xchg sbb das outsb loopne into int3 dec pushf lret les jmp mov jo xorl test pop or movsb jno or mov aas pop lods adc cs test insl sahf decl or nop test popf pop sub cmp sub sbb jmp cli outsl das arpl xchg jl inc icebp fstps cli cmp lret inc and xchg push push mov mov inc adc xor lret push ret cmp out jp mov sahf mov cs pop and pop out js mov dec or inc divps in mov ret addr16 mov std fldenv lods fdivrs mov mov out jne shrl sahf push dec push and loope dec push or mov rcl ds push sbb adc cmp sbb lcall pop call jge pushf xor popa into sbb push push (bad) xor nop enter dec mov and inc mov add mov loope adc jo xchg pop test loop arpl pop inc vmovaps sub das inc adc aad mov mov push push jnp mov mov lahf shlb pop jb push hlt mov xchg mov dec out stos daa scas call call xchg cmp pop jne,pn gs sub xlat icebp insb add mov push ret jmp jle fs sub dec sbb jne and iret mov mov xchg mov push xor push adc jb mov mov push mov fwait ds push jg iret mov push mov jbe xchg sub insb and test gs dec jno adc push sub mov xchg icebp dec push stc into leave jns or adc jno loop (bad) mov notl add mov popf bound xorl jne imul negl dec shrb push jmp les addps leave dec icebp lahf test shrb test into dec (bad) or push inc inc rcl js clc inc repnz sbb add mov cmpsl cmp lret scas insb mov call or lds lods and sub sbb inc (bad) mov xor jb imul fsubl stos mov dec mov adc fimull push (bad) ljmp (bad) pop bound jge test cmpsb les add mov sahf dec jecxz jbe adc test mov sub leave sub out adc pop push cmpsb push (bad) popf bound cmp arpl rol aas jl pop lods jnp (bad) (bad) jb icebp adc cwtl fidiv ljmp repz jl daa and cli push into into lock jb xchg fsubrl xchg pop aaa dec cltd mov out roll mov ljmp or dec and inc sbb xor add sbb cltd ret mov jnp (bad) mov sbb imul push ds dec push call imul xchg push mov or movsl fisubr ja loopne and dec push xchg imul push test pop xchg inc lahf repz out (bad) in imul jns xchg (bad) out jp notb dec les sub pop fstps test mov outsl (bad) mov cs in or push jno jl mov or loopne cmp inc movsb std sbb repnz ja mull cmpsb lods mov jle or jae clc jmp cld or test (bad) jno mov ja int3 out xchg rcrl clc inc lea outsb mov int mov mov mov mov ds or pop stos push cwtl imul or cmp dec jl lcall or inc shlb pushf stos dec fisttp sub add test push add push mov push aaa pop insb dec cmp testl pusha cmpsb lods cmp xor insl test lods mov stos scas in add movsb mov (bad) hlt push (bad) out jmp mov cmp adc mov dec mov push in gs mov sub or pushf movsl mov sahf mov mov (bad) push hlt aas jmp cmc (bad) xchg (bad) xchg push pop jne or ljmp stos push jl out popa cmpsb dec iret and shr insl in lret mov jp xchg enter cs insl lea enter scas adc add aaa ds and pop pop (bad) sarb rcll sarb movsb adc push mov cmp inc (bad) (bad) mov icebp fsubs cld jns popf (bad) adc movsl jge inc push mov mov cmc push mov jg lret iretw ds sub inc mov mov cmp cmpsb jle and test out sub cmpsb shl ret mov jb mov (bad) pop ja stos fstl dec sbb cs movsb pusha sbb add xor mov jmp rcrb enter bnd stc shrb and arpl (bad) (bad) pusha mov into movsb stos or adc add jg mov jb loope,pn or mov adc sub mov lea sub mov dec jge in lods add loop xchg cmp lahf mov and add stos fdivr add mov fdivs push cld or out push jg pop jl push sbb aam sbb xor cmp ljmp sub xor and mov cmpsl aas xchg lret mov ss xchg xchg (bad) jp imul xor fiadd std lcall test xor scas jmp call sub cmp push fucomi pop pusha pusha inc ret lret lods arpl pop add mov sti pop jne xor (bad) xchg out fstps lea mov mov and jg fnclex and sbb sbb dec stos mov inc mov subl xor ds fmul xor dec arpl jb rclb test mov cmp js int pushf sbb aas jmp adc and icebp jecxz jge pop test inc mov sub jno outsb dec sti xchg pushf (bad) mov in (bad) mov xor (bad) push push and in lret jns xor and push leave cltd adc push jne stc popa jecxz mov icebp jno ja stos je inc pop aas mov (bad) adc mov lahf ljmp lahf repnz jmp xchg xor in les dec or enter push rorl fcoms mov movsb inc and (bad) xchg icebp daa sarl adc ja scas (bad) xor xchg adc push push in dec enter outsl and or push push (bad) shrb (bad) sarb ficoml adc and dec aad ret xchg jp jmp aaa jne mov xchg xorl cmp leave lret jno jle xchg cmp sbb (bad) stos sbb test out inc jo mov sbb (bad) or add icebp mov and push bound icebp cmpsb mov sub mov inc xor mov fist repz mov loope and adc cltd or mov in lcall dec cmpsl rorl pop and hlt cli cmp sub pop xchg lea cmp sbb rcrl and fisubr sub cmc dec in xchg std jmp cmp or fwait add mov adc sub push push xchg negl mov dec leave cwtl popa jne jne (bad) sbb push js jae inc and lret xchg int push dec sbbl mov arpl mov sbb cltd (bad) test lea int (bad) dec mov push (bad) pop movsl or stos loop (bad) and mov bound sbb dec sbb mov aaa (bad) jb popf daa notb pop loop leave lods xchg lock adc mov push fildll addr16 cmp push aaa jns xor out pop jne out dec sbb xchg inc out push xchg adc fucomip mov cmpsl push sub pop sbb xorb int jns cld inc or pop cmp push fistpll xchg fisttpl dec into fcmovnb dec xor push xchg pop scas popf jg jmp icebp ret ss jge fisttpl test jge stc or jg lret pop and jp sbb and pop (bad) out inc ja cmp add int jp daa mov dec cs push (bad) xchg stos andb mov pop fwait outsl in jmp and aaa xchg push movsb jg inc xor push (bad) jnp mov cmp add mov (bad) fstpl pushf dec or add ss pop cmpsb lock xchg nop xor jae hlt movsl mov jp sbb test mov fldt jbe repz jl popf cltd pop fwait sbb xchg movsb adc inc and and adc sahf xchg dec movsl push (bad) inc mov cld add push or (bad) popa popa push push sub inc dec (bad) pop pop into out rcl fildll and pop and mov jo sub jge pop daa iret test sbb xchg xor or (bad) jg cmp int3 jae pop dec test push add shrb cmp xlat pop xchg cmp jo pop sub (bad) xchg stos repnz sub mov es sbb test imul mov insl sub jg ficomp or test add into push lahf notl pop sbb add and and aaa (bad) cmp jecxz jb mov aas ret in push sbb cmp jmp jne adc lahf test enter pop loope stc dec mov add pusha push sbb scas imul dec aam mov fdivrs push insl sahf xor sbb inc mov fwait test pop sub xchg pop mov shr dec jp pushf push xchg xlat cmp loope gs sub sti jmp dec cltd sbb jle and cwtl clc out xor sti adc cmp pushl popf stc scas dec insb pushf pop mov imul aaa sarw out stos jl sub lret ljmp xlat pop and cmp neg aas aam (bad) pop fwait lret dec or sub mov push cli add mov adc stos roll adc icebp cmp mov aas add inc xchg mov divb nop fldenv xor push (bad) xor test sbb inc inc loope arpl push (bad) lahf pop dec add mov (bad) cld jae in pop in adc ror sbb lahf fisttpll rcrl mov adc cltd cmpsl lea cli xor repz in mov and cs adc rcl xchg cmpl dec push into mov mov inc inc and int3 xchg fsubrs adc enter xor push jns scas ljmp fs pop test repz cld and test cmp or (bad) fwait inc pop mov mov dec mov shrl xchg xchg fs rorl and push loopne xchg out pop faddl or adc pusha enter cmp inc in mov lahf movsb cli push int add dec fdivrs pushf add insl cmp fwait sbb push retw push pushf mov aam cmpsl cmp push xchg pop add ror shlb cmpsl xchg inc nop or insb xlat pop je sub mov sub jb enter and xchg (bad) mov xchg inc mov xlat mov dec out fadd dec dec cmp sbb lea push jae rclb je loopne sti repnz ficomp jmp xchg dec push or mov loop outsl scas icebp push sbb incb sbb sub sbb lcall int3 in mov jbe inc or fist sub or add adc inc cld cmp nop pop sbb adc out lock xchg bnd lcall cmp cmp sbb push cmp xor pop dec mov xchg jno icebp xor mov cmp jae cmpsb lahf push mov xor adc int xchg outsl dec scas stc fisubl add push or xor push fdivs ja aas or pusha loop inc push (bad) cmc mov lcall int3 je mov daa pop push mov pushf jmp fnsave aas popa mov xchg sbb inc scas clc aad cmp jno pop mov adc mov push call out out (bad) sub xor popa push (bad) idivl cmp xorb mov lret mov xchg cmp xchg mov insl or cmp adc idivb stos jbe nop lods pop xor loopne test pop cmpsl push push mov cmp in push pushf sbb lcall gs mov push addr16 insl movsb cmp adc push or cmp lods jl sbb repz fisubr dec or adc push mov jns enter xor dec stos dec pop jo pop (bad) cmp lcall sbb cmp xor lods mov jno ror pop jo outsb out cld test loopne xorl popf stc xchg (bad) mov and pop xor xor push insb cmpsl fildll insb stos mov push loop sub fiaddl or fs push jne sahf inc jecxz inc lock jo pop cmp adc cmp adc pop (bad) inc (bad) fmul xchg xlat iret push xor shufps (bad) xor mov inc (bad) lcall repz test ja inc outsb stos or xor ljmp sbb sub insl inc pop jl dec inc data16 mov adc cmp pop cmc jp repnz inc movl shl mov sahf push ljmp push scas cmp or xor push std jp xlat xchg sbb loop or push icebp xor fsub mov lret xchg add or cmp lea sub aam test xchg mov add mov push cld mov mov push push mov fbstp inc pushf ret xor insb cli hlt dec mov outsl push pop jbe (bad) pusha xchg jno cli mov leave fnop add add lret ds in dec mov mov mov or mov push cmp icebp fstpl jmp adc loop inc sbb jbe sbb movsb cmp cmpsl clc call ret xor loope lock or mov or ret adc jle inc cltd adc xchg lret jg xor sar test push adc mov and frstpm(287 or mov nop imul loop add lea fidiv das xor and inc ret jbe sbb stc jle xor pop aas mov sar fwait xchg adc sub xchg pusha xchg or sub xchg push or and repz cmpb mov cmp mov push xor fdivrl (bad) push inc xor popa int3 (bad) mov xchg sub arpl test xchg xor lock dec loope pop test addl mov xchg cmpsl pop lcall inc adc xchg inc jmp sub jmp cs mov (bad) cmp cld pop (bad) mov push mov mov add loope mov andl sbb cmp sub mov adcb aaa xchg jae movsl out cli iret adc pop jbe mov lds push cmp repz (bad) push and je xchg out leave lods mov mov and movsl xor (bad) xor inc roll or xchg and cmp cmp cli pop std addb rcr lea ss (bad) adc sbb pop jb dec jmp dec inc les in adc ffree stos cmp add loopne (bad) mov dec and sar inc push mov push into pop leave aad and test dec into in cmp aaa jp pop add paddw mov push adc inc cmp dec lods xchg pop pop xchg mov lahf mov das jne jbe repz xchg lods subl ret sbb xchg push mov jne cmp and (bad) (bad) cwtl mov clc jns stc adc mov out mov in enter out sahf mov clc (bad) cld in lret cmp dec jb cmc scas mov or std inc and push xchg aam xchg or lahf mov imul sub repz or fsts clc ret sub push xor pop out movsl cld jecxz sbb (bad) (bad) or fucom out mov imul add mov arpl sbb (bad) cmp sub push xor mov adc xlat sbb leave push push dec xor sub loop cmc cmp test mov pop mov call xor addl xor pushf xchg add je aad loope jb mov add mov into xchg cmp cli or inc mov pop ss mov subl push pop movsl out (bad) xor movb dec add popf mov ja aad and cmp dec add stos (bad) sub mov sub mov xchg adc in aad or add jnp mov cmp mov dec jns lock or lahf jl cmp les aam fidivr sti or insb mov aam and negb jmp fs inc cmpsb xchg inc jno iret mov (bad) mov sahf subb aam movsl pop aas mov sub xor sub test adc icebp pop fisubl inc cmc pmullw (bad) int and je mov push stos shll out mov daa xchg fcmovu aad movsl mov mov pop repz mov gs xchg fsubl add sub shrl mov clc or in jbe inc push add mov imulb xchg sbb push mov and test mov clc mov sub sti lcall xchg nop sbb jle mov stos mov fst mov mov mov pop loop test sub pop sbb leave or test xchg mov sub (bad) mov int3 in mov lret and jmp movsl pop xchg dec out addr16 call (bad) lock es aad dec jmp mov (bad) rcl les insb (bad) mov sub push inc int adc movsl adc int lret mov or push push dec jg add dec jmp jge push (bad) mov xchg push jl xor das ret pop imul or lcall mov or stos sahf stc mov sub cmpl gs std jg scas jecxz pushf addl xor pusha int fbstp mov pop call and cmc xchg add jg inc (bad) mov ds out xchg xchg mov mov mov sbb mov push data16 mov pusha in xor adcb sbb out pop sbb xchg mov sbb push cmc imul and es mov xchg pusha pop mov add push test leave push mov stos aas mov jbe out mov mov mov add sti icebp repz mov xor push push sbb sub ss (bad) cs lods aas pop sbb push fnstenv push outsb and cmp or adc rclb pop aam lds inc loop push daa pop add add cmc pop jp sub fwait hlt repnz and insl mov push add fisub pop xchg fwait insb in or mov mov sti inc jae push test and fs call cmp aad cmp mov xor sahf shrb fs inc and xor push (bad) lock sahf xor jo in add cmpsb push mov push push mov stc (bad) mov xor add loope push mov xchg repnz pop or sbb fucomip pushf jne aam addr16 mov inc lahf clc or mov cmp mov adc xchg jp movsb je pop (bad) in mov imul cld sub and sbb das loopne push shl out (bad) sbb adc mov test push push or mov aam pop out scas insl ds rolb rcll fwait mov repz pop jecxz dec adc mov (bad) cmp ficomp cmp xchg mov jnp lcall push sbb rcl bound pop sti je outsb insb inc cmpsb add adc xorl ss out cwtl mov cmc test fldl scas lods xchg aas adc repz cmpsl ret dec and pop inc xor and fwait cli mov inc adc in mov shlb fsubl lea test scas fidivrl inc rcl push add pop fwait stos pop jb cmp mov push mov cmpsl adc (bad) repz push ljmp inc js push inc or ret fistl cld add jnp or sbb imul into sbb mov xor test jns (bad) cltd out fstpt jnp xor lret push mov pop or add xchg sti inc repz pop inc pop xchg mov mov test mov cmp lods mov nop push repz and (bad) aaa pop cld mov sbb mov stos adc (bad) pop insl lahf xchg (bad) push in inc sahf fs pop mov cltd adc add add xchg gs testl mov cld rcll push cmp and je mov push int rcr xchg mov sub sub add loopne ror mov fidiv push scas loop xor insb lods push and cli inc push mov xchg sti iret lcall imul dec and inc mul movsl (bad) sub xchg fsts lahf fisttpll xchg push (bad) add xor xchg in push cli xrelease mov mov mov in addb or jb popa dec addr16 fldl jge ljmp adc cmp jecxz,pn inc ds or cmp mov arpl std clc cmp jge scas (bad) aam xchg lods xor mov shrb das pop repz cmp xor sbb pop orl fsubs dec (bad) dec aad mov cmp pop lret aaa push adc fs jl out mov sub mov test add fs xlat sub imul add push dec movsl sbb rcll mov loope sub push xor ret mov aam push cmpsl data16 in cmp add dec movsb mov jo fsts mov mov movb jne out cli pop icebp mov test enter inc xchg push test pop iret gs and pop fstpl sbb insl pop sahf and mov orl xchg js jae aaa dec je jecxz mov xchg or inc and or lock adc cld jne inc hlt jge mull sbb mov divl mov mov mov cmp cli xor ss pop pop xchg adc negb adc dec movsl and mov (bad) (bad) leave cmp lds fldcw sub ds dec dec adc int sbb inc or and dec jno and lock jb xchg pop call icebp cld (bad) mov xor mov push test xchg inc jbe sub xor and sahf dec int3 mov mov rolb sub fincstp sub cmp loopne push sub add stos inc shrl xor push orb xchg mov insb mov pop imul popf lods inc hlt cmpsb (bad) je fdivs push mov stc cmp loope jp push outsb ss mov pop add mov xor inc jecxz sbb push test je xor fwait jne cmpsl das push push pop xchg adc fistpll pop cld popl adc dec std rclb mov jae mov push in cld sbb mov sbb jb fidivr xor jns push stc mov or std adc nop sarb add mov jl mov push pop ss and xchg mov pop clc push pop push push lods fwait inc mov or cmpsl sub push out pop (bad) in cmp push pop data16 shlb rcrl push sub enter and loop cmp inc loop sub lret ficompl orl pop icebp push rorb dec mov sub test fstpt pop sub mov jbe ljmp clc xlat cmp pusha in xor aas nop jge ror xor or lahf imul or lods rorl mov popf cmc mov jmp arpl (bad) xchg popl dec sbb pop sahf sub loope repnz cltd jg inc push out push mov imul arpl inc int jle hlt sti sbb sbb ja div jne push into push fsubp insl push pop sbb imul stos mov divl je leave or xor mov daa pop or jns mov inc in xchg jp dec fdivl mov sbb sub dec sub outsb mov add out jle mov inc sub add cli addr16 std cli mov jecxz push add mov and cmp inc inc inc sub ljmp sarl add jle loopne and into adc and ror (bad) hlt les rorl and inc and mov inc mov jge push mov lea rorb loope push call int3 jmp icebp sub cmc jbe enter or inc add jmp int movsl and in ljmp mov dec or cs fsubrp out jmp mov aad addr16 in arpl (bad) mov sub mov outsl lcall sub ja sahf pop xchg or stos addr16 lods or pop mov ss inc ret mov mov mov mov jg mov cmp clc add mov push xchg outsl dec shlb mov dec pusha es pop test mov insl cmp adc cs sbb push aad arpl mov and pusha je sbb pop lods lahf icebp mov push lcall mov popa push mov stc addl inc dec push sub lds icebp enter mov mov fildl je nopl pop fcmovne and insl push lret inc jns xchg sbb aam push xor add subps cmp and inc add sarb dec add fsubl push cld mov adc test (bad) pushf aaa inc cli jge (bad) int fsts adc stos fwait insl dec gs dec pop mov xchg icebp jle outsb ss es jbe cld sahf xchg pop xchg subl je scas sbb testl mov adc lret into push or mov movsb gs jns sub pushf pop fbld out pop data16 inc add adc stc mov arpl jle cmpsl insb scas popw (bad) movsl adc movsl xorl pop cwtl sub xchg jo imul out xor popf push mov in arpl pop and xlat adc cmp loopne or sahf mov fiaddl (bad) int3 xor jb fs dec adc add mov stos test xor rolb jae pusha int3 mov push mov dec lods scas dec adc mov push shr push les jmp xchg xor push cmp aaa stc cmp pop add sub fisttpll lock mov (bad) jne mov lea pop sahf or mov adc jnp cmpsl stc fcoml pop sub call clc (bad) (bad) outsb (bad) add je fdivrs repz int cmp daa cld mov (bad) push cmpsl dec insl fisubr (bad) repz into jp jbe xor dec xor jbe push mov decb xchg mov adc lea ds add orb bound testb testb and mov data16 pop mov jge cmp lock data16 mov loopne dec addr16 mov cmpsl push dec icebp lahf dec rolb xor cmpsb add lahf push out loope inc adc mov push xor out pop lret dec jae int3 pop mov aam es rcrb and daa imul mov sarl sbb dec jecxz mov dec add push xchg fisubl js ds cmp arpl std push je mov rolb fstps leave popf adc jno pop cs fld xor sub scas xor test mov sarl movsl scas (bad) ljmp movsl cmp aad jp xchg cmpsb xchg leave xchg push fistp xchg stc xlat cwtl jp xlat jns ficoml lret xlat imul fsubrs adc adc iret pmullw sbb pop adc loopne imul push int loope idivb push sub fidiv fnsave call sub insb xchg bound les ret mov addb popa sarl and mov aas jae data16 gs popa pushl fisttp sub sub nop aas js punpcklbw rclb ficoml pop cmpsl mov add push cmp sbb and js test pop mov cmp xlat stos out cmc je sahf loop test fsubrs xlat loop sbb ret das lahf sub xor adc or arpl aam add jl dec and pop xor xchg popf dec push les mov adc and adc inc test out push xor sarl fdivl adc push pusha mov cmp mov mov fwait leave clc mov push loopne fildl cmpsb out lcall out pop int icebp push fadds jmp fmuls jecxz xor into fucomip xchg lahf sarb jl jp jle lret mov int add mov and xorb enter pop jmp movsb xor xchg int3 xchg loopne push rcrl sbb cmp jmp (bad) mov pop add push mov add add jns mov mov adc mov lret adc pop stos sub stc mov mov repnz aad pop lahf movhps (bad) pop jmp out mov sbb sbb and in push or aaa std push push out daa jle leave push aas movsl mov das sbb sbb imul adc and add into jo shlb push or movsl cld aad ret cmp aam dec cmovb in lcall mulb movsb popf mov cmp pop xchg lods adc mov mov lds push xlat mov in jle sub dec fidivrl mov xlat jnp mov mov fmuls mov dec mov pusha jge icebp mov jl aad cmc repnz cld aas mov cmp mov sub or popf icebp sahf pop out pop cmp aad push mov hlt enter mov fld pop lret andl xchg cmp push push sub pop sub pop and jl dec push push adc and xor leave (bad) jg mov mov test add add int3 adc jg lahf or (bad) aaa adc pmaxub mov cmp cmp sub adcl daa outsl adc mov push push ror mov leave insl rolb or int subb mov fbld push bound dec lock sub data16 dec jns outsl addl jne repnz mov or or inc cmp mov cmp mov stos cmc pop lret pushf loop add (bad) jo cmp xchg jae data16 rcrl cmp negb mov push or pop cmpsb sarb cmp fnop sub pop out push inc inc mov fsts jge (bad) imul inc cmpsb mov push inc icebp push add aaa inc push (bad) out xchg sub add xchg jmp mov add and and test fild xor dec push out xchg gs mov pop int3 xchg leave insw pushf subl in out xchg or into das leave int3 or mov (bad) and imul add in inc lds shrl push mov add (bad) enter xchg rorb push cmp pop in push movsl nop adc push xchg outsb cmpl flds jmp mov cs adc xchg (bad) cs scas repnz inc andl lods (bad) mov and mov (bad) adc mov adc lret popa ss imul xor std sbb and lds add aam test andb fiaddl in mov (bad) ja sahf (bad) (bad) jne rorb ret jecxz adc std push dec daa idivb sbb push (bad) out je xor test lea negb pop ja cmp mov ja xchg mov or fnstcw into pop imul out sti pop call xchg hlt sbb xor mov pop cltd push cmpsl cmp cmp lcall lds pop into gs fstps push mov ret dec lret sbb push lock xor push jae pop dec test data16 iret (bad) lock and xor push pop aad xor outsb out mov dec sub inc lret pop jb pop rcrl in mov pop jns pop mov jp mov add fs xchg xchg aad scas loopne fidivl nop (bad) xor xor mov jns iret mov inc (bad) jmp jp xchg mov cli dec (bad) cmc lahf cli out out sahf inc xchg movsb mov stos shufps mov add icebp rcll hlt or mov in and repz sbb mov jo sub das mov jecxz ja dec mov and scas aaa ret add mov and adc cmpsl sbbb xor lret sti jns call xor pop hlt (bad) push cltd leave inc xor fildll nop roll adc rcrb cmc mov pop mov cmpsb popa roll lcall inc or xlat mov aas push push std fimul cld sub mov btr sbb in in inc es pop xor sbb or mov or and (bad) jns lcall js xor adc es xor in dec lahf mov dec mov xchg shlb cmp jl mov sbb nop pop imull xor lea pop push xor sti cmpsb or hlt fnop adc push cltd cmp mov and push jno mov stc scas adc sub repnz jecxz adcb pop test mov lahf mov mov ss psubsw xchg push in cmp nop push mov jmp inc mov std or ljmp dec and shll mov add nop lea (bad) (bad) mov xor push push outsb in fwait adc aam xchg xor pop scas mov sbb bound (bad) dec sbb das es sub add jne dec (bad) cmp ljmp mov ljmp test jmp adc or (bad) lock push xor xchg push cwtl mov fidiv push xchg mov test add adc mov xchg out fldpi cmp sub test psubsb mov je scas pop xor (bad) and enter xor pop mov xchg lock bound fcmovb mov out jle push dec (bad) in out fbstp cs xor sub mov mov inc mov aam ja sahf lea jb,pt jnp inc adc push adc lret lret das mov pop dec les sar cmc enter adc sbbl add and addr16 cli add sarl adc fistp and jns push xor cli rclb lods mov (bad) pusha aam xchg dec mov cltd fnop sub cmp xchg jnp mov xchg cmpsb mov cmpsb xor out jae mov data16 (bad) fwait add aaa mov and icebp aaa xchg dec daa sbb loopne (bad) xor fwait lret (bad) or mov inc daa loop push cmp pop (bad) push pushf rclb rol pop push mov sub cmp mov test sub xchg int incb xchg cwtl outsl movsb ret push pop or or sub lock pop mov lahf outsb sub sub inc call jge (bad) jge inc out fistpl scas decb or into lahf jp cli fwait cwtl outsb ret mov mov aas in outsb ret (bad) fsubp inc add cld out fistpl inc fs sbb pop mov dec out mov orb nop pop out cli icebp cltd cmpsb test test scas xor adc pop in lds sbb mov fidivl mov push lods fs sub adc push add mov lock push sbb sti mov sbb jbe imul pop pop add push lea bound imul pop add dec stos cmpsb out ret mov test mov mov ret pop mov mov pop cwtl aas sub sbb push in lea push xor in sbb movsl mov mov mov jne xchg sbb adc popa mov fiaddl stos pop aaa loop pop add push rcrl add push add pop add rclb sub xchg lcall sub mov imul cmp push mov mov fstpl loope mov pop push mov into pop mov xor sbb cli imul jo xlat cmp dec inc inc pop sbb jnp ss int push cmp movsb sub dec roll jnp inc jno leave pop dec daa cwtl sti sub aaa lods cmp movsb scas leave enter movsb hlt ss and mov repz mov mov xor sbb sbb lcall clc mov mov insl jl sub push sub and jno sar inc fidivl enter aam add xor decl test cmp pop sub dec aam mov rolb xchg stos imul dec sbb mov lcall test mov fisub stos jecxz jnp and imul push movsb int scas mov fs rcr aam jecxz arpl movsl adc rorb scas xor and jl mov push js mov (bad) cmp push lods dec outsb and sar mov jb outsb (bad) scas (bad) fs hlt mov inc ljmp stc and lds pusha cmpl int mov aad and jle cwtl xchg sbb div leave mov jl push cli mov pop push in clc fs xor push sub popl int3 lcall lret mov inc ds dec jmp jbe mov push xchg mov hlt imul outsb fldenv sti mov and mov cwtl xor jle inc and aaa or int3 jo jb mov js mov or pop sub mov sub adc cwtl adc pop stos xor mov pushf pushf fmull (bad) xor adc or dec dec inc in pop shr call cmp and int (bad) mov and cmp fidivl sub cmp sub popa fwait (bad) mov lahf inc mov mov fcomp sbb (bad) dec push pop add and mov jle loop add dec test jo sbb xor les aaa mov mov pop nop orl xchg int3 push (bad) (bad) jne fidivl push fnstsw cmp dec fwait sub mov jb pop jne data16 mov fildl cld into cmp int mov mov jne xchg cmc cmpsl addb fs pop push dec scas sarb pop lods sub pop stos repz lods adc sbb or aad cmpsb cmp mov cmp sbb aam mov call test or scas movsb add push pusha scas loop push mov mov pop call aad (bad) test movsb xchg or xor add add leave out jae imul fadd lea lret in ret in jo push (bad) mov fwait dec clc xchg cmp cmpsl movsl adc or xor popf and sahf lods inc jb enter xor imul add call sti test sarb jp movsb pop call inc jns mov mov aas imul pop sbb scas das pop popl jno inc test insl in divb enter insl and mov cmpsb in sbb (bad) jae insb inc xchg cmp lock fs jecxz stos mov std cmpsl mov mov aaa dec in cld testb jns pop jnp call or push xor push mov movsb dec push daa sub loopne inc imul dec mov push imul lock fiadd scas mov out inc cmp push adc lds (bad) jp mov iret sbb mov cs sub or add dec subl cs xlat dec clc out sbb sub jns cltd loopne xchg dec notl out mov jmp in nop call aaa (bad) in mov mov dec and sub xchg fiaddl cmp sub lock inc fs enter gs (bad) mov test inc sahf pop pop inc jg or inc jne out inc ret daa andl mov sub xlat stos push mov mov cli cmp mov mov pop adc push out push test mov push in fidivl lret hlt aad fcoms jecxz add imul push jp mov xor (bad) mov lret je mov and inc add stos jl xchg or mov je dec fdivrs cli mov shrl rcrl mov stos or mov lea ljmp push aad setno pop inc (bad) dec mov pop xchg xchg (bad) icebp shrl adc mov adcl xchg xor scas subl sbb jno mov (bad) fistl jnp mov mov mov adc loopne es clc jbe sub pop push lods rolb mov repz or sub shr je,pt ljmp js pop scas ret lret push xchg cltd add push pop insb shrb jb mov in add ds pop push push movsb or idiv xchg clc ljmp outsb cmc out xor mov sub push dec xlat data16 cmp (bad) mov hlt cmc nop add push push sub stos fwait sub stos (bad) mov rcrl es js adc cwtl (bad) dec jnp pop or fdivrp xchg mov dec mov stos out pop mov out bound dec sub mov jge and dec adc lret adc test out pop insb test sbb les int push fwait mov add mov inc leave mov or push out movsl pop mov (bad) leave lret cli std xor sub jns push scas inc ljmp mov inc sub pop int pop pusha dec or out adc sbb arpl push pop sbb enter mov sbb ret rol and add enter out adc scas or jg test nop sub pushf mov enter fildl int3 pushf adc (bad) lahf jns in sbbb popa je test in jp lcall data16 das fcomp (bad) jnp mov cli xor jno jmp pop sbb (bad) xchg jl call cmp xchg dec cmp inc shll adc (bad) enter add mov jle out fdivp dec mov in sbb ljmp xchg ja pop cmp sarb mov stos add jae jns leave adc or inc push (bad) xchg in xchg (bad) mov sub mov shrb movsl es les adc pmaddwd (bad) sbb xchg add add aas pop push data16 cmpsb mov add xor loopne mov (bad) xor cli xorb mov lock gs xchg ret cli pop (bad) xor inc or ds jno enter sbb sahf dec fstpt mov or dec push xchg out (bad) push in out outsl sub lods ja adc rcll pop sbb sub sbb mov rcr add (bad) adc mov push adc mull mov pop xchg xchg cs repz test jbe loopne pop jbe xchg push rcr (bad) cmc out add dec cltd fdivrp fwait mov ror stos lock lret or fwait mov js or sbb jmp cltd arpl call add mov (bad) lea movsb imul jne fcmovnu mov xchg sbb aaa push int3 stos pop scas popf cmp arpl mov loop (bad) jnp and mov enter test jno xorl xor enter mov adc add sbb mov sub ja xor cs notb std xor sub push cmp stos jl insb (bad) imul pop pop inc pop mov or jge (bad) pop movsb mov stos (bad) ds cmp cmpb les (bad) mov jp stos push lock stos xchg call movsb xor and xchg out std shr xor pop sbb add daa sub into fdivl es lods in jbe xchg hlt out sahf inc cmp mov push sbb in (bad) pop push test dec fnsave icebp mov arpl jbe stc js mov cmp mov aam rcrb cmpsl sub jp fsubp mov out aaa loop,pn lods insb jg mov arpl aaa jl pop sahf cltd jb inc pop push sbb mov push out test in and mov dec mov inc ficoml lea ret fdivrs pop dec clc inc mov mov push (bad) push mov lahf flds xor and popa xor loopne lret stos mov jmp jecxz idivb fdivs notb push and inc mov cmc add push pop movsb push nop idiv imul sbb fst clc int3 shll adc js push and rep adc aam insl pop inc and js pop adc test cmpsb in ss add imul push xchg adc sbb xchg and sub jle jno movsl add add jno (bad) adc mov ficompl inc cs mov rolb jns inc lcall xor mov sahf enter call push popa imulb or iret inc and das (bad) push xchg lods lock enter lock xchg xchg stos jle dec inc inc imul std cmpsl rcl cmp popf imul or mov jmp push rcrb popa xchg in sbb lret push mov xchg stos mov es push pop sarb or test (bad) enter les popf jno pop jmp sahf push stc jne rolb inc mov mov imul scas test pop les jle mov jmp mov aam mov inc sbb push negb fs cmc in pop fistpl rorb in mov ss or inc out jp fst dec jbe mov fst inc dec std lea (bad) das and dec cld ljmp loope push push pop xchg ret shrl add push in (bad) in ds xchg mov inc imul mov mov adc or adc dec ret rcll jno notl loop jg push es leave (bad) lcall xor dec js pusha push (bad) call push movsl sub sbb mov inc push push inc mov xchg pop mov cltd cmp mov sahf out sub push lret nop mov in jae (bad) xchg xor in addr16 mov dec mov fnstenv jnp rcrl outsb pop je aas pop sbb xchg dec mov ret out sbb mov sub jecxz cmp lcall or call andl add lahf or jbe cwtl mov jp popf ficoml sub and dec add clc push sub xlat lods (bad) ret sub jg lret sub add push push cmc xor cmp add xchg sbb dec mov mov push loop sub pop push xchg adc xchg test jle daa mov or subl and nop sub pop ja xor iret mov addr16 xchg data16 lret push dec lds and in cmc push (bad) jnp or xor pop dec dec mov adc inc or inc adc jb sbb fwait mov aam stos xor lock mov pop cmc insl ja aas cmp (bad) and bound in lds fild pusha and jecxz push scas and call cwtl push cli loop imul adc movsb sti cwtl xor aam fmulp test inc mov (bad) push cmp test (bad) repnz mov movsb pop int3 fst lret jmp mov icebp dec xor sub aad push aaa pop mov stc jl divb jo mov jge in adc and push in sbb pop dec add dec push daa ljmp js push (bad) xor mov and cld stc add cmp cmp ret cmp dec or push aad andnps rcrl or xor add sub or or jg mov mov gs cmp in sbb mov mov out and pop pop dec mov jg lods ds mov cs push sub jg movsl inc pop push dec out negl lcall bound cld ficoml or (bad) out cltd xlat and pop sbb xchg add mov lret repnz inc jno nop mov add sbbb sbb cmp mov or lock jne loop mov fldl mov out mov or mov mov inc (bad) in popf and pop cltd or inc arpl call mov mov (bad) pop add insl imul sub fs insb insb mov jnp jnp iret cmp (bad) or xlat jae aam js jbe mov sbb iret mov cmp add in sub xor jae and pop mov scas imul fwait imul jae loopne outsb pop mov aad arpl leave das jp jno sub pop pop es stos lret inc dec xchg out mov fwait xchg adc leave mov movsl sub das in xchg adc stc mov sbb scas jb xlat iret hlt and push sbb in testl jne es int loop cmp leave cmp push fdivrs hlt lods push inc lahf dec cmp push cmp inc xor mov clc mov in into xchg out and ret xchg pushf sub int mov lret sahf sub push or push add dec xchg adcb popf and xchg loopne pushl adc mov divl insb imulb mov (bad) sahf jno in push adc pop cmp loopne repz lds pop sub pop cli daa call cmpsb imul call add ss sti xchg pop jne jno movsb hlt mov lods jecxz jb stos outsb jl ja mulb pop xchg fcomp ret in test xchg ds scas lcall mov es insl mov lret pop or push stos xchg sti inc inc push fwait mov mov push rcll push jo and (bad) pop call mov das add xchg ja rcll xchg xchg xor adc (bad) les in dec ret or push or jae push add dec jno or jle imul rorl daa loop mov test (bad) nop call adc test mov into jno ret push and xor mov jae mov sbbl aas mov or cmp pusha jge scas mov jno push notb popf sub mov scas ret fisttp xchg mov aam jg xor movsl movsb shrl sbbl (bad) jno or and adc jmp call inc jne push xor mov popf mov sub or lods and add pop push movsl sbb int leave sub jns push add pop cld push or icebp adc icebp outsl mov dec mov xor data16 and rolb sub cmp inc cs add test inc pshufw std pushf push lret ss fisttpl push or push mov mov pushf inc gs repnz xchg xor sub stc push lret and and mov repnz cmp cwtl outsl add sti dec test in pop jge (bad) jecxz xchg sub in dec ret out sub call outsb daa (bad) outsb (bad) jl and xor (bad) aam in nop inc inc add fild ljmp and xor out push ds inc insl lods stos or adc jmp or and adc adc push mov jns add sub sbb mov fldl out push and fs jno cmpsl lahf lock pop into sub je (bad) inc mov out jmp sub rcrb jnp cwtl rclb pop movsb shll fdiv or lcall inc fidivrl pushf clc inc clc inc lods repz or inc loope fadd movsl inc xchg popa xchg flds mov xor inc xchg jns pop xchg dec addr16 out je dec pop pop dec fdivrp push mov rorl inc jmp js int scas ss push orl insb dec cmp (bad) enter jecxz mov mov movsl push add mov pusha push dec sub and adc insb mov jbe dec xor sbb in sub xchg sti add int3 and dec dec andb std in enter xchg gs xchg lods inc pop xchg mov or and pop fldcw add mov nop int3 add enter insl (bad) dec js jnp sarl pop sbb mov lret je jg insl lea aam mov and lret and loop fisubr stc ljmp arpl loopne mov inc push inc sbb cmpsb jl rcll dec sbb or sub mov (bad) cmp push sbb jne adc icebp pop divl aas pop cmp adc dec mov in cmpsb in mov sti cli mov push pop mov push inc cltd rorl call fdivrl scas arpl in fistpll packssdw inc and mov movsb neg rol push jnp loopne inc jns fs movsl jmp insl xor movsb xor movsl out fadds subl jmp mov cs inc pop shl jo adc or divb inc cmp sbb stc mov cwtl pop out jg cmpsl add mov pop add orl push adc ja pop lods imul jle or xlat adc out stos jp in inc out or cmp push mov loopne das imul lahf jae inc add mov in stos (bad) lods cmp pop xor aad push loopne pop cmp fistpl xlat shrb (bad) cmc mov xchg mov pop (bad) pop mov outsl jb addr16 inc ja jg cmp push icebp cwtl mov or mov cwtl mov imul (bad) inc repz out xchg jne or outsb (bad) out aas repz mov popf inc cmc push cwtl dec call pop xor jnp add cmp jnp jp xlat gs sbb mov mov scas negb mov fsubrs xorl repz pop (bad) lock dec and sub pushf push nop lahf push add mov rep or pop lahf fmuls shr xchg adc mov mov mov popf addr16 xchg hlt arpl test insl (bad) loopne in mov pop test jb lds popa jne push test mov mov gs xchg xchg dec push inc in nop hlt movsl cld sahf xchg pop push dec mov sbb mov and rcrl leave pop add and fs sbb lods pop stc cmc sub lock ljmp lret fs xor mov dec repz or dec not add js cmp mov loope mov cmp jle hlt jbe dec push mov (bad) es out pop insb daa idivl or add popf popf fnstenv icebp repnz popa nop loope lret rclb ds xchg enter sbb sub sub mov dec (bad) dec bound enter mov out repnz xchg push or imul ret or fdivl xor daa or mov fstps clc sub jnp js rcll int mov jnp test mov decb lcall enter andb sbb loopne mov pop fstpt inc ljmp push fwait fs aas in cmp mov cmp movsb push cmp fs repnz ss pop dec mov add cmpsl dec inc dec fstl fdivs test cmp hlt int3 add stos xchg int3 mov xchg (bad) mov (bad) push xchg add test mov popf (bad) flds popf ljmp ret std imul push inc fdivr fisttpll movsb leave fstl jne adc enter jbe loope inc cmp cwtl rclb stos xchg jne scas loopne iret fmuls add rorl fistp pop and xchg mov scas inc in sbb or sbb test jg inc icebp cltd or data16 cmp pop push inc pop out xor lods mov inc sbb aam pop lods cmp je (bad) nop pop xchg fidivr (bad) jl sti jge sbb repz cli ja inc jle sbb or add xchg iret pop mov shrb jl test insl xchg test ds notl outsl fwait orl push push repz loope jnp (bad) gs jo sbb inc aam adc sbb sti and mov add jns sti inc jb (bad) scas pop leave fwait pop loope rorb aam jne xchg sbb fwait rcrb rep pop sbb clc addr16 xor enter insl ljmp dec inc adc (bad) cmp arpl cmp loopne repnz mov sti or push stc les push mov fldenv dec mov pop or enter inc cli imul aas mov mov jno adc and (bad) (bad) xor nop jno outsl inc imul add jnp dec pushf mov in ds enter jb out xchg aam fnstenv enter adc fwait je dec lock repz pushaw popa inc lock lcall cmp dec sbb dec cmp jno and push ljmp mov xchg imul adc ret adc std stc mov sub mov mov lcall add lock mov mov pushf rcll mov adc add fimul jg jb int3 test xchg and loope push mov pop add jb xor testb jns mov sbb stos add jp incb lahf std push js scas ljmp movsl arpl jo push ljmp and (bad) in pop bound (bad) int3 pop adc xchg fldcw cmp and adc adc mov notb and inc stc mov xchg adc addr16 adc jns jle (bad) xor cmpsl jmp cmp das mov dec std jg mov psubsw sti adc insb in (bad) xchg xor mov xchg stc clc fdivs add and dec pop movsb (bad) mov mov loopne sbb and fisub push shrl cmp mov js xlat cli mov lret push mov dec mulb (bad) aaa insl dec ja cmp lret pop leave jbe mov adc mov test (bad) adc mov fs aad cs jmp sub (bad) jae std popfw (bad) fstl lds mov jne fcmovnb adc call popa sbb pop mov ror (bad) xchg jae fst mov gs push inc aas jb loope lret ljmp xor mov (bad) or push add sbb test mov (bad) icebp cmp icebp movsl mov dec je xchg cwtl jae push mov mov in add adc mov in iret in jl or jecxz pop int fildl (bad) dec xor push xor push sub mov pop push xchg dec mov movsb movsl sbb add mov loope fiaddl and sbb push mull mov ljmp sbb sub (bad) iret ffree dec push rcpps test aad xchg pop clc mov ss addl fsubrl iret cmpsb xor xor pushf dec mov repnz jle jnp inc lcall gs cld pop rorl sbb cmc repz mov sbb add pushf test mov scas pop push movsl lods rolb jae fnstsw mov dec hlt (bad) je sbb cmp or mov cli inc mov jne insl adc pop ljmp mov push js mov mov fistpll jp mov cld andl je jno ljmp into sar pop sbb test lds rcll movsb mov sbb jbe pop cmp outsb test outsl bound mov insb test xchg xchg addr16 push push in movsb pop jecxz pop mov dec or fldt mov cmp dec push gs push mov hlt pushf xor push push cld jbe jecxz xorb xor cmp sbb pop fwait loope pop sbb inc bound je jge adc sub mov movsb pop insb and sbb adc lds cmc rol data16 mov lods inc lock pop cwtl notb repnz xor js decb imul inc xchg cwtl mov adcw popa fildl cli icebp sub enter test ljmp xchg popa cmp popf aaa (bad) xor cmp mov aas jnp out leave mov jg rcll sbb jp pop cmp cmp mov or cltd popa jp lods cmp lea jbe nop push mov push pop (bad) test add dec es mov popf pop fwait mov stc sub (bad) out insl aas dec jnp out mov push or mov pop cli xlat xlat jns jne pushf xchg push xor rclb inc out test mov xor sbb sarb xor pop out jns cmp sbb and xchg cmp cmp in les sub pop pop out xor sub mov rcrb cld cmp cmpl iret fwait push inc ljmp or idiv sub lods pop pushf mov adc jns (bad) into (bad) dec mov into and jbe std xor or or jb lods and sub in pop or inc pushf (bad) fsubrl adc jg jp jns aaa cmpsl sub popf nop xorl sbb jae cmp and ljmp or hlt sar push aaa push mov jecxz add sbb mov mov pop stos (bad) fcomi fdivl fdivs je dec mov iret pop fbstp lock sbb mov mov iret or data16 sub or jmp push sub pusha lods fidiv mov jns insl pop jg lods (bad) push fwait mov cmpsb and and arpl aaa inc cli cmpsb add jp data16 in lea or xchg aad mov insb cmp imul in add in in aas sbbl mov sbb int loopne scas call sub popf sub pop add xchg mov push cmpsb dec mov mov xlat jno movsb sti mov iret sbb cmpsb lahf pushf pop ja sub push ss pop dec jmp ds icebp ds scas sbb mov lea or mov mov rclb jns test jbe mov cltd popf pop data16 lcall ret sub xchg out test addr16 cmc dec mov jmp mov mov inc jnp cs stc sub (bad) lret imulb ret add mov insb fiadd jo adc push inc data16 xchg ret mov stos mov sbb lods jecxz cmp mov jmp pop sti rcl xor push (bad) xchg xchg lret pushf inc push in jo sub imul push push in inc cmpsl inc les mov imul inc outsl jo mov scas aad pop icebp inc mov mov fwait out (bad) mov in push enter mov push test push (bad) mov pusha xor add repnz pop inc mov push mov push or xor imul or aad jo dec stos pushf and pop or ljmp sar mov or and test pop daa shrl add push jg mov pop mov into fcomip inc xchg gs jns loop mov shrl dec cmp test hlt pushl inc inc int3 jno movsl outsb ds iret mov out lods (bad) popa rorb into pop jbe (bad) shr adc mov or add mov insb test ss daa jl mov popf mov or leave jb in dec popa fist jle mov pop sub call into pop dec adc dec aas sbb fld xor lods in jl divb add pop leave inc pop mov test and outsb jl jle lcall sub jnp cmp push sbb aam add int3 xor movsl or xor clc xlat add push ss lds jns,pt cmc pusha clc xchg cli cmc and cli loope sbb xchg or int3 or sarb cmc jg sub movsl adcl imul lea inc sub or jecxz xchg mov sbb or pop pop (bad) outsl adc pop adc sub lret shr jne cmp mov xchg arpl test sti mov mov mulb pop cmpsl mov push mov repnz mov (bad) dec ljmp out stos and nop or rcrb popf test xor shrb sbb sbbb (bad) cmc icebp clc push mov xchg cmpsl jbe shr outsb movsl sti mov pop cmp addr16 lret or adc sub ds jle lret pop xor lds inc arpl int3 pushf inc add ficoml cli fs ss xchg (bad) arpl repnz scas pop (bad) mov or lods lahf sbb xchg cmpsb jg adc mov shrl popf dec dec fwait arpl dec fwait jl sahf add cmp ja mov mov mov push push pushl jb fucomp adc ror push cli mov leave dec js sub dec jle adc test in (bad) or push lock sbb fist push lock popf lahf mov inc xor and jmp subl mov mov js fs mov pushf mov sub mov (bad) mov xchg pop ja jge pop clc out daa xchg and pop push arpl cld psubsb inc fidiv xor pop mov loope fisttpll push test dec outsb xchg enter les cmp jp xchg andl fidivl inc push xor pop nop mov xor hlt hlt push mov (bad) out add ret xor int3 xchg push pop add cli mov repnz cmp mov gs dec xchg daa mov pop sbb mulb mov (bad) mov mov add push jmp lret cmp sbb out inc test sbb movsl es fistpll jecxz ja and push decb and and push inc bound lods roll sbb cmpsl andl jno inc pusha jne mov aam jns mov sub push movsl sbb xor ret out fadd (bad) pusha adc mov mov pop rcrb (bad) movsl cs (bad) push sbb icebp fimull bound loop testb repnz in mov xor mov lcall test (bad) ljmp cmpsl clc in or mov cmp push insb cmp mov fnop pop das pop push pop rcrb adc add sub cmp es fstl jle in popa jnp aam daa ret ss push pop cltd lcall or enter pop pop jp pop sahf mov sbb int3 push sbb mov cmp out pop das nop mov mov or in (bad) cmp add nop rcrb xor inc inc xchg icebp mov jg cmc mov push cmp push push xor ret cmpsb push push sub jno nop xchg sarl mov add decl cmp mov xlat add (bad) mov xor and mov enter iret pop ds popf aam lds pop shll lock dec and mov inc dec jmp dec loop cmp cmp bound jb pop or push rorb fwait mov mov jle xchg out mov sub jno mov ds add out addr16 xchg (bad) sahf imul or fiaddl or mov push mov inc pop lods jp loope pushf xor clc jg lods mov cvtdq2ps sti pop arpl adc xchg repz paddb inc pop add sti jno mov xchg fwait cmc cmp dec inc add bound js lcall out mov or hlt (bad) and dec out xor push pop mov xor mov jle dec cmp (bad) cmp psubq fwait xchg (bad) and mov aam push test dec icebp xchg push jmp loop pop xor js iret dec mov subl ret aad mov test mov int3 test mov ds fiadd xor ss xor int3 pop mov fildl jecxz mov push xchg push xchg movsl loopne sbb cmc lock lods pop cmpsl sub (bad) mov mov ss jne scas sub jle pop inc (bad) out test (bad) cmc dec mov fcoms jp mov shlb mov pop in test (bad) insb call notl je mov std sarl lret sub xor in andb xor call (bad) sbb lods pop mov ljmp pop xor in stos enter dec sub sbb push test sbb sub cli push jne mov add imul icebp push insb lds pop or jl lock movsl ret push pop push inc (bad) imul inc mov jl xchg jecxz cmp call mov lds ret lods push data16 (bad) cltd ror movsb xor fbstp hlt hlt sbb inc loopne push push and cmpsb int subl jb insb mov mov mov jge ss dec and int3 mov push cmp push pop pop int3 mov fsubs js insb cli ret hlt rcrb cmpb rorl mov mov inc dec pop (bad) fldenv test ss rorl nop jle and add mov pushl push test pushf jo pop insb sub cmp popf jae (bad) repnz popf pop andl add ret push push (bad) cmc rclb sub jge xchg adc jecxz daa and test ficoml pop pop push ret mov or mov out add or lods mov fldl lock mov xchg push jecxz cmp fnstsw cmp addl xor add and jne xchg fwait jno jo (bad) sub sub jno sbb pop ret iret xor push sub cmc mov inc jnp adc jmp (bad) (bad) (bad) xor add insl push push push in dec insb fnstenv fdiv jle fildl mov scas pushf jle lahf cmp pop les adc pop mov iret aas inc mov pop mov (bad) (bad) loope int3 nop repnz gs addr16 insl mov leave out outsl int test leave mov cld dec xor pop push lret fmull cmp inc jg xor jp inc or iret push rol pop push xor mov imul es and push lahf xlat pop sub or pop fwait jno sub in iret adc pop mov jns mov leave hlt cmp sub push pop stos test and adc movsb cmpsl in pop pop iret aad mov sbb (bad) push stos repnz fsubl fildll arpl mov dec jge inc loope jle inc xchg mov push std ret add cmp dec xchg mov in outsl dec xor (bad) cmp jae mov push adc clc push sub mov out fmul fldt sub (bad) xchg mov ficom test add inc sbb fwait or imull mov arpl aam push pushf jg pop mov mov mov je aad arpl fisttp mov mov sub jo cmpsl cmp cwtl and mov std xchg add dec std jo xor in out imul push mov mov and loope push xor push adc push fisttpll pop fcom out xor std and or outsl mov outsl pop mov jae or mov inc aad adc mov push (bad) sub fsubs out int and adc rclb xchg icebp dec aam aam cmp fbld sbb sub fdivrl mov out mov jg adc push mov clc into icebp test (bad) das lods dec adc jl inc add ss xor xchg pop das flds mov aad data16 scas in repz xchg test adc fidivl out or add pusha aas and in in test lock aas ljmp shll mov pop movsl xor mov cmp ficomp jne jnp jb push mov mov or fisubrl mov pop ja xchg jl jnp xchg sarb mov outsl pop mov repz sub cmp add pusha testb pop popa dec mov sbb (bad) lahf jge mov shrb sti push inc cs scas fldcw sub pop lahf clc jl dec pop xlat fadd push dec std mov jae push jg ffreep arpl push in push inc xchg jge pusha sbb jge sbb jl inc dec sub push ds mov cmc pusha std jns mov xchg test mov add movsl jp cli jge mov (bad) aad movsb leave and ret inc push loope lcall pop dec and bound popa mov mov fldenv divps inc push (bad) jecxz pushf movsl in (bad) addr16 pop pop mov pop cwtl in mov cwtl pushf xchg mul push lock arpl adc and in in xchg mov aas or and xor cs mov inc int3 aas mov sbb test mov out aaa dec cmpb hlt (bad) loop sbb stos loopne and ds adc mov loopne cmp lock mov fistl mov jo sbb xchg jp iret xor int mov xchg cmp or test je and sti stos lea push jbe xchg js push xchg lahf or jge mov sbb mov adc push popl mov repz int3 in push lret sub ljmp ret inc aad (bad) icebp push dec and cmpsb dec aam pop daa push inc negl mov ja imull ds mov outsl xchg cmpsb pusha mov les (bad) fsubs in fmuls fwait or dec pop mov sbb mov sbb stc mov int bound int3 sbb and jmp inc jno mov push xor dec shrl imul data16 arpl and mov or sbb lods into stos push jle xchg lods popa xchg gs fnstsw sub pusha mov sub sub pop outsb test cmp mov jo push test movsl push xchg jb popa out pop mov stos pop sub shll jmp aad cli and sti sbb and jnp lahf int data16 (bad) daa inc inc icebp push sbb mov (bad) rolb insb lock jnp or dec in or sbbb out pop jge ja (bad) (bad) gs gs cmp push adc aad into lods ds jo cmp mov aas cmp jp mov cmp iret jne movsb mov (bad) enter hlt orl out or add shrb aad mov push mov out hlt (bad) (bad) mov nop stc clc and sub push rcll xor xchg pop imul call sahf cli adc imul xor pop lcall jae enter (bad) (bad) sahf movsb cmc stos inc outsl movsl dec movsb scas mov aas pop fwait pop xchg nop in push push pop adc lea or sbb cmp cmp sub sbb mov push push ret loopne test in xchg add lods jle cltd fdivrs xchg jb hlt mov insl clc lret popf push xor and das mov inc push xlat xchg outsl mov jne jnp orl aam jb aam lds add outsl test imul fidivr nop push int dec in sub xor sbb lods mov ret out dec enter insb jns ss std pop fwait mov adc in mov lret or shrl sbb xchg cwtl outsb xchg cmpsb mov fidivr xor rorl mov xchg pusha rcrl lods jecxz pop int gs push cs mov scas in into sbb xchg xchg xor mov fisubl xor mov mov leave sbb mov popa push inc sbb pusha dec xor jl movsb int adc andl push loop out cmp mov lods lea into mov adc and iret mov xchg mulb mov pop xor jle or xor les xor dec sbb in aas out (bad) add movsl popl cmp loop pop pop jne inc jle (bad) popa test mov imul sub lret lock jmp and int out cmp pop dec xchg pop imul out jne arpl int sbb mov jle add cmp adc enter ljmp pop insb xlat insl cmc aaa rolb or dec aaa inc add andb pusha xor push mov push aam adc xor xchg and mov shrb mov in aad gs cmp push and iret fiadd movsl out jne repnz xchg and fwait jg enter jae add pop (bad) icebp das nop leave inc test adc in arpl cwtl xor in call cwtl mov cmp dec fwait sahf xor sti scas test jb loope xchg fs dec sbb adc sbb dec xchg cs cmp add popa test mov mov bound rorb sahf sahf in add and sti xchg in loope jne pop add stos iret inc movsl out sub scas lahf hlt ds popf ss in es les add ret sub cld (bad) mov mov loopne lds test cli lahf sub addr16 sub push push mov clc lcall dec push mov (bad) xchg mov xor std sahf into sbb cmp push mov fiaddl or jecxz cmpb movsb lock bound and aad xor into std mov es dec dec sub xlat test adc adc popf dec dec mov insl xchg sahf mov das in fistpll jns fcoml and lcall loope pop jns (bad) add sysenter sub push testl jo dec fwait push scas inc push cs add sahf cmpsb andb outsl outsl test inc jl jmp lret sub (bad) push mov xor and fsubp inc dec (bad) jb mov jmp inc xor pop mov (bad) mov xchg shll mov push mov pop pusha mov xor pop and call cwtl lods test push cmp rclb sahf mov out xor cmp mov sub mov cmp sub data16 push cmp out daa aas adc mov pushf jmp inc xor fbstp pusha mov leave jg mov pushf sbb or mov in and bound mov lock or imul bound sub in inc cmpsl sbb adc xor xchg leave jge sub fwait ja mov jg ja mov test cwtl psubusw nop pop inc je popl stc in sahf jl,pt outsb not outsl push xchg mov xlat (bad) jmp lods sahf adc gs (bad) jo jg out jnp movsl stc or jmp cmp inc les sarl add jo or xor movb (bad) lock sub xchg mov push (bad) pop mov outsl add mov mov dec test cld inc aad js adc loop xor ret mov outsb mov call cmpsl rcll mov adc sub inc ret out xchg sub cmpsl in sbb pop dec push jmp lcall sub inc lcall fwait mov mov jecxz add ret test mov pop xchg fsubrs pop xlat leave in insb push inc mov pop fs mov pop xchg cmp and xor adc dec adc cmp js pop icebp jmp mov cmp ds in fidivrl xor rcrb ret dec aaa (bad) jecxz jecxz push mov out daa or sub mov dec (bad) das push sub sbb sub adc pop inc cltd imul and add and mov xchg nop aaa sbb sub into mov mov lea jecxz jge sbb xchg scas cmc push call mov repz loopne jp sbbl mov ds (bad) jb inc adc pop pop mov add idivb sub in mov cld fsts and outsb xchg lret pop aam aam and lods adc pop push subl daa lods cmp xor outsb cmpsl test pop xor addl mov sub jle in jp cmp push sub sbb push lcall jne test mov and repnz pop (bad) and pop pop into mov nop loope jno cld fsubp mov dec popa ret xchg xlat dec mov imul add bound pop bound dec in inc test mov stc mov pop add push in (bad) aas push and ss push mov jmp rorl mov xchg push out shl xchg xchg shr sub bound stos and push mov and fisttpl xchg in in adc inc imul ss mov jnp sar dec pusha cmpsb gs jecxz test divl mov (bad) bound in rorl cmp dec aas ret loope dec lret cmp movaps stc je mov mov mov cmpsb loop cs popf addr16 (bad) in rcrl (bad) jae xchg lds lret in clc loope les ds add xchg sbb adc dec inc fisttpll ficoml out std add test inc push jns fild (bad) dec and inc xchg test dec push xchg data16 nop sarb pop gs jmp aad loop lock sbb mov jmp mov movsb and adc test (bad) add pop xor mov jmp add mov lods (bad) lods icebp rclb lcall mov cmp ret frstor in fild jo inc repnz fyl2xp1 adc icebp adc in jg frstor repz cmp push pop mov inc aam pop push out stos dec fwait cmp (bad) cmp jns lds push mov js int3 xchg fisubrl add and mov jmp push in sub mov stc dec mov pusha imul inc sbb std out jne add into mov and sub add roll and lret dec dec fildll out mov test scas call and (bad) inc jne mov dec lock (bad) mov jb cmc push mov movsb imul xor adc mov sub bound ret (bad) icebp daa (bad) inc bound mov and call loop loop gs movsb push cmp in xor cli jae cli adc xor mov xchg cmpsl sbb clc sbb mov adc test xchg movsl xchg arpl rolb inc popf pushf pushf loope lret pop outsb fidiv fisttpll pop cmpsl cmp sub jp mov out (bad) iret lret inc xchg or repz sbb dec add cmp js sub push cmp fcmovbe sub movsb pop or aas dec pop lcall arpl not cld bound or push add dec jl js in xchg imul scas mov out stos push cli adc add xor sbb hlt outsb pop and mov les mov stos cmpsl scas (bad) enter dec imul mov mov xor out clc out fs dec movsl nop xchg in fwait mov jo or fisttpl rcrb fildl ljmp fwait aam jae and movsb loop insl cmp negb shrl jmp jno xchg jno and adc movsl sbb mov push imul loop or cmp scas fcmovnu subb sub cmp xchg fdivrp shlb cmp pop mov jnp pop cli dec xchg adc gs std jg xchg stc (bad) mov cld les mov leave adc in xor sub bound or pop cmpsb pop mov (bad) or xchg push out xor pop and cmpsl sbb and scas pop pop fbld fidivr out ss inc pop sub repz inc aas fdivl xchg push dec sbb sbb sbb push jb int jle rcrb mov mov lret aam adc (bad) or jno imul mov dec lods int add leave pop sub sub push jnp inc pop sbb push ja lds stc int3 and std iret in int3 xchg jno inc mov adc add loopne push cmc push jge pop sarl adc cmc inc fnstenv sub mov aad imul mov testb push out inc lds test xchg push jb enter sbb mov jne inc testb movsl fwait mov mov cmp pop orb mov (bad) mov adc pop mov sarl pop roll sahf pop fcoml cli inc and xor es aad lods (bad) xchg incl out sbb fisttp rcrl fist push (bad) push pusha add cmp js pop cs inc or lea and ss add jo or jnp mov inc sub cmp sub lods and dec xchg pushl dec icebp or call inc pop pop (bad) (bad) lock sub hlt cmp lds aas push rcr jns lret fstpl (bad) adc push mov inc sbb stos and sbb ja dec cmp and dec sub or sahf mov std loopne imul add sbb adc sub jle cmpsb fildll jne pop ss scas mov (bad) enter mov mov add testl xchg or aam (bad) sbbl and xor insl mov mov fsubrl out xchg lea sub mov jl lods mov std mov (bad) call mulb movsl aas test inc push aam or movsl mov ljmp std cmpsb or cs int pop xchg pop inc sub push push cmp lcall mov xchg loope jbe pop xor cmc in int3 imul (bad) jmp inc sahf enter inc pushf ss mov adc and cmp push xor int3 addr16 xchg popa adc pop xor adc mov cmp dec test inc xchg in xor xchg rorl bound add fnop jnp lock fdivr fwait jp xor cmpsb imul cmp mov mov std repz ret push pop inc sbb pop rcll adc cwtl ja mov mov inc mull bound adc test xlat push xchg and inc repz lods adc adc nop lea lret xchg loop inc mov sarl or mov insl pop aam arpl movsb test mov sub sub dec adc ljmp mov scas adc arpl xchg jp push jb outsl lock or or arpl mov imul mov jp movsl (bad) (bad) repnz pop inc xor test aas mov stos out dec mov lret sbb jmp adc or cmp popf movsb push push lret dec pop aam rcl stc data16 mov jo xor add fsubrs mov adcl xchg inc mov imul out cmp int3 mov idivl adc fwait scas push lods jge,pn cltd cmp jno pushf mov (bad) fwait (bad) mov outsb repz sbb inc inc lods inc inc sti dec test xor jmp add mov push pushf xchg punpckhwd int xor push xchg out xchg pop sbb or ds jne xor fiadd sbb sbb pop mov jnp test popa sub xchg sbb push ficomp mov in subb in test cmp test adc push std rcrb jnp (bad) cltd mov cmpsl mov cmp mov hlt popf mov sbb shll adc inc push lcall rol loope mov cmpsb adc cmp fdiv cmovo mov (bad) xlat jno jnp xor adc pop mov push ret xor sub push arpl fsubl pop decl in sub movb cs popa add daa or stos inc inc add add inc loopne mov (bad) in je pop sbb mov push push (bad) jmp enter sub xor mov cmpsl lods fcompl pinsrw popf and sub jl xchg scas xor mov adc scas cltd cmp xlat shll (bad) loopne je mov xor cltd pop lods push and idivl insl mov shlb push orb mov test dec int3 stc sub lods not xor inc add daa mov ret gs inc cwtl lret and arpl lock add jmp mov das shrb adc test insl lock out dec inc cmp iret mov cli (bad) out mov sub iret sbb sub add dec add in dec adc xor (bad) ss push push mov sbb in fisubrl stc daa jge jne movsb push fiaddl and ds pusha mov jne lahf insl cwtl in inc (bad) pop js pop jbe mov les inc mov mull (bad) aad mov sub mov lods jae jo movsl in and cmp jnp sbb fs fild cwtl cs sbb repz mov cmpsb pop xchg lds dec mov mov icebp mov lret mov xchg jmp and imul inc cmp push cli cmp lods fcompl sbb mov mov stos stc gs leave sub clc outsl inc xor (bad) setae sar pop movsb xchg lret inc (bad) mov mov mov mov (bad) push cmp mov mov sub adc adc ret jo adc out leavew xchg push rcrb and mov out lahf push movsb xchg mov nop shlb add dec data16 xlat dec or enter cmp push imul lea mov cmp jb cmp mov cs imul (bad) fldt out (bad) cmc jb xchg inc in aaa aas xor fwait inc fstp pop fwait pushf cmp leave adc dec ss repnz lahf cmp xchg push mov test lcall cmpsl ret pop mov iret mov inc add mov aaa or insl xchg lock lods push aaa ret jne ret inc pushf int out xor or inc mov bound pop xchg dec mov shll imul push pop js ret data16 (bad) mov mov inc (bad) cmp cmc fadd lods test mov dec lcall sbb dec notb cmp xor fisttpll (bad) jb das andl mov jmp pop ds push xor mov leave adc enter cmp mov and and and out lods fstpt outsl out jns jo shrl jns inc and push movsl sub insb sbb pop push in pop in stos into jns inc fdivrl fstl (bad) shlb xor (bad) pop and hlt ficompl jmp xor jecxz les cmp imul inc int3 je pop lahf mov in push popf xchg lret mov cmc adc pusha add int xor lret loopne movsb (bad) cmpsb (bad) cltd fs sbb lret (bad) lret mov push lret jmp mov xchg jp and pop sarl repnz rcr test inc test mov xor insb inc lods iret stos (bad) lods xor gs inc sbb mov and ret icebp clc lods adc xchg and push fsubs inc in sub or mov lock jnp mov test das xchg (bad) sub xchg add jnp cli and sub inc mov push push xor (bad) jno dec push mov pop in rolb pop dec dec push or mov cld sti les cmc icebp push fnop mov loope cwtl (bad) mov stc sub jnp mov mov push sbb cmp push test cmc mov stos lds test loopne (bad) dec stc sti sub cs cld lds in jg cmp arpl notl inc jns and pop push das cmp imul xor fdivs (bad) fdivs and imul mov inc push inc (bad) jo push cmp subl and popa add dec into pushl aas mov cmp std or push pushf fmulp xor je out in add iret outsb jae dec xchg mov sbbl lahf jne dec out scas lods push imul dec fwait lds adc popa movsl jp into rorb inc aad pop push cmc dec (bad) clc jnp,pt mov fild pop add dec xor push add movsl pop out rcrb (bad) insl inc pop rcr outsl lock mov imul mov shrl ret mov cmpsb popa sbb les dec mov fs fisubrl inc sbb and psrld inc pushf (bad) pop cmp arpl popf dec sti fwait fwait (bad) popl sbb out cmp je pop out add out ss idivb mov pop cmp fsubr mov clc lods cwtl outsb rcrl dec mov das cmpsl inc fs inc loop rcr inc into xchg data16 je xchg mov xor jecxz inc mov (bad) xor adc imul and xor fidivrl lods fs data16 jo rorl sub js xor stos jne mov inc xchg cmp (bad) jmp sub xor jg pusha sbb xor cmp cmpsl jp inc das adc adc lahf adc sbb mov int3 sbb dec dec or and xlat imul inc cs (bad) mov push or fwait lea leave or test imul inc test test mov mov jne jno (bad) push and jl pop pop adc jge push push leave xchg cmp mov test pop insl nop rcr movsl imul cld (bad) outsl lea add out jle cld and enter sub jg mov cmp outsb xchg les aas pop push jle mov mov hlt outsb (bad) fidiv addb push repnz add enter mov mov mov mov sti jl xchg inc dec xchg (bad) add mov pop addr16 lea shlb sub xchg mov insl shl cmp js push dec test mov loopne adc adc rcl enter loop add mov fisttp out mov hlt call pop (bad) or aad int3 add imul push or inc cmp cmpsl shrl hlt mov ljmp adc or repz sbb pop xchg adc xor xchg aaa push incb dec and or fidivrl cli cld arpl outsl xor fcmovbe cmp mov sbb int jp lock test orl cld xchg je push mov xor out mov pop add and xor iret (bad) mov jge or cmp push cmc jmp ja adc call push add adc mov imul stos and dec popf jbe and dec aad sub aam push outsl repnz mov push mov push jo mov insl mov jge lcall je sbb stc pusha into cmp movsl sbb icebp scas shlb push out scas aaa cld cmp movsl lods rcl out lahf mov xor fcomip pop pushf movsl shl arpl xor jbe fidivl xor adc xchg jge cmp push jae sub jnp and inc pop lods arpl xor aas in loope or enter test stos pop outsl add ror push mov rolb pop out iret pop into sahf (bad) roll (bad) fsub (bad) andb inc push dec and ja lock cmp mov stc and push adc or push xchg push (bad) cmpsl sbb mov out adc xchg pop ljmp ljmp jle adc out clc cmp sub aas mov adc dec pop es js in aaa das xor mov xlat sub inc icebp ss movsb aam stc scas xor ret add mov mov pop lret and sbb loop push clc xor mov and jle pusha and stos mov mov sub push clc mov fstps pop xor ret ss jnp imul ret pop adc or sub xchg andl mov inc add pop mov mov jb adc lret push xchg lret jecxz sub idivb mov mov pop push pop popf jne sub aad in lock cmp pop inc push mov loope clc int mov dec and fimul add (bad) pop sub shr cmp cmp pop push mov mov or pushf jns sbb push mov push pop add mov aaa mov lret (bad) dec das sub mov insl (bad) stos test cmpsl inc test xchg mov push push jne xchg call ja mov mov adc rolb imul adc out add jo (bad) inc cli xor ja leave mov movsl jne jl sbb enter add pop xlat cmp mov jb cmc jne pop int3 mov mov (bad) adcl movsb fcmovbe xchg mov cmp es and xlat dec stc push lcall fisub inc cmpsb ss inc pop adc pop sbb data16 mov add mov arpl push inc mov clc decl add imul pop jle lahf icebp mov repz jle cmp or aas jae pop pop enter cmp mov daa cltd adcl lahf xchg lods das sbb pop xor pushf pop push mov mov js,pt sahf sub push adc add adc dec sub popa mov in aaa mov pop icebp pop mov pop push mov sub or mov mov imul in adc jmp cmp inc cs fiadd and xor sbb sbb mov pop je (bad) lret mov fimull aas lods push (bad) mov dec fmuls jb xchg imul popa pop clc inc out xor pop mov inc push ja xor push pop imulb imul daa subl xchg jge dec add test inc ljmp bound into adc call jp add add and mov adc jle or jmp xchg in aad mov in je imul mov push adc mov ja adc frstor xchg lret in mov out testb xchg push test sahf cmpsb cli dec cld mov mov xor xchg ret mov insb jnp xor (bad) jae sub and stos lock jne dec cmpsb mov adc cli aas mov les mov scas add push jb or bound xchg jns adc adc add sbb clc cmp out out arpl nop sbb mov fiaddl (bad) popa push lds dec loope cmp pop out ret in push rorb fldl mov stc sbbl rcrl add lock js inc dec add psubw cmp add (bad) scas cmc or stc lcall test iret movsb pop push int3 lock outsb jns rcl ja jp mov popf imul mov iret push addr16 into add nop jno mov fiadd (bad) pop out mov js sub push int3 pop rorb repnz push loopne and pop dec loope scas cltd pop stc mov es push or mov and ja aaa cmp mov fwait mov idiv out lret mov jb punpckhwd loop xchg nop add outsl imul add jns ret jl jnp rcrl pop pop and scas mov jmp cmp rcrl cmpb mov fptan cltd in inc pop pop pop divl divb (bad) aas and fidivr dec mov mov out mov cld test iret push dec mov cwtl fs xorl lds sbbb cli cld dec sbb sti ret mov fbstp out lcall mov sarl push mov call rcr lret bound dec sbb jne mov sbb jmp fs or push test aad sbb push shll daa sbb icebp jge push cmpl xchg fisub pop inc jmp in hlt sbb dec dec test push adc cmc xchg mov leave cwtl ret sti adc dec (bad) or adc (bad) int3 mulb push cmp lea sbb or gs imul mov stos mov repz mov add and movsl lea imul adc aas jo sub call cmc mov int es iret xchg cli mov enter jns ficoml ror mov and sbb fsubr mov jecxz nop mov jge push repz dec jmp fist cltd repz mov jmp add mov std push and cltd stc jl test fistl xorl (bad) icebp xchg dec lds popf js (bad) jno sub subl inc cmp test movsb addr16 lock or movb and mov int3 or movsl xchg fistpll orl sahf jmp cmp mov mov mov add out add mov and dec pop call aad repnz adc sub lods mov add jmp insb push adc call xchg mov sbb cmp jns cmpsb mov psubsb jnp pop cltd ret imull stos loope popaw clc sahf pop dec (bad) pop es bound cmc scas in xchg lret jae jae test sub pop dec mov stos push test xchg lret xchg sbb inc push popf inc pop and fstpt adc jae jp imul int sub sub nop mov sbb aad ja push insl loopne xchg jne mov cwtl xchg aaa inc popf cmp or (bad) pusha fstpl or fildll jge into std push mov and lea xchg or push (bad) mov insl psubsb and jns rcll mov mov ljmp inc pop aaa cmpsb test sbb xchg push dec add lock cmpsb fidiv sbb xor arpl or repnz fwait mov daa or xchg ret jecxz js add in adc sub xor cltd add jbe xchg fstpt dec fcoms push mov pop xchg ja popf ret jle push mov cmp outsb shrl pop xor adc inc je,pn fsubr repnz and mov pop iret add xor in mov xchg add push outsb pushf sbb push stc inc xchg xchg jbe lret xor mov jne imul inc (bad) out or jecxz inc jne call mov cmp adc imul sbb (bad) xor fisubl int3 rcll fmull jnp pop imul mov adc repnz repz lcall mov xchg pop sbb or xor cmp lea popa mov in ret rcll (bad) (bad) sbb cld test ljmp jge and cmp mov lea jne jle add mov pop bound cmpl xor mov adc std adc mov mov insl inc push and movsb jno pushf and pop mov inc inc fidivrl add cmpsl into ret aad push leave sar xchg dec mov add popf inc pop sub dec xchg dec fwait adc sub inc shrb sub sbb sub call add cmc inc loopne je push insl aas and movsb lock sbbl cmp inc xchg sbb popa jmp dec mov rcll pop jl je in (bad) xchg ljmp push loop xor divl jb std stos and xor data16 or pop jo lds sub je jne sahf dec push into cmp and stos add fs sbb lods lods inc sbb mov (bad) hlt push cwtl jnp jge int3 dec arpl mov iret aam repnz inc push pusha das andl pop xor mov or js mov add orl popf adcl adc inc div adc cmp js je std sahf icebp sub jp xor and nop pop jle push jl jg rcll jp pop loop push daa xor mov jmp scas xor arpl jae idiv push jbe xchg adc jecxz inc (bad) cmp je aam mov mov in pop out mov push jne stos adc xor jb dec xor push std jb adc add mov jmp pop adc rcrl cmp push (bad) adc xor sub jmp lock test push mov cmp push jae mov dec call mov scas idiv lea call stc movsl clc mov add packsswb mov fisttpll (bad) xchg int jae cli pop lret sahf xor pop clc fistp (bad) cs das xor loopne sub cmp mov xlat lds (bad) cmp aam cs leave and lret xor mov mov aas repnz mov out stc mov arpl test adc addl js icebp inc sbb gs push mov mov popa test xchg pop adc and iret mov out dec and lahf leave xchg orl jg movl test movsb and testb add js div add sub lret xor frstor dec jl inc roll pop adcl test push jns mov out cmp loope inc daa aas loopne inc and (bad) jb or lods jg outsb pop test movsl jg sarb pop push sbb dec dec in dec and mov mov mov cmpsb call pop or pop movsl rolb xor je mov mov xor in mov js cmp lahf xlat jo popf out js push dec jp pop cmp add (bad) pop xchg dec adc popf (bad) jmp sub cwtl adc fsubrs es pushf pop add jb xchg inc or push stc cmp xor cld ljmp xchg movsb adc push adc insl lret out int3 movsb cmp mov mov loopne mov scas or xchg jle mov adc (bad) cli jl push enter in and jbe sub jecxz add mov inc iret je bound test stos mov xlat inc adc mov xchg aad jmp dec les roll xor or mov sarl es sbb int ss stos xor adc (bad) cmc push sub repnz dec (bad) cmp fst mov bound adc or dec into xor orl popf fucompp mov cli sbb xor hlt adc lret sub aaa cltd push xchg fistpl push pushf aam iret fcomi shlb xchg mov push mov pop lahf cltd mov inc xchg push lea mov jo cld mov (bad) dec jns inc xor fs cmp in jne cmc std add inc adc or frstor incb (bad) adc pushf mov scas sbb cmp addr16 test nop mov mov int aaa cwtl out add rorb pop call mov fadd stc sbb sbb gs imul insl mulps cmpps and ss pop mov stos dec lcall jo aaa and jnp sbb (bad) js lret je mov sbb xor mov fistpl mov sbb inc ret lods xor stc into or in inc dec repz addr16 mov xchg dec mov repnz aam lret shr mov loop xchg adc push push pop xor adc int outsl movsb push adc dec and or jbe in and cmc shrl andl mov cltd stos add clc ds aam mov call pop (bad) mov fldcw add in rclb je fucomi pop and inc js stos sbb and xor (bad) jp mov rorb adc cmpsl outsl inc fbstp jae fldcw add ror movsb test lods stos jg lahf out adc rcr aaa mov lods in pushf sbb jge xlat mov pop data16 push lret mov stos adc into mov clc xor mov adcl rcrl lock in push testl mov leave dec out pop das mov movd xchg loop push jne sbb aam test pushf in dec aam add xor mov aam cmp adc in fwait outsl mov inc cmpb dec cwtl mov shlb push sbb cmc loop cmp dec push push clc jg std das test fldl or push shlb ficoml inc sbb pop sarb push in fadds call xor in add inc fnstenv xchg sbb rolb xorb mov mov (bad) mov sub gs inc xorl push push out pop lock hlt out data16 mov and dec mov dec fwait xor jae loop or cmc dec or and je das inc rcrb es push push inc outsb rclb into daa adc sti outsb test pop int shll push iret dec cmp scas inc jo or in dec xchg fldcw int mov mov pushf inc cmpsl lcall (bad) in popa xchg or xchg out (bad) sub add push cmp cmpsl dec cmp sbb or divl pop pusha jl enter mov push cli ja xchg fdivp in dec pushf in dec cmp xor and sub mov xlat popa push push aas ja idivl (bad) cwtl stc dec mov into lahf (bad) movsb mov test pop (bad) cmp stc mov outsl sti ret dec mov (bad) sub loope add mov mov out test in cmpsb mov lret push sub fdivrs scas imul xchg and popa dec into rclb pushl mov (bad) push pop lea test jmp adc xchg pop sub and shr jb sahf sub jb push icebp inc adc loope in andl sbb test mov ljmp push sbb int xchg lcall mov (bad) in in call inc and and xchg adc ret cwtl mulb loop mov or inc or jne pop cmp mov mov sub test out jns sbb test xchg cmpsl nop jo pop out aaa sti mov sbb and (bad) adc jb jmp (bad) and aas bswap pushf xor stos sub mov pop or cltd js xchg fmul cmp ljmp call xchg popf lret inc pop ds and test jg mov ret mov seta or fs aaa arpl mov fiadd push ja scas aaa int3 popa mov mov sbb (bad) fdivrl jl les xchg push gs int3 insl faddl in mov ljmp inc ret loop test fcoml add in push xchg in cmc lds cmp xor iret cmpsl xlat notb clc lahf or cli jo cmpsl jne push js das cli jmp and jnp inc sub xor mov test fistpl scas mov jns pop rolb test cs imul test adc lea cmp xchg stos mov neg mov xchg movsb push pop xchg dec test jo mov ret mov cmpl fidivr pop add cmpsb clc ss sub js lods sbb xor or xchg dec (bad) mov cmp pop and jne jb (bad) fwait adc adc stos jo in dec sbb inc loop repnz ljmp mov xor xchg popf insb mov das add and ss sub add pop fcomps cmp cmp add mov push adc cld scas mov cmp push sbb out inc mulb and scas imul insl lds xrelease mov cmp xlat ss sti lret (bad) dec sub test jg sub insl inc (bad) lock imul mov add sub pop xchg lods push fnstenv and imul cld into or push mov inc out imulb iret cmpsb adc add jno cld fiaddl (bad) xlat lret shrb pop add mov pop xor xor mov xchg jecxz loopne inc pushf fcom test and mov mov out pop cs push and or stos mov test cmpsl iret pusha add mov push mov dec std pop call imul mov inc and xchg es xchg sbb mov cmp int3 sti mov lret cmc incb inc push out lret in lds sub loop lds cmp test aaa subb jnp lret insl xor pmaxsw in in popw mov inc loop mov mov es popf rcrl adc mov mov jae scas lods icebp jae fisubl int3 fidivrl int add sahf sbb adc pop push push sbb xchg mov ficom push xor ror fild rcr bound xor es das mov movsl ret xor mov daa and mov bound test sub mov jne fsubrl lods push xchg pusha xor inc cmp mov mov cmp mov pop xor decl (bad) or lods sub sbb mov (bad) fnstenv jmp out sub (bad) (bad) push push mov xor (bad) or pop cmpsl lock mov xor lahf stc pop (bad) jbe mov mov outsb mov cmp loopne test jo xor push dec lret pop fldl cmp movsb cltd in ret out fistl ret outsl aaa repnz sbb daa and jecxz xchg out and dec mov and adc (bad) popa insl jg aaa jge (bad) jecxz dec adc push cmp cli jno fisttpll jb dec test xlat jle pop aaa add in mov sbb mov test mov js iret push movsl call repz aam sar out lods mov mov and mov and or ret sub inc jg lahf ret adc mov dec hlt icebp push js in cwtl jo in cmp cltd idivl sbb das dec dec mov push and adc mov (bad) in addl sub cmp xor lret push cmpsl cmp (bad) mov add mov mov adc and xor je xchg pop aad mov xchg dec insl loope or xchg sti shrb mov push xor inc rorl cmp das mov aas and jg int nop push pop aas cmp mov js push push iret mov bound xchg or dec inc dec cmp dec movsl jge call cltd lds rcl je mov das test sbb xchg iret outsb inc inc xchg dec cs pop out pop je cltd (bad) jmp add mov ja insb outsb and jg in (bad) lea out fwait sub fnsave loope mov aaa pop out ss loope (bad) and test add loop in xchg enter push ret mov sbb ficompl out adc pusha xor xchg xchg data16 mov sub ljmp mov cmpsl xor xchg in cmp pop add sub lock inc cmc xor adc mov hlt lea lock adc jmp push adc dec or jo mov push decb push jmp dec xchg aad lea outsl add jno scas or push lcall hlt (bad) mov pop push mov enter push add inc adc mov mov inc stos pushf adc add sub lea push jne push dec push xor and push or stc jnp lcall mov ds subb call cmpsb arpl enter xchg mov icebp xor mov push clc jge push js fabs sub cld enter pop popf add pop movsb jge sub inc and mov data16 pusha ljmp mov cmp or or imul (bad) sti iret mov push fwait mov sub out pop sbb pop ss mov sahf xor add vlddqu push or push cmp rorb pusha xlat movsl mov push in or jne adc popf cmp scas jae dec pop dec jae stc imul cs jl or movsb jge loop enter push divl xchg mov inc or xchg aad dec int into xor pusha sbb pop dec and sub add fwait push lds fsubrs jns (bad) (bad) pop mov js cs out add dec outsb xchg mov and enter xchg dec jne pop iret pop (bad) (bad) xor fadds xchg test adc scas or and sar and dec leave (bad) sti and pushf adc sbb xor insl (bad) cs movsl cmp aaa into push cmp mov imul leave cmp lock pop mov jmp (bad) xor (bad) int hlt xor fisttp insb inc xchg fnstcw iret xchg and cld sahf popa out mov lock mov outsl inc jae jns xor (bad) and enter cmp ja and shll inc fsts sub movsb adcl dec jle (bad) scas pop mov dec outsb sahf jg xor push and inc xchg lods stc scas sbb xor sub fnstcw xchg mov fsubrl shrl mov push shlb push loop xlat sub pop inc pop rcrl push repz je cmc subl scas mov xchg ja and dec or add sub cmp into xor ja xor add mov imul mov xor jl,pt mov jmp scas les cmp into or xchg insl ret jg add fldt xor and icebp aam leave push dec jo sbb jl mov movsb xchg cli cmp add inc aam jae and mov dec xor inc incl mov inc cmp inc or scas aam dec jecxz (bad) loopne jmp adc std mov jl data16 xor std ret mov inc fcmovne xchg pop sub in sub movsl jl cmc mov test sub mov jmp rolb jp and xlat add rcr aaa push (bad) push cwtl sar push jle cmpsb mov cmp fbstp outsl jne jmp xchg pop inc xchg lea shll in mov xchg inc mov fadd lcall (bad) enter fisubr loop pusha mov or call pop std jmp push mov mov fs lods movsl fs mov mov xor movsl mov cmp mov xor or dec push and cmc (bad) xor inc fwait fs dec cmp xor xor cltd jbe dec pop int3 insl orb cmp mov loop xchg add (bad) int mov lret and outsb mov jmp or jb cwtl cmc insl clc xor fldcw outsl inc sbb sub lcall mov sbb fdivrs movsl xlat mov dec cmp cld sbb shll jno add cli arpl imul out pop dec or repnz shrb mov pop dec dec adc sbb imul dec jecxz cmp inc dec js ljmp (bad) aad lods repnz mov jbe jmp in fmulp adc inc pop int3 mov cmp sub fcmovnu (bad) cmp loopne fistpll das leave cmpl imul cmp xchg sarl ja jmp adcb xor mov sbb mov dec ss (bad) cld in adc std frstor fnstenv mov cmp pop lea and clc das and test jnp lea add lock pushf pushf ds sbb mov fs test sub (bad) adc cwtl push loopne sahf scas mov gs lods (bad) fldt sub scas sub and sub stc jbe mov sbb jae movsl sub dec jb and add and add xchg mov pop (bad) fcomip daa add test hlt pop pusha and pop (bad) clc dec (bad) push pop xchg lahf test push jecxz and jl aam movsl push xchg fs addl cmp icebp add sbb addr16 data16 adcl mov or xorl sub xlat sub jne mov sub ss jns mov or mov sbb les push pop in movsb cvtdq2ps rcr out popa mov adc fnsave insl mov inc xchg shll jne inc rorb mov cmp cmp fs jns imul jnp popf ret (bad) xor add loopne bnd out ja lcall or mov fwait mov shlb je sub ficoml (bad) out push jno jl js adc mov movsl adc (bad) fs cmp fcmove cmp pcmpeqw lods outsb ljmp (bad) (bad) push inc mov xor jb xchg sti add pop mov sti sub sbb dec lret cmpsb adc nop inc add and pop mov adc sbb adc imul loope in push xchg jmp cmp mov mov stc scas inc rorb inc (bad) jo mov dec imul repnz add popa adc or aaa push jmp adcl pop sbb pop aam cli sub jb into and mov in or mov or (bad) test xor adc jg movsl jp xlat pop addr16 sub and mov hlt fadds mov insl repz outsl sbbl push jmp shrb mov lcall daa jmp (bad) idivl leave inc loop les mov xlat add pop pop clc sbb rorb subb push mov in loope sbb (bad) adc cs push jnp loop pop and mov fldenv sbb adc pop xor add or inc mov fsubl mov jle jl push rsqrtps inc in pop in pop xor aam hlt sbb pop fcmove jnp leave sub mov enter icebp out jns and pop inc push test cli mov mov jae lret das pop xor fadds adc lea (bad) in mov jns or lea push jbe push xor xchg repnz inc sbbl lret lcall insl lock and xor sbb fst (bad) mov push adc sbb andl sbb iret mov jge stc repnz frndint xor sub scas sbb jne sbb xchg adc cs inc push js jbe and add or xor sub mov (bad) icebp cwtl dec xor rcrl sbb sbb in jg mov aad adcl inc add lcall sbb cmpsl jne and pop aas ficom xchg (bad) cmpsb (bad) inc cmp xor inc push add push cmp les inc jge pop mov data16 pop jb das aad or clc dec jecxz in lret sahf xor popa push pop jge dec add test xor inc pop (bad) aaa cmp das flds out jb (bad) clc outsb mov jae or mov jg and lea mov mov ret or es jle push movsl js add mov imul inc dec (bad) in popa cld shrb icebp mov test std inc jmp pop xchg adcl mov and fdivrs aaa and outsb ss test pop into movswl stos cltd movsl jbe dec pop push js cmp mov sub push aas ret pop jbe test mov dec or rcrl mov inc mov mov lcall cmpsl mov push jne jb xor add pop mov adc out mov out test xchg in dec int cs mov movsb xor or jg cld adc mov lret bound idivb adc aaa inc mov mov loope and mov push enter das sbb and push push insl mov fldl addl xchg mov xor call dec adc stos cmpsb mov jne cmp pop lods mov cs cltd or xchg data16 xchg inc imul or cli inc in xor or mov pop ret bnd insl inc cwtl test and imul dec (bad) repz xchg out adc stc xchg inc and arpl inc and out dec dec pop or jp lcall adc and xchg je ljmp lcall mov mov nop mov push cmpsl jb lock fisubl add call inc scas enter push sbb mov aas pop int adc or (bad) xchg dec ud2 mov push xor (bad) push pop add adc or fst idivl inc test js test iret add dec push inc inc cmpsb mov sar cmp push decl add fwait insb mov cld outsb mov mov sbb jnp xchg into aaa adc push push pop lret icebp inc push in push mov repnz adc cs arpl pushf je dec mov imul shll push add pushl mov sub lods push and pop cltd xor jne loope,pn xor (bad) in sarl jle mov (bad) test mov inc int pop in out hlt xor mov mov repz loopne mov sbb dec xor jle inc mov mov mov popa loop lods and popf lcall lds pop inc sub and fstpl mov arpl adc mov out sub test pop or jno rcrl or outsl in push push cmp adc pop dec imul int3 jnp mov jns insb mov dec fbld push stos hlt mov pop cwtl in sahf xchg mov xchg pop cmp (bad) (bad) mov jnp orb int dec (bad) jo sub jg cmp xlat mov mov scas in insb cmpl fisttpl xchg clc sub (bad) jbe mov dec popfw (bad) in xchg fwait sti ja (bad) popf icebp xor jecxz nop jae sbb cmp cld pop out mov xor mov inc into jno fnstenv cld popa insb jle lods fisubl mov imul (bad) movsl cmp loopne data16 jne xlat or cltd pop sbb shlb push cltd mov push mov add or jle popf or arpl add loope hlt outsl push (bad) push inc cmp outsl adc xchg mov push and ss iret sbb (bad) iret rcrb (bad) push lods cmp aam inc and mov mov enter popa push lods in push dec clc xor fidivr xor xchg xchg cmp push cld or and dec repnz sbb xchg add jno jecxz inc faddp loope jno push and lcall ds enter pop je lahf push nop pusha js mov imul addr16 dec adc imul inc int3 mov push push js jmp mov jns int3 xor push inc movlhps cmp ss cmp pop add push or ljmp sub inc or pusha ror fldenv xor (bad) cmp xchg sub xor dec lods pop jle in leave add and aaa cmp scas std std dec dec push mov rcrb (bad) ja mov rcrb adc inc or jge stc push mov dec int3 push mov jne dec xchg jbe mov in push cmp js rcrl repz cmpsl mov push pop cmovge sbb stos mov mov out (bad) mov into sbb (bad) mov adcl sub fstl dec in mov mov std inc jle sub js pop push mov (bad) ret fidivl mov jns (bad) xor adc push fsubl push push mov push mov bound fildll call sub ror lret jp and add xor sbb sub xlat mov xchg insb out lret aaa adc add xchg loop push sbb inc shrl in xchg pop push in call jmp mov push subb or mov not mov sbb adcl jp inc data16 sub out das subl push test sbb mov xchg mov push sub jl xor and (bad) adc ficompl jo adc adc ret out xlat fist cmc xchg cs push mov jecxz inc mov enter cvtpi2ps add cmpsb shlb xlat int adc lds popf aaa sub out test imul mov xor sbb mov insl xor xchg or mov int3 test cmp sbb or dec bt mov call xor cmp scas inc mov add mov xor stos xchg imul jns fisttp not loopne sti in dec push imul mov repnz int ds sti sub xchg push aas in sub push out or aas mov mov mov push sub sbb add mov leave dec inc xchg (bad) shlb out (bad) aam sbb scas push inc inc sbb pop nop sbb jp mov loopne pop mov mov aam or and inc js sub daa inc lods cld repnz xchg pop leave mov scas adc sub inc push das ds imul out ror xchg repnz mov aad xor orb nop mov cmp mov out fucomi xchg cwtl scas and adc push fisubl lock add out mov mov std mov or (bad) jo mov pusha adc pop mov clc xchg in add dec fcmovne cld insb or rclb shlb mov jbe fstpl jnp test lods fdivrp (bad) insl mov xchg xchg and test jle dec ljmp hlt push mov daa test int cltd cmp xchg lahf stc lcall daa (bad) xor or cwtl cld cmpb cmp sbb in fcoml xor js add push xor add test mov stos jp cmp ja or (bad) inc outsb iret loop mov push call adc or jg jns jmp int3 dec xchg data16 push jae xchg sub jae pop jb das pusha add out icebp insl jo fisubr sub push iret daa jb add cmpsl sbb push rcrl cmp jne pop mov shll mov jae hlt ds dec outsb popf inc ja stos mov xor iret mov pop adc mov lsl pop sbb dec adc (bad) mov (bad) movsl and jl xchg enter test lods sbb xchg push sub adc lock scas cmp daa repz mov adc ss push dec in sub ljmp nop mov mov and movsl adc in (bad) sub cli sbb cmc rcrl push mov enter fldenv loope pop sub int shrl aad push test cld inc (bad) sbb pop jmp insb repnz test xchg sub bound or mov xchg xchg loop adc movsl sbb je jp,pn imulb addr16 and test out mov mov push pop sbb aas testl lcall or or repz xchg xlat incb dec nop pop xrelease pop pop scas roll push dec jmp mov push adc js mov push and int sbb xchg nop or add xor leave nop cs cltd xlat sbb and xorb mov jp test cmp lret sbb xor push dec movsb (bad) cmpsl cmp icebp imul pushf sbb sbb dec clc scas push dec jg,pt aas dec push inc mov sarb (bad) jge inc loop (bad) ljmp sahf mov lcall fimul hlt (bad) mov stos dec es scas xor int sub imul fcomi xor add fsubrs jno sub jp sub push je testb subb dec xlat sbb mov sahf xchg fwait xor add into std das sbb xor sbb adc lods mov addr16 add xchg js dec xor leave dec jmp and push sub leave sbb gs sahf mov inc shr pusha movsb hlt in gs stc xor scas pop loop or or push and pop push adc jns or pushf fwait dec xchg movsl int3 roll xorl (bad) inc push ja sbb dec cmp fisttpll data16 sub push sbb push std (bad) fstps dec das test mov popf mov ret (bad) int3 lret sub jle and fwait jne jle stos cmpl test mov pusha out jno mov sub push jl rcr mov adc insl std or int add out inc nop jns daa xor jns std fadd pusha jmp inc add inc push pop add (bad) mov and insb adc push psubsw mov sbb add mov arpl (bad) iret sbb dec (bad) mov and cmp pop jmp lds adc std (bad) dec mov and stos (bad) fbld push rcrl fist ret je movsl xor xchg inc (bad) lret outsb jb dec pop jg cs sub pushw hlt icebp and xor add pop pop out mov xchg xor inc test sbb cmp jbe add sub (bad) jb (bad) adc pop ret push mov rcrl cld icebp fidivl cmpl cmp xor cld or xor or pop xchg cmp push inc fxch jl or adcb jnp addr16 mov lea popf mov push xor test leave dec mov mov mov ret inc in out je vpmaxub cmp out mov iret add call add fildl adc mov popf aam call inc pop mov mov adc adc imul mov jno pop lret ds jae loopne push dec push icebp bound loope sbbl stos or adc inc lods sbb mov sahf popa dec (bad) test mov pushf into xchg xchg cmp jle lock cmpl jp lock inc stos cmp push push push sub ljmp sbb mov ss rol es push gs pop sbb jbe sahf or jae (bad) ja xor adc add stc es fs xor pop fwait and inc in int3 jle imul jns stos mov popa jbe jno add mov mov mov cmp aas xor iret xchg pop xlat pop xchg iret cmp sbb scas mov int mov inc pusha ljmp or mov sub (bad) adc (bad) sbb jg mov mov push shll inc in and or fcmove fcmovnbe mov mov test imul mov xchg inc jmp xchg sub adc xchg in push insb jle xor add sarb stc or adc cltd dec test xor sahf push subb dec xor rclb inc mov int3 stos and xchg mov mov shrl add flds add jae clc xchg mov pop gs sbb das in (bad) test das sbb or in jge push pushf jge sub mov (bad) or lcall add push in inc jle loop jecxz sub jnp test and add push push cmp adc lcall shlb xor stos test mov cmpsb in (bad) jo mov cmc hlt and xchg kmovw add add cmpsb push pop xor fildl sbb pop sub dec popa cmp hlt fs stos fstl fdivrs and ds imul sti jmp push or jnp fstps fistl les pop mov lcall adc clc push mov cmp test test ja inc lods cmp std (bad) mov pop ljmp xor icebp inc repz addr16 ljmp mov test or jge loope popa dec daa cmp inc push movsl test pop movsb mov sbb pop pop jno xor inc add stc xor xbegin js push pusha mov pusha jne push fs sub mov shll push sahf jmp imul push jbe bound push pop adcb hlt fmull in addr16 fistpl jo imul mov jb (bad) or pop mov sub inc out daa mov (bad) pop ds cld push insl pop fstpl popf mov cli mov pushf fimul add inc pop xor push xor or cld push xchg mov stc aaa arpl (bad) mov out fbstp sub adc xlat pop inc aaa loope push popf sub cltd add jae call sbb (bad) mov aaa xchg lcall gs push rcrl fwait (bad) mov mov cmp insb pop mov ljmp sahf adc and xchg sahf (bad) cmp push cmp cmp dec push stc stc push push xchg mov pop and sbb inc repnz pop inc mov add into and mov push dec lds mov xchg rclb and sti scas hlt dec (bad) push pop jnp imul and xlat jb lret fs push push fistl popa scas cmp xor or cmpsb dec das xchg je rcl adc dec jmp std sub and lcall jae adc (bad) mov jbe push inc sahf push jmp xchg mov xchg repnz adc jmp pushf (bad) orl aad cmpsl lret arpl loopne mov scas and jb (bad) dec insb mov (bad) cmp cmp sahf fdivrl push add pop cmp pusha xor lcall cmp add sbbl or clc enter sub add rorl xor dec nop popf push inc ja ret cmp test sub repnz aas mov out cmpl ljmp in adc imul movsb popa es iret popa fistpl lods pop fldl jb push jne movsb add (bad) xor mov push popf jno add xchg sti int lahf pop sbb adc or addl out hlt (bad) mov cmc subl add sbb fcoms (bad) clc or outsb mov rclb cwtl outsl jle sub rorb xor lret fs fimul stc sub mov dec movb les sbb mov mov cmp add dec (bad) fucompp adc loop or xor cld pop ja sub inc xchg inc mov out (bad) cmp jmp lods popa dec out ret xchg push cld dec xor or sub shll or pop jb xlat repnz (bad) cmp (bad) cmp add fcomps lds pop shll loop fsubrs repnz es pop fwait popa and cwtl xorb xchg popf adc fsub iret (bad) dec insb push jg std xchg sar mov fs imul test mov popa je mov lret xchg test out and or les push and mov mov sub fisttpll (bad) ret daa (bad) sub inc xchg and popa js fnsave arpl fwait stos bound hlt inc out bound mov xchg cli sbb sbb jnp dec and fucomp jb insl fnstcw fldl2t loopne pop call es add jmp jns cs mov sbb jl das mov (bad) xchg xchg jne sub add mov add sbb and pop repz push inc fisttpl pop les mov adc mov arpl sahf pop mov ja (bad) lcall mov stos jmp inc sub sub adc lcall or je push mov bound jae push ret fisttp and imul fwait adc imul sub jo (bad) scas jne out sub or cmp or leave clc mov cmp daa add fs popf dec jmp xor mov jae sbb cmp xor ja and loopne jp jg push push inc push mov push cli insb ret add mov and pop cmp or xor sbb repz arpl pop aaa (bad) xchg bound mov sbbl nop jge movhps mov inc xchg mov pop mov ficom cld dec cmc div mov loopne fdivl leave (bad) das push call inc cmpsl pop xor mov xlat xchg pop fstps pop mov xchg hlt loope mov aad pusha jne test popa das xchg mov fs jnp jne mov mov fbstp mov dec xchg out daa and mov xchg roll bound ljmp fcompl in bound (bad) xor test lret outsb dec es aaa cwtl shll push lock mov iret pop mov das mov jle push mov aas es movsl pushf adc iret mov pushf lahf std (bad) repz xor sub repnz sbb mov repz ficoml sub call and fist pop and jae (bad) xchg sbb bound jbe sbb sbb mov stc adc andl pusha enter je cmpsl fidivrl push out cmp add data16 int push lock fnstsw lods movsb sub dec repz lret rep ds cwtl lahf daa into pop clc mov mov popf scas sahf in cmp sbb das andl inc dec pop fbld push pop push lahf xor xchg mov or cli out lods jbe pop insl test xchg cs cmp or cs mov xchg fistpll stos outsl mov inc imull dec inc mov cld and scas lahf mov xchg inc popf out push or and xchg adc cmp mov rclb sub in dec test mov dec mov xor decb pop fstl pop inc cmp xor sbb push pushf stos hlt enter xchg out xchg aaa subl or (bad) vpshlq test pop lds sub xchg das or adc in movsl jle popf daa sbb mov jbe pop leave inc cli in enter je xchg insl mov and pop mov adc ss sti repnz push cltd jbe and in dec (bad) and or cmp cwtl (bad) stos loop lret (bad) outsl adc (bad) jmp sbb push cmpsb ljmp fistpl ja or nop rcll (bad) gs push je pop inc inc jle gs add adc inc fwait (bad) repnz movsb adc adc std rorl pop les (bad) jp popf bound jmp pushf sti movsb out jno and push mov pushf leave mov mov jno xchg xor (bad) cmp pop (bad) rcl lret jbe xor stos pop add lock (bad) roll cmp (bad) inc sbb mov inc loope cmpsl jg sub pusha and mov mov nop mov dec loop lock jg or or sbb (bad) push nop pop (bad) pusha pop mov repz and mov repnz imul mov push shll add mov xchg in popa lods mull insl pop ffreep in push in pop adc xor push fwait mov cmp (bad) mov bnd jle out lret mov cs sub xchg jmp daa sti outsb xor or and sub addr16 jo sbb sub mov xlat mov leave xchg sbb mov loope dec cmp addr16 cwtl mov dec lea insl dec push ret ret xor xchg lods ret mov xor sbb shll sub push stc pop push lock sbb pushf push jne jmp jp stos (bad) je (bad) jp mov movsl nop or lock fmulp mov mov push fdivs stos pop jns movsb hlt inc dec into dec insb xor lea int3 adc mov ret push std sub or dec dec sarl add rcll ljmp push mov cmp lods push data16 inc (bad) lock pop xchg or das jbe stos cmp mov xchg push xlat dec mov cmpsb xor sub xchg je jnp in into push ficom std (bad) and and push out lcall in mov or mov add mov lea es and addr16 cld aas and loopne jno loope outsb mov or fldenv jb (bad) in xchg test adc xlat mov pop or rclb jo lret and mov xchg jle outsb mov jmp sbb out inc and mov inc scas adc lock fildll mov xcrypt-ctr addl rclb inc xchg jb dec test rcrb es push ljmp xor mov add dec lods jecxz outsb in fidivr inc jp and pop and sbb xorl dec xchg sbb mov mov lret (bad) mov int3 mov jbe fxch imul cs outsl inc enterw mov xchg push lret (bad) mov call fnsave cli mov (bad) popa mov pop push inc push movsl add (bad) test push sahf test add scas mov stc push in sbb decl xorb xor and call xor and out fdiv dec jecxz xchg cmpsb sbb cmpsb andl dec sub cld lods or test add out in add sbb push dec movb mov movsl (bad) sbb notl push mov cmpsb cmp cli in pop cmp sbb xchg test sub jb sbb arpl add pop push icebp jno mov sub enter nop call xchg cmp xor jae inc roll insl sbb or mov ljmp dec adc jns and enter jae (bad) sub mov push or in bound mov jp shrl addr16 jo pop lret jbe decb outsl lds push xor jb mov and leave andb rorb flds sbb movsbl push dec jnp jb dec inc insl ljmp into push aam push mov pop ja sarb andl adc (bad) push or imul call dec push aam xchg sti pop adc lods pop cmpsb xchg pusha pop lret pop or scas cmp cmc js add mov and out cmc cmp sarl fs sbb dec lret jmp cmp sbb inc sub je aad or mov lock divl sbb stc mov (bad) mov mov push xlat cwtl adc dec shr push call or imul outsl test jmp loopne cld jo fiadd ret add les xor mov cltd imul mov jo repz push push xchg dec pop xor sbb in and sbb inc jmp icebp scas xor or hlt sbb js mov lea mov push mov gs leave enter lret (bad) push jecxz in pusha adc cmpb fcompl mov adc jnp jmp aas xor add jno (bad) fld xlat data16 push int push mov in ret fiaddl or aad insl or push xlat es mov pop fs sar imul sbb mov xor xlat inc jmp out push jmp push push or stos cmp or xor jb push cltd push pop and test ret dec xor leave iret icebp fsubrp mov add testl add jne push orl add int lahf aad out mov push test hlt mov lahf movsl bnd (bad) dec movsl shlb aam xor repz cli xor dec or dec xor cltd mov sub (bad) xor outsl lods pop (bad) hlt bnd stos or xor (bad) jecxz mov cwtl or cmc mov inc movl dec xchg popf test sahf sub out in nop sbb cmp xchg jmp aaa mov and dec push dec push pop stos mov and xor (bad) cli jno cmp nop adc mov sub sbb fisttp loopne decl ss pop add insb xchg and test and or and push push fstpt loopne cmpsb and (bad) (bad) mov xchg outsb inc cmp stos in mov pop outsb mov insl xor mov lahf sar push in inc pop (bad) movsb test mov int add xor js xchg sub mov es or mov scas sub clc movsb or insb mov out dec or arpl jb arpl outsb daa repnz stos fistpll add (bad) jbe or push push inc outsl cmp sub fbld push xor jae add xor (bad) mov fiadd faddl rcrl xor or mov (bad) mov shl inc jns out loop mov sarl jnp sbb xor daa aaa jbe mov jae lds jl mov into ljmp imul dec movl mov jns adc pop outsl cmp dec lcall hlt pop pop jae (bad) mov js inc das dec addl sbb mov push rclb fs lods lock push rolb insl xlat enter or pop xchg dec jne sbb dec dec flds ljmp xchg faddl decb cmp std movsb stc (bad) rorb frstpm(287 (bad) pusha (bad) push push jne bound xchg scas pop int3 pop in incl cmp dec gs out (bad) ja gs mov fs sbb xchg push fisubl aad jg pop add cmp nop jae addr16 repz mov jae push mov sbb shl mov cmp (bad) das pop or repnz and popf pop imul cwtl daa into mov (bad) lock (bad) mov inc jae mov lock in mov and insl add lods ss and mov ljmp mov aaa nop pop call inc movsl xchg xchg adc jno mov lcall xorl int imul test fs dec stos pusha in xchg cmp lds leave imul jle fidiv jg aad call jge push dec insb ret sbb loopne xchg push rcrb pushf scas mov mov pop xor idivb icebp sti loope leave pop arpl push cld xor leave fnstenv or xor bound jns jmp lret and sbb ja pop push mov jle add ret mov lcall mov fs and push gs adc sarb loope test mov sti out pop push xchg bound aas bound ljmp xorl lods mov xor jmp sbb mov int3 mov mov sub (bad) ret adc loop mov xchg aas adc orb push mov adc (bad) cmc les mov ret fisub and push jne mov mov add imul or xchg fbstp pop xchg adc push mov mov cmp cs sbb jmp (bad) push cmc xchg jge sub pop dec ret adc mov arpl dec ja cmp adc aas not outsl fs adc loope int cmpsl fs mov ret add mov pop test adc xchg nop jo xchg jg ss stc addr16 test sahf pop addr16 out mov test daa rcl push pop arpl sbb dec sub imul rolb sbb and mov or mov pop aam jp mov loope mov sbb insl mov popf ljmp xchg test inc mov mov adcl xchg in cmp icebp clc out dec jo lods roll mov in hlt adc add sbb (bad) test push aaa scas das push pop cltd data16 or test push in mov insl pop add loopne fsub sti inc arpl or test (bad) pusha test adc push pop push mov adc mov (bad) repz popa lret out sbb adc mov and pusha jb int3 mulb jge frstor and xchg addr16 imul aas call xor (bad) mov push sbb sbb stos aad loope mov sbb imulb mov outsl push inc je inc cmp (bad) mov fiadd divb scas sub or js sub sti inc repnz hlt mov inc popa dec inc dec cmp test das out (bad) lcall jae or xlat mov inc int adc shlb add mov daa daa sub rol pop pop insl shrl fdiv mov xchg stos sub push es push test adc push cmp cmp add iret jnp adc adc pop jne and testb xor das xor push out into lods cmp or push sbb pop fs add push mov cmp inc push xor mov adc fiaddl xchg (bad) cli stc pop ds in fimul and pop sub adc push mov loop sbb in mov pushf int3 (bad) inc and mov sahf ror outsb xor sub test xlat popf das in sbb (bad) cld loope mov repnz repz xor shrl cmc dec xor jmp and rcl (bad) or mov jb mov sub adc shlb cmp inc mov data16 mov dec cwtl sbb test cmp (bad) pop xchg mov popf (bad) out cmpsl add jle mov outsl adc ret insl push add mov fldt sub mov and testb cmp xchg mov loop,pt pop cmpsb add mov cmp jne xchg (bad) ds (bad) (bad) clc out dec fcomip clc popl in pop sub mov fucomp mov das mov ja dec add mov dec adc xlat data16 (bad) pop insl add sbb xchg or or test xchg mov pop adc inc sub pop fist (bad) add xor xchg adc push xor pop adc ds cmovo (bad) je sub pop xor mov or test mov mov (bad) into inc sub adc montmul cmpsb (bad) jp or mov sbb in cmpsb sbbb sarl ret xor lods test mov xor jnp add xor stos daa dec gs ficom pop rcrb pop bound ss pop push pop adc ljmp xchg bound mov stc (bad) pop mov outsb add adc or into pop mov mov inc lock mov mov inc stc mov jge ss or xchg mov jo push test es jecxz lretw sbb add in add lock mov das sbb xchg sbb (bad) sub (bad) jae enter inc push shll inc cmpb ljmp test xor test jl sti sub or push and mov lods out jl adc mov add inc (bad) jl sar jge,pt sbb mov inc and (bad) mov xorl out inc stos cmp cltd cmp mov adc popf enter les ljmp inc call push rcl pop (bad) adc stos fnstsw insl bound cmp sbb mov in (bad) cs xchg fs or rorl pop out push stos pusha dec out std pushf out shrb cld sbb push subl and aas or and (bad) inc out mov mov mov mov mov dec inc jecxz popa push inc sub push sbb faddl nop insb inc push dec dec cmpl ja aas jmp aam (bad) dec int3 rcll adc test sub fsts imul and mov cld out aam sub (bad) aaa pop push dec mov push test pop das cmp jo mov popa js enter inc shrd sub addr16 adc mov cltd sbb dec int bound out mov mov push mov ret outsb inc int xchg iret ret push lcall pop jb cmp dec cs pop and int3 call fisubl popf stos dec rcll nop inc cmp xor int3 mov mov bswap xor repz and xchg pop (bad) xor repz cmp xor sbb push mov push and js outsb adc mov stc in sarb imul cmp jle and lods cmp jo or int3 sti or cmp jl cs and dec divb in mov adc subl stc mov adc cmpsb sbb jne add xlat and in in fiaddl fdiv out sub sub popa mov fcom pop lret negl decb xchg pop enter stc pop lcall push int js in pop inc pop rorb sbb lds divl push pushf and fidivrl add pop dec in mov test xor not lret or push mov adc mov (bad) cmc sub mov leave fstps xor sub xchg mov nop mov scas jb xor ret mov fwait push outsl lds jl into inc adc movsb pop (bad) jae (bad) mov mov push je or add xchg scas icebp outsl or mov nop sti add test inc arpl xor cld stc mov sub sbb enter loope stos pop jl cmp jmp popa inc out fdivs and inc push cld mov inc xlat movsb push cmp or cmp int test ja pop and lods hlt jb outsl sbb loop jo aad loop test jp insb imul and jg pop push pushf outsl jmp repz adc mov iret lret xchg cmp jl and mov dec rcrb sbb push cmpsl cmp (bad) jl lahf lea xlat data16 adc or (bad) outsl loopne stos sbb mov test pop lcall lcall inc shll test scas or adc pop lods pop in addr16 jge insb add scas sbb or and call and outsl lods cmp cld jnp mov and jne jg inc cltd lret test add push ror pusha xor dec jae cmpsl imul (bad) xchg adc push (bad) mov sbb xchg mov loopne cmc rolb (bad) fldl daa (bad) xor cld or pop mov mov les scas fisttp andl and xchg cwtl mov inc fs je (bad) and ss stos mov pop xchg push ljmp sub jo call nop inc lcall stos sahf mov imul rclb data16 sbb push dec insl sbb incl lret ret jne pop sub enter mov inc lods xchg and push adc inc fisubr sbb pop jns rcll icebp push dec pop (bad) fisubl pop loopne push pop stos push sahf and pop sbb je test rorb inc push push mov mull scas insl das dec mov sbb dec dec adc or fs (bad) sbb inc pop mov inc mov in mov xchg gs jecxz xchg pop inc loopne enter jge (bad) ja rcll je daa or lcall data16 cmp and daa in xorl and adc or mov xor ja jle ds or sub sbb dec popa mov stos xchg ret or mov dec mov xchg sahf mov cltd stos dec sub mov xchg sbb add ss push xor jo lcall cltd insb or pop mov (bad) repnz movsb in dec mov sub hlt mov push cmp stos and adc mul jb std ret (bad) stos jle pushf dec adc cli sbb sbb stc jl cs or adc jle in test cmp jecxz inc scas jnp scas adc xlat pushf or or pop pop lods push in adc shlb (bad) mov and and or or and lret dec mov lods test add (bad) jp mov adc push xor and add ss sbb add dec pop (bad) mov clc pusha sbb add jle and imul je jne dec inc mov xor frstor mov outsl scas mov icebp mov xor es adc pop shrb inc jp cld pop mov shrb dec jmp fwait or ret mov push jns,pn loopne jbe ret or mov test jge jo push daa jns pop enter lods mov divb mov loop push in cmp xchg call and dec lock mov dec mov and cmp pop mov int xor pop dec int mov dec (bad) mov xchg mov xor jae xrelease mov lods mov mov mov incl out in cld stos nop sub lcall shll xor mov outsl sbb in pop fldt dec mov and ds bound sarl inc in pminsw mov loop fsubr sub int scas lods sub popa or jmp mov jmp pop ds (bad) out std in subl sub mov mov repnz movsb out in iret mov hlt iret popa add sub add cmp call push jae in adc pushw or icebp mov ds rorl cltd mov pop js negb into inc inc pop mov (bad) mov daa cmp mov cmc xor mov shrb and pop and xor movsl inc mov cmp add test cmp mov push sarl lahf mov jo jg mov loope popa and cmpsl mov sbb fiaddl push sub dec xchg adc mov cmp test imul imul push fcmovne ss movsb inc (bad) cmp adc sbb dec in andl inc fucomip jo (bad) mov imulb adc push pop pop mov std subl adc int pop mov std insl inc lods aad fldenv out push cmp push lods repz xor ljmp pusha cmp scas xchg cltd test adc add (bad) mov push (bad) jl pextrw data16 xchg jl test mov je mov cmp subl ja inc pop xor push mov mov jo sub inc test ficomp sub inc sub sub and dec or fild xor int cmpsb ffreep mov lcall dec cmpsl insb or aas loop lods jmp jle jecxz in push xor pushf inc pop dec mov xchg imul xchg std pop loopne aad mov out (bad) cmp repnz ja movsl lds movsl rolb pop mov mov fcmove pop (bad) push (bad) int3 ja loope icebp insb les and fwait (bad) adc (bad) and jae cwtl popf ja and fisubl add mov (bad) sbb cwtl xchg xor stc movsb add lods adc and and pop adc es adc jb iret mov stos and xor cli mov leave popa enter mov into test jp push bound or test pop sbb dec stos mov adc call push xor sarl shll cld add icebp xchg push mov fst push mov mov pop stos lahf mov sti adcl lods add cmp xor outsl dec js test imul fidiv bound pushf popl inc push (bad) rcrb pusha iret fbstp (bad) arpl cld add cmp jle add lods add cmp mov cmpl dec add or inc hlt push lret and daa dec pop sub xchg divb and stos loope std jle mov mov push fwait (bad) jle push xchg cmpsl sbb into cli xor push xchg loop mov push sbb xor mov aad adc std (bad) in jg jge lcall rcrb movsl adc pop shrb das cli and pop loopne adc pop pop test outsl lea cmpsl in or xchg xchg clc cmpsb mov sbb andl adc sbb jb in fs jl vcvtsd2ss pop mov sbb testb jo outsb js lahf adc aad or mov js jno sub fs sub or (bad) int3 vpavgw cs call push add out push xchg sub add insl fidivr mov pop fnstcw inc inc mov das ret mov and popf insl push (bad) ljmp mov add scas inc aaa push add test movsl jecxz andl jge js popa sbb add fdivrs push cmpsb imull xlat cltd fs push lea out notl dec inc add nop test es sub inc cmp out mov pushl mov mov xchg mov sahf fwait adc test ds jg stc jmp mov (bad) jb rorb adc xchg rolb daa xlat mov lret enter dec sbb inc xchg iret arpl jle in in js jge (bad) and mov shl rclb add aam push mov mov xchg xchg jno cmp dec jle mov arpl push mov adcl bound jp test sti nopl jae mov fcoms push imul in mov mov ret adc (bad) dec add or ljmp lock cmp gs adc mov iret mov mov fdivrs stc sbb outsb in pop dec sub repz sbb adc cmpb les jg loop scas fs aas or pop sbb mov xor cld lahf iret jns adc out xor cmp aaa cmpsb and cld jp movsb adc lock ss xchg pop data16 sahf in pop push into mov pop jmp stc icebp inc into jg loopne fisttpll jb sub inc clc add mov les popf adc mov (bad) xor outsb aaa or pop fsts (bad) call loope inc inc (bad) fsubrs mov push mov pusha sbb pusha add add jno inc out sahf out push push cmpsl xchg cs fnsave ss mov jne jbe gs sub (bad) je pop push pop lock inc sbb mov fcmovne pop adc fwait mov loope popa pop rcrl mov push scas fidivrl repz frstor loope rorb cmp lea or dec jns pop jno inc sub xor aaa and and popa cli pop mov out and inc into xchg jb pusha pop jle sub cltd and int3 les or ror ja or leave (bad) lahf scas xchg fs hlt lock aaa push jmp mov cmp nop and (bad) ja daa int ja inc into push pusha loopne pop xor bswap mov inc test sub jg,pn xor popa push (bad) neg sbb add mov adc pop push sub xchg psubq pusha test fwait mov inc push out push fwait das sub adc xchg arpl cwtl inc lahf (bad) not push adc xor fildl std test pop mov inc dec dec mov rorb sub jb inc mov sub and lcall notl loopne jl xor lahf sub lea in mov lods mov lahf je lock pop xor mov fstl mov aad jb adc adc pusha jbe fist cli jge scas xor jns scas cli ss popf jp mov fidivl pushf ficom jl adc mov add sti xchg lcall pop mov push fisttpl dec cwtl fbld mov aam mov lahf test fstps dec pop out dec sbb add xor mov mov push inc stos inc in sub push aam cld inc gs sub cwtl je stos or movsl popf imul mov (bad) fsts mov and or lea imul mov fimul stc xor inc inc insb sub test test jl pop mov inc test mov ljmp jl add fucomp adc pushf add pop pop mov test push or sbb daa out in xor leave jns inc adc mov pop in mov in push fsubp pop push mov add icebp jne lahf pusha mov aaa mov idivb or inc data16 mov gs imull outsl test mov and movsl mov es cld push xchg cs mov inc push enter cmpsl fnsave lds cli dec xor jmp jnp sbb sbb push clc cmp jnp sub add ffreep int3 jbe xor lock aam push jecxz (bad) push sub xchg mov bound movsl cld std addl jle lods mov pusha les inc imul movsb inc pop fwait push testl sub das pop xchg ss cwtl xor adc jp stos dec cmp sti and add push insb stos test outsl xor out inc mov scas jnp xchg sub lret idiv push or xor out lret loopne xor adc enter push or xor ljmp push hlt outsl loopne in not stos sti mov sub add arpl lret inc into movsl out sub lds push shrb inc cmpsl test aam add outsl jge push xor test stos xchg mov dec insl (bad) and and dec pop out push test mov loopne adc pop pop enter xlat pushf or daa popa bound push adc or pop in sbb mov scas mov mov pop dec cmp outsl mov pop pop loop adcl or mov cmp add sub mov lret pop int3 pop js jno jb inc outsb out ret fs fs repnz fwait out pop adcb in pop inc sbb cmp test sub icebp jae jno imul stos pop pop daa loopne mov dec rcrb sub mov mov in and fwait repnz and dec fwait sub dec sbb pop or stc mov test ja push fsubr popa call out lods fs mov adc popa nop aaa je aam mov dec decb jmp mov icebp iret mov outsl fwait lret sbb add xor jb int mov cs bound xchg shlb mov cmp imul add mov cltd adc xchg movsl cli mov (bad) mov (bad) pop cmp scas mov cmp pusha push icebp pusha popa (bad) outsl cwtl sub (bad) out leave out mov adc push aaa out dec in frstor and push push sbb repnz push sarl (bad) (bad) outsb in adc xlat sub mov xchg sub test cwtl into incb push clc sarb mov insl fdivr xlat add movsl (bad) call mov stos adc jbe lahf mov sbb sbb (bad) dec (bad) xor pop cwtl add jne cltd inc lahf test push in inc jns mov pop into out mov xchg js cmp cwtl inc sbb mov push lsl xchg gs jo dec cli add jp (bad) mov push sbb rclb mov jp pop lods cld pop lret push mov jns lds test stos adcl scas mov cmp stos or mov repnz xchg repz mull jne jge lahf (bad) popf aam jae lods ficompl inc xchg imul movsl mov pop sub push mov mov outsb lret mov loope or pop push adc xor inc or int3 and jl add iret jns pop and push mov outsb mov clc movhps je pop mov test pushf mov jne mov and mov lret mov sub cs mov iret pop pop jg pop into mov xor mov iret fwait push fwait rcr inc mov push add int3 out or data16 jnp inc dec (bad) push (bad) jns lcall inc adc dec (bad) cmp fwait push xor data16 add cwtl and aam or rcrl test fidivr xchg mov das aam fildll notl jle push aam push loop outsb outsb imul jns adc push sub cltd jle xor lods inc inc notl cmp iret fcmovu xchg call mov ffreep addr16 lock in nop inc cmp and pop and push int sbb xchg mov jo mov in call pop in loope (bad) jbe pop jo add in push or lret icebp sub sub xlat negl pop jge aas xor push adc popf dec subl stos pop add das and push jb push enter js stos push aad fisttpl jecxz sub cmc fildl mov les js xchg jl xchg fimull test imul iret daa cmp in fidivrl xor lock (bad) mov test and mov jbe lret add push and jmp lret scas (bad) mulb sbb pusha aas iret push clc in movsl and mov inc xchg fnstenv sub movsl fnsave jl in ficompl fidivr jge mov data16 and mov xor stos in (bad) inc inc gs loope or std cmc and insb insb addb (bad) daa mov jns adc mov and fbstp mov pop inc fwait test repz cli nop fmull add or in xlat ret jno in inc sbb mov loop jecxz dec push cmp lret in jle dec pop mov out dec insb (bad) mov cmp rsm or adc dec jg mov dec sti das incl or ret popa daa and adc xor cmpsb int cmp (bad) mov xlat pop cltd push add mov insl scas les out outsb add loope std pop mov sahf sub push mov ja rcl insb pop iret sub insl jae jbe shlb mov or repz adc mov in pop push stos aad movsb mov pop js cwtl scas push sbb pop push leave (bad) dec faddl not jl push or push loope jo leave repnz add mov inc mov test mov mov pop jae outsb movsl lret addr16 (bad) pop test sub es pop push mov sbb leave lock inc repnz mov rol xchg in sti sbb lea (bad) out and jbe xor cmp mov jae fcoms push popa jle movsb jmp mov mov xchg mov add inc sbb inc xchg lea add in cmp icebp icebp dec mov mov in adc dec pusha lahf xorl fnop inc jp xor mov in inc test mov shlb cmp xor mov jnp mov out mov jbe mov or lea roll cld cmpsl inc xor ljmp jecxz negl or jo cmp mov aas into and fwait shrb add daa xchg (bad) (bad) cmp or sub ret mov in std jnp lods (bad) mov and mov das jns in or cld and fsubr push inc xor jnp sbb mov pop xor lock push sub out loope mov pushf lret sbb test lahf and mov or daa incl sbb test xor inc test cmp adc inc xchg xchg xchg add jb push xchg (bad) ret or fiadd je js scas aaa cmpsl cmpsl dec cmpb push cmpsb negb adc or sbb mov int3 sbb movl ja (bad) xchg adc lods data16 inc pusha lea shrb mov mov into sub xchg sub (bad) lock daa cmp out daa jb push xor cs data16 frstor mov out frstor stos dec push test or cmpsl imul jns dec fcmovb out (bad) (bad) into mov (bad) not bswap loope and ret cmpsb dec std pop scas sar aad push or imul push add stc xchg push mov mov iret divb test bound xor xor fstpt (bad) cmp out xchg xchg movb fisttp imull cmp and and dec loop jg cld inc adc addr16 lcall (bad) cli imul pop js cmp mov mov imul shll mov inc sub push jne cmpsb add (bad) mov mul add sbb cmpsl pop sahf je into (bad) std or jle adc fbld add fistpl loope sub push fwait dec mov pop sti stc or jne xchg mov dec lods fst popf mov xor movsl int jge mov or lods inc mov aas scas jmp jp cwtl loop dec pop xchg push ret test or into fwait lock mov cmp mov and or push push lret pop jns pushf jae inc inc xchg cmc jecxz loope pop jns pop test loope pop inc jge int3 ja mov pusha cmp jp dec jbe sub jb sub loop pop stos test mov iret cmc or aad gs dec xchg mov cli adc adc xor fwait test dec and and (bad) or leave add adc push mov jns push in push cmp inc jmp cltd and in mov fldcw pop popa loope test in stc sub cmp adc sub mov dec pop inc rclb pop dec stos jecxz push das (bad) jbe push fwait xchg xor xlat js jo ficompl sahf rcrl insl cmp aam and mov and mov mov or subl xchg lret pop bound dec (bad) jae movsb xchg (bad) fldcw push push mov sub rcrb dec xchg lret testb loopne dec xchg jl inc dec push orl sub enter add mov mov lret or jl lahf push adcl int inc sub adc pop pushf (bad) into es mov test (bad) inc sahf mov pop mov lods mov mov daa jae pop fs sub (bad) sbb scas adc cwtl mov movsl jb repz (bad) or xor mov inc sub in push push lahf cld movsl pop cmp push aam (bad) mov push cs into jo movsb mov or movsb mov pop sub (bad) std (bad) xor outsl lock push mov mov xchg jnp scas test and mov xchg adc mov mov dec repz lahf adc jne out test stc cmc out cmp lret outsb push jne sub cmp cmp int3 mov cmc cli push inc add inc mov dec push sti test cmc push roll xchg jmp mov in repnz idivl fsub test subl cs push mov pop mov mov cmp outsb jge divb scas mov cmpsl outsb inc das loope sbb mov mov fcoms mov mov jo icebp es stos add push xchg push or dec adc dec mov mov fmul cs lds arpl mov mov and int push notl fnstcw sub push jno jp scas cltd cmp cmpsl push xchg mov loopne ret cmp aad insl jecxz and into adc cmp cmp adc cmpsl arpl hlt fcomps and adc hlt push xchg pop xchg data16 sti cmp xchg jmp adc xchg bound mov stos xchg xchg jg mov or (bad) js (bad) mov out dec bound or mov push add xor cmp push xor rorl fildl (bad) dec fistl sub adc clc mov or je popf inc das insl add push inc out sti sub xchg cmc xor cltd bound xor ret lods test out mov lret sbb lahf (bad) sbb out shlb xchg stc psubq es sarl jp arpl jle repnz fisub jbe push push jle dec mov xchg outsl inc daa pop pop mov xor movsl cwtl fcomps int stc cmc test sbb jnp jae mov pop loopne mov mov aaa cmpb test sub outsl adc sahf bound xlat dec or lods scas shrl cmp daa cli xor out cli sub jg jmp mov mov jnp xchg sbb push scas jg mov daa test lock lahf inc adc aas int sti xchg xchg fcomp ds and out int3 xchg cmp push fcomi jo mov sbb (bad) dec pushf sbb (bad) jl nop xchg push lret push add xor lea ljmp cmpsl mov popa push test mov mov xchg sbb or int js popf andb (bad) aam inc (bad) lea leave pop mov imul cmp cmp orl inc and xor fs scas mov sub or mov inc outsl js dec (bad) in mov daa sar add mov dec inc inc or or or dec outsb jge fldt xchg cmp inc inc xor dec adc xchg xlat call pushf adc xchg (bad) lret cmp test mov adc jns adc scas mov mov loope mov popa in sbb or mov jns pop aam jl stc fldt shrb mov inc cwtl mov push sbb pop mov mov test mov pusha push push sub push mov push xchg int3 cwtl test scas add nop int3 xor aaa scas enter aad xor insb int movsb fsubrs outsb dec cmpb fmull cltd push repnz (bad) das jmp jo sbb mov sbb mov das xor push jnp fiadd dec mov js mov test rcl mov pop sbb leave sub xor ret cwtl dec insl fidivrl in (bad) leave insb adc dec lcall arpl call sub push das faddp popf xor or out negl or pop dec add (bad) sti (bad) push lret xchg sbb inc sub mov ror shrb adc jb je lods add push sbb call sysret enter fldt movb and xor mov add mov pop xchg aas icebp stos int3 xchg sahf imul cmp pushf fisttpll adc sbb ja scas (bad) mov sbb adc divb jmp sbb shll mov fnstenv fdivl popa pop loope mov cltd sbb loop and and jge jae das mov jp cli inc lahf lds aad xchg pop dec cmp repnz pop add dec cld push and aam movsl cld into sub fs lods lea pushw test mov pusha les or push insb push jo xchg rcll adc movsl push loop cmp cmc mov sbb pop lea hlt aad mov dec mov (bad) adc add jmp adc movsl out cmp shlb loop stc enter cmc mov in pop movsb sbb fistp imul fistpl call in pop fnstenv (bad) mov test in movsb and and je ss ficompl sti sbb in stos cmp stos xchg daa inc (bad) rorl or int int imul mov inc pop mov or or movsl dec mov xchg aad dec in pushf adc sub shrl dec jb push mov push or mov or out ds mov push push addb dec sbb dec and fsubrs faddl cld clc js,pn (bad) neg pop cltd sbb sti enter sbb xchg jae sbbb or mov push leave push dec ds add adc lock add xlat jnp sub mov or mov lods or xchg div ret push sbbl jnp cmp lods orb lods andb mov jle cmc mov push aad sbb push js shlb xor cmpsl cmp cwtl out cmp mov xchg (bad) aaa rcrb adc inc add imul aaa sub loope fwait lock mov js ss sub test mov imull leave aaa fiaddl push push scas movsl in frstor jmp gs sahf inc sub js fdivrs mov mov add jmp push out pop das lret pop iret addl data16 or xchg jle push fnstsw cmpsl or push pop ss xor fwait jmp (bad) mov or mov sbb push inc fnstsw sub sbb unpcklps xor push ret daa cmpsb xchg jl stos mov (bad) and lds pop sahf stc loope,pn mov add jns enter xchg int3 ljmp gs cmp xchg test or cs pop jl in dec jecxz xchg es adc les mov cmp sbb xchg push mov jb test addl test dec xlat arpl mov dec add iret in sub dec xchg cld push xor xlat dec xor les cmc push dec imul xor dec or (bad) jno call xor pushf insl pop pop aas fwait mov jge or jne loopne dec jne movsl and lock lcall aam pop mov xor push dec adc insb mov and sub or test add inc sti lret jp xor pop or mov lret cli fnstcw in das das jecxz sub clc xchg mov sbb fbld neg pop push data16 fimul and les xor mov xor xor xchg sub std pop mov mov in push int xchg aam jns and pusha pop les (bad) cwtl (bad) dec lea jge fs mov inc jbe (bad) loopne outsb int ss adc lret inc xor loop (bad) pop jne xor fisubrl nop (bad) cwtl mov jl cmp or cwtl cmp std bound lcall fisub test cmpsb rolb jns cmpsb jge inc in int3 int3 adc rcl mov mov inc jg fdivrp cmp cmc add mov inc jmp adc mov pop add int3 sub pop mov lcall xor cmpsl lret inc fimull pop fbld mov (bad) (bad) push mov cmpsl insb ljmp mov rcr rcrl xchg add pop xorl sub insb notb pop pop inc rorb mov test bound xchg push pop std into xor shlb cmp movsl in cmp inc lea push xor jo cmp sbb loopne add dec or pop mov and std lods fsubs xorb mov push push cmp leave cmp es aam fwait push push xchg scas and lret pop outsb lds ss push pop pop mov add notl insl mov mov hlt jl jecxz wrmsr out xlat sbbl or fwait inc pop insl or mov popf loopne xor add repnz orl mov aad sub cs sbb popf sar test cmpsb xchg cs pop das mov push mov cli sub lock mov cmc clc push push sub adc mov lret jb push cmp popa scas inc fwait add cmp (bad) in mov inc ljmp mov push cmp (bad) push ja mov dec mov loope in insb sub mov into mov fs ror add mov jmp std cmc sub inc aaa popa cmp loope in and test (bad) cmp repnz sbb push lret pusha loop push xchg xchg lods and movsb lods xor jmp pop mov incl inc pusha into mov cs inc loop,pn out mov jl out test jne push sub lea mov out xchg les and xchg enter cmc mov mov and push insb cli pop mov push test and lods sti sub mov subb cmpsl push xor loop adc push xchg inc xlat mov js push pop loope sbb outsl or test int3 sub fstp cmp sbb sub sahf jmp fwait jno rcrl xchg sub aaa clc lock mov mov push loopne mov aad sarl xor cmc (bad) jns movsb lret outsb sub lock out or add clc push cld sbb sbb int js movsb add das (bad) fbstp loop cltd (bad) jle jae cmp subl mov movsb mov mov add add cwtl movsbl push add mov or mov notb mov inc xchg out dec iret lods cwtl inc popf (bad) imul cmp inc push sbb xor jmp sti sub aas cmp inc adc fwait ret pop fcomip push ret rclb stos scas movsl in popa sub out push mov jbe adc rcl lret bound js loop cmp aaa sbb movsb xchg jbe or xor cmc in into mov adc and (bad) or lods jne jle cmpsb sar pop (bad) push push imulb into insb adc stos xchg mov sahf aam or jb push hlt pop xor lret xlat movsb ret adc sahf scas fwait call inc dec mov dec jo mov pusha jno insb jo mov data16 (bad) mov sahf imul subl (bad) push dec pop xchg dec xlat mov and adc fnstsw adc movsl nop xchg inc cmp mov fs stc lock jbe pop fnstcw lea leave es pop mov or fs ret lahf outsl jg push inc mov cwtl test push dec int3 (bad) pushf jae cmp jns push mov (bad) cmp push faddl push leave (bad) repz outsb lea in jns sub adc sub in xchg pop out add shld (bad) mov dec xor jge es jns pop mov popf lret imul sub mov jbe mov icebp jno fcompl inc xchg push mov mov mov jge dec (bad) mov addr16 mov lahf gs lahf and push out jge fsubrs and repnz pop (bad) mov and mov (bad) jb xor jle repnz or pop btc or or es cs out rol mov call cmp adc adcl sub dec cmp out dec fidivrl and cmpsl jb pop push jl jg dec stos adc lds fdivr pop cltd xchg dec iret adc les rclb pop cmp add test mov and sti imul jno ljmp jmp dec inc sarb (bad) add and je ss loope dec cmp pop mov cmp xor jge out hlt subl pusha sub pusha sub sub aaa push add mov adc icebp int3 mov push xor cmpsb fwait rorb pop or pushf sub xchg xchg mov or dec cld mov out adc xor mov (bad) mov mov pop scas sbb scas xchg sub loop outsb cmp adc shrb push cmp popf sbb mov cmp imul pushf jmp movsb jl sub push jg sbb loope xchg pop lock jnp adc out push jle fistpl dec add pmulhuw jp loop gs aaa add aam xor in cmp loope addr16 je mov je sahf or dec mov fild jb jb sbb sbb mov xor out dec outsl jg xor scas gs imul add cmpsb pop jmp test sbb outsl ja es ret mov mov inc stos add shl sbb mov dec ds mov out adc mov aaa into mov cli add dec sub (bad) ljmp lods ss mov rol add mov xor fnsave ret icebp mov mov push and (bad) sub ljmp cld leave add push jecxz xor lret xchg xchg jbe lock pusha xor rcl lcall push popa push sti dec sbb jp dec inc xchg push pop push cmc mov push mov shrl loopne out mov (bad) out jne or mov dec inc xor out inc mov in push push xchg (bad) loope (bad) push xchg fldl adc mov movsb mov or les ret ud2 aas pushl adc add xor sbb daa cmpsb dec pop sbb movsl cmp xchg push fsubl sbb add fdivr fisubl inc in in mov xchg mov dec cmpsl stos loop outsl call and inc mov les int jecxz push push fdivs repnz rcl sub jmp inc insl push out je std add cmp outsl add (bad) xchg jo mov or mov adc insl add cmp inc mov orl pop xor ds xor xor mov (bad) jbe xor jge les mov (bad) addr16 inc push fmull dec sahf xor sbb imul imul push shr dec les int shrl movsl inc aaa pop popf mov das jo jno ja mov data16 xor cmp jecxz inc dec inc sbb dec test stc push popf or in dec lods push rorl cmc inc cmpl add nop fdecstp and dec mov add lea out (bad) mov or jo xor push clc dec in loope inc std fstpl push adc push mov out rcll xchg lea jg jno xchg xchg sbb lds out jecxz aaa dec (bad) hlt stos stos (bad) ljmp dec pushf cmpl mov dec dec push mov sbb mov xor pusha cltd mov inc mov (bad) (bad) push xchg cli fistl and or push in mov iret xor dec es test mov lret push dec call dec rcrb rcrb rolb cli jae pushf fildll out jnp lcall jp push movsl cmp lods (bad) imul push mov hlt cmpb je out push sti sub rclb sbb scas jne int3 pusha ljmp stos xchg je rorb in loop,pn test jecxz notl mov bound jge xchg sahf and sbb cwtl imul cmpsl lret shrl dec aaa push sub mov cltd push fnop lea imul dec sub pushf icebp iret xor ficoml shl push cmpsb ss or ficomp jne inc into mov fdivrs mov pusha in inc stos dec mov fnstenv stc mov imul out in adc jecxz lahf rol sti hlt repz xchg push into xor inc clc mov push fldt push push ret cmpsb mov scas insb add fsub adc pop pop sbb adc cmp fxch (bad) faddl out mov popf pop ret dec stos sahf lcall ja mov mov incl sbb cmp push stc push test xchg imul in xchg mov and cmp push inc cmp inc mov mov mov je sub pusha mov (bad) or cli add shlb push hlt popa mov repz push cmp mov cmp xor mov mov inc movsb inc pop pop (bad) adc lret xchg movsb jns jo cmp dec popf ljmp cmp adc mov xchg mov cmp loopne outsl lods jae jl fs sub sbb (bad) enter (bad) call rorl add test adcl mov iret js mov lret sbb dec rcl ljmp sub ss mov pop fsub push add inc mov inc sub or stos cmp sub sahf arpl or inc sub sti out out sbb sbb clc std xchg (bad) fsubs es xrelease mov fdivp jge cmpsb cld xor sbb mov inc in cmc sarb add (bad) mov icebp and repnz jmp mov mov pop mov das inc sub lret xchg inc int test xor mov sbb add adc dec mov cmp cld andb sbb sarb mov mov pusha adc sbb push jl mov out mov jno mov jge mov mov hlt mov addr16 out and dec enter cmc sub je pop mov ret ja cmp add mov sbb fdivrl or xor cli adc mov (bad) xchg cmp loopne mov stos aaa inc negl mov mov sub push rcll add cmp data16 fldl test pop subb push addr16 enter push data16 pop dec jge adc int3 dec (bad) jnp lret or ss or xor (bad) mov cmp out and loope mov cmp dec pop aad xlat fwait jnp jo into inc mov in lahf fisubr lds jne dec sub data16 mov push popa lock mov rcll cmp (bad) insb aas adc jmp mov push dec adc jl adc pop push mov insb or adc cld mov test shrl xchg (bad) idivl popf test loope sbb pop and andl sub mov test or mov cmp mov jne negl (bad) ret and bound sub jge cltd cld jg fildl adc jb mov push inc clc in (bad) ja adc scas pushf and cmp sub push sub (bad) or inc movsl cltd adc stc inc icebp xchg and inc dec repz (bad) stc inc inc out aad leave cmp xchg and ret pushf es lods push mov (bad) cmp push xor jb outsb bnd push sahf shrb adc ds negb fidivl loopne insl out (bad) dec mov loopne,pn push add xchg or lcall add adc aam imul xlat rcll jecxz mov jp jmp xchg xchg stos sub xchg stc popa jae push push jns,pn mulb sub mov repz push sub sub inc xchg mov pop sbb push mov xchg or adc ss aam ficoml push mov stos ds jbe in jle xchg insl xor adc scas mov add aas cwtl add lret out pop jl push sar dec sarb xor (bad) fcomp sahf sub jae dec xchg stc jp dec xor push orb lea addl popf es imull xor and xchg sbb aad push cmc xor insl mov push ljmp fist adc adc (bad) mov add jge mov push xchg cwtl std push inc dec cmp pop cltd or pop push jo clc pushf cmpl pop inc lods mov sbb pushf add mov pop in pop adc xchg dec xchg add movb (bad) cmp xor mov sbb pushf dec and cmp mov mov cmp inc add or inc mov cmp jns cltd dec mov mulb inc push pop jle mov mov fiadd or push (bad) pop scas mov (bad) lods into jg xchg sbb dec sar xor int add pop es xor in scas jo (bad) insb sbb add jl jnp ror or adc push in cmpsb sarl dec jb mov movsl pop insl iret lar imul sti int3 ds enter popa or ret sub sti loope test add or mov adc inc sbb insb jp andps cmc (bad) adc mov mov adc pop (bad) out push (bad) loopne inc adc in cltd mov xor inc sub dec lcall shrl adc in pop repz mov fnstcw ret xorb rorl mov ds daa out in mov pop and adc sub repz outsl stos mov jmp sub mov inc xchg fwait into mov pusha into add pop mov movsb adc sub or in sti shll inc dec int mov subl dec insl adc xor movsl test out ret lock push cmpsb ret sbb pop inc mov and fdivrs (bad) leave mov mov rcrl push pop rcl (bad) xor or pop test xlat jns iret rcl xchg fwait add xchg sub (bad) or and jne push (bad) jnp lret cltd add rolb daa loope sbb pop mul mov sar xchg loope cmp push hlt inc insb movsb std lods cmp inc mov (bad) xor out and cmp cli push xchg inc lret inc xor jl ret xor popa push cmp dec push loop sbb aaa ja sti ret xor mov std cld push fwait xor jl sbb or fsts fistpll daa or in add cmc rclb jno xchg in dec pop faddl rcll and xor dec jbe adc adc sti and xor mov or or (bad) repz and jl push cmp dec fcoms pop (bad) movsb mov and gs fstps pop negb mov pop roll mov jno add xor repnz or sbb push xlat xor lds sub mov fsubrl adc imul insb nop jl xchg in fidivl ret (bad) cli xor mov scas ja (bad) je loopne or iret mov jl,pn jo jg mov das push xorl fldt dec insl lcall test mov sbb cmp add xchg sbb ficoml je repz inc or pop out add pop adc and fnstsw add ss dec sbbb loope dec fsubl pop lock mov cld dec js push lods or dec out incl mov push cmc test adc (bad) into dec addr16 inc incb test xchg cmp pop jp loope or call cmpsb lock adc adc push pushf imulb xor pop cmp dec outsb shrb mov orl dec fstpt adc push pusha mov or xor push fisttpll push movsb popa icebp mov es popa (bad) inc outsb loope inc inc add push xchg (bad) fnstenv lret xorl or mov xchg or sahf mov pop pop or and popa sbb stos fwait test jnp mov leave xor sub je out std dec mov xor shl sbb mov push cmc push rcll cmpsl bound jl gs rcll and repz or sub icebp cld push cltd or fstps cltd js mov cmp lcall inc sbb scas ss sbb or (bad) sbb in int3 cmc and ja sbb aas and pop pop lret and ret in fildll ficompl pop (bad) bound mov in mov push push fwait adc out stos or arpl adc xchg (bad) and cs pop xchg jp sub pop mov les rol rolb cmp rolb mov cwtl sbb mov xor cs pop out ljmp adc enter sub popf lcall add scas int3 pushl add in push jge mov repz push sahf inc andb sub xor bound jecxz test mulb (bad) stos outsl sbb jns stc lcall pop test clc (bad) rcll pop lcall inc push push (bad) call imulb mov mov inc add push js scas add push xlat jns cmp add aam jno das out push rcrb sub xor fstl in mov adc sub add mov out add dec int lcall dec test (bad) cli sub mov rolb cmc (bad) dec cmp or sahf std mov push lods jbe lahf ficoml cmp aam repz push pop mov jo das fcoms es stos lock cmp ss rcrb rcrl sahf jmp add movsb and inc inc test daa negb (bad) jno xor je dec cs inc push add adc pop sub xchg test fwait out clc icebp shll rcrl mov jp and sbb stos inc sarb lcall fidivr xor fucomp sbb mov popa leave mov dec incb jnp sub imul repz pop mov xchg mov lahf (bad) out jb lea (bad) lods push stos call out pushf sub jnp mov (bad) pop mov xor xchg (bad) jne mov out sub push outsb cli dec leave mov (bad) loopne ret aas adc loope lcall mov (bad) xor gs insb in xor insb mov fistp nop mov lods and sub pusha add bsr (bad) leave ss leave ljmp push sbb or daa and in outsl lcall xor mov jl scas fs jp fwait lods aam stos jbe in mulb daa add cmpsl sub mov out lcall lock xor fcompl (bad) fwait cli cmp insb ret mov adc xor cld movsl cmp and aaa hlt mov aaa and repz sbb push (bad) jp stos inc xchg xor sub push jae ret sub lahf or inc inc neg stos jmp fcompl imul push mov shll mov jp jecxz xor sarl mov mov cmc mov hlt fmuls dec leave imul hlt movsl adc loop dec jge inc jle lret inc or pop mov aad cmp loopne cmp mov dec popa dec jb sub fstpl imul mov hlt jnp daa (bad) push inc mov sub arpl cs fldt out (bad) lock loopne xor enter sahf inc cmp test repz fcoms mov xchg stc (bad) ret cmp xor (bad) nop cmp jns jae inc or sbb xchg add cwtl sub lret pop mov xor fstl xor pop insl mov push loope fs stos ret xchg repz xor lea fsts (bad) cld mov xchg mov xlat test ja stos and iret mov or sub lds gs lock outsb rorl sbb es jb sti aad cmpl je pop dec inc hlt push adc mov sub pop mov pop es mov aaa mov adc jbe cltd mov sti in fcomi xchg idiv lret cmp xlat inc fistpl mov (bad) and push jle mov popf loop roll scas movsb out dec sahf sarl imul sbb and ja jecxz mov daa add mov daa sbb xor push push mov mov stos pop pop int cmpsl shll adc mov repnz in adc cmp mov or repnz and (bad) repnz mul or push cmp in nop imul punpckldq cmp rorl dec ja dec cmp data16 dec subb jp cmpsb lret cwtl (bad) aad ss mov in sub add andl jae test mov dec (bad) jno mov push loope jle les (bad) mov mov dec int mov xor xchg (bad) aas roll sarl cmp cmpl jecxz adc jge insl mov lea or iret fdivl push xchg mov gs cli cmpsl les sub pop insl fstpl jae aaa in sub cmp enter pushf aad xor add push ret push stos inc faddl (bad) pop jae inc cmp push (bad) xlat cmp iret mov sti add pop jp (bad) adc jle cmp les add (bad) cmp sbb ss in push sub and dec fwait lods mov xor mov xor or xchg addr16 into leave sub mov jg cmpsl stos and jo out lods lds outsb mov mov push jno repz in leave ds jg popf jp notb fild dec sbb aaa mov inc jp dec fmul loop jne call cmp roll mov icebp or hlt sbb or outsl xorb adc mov sub lods inc jecxz cmpsl call lret jne pusha aas clc lock out pop icebp mull and (bad) pusha fcompl rcll jne jno or jbe add mov (bad) jmp ljmp fidivl and push jno (bad) lods jne rcll test inc mov ja pop movsb orb sbb jns into subb test pop push push ss pushf clc xchg out add jg ds (bad) (bad) cli loopne dec xchg pop mov out cmp andl movsb lods insb lret mov add lahf mov out and inc shll push testb movl lds (bad) dec mov das jg popa or cmpsl insb mov cmp sbb jnp sub jo sub mov int das sbb push clc adc enter mov es fsubs pop inc in pop cmc testb das cltd daa mov pop push mov push test leave scas mov idiv orl gs mov ficompl inc lock inc sbb test dec cmc pusha rsqrtps mov subl adc jg outsl sbb mov lahf inc leave stos lds jmp jo xchg lods cwtl xor add pop and fcomps repz xchg xchg add arpl aad push orl ret (bad) add add xchg inc push push jp aas and stos daa fsubrs mov (bad) mov jno and (bad) enter xchg xor (bad) add gs pop popa add xor xchg aam mov cmpsb pop stos mov jo lahf pop and (bad) test dec popa mov mov mov cli mov rclb mov adc (bad) cmp in fxtract inc std jo ljmp cltd out in fiaddl lods arpl add jmp dec out (bad) std jp mov push stc push xchg cmp repz xlat adc pop mov test aam mov jne outsl mov pop loope xchg jmp push mov lods jmp xchg lret lea jbe or test xchg int3 mov aaa or push xchg and int3 pushf rcll mov mov pop dec in dec inc test mov fs scas ja pop lods ret scas outsb bound dec sub lret fstp mov test into jle test adc jge test xor mov ja scas movl fdivr push je add dec inc sub leave cmp aad jbe and jb pop daa les cmpsb insl mov imul and jnp hlt push cli ficomp (bad) mov sub pop insb cmpsb push int3 and cmpsb cmp xor call das sbb fucomip sub sub mov fnsave (bad) mov xchg sub stos pop mov jl clc xchg xor rcrb stos xchg stos xchg xchg loope cmpsl and push mov and cmpsl call add mov sub sbb test jno rcll cmp inc inc js rcr mov bound mov ss mov sbb imul ss rcrl and xchg xchg in scas mov mov sti push add mov (bad) sub pop jg fistpll xchg (bad) and jno xchg (bad) xchg movsl pop bnd shl pop jle cli jnp repnz jns aas xlat pop mov aas (bad) xchg out gs ret lahf hlt xchg stc test adc jle ret mov nop data16 cmp stc mov cmp pop loopne lods sbb mov dec popw fdivrl add jno adc and xchg lret inc and fs mov lods mov ds inc test jle mov arpl xchg add cmpsb mov push pushf mov xchg fs lcall fimul ja test push jle adc mov xor (bad) stos jnp mov lods dec loopne fisubl mov and mov xchg js dec or add lods jmp jnp int imul (bad) dec xchg test dec (bad) repnz cs xchg test dec inc pop and aam or jmp icebp xlat pop xchg jecxz mov adc xchg das pop aad inc inc jnp pop pop push dec or rcl cmp jp lret push xchg push addl sbb call dec jo inc add sub or int cmpsl adc jge mov sub mov xlat and dec adc (bad) imul push sub xor mov mov inc push aam hlt mov mov loope cmp mov mov xchg subl arpl repnz icebp aam les popf adc xchg (bad) xchg ret or mov adc gs xchg cmpl fistpll in or aas or mov push fstps jg mov rclb sbb je movsb nop (bad) aam insl fisubr std inc mov pop icebp popa pop (bad) sub bound adc lcall pop ret (bad) push inc movsl push lods out out outsl push sbb rcl mov (bad) scas xlat stos int mov ljmp mov push das dec jp loop jns ss jp add sub pop pop push mov and xor outsl mov ret int3 inc imul dec pop mov (bad) int out jp cmc loop lret sub cmp pop push pop xchg (bad) nop pop std out jecxz mov xor pop int3 xor (bad) aam rolb add movsl es sub pop stos add movsl ss loope sbb in sbb push imul lea cs out xchg adc sub or paddw (bad) pop repnz fidivr movsb inc mov in push imul mov xor out inc (bad) stc add movsb dec sbb fcoms test sar add mov mov shl (bad) lcall mov in out icebp push inc jns cmp std andl fistpll push and in daa dec int aam mov mov jne jp das cli loope out cmc mov push icebp cmc or add xchg dec sbb jnp sbb push ss add inc mov inc (bad) repz push push dec lods mov (bad) test pop aam clc rcrl shll ljmp cli pop xchg adc cmc das mov outsb ja int3 or notb push or clc bound mov sbb cld add in xor jns ja jmp repz shr lods enter hlt mov iret mov jbe push call pop imul push and stos sub adc sub test xchg pop push jmp fbstp fbstp dec adc mov in repnz lock add arpl loopne cmp mov call mov (bad) daa out adc xchg test (bad) mov (bad) jle cld inc and das adc jo clc xchg jnp insl out inc add sub stc xor negb cmp mov cs or scas dec gs mov ret xor icebp cmp sbbb cmp cmpl push inc leave adc or imul dec leave (bad) jno mov xchg add pop inc js neg add xor loope xor add lret adc lea divl mov and lds and out pusha (bad) arpl jle cmp (bad) or pop jle rorb enter xchg sub lahf cs lret pop leave (bad) mov dec xor nop rcr arpl les in js adc sub dec scas popa test adc cld or icebp cmp mov mov punpcklwd es ljmp sub xchg push dec rcrl xchg push xchg add dec sahf popa (bad) jge mov add jg cltd jle lea movsb ret test lcall jae xchg loope lret jmp or mov adc movsb mov adc mov mov pop jl out arpl leave xchg xor outsl repnz dec add sbb pop out cli jge les sbb mov jne adc jno out dec or pop out (bad) out xchg mov (bad) fisubr jge lcall xchg push js int dec inc cs xchg pop push adc mov dec sub cmpsb inc add sub or jmp std loope sbb sub sbb scas jo sar push push dec bound cmpsb and inc dec jb xlat addl loop push fisubl and mov repz dec fdivr stos int pop mov mov loop pop bnd inc loop mov mov inc or daa fist jbe adc cmp push js dec (bad) pop aas mov adc add add or mov cli xor dec stc xchg pop out push loopne jnp pop ffree xchg test add test test inc pushf test mov fwait outsl and add out repz lods fild lret jmp or adc inc cld ja lds jne xor or inc pop xchg iret or push addr16 or xchg imull cs inc xchg popa je or push shl addr16 xchg pop ljmp inc shl pop sub jp inc loope cmp loopne mov pop jl xor in push and jbe jle and mov sahf push cmp mov popf repnz (bad) mov test or ljmp mov xchg fdivr arpl outsb adc lds arpl sarb inc jnp pop add (bad) insl xchg lret mov jo inc cld rdmsr add pop (bad) pusha ret dec mov repz pop arpl aas jecxz add sbb cmpsb cmp (bad) ljmp es dec push and jno sarb cmp (bad) call cmpsb pop (bad) dec dec xchg xchg sub mov jg xchg imul rorb pop rcl push push sub push sub lods mov xchg outsl rcr cltd pop mov enter sar mov mulps mov aaa pop sbb jp sbb aas xchg dec and and sub push cmpsl js inc (bad) repz lcall clc sub (bad) push test mov push adc push jmp and push inc push sahf arpl in enter sbb jne mov and inc cmp outsb clc (bad) jb cmp mov fsts push popa fs xchg mov loope cs roll pop or xchg ret dec popf in out push ret stos rcll in fcoml (bad) dec (bad) int xor cmpsl test incl xchg push dec sbb xor dec lahf fucompp adc adc and test adc jae inc and push cli imull stos mov and ret sub push fbstp loop nop fs es movsl inc pop test loop xchg mov mov sbb cmp repz xchg and pusha xlat inc adc add scas mov adc stc cmp cli cmp or cwtl sbb xlat cmp (bad) sbb add clc popf enter inc mov mov addr16 repnz mov cmp lea xor or mov adc pushf cwtl imul mov lret fild mov mov hlt mov push xor xchg popf dec aam fildl cmp out mul mov inc outsb jg test sti sti int3 pop jno adc xor imul sbb imul add inc mov sbb sub xor dec imull push add add sbb out sbb xor int or xchg out add push jbe add bound dec jnp cmp rcrl testl fwait add fstp push sub adc jmp xor cs pop sbb out orl xchg and or in gs aad mov test enter jb xor jge push xlat pop adc loop fcompl push mov add push lods pop loope popf lea mov mov loope das movsl push xor enter fnstsw mov je dec lahf xchg fisttpll dec arpl sbb daa rcr scas xor arpl (bad) xchg push mov lahf xlat lods lret pop or push push in (bad) xor pushf xchg data16 (bad) icebp shrl add or cmp pop adc sbb out (bad) fsubl pusha jno xor fdivs mov mov add adc stos xor movb cmpsl pop pop pop into insb repnz cmc (bad) and lret movsl dec seta es cli mov inc sbb add or pop jbe xchg mov in xchg sbb pop jae (bad) movsl mov mov cwtl mov mov rolb mov out es or call xor push inc xor shll inc mov fsubr insb jecxz ret stc mov fsubs das js or mov fisubr nop data16 sti jnp pop or xchg pop sbb jecxz clc in mov mov popf popf inc cmp mov mov cmc jbe sub popa repnz adc stos sub add mov jae int in jecxz push xor inc inc sub insl movsb mov repnz cmp inc hlt arpl jle insl aam cld jl push andl scas mov outsb in cli mov push inc pop inc or shrl fwait sbbb cmp adc lods lock cwtl add add jae fdivp jno cmp inc inc dec jno cmp mov imul call loope ljmp inc in loop jnp repz adc xor ljmp (bad) pop dec jle mov sti fstp sbb imul enter (bad) lcall dec fidivl neg dec xchg xor (bad) (bad) and dec add inc loopne xor mov std dec dec add call inc stos fdivs jae out xor imul push cwtl outsl rcrb mov icebp bound add mov pop movb aam pop fsts jle pusha cmp aad and out hlt mov add (bad) fmuls adc loopne pop jmp test int repnz push divl insl adc dec mov into xchg and push repnz inc or mov xchg add mov ss ja push dec icebp jl push out dec scas test xchg std mov ret repnz jle jnp push repnz out lcall mov bnd xlat cmpsl (bad) loope leave es mov or xor dec nopl mov mov jne jnp sub dec or call lahf scas std pop or or xor dec testb ret outsb lods jmp ljmp stos mov lods cmp inc push pop mov sub push pop (bad) scas mov bound outsl sahf cmpsl mov adc push lds imul sub scas gs fldenv rcll inc adc jl jne add pusha insb ja stos aam (bad) decb push popa (bad) rcrl push mov mov orl jb mov jmp push adc inc push cmpsl loope lahf jbe sbb std in push push pop fisubl xchg push ret and mov mov jl fsubs jp adc fcmovnb dec leave clc mov aad fistp mov out pop rcll or sbb cmpsb jnp addl cli mul into cmp lret add cmp lea ret pop ljmp inc xlat addb jmp dec xchg aas push lock xchg (bad) test and or mov dec fnstsw les shrl push pop and (bad) sbb xchg push pop inc and lret fwait pop dec movb push xchg push in into xchg push lods or push push adc lahf xchg jno pop push (bad) jno fdivrp stos jne inc in (bad) (bad) loopne icebp jno push ret pop or jns adc negb fidiv aad push enter mov push mov adc rclb sbb add addb notl repz jg out cs sub push xchg cmp in ficompl arpl cli xchg shrb mov fidivl bound lock repz xchg pushf cltd stc rorl lods clc das mov xchg xor test shrl mov ret aas call mov sahf dec js cmp ds (bad) or fld insb add xor aas rcrb xchg fcoms imul in inc stc xchg sub scas mov (bad) rclb lret cmp loope mov scas (bad) stc dec adc dec in cld adc mov in testl lods sbb xchg fistl fnsave into rorl lcall addb lock push imulb and xchg cs sti shrb shlb adc dec lcall lods std test insb xlat sbb (bad) hlt dec repz xchg stos std lret push xor idivb sbb vunpckhps jb cltd mov and (bad) xor fnstcw addr16 fwait sub pop jo sbb sbb or xor cmp dec mov clc aas (bad) jb (bad) mov bound pop arpl mov loopne int mov pop mov sbb sub inc loopne popf push jo shl enter cltd xchg out les push aaa addr16 sbb sub and repz insl mov jl jmp cmp sbb lods jmp cmpsl pusha and imul push lods test bound (bad) mov dec ds push pushf dec jg je mov push cltd sbb xchg inc loopne adc fisubrl push mov sti in adc pushf push mov lcall cmp fild sub jne int mov add shrl cmp insl in cmp enter outsl pop repz (bad) push jbe inc ljmp push sbb leave push test push popa push clc outsl jge xchg and and mov imul gs (bad) negb mov sbb ds xor pop cmp mov mov xor mov stos sub inc test repnz sub ret lds pop push (bad) data16 mov and lahf adc xchg cmovl and push mov or pop std stos (bad) push jb mov jecxz xor mov mov in test sub stos std daa push pop xchg adc jns mov out add pusha add mov (bad) repnz (bad) (bad) cli stc shrb stos xchg push sbb mov mov loop jb add aad mov jecxz xchg loope xor add movsl popa mov loope sub inc mov xlat (bad) mov mov jge jmp stos cmp rcll mov jle (bad) out pop fucomi ds and cs pop mov add or enter fcomip nop loope add stos mov mov mov out fwait mov mov orb lods lret cmp (bad) bound movsb bound cmc scas and ljmp pushf int xchg fisttpll mov movsl shlb (bad) lock lock (bad) ja out (bad) mov mov (bad) cmpsb pop dec sub shl out iret adc jns dec loope cli ja lock leave (bad) pop cmpsb lea mov cmp addr16 repz sub test cmp dec negl push scas imul cmp popf inc out sub dec arpl daa aam xchg jl adc scas mov jmp out jno push push sub push jp lds jl jl dec sbb lret mov mov mov pop jnp pushf lods lcall xchg mov (bad) mov push jg insl and and xchg leave rolb in rorl (bad) in lods stos inc inc xchg aad pushf pusha inc pop inc cmp pop or int push xor popa or sub fs lock loope mov mov dec jecxz (bad) cmp mov inc es mov jge imul cmp ficomp push fcmovu jle mov (bad) sub test or dec xchg push hlt out lahf outsb mov cmc cs mov test xchg rcrb mov in jge dec in test fidivl jle mov xchg jecxz lahf adc pop cvtpi2ps pop aas adc mov push mov inc ficoml repz push sub lret loope popf scas sarl dec jo movsl adc lods imul push lret push negb push loopne imul scas or jmp addr16 rorb stos mov f2xm1 cmp sti mov int int3 mov pop dec (bad) push lcall or jb incb lcall pop jne aad add jmp insl push adc xchg daa scas in push jo or push sti jnp pop xor xchg pop push mov movl lcall jo xchg into push iret or shr ds jmp mov xchg insl sti lods inc push add ja add arpl push and leave (bad) gs adc arpl mov out xor loopne sbb out cmp adc mov push (bad) push stos mov sub sub push in pop (bad) xchg xlat (bad) scas jmp xchg std bound out aam push orb ds pop insl (bad) mov popf sarl gs (bad) sahf in and (bad) xchg cmc rolb push lcall in push daa out cltd sbb fisub mov mov push xchg imul dec pusha and inc inc pop inc dec xor popa lret mov cmp cld xlat push xchg out inc adc aaa js mov inc sub adc or test jle sbb xchg ja into test sbb mov adc dec ljmp or aas pop das push mov jnp gs xchg lods push andl xor sbb xlat out ret lods jne mov sub fcomps cmp fistpl (bad) mov jge insb out shrb mov xor sub cmp lea aad shll inc inc xchg cmp push daa push sub imul add fcomp lock xchg xor mov fistpl adc inc jecxz cmpsl cwtl fisttpll popf jp psubd mov sti scas mov test cltd es mov pop xchg mov fwait lea popf ret jge (bad) mov dec adc or inc or jbe add fsubrl mov dec cmc cltd mov aam scas fnstcw out aas shr movsl jae dec popf out (bad) movsb jae mov js lret je sti jb and mov and pop xchg push pusha jle adc adc dec pushf pop or inc in into mov test dec push das xor jecxz popf lcall aaa aad mov adc adc jo mov jb out fwait push push fwait ss aam sbbb xor sbb mov (bad) sbb add int rcrb fdivrl data16 pusha and mov push cmpsb xchg nop pop dec or mov push mov iret aam pop jl daa lahf icebp hlt scas out xor outsb jo lods test sahf mov sub mov into fisttpll rcr xor jno push movsb cmc cmp lret inc aas inc insb in pop pop iret jmp inc cmpsl mov hlt sbb movsl in add popf cmp push int3 fs dec inc lods sub movl dec cmc xor fs insl arpl ss add dec and dec in mov (bad) lret call pop lods sub rol inc insl push push loop nop mov lock push hlt inc jmp popf cmp push mov xchg and je push test sub (bad) push cmp push outsb bound out rcll (bad) icebp jmp inc sub sbb and mov aaa cmp jb xchg (bad) ja out jle dec mov add (bad) push add push push call in div (bad) xor in push aas fs mov loop and clc stos mov jmp adc and mov xchg xchg out jnp std jbe mov loope add scas daa mov and push push sarb and jno inc fs aas ret pop sub and pop iret sub sahf jno movsb push scas in jl push ja ljmp jmp or dec mov imul leave cltd and repz in and xchg (bad) mov out and push jno out cld xor cmc scas lds mov cld adc sub aaa adc popa repz push es mov sbb ja xchg das mov sub pop or ds xor mov mov and push add rorb push mov mov push mov sbb or xor (bad) sub test int3 sub inc aam gs sbb adc js inc out cmp or jge push mov ja pop lcall pop ss and dec sbb (bad) scas adc repz js cld jge push jl push leave jo bound dec push lock jmp vpmaxuw xchg pop lock or mov aaa pushf mov cmp cmp js xchg mov inc jp adc cmp or push xor mov lds leave pop push test add cmc inc (bad) lahf pop lods outsb pusha sbb xor ja and pusha cltd pop imul addr16 xchg std in fdivrl lret xchg mov inc unpckhps add sbb ss and or push jne loopne movsb sub jle shl sbb popa stos ss rcrl xor and jge stos jp cmp iret shr lret ficom sbb pop jb stc sub ss rcl xchg (bad) mov sbb jmp out fs mov cmp (bad) incl push in cmp (bad) stos push mov xlat dec mov ja push push mov test sbb aad xor inc fmul mov stos adc jmp push fwait pop push inc adc sub add cmc push dec rcr xor (bad) mov adc inc sbb jle cmp mov pop in stos pusha push sbb pop mov add pop (bad) (bad) movsb xchg mov cmp mov test aad push es nop jl push pop movsl jp into jl movsb pop js sahf pop mov into outsb adc rep aas in mov and push mov mov pop mov cmp xchg ds inc xor pop in jp int add push sub lods push push fisubr mov sub shr in jbe pop (bad) or adc pop enter sti mov aas push out dec mov push cmc inc pusha jae or mov sub je lret xchg dec lcall stc cwtl popa fwait xor dec push mov add fbstp clc jle xor inc ljmp test push push jne test add ds repnz ret leave mov xchg fbstp (bad) repnz xor in enter cmp call in daa pop ljmp mov cwtl jge out jge (bad) addr16 dec out nop sub cltd daa roll lea sbb sub push pop sbb ffreep cmpsb pop adc pop adc lock cmp sbb jge mov test aaa mov inc jg add xchg rcll roll hlt and and aas push cmp xor xchg mov jno rcrl notb test pusha lock dec lcall das mov sbb mov (bad) jne and pop sar dec xchg jecxz mov loop in jnp lret cmp stos std jmp int3 addr16 sub sbb xor outsb mov cld mov bound jle out fsts cmp int3 mov lds push test bound cmp sbb xor movsl loop dec mov rcll lahf push sub mov jmp pop sahf bound mov xchg xchg leave ss and jp movsl outsl push cwtl push outsb outsb popf sbb pop push daa push mov cmp fiaddl sub cmpsb and push je loope (bad) push push mov sar in mov mov std idivb push rclb orl push jbe xchg push or mull jb inc hlt xchg sti daa inc jmp imul pop pop push push sbb pushf test int add mov test ljmp into (bad) xor cwtl ds xor scas insl mov lret mov es imulb pop or mov jbe cs hlt out mov lcall mov xchg sbb adc cmp ss or aad jg push sbb mov push xchg in outsl les in fistp and mov push mov insb loopne repnz in sbb cltd stos loop shlb icebp (bad) jl in stos jae sub mov dec mov lret pop dec inc addl in sti sahf jne,pt jbe mov lods or add stc rol sbb mov daa je or outsl mov rorl not adc and loopne iret andl (bad) mov push mov in mov xor sbb test in and adc dec xor cmp lods mov fcmovbe (bad) call push arpl sub jns loopne sti xor lds es ret add js cli das pop ljmp loop es fnsave mov sub clc xor xor pop loop jecxz (bad) jle ss inc std in mov (bad) xor ret lret push fild movsb mov (bad) sbb or jnp arpl jmp das fdivl loop test repz xor push jno divb add aam inc mov fdivrs jnp imul je inc shll push and xchg dec jno lods pop adc mov mov jmp popa jns test and lahf stos xor adc (bad) mov jno test stos orb lcall mov rorl (bad) jae lds mov je mov and lds mov push lret dec mov inc sbb sbb inc add push imul inc xchg or stos fistpll xor and dec fsubl adc mov iret dec mov imul daa adc mov cmpsb pushl cmc dec pushf aaa outsb xor and jo popf jne mov sbb addr16 dec gs dec insl scas out mov inc xor xchg (bad) xor mov imul repnz popa xor or and pop sbb jle mov iret xor into and xchg sbb pop lahf xor mov mov pop push lods lock int3 and add adc fadds mov int3 cmp (bad) punpckhwd ss call call stc mov insl rcrl popa push inc xchg xchg (bad) mov imul jns sub fsubrl jns stos dec or inc ret dec mov mov xchg shr jb cwtl xchg mov ds jg ljmp in mov shrb outsl fidivl mov fldl push fdivl mov xchg jno lods lods and sbb jge dec lods mov mul int3 inc jp dec fadds fbstp mov jns mov jae loopne push pushl insl xchg jns das roll or dec icebp movsl push pop (bad) test mov ljmp dec sub adc jbe mov dec mov or adc pop leave imul js aad jne dec mov xchg adc sahf add out cmp or xchg nop arpl jecxz sbb adc pop mov outsb push enter loope cmp int3 xchg mov rcll lahf in mov cltd jae fcom aas loop sub xor xchg sbb int fiaddl mov mov lcall jge inc inc int3 (bad) cmp push (bad) std dec movsl scas lods call lahf dec ljmp pop (bad) pop jle dec sbb loop or int cwtl fs mov lds mov pusha mov inc je jbe push notl dec lret fistpll cli add je popf out dec inc lea xchg inc arpl mov subl push fwait inc or mov inc dec mov mov fdivs and mov xchg push lahf sub clc push or push xor pop cwtl push mov inc scas je jmp mov cmp xor int3 (bad) rcr icebp mov lret mov cmc mov add rol inc xchg out orl xchg and mov sbb sbb sbb jne xor movsb lods pop and lods ljmp xor sbb inc aaa (bad) loopne out xchg push (bad) repnz adc aad push mov and (bad) lret pop mov lods jbe int lahf mov (bad) movsb sbb loope cmpsl fisttpl push push dec ljmp je jge sbb mov fldt in dec (bad) mov das mulb (bad) popf jg jmp xlat pushf das mov cmp xchg jmp mov pop (bad) mov inc pop dec add fisub stos or cmp lods pop out pop pop mov ss pop inc push or push mov mov aas lds pop and hlt lret repnz inc stos xchg imul mov and jmp mov std adc mov mov lret orb and lret decb mov jnp or test and sub push push mov mov f2xm1 stos into sarb sub sar xorl fs push jl and js push pop mov lahf cli stos std push (bad) sahf mov test cmpsb xor adc fisttpll scas mov xor dec push ror mov enter (bad) imul or sbb mov repz pusha stc jae lock dec pop out and dec pop push lods test fildll div insb arpl int3 nop in sbb lock adc add pop dec or adc movsl and popa insb cmc repz pop inc popa adc push push xor fwait mov es jo mov jmp mov add leave mov xchg cmp fstp xlat push cmp mov ret mov and fdivp stc icebp scas xor push sbb mov push sarl cmp pushf inc push rclb cld sub xor and inc xor push or or jge inc bound test sahf xor jp add or mov jns std xchg xor aam mov loopne,pt pop and (bad) xchg (bad) push test movsb movsl loopne xchg mov loopne test xor xchg fstpt lock std daa xor pop daa push dec dec stc iret movsl sbb stos mov xlat in push jle test bound sbb fldt (bad) adc xlat nop jae gs repnz mov cmp sahf pop push fnsave repnz sbb fisttp ret cld ret jb ja cmp add sbb in pop xlat mov or mov leave push xchg push adc iret ficoml mov les sub mov inc mov mov int add int3 in xlat xchg mov lret in xor (bad) sahf lods js sbb es xor mov ss pop mov pop pop fsts ret sub cmp cs aad rclb cmp testl bound fldcw in xchg outsb mov arpl outsl xchg cmp (bad) adc das test push test fucompp inc (bad) jnp jge jno lods nop ds sbb inc pop or xor leave push mov sbb in repz incb daa jl fmul mov xor push fwait add pop or cmp in push std dec adc incl and cmc test xchg out icebp ds std sahf add inc and stos push es out enter ljmp jo int cltd push pop scas int3 rolb out ja mov mov and int ss loop,pt cmp push loopne lcall inc sub fcmove adc or out push sub push mov and pusha fbld mov jle pusha add lret mov pop mov fbstp push cli cs cmp (bad) scas jns loope adc rolb dec inc jns,pn (bad) lock pop (bad) and in mov jge lret sbb cmp cmp sbb sub pop jg pop adc push popf xor mov push sbb push lret repz sbb sub sbb out lock push push lcall or ret cs mov mov daa fistpll stc cmp cmovns cltd call stc jl (bad) js push test and inc and pop mov addr16 xor in mov into mov (bad) cmp inc jns (bad) xor popa sar push mov jmp lret jmp sbb js mov aaa push daa push out mov mov (bad) adc test dec popf xor pop push xor cmpsl or sbb xor dec pop xorb add xchg notb popa outsb adc dec push or jb (bad) out jns dec adc mov adc (bad) or addl movl loope lahf adc loope cmpsl and mov dec cs roll sub xchg loope std dec pop cmp sub add outsl fistp pusha xor lcall push js movsl jle jbe enter cmc fwait cwtl inc ror in rcl mov mov mov cltd add fisttp lock (bad) shr xor les rclb adcb and mov cmpsb das push loope mov loope out and sbb (bad) jno xor jnp mov inc xchg push roll adc leave push push push mov pop int ret std pop cmpsb test inc push rcrl mov mov faddl repnz test adc cwtl adcl cmpsl bound push in imul idivb fs (bad) or mov mov test scas jns xor in std je inc mov les mov aaa loop xchg cmp push mov push test push pop bound (bad) mov dec xchg in (bad) cwtl pop aas dec add loopne popa dec pop ds data16 jae push mov movb dec push mov lret imul stc fs clc leave movsl xlat xchg scas mov js aas test sub inc mov ds outsl popa mov xchg stos mov loop fsubl xchg repnz cmc inc adc bnd hlt stc add rcll add imul fscale or les ret out fcoml lahf scas cltd cli lea clc pop andb sub jecxz jecxz sub push aad scas std daa fucomip leave mov xlat (bad) mov lock es lret pop inc adc inc mov sbb dec add mov or mov lret in xchg cmp (bad) cs xor jg adc and jg int sbbl push frstor dec into push icebp pop sbb (bad) xor pop sub add (bad) (bad) add mov fidivr xchg bound xchg mov mov cwtl pop pop mov sub in inc orl call hlt jge lea xchg popa xchg mov icebp xchg mov fs xlat pop in sahf jl push (bad) fimul add lahf cmc xor divl pop xchg rol sub mov out loopne pop jp aad imul mov or in mov insb xor insl cmp xor ds movsb jb adc pop and push in call inc or in repz push mov icebp or ss fsubrs movsb cmp xorl mov push loope xchg jmp aam or sbbl dec cld inc orl add bound push dec repnz sub jle (bad) ficoml cmp push enter push (bad) and shrl xchg and int3 and daa (bad) dec (bad) out insl enter pushf mov push mov inc fistpl sub mov scas scas adc fstpt jecxz jb cld aad pop inc jbe lea jnp cmp pop sbb data16 add jae sete les cs fnstsw sub or notb dec push sbb add (bad) cmc (bad) xlat sbb adc fisttp dec cmp repz addr16 fisubrl inc lea xor (bad) repz pop stc add test jp icebp pop fsubs mov dec add or xchg and rorl cltd mov and ljmp xor xor rclb aam imul dec rcll xchg pusha mov clc and sbb jo roll pop test lds cli or push add pop push push lret movsl jnp loopne jbe xchg rorb aas xor inc mov outsl sub (bad) mov enter jb jmp jne jl fnstenv std clc adc push negb cmp in rol adc mov push jl cli xchg sar (bad) push or xchg jbe (bad) popf in pop (bad) ja jecxz push push xchg scas mov stc push lret jl push mov xlat cld mov mov mov clc pop (bad) (bad) push in fs out pop imul sbb sbb mov mov lea je scas and pcmpeqb sti in (bad) push out lds test stos (bad) add divb sti daa push jg add adc fcomps pop mov sahf cmp lahf lret add pop pop mov iret idiv xchg and jne or xchg pop movsb ds repnz js je in mov push dec sub jmpw xlat aaa and mov insl mov add cs push fimul push sahf push test (bad) (bad) loope notb scas mov flds jno mov and or test pop xor cmp or inc (bad) std flds xlat inc lods mov gs inc stos in stos mov not and sub ja push mov pop and sbb dec add cmp das fisubl and jae jmp xchg iret and jg inc int3 ljmp data16 xor fidivr push adc test or into test push sbb push lret ss loop pop bound adc adc mov or imul adc in dec idiv adc gs sub ret lret jecxz mov jge sbb and daa sbb jle dec pop adc jno sub push mov xchg mov je xchg push inc xchg pop mov pushf out jbe aam addr16 adc into ror xchg ja pop mov mov sub (bad) repnz sub or movsb dec clc cmpb test inc xor add outsl ljmp mov fs ret call lret xchg insb inc pop je jb stos movsb jg mov sub and push xor push sub ret sub lea js mov sahf mov xor cmp push bound (bad) xchg mov jecxz cmp sub adc (bad) mov jae out dec scas jmpw or loopne (bad) fisubr (bad) mov inc inc push fldt out das mulb ja pop mov jno imull add lods xchg mov daa lods pop or xchg dec addr16 and (bad) pop fwait mov mov cmp jmp fcomps push test iret ror test push aad xchg jle or ja jecxz mov pushf sahf les fild sub add out jo xor add mov mov aad lock call or out xchg or cld movsl scas mov sub push into jae movsb cmpb add cltd mov popf jecxz int3 or bound sbb or sahf and adc lcall loop outsl aad int3 push out inc js rorl xchg stos cmc dec push push movsb and xorl add push xor mov ljmp das xchg xchg cld movsb int and cmp cld ja adc sub inc adc add aaa cld xchg loope aas mov icebp addr16 popl movsl outsl insb inc daa fsincos and push adc add in fisubr loop loope jle mov jle scas test inc sarl mov lcall daa and mov sub movb cmp sbb cmp xchg clc pop insl dec push test mov cmp xor sub xlat sbb (bad) jmp fimul xchg jmp adc mov sbb sub or sub mov dec jmp push rcl out pusha test mov popf adc out aad mull je dec dec repz add pop dec pop cmpl in sbb dec ret test push push and mov stc add ret sub in xchg adc scas xchg test popf sbb mov (bad) test sub xchg push rcrl loopne mov cmp scas rclb dec ret lods push test pop lods dec movsb jg ljmp sti testl clc and dec push leave and loope push stc sub or es fstl cli cmp movsl les xchg sahf jl movsb cli fwait or or sub add dec sub xor cmp sti das je mov jae jle inc inc sbb sti jle mov clc sbb inc push out bound adc aad std dec mov jns rorb or mov aas mov movsb add scas xor xchg push or or jl dec and mov mov sti arpl ffreep dec cltd push xor in jae jb scas icebp rcll sbb mov dec inc mov and imul (bad) sti or dec push scas jb cmp pop push flds sti popl call fnstsw xchg cltd adc pop cmp ja (bad) push loop cld sti xor adc mulb es test pushf sub aad scas xor xchg das dec and movsb pushf xlat mov fsubrs aas mov mov sub pushf imul insb imulb push dec hlt (bad) or adc daa sbb push cmp sub add and push ljmp shl insl mov inc pop inc negl or and push mov fucomip pusha in into xchg ljmp pop pop fstl and cmp nop out cmpsb add jmp push sub jmp in mov das jno (bad) out pop repz xor test xchg hlt movsl jno hlt lret add gs push or decl adc and sub int mov orl and in mov xor mov cmc ror sbb bound cld push jo stos fprem orb push jle stc lret sbb roll mov test test ja lock call xor sarb xor pop enter ja enterw sub add hlt fwait xchg aaa scas jno repz (bad) dec adc adc aas es cwtl test stc scas push bswap push cld ss stc into xor sbb fisubl cmp (bad) xchg xchg mov xchg dec (bad) inc dec fucomp test pushf imul ds enter cs cmp sbb push xchg movlps das std sbb js jo or cmp cmp movsl cmpsl sbb or stos sahf je lds ss jmp stos mov rolb movsb inc fucomip mov fldenv lods daa fcom pop mov leave imul leave rorl nop scas into xchg out adc cmpsb pop inc (bad) sarl jns mov aaa xchg outsb push lock and mov dec mov add pop (bad) call pushf mov das leave movsb aad xor or popa xchg mov jns js mov pop outsb pop sub lea add inc or clc and addb and jb jno and (bad) jp ret xchg mov jo mov push aas push jns push rorb clc fldenv mov mov adc (bad) cmc mov cmpsb rolb fcoms idivb stc xchg and mov or test test or loopne jmp xchg xor stos xor sti cmpsb push mov xchg push xchg cmp mov dec dec mov fimul mov faddl jnp scas loope int3 icebp data16 pop nop insb shl (bad) and jnp mov negb push leave push xor loop sbb popf add (bad) jo sbb mov fwait adc bound add sahf popf insb scas fwait jns imul je aad xor loope xchg cmpsl push push loope xchg cld push popa js insb cmp insb addl mov test data16 mov scas push sbb cmpsl test scas mov adc inc adc out (bad) scas pop mov xchg mov aaa or repz repz pusha sbb repnz int3 icebp and cmp scas sahf movsb call jbe jae xlat nop stos xor push mov scas test adc mov es out or lret pop xchg xchg jne mov sbb sbb icebp mov gs imul sub pop inc fsubrp xor adc sbb mov dec popf sub (bad) xor arpl push lret ret inc jnp clc scas xchg xchg outsb into call xor loope jp repnz jecxz nop inc mov xchg mov and stos jnp cmpsb aas xchg sbb fcmovnb lret pop fucomip test sbb ljmp iret xchg push out aas sbb dec adc adc cli sub rcrl daa dec outsb inc cli std sbb in jb (bad) dec add int std inc dec adc (bad) std test fmuls lea push out and xchg in adc lahf push mov dec xlat add xchg xchg add lret (bad) stos call xchg cwtl nopl push push outsb xor jns adc push and push mov xor ja outsb xchg addl out push shl xchg push mov adc js cmpsb jge or pop stc xchg pop xor cmp or ljmp lds (bad) dec gs sbb mov jnp jbe ds push adc inc popf xchg mov arpl lret ss fcoml (bad) cmp add jge andl out fiadd imul mul or stos xchg or lock xchg sub dec repz insb (bad) or sbb (bad) daa fsubrl lods push insb and out pop (bad) jl mov inc fwait loop fstpl ds ucomiss lods (bad) mov pop add dec notb cs aas push cmpsb adc ret xor and add es xchg sbb mov pusha pop and test cmp int clc repnz cwtl cli and jb inc fcomps xchg pushf pop jmp and or jecxz in jnp xor push clc cmc jecxz inc mov sub out insb jmp ror xchg sbb shrl test and or add sub push (bad) mov mov mov gs sbbl in fwait ud1 (bad) insl xchg mov pop and js mov pushf adc into dec mov cld fiadd out add imul das push icebp sbb lret out das cwtl inc sarl ljmp cmpsb loopne imul ret mov movnti or dec popa jmp int3 cmp push jg jno lods fisubr mov ret repz jmp jb inc test adc (bad) call cmpsb fcoms (bad) clc scas outsb mov repz xor movsb repnz rcrl lock mov out mov mov scas fwait das out push fwait in fcompl lds push popf mov mov jne addl pusha gs fimull loop xchg jb dec lret (bad) push cmp jecxz es (bad) pop add lods addr16 xchg sub cmc es jmp stos outsb call push mov dec or pop dec jmp ja fstpt (bad) (bad) cmp or or fsts dec mov fwait test inc sub jae mov sar jl outsl mov test inc push loopne (bad) sbb (bad) ds mov orl cmp adc mov mov pop andb mov adc pop test add add scas hlt add in mov xchg cli ljmp out add sub cli lock dec mov jns sbb mov and cli mov sub adc mov push adc mov adc xor iret jecxz mov adc dec in popf pop inc fdivrs clc dec inc xchg dec popf or pop and sbb dec inc jns (bad) fadd sub xchg dec in scas mov mov sbb je int std es je shrb or mov scas ret call fdivrs pusha mov insb mov sti or xchg int cwtl dec arpl push dec jmp iret sub popa enter inc ret cmpsb pusha sbb cmp es ret inc jno mov into jne adc pop pop je scas sub jge xorb push or sbb and lods xor ds jno jmp pop xor push mov mov xor fist addr16 popa fs inc push pushf mov repnz push imul sub out cmp frstor inc cmp sub add xor lahf imulb call aaa mov jnp jl rcrb cmc xchg cmp outsl mov mov jg adc mov inc inc (bad) xchg push rcll fldz dec je sbb inc idivb pusha movsb (bad) xor mov les stc mov jg lods loop pop adc sbb push sbb outsb add jno jne mov dec or mov or and fcmove jge or xor fucomi xor add popa mov cmc das imul push (bad) cmc jbe mov test push lods jne lds xlat fnstcw xchg mov jmp jbe mov and stos add xchg dec and add inc lods push in in cld mov shl mov xor mov mov sub ja cmp sub xor pop and mov stos test dec mov into rep ret aam in xor (bad) push stos mov clc xchg int ja jo add push loopne cmpsb repnz addr16 stos pop inc adc mov fwait lods xor and es frstor leave mov dec mov push cmpsl daa into cmp cmp fsubrs jb push mov ljmp addr16 mov push adc sub adc imul adc fcompl xor mov mov pop (bad) sub cwtl out xchg mov and or adc lahf out cmp scas neg jbe adc sbb cmp cld rorb dec jbe roll test (bad) div int3 inc mov push or ljmp iret rcrb test (bad) mov ret in and add cld ret int std add push xor cmc rcrl sbb mov jg adc mov fwait js or or mov jae dec imulb jno and jle setns sbb dec call sub test or sbb sub insb push pushf jge push sbb test push xchg imulb lret cltd cmp jns loopne clc add idivb mov popa xor sub idiv pop adc fwait sahf sbb sub add xchg mov xchg xchg mov mov aas adc jge insb push mov mov std ljmp push stc test (bad) xor and loope mov add or pop sub ja fild (bad) sbb sbb pushf mov repnz lcall scas mov enter cld (bad) lock xor mov pop out adc pop aam clc shrl enter mov and dec lret (bad) repnz popa adc lcall add out loopne enter adc mov mov and cmp cmp cmp mov scas ror pop in sbb sub ds or fildll push in fs outsl cmp sbb scas pop jl cmp dec and jecxz repz aam stc dec loopne or stos cmp add mov popf pop into xchg xchg pop cmp sbb cmp (bad) xchg and aas out fcompl push sbb sahf imul sbb ss mov xchg int3 lret sub aad sub sub movsl xchg loope clc out mov jne cs adc push or lods lahf xchg mov sub xor pusha lods ds fimul jge sbb xchg mov in pop sbb ds les inc test aad inc cmp pop arpl ds in dec sub xchg rolb out sub xor lret inc ljmp push cmp sub or movb sub xlat fisubr mov imul aaa rolb test mov push pop pop mov cmpl jmp xor or inc bound scas or stc mov lret inc aaa popa out push loopne movsl jnp jnp sahf xor xchg in push in mov pusha cld jno pop xchg sub in mov in cwtl out loope (bad) mov in xor (bad) or mov sub jecxz xchg push lods rolb mov sbb (bad) inc imul jl das mov cmc cmp xchg popa inc sbb cmp sbb insb xchg xchg mov xchg imul (bad) mov frstpm(287 add cli sbb mov outsl lock fnsave das inc sbb sbb je adc xor mov mov adc mov in pop mov mov nop xchg arpl jmp lret std sahf hlt data16 mov aas add imul sbb je xor adc scas add ss cmpsl mov and and out sbb fist movsb fldt daa pop stos jmp es add jecxz mov jb xchg cmp icebp mov pop cmp imul mov pop int xor sahf and xor in data16 jg imul push je and xchg xor lods pushf cmp dec inc or icebp mov xchg les pop sub cmp jl ret lcall mov imul xor stos inc and mov and inc fadds gs sub fidivl daa nop in xchg sbb sahf mov push stos cmp test fcoml ljmp sbb sbb jp sbb jmp out repnz and sahf cli adc lret testb cmp add dec inc push push mov or pop adc push xor mov jmp mov loopne aaa fistl fsubs push jg sub dec pop imul and dec xor fucom push jge lret aad loop stos insb xor and sbb jmp dec js dec and cmp sub test (bad) data16 add dec mov fwait lds lods stc pop bound sbb dec or add outsl push roll push mov movsb or cld mov inc mov cli inc dec arpl jnp sub inc cmp pop xchg jae cmp sub cmc jb sub stos cmp mov int cmpb stos lds sbbl cmpsb cmc mov cld adc es inc and or testb pushf mov adcl mov arpl ret mov dec inc (bad) aas popa xchg sbb ret roll push in mov call popf pop fsts cmc fstl shlb jecxz mov sahf jnp push cmp gs icebp push hlt mov add dec scas je int3 jo push fisttpll mov cmpsb adc pop frstor pop xor xchg push ret in dec inc push movsb daa jg cmpsb xor inc int3 (bad) jo mov add xchg push adc out sbb pusha addr16 xchg cmp fdivrp mov repnz fidiv push leave aaa sbb fwait repz test adc xchg mov cmpsb popa iret mov push inc cld icebp pushf and fwait add mov sub fdivs sbb les in dec and sbb jp push cmp aad mov mov mov add data16 cmp push mov inc mov gs (bad) pop add nop and cmpsl cltd ljmp add (bad) nop add stos stos rolb insl sbb pushf int mov ljmp add pop imul push test push jbe jbe jb xchg mov dec xchg mov add dec jns xlat pop mov xchg into dec in dec push push in (bad) insb stc dec jecxz into push sbb mov xor movsl ret add notb xchg popf fcomip push cwtl out and push ret dec sub add dec jl dec and xor cld sti popf mov repz lea dec sarl sahf test ficoml fs xlat fldl2e js popf push mov xor into in movsb mov push push push (bad) cmpb xor mov pop mov jp scas push stos xchg shll ficom ja jbe push aam cmp notl sbb cmpsl push adc lret flds and arpl jmp xchg push add icebp dec pop inc rcll inc pop pusha rorl pop or sub loope ret rol inc push push aaa mov sarb aas rcrb jl fldcw and mov add push cmpsl mov jp pop je nop lcall xchg outsb lret cs jae sbb push xor ja jae aad pop shl lcall push dec (bad) dec jo ret repz int3 sbb insl push into ljmp cld out out jp cmovb movsb (bad) xor push test dec dec fldt movsb dec xlat mov sub adc dec sahf jl (bad) cmpsl out pushf adc enter (bad) mov mov out mov xchg lock and lea adc mov push pop dec test sbb int rorb dec imul je shl mov imulb addr16 xchg cmp pusha inc mov lods data16 sub push loop jle addr16 xorb movsl lods das mov pop testl outsb sub add sub lods and and mov ret stos in inc push and jbe cmp sbb (bad) sbb adc push bswap incl push lea aad and idivb scas adc jp das jno inc arpl insl xchg pop hlt add adc mov cwtl sub ret imull add inc inc mov mov bswap xchg hlt stc mov xchg add or xchg xor test adc lret mov sbb add bound lods popa out or (bad) fstl repz pop (bad) push adc ljmp mov cmpsl inc les cmpsl inc push and stos inc (bad) cmp imul call in jecxz jno cli flds std xchg dec adc test jle out popf pop push sub lock mov out pop stos mov outsl xchg lret addb mov xchg cmp push arpl shr mov aas sar push (bad) pushf or lds clc lret push in push xlat lcall bound dec lock mov push xchg test daa xor add mov (bad) jo add aaa in mov out pop sbb data16 scas cmc sbb addl push jne mov xlat or mov lock jne dec jno pusha (bad) dec add sub (bad) ljmp ljmp adc mov insb xchg pop mulb cmp sahf or xor cmpsb test in mov jecxz xchg aam lahf cld adc mov pop sbb cs add mov out xor jo,pn adc mov lea xor loopne mov adc sbb mov (bad) mov mov adc std and fdivl aas call repnz dec popf mov fistl push adc in scas jnp js inc dec mov jne and cltd and mov imul or ror and dec mov cs popf leave mov lock addr16 pusha mov scas andb outsl in push and test cs arpl (bad) mov lcall pop mov mov movl jge inc in cli dec jmp xor lcall je call fldl shrb lcall and cmp push and test rolb hlt jmp sbb lock and fcomps call mov inc lret std les stos pop aam jno stc cmp mov aad lods or sub stos ja and stc push insb (bad) iret stos xor scas in pop jl (bad) pop mov insb pop mov xor sub das pop or int3 jns pop daa adcl out sbb ljmp lahf out mov sub out pop (bad) enter ret mov sub mov stos cmp xor or add mov jnp in cwtl or push stc push pop movsb aam and shr adc jmp push sbb add cltd pop test dec ljmp sbb movsb (bad) rorb mov cmp jnp jb or test sbb mov inc (bad) mov fs mov divb sbb inc mov jbe shl mov mov add arpl neg (bad) fs ret add add int3 ficom and dec inc jge (bad) cli loope cmpsl or xor leave stc fsubl cmp pop adc adc mov mov fcomps das mov fs test fs in dec (bad) out pop sahf dec mov push sbb push inc adc lock xchg in sub test gs mov gs movsb jno push fimul pop fnstsw cmp xor out xchg add sbbl adc movsb sub leave pop inc js or pop jne movsl aad inc jmp adc inc or test jp xchg jo adc subb pop inc sbb lock fldl push xorb mov sti xorl pop cmp xchg aaa negl push mov or pop mov out and or jbe cmc adc push outsl cmpsb ret adc pop je sbb cmp dec lcall dec scas jb je jp mov (bad) int3 xor sub pop mov (bad) xor mov test cltd gs pop (bad) sbb je sbb xor (bad) icebp es imul cwtl les mov push (bad) mov cmp pop or or ret xor mov gs sbb push jecxz jge insl inc lods movsl dec adc adc jle pop dec mov lret and jg mov cmp pop insb and jnp aas bound adcb cmp inc dec mov bound add fist mov cmpsl sub fwait mov push sbb aaa pop mov bound sbb decl aaa clc jb lcall add cltd adc inc cli cmpsb mov sbb mov jp jl ljmp test or xchg mov push mov adc addr16 sub les rcrb ds inc leave push ljmp cmp lret call jnp addb adc mov cli aad add add call adc fidivrl cs pop mov dec mov (bad) mov js cmp or fidivr mov cmp (bad) std enter and test out mov xor mov jne imul ror stos or mov test les loopne add outsb dec bound mov cwtl xchg xchg jp inc fidivr cmp clc jmp sbb jmp (bad) lods jle call fs cmp mov jl je add inc int add adc mov cmpsb insb test jnp cli cmp adc clc or lods mov inc insl bound sub cmp nop pop rorl lret testl push and lcall and std inc mov mov ds pusha test ret sbb push sbb fisubrl rorl lock rcll subl pop dec aam aaa push mov out lods pushf (bad) clc and dec out or jb aas sub cs aas outsb rcrl sub mov setle mov cmp cmpsb pop je dec shlb pop pop repnz inc call adcl stos inc adc gs inc arpl aam cmp loopne xor insb out (bad) int3 pop iret xor mov movsl adc mov pop (bad) rorl push movsl ret dec dec mov pop xchg fimull pop mov (bad) not xchg loop das push insb rorb mov xor pop (bad) mov pop push jmp out or cmpsl inc xor cmp movl popa (bad) xor dec push jle cmp cmpsb cld sbb scas js (bad) fimull cltd inc and das push clc arpl pop push xor pop lcall and cltd out jb adc repnz sarl rcrl cmc mov sar jg xchg rolb in outsl and and ljmp and push jl leave xor pop cmp push (bad) xchg xchg sub jae xchg or nop xchg cmp dec stc pop push jmp mov pop jle inc jl cwtl xor jae mov pop xchg (bad) mov int mov int cli jb testl arpl add (bad) push dec xchg mov lea cmp hlt xchg stos adc out icebp movsl add xor cmp imul inc mov jo ss paddw imul and push in jge inc insl sarl cltd mov movsl (bad) cmc add pop iret and test jb lods cltd insl clc add stos dec aaa jge lea in repnz cmovb call sbb jle aas gs outsb or mov sub scas jae fstpt mov (bad) dec sbb adc sub or or scas cltd scas daa or (bad) fisubr inc clc daa mov mov xor aam stc notb jmp int fimul bound aam fldenv push je lods xchg test popf outsl jbe fisttpl jns dec xor pop xor cmp jp cmpsb out (bad) mov pop insb je mov outsl mov mov in or (bad) out fidivl jae stos sub sub adc dec sbb adc sbb rorl movb test inc sbb and mov xchg xchg shlb pushf inc push or pop addr16 push jp xchg dec and sahf movsb ja jno repz int lock pop (bad) xlat mov fbld das std mov fimull inc mov pop hlt push stos enter jmp je inc or push inc sarl ret shlb mov mov and or jg (bad) mov dec ficom jp sahf sub loop xchg stc clc daa push mov stos push outsb enter or xchg es jne pop mov xchg xor add mov scas mov mov cmp pop adc push jmp and (bad) enter fwait xor ja je xchg loop and jge mov jne xchg sub and jg fldenv xor or sarl pop movsl jns into call pop mov and fild jno (bad) cltd gs divl fidiv incl sahf loopne,pn mov pusha mov cmc mov (bad) arpl cmpsb add xor cmp pop inc lahf sbb jae cmp xor repnz jecxz cmpsl scas xchg es cwtl gs or and push jb lahf add jge adc sub (bad) lock inc out or divl negl pusha mov dec sti pop clc dec mov cmp adc cmp addr16 adc pop push mov (bad) hlt (bad) push inc xor xchg xchg push and mov pusha mov bound adc lcall or xchg stc sbb shlb sub jne push and or out outsb ret xor fldl mov cmp pop ja arpl xor or popa lcall adc mov inc dec xchg arpl in mov scas sbb (bad) int punpckldq cmp add out fnstenv loopne daa enter or ret (bad) mov jmp aad test and mov test lods add clc adc xor iret (bad) xor fldl add ljmp jne xchg inc xor xor mov cltd negb lods cmp rcrl pop push lcall loopne push out xchg inc popf xor loope mov popa call aas hlt xlat and rolb ljmp pop in cmp push (bad) and test add ds mov mov (bad) iret jo and add jbe mov pop fistpll out dec or fmulp shrl jecxz out sbb sub xchg adcb in pop idivl sbb jae je lret outsb add push mov movsb ljmp test sbb pop jle push nop sub add adc add adc add pop incb mov mov dec movsb inc aas lahf pop or divb scas imul in fwait cmp sbb push or rorb adcl xor aad sub pop mov xchg jp cli mov xor aad or fldenv repz sbb aas aam ss rclb jns out add xchg popa push ror negb xor jbe mov mov cmp dec jo or cmc xchg mov out and sbb fildl stos fcmovnb cmp cli std mov addl sbb into dec xor pop into xor lods ret jns lock sbb ficomp shrl int stos mov dec dec fnstcw push jnp sbb add xor inc (bad) sub mov test aad in add push sub jmp fild fstpl push clc adc sub sub pop fs (bad) imul pop cwtl sarl push or leave pop jae int jmp sbb jp sbb loopne jb adc test fstl mov mov dec or inc ret sub xor shlb and jmp mov mov push add inc mov (bad) lock es mov ss test mov pop jne and lods cld dec les stos push jmp mov cmp jnp lret jnp sbb data16 lds add push in dec push test add and jle mov mov fstpl pop pusha popf cmpsl and or xchg outsb hlt mov and push cmpsb imul lods inc mov xchg (bad) das jmp jb into ljmp pop cmp pop fwait bound bound inc and (bad) out sub sub (bad) aas cwtl aaa in in mov decb les out xor add stos xor jmp or mov adc call mov jle fdivs mov sahf jo (bad) mov xor xchg push mov cmp das mov inc dec movsl in mov jb (bad) pop aam ret cmp sahf sbb sub cmpsl aam cltd mov int fcoms push sub in or mov or and jns jne loopne and cwtl push pop (bad) hlt sub (bad) jl sub sbb daa mov lcall (bad) lret outsb jl fisttp or mov testl rol sbb dec movsb sub mov xchg mov sbb xchg push js mov int dec add mov adc jbe cli rcrb lea rolb xor int3 ror sub (bad) mov push les (bad) call push sub and inc scas int invd sub sub fdiv sbb lock dec mov cmp (bad) ret fcmovb test fisubr pop in arpl or inc push or inc test hlt fldt fnsave jae out add push pop sahf call popa or insb leave aad push mov xchg outsl inc out (bad) xor push adc push jnp sahf push loopne je,pt jb movsl pop out je outsl mov iret adc cmp je xlat mov and (bad) dec pop dec dec dec pop xlat mov cli in sahf pop dec or test mov roll xchg dec cltd sbb cmp xchg out ret xor cmp dec pusha insl or nop stc mov and push xchg or push adc negb popf sbbb jnp ret sub dec sub mov cld testb repnz push jb cmp addl fmull xchg (bad) aas fs adc mov incl lods pop data16 pop ljmp int3 cmp adcb movsb push xchg loope xor push jle movsl inc and mov cld or push jbe adc cwtl xor mov add lods inc fisubl bnd mov adc xor pop push xor ljmp fnstenv sub sti (bad) in sub pop int3 imul or scas push mov dec mov (bad) jae cmp in (bad) out loope (bad) xor into (bad) adc cmp fistp sub mov mov mov test dec loope and ret push sub mov adc stc push sub out ds push sub cmp mov and or pop shl add and or cmp push or sbb push ljmp adc in in pop push sub pushf and add cmp push pusha std dec lea xchg push or (bad) lods sbb addb out mov mov cwtl mov std mov ja push mov mov or xor push cli xchg sarl sbb data16 mov cmc fisubl xchg (bad) dec cs mov xchg ljmp in insl into (bad) das (bad) push push jecxz std mov xchg mov mov push mov push dec sti clc xchg cmp mov or jne js in addr16 add sbb cld cmpsl xor inc (bad) out dec jno mull int (bad) sbb lgdtl (bad) xchg fs mov aad (bad) fisubl iret imul cmpsb popa or (bad) jns cmp rcrl das mov mov movsb inc outsl mov sub push call inc push movsb sbb dec push (bad) int3 xor cld or rorl inc sbb mov cli pop adc in xor aam mov aam xor add pop movl mov dec stos out lods popf clc adc movsl (bad) fs outsl xor cmpsl into push dec ja fs lret mov lret or pop imul hlt dec sub xchg pop mov mov pop jae or sub jbe aaa gs sub pop ljmp cld ljmp sub imul insb dec (bad) scas mov xor addr16 insb in lret imul jb xchg loop sahf vmovd jle jle adc loope xor aaa call cmp pop fcmovnbe aas shr pop dec cmp lds in mov mov adc hlt out jge stos xchg sub jnp mov enter cltd mov jbe pop aad (bad) int out lcall ja jns pop inc xchg nop inc lret inc lahf cltd xlat add inc cmp mov sbb repz jp ficompl data16 xor jbe xchg (bad) (bad) lea or ret daa xchg js outsl mov mov lods in add fldl fimul or add testb add (bad) jg and sahf mov mov es mov jge xchg xchg xor sbb add pusha add xor cwtl mov inc mov push pop mov push pop sbb xor in and fsubrs jle xchg mov ljmp mov test (bad) (bad) xchg fdivrs negb scas push decl test out popf test inc pop pop (bad) shrb cmp inc xlat jno pop outsl ror or mov test shlb repz js leave mov jno in jg adc jne and xchg inc cmp push push es fbld insb in push daa lret popa lret out pop jl mov inc adc push jmp fs cwtl pusha fldl2e cli jecxz (bad) hlt out cmp xor pop faddl push insl sub mov movsl dec out push xchg dec std jae push pop pop xor outsl lods sbb sbb jae xchg lock pop cmp sbb (bad) iret mov mov cwtl push js aad bound lret xchg xchg push jecxz cmp call subl mov in xchg mov aad aaa cli pop mov mov or andl enter insb int3 imul cmp pop inc repz pop repnz in (bad) dec push (bad) and insl push jns test add test inc out push inc (bad) lahf movsb adc adc adc (bad) dec jne addr16 test adc pushf ret iret jge sub xor and scas xchg xchg mov mov aas out or cwtl jp out mov in mov ja mov push sarb ja scas inc stc sub lcall daa cmp jno mov cmp (bad) mov andb pop xchg cltd and mov jo inc adc or cltd mov cmp inc jmp in cmpsl fs icebp sbb lea mov push xlat testl xchg jne xchg aas or pushf and lret sahf and jmp arpl add mov lods cmpsb fwait mov push test dec add dec in sahf or mov or push push push jle ds je in clc push lahf adc push das jle sub push hlt jmp or cmp stos sbb test inc mov loopne and mov jp xchg sarb sub (bad) sub mov mov fdivl add sarb popa mov push xchg fdivrs (bad) fisubr out or jmp push mov cmp add les sub nop jno mov icebp lcall ljmp lock int3 loop faddl rolb push sbb std (bad) loop icebp xchg idiv lcall (bad) xor inc (bad) pop push (bad) aaa shlw roll pop (bad) xor pop (bad) mov mov mov push sub pop mov data16 cmp stc (bad) (bad) imull popf nop sub push inc adc js aaa mov push test lds int3 cltd roll and js xchg aad xchg mov dec xor ljmp ss mov dec ja cmp mov inc push dec test pop mov xlat mov je pop int push inc jae fstpl pop test sti sub pop call xchg mov xchg mov divb jo push mov in and scas insb lock out mov sbbl jmp cltd test test jne jo mov push cmp in mov jecxz or push lret and (bad) mov adc sub movsl add (bad) sbb les cmp gs dec cld mov or dec (bad) and lods nop mov jg sarl push sub nop cli ja daa dec ss lods aas gs inc imul mov mov and mov popa add and inc (bad) repnz mov sbb nop sbb inc jb ja ja sub xchg scas fdivrl ds xor data16 dec cmpsl test lret sub add pushf push (bad) test stos dec fisttp cmp mov (bad) push (bad) leave stos xchg addr16 pop cli outsl imul lret adc push xchg jo dec loope mov sub jge mov mov jbe ss xor dec lcall ss add or out pop mov ds lods mov ret mov and xchg in in mov lock in or leave icebp mov pop add push loop fucomi repz out xchg sub stc inc add dec gs mov cmp cmp imul or js add popf (bad) jbe xlat arpl loop scas (bad) and push fistp xor and pop mov gs pusha sbb pop pop pop push inc xor (bad) loop scas jbe sub sahf inc or sbb xor popf lods mov mov cli mov cmc mov (bad) sub mov inc lret lret mov leave stos push and testl jmp mov mov nop push or cld (bad) jecxz rorl das lahf xor xchg ficom jne outsb adc push or into ja lock jmp mov arpl repnz gs int3 cs cli xchg leave in or mov int3 mov or push push lcall push lods ss push jp punpckldq mov imul cmc mov cmc dec and loop js insl jne mov loopne pop adc xchg pushf mov scas sahf jo mov mov ljmp push cmpl push pop roll sbb call sbb inc or mov cmp mov int sub leave and addb dec iret push mov sub into rclb jo fldl outsl enter sub mov sub jecxz mov push lods or adc les add out push pop sub and aaa (bad) mov pushf sbb adc mov pushf push mov add pushf ss xor and push or sarl inc sbb cmp shlb pop xlat inc jno shrb push rclb pop adc out and push (bad) or imul pop lahf lret xchg pop jg popf ja cmc (bad) shrb mov pop xchg repz adc fsts cwtl ja lods sbb pushf loop cltd mov popa jns sub inc xor pop and jbe push int3 mov lahf pushf xor stc sbb inc adc mov hlt jmp push or test xor xchg (bad) mov dec xchg mov or push dec push lods out popf xchg sub insb inc and or (bad) icebp bound insb mov xchg pushf aad in pop mov and dec out fist outsl adc ds das push sub movsl fs mov adc inc es je out lds int adc repz push lods outsl cli lods push outsb sahf jp xchg ljmp lcall (bad) sub pop fstl mov lock mov inc and nop mov xchg jle inc xchg into mov out loopne sbb xchg cld push push mov outsl push fstl jae adc add sub xchg data16 mov add js mov push jmp fs adc pushf mov add mov (bad) mov (bad) mov mov pop fs js jp push dec (bad) rcr add pop (bad) adc push stos push jmp fisttpll jle sahf mov fnstcw jo push jg xchg test dec pop inc and or cwtl xchg test pop into jnp test cmp cmp mov mov (bad) rorl mov mov lods jns xchg aad in imul mov (bad) push aas ret cli cltd xor fadd (bad) mov xchg loopne xor push int3 push shrb (bad) insb sub push mov cld push hlt in cmp popa dec sub xchg call shr and ljmp in iret cmc sbb adc bound xor movsb dec testb fs mov pop enter mov sbb cmp push lods add popa dec leave xchg pop push int3 lret lock cld xor clc pop insl iret inc out ret in mov gs lcall mov into pop aad xorps jns push lods mov subl adc dec js or out lods sbb loopne pusha push pop stc dec lcall (bad) mov pop add inc pop or xchg xchg and push xchg outsl enter icebp lds lods xchg lcall adc cltd sub stc push and pusha bound lock inc std popa inc stc jecxz xchg addr16 lret sbb sbb xor popl out shlb mov xchg leave and pop adc (bad) xchg mov pop frstor push xor jmp xchg xchg out lret sub jmp pop cmpsb and xchg jecxz inc mov or clc mov pop lret xor icebp mov inc movsl in nop fildll pusha xchg outsb out cmc insb xlat xor sbb xchg push mov lcall in dec fildll fist and ljmp push push mov sti jbe mov mov rorb pop nop (bad) xchg and cld xchg xchg lock push lcall sub neg into pop iret cmp pop or ret sub xchg lret xor inc mov sub inc fsubrl arpl adc (bad) int leave rcrb sbb dec fisubrl jmp xchg mov push sbb dec jecxz fwait or xchg jbe test lahf repz lcall lock movsl push pop cmp add dec push inc out ja in sub adc cwtl loope pmaxsw (bad) mov push sub es in cltd rorl cmpsl into mov adcl mov rol lds aad push xchg add aam jecxz nop adc (bad) sahf imul dec movsb mov push sub sbb mov mov cwtl jp,pt sti cld adc lsl in push daa in push loop or lds or addl cmc add int3 pop dec decl dec mov mov and loopne pop mov cs aam (bad) call mov icebp out or stc inc loop pop dec stos mov std das push aas sub enter adc pop ret cltd cmp xchg cltd jb mulb fistpl je les les dec outsb aas push push and push data16 loop inc shlb out gs push aam pop mov (bad) pop ret inc mov add mov stos movb mov fldcw pop js sti rclb xchg sub divb xor jns jmp mov push test dec je idivl and jne stc xor int3 push mov movl cmpsb movsl mov and dec enter or rcll mov sub pop pop mov nop push clc push stos movsl lock ret movsl dec pop xor fisttpll out ja aaa pop dec imul ja stos xlat rcrb jae add cli jp mov mov pop mov enter add cwtl fs pop mov das lret jge or rcll cmpsb fstpt or daa cld pop pop sub push push or or mov js roll out lock mov int3 mov (bad) mov aas lcall pop push mov mov lss test sahf jns cmp jbe jo and (bad) imul (bad) jge cltd xor adc inc push sub movsb sbb inc mov mov stos push andl (bad) test pop rolb dec adc pop inc xchg stos add sub frstor flds xor enter xlat int dec aad fistpl lea pop mov xor sub (bad) stos mov insl pushf mov jae xor test in pop scas iret cmc add add int3 pop sub xor arpl adc fnstenv loope (bad) sub adc dec nop xchg cld push cmp adc and cmp test dec lret sub bound xchg test repz test push fldcw dec and jnp pusha (bad) (bad) xor cmp mov mov mov imul mov mov sarl sub push push add incl out in sbb lcall mov mov popf mov adc ljmp xlat mov fidivr (bad) add xchg outsl cmpsl les subl clc sbb pop in sbb or stos xchg ret or out call (bad) pop cmp cmp cld jb push jbe pop and repnz push pop lret pop sbb xchg xchg sub mov mov sub xor stos incb cmc jge pop mov stos push adc adcl jle imull es and jne cmp sbb jg inc jle mov inc mov fwait lahf (bad) sbb mov jns xor mov push fldt xchg aam push xor jp ffreep (bad) jmp scas out push dec roll mov pushl pusha xor lea xchg pop out loopne mov ss jmp xchg inc and push lea and adc cmp and dec push movsb fwait xchg and cmpsb push cmp push mov lahf sub mov or bound jge jle cmp pop pusha dec shll adc movsb add mov pop sbb mov addr16 cmp out fs mov das shll jl push rorb or xor dec daa addl cmp test rorl (bad) in sti (bad) mov push scas pop sbb loopne sbb xchg cmp test (bad) xchg xchg mov cs in loope sub imul repnz sbb in xchg out sub sbb aaa (bad) mov mov mov xchg out frstor ss sub or add xor mov pop push cli js pushf pop popa push mov xchg js mov xchg and dec and xchg cld negb cmp lret jmp out and pop mov fistpl inc xor lcall (bad) jnp in cmpsl loopne pushf aad nop inc out insl adc cli rcrb pusha sahf mov fwait dec sbb push pop sbb pop addr16 divb xor jo adc inc movsb mov inc sbb stc push mov cmp test pop stc sub cmp and outsl loop mov pop movsl cltd xor (bad) fst sbb pushl mov sbbl cmpsl mov (bad) lea addr16 jne fisubr sub mov jnp es dec sub adc push add dec aam cmp xchg xchg or dec xchg std lahf xchg inc sahf arpl out mov aam and ljmp mov lahf (bad) fcmovbe jmp out sbb dec je pushw sub jb mov jl outsb mov int lret repz or fs pop fild iret or pop mull mov stc lea imul mov or push lods test cltd bound (bad) pop js jl into push dec jp adc jmp loopne,pt scas insl pop jl imul scas push cwtl adc leave rcrb insl aas xchg pusha cltd lock xor scas dec mov inc into in mov test ja inc and bound mov mov adc popf and inc cmp bound lret into push push lret popa push fistp lock (bad) and push sub test sarl call cmp pop mov push jns (bad) push pop (bad) leave in pop pop inc jno push pop clc pop or arpl mov in pop mov popa sbb jnp or and mov cli ds sbb out cwtl icebp sbb std scas and stos (bad) punpcklwd es dec add or xchg push cmc jle fwait sub nop int3 xor bound lcall inc ds and popf pop fiadd (bad) or and mov pop jo mov cmp jg xchg adc or jmp lret arpl imul add gs rcrb les aas dec data16 into push and sbb xor pop lahf adc sub xchg dec pusha mov rcl les sbb in js and movb or repnz pop or sti shll sbb mov add out cmp lret test stos xor out iret pusha outsb add xor pusha dec popf jmp imul outsl sub addl jo hlt mov and (bad) pop fadd adc cmp xor sar out push and icebp and xchg test and cmc mov xor cwtl or icebp pop rolb cli popa xlat not test dec (bad) pop test lods dec dec jno mov (bad) jns sarl jo add adc outsl leave add sti out sbb push jbe mov push push inc pop aaa sub adc les lcall mov popa xchg pop aam mov cwtl in xor cmp or (bad) aaa ljmp xchg and int3 aaa jg decl adc leave sbb pop movsl jbe enter arpl xchg aas and lods movzwl xor xchg sbb out add lods mov mov popa jo mov dec dec loopne push mov xchg clc (bad) sti jb test push mov push jb dec or clc loop stos test sahf das (bad) and cli (bad) in pop dec shrb je (bad) push test aam mov es loop inc push aad or movb push ljmp aam xchg dec add enter fs es adc lret test sub add call or pop (bad) sbb ljmp fild add pop out jmp outsl adc jp shlb ret adc mov stos inc xlat (bad) dec and (bad) pusha enter (bad) out cmc ja add xor jb xor jne cwtl sahf fwait notl scas mov and outsl push and push addr16 out nop lret inc and scas (bad) into inc divb mov lods popa or scas inc test jae pop mov push mov nop (bad) dec mov out pushf push push and movsb scas cmp mov leave divl test sarb lret stos dec pop fidivrl pusha mov mov lock outsl pop cmp sub movsb jno scas lret xchg jmp mov sbb rorb leave enter sub mov nop xor sbb (bad) fbstp xchg or dec fs mov ss push pmaddwd adc jge hlt (bad) aaa pop subb cli xor push mov and fcmovnb mov sub (bad) push mov popf mov jb cmp in mov int ficoml pop push push into pop pop jmp mov lock aad pop repnz xchg mov cmp inc inc add lret push aad mov xor (bad) sbb add jmp pop sarl lret pusha scas sub ljmp jae and and into push mov ret es fs outsl adc outsb daa xor (bad) dec push sarb xchg mov das les fistl scas xor sahf stos mov mov sbb pusha jecxz xchg lahf fadds imul push movsl fcmovne in (bad) lods mov mov (bad) cmp sub xchg lds ret xor mov xchg and mov mov (bad) jns dec lock fdivrp jge push (bad) popa cmp add add hlt inc test mov adc or clc (bad) leave sub aam inc xor out subl inc xor mov xchg aas ss (bad) or adc jno pop aaa mov pop inc mov pop bound fwait jge mov stos adc mov int fnstenv xlat mov lea aaa in fldt in into icebp jl sahf and cmp lahf insl mov pop popf push jmp cltd dec (bad) pop pop cs mov mov stos pushf or cld push jae ret dec je or roll (bad) sbb sub outsb jb or xlat add in xor cmp dec out cltd orl (bad) mul sub sahf outsb (bad) gs jae call jne dec mov dec push jp (bad) push out push rorl ret shrl pop dec icebp xchg mov enter ljmp gs bound cmp pop jno lods or adc loop jno data16 icebp mov or movsl mov sbb loope les mov call mov pop push aad mov adc movsl sti sbb inc pop test cld dec js sub mov xor nop jge imul flds fsubp out jno xchg fistl call mov jno test dec cmp outsl rolb stos shll push int3 test cmp sub add pop xchg in repz pop add icebp (bad) mov add clc or adcl gs push addr16 push (bad) inc scas loopne fucom push mov mov rclb xchg inc into rorb and fadds sarb sbb push insb sub xor and (bad) jnp ljmp pop fimull sarb cli (bad) repz adc xor rclb stos jmp shll lret out lret lret shrb jecxz sarl test cmp sub incl add scas mov dec sub cld out add imul or out cmp fildll or jp aaa sub cmpsl paddsw push cmc sub int outsl fnstenv mov scas dec fisubr jbe jnp sub cmp xchg nop cli in mov pop push lea pop jne mov mov inc inc (bad) lcall repnz mov test out fisubrl push loopne mov fiaddl dec xchg push jne shrl and ret mov mov stc mov test xchg xchg inc push cmp add jne pop fs inc cwtl sub push clc cmpsl jl adc (bad) mov mov loopne test dec scas (bad) jl ja fisub or sahf jmp mov es out jl jecxz lret insb sub inc cmc std xor or adc (bad) lahf pop mov jo or xchg test daa xor pushf or jns popl adc inc xor mov call shrl insl cld stc popf ja out rcrl and and jne insb imulb dec push jno rcrl cmp jb in pandn jno pop ret jo sub pop add inc push dec ljmp lahf mov xchg mov add test (bad) fldcw jae adc adcl imul inc inc mov mov mov and sub (bad) mov inc jmp dec push xchg pop adc sahf adc mov ljmp pop xlat test adc daa mov or enter ss dec xlat jb xchg ret cltd and rclb xchg in and std jne in enter in jmp and or fisubr mov xchg push flds cmp ja and xor icebp fstl stos push mov mov (bad) mov outsl add sub add pop popf fisubl rclb mov pop cltd lahf and jmp inc arpl (bad) adc mov mov jnp imul mov pop icebp jl jne jb (bad) out (bad) aad or push or mov fdivr xchg push xchg cld xor frstor inc outsb fcompl imulb jecxz and fldcw dec sbb inc nop dec pop xchg fadd les adc mov jp xor negb (bad) xlat push push cli mov mov mov xchg mov (bad) push fsts sahf mov mov in jbe jo,pt add dec cmp daa dec dec pushf dec pop rcrb aam les xchg xchg out pop test xor aam adc sbb and and out outsl jo pop cwtl out mov lret (bad) test in clc cmpsl aam fmull inc mov xchg or je nop or dec std or fsts neg jp sbb ret dec scas jnp iret mov insl push (bad) xor adc mov cltd ljmp loopne sbb fldl xchg stos lret lock nop sbb cmp rcll daa xor dec fisub jns push sbb mov stc pop shr stos dec stos jl xor pop out (bad) ss jecxz (bad) call dec inc ljmp imul sub pop cmp cmp adc movsb xchg orl dec sbb (bad) jae lods in add add iret test stos daa xchg int stos jg and imulb cmp jns xchg mov push psrlw mov bound push adc dec push pop jle add lret enter adc xchg mov mov mov fdivs jge loop insl mov (bad) fisttpl out out bnd jg sub cmp movsb jae and int movntq (bad) aas fcomip xchg mov xchg mov out sbb call pop ret sbb xchg add movsb fwait roll cmp js add jae push jmp dec iret pushf sahf loopne pop pop fwait sub pusha xlat xor lock jo sub rcrb mov data16 and rorl imul iret (bad) mov sbb gs ror (bad) int or jno mov adc xchg pop (bad) popa (bad) fmuls insb dec xor cmp mov dec push add scas adc xor scas mov xlat lret jle xlat scas lahf sub xchg shrl dec inc xor mov push pop cmc dec ljmp lds inc xchg mov test lods enter popa out loope (bad) fstpl or fldl sahf xchg imul rcl imul jb roll icebp xor cmp loopne push jl jg push cmp mov ds jmp (bad) push pop cmp mov cs jmp inc xor mov repz or fiaddl xchg (bad) (bad) (bad) ss pop mov loope pop jmp lods push loope clc dec jmp fwait mov fsubrs int sbb cli cmp or scas gs jae adc jo sbb cmp and adc cld push ds fwait popa shrb sub leave mov xor rcrl xor xchg sahf mov push xor pushf ret xchg daa mov mov cmp xor xor sbb push mov mov (bad) push je,pn inc orl xchg mov sahf fxch in mov push xchg fisttpll cmc dec es jo dec popf adc sub ljmp popf cli nop lea cld js pop mov mov adc sbb jno add inc mov xchg divl imul (bad) and roll stc mov insb or lret cmp aad out sbb sub mov sahf ss pop sbb adc out mov loop hlt push shrl push mov cmpsb aad xchg shr rcrb out xor pop push fstpt sub rcr out mov fsubrp jns fs lds stos xchg pusha movzbl mov js sbb mov dec icebp jg bound xor call xchg ret fisub popa xchg lds shrl cmp test imul nop jp jl enter cmc ret add add cmp (bad) call xor jns dec adc or lretw shl jns pop or pop push sti or fs lret pop xor cli xchg inc lock adc mov lret (bad) fbld jge and sbb insl ficom (bad) mov sbb cmp mov pop punpckhdq test pop pop cmpsb cltd sti and jle jb sbbb ja je iret test mov xor add add fisubl xchg xor loop jno loop cld repnz andl insb rclb cwtl sbb or xor xchg lods es (bad) adc sub lea mov out dec sub out sbb pop (bad) sub imul add popf shlb or (bad) aad roll ret in xchg imul adc mov dec mov push mov mov imul cmp enter sbb out inc xchg sarl mov cltd and fcomps push pop jmp jl (bad) cltd mov inc (bad) fwait xor xchg add mov pop and mov add sbb lods jbe and adc pop mov loop (bad) inc in or sbb xchg mov xchg add jmp or sbb sub xchg mov leave jp jmp fs xor or adc push mov je push cmp push xchg or push pop jbe mov stc xlat fs inc loopne (bad) dec adc push sbb bound ss mov adc mov stos popf inc insl adc gs divb add push mov adcl and xchg sbb lods movsb adc scas sbb into cmp cs stos outsl inc mov sub (bad) cli ficom repnz xor mov (bad) int3 lea fcmovne ljmp aas popa dec imul push jl das sub mov jno (bad) sbb movsl adc cmp sbb (bad) in repz imul rclb pop popf mov movsb mov ret popl xor cwtl jnp imul dec xor test enter lcall fisubrl aad dec pop jae push xchg cli (bad) mov cmp jmp mov jae jg or lds inc in mov lds lret call or divb inc mov mov xor xchg add insl pop aad hlt lret imul mov sbb popa ja lods rcrl push pop or xchg push inc outsl cs dec mov in jb xor dec lods (bad) cmpsb cmp pop (bad) pop imul fnsave jae stc add sub std ja popf test adc jnp lahf xor fisubrl std mov and adc fwait inc sarl cli mov outsl repz pop lea fmuls xor (bad) mov jo and add shlb jge cmpsl and mov repnz lods sbb cltd xchg xor stos inc jg cmp pop and add repnz das and sub loop mov fwait inc sbb sti inc mov fisubrl jge sbb pop ds out and cmp ss rcrb data16 leave jbe pop out cmp pusha cmc or cmp sbb in pop jle in push mov mov int3 mov sti popa sbb das jne daa lds jge sub cwtl clc or subl lods mov lods or fcmovne outsb cltd pusha idivl mov push ds mov pop sub adc cltd lock dec jns inc pop jmp (bad) mov cmp iret inc out iret (bad) dec cmp out orb and and (bad) (bad) jmp add jb insb jae outsb fs add add add xchg push add xor add add add add push add jb jb jb gs jb add or inc push bound add add add adc add add add add push add fs addr16 jb gs add or dec push insl popaw jb gs add adc add add incl sub or dec gs insb jns jb jo xor add or push jb outsb addr16 add or adc pmaddwd adc add add add add add bound gs xor add je jb outsb gs outsb je add add or add incl das add add popa insl bound jae add or inc jae gs outsl jb jb xor add add add or adc incl sub add push or inc jns insb outsl outsb gs add or dec popa outsb fs insb insb add add or add add add or dec outsl insl imul add or je jae outsb imul add push out jmp (bad) push adc add add add add push add gs jb outsb je jb add or inc popa jae gs jb add add add or or pop add add sldt fs jne jae jns outsb xor add or dec popa outsb fs je jb gs add or incl sub add or push outsb fs gs jns gs add push add imul push dec pop add aad adc add add add or insl jo add or outsb bound fs je cmp add push in or adc incl xor add or add jb je gs jae jae imul add push add popa gs add add add pushf add or incl xor add or fs imul add insb popa jb je outsl outsb gs add add or or incl xor add push adc push outsb arpl insl jne popa je jbe outsb gs add push add outsb je xor add push movb or add or add add pop add imul add add add popaw imul add or add adc adc add add add add or dec gs gs je add or push insb popa outsb imul imul add bswap or xor adc add add add add pop add jne push add add gs jae jae outsb outsb gs gs add add scas add add add push add imul outsb gs add or popa je jo outsl jae popa xor dec pop test sub incl sub add adc dec je arpl add push add jb je outsb imul add adc and dec or adc incl sub add adc add imul add or dec popa jbe jae imul pop or adc add add or jb imul jae add push add push fs adc push fwait add or add add push or inc push jb add adc inc jb insb insb outsw fs insb gs gs push adc adc add add or push outsl outsb gs outsb xor add or push jb imul gs xor jmp add push add add add add or inc outsb arpl outsb imul add arpl cmp add adc add pop add add add add or inc gs je jb gs add pop add outsl jne jae add or add or incl xor add sbb add imul cmp add lldt imul arpl insb jns add add adc add add add add or dec imul jae add or dec popa jae jne bound gs add adc or mov incl sub add sbb add popaw outsb addr16 jae add push add bound jae add add adc add sbb incl add mov inc add or add or inc add add inc add add inc add inc add or add add push add (bad) (bad) incl add add add add add add add add add add add add add (bad) (bad) incl add add add add add add add add add add add add add (bad) (bad) incl add add add add add add add add add add add add inc add (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) incl add add add add add add add add add add add add inc add (bad) (bad) incl add add add add add add add add add add add add and (bad) (bad) (bad) incl add add add add add dec cmove add add jl inc add add add add add add add add cld cmp (bad) (bad) (bad) incl add add add add add add add add add add add add (bad) (bad) incl add add add add add add add add add add add add inc add (bad) (bad) incl add add add add add add add add add add add add (bad) incl add add add add add add add add add add add add enter (bad) (bad) incl add add inc add (bad) (bad) incl add add rolb xor add sbb xor inc add jmp in xor pop ret push mov sub push mov push mov push pop call push push push mov movl mov and mov mov and mov mov mov pushl call movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call mov mov pushl call cmpl jne push push call movl jmp movl mov mov mov mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov pushl mov pushl call mov lea call mov mov add call lea call push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov pushl call push mov pushl call mov lea call push pushl push call add lea call movl fwait push jmp lea call ret ret mov mov pushl call mov mov mov pop pop pop leave ret push mov push pop call movl movl andl jmp mov add jo mov mov cmp jg jmp mov mov pushl call xor leave ret call push mov push push push mov push mov push pop call push push push mov movl push push call mov movl andl jmp mov add jo mov mov cmp jg movl fildl fstpl fldl cmpl jne fdivl jmp pushl pushl call call mov jmp call movl movl lea push call fstps lea call movl movl lea push call lea call cmpl jne jmp mov add jo mov push pushl lea push call call jmp mov add jo mov push pushl call mov lea call push call push call call lea call fwait push jmp lea call lea call ret ret xor mov mov pop pop pop leave ret call push mov push pop call mov flds fstps xor leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov xor pop ret push mov push pop call mov flds fstps xor leave ret push mov xor pop ret push mov push pop call mov mov mov xor leave ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push pop call mov flds fstps xor leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov mov mov xor mov mov pop pop pop leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl mov lea call fwait push lea call ret mov flds fstps xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call fwait push lea call ret mov flds fstps xor mov mov pop pop pop leave ret push mov push pop call mov flds fstps xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call lea lea call push lea call lea call ret mov mov mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push pop call mov mov mov xor leave ret push mov xor pop ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl lea lea call fwait push lea call ret mov flds fstps xor mov mov pop pop pop leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push pop call mov mov mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl lea lea call mov lea call mov lea call push lea call lea call lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call fwait push lea call ret mov fldl fstpl xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push pop call mov fldl fstpl xor leave ret push mov xor pop ret push mov push pop call mov mov mov xor leave ret push mov push pop call mov mov mov xor leave ret int3 int3 int3 int3 int3 int3 int3 sahf sahf sahf sahf in and (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add mov and shlb add loopne add lock add add and add add sbbb add and add add push add adcb sbbb add add add mov add and add and add and add and add and add and add cmp add pusha and add andb add and add into and add add sub add cld and add adc add and add cs cmp add inc es dec es add add dec push push inc push dec xor inc dec dec add add pop inc dec arpl add add pop popa fs data16 popa outsb add add pop pop jbe popa push je dec xor add add jbe popa inc jb gs popa jb add add fs imul xor add pop popa fs data16 gs xor add pop pop jbe popa push je inc popa je add pop pop jbe popa push gs jns je insl inc jb outsl jb add pop pop jbe popa dec jb jae insb je push bound add add fs imul xor add pop popa fs imul imul popa fs imul xor imul dec jae outsb add add pop pop jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa push jb outsb je bound add inc insb insb inc jne arpl outsb inc popa insb insb add add fs data16 je outsb add add inc dec push pop push dec dec dec pop push gs gs jae add add pop inc dec jae jb add add inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl add pop pop jbe popa inc js gs dec popa outsb fs gs add add fs data16 gs add add pop popa fs imul ss add add jbe popa inc push inc js gs imul pop inc dec insb outsl add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add add fs imul xor add add fs imul xor imul jbe popa push je inc outsl jo add add pop pop jbe popa dec xor je add add pop popa fs imul xor add add pop popa fs imul add pop pop jbe popa push popa jb jne add add jbe popa inc jo xor add pop inc dec popa je outsb add add jbe popa push je dec outsl jbe add add pop pop jbe popa dec xor jns add pop popa insb insb insl jne add add dec je outsb add add pop inc dec gs add add pop pop jbe popa inc jb gs je 