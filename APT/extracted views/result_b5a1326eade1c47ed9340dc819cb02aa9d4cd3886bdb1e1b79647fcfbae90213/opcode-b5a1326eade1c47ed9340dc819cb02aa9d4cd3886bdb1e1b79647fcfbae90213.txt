xchg mov jb push mov jb push jb inc mov jb mov mov jb cmp add int jb add jb loopne jb xchg mov jb outsb movsb jb bound jb (bad) mov jb mov mov jb fwait mov jb xchg mov jb inc mov jb add jb xchg mov jb mov mov jb insb mov jb ret outsb add jb xor movsb jb jne jb xchg mov jb ret bnd jb out mov jb frstor jb pushf sub add add add inc add inc add inc add add add loopne inc add add pusha out inc add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add inc add add add add inc (bad) lock xchg dec mov loopne flds add add add add outsl jb gs xor add dec xor add push bound es rclb mov mov pop inc test xchg mov dec lods xor or stos add xchg jge add js add add add gs imul or dec jb addr16 gs sbb add and and pop add insb je add pop add add add add adc adc add add sub add inc add add sbb add add add push add outsb add add adc add add add add or add sbb add add add or add adc add and add add add add add rolb add push push push push push rcll rcll push aam push rcll push rcll push rcl push push rcl rcll xchg xchg push push push scas push push scas push push push scas scas push scas push push push scas push scas push scas scas push push scas scas scas push push push push push push push push push push push push push push push rcll (bad) rcrl es push sub es (bad) rcll sub test (bad) (bad) (bad) push push pop (bad) (bad) sub push push pop (bad) es push push (bad) fldcw sub push push (bad) (bad) sub (bad) push pop fldcw fcompp (bad) (bad) push (bad) (bad) (bad) and fldcw push push (bad) (bad) push push push push push push push push push push push push push push push push push push scas scas push push scas cmpsb push push nop rclb xchg push push push xchg push push push xchg push push push mov push push mov push push xchg push push push xchg push push push rcll push rcll push xchg push push push mov scas push push scas scas push push sub add sbb add xor add add or add add mov add add add add pusha push push push push push jecxz mov out fstl aaa aaa push int3 (bad) xchg push jne jecxz (bad) cmp push mov ljmp repnz push test sti jmp push mov pushf pushf push aam or iret in mov in mov popf enter aas and aad push call mov push add push sub push cmp xchg push sbb jmp call rcl push out ret mov push xchg lret lds xor xchg xchg push scas scas scas push scas xchg push xor push mulb cmp (bad) repnz mov xchg push std sub push jecxz ficoml hlt hlt push cmp push cmpsb popl scas movsl movsl push and adc (bad) (bad) push clc sub push mov out xchg nop mov fstp push mov cmpl push lcall push fisttpl or mov cli push ljmp push call xlat rclb mov cmc push mov (bad) mov int3 fwait push test mov push xchg nop push out rclb (bad) push mov repnz mov adcl cli cli push xchg iret iret push call lret fwait push mov xchg push push push fdivl xor and and push imulb sub aam push mov fcmove push xchg hlt push xchg (bad) les cmc loop mov in push aam add int3 cld push mov xchg push mov mov push scas subl xchg xchg (bad) push test hlt cld push mov xchg push push jno push push push push push push push push push push push push push push pusha push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push mov push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push outsl push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push je or push push push push push push push push inc inc inc inc inc push push push push push push push or or or jb pop pop pop pop push push push push push add push je je or dec xor pop push push push push inc add jo inc dec je jae inc jle sbb je inc push push push push push imul push insb jbe jb xor push or push push push push jb xor imul sbb or sbb pop push push push push push push cmovno dec sbb jb pusha pop adc pop push push push push push push jge pop pop jp adc adc cmp push or push push push jge imul inc jge xor or push push push jge pop pop inc pop inc jle jp push jne inc cmp push push push push push inc push inc addr16 jnp push push inc add push push push push or push inc xor imul push dec jg add push or ja xor xor push add je aas jg je push push push or and push push push xor ss dec inc dec pop push push push or dec gs imul jb sbb ds je push push jp ja pusha push js push or dec push push push push sbb je push push xor jo or sbb sbb push push data16 or xor or xor inc jb jbe jbe ja add je push push push push push xor xor xor pusha pop jae or je je push push push push push push push push push jp or push je je push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push scas scas scas push scas scas scas push nop scas rclb push push push rcll push rcll push xchg push push push xchg push push push mov push push mov push push mov push push mov push push mov push push xchg push push push xchg push push push xchg push push push rcll push rcll push rcll push xchg push push push mov push push lods push outsb push scas scas scas push scas scas scas push sub add adc add and add add or add add inc add add add add add add push push push (bad) xor cmp cmp and and push repnz sub push cmc sub sub std cs stc rcll rcl push call rclb rcl push std rcl push cld aad push cli (bad) fcoms (bad) push loope xlat push out aam jecxz fist fcmovnu push loopne fcoml (bad) push call (bad) push jecxz rcll ret push jmp (bad) push in faddp push call ret rclb les vsqrtps vsqrtsd rol ljmp push out ror jmp enter lret push out int3 push jmp enter iret iret push out iret into push in repnz xchg vsqrtss int3 int3 push cwtl enter int3 int3 push nop (bad) icebp push xchg vsqrtps enter int push xchg repnz xchg div push xchg div push fwait div push popf div push nop idiv push xchg icebp std push xchg cld cld push fwait (bad) (bad) push lahf std cld push cmp call std std push pushf lock xor jmp test in push cwtl loope push pushf loope push lahf in push xchg loopne and out mov in mov in push test in push mov in push mov jmp mov in push (bad) leave lcall stc adcl clc xchg push mov xchg push (bad) lcall push fwait in push xchg xchg push (bad) out xchg push mov xchg push (bad) loop push xchg jecxz push fwait out (bad) push cltd out mov nop xchg push (bad) xchg xchg push sbbl push mov xchg push mov fwait push mov test sahf xchg addl mov orl cmpsb mov push test mov inc push mov add scas and scas rclb loopne cmpsl scas adcb scas push push push push push jle push push add push push and push push shll push sahf clc push push mov addl mov scas mov push scas mov push scas mov loopne scas cmpsl adcb scas push push push push push jle push push add push and push shrl loope push push sahf or mov sub scas (bad) scas int3 add (bad) and nop rclb loopne scas mov push scas scas scas push push push push push jle push push add push and push rcrl loope push push sahf pop push push mov jno push scas outsl pusha push scas or and mov scas out push scas test push push push push push jle pop push add push and push rcll loope addr16 sahf push adc push sbb inc or pusha and add push scas and push scas shl scas loopne push scas orb push push push push jle jno add push and push rcll loope sub push fist push cmc push scas inc loop scas pusha out push scas add push scas rorb scas andb push push push push jge jle and push cmp push (bad) push rcll loope xchg push sahf push mov mov push mov add push cmpsb shrb stos subb push push push push dec push jle jl add push and push rcll loope daa push sahf push fsts push enter mull push in scas push xchg and push (bad) loopne push mov scas scas push push push push push pop push jle pop push add push and push rcll loope ja sahf push jge mov push or push and scas push frstor scas push test scas push mov scas push push push push push push push push push push push push push push push push push push push push push push push push push push push push push jnp push push push push jb pop jno push push adc push push push push push push dec add push pop jns dec xor push push push jg fs push push ds add push push push sbb data16 sbb push push push push outsl pop pop jg add xor push push push push push outsl add pop pop pop jbe imul pop pop bound popa dec dec or inc push push push push insb add inc pusha dec dec je addr16 push push push sbb pop inc push and and inc or jge add push aaa or jb push push imul cmp cmp inc jo push push push push push sbb sbb push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push scas scas push push scas cmpsb push push nop rclb xchg push push push xchg push push push xchg push push push mov push push mov push push xchg push push push xchg push push push rcll push rcll push xchg push push push mov scas push push scas scas push push sub add sbb add xor add add and add add pusha or add push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push add push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push (bad) xor inc fidiv xor fbstp xor ret ss ret push ret push fbstp xor push push push push push push push push push push push (bad) cmp push xlat or push rorb or aam or fmuls (bad) fmuls push push push push push push push push push push push push push push push push push push ret aaa xor ret aaa xor les cmp (bad) cmp scas fidiv xor (bad) xor aaa add xor xor fdivl xor fimull push add or (bad) xor mov aas and fisttpl push scas fmuls (bad) fmuls ucomiss (bad) andps push push push push push push push push push push (bad) xor push (bad) cmp scas out shrb fcmovne scas (bad) xor cmp ret aaa aaa scas (bad) xor scas fdivl xor fbstp xor les cmp mov xchg scas loope fldt (bad) cmpsl fmuls pshufw push push push push push push push push push (bad) xor or and scas mov xchg scas test fcomi scas call shrl int and (bad) xor shrl fwait stc clc scas mov das sub call (bad) mov scas (bad) xor scas (bad) or cmovbe push push push push push push push push push push fbstp xor cmp mov in scas scas mov scas in fldt int aas scas xor scas ret scas movsb mov scas scas scas mov mov scas jmp into scas scas mov xchg scas fdivl xor push push push push push push push push push push push push push push push push aam add lds aaa int fcomp scas scas mov repz imull sub in (bad) scas and adc cmpsb (bad) (bad) scas scas mov scas scas mov icebp and scas xchg int3 cld scas scas mov aad (bad) or push push push push push push push push push push push push push push push push lds xor (bad) xor add daa and mov ljmp pushf (bad) ljmp cmp popf scas scas mov mov scas mov imull mov subb cmp scas fmuls or fdivl xor push push push push push push push push push push push push push push push push push push push (bad) xor popa iret ds (bad) jmp scas cmpsl mov scas aam or movsb mov mov scas mov mov aad add repnz scas test jecxz scas fidiv xor fidiv push push push push push push push push push push push push push push push push push push push push push (bad) xor jge and cmpsb mov call scas lcall scas fisttpl or not aad not shrl aam add xchg (bad) repnz movsb cmpl scas fisttpl push push push push push push push push push push push push push push push push push push push push push ret data16 daa daa stos mov xchg scas mov xchg scas popf enter cli cli scas cwtl enter sub scas hlt and scas mulb sub scas xchg lret cltd (bad) imulb mov xchg scas ret scas fimull pmaxub xor push push push push push push push push push push push push push push push push push (bad) or push enter cli rcl scas mov (bad) ljmp mov std scas mov loopne (bad) (bad) (bad) scas xchg sti scas xor scas lcall scas xchg lret lock sahf lock mov subl fimull por xor pop push push push push push push push push push push push push push push push push rorb push int cmp xchg iret iret scas mov div scas xchg (bad) les out shrb in fstp scas jmp rcl scas mull and ljmp scas mov fld scas fdivl xor push push push push push push push push push push push push push push push push (bad) cmp imul sub mov hlt hlt scas leave cmp scas not shrb cld rcl scas stc sub sub xchg repnz std xlat shrb sahf iret in mov call scas fnsave push cmp push push push push push push push push push push sub adc ds lods xchg scas jmp fldt mov lods lods scas mov (bad) (bad) scas mov lea scas movsb mov and scas mov nop scas mov fcmovnb scas fmuls xchg aad or push push push push push push push iret and and sub mov scas movsl movsl scas mov jmp scas nop (bad) scas mov cld sahf scas mov mov mov scas mov scas mov xchg mov popf call xor scas subl ret aaa xor pop push push push push push push push push repnz sub scas scas scas scas nop hlt hlt scas int3 xor scas cmpsb lahf lahf scas in lahf scas jne jecxz int3 lret fwait scas adcl scas sub scas int3 (bad) xchg scas jne jecxz jecxz mov clc aam scas xchg fdiv scas scas xchg scas ret aaa xor fimull (bad) push push push push push push push mull es sub in jecxz shrb iret and scas mov loop scas mov mov call mov scas xchg xchg (bad) scas jne jecxz xchg nop mov call mov mov clc sub shrb fidiv xor fbstp xor push push push push push push push push push push push imulb sub and xor cmp xchg iret cmp scas nop ret mov in mov mov lods scas scas scas scas scas scas scas scas scas scas stos stos scas test mov mov loop scas cltd div scas lret scas fisttpll or xor pop push push push push push push push push push push push push push push push push push push push push cmc daa daa push hlt and inc clc sub pop (bad) aaa aaa sub aaa aaa loopne sub fisubrl xchg repnz in into into scas out ret rcl scas into and mov (bad) or (bad) ss fidiv inc fdivl xor push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push sub sbb add pop (bad) add dec das pop pop jg sbb sbb xor push push jl sbb bound push push dec sub sbb jno push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push mov push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push scas scas scas push scas scas scas push mov push push xchg push push push xchg push push push xchg push push push xchg push push push xchg push push push xchg push push push mov push push mov push push mov push push xchg push push push xchg push push push xchg push push push rcll push rcll push rcll push rcll push xchg push push push mov push push lods push outsb push scas scas scas push scas scas scas push and add outsl addr16 gs xor daa pop add or add pop add inc add add add add add inc add add add addl nop addl dec addl add add mov add add inc add add add addb add add add add inc add add add inc add add add add add add add add inc add add add jge add add add jl add xor add or or add add lock add (bad) decl add add add add add jmp das inc add inc add add (bad) add add add add insb gs imul add jb outsb imul je jb gs xor add add add add add add (bad) incl add add add add adc add xor inc add inc add add add add je inc add add add add add add inc add add add add mov push sub add inc add add add add adc xor add add add xor add mov add add inc add add add add add add add add inc add pop add add jl add (bad) (bad) incl add add add add jne in inc add (bad) (bad) call inc add inc add inc add inc add add add add inc add inc add inc add inc add incl add jg add subl jmp subl jmp subl jmp hlt add add jns add add add call inc add add add adc add inc add add push add add push bound es rclb mov adc add (bad) pop add add add int3 adc dec add add add and int cmc adc inc mov mov add add sbbb add lret add add add inc sbb pushf add add add insb add inc mov cs mov add add add add add add add add add cmp inc add add add add adc sbb inc scas dec xchg xor (bad) mov add add sbbb add or add add add fild cmp add push add add cmp xchg jmp sbb add add add sbbb add add add add mov add add add mov fwait mov ljmp push fsubrl add sbb add or add add add add add add add fistpll into data16 mov ss add add add add add add add add or add add push add add stc dec movsl mov outsl mov add add add add add add or add add add mov add add add mov add push loope mov mov xchg push adc add add add add add add or add add add inc add add add add jmp dec and dec mov scas xor pop std cltd or add sbbb add add add add test inc add add push add add dec jg nop push push dec stos cmp loope or add sbbb add or add add add inc add add add sub mov (bad) inc push int3 or add sbbb add add add add cld ljmp add add add add add add add (bad) (bad) incl add add inc add inc add add add jg add xor add add mov add add xor add add clc xor add add hlt xor cmp add clc xor add mov push cmp add cmp add add pushf pop jl mov inc add mov inc add add add pusha test sub add mov xorl sub add inc add add add add inc add add add jne fmull add inc add add add pusha test xor add add add add inc add mov xor add add add pusha test sbb add int3 cmp jne clc mov sbb add inc add add add inc add add add ds add popl and add inc add add add pusha test sbb add test inc add popl sbb add inc add add add inc add add add ds add popl xor add inc add add add pusha test add add cmp inc add popl add add inc add add add inc add add add xorl adc add inc add add add pusha test add add aas inc add popl add add adc pop add add inc add add add inc add popl adc add inc add add add pusha test xor add lods inc inc add popl xor add inc add add add inc add add add inc inc add popl adc add inc add add add pusha test xor add fs inc add popl xor add inc add add add inc add add rolb mov popl adc add inc add add add pusha test pop add add inc add popl pop add add adc je add pusha test aaa add add inc add popl aaa add add adc js add pusha test pop add add inc inc add popl pop add add adc jl add pusha test sbb add xor add popl sbb add inc add add test or add mov add popl or add inc add add inc add add call xorl and add inc add add test sbb add add add add add nop inc add add add inc add add add add add xorl sub add add test push add add inc inc add nop inc add add add adc xchg add add inc add add add inc add nop inc add add add adc cwtl add add inc add add add jne sub inc add add add adc pushf add add inc add add add inc inc add nop inc add add add adc mov test add add add nop inc add add add adc movsb add add inc add add add inc inc add nop inc add add add adc test add pusha test push add add inc add nop inc add add add adc lods add add inc add add add xorl add add inc add add test and add add add add inc inc add nop inc add add add inc add add add add add dec inc add nop inc add add add test push add add jne test inc add add add adc mov test or add add add add dec inc add nop inc add add add add add inc add add dec dec inc add nop inc add add inc add add add add inc add add add xorl add add adc enter pusha test das add add inc add nop inc add add add adc int3 add add inc add add add inc add nop inc add add add adc rolb add pusha test add add mov xorl add add inc add add add add inc add add add dec inc add xchg inc add add add adc fadds add pusha test adc add je inc add xchg inc add add add adc faddl add pusha test sub add rorb add xchg inc add add inc add add add add inc add add add inc add xchg inc add add add adc in add pusha test and add mov mov xchg inc add add add adc call test daa add add dec inc add xchg inc add add add adc in add add inc add add add inc add xchg inc add add add adc lock add inc add add add jne fs inc add add add adc hlt add add inc add add add dec inc add xchg inc add add add adc clc add add inc add add push dec inc add xchg inc add add inc add add add add inc add add add xorl or add inc add add add add inc add add or inc add xchg inc add add inc add add add pusha test adc add add add add inc add xchg inc add add add add add inc add add add dec inc add xchg inc add add add adc or add pusha test add add and add xchg inc add add add pop add add add jl add (bad) (bad) incl add add add add add jl add (bad) (bad) incl add add xor js inc add add inc add inc add xor add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add xor adc push inc add inc add xor add inc add add inc add inc add xor add inc add add inc add inc add xor inc add add inc add inc add xor inc add add inc add inc add inc add inc add add inc add inc add xor adc push inc add inc add xor adc push inc add inc add xor inc add add inc add inc add ss add inc add add inc add inc add ss add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add xor adc push inc add inc add ss add inc add add inc add inc add ss add inc add add inc add inc add aaa inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add xor adc push inc add inc add xor adc push inc add inc add aaa inc add inc add add inc add inc add cmp js inc add add inc add inc add cmp js inc add add inc add inc add inc add inc add add inc add inc add xor adc push inc add inc add xor adc push inc add inc add cmp js inc add add inc add inc add cmp js inc add add inc add inc add cmp js inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add xor adc push inc add inc add cmp js inc add add inc add inc add cmp js inc add add inc add inc add cmp js inc add add inc add inc add cmp js inc add add inc add inc add inc add inc add add inc add inc add xor adc push inc add inc add xor adc push inc add inc add cmp js inc add add inc add inc add cmp js inc add add inc add inc add cmp js inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add xor adc push inc add inc add cmp js inc add add inc add inc add cmp js inc add add inc add inc add cmp add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add xor adc push inc add inc add add add jns add add add in add (bad) (bad) incl add add jns add add add add jge add add add add add add add add add add nop push inc add add add inc add inc add add add push jl nop mov mov add add add pusha test pop add add inc add mov pop add add adc cmp add pusha test add add lods pop inc add mov add add inc add add add pusha test xor add or add mov xor add inc add add add pusha test das add add add mov das add add adc inc add add inc add add rcrb mov mov or add inc add add add pusha test add add sbb inc add mov add add inc add add add inc add add add inc add mov sbb add inc add add add pusha test and add aam inc add mov and add inc add add add inc add add add add add pop inc add mov xor add add add pusha test sub add mov add mov sub add inc add add add inc add add add pop inc add mov adc add inc add add add pusha test xor add inc pop inc add mov xor add inc add add add inc add add add xorl push add add adc push test sub add cld pop inc add mov sub add inc add add add inc add add add inc add mov add add inc add add add pusha test or add add add add jne js inc add add add add inc add add adc add mov sbb add inc add add add pusha test daa add add add mov daa add add adc jl add pusha test sub add add add add pusha inc add mov sub add add test pop add add inc add mov pop add add adc test add pusha test and add add add add xorl and add add test sbb add fsubl add mov sbb add inc add add inc add add add bound mov mov sbb add inc add add test or add xchg bound mov mov or add inc add add inc add add add bound mov mov sub add inc add add test adc add dec arpl mov mov adc add inc add add inc add add add add add xorl add add add test sub add add inc add lea sub add inc add add inc add add add inc add lea push add add adc test add pusha test add add jne inc lea add add adc lods add add inc add add add gs add lea adc add inc add add test xor add je inc add lea xor add inc add add inc add add add gs add lea and add inc add add test xor add sub inc add lea xor add inc add add inc add add add xorl push add add adc rolb add inc add add add inc add lea and add inc add add add add inc add add add inc add lea and add inc add add add add inc add add add jne mov add add adc int3 add add inc add add clc addr16 add lea add add inc add add add add inc add add add add add add lea sbb add add add add inc add add add xorl or add inc add add add add inc add add add inc add lea or add inc add add add add inc add add add inc add lea add add adc loopne add pusha test adc add les add mov adc add inc add add add add inc add add add push add mov push add add adc call test add add add mov add add adc in add add inc add add add push add mov sub add inc add add add add inc add add add add add inc add mov adc add add add add inc add add add xorl sbb add inc add add add add inc add add in imul xorl adc add inc add add add add inc add add add inc add mov xor add inc add add add add inc add add add jne mov or add inc add add add pusha test pop add add insl inc add mov pop add add adc or add pusha test and add pop insl inc add mov and add inc add add add pusha test sldt add xorl sldt add pop add add add jl add (bad) (bad) incl add add add add inc add jl add (bad) (bad) incl add add push inc add add inc add inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add inc add push inc add add inc add inc add push inc add add inc add inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add inc add push inc add add inc add inc add inc add push inc add add inc add inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add inc add push inc add add inc add inc add push inc add add inc add inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add inc add push inc add add inc add inc add inc add push inc add add inc add inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add inc add push inc add add inc add inc add inc add push inc add add inc add inc add push inc add add inc add inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add inc add push inc add add inc add inc add push inc add add inc add inc add push inc add add inc add inc add push inc add push inc add add inc add inc add push inc add push inc add add inc add inc add pop inc add push inc add add inc add inc add inc add push inc add add inc add inc add inc add push inc add add inc add inc add push inc add add inc add inc add pop inc add push inc add add inc add inc add pop inc add push inc add add inc add inc add pop inc add push inc add add inc add inc add pop inc add push inc add add inc add inc add inc add push inc add add inc add inc add push inc add add inc add inc add push inc add add inc add inc add pop inc add push inc add add inc add inc add pop inc add push inc add add inc add inc add pop inc add push inc add add inc add inc add add add jns add add add (bad) incl add add jp add add add jg add outsl inc add add add add add outsl inc add add add outsl inc add add add inc add add add outsl inc add add add ja add sbb add and add fwait inc add adc xor add pusha test or add call xorl or add inc add add add add inc add add add add add add fwait inc add add add add pusha test add add mov xorl add add inc add add add pusha test and add add add add js add fwait inc add add add add inc add add add inc add fwait inc add add add adc dec add add inc add add add jne add inc add add add adc dec add add inc add add add jp add pushf inc add add add adc push add add inc add add add add pushf inc add add add adc push add add inc add add add jp add pushf inc add add add adc pop add add inc add add add inc add pushf inc add add add adc pop add add inc add add add xorl push add add adc pusha add add inc add add add jnp add pushf inc add add add adc add add inc add add add jl add pushf inc add add add adc push test add add xchg jl add pushf inc add add add adc insb add add inc add add add jl add pushf inc add add add adc jo add pusha test or add dec jge add pushf inc add add add adc je add pusha test xor add test inc add pushf inc add add add adc js add pusha test xor add add inc add pushf inc add add add adc jl add pusha test adc add pusha jle add pushf inc add add inc add add test or add mov xorl or add inc add add inc add add add jg add pushf inc add add add adc mov add pusha test sbb add je inc add pushf inc add add add adc mov add pusha test push add add jg add pushf inc add add add adc nop add add inc add add add inc add popf inc add add add adc xchg add add inc add add add xorl add add adc cwtl add add inc add add add add add addb xorl sbb add add inc add add add add add inc add popf inc add add add test and add pushf addl xor inc add add add adc movsb add add inc add add add addl cmp inc add add add adc test add pusha test add add add popf inc add add add adc lods add add inc add add add xorl sub add inc add add test sub add or inc add popf inc add add add adc mov add pusha test aaa add add inc add popf inc add add add adc mov test sbb add les jne jl inc add add inc add add inc add add add test mov popf inc add add add adc rolb add inc add add add add popf inc add add add adc les add pusha test adc add fadds add add add adc enter pusha test add add add add add jne mov inc add add add add add inc add add add add add xorl or add add add add inc add add add test mov popf inc add add add adc aam add pusha test xor add dec xchg mov popf inc add add inc add add add add inc add add add jne lock inc add add add adc faddl add pusha test sbb add add jne cld popf inc add add add adc loopne add pusha test add add pop xchg mov sahf inc add add inc add add add add inc add add add xorl xor add inc add add add add inc add add add add add inc add sahf inc add add add add add inc add add add inc add pushf inc add add add adc lock add inc add add add mov mov sahf inc add add add adc hlt add add inc add add add mov mov sahf inc add add add adc clc add add inc add add add jne push sahf inc add add add adc cld add add inc add add add mov mov sahf inc add add add adc add add pusha test and add cmp inc add sahf inc add add add adc add add pusha test push add add xorl push add add adc or add pusha test sub add hlt mov mov sahf inc add add inc add add add aam inc add (bad) (bad) incl add add add add inc add jl add (bad) (bad) incl adc adc add pusha test and add in inc add sahf inc add add add add sub add adc push inc add inc add inc add adc push inc add inc add inc add adc push inc add inc add outsb inc add add inc add inc add outsl inc add adc push inc add inc add outsl inc add adc push inc add inc add jo add adc push inc add inc add inc add adc push inc add inc add inc add adc push inc add inc add outsb inc add add inc add inc add outsb inc add add inc add inc add jo add adc push inc add inc add jno add adc push inc add inc add jno add adc push inc add inc add inc add adc push inc add inc add outsb inc add add inc add inc add outsb inc add add inc add inc add jno add adc push inc add inc add jno add adc push inc add inc add jb add adc push inc add inc add inc add adc push inc add inc add inc add adc push inc add inc add outsb inc add add inc add inc add jb add adc push inc add inc add jb add adc push inc add inc add jae add adc push inc add inc add jae add adc push inc add inc add inc add adc push inc add inc add outsb inc add add inc add inc add outsb inc add add inc add inc add jae add adc push inc add inc add je add adc push inc add inc add je add adc push inc add inc add inc add adc push inc add inc add inc add adc push inc add inc add outsb inc add add inc add inc add je add adc push inc add inc add je add adc push inc add inc add jne add adc push inc add inc add inc add adc push inc add inc add inc add adc push inc add inc add outsb inc add add inc add inc add outsb inc add add inc add inc add jne add adc push inc add inc add jbe add adc push inc add inc add jbe add adc push inc add inc add inc add adc push inc add inc add outsb inc add add inc add inc add outsb inc add add inc add inc add jbe add adc push inc add inc add jbe add adc push inc add inc add ja add adc push inc add inc add inc add adc push inc add inc add inc add adc push inc add inc add outsb inc add add inc add inc add ja add adc push inc add inc add add add add add (bad) incl add add add add add add jbe mov add add xchg inc add add add add add mov add add mov add add mov add mov push xchg inc add inc add add add jl in xchg inc add xchg inc add adc xor add pusha test or add adcb add inc add add add adc cmp add pusha test xor add fcoml jne sbb inc add add add adc cmp add pusha test xor add cmp jne sub add inc add add add pusha test daa add add jne xor inc add add add adc inc add add inc add add add xchg inc add xchg inc add add add adc dec add add inc add add add add add add xchg inc add add add add inc add add test inc add xchg inc add add inc add add add pusha test pop add add inc add xchg inc add add add adc push add add inc add add add inc add xchg inc add add add adc pop add add inc add add mov xorl adc add inc add add add inc add add add cltd inc add xchg inc add add add adc pusha add add inc add add add add xchg inc add add add adc add add inc add add rcrb jne mov add add adc push test sbb add sub inc add xchg inc add add add adc insb add add inc add add add xorl or add inc add add add pusha test or add in inc add xchg inc add add inc add add add inc add add add inc add xchg inc add add add adc js add pusha test add add pushf fwait inc add xchg inc add add add adc jl add pusha test and add clc fwait inc add xchg inc add add add adc addb add inc add add add add xchg inc add add add adc test add pusha test push add add xorl push add add adc mov add pusha test add add jne and add inc add add inc add add add add add inc add xchg inc add add add test sbb add add add add popf inc add xchg inc add add add inc add add add sahf inc add xchg inc add add add adc cwtl add add inc add add add add xchg inc add add add adc pushf add add inc add add add sahf inc add xchg inc add add add adc mov test adc add add add add inc add xchg inc add add add inc add add add xorl add add inc add add test sbb add in lahf inc add xchg inc add add add adc lods add add inc add add add add add inc add xchg inc add add add test and add movsb mov jne mov add add adc mov add pusha test aaa add add mov jne enter aaa add add adc mov test add add add add add add xchg inc add add add inc add add add xorl pop add add adc rolb add inc add add add inc add xchg inc add add add adc les add pusha test adc add jo inc add xchg inc add add add adc enter pusha test sub add int3 mov jne add inc add add add adc int3 add add inc add add add mov jne adc add adc rolb add pusha test and add test jne sbb inc add add add adc aam add pusha test xor add loopne inc add xchg inc add add add adc fadds add pusha test sub add cmp inc add xchg inc add add inc add add add add inc add add add xorl xor add inc add add add add inc add add add movsb inc add xchg inc add add add adc in add pusha test sbb add push movsl inc add xchg inc add add add adc call test sub add lods movsl inc add xchg inc add add add adc in add add inc add add add cmpsb inc add xchg inc add add add adc lock add inc add add add add xchg inc add add add adc hlt add add inc add add shlb add add inc add add add add jl add (bad) (bad) incl add add add add inc add jl add (bad) (bad) incl adc cld add add inc add add add xorl adc add inc add add add add inc add add add add add inc add xchg inc add add add add pusha test push add add inc add xchg inc add add add adc or add pusha test sbb add les jne fcoml add adc or add pusha test adc add and jne in inc add add add adc adc add pusha test add add jl inc add xchg inc add add add add add mov inc mov adc push inc add inc add mov inc mov adc push inc add inc add lea inc mov adc push inc add inc add lea inc mov adc push inc add inc add inc add inc add add inc add inc add mov adc push inc add inc add mov adc push inc add inc add lea inc mov adc push inc add inc add mov inc mov adc push inc add inc add mov inc mov adc push inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add mov adc push inc add inc add mov inc mov adc push inc add inc add mov inc mov adc push inc add inc add popl inc mov adc push inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add mov adc push inc add inc add mov adc push inc add inc add popl inc mov adc push inc add inc add nop inc add inc add add inc add inc add nop inc add inc add add inc add inc add inc add inc add add inc add inc add mov adc push inc add inc add mov adc push inc add inc add nop inc add inc add add inc add inc add nop inc add inc add add inc add inc add xchg inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add mov adc push inc add inc add xchg inc add inc add add inc add inc add xchg inc add inc add add inc add inc add xchg inc add inc add add inc add inc add xchg inc add inc add add inc add inc add inc add inc add add inc add inc add mov adc push inc add inc add mov adc push inc add inc add xchg inc add inc add add inc add inc add xchg inc add inc add add inc add inc add xchg inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add mov adc push inc add inc add xchg inc add inc add add inc add inc add xchg inc add inc add add inc add inc add xchg inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add mov adc push inc add inc add mov adc push inc add inc add xchg inc add inc add add inc add inc add xchg inc add inc add add inc add inc add xchg inc add inc add add inc add inc add inc add inc add add inc add inc add add add jns add add add add (bad) (bad) incl add add inc add add enter push stos inc add add add add push stos inc add add add inc add add add add add add inc add add add mov add inc add add add pop jge mov sahf inc add adc xor add pusha test add add mov add sahf inc add add add adc cmp add pusha test adc add je inc add sahf inc add add add adc cmp add pusha test sbb add (bad) mov add lahf inc add add add adc inc add add inc add add add inc add lahf inc add add add adc inc add add inc add add mov add lahf inc add add inc add add add pusha test sub add in inc add lahf inc add add inc add add add inc add add add inc add lahf inc add add add adc push add add inc add add add jne cmp add inc add add add inc add add clc mov add lahf inc add add inc add add add pusha test push add add add lahf inc add add add adc pop add add inc add add add xorl or add inc add add add pusha test or add or inc add lahf inc add add add adc add add inc add add push xorl xor add inc add add add pusha test or add add add add mov add lahf inc add add add add inc add add add mov jne pushf lahf inc add add add adc jo add pusha test push add add add lahf inc add add add adc je add pusha test sub add fdivrs jne adc inc add add add adc js add pusha test or add xor inc add lahf inc add add add adc jl add pusha test add add xorl add add adc addb add inc add add add mov jne in inc add add add adc test add pusha test aaa add add inc add lahf inc add add add adc mov add pusha test add add movsb mov jne cld lahf inc add add add adc mov add pusha test adc add add jne add inc add add add adc nop add add inc add add add add mov add inc add add inc add add add add add xorl and add add test add add adc inc add mov add inc add add inc add add add inc add mov add inc add add test sbb add add add add mov jne dec mov add inc add add inc add add add mov jne push mov add inc add add test sbb add test jne mov add inc add add inc add add add mov jne js inc add add add adc mov add pusha test and add cmp inc add mov add inc add add inc add add add xorl and add inc add add test or add hlt mov jne mov add add adc mov test sbb add push mov jne lods mov add inc add add add add inc add add add jne mov add add adc les add pusha test xor add or inc add mov add inc add add add add inc add add add add mov add inc add add add add inc add add add rolb xorl sbb add inc add add add add inc add add add inc add mov add inc add add add add inc add add add add add inc add mov add inc add add add add inc add add add add add roll xorl adc add add add add inc add add add ret mov mov add inc add add add add inc add add add jne and inc add add add adc in add pusha test daa add add ret mov mov add inc add add add add inc add add add add mov add inc add add add add inc add add add xorl sldt add adc lock add inc add add add ret inc add mov add inc add add add add inc add add pop les mov mov add inc add add add add inc add add add add add jne je inc add add add add add inc add add add add add lds mov mov add inc add add add add inc add add add add mov add inc add add add pusha test add add enter mov mov add inc add add add add inc add add add inc add mov add inc add add add pusha test add add add add mov add inc add add add add jl add (bad) (bad) incl add add add add movb xorl (bad) (bad) (bad) incl add add inc add test inc add inc add inc add test inc add inc add inc add test inc add inc add inc add stos inc add test inc add inc add inc add stos inc add test inc add inc add inc add stos inc add test inc add inc add inc add inc add test inc add inc add inc add inc add test inc add inc add inc add test inc add inc add inc add stos inc add test inc add inc add inc add stos inc add test inc add inc add inc add lods inc add test inc add inc add inc add lods inc add test inc add inc add inc add inc add test inc add inc add inc add test inc add inc add inc add test inc add inc add inc add lods inc add test inc add inc add inc add lods inc add test inc add inc add inc add lods inc add test inc add inc add inc add inc add test inc add inc add inc add inc add test inc add inc add inc add test inc add inc add inc add lods inc add test inc add inc add inc add lods inc add test inc add inc add inc add scas inc add test inc add inc add inc add inc add test inc add inc add inc add inc add test inc add inc add inc add test inc add inc add inc add test inc add inc add inc add scas inc add test inc add inc add inc add scas inc add test inc add inc add inc add scas inc add test inc add inc add inc add inc add test inc add inc add inc add test inc add inc add inc add test inc add inc add inc add scas inc add test inc add inc add inc add scas inc add test inc add inc add inc add mov add test inc add inc add inc add inc add test inc add inc add inc add inc add test inc add inc add inc add test inc add inc add inc add mov add test inc add inc add inc add mov add test inc add inc add inc add mov add test inc add inc add inc add mov add test inc add inc add inc add inc add test inc add inc add inc add test inc add inc add inc add test inc add inc add inc add mov add test inc add inc add inc add mov add test inc add inc add inc add mov add test inc add inc add inc add inc add test inc add inc add inc add inc add test inc add inc add inc add test inc add inc add inc add mov add test inc add inc add inc add mov add test inc add inc add inc add add add jns add add add inc add (bad) (bad) incl add add add add add add add movl adc inc add add add movl lock in movl lock push rolb sub inc add add add jl and inc add adc xor add pusha test add add mov inc add xchg inc add add add adc cmp add pusha test sldt add inc add xchg inc add add add adc cmp add pusha test or add push xorl or add inc add add add pusha test or add (bad) roll mov xchg inc add add add adc inc add add inc add add add rolb mov xchg inc add add add adc dec add add inc add add add add xchg inc add add add adc dec add add inc add add add rolb mov xchg inc add add add adc push add add inc add add xor inc add xchg inc add add inc add add add inc add add add xorl add add adc pop add add inc add add in roll mov xchg inc add add inc add add add inc add add add inc add xchg inc add add add adc pusha add add inc add add add jne fcoms add inc add add add inc add add add inc add xchg inc add add inc add add add pusha test and add pop aad add xchg inc add add add adc insb add add inc add add add xorl push add add adc jo add pusha test sbb add adc inc add xchg inc add add add adc je add pusha test or add add add add inc add xchg inc add add add add pusha test add add (bad) inc add xchg inc add add add adc jl add pusha test daa add add xlat inc add xchg inc add add add adc addb add inc add add test inc add xchg inc add add inc add add inc add add add xlat inc add xchg inc add add add adc mov add pusha test adc add cmp inc add xchg inc add add add adc mov add pusha test xor add cwtl fadds mov xchg inc add add add adc nop add add inc add add add fadds mov nop inc add add add adc xchg add add inc add add add inc add xchg inc add add add adc cwtl add add inc add add add jne mov add inc add add inc add add add fiaddl mov xchg inc add add add adc mov test adc add fiaddl mov xchg inc add add add adc movsb add add inc add add add fiaddl mov xchg inc add add add adc test add pusha test and add sbb inc add xchg inc add add add adc lods add add inc add add add add add inc add xchg inc add add add test push add add fildl mov xchg inc add add add adc mov add pusha test add add add add add faddl mov xchg inc add add add test pop add add jne clc xchg inc add add add adc mov test or add call xorl or add inc add add add add inc add add add add xchg inc add add add adc les add pusha test das add add xorl das add add adc enter pusha test and add add add add fldl mov xchg inc add add add add add inc add add add inc add xchg inc add add add adc rolb add pusha test xor add add add add jne dec xchg inc add add add add add inc add add add fild mov xchg inc add add add adc fadds add pusha test and add insb fild mov xchg inc add add add adc faddl add pusha test add add enter mov xchg inc add add add adc loopne add pusha test pop add add inc add xchg inc add add add adc in add pusha test sub add add add add xorl sub add add add add inc add add add add add loopne add xchg inc add add add add add inc add add cmp inc add xchg inc add add inc add add add add inc add add add jne mov add add adc hlt add add inc add add add loope add xchg inc add add add adc clc add add inc add add dec loop add xchg inc add add inc add add add add inc add add add xorl sub add inc add add add add inc add add add inc add xchg inc add add add adc add add pusha test xor add pusha jecxz add cwtl inc add add add adc or add pusha test add add mov xorl add add inc add add add pusha test sub add sbb inc add cwtl inc add add add pop add add add jl add (bad) (bad) incl add add add add add jl add (bad) (bad) incl add add movl adc push inc add inc add enter movl push inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add movl push inc add inc add movl push inc add inc add enter movl push inc add inc add leave inc add inc add add inc add inc add leave inc add inc add add inc add inc add inc add inc add add inc add inc add movl push inc add inc add movl push inc add inc add leave inc add inc add add inc add inc add leave inc add inc add add inc add inc add lret jo inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add movl push inc add inc add lret jo inc add add inc add inc add lret jo inc add add inc add inc add lret inc add inc add add inc add inc add lret inc add inc add add inc add inc add inc add inc add add inc add inc add movl push inc add inc add movl push inc add inc add lret inc add inc add add inc add inc add int3 inc add inc add add inc add inc add int3 inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add movl push inc add inc add int3 inc add inc add add inc add inc add int3 inc add inc add add inc add inc add int add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add movl push inc add inc add movl push inc add inc add int add inc add add inc add inc add into inc add inc add add inc add inc add into inc add inc add add inc add inc add inc add inc add add inc add inc add movl push inc add inc add movl push inc add inc add into inc add inc add add inc add inc add into inc add inc add add inc add inc add iret inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add movl push inc add inc add iret inc add inc add add inc add inc add iret inc add inc add add inc add inc add rolb jo inc add add inc add inc add rolb jo inc add add inc add inc add inc add inc add add inc add inc add movl push inc add inc add add add jns add add add add (bad) (bad) incl add add inc add add add add add add add add add add add add add add add mov inc add add add inc add inc add add add add add add adc xor add pusha test or add dec out inc add cwtl inc add add inc add add add add inc add add movsb out inc add cwtl inc add add inc add add add pusha test push add add out inc add cwtl inc add add add adc inc add add inc add add add add cwtl inc add add add adc inc add add inc add add add xorl or add inc add add add pusha test sub add adc inc add cwtl inc add add inc add add add inc add add add inc add cwtl inc add add add adc push add add inc add add add lock add cwtl inc add add add adc push add add inc add add add icebp inc add cwtl inc add add add adc pop add add inc add add add add add jne add inc add add add add inc add add add add add icebp inc add cltd inc add add add add pusha test pop add add inc add cltd inc add add add adc add add inc add add add xorl and add inc add add add pusha test and add hlt repnz add cltd inc add add add adc insb add add inc add add add inc add cltd inc add add add adc jo add pusha test pop add add jne push cltd inc add add add adc je add pusha test xor add or inc add cltd inc add add add adc js add pusha test add add fs inc add cltd inc add add add adc jl add pusha test adc add add add add hlt inc add cltd inc add add add test sub add add add add jne xchg cltd inc add add add inc add add js inc add cltd inc add add inc add add test add add aam inc add cltd inc add add add adc mov add pusha test aaa add add testb xorl aaa add add adc nop add add inc add add add add add jne rcrb add adc xchg add add inc add add add testb xorl daa add add adc cwtl add add inc add add add add cltd inc add add add adc pushf add add inc add add add xorl or add inc add add test sub add cld testl add add inc add add inc add add add inc add lcall inc add add test push add add jne adc inc add add add adc lods add add inc add add add stc inc add lcall inc add add test add add add lcall inc add add inc add add add stc inc add lcall inc add add test sbb add and inc add lcall inc add add inc add add add xorl das add add adc rolb add inc add add add add add cli inc add lcall inc add add add add inc add add add sti inc add lcall inc add add add add inc add add add jne je inc add add add adc int3 add add inc add add add sti inc add lcall inc add add add add inc add add add add add add lcall inc add add add add inc add add add xorl sbb add inc add add add add inc add add add inc add lcall inc add add add add inc add add add inc add lcall inc add add add add inc add add add jne les add inc add add add add inc add add add incb mov lcall inc add add add add inc add add add add lcall inc add add add add inc add add add incb mov lcall inc add add add add inc add add add inc add lcall inc add add add add inc add add add xorl sbb add inc add add add add jl add (bad) (bad) incl add add add add incl test jne in inc add (bad) (bad) incl adc cld add add inc add add add inc add fwait inc add add add adc add add pusha test and add aam inc add fwait inc add add inc add add add pusha test and add xor inc add fwait inc add add add adc or add pusha test sub add mov inc add fwait inc add add add adc or add pusha test and add call xorl and add inc add add add add inc add add inc add mov fwait inc add add add add mov inc add in add add inc add inc add in add add inc add inc add in add in add add inc add inc add out add in add add inc add inc add out add in add add inc add inc add inc add in add add inc add inc add inc add in add add inc add inc add in add add inc add inc add out add in add add inc add inc add out add in add add inc add inc add out add in add add inc add inc add inc add in add add inc add inc add inc add in add add inc add inc add in add add inc add inc add in add add inc add inc add out add in add add inc add inc add call inc add add inc add inc add call inc add add inc add inc add inc add in add add inc add inc add in add add inc add inc add in add add inc add inc add call inc add add inc add inc add call inc add add inc add inc add jmp inc add add inc add inc add inc add in add add inc add inc add inc add in add add inc add inc add in add add inc add inc add jmp inc add add inc add inc add jmp inc add add inc add inc add ljmp adc push inc add inc add ljmp adc push inc add inc add inc add in add add inc add inc add in add add inc add inc add in add add inc add inc add ljmp adc push inc add inc add jmp add in add add inc add inc add jmp add in add add inc add inc add inc add in add add inc add inc add inc add in add add inc add inc add in add add inc add inc add jmp add in add add inc add inc add jmp add in add add inc add inc add in inc add in add add inc add inc add inc add in add add inc add inc add inc add in add add inc add inc add in add add inc add inc add in add add inc add inc add in inc add in add add inc add inc add in inc add in add add inc add inc add in inc add in add add inc add inc add inc add in add add inc add inc add in add add inc add inc add in add add inc add inc add in inc add in add add inc add inc add in inc add in add add inc add inc add out inc add in add add inc add inc add add add jns add add add out add (bad) (bad) incl add add inc add add add jbe sbb inc add add add inc add add add add add add and inc add add add inc add add add add add mov push or cmp add add add jl inc mov push mov inc add add add pusha test and add loopne inc add mov and add inc add add add add inc add add cmp inc add mov xor add inc add add add pusha test push add add xorl push add add adc inc add add inc add add add or add mov pop add add adc inc add add inc add add add inc add mov and add inc add add add pusha test sub add lods or jne mov inc add add inc add add add inc add add add push inc add mov sub add inc add add add pusha test sbb add fs inc add mov sbb add inc add add add inc add add add push inc add mov or add inc add add add pusha test adc add sbb inc add mov adc add inc add add add inc add add add inc add mov xor add inc add add add pusha test push add add cmovno mov mov push add add adc add add inc add add add adc mov mov add add inc add add add pusha test or add mov inc add mov or add inc add add add inc add add add adc mov mov or add inc add add add pusha test xor add inc adc mov mov xor add inc add add add inc add add add xorl xor add inc add add add pusha test and add add add add adc mov mov and add add add inc add add add add add inc add mov adc add add test xor add mov inc add mov xor add inc add add inc add add adc inc add mov or add inc add add test sub add insb adc mov mov sub add inc add add inc add add add adc mov mov adc add inc add add test or add add add add inc add mov or add add inc add add adcb mov mov sbb add inc add add test add add adc add mov add add adc pushf add add inc add add add add add adc jne aam inc add add add test adc add xchg adc jne loopne inc add add add adc movsb add add inc add add add adc jne call add add adc test add pusha test pop add add add mov pop add add adc lods add add inc add add add add add xorl sbb add add test adc add add inc add mov adc add inc add add inc add add add inc add mov sbb add inc add add test and add mov xorl and add inc add add inc add add add add add sbb mov mov sub add add add add inc add add add add mov and add inc add add add add inc add add add sbb mov mov add add inc add add add add inc add add add inc add mov push add add adc int3 add add inc add add add xorl add add inc add add add add inc add add add sbb mov mov sbb add inc add add add add inc add add add inc add mov das add add adc fadds add pusha test sub add pushf sbb mov mov sub add inc add add add add inc add add add sbb mov mov daa add add adc loopne add pusha test or add push sbb mov mov or add inc add add add add inc add add mov inc add mov and add inc add add add add inc add add add inc add mov add add adc in add add inc add add add inc add mov sbb add inc add add add add inc add add add sbb add mov pop add add adc hlt add add inc add add add sbb jne or inc add add add adc clc add add inc add add jl inc add mov adc add inc add add add add inc add add add sbb jne sub add inc add add add add inc add add xor inc add mov add add inc add add add pusha test xor add add add add xorl xor add add add add inc add add add push inc add mov sub add inc add add add aam inc add (bad) (bad) incl add add add add inc add jl add (bad) (bad) incl adc adc add pusha test add add pop inc add mov add add add add add mov adc push inc add inc add inc add adc push inc add inc add inc add adc push inc add inc add add adc push inc add inc add add mov adc push inc add inc add add mov adc push inc add inc add add add adc push inc add inc add add add adc push inc add inc add inc add adc push inc add inc add add adc push inc add inc add add adc push inc add inc add add add adc push inc add inc add add inc add add inc add inc add add inc add add inc add inc add inc add adc push inc add inc add inc add adc push inc add inc add add adc push inc add inc add add inc add add inc add inc add add inc add add inc add inc add push inc add adc push inc add inc add inc add adc push inc add inc add inc add adc push inc add inc add add adc push inc add inc add add adc push inc add inc add push inc add adc push inc add inc add pop inc add adc push inc add inc add pop inc add adc push inc add inc add inc add adc push inc add inc add add adc push inc add inc add add adc push inc add inc add pop inc add adc push inc add inc add pop inc add adc push inc add inc add or mov adc push inc add inc add inc add adc push inc add inc add inc add adc push inc add inc add add adc push inc add inc add or mov adc push inc add inc add or mov adc push inc add inc add or mov adc push inc add inc add or mov adc push inc add inc add inc add adc push inc add inc add add adc push inc add inc add add adc push inc add inc add or mov adc push inc add inc add or mov adc push inc add inc add or mov adc push inc add inc add inc add adc push inc add inc add inc add adc push inc add inc add add adc push inc add inc add or mov adc push inc add inc add or mov adc push inc add inc add or mov adc push inc add inc add inc add adc push inc add inc add inc add adc push inc add inc add add adc push inc add inc add add adc push inc add inc add add add jns add add add inc add (bad) (bad) incl add add inc add add add jbe mov inc add add add test add add mov inc add add add add add add mov add add inc add inc add add add test push test inc add add add pusha test xor add js inc add test xor add inc add add add add inc add add add sub mov (bad) inc add add add adc cmp add pusha test xor add add add add sub mov addb add add adc inc add add inc add add add jne sub add adc inc add add inc add add call xorl adc add inc add add add pusha test sldt add add addl add add adc dec add add inc add add add xorl adc add inc add add add pusha test add add add add add sub mov test add add add add inc add add add inc add test sbb add inc add add add pusha test daa add add jne test inc add add add adc pop add add inc add add add sub jne mov add add adc pusha add add inc add add add add test add add inc add add add inc add add add add add sub jne aam inc add add add add pusha test xor add and inc add test xor add inc add add add inc add add add xorl or add inc add add add pusha test sub add fsubrl inc add xchg sub add inc add add add inc add add add das inc add xchg sub add inc add add add pusha test sub add xchg das inc add xchg sub add inc add add add inc add add add das inc add xchg aaa add add adc addb add inc add add dec xor mov xchg add add inc add add inc add add add xorl add add inc add add test das add add inc add xchg das add add adc mov add pusha test and add pusha xor mov xchg and add inc add add test sub add mov xorl sub add inc add add inc add add add xor mov xchg pop add add adc cwtl add add inc add add add add xchg pop add add adc pushf add add inc add add add xor mov xchg adc add inc add add test sub add sub inc add xchg sub add inc add add inc add add add xorl adc add inc add add test or add in inc add xchg or add inc add add inc add add add inc add xchg and add inc add add test sbb add pushf xor add xchg sbb add inc add add inc add add add xor add xchg push add add adc mov test add add add xchg add add adc mov test push add add xorl push add add adc rolb add inc add add add inc add xchg push add add adc les add pusha test or add push xorl or add inc add add add add inc add add add ss add xchg adc add inc add add add add inc add add add aaa inc add xchg add add adc rolb add pusha test xor add jl inc add xchg xor add inc add add add add inc add add add aaa inc add xchg xor add inc add add add add inc add add add inc add xchg or add inc add add add add inc add add add add add xorl or add add add add inc add add add cmp mov xchg add add inc add add add add inc add add add inc add xchg xor add inc add add add add inc add add add add add jne nop xchg adc add add add add inc add add add cmp mov xchg and add inc add add add add inc add add pop cmp mov xchg or add inc add add add add inc add add add xorl sbb add inc add add add add inc add add add add add inc add xchg sub add add add add jl add (bad) (bad) incl add add add add inc add jl add (bad) (bad) incl adc add add pusha test sbb add add inc add xchg sbb add inc add add add pusha test sbb add add add add inc add xchg sbb add add add add inc add add mov xorl sbb add inc add add add pusha test push add add cmp jne add add inc add add add add inc add add add add mov add add add add and adc push inc add inc add and cmp inc add add inc add inc add and cmp inc add add inc add inc add and cmp inc add add inc add inc add inc add and adc push inc add inc add and adc push inc add inc add and adc push inc add inc add and cmp inc add add inc add inc add and cmp inc add add inc add inc add and cmp inc add add inc add inc add inc add and adc push inc add inc add inc add and adc push inc add inc add and adc push inc add inc add and cmp inc add add inc add inc add and cmp inc add add inc add inc add and cmp inc add add inc add inc add and cmp inc add add inc add inc add inc add and adc push inc add inc add and adc push inc add inc add and adc push inc add inc add and cmp inc add add inc add inc add and add and adc push inc add inc add and add and adc push inc add inc add inc add and adc push inc add inc add inc add and adc push inc add inc add and adc push inc add inc add and add and adc push inc add inc add and add and adc push inc add inc add and inc add add inc add inc add inc add and adc push inc add inc add inc add and adc push inc add inc add and adc push inc add inc add and adc push inc add inc add and inc add add inc add inc add es add and adc push inc add inc add es add and adc push inc add inc add inc add and adc push inc add inc add and adc push inc add inc add and adc push inc add inc add es add and adc push inc add inc add es add and adc push inc add inc add daa inc add and adc push inc add inc add inc add and adc push inc add inc add inc add and adc push inc add inc add and adc push inc add inc add daa inc add and adc push inc add inc add daa inc add and adc push inc add inc add sub cmp inc add add inc add inc add sub cmp inc add add inc add inc add inc add and adc push inc add inc add and adc push inc add inc add and adc push inc add inc add sub cmp inc add add inc add inc add sub cmp inc add add inc add inc add sub cmp inc add add inc add inc add inc add and adc push inc add inc add add add jns add add add (bad) incl add add inc add add add add clc push jl dec ds add add add mov add dec ds add add add inc add add add add add add inc add add add inc inc add cmovne add add nop fs loopne inc add mov adc xor add pusha test add add inc inc add mov add inc add add add add inc add add insb inc inc add mov add inc add add add pusha test sbb add enter mov mov add inc add add add pusha test and add and inc add mov add inc add add add inc add add add xorl xor add inc add add add pusha test daa add add dec inc add mov add inc add add add inc add add add dec inc add mov add inc add add add pusha test sub add xchg dec inc add mov add inc add add add inc add add add dec inc add mov add inc add add add pusha test sub add dec dec inc add mov add inc add add add inc add add add xorl sldt add adc pusha add add inc add add add inc add mov add inc add add add inc add add add add add inc add mov add inc add add add pusha test adc add mov xorl adc add inc add add add inc add add add add add dec inc add mov add inc add add add pusha test pop add add add mov add inc add add add inc add add add dec inc add mov add inc add add add pusha test adc add sub inc add mov add inc add add add inc add add add xorl sub add inc add add test xor add in inc add mov add inc add add inc add add add inc add mov add inc add add test or add pushf dec inc add mov add inc add add inc add add add dec inc add mov add inc add add test or add push dec inc add mov add inc add add inc add add add xorl pop add add adc cwtl add add inc add add add inc add mov add inc add add inc add add add inc add mov add inc add add test sbb add add add add push inc add mov add inc add add inc add add and add mov add inc add add test xor add add add add add mov add inc add add inc add add fcoms add mov add inc add add test sbb add xor inc add mov add inc add add inc add add nop push inc add mov add inc add add test add add add add add push inc add mov add inc add add inc add add add inc add mov add inc add add add add inc add add add jne fsubl add inc add add add add inc add add add push inc add mov add inc add add add add inc add add add add add add mov add inc add add add add inc add add add add add xorl sub add add add add inc add add add jne adc inc add add add adc aam add pusha test and add jo inc add movsb inc add add add adc fadds add pusha test xor add int3 push inc add movsb inc add add inc add add add add inc add add add push inc add movsb inc add add add adc loopne add pusha test pop add add jne inc movsb inc add add add adc in add pusha test sbb add loopne inc add movsb inc add add add adc call test sbb add cmp inc add movsb inc add add inc add add add add inc add add add xorl add add inc add add add add inc add add add push inc add movsb inc add add add adc hlt add add inc add add add inc add movsb inc add add add adc clc add add inc add add add jne mov inc add add add adc cld add add inc add add add pop inc add movsb inc add add add pop add add add jl add (bad) (bad) incl add add add add add jl add (bad) (bad) incl adc add add pusha test xor add clc pop inc add movsb inc add add add adc or add pusha test adc add push pop inc add movsb inc add add add adc or add pusha test and add mov inc add movsb inc add add add adc adc add pusha test add add inc add movsb inc add add add add add inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add ds add cmp inc add inc add inc add ds add cmp inc add inc add inc add aas inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add aas inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add inc inc add cmp inc add inc add inc add add add jns add add add in add (bad) (bad) incl add add add add add add sub add pop inc add add add add loopne inc add add add pop inc add add add pop inc add add add pop inc add add add or add add pop insl jge sbb inc add adc xor add pusha test sub add test inc add movsl inc add add add adc cmp add pusha test sbb add add inc add movsl inc add add add adc cmp add pusha test sbb add add add add inc add movsl inc add add add add pusha test push add add jne push add add adc inc add add inc add add sbb add movsl inc add add inc add add add pusha test daa add add add movsl inc add add add adc dec add add inc add add add inc add movsl inc add add add adc push add add inc add add add inc add movsl inc add add add adc push add add inc add add add xorl das add add adc pop add add inc add add add add add addr16 add movsl inc add add add add inc add add add inc add movsl inc add add add adc pusha add add inc add add add jne fsubs add inc add add add inc add add add push jne loopne inc add add add adc push test xor add add add add add movsl inc add add add add inc add add add xorl pop add add adc jo add pusha test sub add or inc add cmpsb inc add add inc add add add inc add add push xorl sbb add inc add add add pusha test add add les add cmpsb inc add add add adc jl add pusha test add add and add cmpsb inc add add add adc addb add inc add add jl inc add cmpsb inc add add inc add add inc add add add imul xorl and add inc add add test or add add add add inc add cmpsb inc add add add inc add add add xorl and add inc add add test adc add add add add insb inc add cmpsb inc add add add inc add add add inc add cmpsb inc add add add adc cwtl add add inc add add movsb insl inc add cmpsb inc add add inc add add inc add add add outsb inc add cmpsb inc add add add adc mov test or add pop outsb inc add cmpsb inc add add inc add add inc add add add xorl adc add inc add add test sbb add adc inc add cmpsb inc add add add adc lods add add inc add add add inc add cmpsb inc add add add adc mov add pusha test sbb add int3 outsl inc add cmpsb inc add add add adc mov add pusha test sub add sub add cmpsb inc add add add adc mov test add add jne cld cmpsb inc add add add adc mov test or add loopne inc add cmpsl inc add add add adc rolb add inc add add add inc add cmpsl inc add add add adc les add pusha test sub add cwtl jno add cmpsl inc add add add adc enter pusha test xor add hlt jno add cmpsl inc add add add adc int3 add add inc add add add inc add cmpsl inc add add add adc rolb add pusha test add add lods jb add cmpsl inc add add add adc aam add pusha test xor add or add cmpsl inc add add add adc fadds add pusha test pop add add add cmpsl inc add add add adc faddl add pusha test xor add (bad) jae add cmpsl inc add add add adc loopne add pusha test and add add add add inc add cmpsl inc add add add add add inc add add add add add inc add cmpsl inc add add add add add inc add add add je add cmpsl inc add add add adc in add add inc add add add jne add cmpsl inc add add add adc lock add inc add add add jne les add inc add add add add inc add add add jne add cmpsl inc add add add adc clc add add inc add add add add cmpsl inc add add add adc cld add add inc add add add xorl pop add add adc add add pusha test adc add cld jbe add cmpsl inc add add add adc add add pusha test add add pop ja add test add add inc add add add add inc add add add jne sbb inc add add add pop add add aam inc add (bad) (bad) incl add add add add js add jl add (bad) (bad) incl adc adc add pusha test push add add jne sub add add add call pop inc add add inc add inc add pop inc add inc add add inc add inc add pop inc add inc add add inc add inc add inc add inc add add inc add inc add pop inc add add inc add inc add pop inc add add inc add inc add pop inc add inc add add inc add inc add pop inc add inc add add inc add inc add pop inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add pop inc add add inc add inc add pop inc add inc add add inc add inc add pop inc add inc add add inc add inc add pop inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add pop inc add add inc add inc add pop inc add add inc add inc add pop inc add inc add add inc add inc add pop inc add inc add add inc add inc add pop inc add inc add add inc add inc add inc add inc add add inc add inc add pop inc add add inc add inc add pop inc add add inc add inc add pop inc add inc add add inc add inc add pop inc add inc add add inc add inc add pusha inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add pop inc add add inc add inc add pusha inc add inc add add inc add inc add pusha inc add inc add add inc add inc add popa inc add inc add add inc add inc add popa inc add inc add add inc add inc add inc add inc add add inc add inc add pop inc add add inc add inc add pop inc add add inc add inc add popa inc add inc add add inc add inc add bound push adc push inc add inc add bound push adc push inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add pop inc add add inc add inc add bound push adc push inc add inc add bound push adc push inc add inc add arpl push adc push inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add pop inc add add inc add inc add pop inc add add inc add inc add arpl push adc push inc add inc add fs add inc add add inc add inc add fs add inc add add inc add inc add inc add inc add add inc add inc add pop inc add add inc add inc add add insb out add (bad) (bad) incl add add add mov iret sbb in inc pop sub aas or or or or push jns add jnp add add add add add add add add add (bad) decl add add jnp add add xchg jnp add incl add add add and (bad) (bad) (bad) lcall mov add add add cmpb (bad) incl add add add (bad) (bad) lcall mov or inc add add add jbe (bad) incl add add add push inc add (bad) (bad) lcall mov adc inc add add add jle add incl add add add inc add (bad) (bad) lcall mov sbb inc add add add jg add incl add add add inc add (bad) (bad) lcall mov sub inc add add add jbe (bad) incl add add add inc add (bad) (bad) lcall mov cmp add add jo jbe (bad) incl add add add in add (bad) (bad) lcall mov dec jl add add add incl add add add (bad) (bad) lcall mov pop jl add add add jg add incl add add add test (bad) lcall mov pusha jl add add add incl add add add cmp (bad) lcall mov jl inc add add add push jl (bad) incl add add add inc add (bad) (bad) lcall mov mov add add sbb add incl add add add outsl jb gs xor add push arpl je arpl add add outsl imul jb je push jb fs add jb xor insl jo jb insl gs gs add add je bound jae add inc imul outsl outsb jae add add inc jbe jb imul je jb dec gs imul outsb je popa insb jbe jb gs jo popa jb je jb gs add arpl arpl outsb jae add add jae popa outsb outsb jae add scas sbb mov pop inc test xchg mov push es addr16 dec xchg pop and test into or push bound es rclb mov cmpsb cmp dec mov xor dec jne sbb dec lods xor or stos add xchg inc outsl jb add add cs push add xor lods jge add jle add add dec pop inc add or je jmp push mov call jmp add add add add pop push jb addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add in jl add add add add add add add inc add add push xor add add xor add pop add add inc push xor add or add dec outsb jae jb dec outsb jne add inc add add pop pop inc add or je jmp push mov call jmp add add add add jb gs xor add add adc imul outsl push jns je insl push imul cld jge add inc add add fs inc add or je jmp push mov call jmp add add add add insb dec outsl jbe dec gs outsl jb add add jge add add add jo inc add or je jmp push mov call jmp add add add add gs dec outsb jne add inc add add jl inc add or je jmp push mov call jmp add add outsb jne push jb jo inc js add add push add add imul inc inc inc add add jge add jle add add mov inc add or je jmp push mov call jmp add add add add inc popa fs jne gs jb je push je add add jge add add add xchg pop inc add or je jmp push mov call jmp add add add add imul or add inc gs imul outsl jb add jg add add mov add add add add or je jmp push mov call jmp add add add add outsb insl insl cs insb add add add add imul jb jo jb dec gs fs add jg add jg add add lods pop inc add or je jmp push mov call jmp add add add add je gs outsl popa jb dec popa jns jne dec popa insl gs add lods jge add inc add add mov add add add add or je jmp push mov call jmp add add add insl outsl jne gs gs outsb je dec popa je imul imul je jb add dec jns outsl imul add add les inc add or je jmp push mov call jmp add add add inc insb outsl jae inc imul jg add addb add rolb inc add or je jmp push mov call jmp add add add add data16 je imul addr16 js add nop jg add addl faddl inc add or je jmp push mov call jmp add add add add dec outsb push arpl add lods jge add add call add add add add or je jmp push mov call jmp add add outsl outsb jbe jb inc gs jne je outsl arpl add add cld jge add addl hlt pop inc add or je jmp push mov call jmp add add add add jne inc push imul add add inc add add add inc add or je jmp push mov call jmp add add jbe popa push gs jns je insl inc jb outsl jb dec outsl outsb outsb outsl insl imul imul xor push add add add add cmp add cmp add inc add add add add dec add add add push add add add push add add jne insb add add imul outsb add insl add cmp and add add add add mov adc add inc add data16 add add cmp and add add sbb add push add outsl add add arpl jae add cmp and add add sbb add inc add add jae add jae add cmp and add add adc add inc add add jae add push add add add add add add add add add add add add add add xor xor add add xor xor add add sbb add add xchg add add adc add add add push inc inc ss dec dec add add pop pop jbe popa push je dec xor add jbe popa dec xor je add dec gs gs outsb fs pop pop jbe popa inc jo xor add pop pop jbe popa dec xor jns add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa inc jb inc gs jb arpl add pop pop jbe popa inc gs inc jb xor add outsb gs outsb pop pop jbe popa push popa jb outsl jo add add pop pop jbe popa inc jb push popa jb pop pop jbe popa inc jb inc outsl jo add add pop pop jbe popa inc jb gs je add add pop pop jbe popa push je inc popa je pop pop jbe popa push je dec outsl jbe add add pop pop jbe popa push je inc outsl jo add add pop pop jbe popa push jb outsb je bound add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa inc jb gs popa jb add add jbe popa inc jb jae add pop pop jbe popa push popa jb gs add add pop pop jbe popa push gs bound jb inc outsl outsb jae jb arpl add inc (bad) dec cmpsl or jmp sub in in sbb pop cmc mov in and int cmc adc inc mov mov mov lods arpl mov rclb push std sub dec lods xor or stos add xchg bound imul jb add imul gs gs add insb imul jae inc outsl jb push insl jae gs jae add add push jo jb outsb addr16 gs dec insb imul addr16 gs add add insb jns outsl jb jae add fs je insb imul add add inc jb jbe outsb xor add add outsl fs je popa outsb fs gs cmp add add outsb jne jne imul jns jo popa fs jae add add dec outsl insl insl outsl fs jae add gs bound jae popa outsb fs insb fs add add jb add add outsl outsb outsl addr16 jo imul popa gs outsl jb push add add dec jbe je outsb xor add add popa jb gs add je push jo add inc outsl insb imul add inc insb jns outsb je jo fs jb add push outsl gs outsl outsl fs add jae jae add push gs jb jae dec jo imul add imul bound jo insb insb outsb add inc arpl data16 jb outsb addr16 add bound addr16 jb popa outsb imul gs gs jb data16 outsb gs arpl imul outsl outsb add bound imul jae add inc jae outsl arpl je outsl outsb jae imul imul gs add add outsl jb bound dec popa jae gs add popa jo outsl outsb add jae data16 gs bound outsb fs popa jae imul dec jne insb popa jb xor add jb imul je insb outsl bound imul add add popa jbe gs jae jae je arpl outsl imul add jo imul xor imul dec popa jb imul je jb gs gs add insl gs imul jb gs popa outsb add add inc jns insl gs jb outsb gs add add outsl addr16 insl xor or sbb push push sti (bad) pop pop rorb push xchg sbb mov (bad) jg test mov pop inc insb add inc mov cs mov jns push xor inc dec inc pop mov addr16 imul jae add add dec outsb fs gs insl outsb fs add add jb jb fs outsl add add je outsb outsl insl imul add dec gs insl outsl jb push imul jb add jae outsb gs add jo popa bound imul imul addr16 jb gs add jbe jae gs outsb addr16 jns je add add je gs popa bound bound arpl outsl jne add jae gs inc popa outsb data16 add jae gs gs add popa addr16 outsb addr16 jo popa jbe add add fs insb imul add dec outsl addr16 add dec insb insb imul add outsl insl jae gs jne insl gs xor add add jbe push imul outsb add insb jns popa jb outsl jne add add push jae jne outsl jo imul jo arpl insb jns add add imul jb jae add jb imul gs add jb gs outsb fs insl jne je jae gs inc jne insb gs add push jae outsl imul gs add push arpl insb imul popa insl bound je outsb add add dec jae outsl popa jb push insl jns add add fs imul jae inc outsb je outsl jo jne imul gs insl gs gs jae jb gs add imul add inc imul gs add insb outsl jno imul add add gs imul fs inc outsl outsl bound push add jae gs jo outsl addr16 insl insl jb outsb jae add jb addr16 gs outsb outsb add jae insl imul add popa jo xor add add fs imul add arpl je jne gs add add inc outsb insb outsb fs add inc jne outsl imul je arpl add add inc jb insl outsl jb add add bound insb gs jb addr16 add push jb jb addr16 jae add inc gs jo popa outsb jae add add bound insl jae jb add add je insb jae jb outsb fs inc popa insb insb gs popa outsb jae jb outsb fs add mov int inc test lahf xor inc cld outsl or xor sbb pop or sbb inc scas dec xchg xor (bad) mov xchg lods imul sbb add popa imul outsl jb outsb addr16 je je outsl outsb jae add add jb fs outsb outsb gs add outsl outsl jae add jne jbe jb imul je outsl insl aaa add imul imul outsb add add popa jb imul insb imul add add inc jns je outsb arpl jae add add jae outsl jb arpl data16 add inc gs je gs popa jns add insl outsb je je gs gs gs add je insb jae imul add add push gs popa je jbe add add je jb popa je outsl outsb add add je insb outsl imul jne imul add add inc jb je imul insl jns imul outsb gs add popa addr16 jb outsb add add jne jae jns add add inc outsl jb gs gs xor add jo insb add add je gs jp xor add jb imul add insb gs jo push jae add add data16 jae popa outsb jae gs imul add add push outsb jb jo outsl jbe outsb gs add push jb arpl jbe add add jns insb imul inc jne popa insb popa jns xor add dec outsl insl gs jb add add imul gs imul push jb push jb add inc jb outsb jne jb outsb add dec gs add push gs add add jb outsb bound je insl popa je outsl jb jb add insl bound imul add add outsl insb outsl outsb addr16 je outsl outsb gs gs popa insb imul jae imul jb add gs je addr16 add imul add push gs jne add insl jo outsb addr16 popa fs jb xor add add jb jne fs fs imul add outsb je add jae jb gs jb gs push insb fs jae add je insb imul inc imul outsb je add jne imul add jbe jb xor add add jb jae insb fs add jle xchg js xor cltd jp or mov mov dec movsl int3 bnd cmp addr16 inc xchg jmp sbb lock dec mov sub and push outsl gs gs jb data16 outsl jbe add outsb je popa arpl gs addr16 data16 dec jbe jb insb gs jbe add push outsl insl insl gs imul arpl jae outsl jb outsb add add outsl fs je outsl outsb jae gs popa data16 gs outsb imul jne je je jb gs add add imul gs imul addr16 add inc insb outsb gs gs add inc outsb push gs add imul jae imul insb addr16 xor add jb outsl insb insb popa jb outsb jae add dec jbe jb jb gs jae outsb imul je jb add add gs gs insb gs inc insb fs gs inc imul outsb je jb xor add push push gs outsb je jae xor je jns insb add fs outsl jb fs addr16 add popa addr16 jne fs push jb jo outsl outsb imul outsb imul jae jb jbe imul add je popa outsb jae insb popa outsb je add add jns bound jae imul add jae popa popa jae outsb add add dec popa outsb imul xor add add jne push add add jo insb popa fs cmp add add bound outsb gs jae cmp je outsb imul je outsl outsb gs gs add add imul je jo je popa insb insl outsl jae outsl jo add add outsb gs outsl outsl outsb imul je jb outsb outsb gs add imul imul insl gs jns insl popa insb outsl outsb imul jne imul gs inc popa jb imul popa outsb popa xor outsw gs add add outsb outsl je je add add inc popa imul outsb add add jae jb jae imul add add jae popa insb imul aaa add imul jb gs add insb outsl outsb bound je insl add inc imul imul outsb jae add outsl imul jb outsb add arpl jne add add pop sbb inc scas popf std std bswap fisub ret in call mov call pop mov fwait mov ljmp push fsubrl (bad) sbb sbb sub ds test outsb data16 popa insb imul add jae outsb imul push outsb popa bound imul je outsb outsb add outsb imul insl add outsl jb jo outsl jb add dec popa outsb gs xor add addr16 popa jbe jb gs add add gs add addr16 gs outsl arpl add inc gs je jb gs gs xor add jb je jb cmp add dec outsl fs popa jb jae jb outsb addr16 add add imul add add outsl addr16 insl outsb jb add dec gs gs add gs gs imul add push je popa ja gs add add outsb outsl insl jae jbe jb jb gs jae add add push gs popa insb gs gs add add inc imul push imul outsb outsb gs jb imul add jo gs jae jb insl xor add add fs addr16 jb je add add insb imul fs add jo jb jae jb outsb addr16 gs add add inc jb jbe imul gs add add inc imul xor push outsb arpl imul gs popa outsb popa imul outsl jb imul je add push jo arpl imul popa jb popa xor ja popa jb outsl jb add add jne popa data16 outsb imul jb outsb arpl outsb gs xor push push add insb outsl arpl gs add push jne imul jae inc imul insb imul add add addr16 jae imul insb jns add inc gs outsb fs add add jae outsw jb jae imul outsb add add dec outsb fs gs add inc jb je imul outsl bound imul insb gs add bound gs jbe add add jbe insb fs insb jae jb add add outsl outsb jp imul jb add push jb jne jb xor add add imul add arpl outsb outsl insb imul jne jb xor popa insb arpl imul add jb je outsb jb insl insl outsb gs add aaa sub jae cli out mov fwait jge pop and (bad) jno xchg adc jl mov mov ss adc jmp dec mov shrl gs jb jae gs add push gs imul outsb imul push add outsb outsb gs add jno outsl je je outsl outsb aaa add add push outsb jbe insb imul je jb jae gs add push jns gs je popa je outsl outsb gs gs add imul insb add push insb jns add push jns popa data16 imul jb outsb gs add add popa imul add insb fs outsb imul outsb add add fs jo jb add push gs insb imul inc outsb fs jae add fs bound gs aaa add add jb push outsb jae insl gs insb push jb gs add add outsb popa outsb jae imul jae imul add jae imul push jo addr16 popa popa insb jae outsb cmp outsw insb gs add jb imul outsb jae inc jae jb outsb outsl jae add popa je jb arpl je add add dec imul push gs bound insl imul outsl bound add add inc popa insb insb outsl outsb je addr16 insl imul jbe outsb fs add inc jb jbe jb add jne imul jae jb imul add jae outsl jbe je gs gs add add addr16 outsb add jae jbe add add fs jbe imul addr16 add jb jne fs outsl insb imul imul bound jae add add push jb arpl jo fs je xor add inc outsb outsl bound gs add outsb je gs add jno popa fs jne imul add gs add bound popa arpl add insl outsl outsb je outsl jb insb outsl outsb imul bound imul add add insl popa jb je jb jne jae jae gs xor add add insb popa jb gs add push outsb imul add add popa je gs imul add jne gs imul imul xor push gs gs jb add dec jo popa je gs gs jnp jmp sub mov sbb decl mov add incb xor xchg xchg addr16 dec movsl mov outsl mov mov mov movb xchg cs popa outsb imul jb xor add imul gs gs add dec jo insb popa addr16 popa jbe gs xor add add gs gs je jae addr16 jb add push push outsl imul insb gs gs add inc insb arpl je gs popa insb add jb bound jae imul jae add add outsl arpl je add outsb popa je jb gs gs add add jae jb imul popa jae imul imul outsb gs add inc outsl insl popa imul add add dec gs jb jo jns imul data16 add push jns fs outsl insl popa cmp jne insb jne outsb imul add add jbe insb imul outsb gs add add insb imul arpl add add jae outsl outsb aaa add popa jb arpl add add addr16 je jo add arpl insb imul add jae je outsb add add jae arpl insb jae data16 popa jb add jne outsb je jb popa popa fs add add push jb fs je jbe je xor add push jb je gs add add inc outsl arpl jb add popa je jo jb outsl imul imul gs push outsl jns jae add add dec popa outsb fs popa bound xor push outsb push add fs addr16 add add popa je add outsb imul je outsb add je gs add jb arpl outsb je bound add dec popa outsb outsl insb imul outsl jae imul gs add outsb addr16 je add push outsb fs outsb addr16 jne insb jns add insl jns outsl push gs add add jb jae popa data16 gs jne gs jae gs je outsb add push arpl outsl je add add outsb add add inc outsl imul imul add gs jb arpl add jae jb jbe imul fs jae add add dec outsl outsb arpl jo gs imul gs insb insb popa fs jae xor jbe imul jb gs insb popa jbe fs add loope (bad) push mov cmpsb jmp pop lret es inc dec mov nop movsl frstor add push loope mov mov xchg push adc mov xchg xchg inc cltd push movsl (bad) std into les push push gs outsl jbe outsb jae add imul jp jae add add inc outsb jp je imul insb gs add push je imul xor add add jb data16 add push insb gs outsb je add insl imul jae add add jbe outsb gs jb outsb gs add add insb jns imul add insb insb imul add popa outsb arpl gs add dec outsl insl jo imul outsb jae add add dec imul gs dec gs popa outsb je imul imul add gs gs insl outsb je add add insb imul push popa outsb gs popa outsb jae add outsl insl jae gs outsl jb gs imul jae jb gs imul popa jb arpl add outsl jb popa outsb gs add imul outsb xor add bound outsb add popa insl popa gs jo outsb xor add push jne imul add imul jae add imul outsl jae gs jb fs add add bound popa addr16 addr16 push jb jae popa insb xor add dec jne bound jae add add inc outsl jb jns imul add add insl jo outsb outsl insb outsl imul jb outsb jae insb popa outsb je jb add add popa jae jb gs je dec outsl jbe bound jae add inc fs popa je jb xor add popa bound gs dec outsl outsb je imul insl imul add add outsw jb imul add insb bound outsb fs dec jns insb outsl jo cmp add push gs bound add add push jo popa outsb jae jb bound outsb gs jae gs outsl jne xor outsb outsb gs jae outsb fs add push outsl insb fs insl insl add add outsl arpl outsb outsl add add fs bound add jbe jb gs je outsb add inc outsb popa je gs popa je jp jb add push push jb outsb xor push outsb outsb je gs outsb gs xor add pop cs mov js jle ss sbb jge pop int cmovle dec mov scas xor pop std cltd sub dec leave repnz dec mov adc gs insb jae gs jb outsb addr16 gs add outsl jb push add jns outsl je gs add outsb imul add jae jb jae push jae outsb fs outsb insb imul arpl je arpl arpl outsb je jb popa arpl insb insb jns add add outsl je outsl insb outsl imul outsw jb insb jbe imul add insl outsl jb imul add je outsl ja jb outsb add bound ja jae add add jae data16 outsb gs add jns jae insb imul add jb gs imul imul add add outsb je popa addr16 imul fs insb addr16 popa jb outsb add add push outsb outsl jb insb push gs bound imul add inc imul jne bound imul imul gs outsl je gs gs add add dec jb imul add jb add add push imul jb outsl fs add jb outsl outsb popa addr16 add jb jns popa insl imul add insb jo outsb outsl jo jb je outsb imul je popa jae gs add insb insl popa outsb fs jb gs add dec outsb addr16 add add insl popa outsb jae outsl jb add add push imul jb xor add add jbe je outsb je add add push jae imul popa insb popa je jp je outsl outsb add add je insb gs data16 outsb gs gs add add insl insb imul addr16 gs jae outsl outsb xor inc jo gs outsb outsb jae add add jae popa imul outsb popa jp imul push outsb imul add dec outsl outsb jae gs outsl je jo arpl add add add push add add inc insb insb popa imul dec outsl jb gs gs add add outsl jae add add popa data16 imul gs outsb je jns add inc imul popa jne addr16 jbe jb add bound insl gs addr16 outsb add jns bound gs add (bad) ss outsb out ret jno push mov dec cmpsl mov adc lock xor add cmp loope mov mov pop cmpl cs or jb outsb imul dec gs imul add jo jb jb outsb gs xor add bound add push je jb outsl je popa arpl popa insb add fs imul cmp add gs outsl arpl insb add jae outsb imul popaw jb push jb add fs gs jb add data16 jns gs je popa arpl gs push popa jb bound imul popa insb gs add add push jno gs insb gs add insl imul je imul xor add jb popa bound outsb fs outsb jne gs gs add add add imul outsb gs add inc push xor jbe outsb gs add push jne je js jb add add je push add add jae imul add je jb gs gs add add jae popa addr16 jne insl gs gs add add jb add push outsb arpl fs je add jb popa outsb je add add dec gs insb outsl imul jne jo add je jo popa outsb jae add outsw jb insb outsb imul add bound data16 outsl jbe push jo insb je bound imul gs jae add add jb popa outsb outsb gs add push gs insb je jb add add popa gs outsl jne add bound arpl je add jb fs outsb jae jb jae add add je insb outsb fs gs add outsb gs outsl je outsb imul arpl jbe jb outsb arpl add arpl ja add insb je jb imul xor gs add push push gs add insl gs insb jns outsl jne push jae gs add add add jb gs jb outsb addr16 insl imul outsb imul add insb outsb imul add add inc data16 jb popa arpl imul add add je arpl add add outsb jns jae add outsb addr16 jb outsb je gs add push insl data16 gs add add gs cmp add jbe jb imul push gs jb outsb je jae outsb add cwtl repz fmulp arpl inc lea cmp sub popf cmc iret cmp cli je mov leave push or scas mov dec xchg imul lods inc push and jmp push je outsb jo imul add jns outsb je outsl insb fs add add insl data16 fs jb jb add add jae bound jb gs add add push fs insb popa outsb fs add popa jbe insb addr16 jb outsb imul add js add add jae jb gs gs je jbe insb jns add add jae imul add je outsl data16 imul outsb outsb add imul outsb outsl jb outsl outsb add add jo arpl popa add add add jne data16 gs add add outsl jae arpl outsb gs add insb outsl jo jns push add add imul add inc jb data16 insl jae imul dec gs popa insb je add add jne jo insb jae jb outsb outsb add add jae addr16 insl popa jae popa add jae jb popa popa jb add add je jb imul add gs jae outsl outsb add imul outsl addr16 inc push jo jb add jne outsb je jb outsl insl popa outsb gs gs add add insl outsl outsb jae outsb xor add push outsb data16 outsb je xor add add bound je outsl insb outsb imul add bound jae add jae imul add je arpl jo arpl jne add push gs jae outsb fs jae insl gs jae add insb popa jbe outsb fs add add gs popa je outsb fs add dec jo jb insb outsb fs push fs jo gs add add outsl jo popa jae popa xor push outsb jbe outsb fs jb fs xor add add add add fs add add jb gs imul gs inc jns fs outsl jb add add popaw jb outsb addr16 jae imul add jb jne gs outsb fs add push imul addr16 gs push gs imul add imul imul add jo jb ja gs gs add push gs addr16 jb jae insb xor add popaw outsb outsb gs add push arpl jb jae add int3 xor aaa xor add cmp loope dec cmp xlat ss outsb out ret jno dec lods xor or stos add xchg mov add add or arpl arpl outsb jae or outsl jne insb gs sbb add and and (bad) (bad) jmp add bound add ss add ljmp add add add or fs gs jb add or dec insl jo jb jne gs jns add add add adc or add incl xor add add addr16 jb outsb je gs add or inc jb jo popa jb push push js sub add incl xor or push jb outsb imul add verr bound fs jbe jb gs add add push adc add incl xor add add add je jo popa outsb jae add sldt jns popa jae popa addr16 outsb jae add adc or adc add add or push gs insb je jb add or inc outsb outsb outsl outsb arpl xor add adc adc or or add incl sub add push or push jb je outsl arpl insb add pop add outsl jb jae add or and add add pop or push push gs add or inc imul add add int js adc add add or dec jne je jb gs gs add pop add jae arpl add or prefetch adc pop add add add add push add jb add add add insb push gs fs popa bound jae add adc lahf add or incl sub add or add popa insb gs add or pop arpl imul adc add or incl xor add or add je jb popa arpl imul add or inc js insb outsl imul push faddl mov or incl sub add or add fs outsl jbe add pop add popa outsb imul add or adc or incl add add je insb outsb fs gs add pop add outsw addr16 add push xchg add adc incl xor add push adc push fs popa addr16 jne insl gs gs add or imul imul add adc add add or push popa jb bound imul or insb outsl insl jne imul repz or or push add add add add adc insl imul je imul xor add or dec jns imul jae add or imul (bad) incl sub add adc add gs cmp add or inc jae outsl arpl jb je add add or xor adc add add add add or imul jae add or dec imul jae add or add add add add push add insl gs add or arpl insl outsl insb popa je jns add lgs out ljmp sub add adc add jae bound gs add or outsl jo imul xor mov push adc add add add add jne popa insb gs or dec popa jae gs jae add add adc incl xor add push or push outsl jb imul add outsb je jb jns je outsb add adc adc add add or imul outsb gs add or inc outsl insb jae gs add add add dec movups add add add add or dec gs insb outsl imul imul add or adc xor adc add add adc insl gs insb jns outsl jne push jae gs add or push jb insl outsl je jb add movups lret adc add sbb incl xor add sbb add jo jb jb outsb gs xor add or data16 fs addr16 add add adc add or sbb incl xor add sbb add popa insb je bound imul gs jae add pop add jne arpl add or test rorb adc add add add sbb add jb gs jb outsb addr16 insl imul outsb imul add add outsl insb gs arpl insb imul add adc add movsbl adc add add add sbb jb insl jo add or addr16 jb imul add add pop adc incl sub add push or push jne push arpl je add or dec imul add or xchg push cmp adc add add or push outsb arpl fs je add push add insb popa add add jb iret push push or add add add or push imul xor add push add insb fs add add adc pop add add add add pop add arpl ja add or dec jb push jae add add add push mov adc add add add add pop add jne popa outsb xor add gs fs add adc jl movsb add and incl sub add and bound add or push outsb imul insb jns add pop (bad) add add add or dec gs imul add or inc insl jo imul pop je addl add add add add popa bound outsb fs outsb jne gs gs add or dec arpl outsl outsb outsl jae jae add adc or and incl sub or jbe jb outsb imul add or inc gs popa insb jb add push sti or adc add add push add fs imul cmp add or bound imul add add or es add add add adc jae outsb imul popaw jb push jb add push add jo outsl insb imul insb add adc add add add add verr jns gs je popa arpl gs add push add imul sub popf adc mov incl sub or push jne je js jb add or push jb arpl imul adc adc adc push adc add add or push push outsb outsl jne add or dec jne imul popf adc adc sub incl sub add sub add jb popa outsb outsb gs add or imul imul or sub incl xor add sub jne outsl je outsb imul outsb outsl outsb arpl jb insb popa je outsb add inc or add adc incl add add push add jb jo jb outsb je jae outsb add push add insb addr16 add add sub push add add add add or inc outsl jb popa outsb je add or push addr16 jb outsb outsb xor add push sbb je and cs add add add push add outsb jns jae add push add bound jae add add fldl arpl adc add add add add lldt gs outsl je popa arpl popa insb add or addr16 gs or adc add add add add or push popa je push add or outsl arpl jb jae add adc adc add add add add or push insl data16 gs add or addr16 jb jne fs add adc aam sub adc add add add add add insb je jb imul xor add je insb imul outsb adc adc or xor incl xor add xor jb insb outsb imul add add jo imul in or mov add add add add str outsb arpl jbe jb outsb arpl add add imul fsts add adc add add or insl imul jae add or popa jo insb je fs add adc or adc add add add dec xor aaa xchg cmp (bad) xchg addr16 dec movsl mov outsl mov test mov lcall sbb decl dec lods xor or stos add xchg leave or add add add add gs imul je jb or push jae jae xor sbb add and and (bad) (bad) jmp add popa outsb je jae jae xor xor adc add and add in add incl cmp add add add jbe insb imul outsb gs add adc push jb jae outsw je addr16 data16 jae add add adc roll add incl sub or push outsl outsb addr16 je jo add or push je jae gs imul adc add incl xor add add add arpl jb add adc inc popa outsb addr16 addr16 jb gs add adc adc add incl sub add add add popa jb arpl add push add bound imul dec add or sets adc add add add add jae je outsb add or push push pop add add add incl add add adc dec jo insb popa addr16 popa jbe gs xor add or dec jbe jb popa insb fs fs adc or add add add push add je gs add or push jne jo outsl outsb jns xor add add outsl adc push add add add or fs je jbe je xor add or jb data16 outsb gs add add add pop add add add or add jb imul add add popa insb imul imul add or add or adc add add add add adc push je fs je jb popa popa fs add or push popa jo jb je add or or out or add add add add data16 add or insb popa insl gs insb popa jb popa add push mov adc add add add add add outsb imul jb xor add or dec outsb outsl je outsb add popa add sub adc add add add add je jb gs gs add or arpl popa jo jns insb add push cmp push add or incl add add push add popa je jo jb outsl imul push add insb je insb imul jns add add das or add or add add or push arpl outsl je add or dec push je insb outsb fs add jl cld adc push add add add add or insl jns outsl push gs add or push outsl jo imul push xchg or add add add add push add gs jae gs je outsb add add add jb outsb fs adc in add push adc add add add add or push imul gs add outsb popa arpl jo popa outsb arpl add add or adc incl xor add adc add fs outsb addr16 jne insb jns add or dec popa outsb je fs aaa add adc add adc incl sub add adc add outsb addr16 je add push add outsb fs insb add add movsb movups add add add add insb imul arpl add adc inc outsb outsb gs jae addr16 addr16 jae add or adc adc incl xor add push adc jb bound jae imul jae add or dec outsl insb outsl push insb add add push stos add adc adc add add or dec popa imul outsb gs add or push outsl arpl jo xor add pop outsb pcmpeqd rclb adc add add add add push add jae imul gs add pop add gs jae add or add or incl sub add sbb add imul add or arpl outsl insb gs add or add pop or sbb incl xor add sbb add push add adc push outsb jae bound popa outsb je popa je outsl outsb xor add or push push or adc add add add add pop add imul or inc outsl jb bound add adc sbb incl xor add sbb add imul gs gs add or jae jb insb imul or out push inc adc sbb incl sub or dec popa outsb outsl insb imul or inc js gs je add push adc or adc incl xor add push adc push gs je jae addr16 jb add add jae add or jnp adc add add or push jns fs outsl insl popa cmp add or jae popa outsb fs outsb gs add add adc push add add add add or gs jo jns imul add outsb fs insl popa imul in or add add add add or inc outsl insl popa imul add or arpl bound popa outsb add (bad) add adc add add add add str outsb arpl jo gs imul or push gs gs imul pusha pop dec or sub add add add lldt jbe imul jb gs add add outsb add add adc and incl aaa add add add jae jb jbe imul fs jae add or imul jae add adc push adc add pop add popa je add add push je insl insl gs jne gs add push add adc and incl xor add es jae push outsl jns jae add or popa imul push gs xchg push or incl xor (bad) jae arpl insb jae data16 popa jb add or dec popa jae jb bound jns push lret add adc es add add add push add je insb insb popa fs jae xor add imul add push inc add daa add add or push jb je gs add or popa insb outsl push jae add adc or sub incl xor push add arpl je gs popa insb add or popa arpl je jae gs add add add add adc add add add add add push fs add or inc data16 outsl jbe imul add push pushf or incl xor add sub add imul add or addr16 outsb fs insb imul add add push imul add add add add jae outsl outsb aaa add push add jb je add or add mov adc incl sub add or dec popa outsb fs popa bound xor add push add outsb outsb jae add adc adc or push adc add add or jbe fs addr16 add or bound imul or add cs add add add or push popa outsb imul je outsb add or dec imul xor add adc xor fisttpll adc add add add add or arpl outsb je bound add pop add imul add or add pop repz xor incl sub or jne outsl arpl je add or inc insb popa outsb imul xor add add xchg or adc xor incl xor add xor jne insb jne outsb imul add or jo gs jb jne imul adc push into add xor incl sub add xor add popa fs add or inc jb jbe je jae add push add add xor incl xor add xor jb imul popa jae imul add popa outsl jb jb xor add or add xor incl cmp add or jb jae popa data16 gs add adc inc jb push imul outsb je jb aaa add adc mov xor add add or arpl insb imul add push add jae imul packuswb add add add int3 xor aaa mov fwait mov ljmp push fsubrl pop sbb inc scas popf std std bswap fisub dec lods xor or stos add xchg lret add add or inc gs je bound jae or popa imul outsl jb outsb fs jae jae sbb add and and (bad) (bad) jmp add imul outsl jb outsb fs jae jae xor xchg add icebp or add inc add add add add or push outsb arpl imul gs or jb gs push add add std add incl xor add add add je outsb jb insl insl outsb gs add or popa insb insb arpl je add add or add add or push je popa ja gs add or push jne jb jae insb je add add add add or add incl xor add add add fs popa jb jae jb outsb addr16 add or jae jo jne jne add or or add incl add add gs jb outsl jb add or bound jb addr16 jae add adc or pop adc incl sub push add gs add or gs jae popa jbe jb add push lret adc add add add (bad) jae jne popa data16 outsb imul add add insb bound popa jbe jb outsl jne xor add add jne jne adc add add or gs popa insb imul add add outsb arpl bound je bound add adc add add add or add outsl addr16 insl outsb jb add or inc bound popa push push or add or incl sub or push gs popa insb gs gs add pop add jbe outsb fs add push mov movups add add add add or inc jb outsb arpl outsb gs xor add fs outsl jo outsb add add incl sub push add ja gs add or outsl outsb arpl jae jae add (bad) add adc incl sub add or jb imul je add or outsl jbe jb popa outsb arpl add or or or incl add add or inc jb jbe imul gs add or inc gs popa jb cmp add push les (bad) adc or add add or dec jb imul add add push jb xor add adc or push add add add add or push bound gs imul add add jae popa fs add push pusha adc (bad) incl das add add or push jb jne jb xor add or push insb imul pop or fiadd adc add add add add pop add gs add adc je outsl jb je jae jb outsb addr16 gs add or add adc add add add add or popa outsb popa insb arpl imul push outsb jae insl jo imul lcall or add add add add gs outsl arpl add or dec jne gs bound addr16 add or stos (bad) push adc add add add add insb imul xor add or dec outsb je popa arpl add push pop adc or add add add add or arpl outsb outsl insb imul jae outsl imul or add or adc add add adc jo jb jae jb outsb addr16 gs add or jo jo jns je outsb add pop jmp pop adc add add add add or inc jb je imul add or dec outsl outsb jae insl gs add seto pop add add add add or inc jb outsb popa imul add jo outsb imul or adc add add add add or inc insb imul add adc push popa bound bound imul outsl je outsb jae add add or sbb incl sub add sbb add popa jb xor add jb jae imul test jecxz mov adc add add add add outsb jp imul jb add or data16 jae imul add sbb incl das add add jo gs jae jb insl xor add or arpl arpl fs add adc or sbb incl sub add inc imul add jns je imul outsb gs add or add adc add add or dec popa addr16 popa jbe jb gs add pop add jb addr16 add pop and adc add add add and add insb bound popa outsb fs imul add adc popa outsb addr16 insl bound insb popa addr16 gs add or adc or add pop add add add add adc gs outsb outsl insl jae jbe jb jb gs jae add or push jb outsb jae imul rsm add add adc and incl xor add and add arpl imul add add outsb outsl insl imul jae add add add addb xor add and add insb je jb gs gs xor add or inc popa imul add pop inc or or add add or dec popa outsb gs xor add or dec jb outsl outsb outsb popa outsb jae add add lock add add add add gs add or dec outsl outsb jae insl insl outsl outsb jae add push scas adc and incl sub or outsb addr16 outsb outsb gs add push add adc add and add add pop add je outsb outsb add or je gs popa jae gs outsb jae add or adc add add add add or dec outsb fs gs add or jb outsl je fs jns add push iret adc add or daa add add add sub add insb popa je popa jo insb gs add or push je imul jb add or adc sub incl xor add sub add insb outsl arpl gs add adc push fs imul jae popa imul add adc add or add add add add or insl imul imul add jb imul add jle adc sub incl sub add sub add jbe outsb fs add or inc outsl jb outsb gs add adc orl adc add add add sub outsl jb jo outsl jb add adc popa jb gs gs insl jb popa fs add push add ljmp incl xor add cs data16 addr16 jb je add or inc insb popa imul jae add or push mov sub add add or push jne imul jae add or insb imul add adc add add add add or fs insb jae jb add push add outsl je jns add add or (bad) adc add add add xor add addr16 jae imul insb jns add or jb jne popa jb jae add add add pop repnz add add add or inc data16 outsb imul add or bound imul add add xor add xor incl add add adc data16 outsw jb jae imul outsb add or bound fs gs add push imul adc add add add add add popa bound imul pop jns outsl outsw outsb outsb jae add pop pusha or adc add add add add imul add pop add push add adc push pop adc pop adc incl daa add add or bound gs jbe add add outsb add adc inc adc adc add add pop add jb popa xor add add gs jne jne imul add add les in or add dec xor aaa mov add push loope mov mov xchg push adc loope (bad) push mov cmpsb jmp dec lods xor or stos add xchg into or add add pop add insl imul or push jb jae popa outsb imul inc add add (bad) (bad) (bad) jmp add jae popa outsb imul add cmpsl push add loopne add xor add inc add add add add or dec gs popa outsb je imul add imul add add jle rolb add add add adc dec outsl outsb je imul insl imul add or push popa addr16 outsl insb imul add nopl jnp push adc add incl xor add add add outsb jp je imul insb gs add or outsl jne push je gs or or add incl add add add ja bound add add push outsl insb xor add or or add incl aaa add add jne popa je jb xor add adc push outsb jae popa bound popa je jb popa insb xor add push adc add incl aaa add add or dec jne outsb arpl gs add adc inc jns je fs gs gs outsb fs add add mov incl xor add pop or je popa outsb jae insb popa outsb je jb add or push push gs imul outsb add push jnp adc add add add add or gs gs insl outsb je add or inc outsb jne data16 gs add adc or adc add add or jae imul add or jb bound jae gs add add adc or incl sub or data16 jae jb gs je add or dec jo gs add or cli add adc or incl add add pop add jb arpl add add jb add push sub add or incl aaa add add add popa outsb fs gs outsl jbe outsb jae add or inc push outsb fs gs add adc add adc add add add or popa bound gs add je insb insb imul adc or or incl daa add add pop add bound outsb add push add outsb outsb outsb add or adc add add add add add or dec imul gs add add insb js add add add push add add add add or insb jns imul or dec outsb fs outsb gs add adc adc add add add add adc dec outsl insl jo imul outsb jae add push add jb gs add inc add adc add add or dec outsl jbe bound jae add sbb inc jb outsb fs outsb fs gs jns je insb jae jb gs add pop lods add data16 adc incl cmp add adc outsb outsb gs jae outsb fs adc dec jne je popa jbe jae gs outsb je outsb add adc add push adc adc incl add add add jae jb gs imul push add gs add push or or adc incl add add popa imul jp jae add or push outsb popa jae imul add or adc incl add add or inc popa push insb gs outsb je add or push insb imul add movups adc add add push add bound add add insb data16 adc adc (bad) add push add add or dec jns insb outsl jo cmp add or inc imul jns add or add add add sbb insb insb gs outsb outsb xor add sbb je jo outsl imul gs jae jae jb outsb imul push add adc or or sbb incl add add or popa outsb outsl jb popa outsb gs add or popa outsb je outsl jb popa insb add add or sbb incl sub or inc popa insb insb imul or imul je jbe add or add add or jo outsb outsl insb outsl imul add je gs add push cmp jmp sbb incl add add imul jae add or jae fs outsb fs add add push addb incl xor add push push add popa je gs popa je jp jb add or jo outsb popa arpl jb add add or sbb add add or push popa outsb gs popa outsb jae add adc dec outsl outsb arpl jae jb arpl cmp add adc add push add add add add or jbe jb gs je outsb add or push insb jne je je insb gs add push std add adc adc pop add add add and add fs add or dec outsl insb imul add or adc and incl sub add and add outsl jae gs add or dec gs outsl je outsb add hlt add pop inc add adc and incl xor add and jbe outsb gs jb outsb gs add or je jb arpl gs add add or add incl xor add and add outsb je gs outsb gs xor add or inc imul jb outsb add or push or pop adc add add add add jb addr16 gs xor add or inc jae gs popa je jbe add or pop adc incl sub add or dec jae arpl outsb outsl add or push popa je push add add or or adc add add pop add jb data16 add or jae jb popa outsb imul add or or push lock es add add add or push outsl insb fs insl insl add push add bound jb jo imul bound gs add adc movups add add add add or push jb jae popa insb xor add pop add jns popa outsb xor add push std push mov pop or sub incl xor add sub add insb bound outsb fs add or inc insl bound popa gs jne aaa add push int3 or adc add add or dec jne bound jae add or dec outsb je popa outsb jae je xor add add or add add add add sub add imul xor add sldt fs outsb push outsb gs add add pop push or add add add add imul add jae imul or push pop add sub incl cmp add or bound popa addr16 addr16 add adc dec outsl insl insl popa outsb fs popa jo popa push outsb jae add adc pop jle roll adc add add or insl popa gs jo outsb xor add push add outsl insl jo add push pop adc cs add add add or push imul gs xor add or inc jne outsb imul adc psrad pop movups add add add add lldt popa popa outsb jae jb bound outsb gs push add push add push ja rolb cmpsl add xor incl xor adc bound jae gs outsl jb gs imul or inc jae push add pop ljmp xor incl xor or insb imul push adc push jns je insl insb gs jb outsb arpl jae add add add or add xor incl sub add xor add jb imul add or dec outsb jne imul add push inc push dec add add add add xor jae gs outsl jne xor add jo je insb imul add lfs xchg or or xor incl sub add or push jne imul add push add jae imul sub add add add add or jae outsb imul add or inc imul incb mov or ss add dec xor aaa pop jno add xchg jmp sbb jle xchg js xor cltd jp or cmp xor or stos add xchg rorl add inc add add or gs insl gs gs add jns jae sbb add and and (bad) (bad) jmp add popa jae xor les add pop pop add int3 add add add add add or dec popa outsb imul xor add or fs popa outsb je jns add push inc add add add add incl xor add add add arpl jne add push add addr16 addr16 outsb gs add push loopne in add adc add add push add outsl fs je outsl outsb jae gs add imul adc sti rdmsr adc add add add add imul imul add insb imul insl outsb imul jns or insb add add incl das add add jo gs popa fs cmp add or popa jb jne outsb imul push mov add incl xor adc jae jns bound jae imul add or inc imul xor add add add scas or add add add or jne gs gs insb gs push add push jae jb outsb add add adc add add add add or inc popa imul outsb add or gs outsl insl insl jne add or incl sub or insb outsl outsb bound je insl add or popaw outsb ja imul or jmp incl xor add or add jb outsb outsb gs add or inc gs je insb popa jae xor add or mov adc add add add add adc inc imul outsb je jb xor add or insb jne outsb imul add adc mov bound adc add add push add imul add outsb je outsl bound imul adc jne or incl add add outsb imul je outsl outsb gs gs add or push popa insl insl gs data16 insb outsb add add sbb adc incl xor add push lldt bound outsb gs jae cmp add or inc outsl jb insb push add pop std add or add add or jo popa addr16 jne fs or inc jb addr16 jb popa add add adc add add add add pop add imul add add gs outsl jae outsl jo arpl insb jns add push jecxz jmp inc adc (bad) incl sub add adc add outsb gs gs add add jae add xorps or incl das add add or push outsl jne imul gs add or dec imul insb xor add pop lret add pop incl add add add add jae add adc push bound imul add add add adc add add add add add imul jae imul insb addr16 xor add or fs imul jae add adc fisttp add add add add fs jae add add outsb popa add or fcoms sub adc incl xor add push or inc outsl jb fs addr16 add or push outsl insl je fs outsb jae add push imul or add add add or jae jb jae imul add or insb gs popa popa jb je add pop jl xor xchg adc add add add add or push je popa data16 outsl jbe add or inc imul add adc add pop add add or jae jb data16 or dec outsl outsb outsb gs imul pop add push adc add add add add or inc insb fs gs add popa insb insb outsb imul out (bad) push or lea adc add add add add or push outsl insl insl gs imul or insl popa insl insl outsl outsb imul popf add add incl das add add add gs insb insb imul dec outsb fs popa arpl gs add add movsl add sbb incl sub add sbb jns insb add or push imul insb imul xchg inc push xchg add sbb incl das add add or jae popa popa jae outsb add or gs jb jae insb jae add adc mov pop add add add add or outsl outsl insb insb popa jb outsb jae add or jae jne outsl arpl outsl jae add add dec push inc add push add add add add or jae outsl imul jb outsb add or dec jb insb gs je imul add add sbb adc add add add and add gs insb gs jbe add adc push jb outsb jae imul outsb xor add adc adc and incl sub add and add outsw gs add or gs jne jb popa je add add or or or and incl add add or push insb outsl outsb imul inc jne je outsl outsb jae jb fs add push cmpsl add add adc and incl xor add and add jns outsl addr16 outsb je jae xor add or dec jns je imul mov movb or incl add add jne push add or inc outsl jb imul add adc adc incl xor add es jb je popa outsb jae insb popa outsb je add or gs popaw imul add adc add or adc and add add or inc outsb outsb outsl je je add str jb outsb outsb imul xor add add or es add pop add imul add push jo popa imul addr16 add add lds dec pop adc add add add add str jae popa insb imul aaa add or jb gs jbe outsb fs add or add sub incl sub add sub add gs gs add jb outsl imul add sub incl xor add sub add jo outsl outsb imul or gs popa arpl outsb xor add or add sub incl add add add jb imul add outsb jae add or or adc add add pop add jb jb add or jae gs gs outsb insb imul mov movups incl cmp sbb popa data16 gs outsb imul jne je je jb gs add or fs bound imul adc test xchg adc add add or dec outsl outsb gs outsl outsl outsb imul add je jb popa je add adc pop adc add add add add push add jne imul addr16 add or je gs popa jae popa add inc add or mov incl sub or bound imul jae add or inc outsl jb data16 xor add push aad pop or or xor incl add add or inc outsb push gs add or push outsl jo popa imul add push or adc add add add add or jb jae outsl jb outsb add add je insb jae jb outsb addr16 jne jae jae outsb gs add or or or add xor incl add add jo outsb imul add pop add jb outsl ja add or or xor incl sub add xor outsb je popa arpl gs add jb xor sbb or xor incl xor add adc popa jne outsl jo je popa insb insl outsl jae outsl jo add push add jb add push (bad) push adc incl aaa add add adc dec jbe jb jb gs jae outsb imul je jb add or push jne fs jb xor add adc or ss add int3 xor aaa adc sbb inc scas dec xchg xor (bad) mov bswap mov sub xor dec lods xor or stos add xchg xlat or add add add jae add je jbe push outsb xor sbb add and and (bad) (bad) jmp add jbe gs outsb xor xor pop or add add cmp add add add add add outsl jb outsb addr16 je je outsl outsb jae add or dec popa outsb outsb imul jle mov or add add add add jb insl aaa add or imul jae jb add add or add add add add or push gs popa je jbe add push add jae outsl addr16 jo imul add fiaddl adc add add add add add je outsl jb jb add or bound jae insl jb add push out sbb in add add incl cmp add add data16 jae popa outsb jae gs imul add or jae jb bound imul or adc incl sub add push pop add jo jne add or dec popa insb insl data16 jae add add or adc add add add outsb imul add add outsb imul insl add adc or or add push add add add add push add insb imul jae imul jb add str insb push imul gs jae add add or mov adc add add add or add popa jne insl outsb je add pop add imul add insl add add incl sub add or add je gs jp xor add or push popa imul scas push (bad) adc std adc or incl xor add or add outsl insb outsl outsb addr16 je outsl outsb gs gs add jb je gs add adc push aas add incl sub add or add jbe jb imul push add imul add or nop or add add add or jb popa je outsl outsb add or push jne jae push add add add lahf add or incl cmp add push adc arpl outsb je je gs gs gs add push add jbe outsb outsl insl imul add add or add push adc add add or bound jae insb fs add adc bound addr16 outsl je jbe jb outsb addr16 add or adc add add add add or inc jne popa insb popa jns xor add lldt imul gs xor add or or (bad) incl xor add adc jo jb arpl data16 add or inc insb imul add or push adc add add add add or insb gs jo push jae add or inc imul je jns aaa add or push adc add add push add imul add or je fs insb insb imul das or or adc add add add add add fs jae add or jne jae gs add add or or or adc incl sub add adc outsb je add or inc popa outsb popa insb popa xor add add cmpsb movups incl add add or inc jb outsb jne jb outsb add adc push je jb jns jae outsb fs insl gs add add pusha add adc add add push add popa imul add imul add add or or or push add add add add or inc outsl jb gs gs xor add push add jae outsb je arpl popa jb add or push fisttp mov adc add add add add add popa insb add or inc gs gs fs add pop dec push roll sub adc add add add add or jae jb gs jb gs add or push jb jae jb imul add rorb or add add add add or insl imul outsb add or jne imul add push std add add add add add add add je insb outsl imul pop add addr16 jecxz push add add add or bound imul add push add popa jb jae insl bound gs add adc imul adc incl xor add push or push jb arpl jbe add or imul jb add add incl adc add add or jae popa addr16 jb outsb add add push insl imul adc push add add add and add jbe jb xor add or inc jbe outsb ja jb push add or pop add add add add add push gs add adc inc outsl jb imul addr16 jb gs gs add add jg test adc add add add add or dec gs add add outsl outsb xor add add add adc add add add add verw je outsl arpl insl imul add str arpl insb popa jb popa arpl xor add add push xchg or add add add add add popa jb imul add pop add insl outsl jne add wrmsr push pushw xchg adc and incl sub or push outsl jne jae jns add or push popa outsb addr16 popa je outsb add or or adc and incl add add or jo jns insb imul or dec gs gs outsb fs add add push adc add add or je jae ja jae add or imul gs add add mov mov adc add add add sub je outsb arpl jae add or insl popa je jae jb je add add or or add add add add or je insb jae imul add or push outsb je jb gs jns add add add rorb adc add add add sub add jb jne fs fs imul add adc dec gs outsl jb outsw jb insb jne outsb gs mov add sub incl sub add sub add jb imul add push add addr16 adc xor mov adc add add add add add jb jo outsl jbe outsb gs add or imul jbe je add adc adc add add add add jae imul insl jns imul outsb gs add or inc jb fs jb je add push loope cmp add add add add adc inc popa insl jo outsb addr16 popa fs jb xor add or popa popa gs imul add adc adc add add add outsl jae add or push popa js je jbe insb jns add push inc cmovne lahf adc cs add add add or dec outsl insl gs jb add or push outsb data16 gs jns add or xchg xor adc add add add add or inc gs insb imul adc push je insb outsl popa jne imul jae add adc or adc xor incl add add or push jb push jb add or push addr16 jo jae add adc adc xor incl das add add or inc gs je gs popa jns add or dec imul push pop roll add add xor incl xor add xor add jb fs outsb outsb gs add verw jo jb popa je insb arpl add or add xor incl sub add xor insl bound gs or outsl jbe insl jne outsl imul fimul add add add add push add gs je addr16 add or push jb jo gs add or add add or insl popa jb outsb bound je add sbb jae insb jbe outsl jb jae je je jae imul jae add or adc ss add int3 xor aaa sub mov (bad) inc push int3 cwtl repz fmulp arpl inc lea cmp sub popf cmp xor or stos add xchg out add push add add or inc popa jae popa outsb outsb jae or jo popa jb je gs add add inc add add (bad) (bad) (bad) jmp add jo jb je gs add mov adc add pop add inc add add add add or dec jo jb insb outsb fs add push add jb imul insb gs add adc add add incl xor add add add imul add or jb gs gs imul popa adc add incl add add or inc jb data16 insl jae imul add je imul pop push or add incl inc add add add push addr16 jb jae insb xor add sbb inc outsb imul popaw addr16 outsb fs imul outsb add or add adc add add add add jb gs imul gs add or imul gs add add add adc incl sub add push or dec imul gs add pop add insb imul or or adc add add or jae jne data16 gs add or dec jne bound insb imul pop popl adc add add add or outsl jbe jb popa je outsb fs push add imul or pop or add add add push add je arpl jo arpl jne add push add gs jae outsb imul add or add add add add or push outsb data16 outsb je xor add or push gs imul or adc adc add add add add (bad) jb je outsl data16 imul outsb outsb add or outsl insl insb outsb imul cltd pop mov cmp adc adc add add add add jne outsb je jb outsl insl popa outsb gs gs add or imul jae jne jae jae add push testl adc add add add add jae addr16 insl popa jae popa add add add jb outsb jae add adc or add movups incl xor adc gs popa jb outsb addr16 jae imul or dec outsl jb outsb gs gs add add or or add add or push outsb outsl jb outsl outsb add or inc insl jo outsb outsb popa addr16 add bndstx rorb or push add add add add or push imul addr16 gs add fs jb gs add push xchg or repz (bad) incl xor add adc add jb gs add add outsb bound addr16 xor add adc or adc add add add add push add jo jb ja gs gs add or inc push jb outsl xor add adc or adc incl add add add push outsl jne add or bound bound insb jae add or add adc incl sub or dec gs popa insb je add or push jb je jae popa bound add or adc adc incl add add je jb imul add push add imul imul fs jae add push lret or incl xor add push or inc imul imul or bound insb gs imul lcall adc add add or inc outsb outsl jo popa jae popa xor add or push imul fs gs add or lret adc push add add add add adc outsl bound insb je outsl insb outsb imul add dec jns outsl outsl outsb popa je outsl outsb add add add pop add add add inc imul add jo gs add adc or sbb incl xor add sbb popa outsb je outsl insb fs add or popa arpl jb je arpl add or add add incl xor add sbb add insl outsl outsb jae outsb xor add adc arpl outsb je jb popa outsb imul add push ljmp sbb incl xor add sbb add insb outsl jo jns push add or outsl outsb fs bound add or or sbb incl xor add sbb insl data16 fs jb jb add or push outsl imul imul imul pop adc incl sub add push or push gs gs jae outsl outsb add or push arpl data16 cmp add adc add sbb add add or push popa outsb imul imul add pop add fs jb add add add stc or push add add add add push add imul add jo imul add or xor adc add add add add or dec insl popaw outsb outsb gs add or jne outsb outsl je outsl outsb gs adc or and incl sub add and add jb popa popa jb add add gs add or aaa pop pusha add and incl sub or outsl insb jae jb outsb outsb add push add data16 xor movsb movntps xor adc add add add and add imul addr16 add pop add outsl je jb add adc add and incl xor add and fs add sldt imul outsl insb outsb gs add adc or add add add add add or jo jae imul or insl gs imul cmc or or adc add add adc inc jb jbe insb addr16 jb outsb imul (bad) jae push popa jae gs jae add or or add incl sub add sub add jo imul add pop add je gs add adc pop lret or adc daa add add add add pop add bound jae add or inc jne popa jbe arpl add push xor inc adc adc add add add add or inc popa jae insl gs jae add or ja outsl je imul add add incl xor add sub add popa insb jne jo jb add or fs js popa insb imul mov cmp ret adc sub incl xor lldt outsl jae arpl outsb gs add or dec outsl jo jb imul outsl adc mov xor incl xor add sub jae imul add add gs gs jb jae add or or push cltd add sub incl add add push add jb jne gs outsb fs add push add je outsb fs outsb jae add add movups add add or inc gs je jbe insb jns add or inc outsl jb outsb fs imul and mov fisttp add add xor add jae jo gs add or inc popa jne gs gs add adc jnp sti add das add add add add adc push outsb jbe outsb fs jb fs xor add or push fs addr16 jae jb xor add adc or xor incl xor add xor add outsb fs add adc je popa outsb jae outsl jb insl imul jb xor xchg adc adc add add add add or push gs jae outsb fs or inc push outsl outsb outsl jne add or incl xor add xor add outsb insb popa outsb fs add or insb gs insb popa outsb gs or adc xor incl sub add xor arpl popa add or dec popa jb insl insb imul or xor incl sub add or inc jns fs outsl jb add or dec gs insl gs jne add push imul adc add add or push gs imul add (bad) jne jb fs imul jae add or adc adc adc add add int3 xor aaa insb add inc mov cs mov push sti (bad) pop pop rorb push xchg sbb mov dec lods xor or stos add xchg in or add add add add gs add jb gs outsb addr16 add add inc add add (bad) (bad) (bad) jmp add insl gs outsb addr16 add fadds add cwtl add add inc add add add add or inc imul gs add or inc gs imul add or add or incl sub add add add jae gs add or bound jae bound fs add or add incl xor add add add gs imul fs add or jae bound gs add or lods add add incl sub add add add jo popa outsb jae add pop add data16 jns add or test stc or add incl sub or insl jne je jae gs or inc outsl insb jne bound xor add or push inc push ljmp sub add push or bound arpl outsl jne add add dec je add adc or or add add add or push arpl insb imul add or push popa insb insb gs outsb arpl add add lods push aam adc add add add add or dec popa jae gs gs add or imul imul jae add or or pop add add add add or inc arpl outsl xor add adc inc outsb outsb gs addr16 outsb addr16 gs add or or adc add add add add push add insb imul addr16 jb gs add or je gs outsl imul pop ldmxcsr adc add add add add push add outsb data16 add push add jp jp add add shrd or or incl xor (bad) jne jbe push imul outsb add or outsb outsl outsb data16 popa imul jae add or adc incl sub add or fs imul add add insb imul add incl or incl xor add push or je imul add or push insl jne insb gs outsb jae add punpcklbw or or or add add or push jb jb addr16 jae add or push jb gs imul comiss or or adc add add add add str je outsl popa jb push insl jns add or gs jb imul jae add or or pop dec add (bad) incl inc add add sbb push jae jne outsl jo imul jo arpl insb jns add push add jb jne imul cmp add add or adc incl sub push add jb gs add or jae outsl jo jns push adc xor fadds adc add add add adc add jbe jae gs outsb addr16 jns je add or inc imul gs add add ret or adc add add add add insb gs jb addr16 add or bound jae popa jb jae add add adc adc incl xor or dec insb insb imul add adc insl popa insb popa arpl je popa arpl outsl addr16 add or adc adc incl xor add push or inc jb insl outsl jb add push add imul jns imul fisttpl mov mov incl xor add pop or imul outsb gs add or je insb fs jae jb add add pop adc add add add add or inc outsl outsl bound push pop add imul int add pop add add add add or inc outsb insb outsb fs add or push popa je outsl insb outsl imul adc add insl add sbb incl add add or popa insb jo popa bound imul add jbe jb jb outsb add or add add add add or fs imul jae add or push outsb jae imul add add adc add add add add add add jb imul gs add add gs add add add adc or add add add bound je outsb add add popa cmp add add jle fmuls sbb incl cmp add push or pop jns outsl jno imul add adc inc jns gs jo jb gs outsb addr16 add or add or or sbb add add or inc jne outsl imul je arpl add or inc popa jb popa jp insb add or adc push add add add add or dec gs insl outsl jb push pop add insl gs fs jae jae imul gs jae jb add add add adc add add add add or jae imul add add imul or adc add add add add or inc outsb je outsl jo jne imul push outsl jo je imul outsb add adc adc incl xor adc push popa addr16 imul jae add or push gs arpl jb xor add push mov or and incl add add add fs imul add or inc insb popa je gs jb add push outsl push repz adc add add add add addr16 add or dec gs popa insb xor add add add and incl das add add or push popa arpl je jne gs add or inc outsb outsb gs imul add or and add add or jae insl imul add or jb jb jbe fs je add or adc es add push add jb addr16 gs outsb outsb add adc imul gs jae jae jb outsb fs add add add inc push adc add add add add or je insb jae jb outsb fs add or dec push addr16 addr16 add add sub adc add add add sub add outsb gs add or dec bound bound popa je outsb add popf or add sub incl sub add sub imul jo jne add push add jae insb aaa add adc or sub incl sub add sub add insl je popa addr16 add pop add outsl jo insb jae add add pop adc add add add sub push insl gs gs jae jb gs add adc dec popa jbe outsw jb insb gs jae jb cmp add or push add adc incl cmp add adc inc popa insb insb gs popa outsb jae jb outsb fs add sldt jne jae imul cmp add add or adc add add adc push jns je insl jo outsl addr16 insl insl jb outsb jae add push add jns jae add add or or adc add add add add or ja je gs popa bound add add insl popa add or bound adc add add add add adc inc insb outsl insl jae gs jne insl gs xor add or dec popa outsb fs jae jb add or or add add add or popa outsb addr16 jo popa jbe add or inc insl imul jae add adc or xor incl add add or gs insb imul add pop add outsb popa jae add sysret or adc add add add add insb gs insl outsb fs add or dec imul arpl add add add adc add add add xor bound insl jae jb add push add jb gs imul popa insb outsb gs add push mov movups incl xor add or outsw jb gs outsb fs or insb gs jns imul add adc in mov incl xor add aaa push add push jae outsl imul gs add or jo outsb outsl insb outsl imul push pop add or ss add add dec xor aaa jmp dec and dec mov scas xor pop std cltd and pop cs mov js jle dec lods xor or stos add xchg out or add add add add outsb je popa insb jbe jb gs jo popa jb je jb gs outsl je je sbb add and and (bad) (bad) jmp popa je xor into add add add add add add add pop add jb gs add pop add jo gs add or adc add add add add je popa jne addr16 jbe jb add add gs add add add adc add add add add jae jb add push add je jb je outsb outsb jae add pop flds mov in adc add add add add add jns bound gs add or inc imul arpl add adc add mov adc add add add add popa data16 imul add insb gs arpl jae add add add add add add adc inc outsl jb gs imul imul add outsl je add add push addr16 adc add add add or push outsb outsl jb insb push gs add push jb jae add or in loopne adc add add add add or dec jne je ja jb outsb add add add insl jo imul outsb jae add or add add add add sldt outsb je popa addr16 imul add add fs imul jb add or adc or adc or incl sub add or add jb imul or push imul add or xchg push mov adc add add add add or inc data16 popa jp imul add or push outsb imul gs or dec add or incl sub add or add outsb jae outsl jb add push add outsl outsb gs add or adc or incl sub or inc popa jae data16 outsb gs add or fs jbe jae add adc and push adc or incl sub or bound insl gs addr16 outsb add or jne jb imul add or or add add or inc outsl push add or jb outsb popa jae imul add add add add incl sub add adc add bound imul or jo outsl addr16 fs add cwtl or (bad) incl xor add adc add jne je jb popa arpl insb insb jns add or jns insl insl gs jns add cpuid pop sub test incl xor add adc add outsl jb push add push add jae jns imul add adc andps roll adc add add add add or push imul imul add push popa arpl xor add push cwtl or cmpsl adc adc incl add add add jae jb jae add or outsb fs jbe jb cmp add add or add adc incl xor or inc jo gs outsb outsb jae add sldt jae popa outsb jae outsl outsb imul adc or add add add add or inc popa jb jns popa insl imul or inc jb data16 insb jns add or add adc add add push add outsb jae gs outsl je jo arpl add or inc imul add add cwtl push adc add add add add adc je insb gs data16 outsb gs gs add adc imul popa jb gs gs gs add or or adc add add add add or inc outsl jns outsl je gs adc push outsb fs gs data16 gs jae outsb jae add adc or add adc sbb incl xor add sbb add jb bound xor add push add gs outsb gs imul je xor or sbb incl xor add sbb add insb jo outsb outsl jo jb je outsb imul add outsl outsb gs add add add ldmxcsr adc add add add add add outsl je outsl insb outsl imul add je arpl jne add add add add add add jb outsl outsb popa addr16 add push add insb insl outsl jae add adc or or incl xor add push push add jb insb jbe imul add or imul insl gs add adc adc add add sbb add add (bad) je jae outsb jae insb imul add or imul outsl outsb aaa add push jge or lea adc add add add add or dec outsb addr16 add or jae addr16 insl jae imul or or pop adc add add add add pop add jb imul add fs gs add add push mov and incl xor push add insb insl popa outsb fs jb gs add or imul outsb add or or adc or and incl xor or inc imul gs add adc dec imul arpl imul int sub push or and incl sub add and add jb gs gs add push add je xor add adc add jbe adc add add add add bound outsl insl popa insb popa jb add or push push je outsb cmp add or add rolb add add or jne jae insb addr16 popa jb outsb add lldt gs jne jne imul add adc push adc add add or push outsb imul add adc push jb outsb outsl jae popa jb gs gs add setnp into add or es add add add or push jb gs jb arpl add adc inc imul imul outsb gs add or cmpsb pop rorb adc add add add add push add popa imul add jb jae gs add adc pop add pop adc add add add add or inc insb insb popa imul add insb je addr16 add adc adc sub incl cmp add sub add popa jb jo jb outsl fs add lldt bound arpl addr16 insl insl xor add push rorb mov loope adc add add add add outsb fs outsb insb imul or outsl jo jb insb jae jb add or jnp aad adc add add add add outsl jae add adc push imul jb jo addr16 outsb fs outsb jae add add or adc adc incl add add adc imul gs outsl je gs gs add or inc outsl jb popa gs insb jae aaa add subps adc rorb sub add das pop add insl insb imul add popa je gs gs add or add or cs add add add or push gs jae imul add jae addr16 gs add adc jg jg adc add add add add or inc jb gs outsb je add or popa je jb jb outsb fs add or add add add add xor jo insb popa je jp je outsl outsb add push add imul je je fs add add add add add add or jae jb outsb je jns add or arpl outsl outsb imul addl adc add add add add add bound ja jae add push add insl popa imul add and adc add add add add fs gs jae outsl outsb xor add push add outsb imul jb add push (bad) inc adc xor incl cmp add ss add gs insb jae gs jb outsb addr16 gs add or jae jb jae gs add or adc cs add or dec outsb bound imul add or jb je data16 addr16 add adc jnp dec or ss add int3 xor aaa fistpll into data16 mov ss sub sub jae cli out mov lods xor or stos add xchg sbb add push add add or inc imul outsl outsb jae add gs imul add add inc add add (bad) (bad) (bad) jmp add push imul add pop or add add mov add add add add or gs jb jae gs add adc popa jne jne je outsb gs jne imul jae add or or add incl add add or push outsb je gs add outsb outsl outsb jae insl outsb je insb add add or or incl xor add add add jb jae popa popa insb jae outsb cmp add pop add outsb data16 jae add add or adc add add add add add push gs jb add or inc imul jbe xor add adc or add incl xor add add jne imul outsb gs insb imul je add add add or add add add add pop add popa jbe jb add pop add ja popa add call push add or incl sub add pop or push outsb jbe insb imul add add insb outsl je imul or add incl das add add or jbe je gs gs add or inc popa addr16 jb outsb add add add add movups add add add add adc push jns popa data16 imul jb outsb gs add or push imul add push adc add or incl sub add or add push add or inc popa bound outsl outsb gs add movntq lahf adc adc add add add or add outsb outsb gs add or popa je insl bound bound jae add or adc or incl das add add add insb popa jb gs add or dec popa jb popa jb je gs add add addb adc add add add or jb outsb bound gs aaa add or insl data16 insb jae jb add adc and test adc incl xor sldt jb jne fs outsl insb imul add jb popa fs gs add adc incl sub or imul outsb imul dec popa jne jb add adc add adc add add pop add addr16 outsb add or push jo jb outsl arpl je jb add add adc adc (bad) incl sub add adc add jbe imul add push add outsl jb add add sub adc incl xor add adc add jae imul outsb gs add or bound jae jb outsb addr16 add add add adc incl daa add add add gs add or push outsl insb outsl jae imul fcoml lods or adc incl xor add adc add push insb jns add push add outsl outsb je outsb gs jae add pop lcall adc incl xor add adc jbe outsb fs add push add insb gs gs gs add adc pop xchg adc adc incl xor add push adc bound insl imul outsl bound add push add jb fs add add jl rcll adc add add or push push imul add insl arpl aaa add add int (bad) or push add add add add pop add fs jae add or imul gs add or push adc add add add add adc push popa insl popa jb je jb jne jae jae gs xor add or push jne jb fs popa jb add or or adc incl xor add sbb push gs outsl je je outsl outsb aaa add or outsb fs je outsl outsb popa jb add or add add add add or dec popa popa imul push add jne outsl insl outsb imul add add or or push adc add add add sbb add insb fs outsb imul outsb add or popa popa jae gs add or push add sbb incl xor or jne bound popa arpl add adc push insl imul gs imul or or adc incl xor add push or push gs insb imul add jne jb imul outsb imul add add or adc movups add add push add popa fs jne imul add or dec jne imul arpl add adc or push add add add add or bound gs jo jb add adc dec outsl addr16 insb jae popa bound imul popa insb outsb aaa add add pop jne lret pop add add add and add outsb outsl bound gs or jb arpl jbe jb add add or and incl add add adc inc popa insb insb outsl outsb je addr16 insl imul add insb popa jb jae jae add adc add and incl xor add and add je outsl outsb outsl jae add or push popa outsb outsw jb jae gs add adc enter adc add add push add outsb je outsl jb insb outsl outsb imul popa jb push outsl insl imul fsts loopne arpl adc add add add add fs jbe imul addr16 add add jne add add adc and incl cmp add es inc outsl jb push outsb jae insl gs insb push jb gs add or push jne addr16 jo imul push aaa push ds add add add daa adc imul insl imul jae imul push add insb imul jo outsl addr16 insl add or or es add add add or dec jo popa je gs gs add adc popa outsb je addr16 jbe je je outsl outsb popa insb insb jns add or or daa add add or push outsb imul add or push je jb bound xor add or pop adc add add or inc outsb popa je gs imul add bound outsb imul outsb jae add adc adc add add add add or bound imul add or jo outsb arpl popa je add add mov incl xor add sub add gs je popa je outsl outsb gs gs add push add jb imul push or popa or sub incl xor add sub gs add adc dec gs imul gs popa push outsb xor add push clc adc sub incl xor add cs add imul insb add (bad) jbe insb popaw jb jae je fs add add adc sub add add or inc imul add or data16 jae imul add push or or cs add or insl imul add adc addr16 jae jb push jb arpl jns add push pop or add add das add add or je jb jae gs add or inc outsl jb addr16 bound add push sub mov pop push adc add add add xor add jne gs imul imul xor add lldt outsb fs jb popa jbe outsb gs add adc adc add add add add or arpl jo fs je xor add or arpl jo je jb jae add adc adc adc xor incl xor add xor add jae imul add jb arpl arpl jb gs add add push adc add add add add jns imul imul add jns je add pop dec add or adc incl sub add or jb imul outsb jae add push add insb popa jae add add push jb mov incl add add or push jne je jb arpl je add or push popa insb outsb je add or add ss add int3 xor aaa and int cmc adc inc mov mov andl dec cmpsl or jmp sub cmp xor or stos add xchg popf lret add sbb or inc insb outsl imul jb je or jne outsl insl gs imul add mov add add dec mov add add add add add add add add add sbb add add mov add add ja jmp xor or lods cmp je mov dec dec dec cmp jne mov dec dec dec cmp jne xor push push push push push addl push push push call add ret mov push loop push push push mov add jmp pop jmp pop call push pushl push call cmp je call push push xor pop pushl push call jmp mov adc cmp jne jmp mov imul pop mov mov mov mov dec cmpw jne mov mov inc mov bswap cmp jne cmpl jne sub push call mov mov push rep mov xor pop xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor jmp push jmp pop jmp pop call push push push push call pop jmp call push push dec outsl je data16 arpl inc add lret (bad) (bad) decl inc dec dec add ret (bad) (bad) decl push gs outsb outsw jb popa je outsl outsb push jb arpl jae call pusha jne push xchg in xor test cmp xor pop push xor mov adc mov bound xor cld outsb nop mov jg xor add xor cld cmp sub jg xor cld popa (bad) jne xchg xor ljmp xor ja fcoml mov cld popa fistpl ja add in xor scas sahf loop adc cmp add popa xor dec and fcompl mov pop cld or bound xor mov xor mov gs cwtl or xor js xor (bad) popa xor cld popa mov fsubl xor fdivl pop xor popa gs mov cld outsb mov std popa xor xchg popa gs mov fsubl xor cld popa mov clc cmp xor std popa xor ljmp xor sub xchg add popa xor adc xor ret ja xor cld popa mov xor cld sahf cmpsl xchg cld popa xor sahf cmpsl xchg cld popa xor cld xor cld popa fistl popa xor inc fcompl mov cld popa add int bound sahf cmpsl mov lods sahf loop fsubs jne pusha jne mov test pop mov hlt cmpsb xor mov push xor cld or pop cld mov and popa mov and popa push xor mov fcmovnu jmp mov xor ja ss ja xor cld popa mov xor cmp xor dec mov and popa push xor mov (bad) adc cmp cld call fcoml mov jo ljmp cld cmp inc repnz xor mov and popa push xor sub xor cld popa push xor clc mov and popa push xor clc or and jl xor or lret mov xor sub mov std popa xor hlt popa xor cld cmp ret xor daa xor icebp popa xor popa xor and cld cmp (bad) icebp popa xor call xor xlat cmp xor add xor aad (bad) idiv popa int push (bad) int pusha popa xor add jle hlt ljmp cld popa xor hlt popa lea mov popa gs cld or lret mov clc loop xor lock and popa mov and popa mov daa cld popa mov es popa mov and popa push mov popa xor and mov pusha cmp xor les jge pop and cld cmp mov cld mov and popa imul pop int add mov mov sarb xor cld popa mov xor outsl fisubl popa xor (bad) imul xor ljmp xor les mov je popa (bad) fstl and xor and xor mov jbe xor mov popa xor pop xor js xor pop popa xor cld cmp mov ja xchg xor out popa xor sbb xor cmpsl xor ja sub fdivs int pop je fldl sahf int mov lret ds cld popa xor ja ds mov insl mov mov insl ss mov mov cmp popa mov cmp mov lret popa popa bound insl add repnz popa mov and ja xor jne divb cld popa mov xor cld popa mov std sti popa xor xor xor jnp xor hlt popa xor cld call xor add xor cld popa mov and scas xor ja ds xor push xor aam icebp sbb clc imul (bad) cld imul mov popa inc (bad) xchg and int3 popa xor dec imul xor add xor call and add and call imul gs cmp aam or mov xor dec popa cmp cld popa cmc jo popa xor cld popa xor cld popa xor js xor call out cmp std test leave mov popa ds mulb mov cld loop xor cld popa xor jne and cld in inc cli ljmp jnp ds ja xor cld popa xor std xchg mov cld adc xor fucomi sub arpl xor jne fstpl imul ja and cld popa xor mov (bad) fsts ja mov add fldl xor cld popa xor mov bound fldenv call sahf fiaddl sti push xor repz ds popa push xchg int3 popa xor mov imul xor mov mov xor dec xor xor jg push mov xor lods call xor cld popa popa lret mov xor xchg sahf int pushf cmp mov mov ds add ds cld imul lret mov xor cld popa push mov cld ljmp lods mov push mov jg inc mov jne mov int3 ljmp add mov xor ja mov xor jne mov xor bound ljmp mov jge jg jbe mov mov in call loop cld popa mov xor cmp xor sub ja adc cmp jne aaa leave repz xor jg xor ljmp and cmc jne popa xor in popa xor cmpsl cmp add ds cld or pop clc or pop cld or mov mov loop xor in lret mov and outsl imul ds popa mov and subl jne sub dec cmp adc cmp pop hlt popa xor mov jp sahf add sub jb cld push xor cld popa int clc ljmp hlt ljmp mov ljmp test inc xor cmp into sahf gs jns xor cmp pop cld or lret int clc ljmp in lret in ss popa mov xor popa mov xor aam push cmp push xor sahf inc and mov insl xor xor lret mov cld outsb mov jmp push movsl pop jnp jg xor ljmp std popa mov cmp popa push xor stos imul mov popa cmp xor cld or mov scas ljmp cld popa mov hlt xor lret lret in aaa cld popa mov test popa xor ljmp sbb mov xor sti popa xor mov (bad) hlt sahf inc xor mov int outsb mov (bad) popa xor cld popa inc or fmull mov xor popa mov cmp jne mov mov xor cld jno xor mov xor bnd cmp cld ljmp cld cmp loope popa xor ljmp sub lret in aaa cld popa mov cmp popa push xor cld popa mov xor popa arpl add xor repz enter mov outsb xor (bad) popa xor repnz xor adc std popa xor repnz xor aas xor cld call xor in popa xor ljmp cld jno xor cld popa pop lret xor popa (bad) lret xor std popa xor in xor pusha pusha xor cmp mov cld popa xor and cwtl xor cld popa repnz xor cld popa cmp xor cld outsb mov cld popa xor loope xor repz xor cld arpl inc mov cld mov xor clc popa xor cld popa repnz cmpsl pop jg mov add sbb jg jmp mov sbb xor popa repnz xor cld loope push pop push mov insb pusha xor std popa xor sahf cmpsl mov (bad) popa xor cld popa int push (bad) dec xor popa fldt add xor sahf test dec cmc xor std popa xor sbb and (bad) fs xor cld popa int andb pop test xor dec stc xor std popa xor imul mov cld loop and cld adc icebp inc std popa xor gs xor mov push sahf add test pusha xor pop loopne inc std popa xor and (bad) js xor cld popa mov lret pop aaa cld pusha xor dec stc xor std popa xor imul popf std popa xor mov popa pop clc sahf test dec loope xor add pusha pushf mov lret pop xor test gs test (bad) repz xor jp push cld popa xor mov xor xor jg ss mov add jmp cmp jg push xor int mov ret push push popa inc and ljmp lcall (bad) pop jle lock xor jns xor cld popa xor in xor fdivs inc lods xor in inc popa xor cmp ss std xchg cmp cld repz cmp xor insb aad mov std adc mov jg xor cmp mov (bad) popf cld popa xor repz xor lock ds xor std popa xor int add int mov and mov push cmp je cwtl xor popa inc cmp popa xor push loopne and pusha xor jge lock popa mov out int add add loop lock jmp mov jae sub mov test test xor popa xor clc outsb xor push mov aas xor std adc mov cld jno xor adc xor mov jl xor adc xor jge xor aas popa aas xor stc popa xor popa and cld popa imul loope xor std popa xor cld jno xor jbe or mov cmc (bad) daa mov cld adc fdiv insb xor mov cmc sub lret xor add xor and mov add xor cld loop xor imul insl pop fistl xor test gs xor cld ljmp cld popa xor int fs xor cld pusha cld repz inc je mov xor shlb xor mov cmpsl xor mov cmpsl xor mov cmpsl xor mov cmpsl xor mov mov mov add xor stos sahf inc and xor fucomp pusha xor cmp jmp mov incb mov cld adc mov cld jp xor xchg bound xchg pusha pop xor add mov jge xor cld popa bound xor mov hlt or arpl pop into mov fistl xor test dec mov je popa mov mov lock and xor add mov hlt add repz jno xor xchg pusha pop xor cld popa jb add mov jge xor cld popa pop xor jge lock popa bound xor bound xor pop sub xor cld popa fistl cli popa xor popa pop xor xchg popa pop xor mov outsb mov setle (bad) xor jns into lret jno cld popa push cld loop xor in leave add int pop push xor ja push (bad) int mov mov arpl push inc or mov (bad) call xor ja and cwtl loop aaa jne mov incb mov and adc jl xchg mov (bad) pusha ret ljmp call arpl popa inc les gs jne lock lock clc in inc imul xor jns inc sarb xor push xor ja es jge jg scas popa inc (bad) jge ss and inc push ljmp ja push xor ljmp and hlt mov dec lahf mov adc mov test xchg mov clc lea arpl aad int popa scas xor xor xor xor loopne add lods xor xchg popa xor cld sahf inc and adc popa add repnz loopne mov in xor add lock popa push mov cld loop sbb mov mov ja cmp in ljmp call ljmp neg mov jno mov movsl mov lret xor jb xor pop push xor ja es inc jbe xor mov and ljmp les mov jo call ds xchg popa xor cld xor add insl ja push mov xor ss cld imul xor pop cmc jne popa xor popa bound sahf test dec popa cmp test sahf int (bad) inc adc jge push adc test dec adc mov fsubs xor (bad) inc mov cld mov push xor mov dec adc mov fsubs xor (bad) inc jb cld xor jge push adc int3 loopne adc mov fsub xor (bad) inc jb int3 mov xor (bad) popa xor cld popa xor sti ficoml xor aas ljmp cld popa popa lret ficompl int mov jl xor icebp popa xor adc xor mov popa xor clc imul cld cmp jbe loope xor lock xor cld or pop std or pop decb xor test adc mov popa cs add ss mov gs gs mov xor std or pop cld aaa pop xor lods mov mov lret xor sahf addr16 imul mov leave push sti je cmp inc adc je jne jg and leave mov adc pop jne popa and add outsl ja push xor bound xor add xor call jno jne bound jne mov les xor xor mov inc cmp loop cmp gs mov gs pop add cmp xor ja push xor and icebp cmp xor mov inc fnstcw (bad) xchg aas int mov popa xor and call enter or mov std popa inc sub into repz push sti jbe pop lock push pop mov std jne (bad) mov mov (bad) flds lcall and xor mov popa mov hlt mul icebp aas jge xor jne,pt mov mov inc cmp mov mov loop xor adc mov mov fstpt div push sti (bad) std popa xor mov mov lahf sti push mov dec pop fadds cmp lret lea enter hlt jbe fnstcw int3 cld push xor jne,pt mov mov jmp mov cld adc div popa push xchg in xor inc lds xor inc pusha xor aas mov add push inc xchg adc test (bad) and popf adc jno mov jl test adc test adc mov adc inc add inc sbb xor add inc cltd add fmull jbe sub scas sub jge int adc test adc mov adc inc add inc sbb inc cltd push adc adc mov jle mov push push inc cltd cmp pop inc xchg pop inc imul adc inc cltd cmovbe adc xchg movd movups mov adc mov pop push cltd adc pop mov pop adc mov jo ds outsl fmull adc cld mov int3 add adc mov adc mov adc inc add popa ficompl sahf int cld xor arpl and arpl sub add push xor cld and xor decb xor mov popa sysexit cld popa fcmovb adc xor xor or popa xor mov popa xor jmp popa xor cld popa xor cld popa xor std popa xor cld popa xor cld popa xor add push pop nop popa (bad) adc adc mov jbe add inc cltd pop xor fwait mov lret push inc iret push xor scas mov lret inc pop test inc push popf add pop inc (bad) popa ficompl adc inc inc xchg sbb xchg add paddusb sahf jne mov pop inc stos or push xor pop mov lret pop push mov pop push mov push jae or fxch add bound adc xchg popa fisubrl pop sahf int cltd adc inc push mov jnp lcall lret inc pop cltd or lahf faddl sahf popa push mov inc inc xchg adc fldl int scas add jo adc mov push push cld mov fild sahf fs mov pop pop xchg add cld mov mov inc pop mov inc mov mov lret push push mov pop nop add xor add inc pop mov pop nop add fstp mov lret push push mov mov fild sahf jne mov pop pop cltd xor cltd popa fcmovb adc push inc push mov pop push nop add ffree mov lret inc jns andnps adc push je mov push mov pop pop xchg add or popa fimull mov inc cltd xor lahf add inc stos popa fiaddl cltd adc jno cwtl add inc xchg add (bad) popa fcmovb adc adc xchg add lods adc cltd adc adc ret lret push pop mov pop inc mov and push xchg adc int mov cmova add inc fwait and push xchg adc int scas or fidivl push sahf int xchg add pop iret push xor add push pop nop and push lahf adc push mov sahf int mov movsb fldl sahf jl movsl or cwtl and push lahf adc pop xchg rdmsr fnstsw adc push arpl or inc dec cld mov lds sahf jl mov cmovbe adc push push cld mov fildl sahf jl mov add pop nop add fldl adc push push mov pop inc mov pop mov pop pop mov xor fsts popa push mov pop pop mov inc test inc push popf add int mov pusha push (bad) adc push test inc push popf add int mov addr16 xchg add xchg add jp xor mov pop pop cld mov lds sahf jbe sahf adc je adc inc pop lahf add inc cld mov faddl sahf addr16 cltd adc pop cld mov faddl sahf ja mov inc (bad) popa fisubl add nop or rcr sahf insl pop test mov lret xor add xor add fcmove add int cld popa xor orl add add shl mov or xlat push push cmpsl test xchg adc fst cld xlat mov in push cltd std jg adc std sub jmp inc sbb pop xchg xchg stos fistl mov mov pop outsb lahf inc rcll andb (bad) xor loopne inc in pop jb lods mov jmp (bad) sub scas sbb and jnp lods pusha dec inc and mov sbb mov jb sub lock out xchg mov repz sub mov dec sbb aaa pop popf lret pop into negb adc outsb loopne xchg clc div les scas push mov (bad) and inc andl fcmovnu aaa xchg cmp and lods mov pop push add int3 jnp jecxz jg mov xchg dec (bad) sub or int sahf int cld popa xor mov int std popa xor add dec inc mov inc cltd adc add add xchg or nopl add fnstsw int std popa xor add xor add fcmovb push sahf int cld popa xor test int cld popa xor add xor add fidivl adc int cld popa xor pop sub xor and dec fwait sti push mov mov push add push push jge lock adc rcrb lahf fnstenv push out iret (bad) packssdw mov mov out pop lods jbe,pn aaa arpl ror or std mov gs pushf fsubrl es jp (bad) cmpsl fs push adc xor jecxz lret stc aam dec fwait lret xor mov mov imull lods or ud1 add into cmp sahf pop or lret and xor pushf lcall pop mov dec adc and push pop xor jns dec sub (bad) jbe repz add rcrb mov jmp ss dec les or or incl jl mov push insl or dec pop lods int3 imul ficomp ret jae dec mov xor roll sti sub sbb nop push sbb cli cmp sbbl into xchg vfrczps (bad) jp sub loop sbbl jp pop adc and add xor gs fwait inc or hlt push movsb movsl xchg sbb pop cmc in (bad) xchg and int3 mov cmpsb mov adc sbb jo jnp,pt dec cltd cld fwait jne jo sbb or dec (bad) cwtl (bad) lahf dec dec insl fildll cmp jnp in call lods stos shrl cli push iret sbb push sbb repz in fsubl mov popf (bad) frstor repz cwtl mov call repnz adc push push out int inc (bad) icebp adc mov mov cmc xchg mul push mull mov mov es push (bad) cmp stos mov push sbb sub sbb jle imul pop cmp inc lock jno inc xchg cmp dec cmp inc maskmovq addb inc test sarl jno aad push sub jnp call imul leave int3 loope mov sbbb imul sti lea push cmp pop cmp nop orl mov fsts inc inc sub cmp bnd xor rcr jns (bad) scas and rcl push cli xchg in xor clc (bad) leave inc or jecxz jl xchg pop ret fxch lods hlt pop (bad) popl jge mulb xchg cmp stos cld or aam and imul xor lds dec xchg push xchg pop nop bound xor pop jb xor in mov (bad) push inc and and divb inc out js push adc inc adc sbb test into adc shlb cmc cs pop mov add xor sub insb addr16 mov mov sarb mov repz mov cmp les je jg stos mov pop push mov lcall mov (bad) cld mov arpl and mov outsb fwait inc cs pcmpgtd cmp mov int3 dec fisttpl aam mov (bad) push (bad) loopne mov xchg mov or imul push xor cmp mov jno imul clc in or sbb mov add or nop pop sti cmp jno addr16 (bad) lret dec mov mov lahf dec cmp push shlb insl jno imulb lahf mov adc sbb int in out or rorl and inc adc cmpsl sbb mov xchg divl push cltd push push mov push lret pusha lea mov mov lret iret dec or out dec in add insl pop ss lret mov pop ljmp addb cmpsl mov cmp out pop xlat sub jl mov mov jg pop pop push rol sbb mov pushf fcomps push jge push pop inc shlb add xchg fstps mov dec into jmp lahf or mov xor test mov jo jae push xchg sbb stos xchg jb in lret in aam insl ret arpl xchg lcall in mov popf mov cs push test lock aaa cltd (bad) leave and into or addr16 (bad) jmp mov ss xchg cmp cltd aas repnz xorl mov dec (bad) aam dec dec xchg inc sti mov lods out jecxz add xor insb pop roll adc dec (bad) fisttpll mov push rorl xchg pop sbb aas cmp cmp (bad) mulb out adc in sbb sub out mov push hlt punpcklbw dec mov mov xor (bad) fwait xchg enter stos loop sub push lods or add xor adc xor lods xor lea in dec cmpsb mov cli mov das jl fwait (bad) pop dec mov jl xor imul pusha imul sbb scas sub stos mov inc in mov sbb xor xchg lods mov jno jle aaa jne js (bad) call outsl jno bnd jo adcb frstor mov insb inc loope popf cwtl aad lcall shrb and sahf pop nop (bad) adc pop pop imul ljmp sub mov aad sub jbe ror push mov aaa lahf mov dec dec lcall pop popf (bad) adc bound inc adc mov mov or add cmpsl sub mov push cmp sbb int shr jp imul sarb sub xchg pop push or jg pop lea notl or push das jge fisub bound lret (bad) xor iret mov imul fnstsw into sbb sub (bad) outsl add push dec mov pop lds pop and out mov or dec cmp dec rep mov repz sbb cltd cwtl cmp ss daa cmpsl test (bad) rorb mov mov aam iret cmpsl xchg mov cmp xor push mov adc mov xor (bad) xor dec mov arpl lea leave (bad) mov loop scas call sbb inc dec fstl es xchg cmp fistpll mov lahf mov fldcw xchg dec and aad test add loope mov push sahf dec ljmp xor mov push xor and xchg int3 aam clc pushf hlt sub bound dec aaa mov out jl test jle inc dec mov xchg jmp mov (bad) (bad) out je push cli sbb fcomp rorl xorl pop pop jb int (bad) mov jge sbb xor imul inc sar xchg dec or aad je aad lahf pop in orl test jb insb rcl mov or jg mov push out mov or loopne imul push inc adc sti loopne das jmp sub test adc ja dec xchg mov mov jae fwait mov gs (bad) insb dec mov xlat fisubr outsb vpand stc xlat sti inc fcmovne ret loope push and (bad) (bad) and (bad) fwait xchg lret xlat dec add in xor pop xchg push inc jnp sti nop xor or ror push bound outsl mov je in cs and addr16 add mov andl jl inc adc mov xchg adc aam pop mov xorl xchg add stos in lea or popf stos adc adc shrb add push xchg aaa aas cmp lods cmpsb lret fwait push add es cltd inc xor arpl in je ret (bad) mov enter dec lcall xchg gs dec int3 stos in jo inc dec sub incb out pop scas pop mov fwait cmp mov push dec aam pusha leave push pop push and inc or iret fsubs sahf fisttpll loope xchg sbb bound fdivl mov lret adc xchg mov (bad) or inc dec dec (bad) (bad) cld jmp cli pop xor dec hlt mov ljmp (bad) rcrl pop gs adc movl test mov insb (bad) xchg jno lods jbe adc mov sbb jle aam mov cmpsb push lea pop aam mov sub pop dec fdivs pop push cli jns pop push rclb cmc push test test int mov dec xlat fwait lock xchg inc and jo in inc jecxz push mov xchg jne and fs mov je lds loope aad aas jo lods jmp jge pop stos test mov push dec sbbl push ret mull stc clc fldcw leave push dec lcall fstpt or pop push sub jae push (bad) dec lahf xchg dec leave sbb mov fwait xchg cmpsb pop add jl jbe push dec mov es push out xor dec cmp mov mov pop dec pop add lock inc scas jl stos pop xchg loope sbb imul cmp adc imul fildl and xchg in fwait sub imul pop dec xor fsts (bad) out pop stos mov lds imul cmp mov sahf mov imul dec (bad) loopne inc cltd insb ret mov repnz cli pop sub push ja push not inc dec add out and mov push dec mov or add and test std and xor scas mov adc pop ficom sti aaa sub mov mov cmp cwtl fwait xor lock mov jns (bad) and and mov pusha mov scas adc add xchg data16 and sub pusha pop sub mov dec or mov or popf clc (bad) mov or push out stc inc xor fnstcw jecxz push push mov es cmp cmpsl xor xchg xchg jmp pop sbb xchg cmc wbinvd xchg dec int3 out adc (bad) cmp xor dec push cmp jmp sbb add sbb ja cmp cmpsl mov jle and (bad) pop xlat mov mov cmp xchg arpl xchg pop pop cmc fisubr imul or cmc xorb xor push fistpll mov pop xchg sbbl cwtl jl jl (bad) and les test ss or outsb cli sbb fisubr insl push dec mov popa sbb pushl and add inc loop jo adc jae not jmp bswap shll ret sbb xchg movsb pusha jbe jo pop or adc xchg (bad) inc cmpsl cs push mov pop lock pop jb insl dec sar or clc mov lahf nop (bad) incb xchg rcr push ret pop mov ja and cmpsb xlat mov lret rcl syscall out out (bad) inc cmp mov cmp lods cmpsl xlat aam test rorl mov jb lcall (bad) jo fstpt rcrb push rcrb sub lret (bad) div pop mov mov outsb jno arpl call sub cmpsl adc mov in sahf in loop sub dec sbb add call and (bad) mov mov mov xchg loope sbb jns mov orl add and inc adc dec stos push ror jmp je and pop dec popl aas pop mov mov sub mov or inc xor inc fs call or jne inc mov xor bound test scas (bad) aad cmpsb popf js jg,pn orl sahf and cltd jb dec ret ljmp je adcl iret (bad) cltd loop (bad) inc cmp fisttp mov pop push mov sbb cmpsb dec sbb cmp xlat mov mov lcall xchg jle ficom inc xor gs or inc xchg leave out sbb bnd jno sub dec je hlt iret pop adc mov scas arpl adc loopne xor (bad) pusha in push bound and ja sbb pop or jnp scas pop sub cli adc (bad) in scas inc xlat sti popf in jbe sub or mov rorl xchg imul fisttp leave ja pop jp sbb add (bad) xlat icebp xchg (bad) clc cmc push icebp inc jge roll cwtl adc mov out cmc lahf jo jns cmp es mov ror (bad) test in iret jmp xchg inc into js fidiv lahf out mov add test sti cs xchg add ss test cli jne aam fcmovnu jae in inc mov popa xor fwait inc cmp pcmpgtb in or xchg and jnp sbb movsl mull mov mov cmpsl mov xchg loop xor pop sbb cld ret pop je add test mov cmp (bad) out push fs je push push and mov push sti lods xor lods push cmp mov mov fnop nop and or lcall sub mov mov jge,pt aad mov add out sbb fsubrl loope xchg adc nop mov dec aaa jnp inc adc aas lods push ss cmp mov (bad) into jb cmpsl lea int xchg pop or mov sub imull into rol stc repnz and cmp imul pusha mov jnp sub xor mov jle mov std lods call sbb hlt sbb xlat xlat jecxz add push or test cld mov xchg dec mov mov scas inc mov add or or push jns or lods outsb in jmp test sub inc repz pop xchg xchg jb addr16 mov xor push dec (bad) in out outsb add xchg sahf xchg mov jnp push and fcomps dec faddp dec or dec scas bsr fbld adc mov stc testb cmc lcall bound (bad) ficom insl int3 pop push arpl mov ret clc xlat enter mov mov hlt adc push and dec add in data16 mov and mov jp mov mov lods jae popa stos push out cmpsb cmpsl insb adc (bad) stc dec inc push push xchg lods jmp push and pop jns pop xchg push imulb sbb or popa pop fwait mov pop lea dec decb js stc lret jo and bound add ja dec inc add ret pop mov arpl add cmp mov mov mov sub (bad) cmpsl sub lahf push enter out xchg xor inc sbb ret dec sahf mov cmp in scas test call sahf mov sbb loopne or (bad) or aas rorb imul push imul xchg xor js pop je jg outsl sub xchg test push inc sti pop inc jle sbb pop fimul std jnp sahf or insb out rolb fwait xrelease (bad) ja pop xchg adcl in xchg stos std out (bad) jo repz cmc push jae cmpb clc ret xchg sti inc jns dec aaa xchg xchg fdivs cmp mov fcoms pop fcoms pop scas lcall sti push mov or int add add mov xchg imul loope lock aas cmc xchg (bad) sbb and outsb pop sti dec loope push insb jmp and inc lret rep add shrb pop dec (bad) jge in pop lcall xor dec bound mov add add lea inc test lds sub mov outsb in out adc jae sbb xorl enter fisub dec hlt mov add popf lds ret rorb jb xor daa adc ss fmull repnz add fwait add icebp jbe cmc (bad) jns,pn loopne mov in pop fisttp and test into stos xlat push repz adc pop jmp jne or fisubrl mov ret sbb insl repz push xor inc adc and nop (bad) jmp idivb adc pop inc dec test fistpl mov push sub cmp sbb jl sbb or inc cmc xchg in in cltd into dec jle adc sbb rclb sbb mov inc lock and dec mov push out test jno push pop jnp jo (bad) sbb pop mov clc cmp lret jno loopne push inc insb fild sbb pop or rorl xchg int3 test ja in inc or leave rcrl ljmp (bad) lock jne leave outsl lods jg or loopne mov jo pop movsl hlt pop mov aam push push testb xor (bad) push sub cltd and shrl mov dec test jne mov into dec adc mov and inc inc mov es sbb stos es and loope (bad) lds or cmp (bad) inc dec sub sub fmulp cmp in int leave (bad) jnp xchg lcall sahf les mov jle push popa test xor push es pop fsubs and gs movsl mov jne aaa aad mov and int mov outsb fcoml in loopne xchg je iret or aam mov add push out call xchg xor imulb jg sti fsts and mov add xlat je lods jbe xor in sub (bad) sahf pop pop mov jnp mov fiadd add pop andl pushw cmp push fsubp fisttpl ss and lods stc adc inc test out nop push stos cli stc mov dec (bad) jns clc arpl adc popa js sahf or push rcrb test cmpsl mov mov cmp xchg ret les nop sbb add pushf (bad) pop mov mov or sbb cmp push (bad) or cmp inc jb ss and dec dec in xchg pinsrw iret xchg push sub andb ljmp scas rolb hlt sbb xor into jp pushf add pop outsb xor jmp loop jl scas sbb dec nop cmp das test (bad) xacquire jb movsl fdivl dec pop cmp mov adc (bad) icebp ret sub fisubrl mov mov scas inc mov (bad) bound int or sub pushf aaa ss push (bad) xchg mov xchg cwtl pop inc jmp jbe xor xlat aad inc xor push cltd out movsl das (bad) rcrl lahf mov (bad) jb pop je pop std outsl cmp push mov inc xchg push outsb push xor stos lcall dec jbe xor add push or fild (bad) (bad) dec insb cmc or mov pop stos in push (bad) jbe jge orl add xor add in test repz jge,pt sarl push rol movb dec aaa fnstsw inc pop inc lods sbb lret cld cmp enter sarb push mov mov rcll aad xor movsl cmc movsl jle push ss adc in aas mov stos aaa cs mov in mov sub xchg jmp movsbl mov out or cmc notb jg (bad) pop jo or mov add sub sbb in rcrb add mov cli or jb mov fcmovnb jge push sub in mov scas inc popf xchg cmp mov fcompl testl pop xchg lahf pushf sbb (bad) lods push xchg ss adc fiadd daa fadds out mov ret xchg idiv inc sbb dec pushf cltd into xchg arpl jecxz loop fcompl mov notl outsb lcall cmpsb dec or mov outsl cmp test popa (bad) fcoms lret sub adc xchg loop mov inc sub xchg pop xor pop clc add jmp jno sarl dec xchg shll cli ret or addb stos push push jge flds (bad) scas mov xor mov loopne dec add push xchg fistl das inc fnstenv sbb xchg xor into clc push cmc inc mov stos nop xchg and jle pop and dec mov into cli sbb dec or add jbe stos add inc mov testb dec or sbb mov pushl dec (bad) push push lret mov ret or fdiv adc add xchg mov cmpl inc cmpsl test push fwait inc sti or xchg jge loop jp ljmp cmp adc (bad) jge popf cmp ret imul push jl,pt out bound dec mov sub sbb and cmp pop rcrb xchg inc mov mov das in into leave mov cwtl pop icebp (bad) dec push cmp fldt mov sub dec subb push xchg inc add and aaa xchg sbb mov cs jecxz or lcall idiv arpl mov mov mov sub (bad) pop ss mov dec (bad) pushf and cli mov cmp enter sub cmp jb mov mov int sub jmp lds or imul pop in add mov jecxz cld xor inc fs enter lea dec mov dec test sbb push sub inc and arpl and (bad) leavew test fstpt stos pop xchg lahf xor xor icebp xor pop sbb add jnp loope icebp repz fsts push ret jmp push cmp pop inc sub add mov dec fsubrs or movsl xchg push add dec repz xchg enter adc mov sbb or addr16 xchg inc rcr sbbl inc test dec pop in adc psrlq cmp or push aad dec cmp loopne dec mov pop (bad) mov mov mov decb or pop pop int3 ljmp cmc xchg jp dec mov out repnz int pop fidivl xchg adc pop cmpsb jo mov push adc stos push aad in gs push popf adc jno aam adc or inc mov mov xor inc outsl mov jnp xor fs into inc inc jg dec out jp adc lock outsl fldpi mov scas pushf roll xor jno cmp jmp bound lea rcl lods xor pop cmp out mov and mov pop mov cmp pop inc mov inc adc iret (bad) movsl mov mov repz inc pop int cmpl js (bad) roll fsubrl (bad) xchg dec xor aaa mov (bad) rorb cmp iret jmp in fdivl lcall xor mov andb aam sbb enter mov mov push xchg jle (bad) lods mov xor nop (bad) testb (bad) dec lods mov (bad) cmp mov sbb dec mov insl adc sarl sub dec dec push xchg imul or fcmove scas icebp in jmp aad pop jp jmp out mov sbb and xchg mov inc push add or or lahf mov mov clc mov push and mov loope mov inc pop lahf shl jbe scas ret xor je add ljmp mov sub loop or addr16 iret fld sub mov push movsb push push xchg jnp inc mov lea flds js jmp lcall push test adc cbtw mov negl outsb pop fisttpl cmp mov pop aas test sub sarb aad es xchg scas mov mov icebp jnp xchg (bad) pop mov inc add pop cwtl pusha xlat mov jnp jbe push fsubrs cmpsl repnz inc hlt push popf jle imul stos out out lods mov pop cmp scas sbb lods and jae jg or notl or jmp jecxz out mov leave sbb rcll shrb push cmp bound jecxz std (bad) ds jle mov cmp lret inc lock into mov sbb xchg scas stos adc (bad) out pop dec out cmp ss pop (bad) xor gs cmp jae fcmovnbe mov push cmp mov mov cmp into sbb inc push cs nop and sbb imul or cmp pop lods jp sub lret stc sar repz (bad) aaa testb (bad) je mov popf xor dec mov and and scas lock sub (bad) test xor dec sub mov sbb pop fildll jg imul xor adc in ret push mov test dec and adc (bad) dec int3 int3 pop mov sbb enter cmp jbe push dec inc xor fdivl and add mov jp inc push je cs adc ret lret dec jg stos jg xchg (bad) and (bad) adc gs mov pushf loope pop jp adc pop pop dec jne test addr16 and stos stos in lahf lods xor call push arpl mov lret in popl ss inc add enter sar stc adc int3 mov xchg lea inc in into inc gs sub dec mov lock mov dec out xorl imul push dec sti and rclb pop (bad) rol xchg sub jnp add sub nop jmp and fnstcw cmp xor push inc and addr16 mov hlt and ljmp mov ret loop mov and xchg pusha and fnop cmp pusha cmp lahf mov es xor in pop movsb test jg mov jecxz iret cmpsl mov xor mov popf mov sub out adc xchg cmp xchg dec mov xchg leave rcrb mov orl arpl andl pushf not dec std ret int3 xor xor (bad) mov in jo pop enter sbb (bad) xor adc popf mov xchg push push lcall aas jns xchg aaa imulb mov sti iret mov cltd jnp pop cmpsb ret fdivrl fwait or adc cmpsl and or inc enter jg jmp push mov add scas xchg insl sbbl lret (bad) mov jmp movsl or test scas mov jecxz adcl rcrl pop dec out rolb mov fdivrs jmp int mov popa push imul in into mov test sub out stc or sbb insb jbe mov add xor in pop pop jo mov sbb adc mov add sub sahf ficom insb cmc dec mov pop outsb scas mov inc push jl inc fstpt push mov inc cltd push jp lret xor jl sub mov stos divl mov in sub lret push dec mov das dec and js dec push mov dec daa sub stc cmp (bad) fucomp mov inc xchg lcall jecxz out cmp sub inc cwtl (bad) lock jnp add sbb cmpsl int push xchg sub add push pop and (bad) lock subb cmpsl pop sbb sahf xchg sbb jg sub out out enter mov jmp mov cmp jae das icebp (bad) (bad) jo mov pop jl mov jb in mov mov out inc sti sub add lahf in mov lret out popf push xor sub pop xchg mov addr16 sub lret inc mov adc mov sbb jb jl or mov cmpsl lods (bad) dec imul pop ficomp movsb sub test dec cmp sbb pop pop scas (bad) pushf testb pop dec mov xchg (bad) stc mov pop imul lahf hlt cmp dec and mov jge arpl fist out sub mov test or xor hlt or aam mov test iret jg jmp lahf pop adc ja bound repnz aam dec testl call imul rolb sarl add fnstsw or stc stos iret inc rcrb sub fsubl xor scas scas xorb jp mov add sbb mov nop inc dec jle lret cmp andl xchg stos cmpsb pop cltd jecxz and imul stc jecxz,pn mov call fucomi sub in fisub aaa js lds cmp stos push mov cmpsb int3 jge cmp lods scas dec leave xchg jae xor pop xor lcall jne (bad) mov int3 movsl add icebp ret scas in jmp test stos gs mov and xchg push nop mov fidivrl movsb mov xchg sbb dec and dec inc repz call testb fidivl fwait jo lahf and out arpl enter mov xchg adc andl lods xor cmp inc push mov and sti jl lds adc mov push stos jmp cmp outsb fsubrl xchg inc inc jmp les push cmpsl (bad) mov jb sub inc arpl push (bad) iret out nop jle nop sub popf dec int3 inc mov and xor add inc repnz (bad) push and or cmc sbb cli jns dec shr dec inc dec push je xchg lret lea pop insb cmpsl movsb and vmwrite and inc popf adc pop roll sbb jg jg call test sti add xor fsubrl xor inc popa insb out test push dec andb xor add or sub pop sbb xchg lea xor lea or data16 jecxz mov das dec jb repnz repnz cwtl sub or and imul sub pushf shrl fs ret push insb xchg test das test fistpll xor fcoml sub fnsave daa add les add jle shr imul int aam xor sti repz or aaa inc pusha cmp xchg xchg pusha sahf arpl adc adc inc lock (bad) lahf nop or pop mov mov jmp frstor cmp test push loop cli mov arpl pop (bad) out cltd push fcompl loop xor jmp adc mov loope pop fwait cmp adcl jp popf push add mov jne and loopne fdivs push sub pop subl sub add (bad) jae jmp loope sub inc in mov lods sub inc xor lret ss inc out xchg add fs mov icebp mov ljmp lahf test sahf fidiv push les add and movsb jae mov out sub mul popa icebp fs dec fwait dec push aad and test (bad) (bad) pop out xchg dec ret cmp nop les in mov addr16 inc add rclb push popa repnz mov popf dec pop jb sub or test jge int insl or movsb xchg and fidiv push and jb jl dec xchg add lods in stos jae es cwtl mov sbb push xchg push leave iret add cmpsl mov fstl ja gs jecxz xor pop (bad) mov cmc into (bad) pushl cmp mov je (bad) repz mov pop fdivrp aas test shl sbb push pop (bad) pushf jecxz imul test add adc or sbb cmp insb test mov test ljmp pop stos push loop cmp mov dec push mov enter sbbl jno mov or mov (bad) fadd ja jecxz das (bad) mov mov xor or jns cs (bad) mov insb sti jmp shlb fldl2e cmp sbb mov push jle cmp and clc add in frstor (bad) out (bad) pushf mov jle mov add (bad) or pop cmp jmp lea mov and repz inc ja cmp and mov sub dec ucomiss fwait mov jg dec leave cwtl shll fstl dec dec mov incl inc fimull std out inc enter jns xchg sbb mov jno testl out inc mov pop jmp nop je cld clc lods mov aas outsl outsl in daa mov enter mov and stos jnp stos pushf stos sbb lods insb aam xor jmp arpl mov inc inc adc xchg pushf int mov sbbl aaa sub andb orl sub packuswb icebp mov jg sbb and or or imul cmp adc dec nop insl push add inc idivl shll cmp pop cmp mov or pop imul inc getsec in insb stos test fldl insl popa icebp or loopne jecxz out mov or imul repz jmp into in push rclb add je cmp sti add jb pop arpl cmp cmp or push faddp ficom into and mov cmc dec pop mov adc testl rclb out pop das loop pop mov xchg std rcrl sub fstpl mov lcall iret (bad) pop add dec or imul jmp cmc (bad) leave out jns (bad) or mov dec jmp stos push cmc call mov lret cltd cld (bad) cmc push sub lds (bad) fs out push les and pop fstp push aas dec daa xchg inc fild jl ss cmp xchg lret fimull out cs xor mov xor pushl or push jp loopne mov bound test xchg inc mov sti xchg push sbb in lret fadds pop stos jmp cmpsl mov scas mov cmp pop sti pusha lret xchg outsb shrl iret dec js pop and pop sub mov xor xor aaa mov cmpl fcoms pop loope sbbl adc jmp sar js imul mov mov add dec push add add fs lods xchg inc mov adc ljmp xor cmpsb lds nop adc std jnp out iret jecxz in pusha mov lcall fstpt add es mov pop add xchg lods lret sub and add xor lret and mov popa (bad) loope fmull dec jo push jb push dec pop add pop mov mov xchg es imul int inc scas xor roll cmp cmp jo jmp mov mov cwtl clc add xor rolb cltd daa dec mov (bad) rol fsubrs in dec pop pop repnz je jne pop aaa xchg sub and add repz pop in pop aad mov push repz xchg std popf in mov je mov cmp push js lods add aas push mov xor push xchg or push lods mov int mov cs int mov xchg adc cld inc dec out clc xchg add and mov iret mov pop ljmp test push int3 inc in (bad) shlb lds sarb lahf jge fldl sub adc es adc or lret jnp dec cmp test lds std pop and and movsl mov popf insb pop sbb insl mov sub mov cli and subl sbb xlat out dec sbb or in mov ljmp jbe cmp js imull dec dec jge add test loop jae jno sbb inc push mov inc cmp mov inc stos adc push pop jg inc inc (bad) test fst sbb jbe ret addr16 repz adc cmc push jnp add je adc cmpsb mov in push inc imul mov adc xor lea mov movsl pop dec jae lcall xchg mov insl inc mov (bad) push loope test inc negl scas test or xchg mov jp push mov sbb fcoml jno push gs mov scas aad (bad) push hlt sbb dec rcrb lcall (bad) mov aam sbbl inc (bad) jae push lcall and push shr dec cmp mov and xchg (bad) jbe mov in ds cmp loope (bad) xor pop inc pop push pop or popf (bad) mov lea cld js xor sub push lahf rolb test icebp imul imul mov or imul inc xor leave loopne fldl (bad) aaa into test add notb fbld lcall (bad) int xrelease std lcall add push stc bound xor int3 pop mov pop add mov (bad) loopne sub xchg or push dec xchg inc mov adc cwtl inc sbb jp into les dec sti jp das xchg mov sbb negl rclb cs pop std cli inc lret test add sbb xor pop push aad cltd sti mov cmp hlt test ret insb lcall das sarb xchg cmc fucomip sti mov (bad) sub jae mov out in nop addr16 mov lret sub sbb (bad) jmp dec sub jecxz jne mov leave pop jl xchg pop mov push dec and daa bound test mov lods dec movw repz imul push or sti int push stos dec ficomp mov sub jnp jo loop test push out pop jne adc push in jnp fcoms rcrb pop je,pt cmp lahf jno or es rcll call pop and cmp jl movsb jno inc sbb pop sub mov cmp inc mov xor (bad) xchg in mov sub mov lret xor lds movsl inc imul or icebp arpl jbe and sbb jg jns out mov pop adc and lds inc imul imul and adc (bad) sub cmp orb or (bad) lret jns (bad) or stc pop xchg out sub mov sbb mov movsb and jno sub pop lea rcrb and cli out inc mov dec mov jno rclb adc mov dec xor es and mov dec (bad) adc ss leave dec push loope adc and jp lds sub push stc sub sub or (bad) or fldenv ret out and pop or (bad) cmc pop xlat jge pop mov test fldl push and mov mov pop outsb int cmc dec sbb insl and sub mov mov pop cltd or cwtl sbb lods xor roll jo mov fsubrl add je mov mov stos pop daa int js in push (bad) jecxz xor xor mov pusha rcrb jp lods sub xor aam and out mov push in pop in xor mov roll ja inc push xor jp mov (bad) jmp idivb xor jg,pn fs xchg imul cmp adc xor jno dec push (bad) dec popf insb les push ljmp mov ss and adcl loopne sbb sub test rol xor dec push ss lcall sar xor out sub xchg pop das jmp sbb shrl pop mov mov lock push xlat mov not bound dec sub xchg mov or add inc or xchg subl and jo fidivrl xchg jp xor cld sbb nop std sbb mov lret add hlt cmpsl fnstcw fwait sbb pop pop push stc repz (bad) divb loop iret mov sub movsl daa fnstsw mov or mov cmp aas mov sbb je loop movsb in movb fdivs push cmp bound pushf ss sbb push xchg inc fucompp les les jl push pop add fisubrl adc mov rol int3 ret inc je jmp mov iret xchg inc fwait jae mov dec or inc ds pop pop int lods scas pop inc data16 fwait test mov push (bad) xchg push ret iret xchg jne mov ret call mov mov lods pop les sbb xchg jl sub mov nop xchg outsl cmp adc int sbb and dec pop (bad) mov xor test mov cltd andl sub inc add xlat (bad) mov out mov gs dec push (bad) jbe in or lret (bad) das ja dec pushf call jle pushf pusha jbe sti notl (bad) jno ljmp lea lock fbstp add jecxz jmp ret rcl pop je add jo jnp mov cmp in mov sub (bad) xor add and mov dec fadds aaa aas dec mov roll out sbb outsb cmp dec ja add jmp xor and js into hlt ds xchg aaa inc pop pop adc iret ss in sbb dec scas insb sub adc or sahf and xchg pop mov mov inc imul pcmpeqw mov (bad) add push les add xchg ss sbb add mov mov xor aaa stos int loopne fidivl add sbb enter cli pop rcrl into pusha pop (bad) pop jmp mov pop mov or (bad) stos mov rorl sub inc std rorl mov loopne jle (bad) rclb mov addr16 pop sub lret push xor sub jg aas xchg push mov pop pop sub cli out mov cwtl xorb xchg enter popa mov mov popa popa mov sbb cmpl add lock lds out ds mov loopne mov fsts pop cltd add dec jmp imul lret leave and inc add sti sbb ljmp xchg fnstsw imul mov outsb adc mov dec les push mov ret and mov xlat ja in xchg and cmp and xchg pop mov mov xchg xor push lods outsb sub cmp (bad) fist cmpsb xor pusha out push adc out xor mov fadds lds int cs addb push outsl pop rcrb push pop imul and das cmp dec or fucom call nop or mov xor nop movsb test jge cmc xchg push xchg mov (bad) jmp aas inc inc (bad) ljmp lret mov (bad) jns ficomp pop jg lds push lret cltd fldt fdivrl xchg out pop not repz push movsb imul fisubr pushf pusha out pusha (bad) ss add lahf imul push mov dec sub dec xor xor mov jae fistl xor subl fsubr mov out push jge jle popa jge xchg aaa cli clc push lea out and mov mov xor mov popa mov sysexit dec mov lret add mov aam mov scas pop pop jge add das jge jbe mov int xchg fucom leave push imul fidiv mov (bad) repnz cmpsb in stos mov hlt addr16 xchg xchg cmp pop addl add mov pusha cld sub out fidivl dec xor dec clc sahf xor sub add arpl stos mov inc pushf push push cmp xor dec sub nop mov inc (bad) cltd dec shrb out imul cmpsb imul jno out shr and push cmp inc pop mov push mov xor lds int3 push jp mull fsts cld fimull fwait sbb add add out pop dec or sbb lcall ficomp rcrb (bad) jp cmp jl cmp out jmp imul (bad) mov clc mov outsl adc outsl fidiv loopne push push push sbb lret imul mov sbb aas push std inc push icebp mov incl sub jecxz bnd cmp pushf add fstl insb dec or fist popa rcr gs leave jg data16 mov jo sbb push fstpl xor mov and arpl lods dec xor daa (bad) mov inc dec jmp mov jmp and cli fiaddl mov xchg cmp repnz es jg mov loopne sub jno xchg sbb jnp fwait mov daa jno mov gs test push inc (bad) gs into fstps inc pop cwtl jne lds mov shrb les dec mov push lret rolb movsb dec and jg mov enter or jmp mov push orl daa sbb aad sarl add pop out shll jno mov in jno cli xchg xlat das in int3 push sarb sub jge jmp js or imul and lret jmp enter xlat mov xor pop or stos (bad) jg mov out xchg imul lods sub push cmc pop lods sti push push test and xchg push outsb iret in in sbb scas or sbb call push sbb test sub rcrb out mov mov lds add (bad) push in inc or pushf inc lahf sar notb movsb int clc add sbb cltd xchg notl lret cld cld jbe pop imul xchg cwtl in add cltd aas addl lahf (bad) js adc cmp pop jle push sub pop xor sub cli test sub xor lahf jmp adc in and (bad) popf mov mov mov push mov out cmp js inc ja and xchg adcl push adc cli ret jae aam xor xor popf and lret loope xchg pop mov ret loope mov shrb and mov sbb dec adc dec jbe and add insb add jp inc xlat lret sub in mov lods and xchg movsb in pop adc pop popf dec or dec lea fimull loopne or pop mov sub test testb mov ja and mov jg insl push xchg sahf ret jl cmp cmpb popa lock sbb outsb mov pop clc mov andl aam sarb add sarl inc addr16 mov js lret add mov jo cmp (bad) jne pminub xchg dec pop pop mov lock jb (bad) cmc jo push ror cmp fsubrs mov mov inc jp fnstsw push pop xor push mov insb pushf dec cmp sahf mov pop insl mov roll and pop testb jecxz cli les imul sbb jmp cmove jl stos mov jae faddl mov pop pushf cmp lods jbe or aaa push dec dec js cs rorl imul shl and lret ljmp movsb aas enter or xor rep in cmc icebp cmp fcompl cmp ficom and mov fdivl rclb gs nop pop fdivrl in pop stos inc sub sbb subb pop pushf dec cmp hlt inc repz mov mov ljmp das das pop xor jmp rcrl scas cmp stc pinsrw das push (bad) sub arpl cs int adc aam andb mov rorb lock mov stc mov (bad) jmp data16 cs int3 xlat ret jmp or rolb mov popf es xor outsb mov (bad) dec pop jno loop out inc icebp test jae mov push loope fadd xchg sbb sbb pop jge and clc cli addr16 xchg ds xor outsl rcll mov mov mov xchg repz ret and xlat test xor inc data16 mov movntps sbb jmp jle lods and adc lret lret jmp push mov mov movsl adc xor xlat sbb pop faddl and sbb push (bad) jl mov shr mov out inc int3 test (bad) daa pop in js xchg insl dec fwait xor hlt jae (bad) loope call sub (bad) (bad) lcall je xor sub sahf test mov ret adc ret lods inc push sub clc faddl in pop pop dec xchg mov mov jge or inc daa dec lds push ljmp fwait and xchg inc pop jns fsubrs dec jo xchg sub mov xchg mov adc sahf testl or mov mov lahf mov out xchg lds call jno mov popf call ret pop cmp xor aad mov bsr out je ljmp push (bad) pop mov mov jns stos fwait mul sub and add jb mov in mov mov aaa in test cmp mov mov and out movb in je je fdivs jns push add add add (bad) nop xchg call dec add or es jp test out mov outsb (bad) and push add into movsl jno sbb lcall mov imul pop insl fs cmp ror xchg xor arpl mov xchg dec fsts imulb fsubrs adc add ss sub std dec pop lcall xchg (bad) je push inc loope jle cli mov mov popa outsl add lret es gs lcall outsb pop in pop inc rcl addl mov pop (bad) jp mov pop push popf icebp ja outsb movsb cmpsb mov ljmp idivl pop mov adc mov pop cmc int3 sahf (bad) and fiadd clc inc dec scas stos xchg add or ficompl loope mov test (bad) ss ljmp inc push jo mov test push andl pop cmp cmpsb sahf mov and loop test iret aaa sbb jae mov jo popf add push cmp push (bad) rcl gs and rcrb xor pop inc lods in sub jno iret mov int movsb test jp sti mov adc dec add call mov dec clc or enter sbb mov fwait add inc mov push mul cmp pop sub fiadd dec fs decl xor into cmp pop push ss push stos push xor decb adc push sub and sub imul mov (bad) jge inc sahf mov popa imul call outsb (bad) dec insl xor mov fsubl dec cld or mov or iret (bad) pop xchg clc shrl mov dec (bad) loopne inc lea out jl sbb mov add mov lock jp inc imul mov mov jl cwtl jecxz imul bsf ret mov mov push adc lahf sbb pop push dec pop stos and cmp outsb push or popf (bad) and lock xor xchg ss into sbb addr16 xlat (bad) jae adc scas inc lea sub jo or outsb or ja std jns scas push xor cmp jecxz adc cmp dec mov mov cmp xor or jmp (bad) pop xchg adc divl push xchg and (bad) mov lcall lods jge sbb jnp jne xchg mov push jns test adc xor in lcall mov sub imul movsl sbb test in pop imull push or int dec nop jns xchg sbb sti daa mov mov adc adc mov call xchg div inc sbb fwait js pop mov push stos rolb pop repz ljmp mov jnp sbb add add pusha xchg pop iret cltd (bad) mov inc push xchg aaa int3 ror out repz sbb and rorl scas mov jbe popa (bad) (bad) cltd add enter or adc push icebp jno (bad) and and pop ss pop fist fbstp push mov mov push addr16 lret push int imul sub sbb ret jecxz xchg test scas xor and pop and xchg (bad) daa inc inc xchg jnp pop push out sub mov stos repnz push adc or jns (bad) cmp fstpt int xlat mov lods aaa xor movsb xor enter mov cmpl fwait cmpsl adc push cld cli iret jl mov xchg mov pop adc pop add or out pop mov dec jae xchg cmp xchg outsb dec stos lods mov aad sbb jb mov add jmp lock (bad) dec mov dec addb and arpl ss mov gs out dec scas inc xor out (bad) cmp out fmuls lods jmp leave int push adc xchg adc call xchg lock (bad) xchg or repz lods push xchg jo xor movsl popa sub push repnz popf and (bad) ja clc and add (bad) adc lods fnstcw dec xor mov outsl pop mov shrl sbb scas cmp lcall inc pop mov outsl call stos dec lcall mov pop mov add dec insl push ljmp outsl (bad) pop lock cmpsb cmpsb cld cmp push cmc push sbb sahf xchg rol and mov movsl cmp fmull daa or sbb out into shl inc daa push cmpsl stos sub jmp mov mov andl enter vscalefpd xchg lahf sbb push add into mov cmp mov jmp dec push sub cmp cmpsl mov cs cli jp xchg sbb dec es cmp sub pop mov xor icebp test jb fldt jne sbb mov (bad) mov mov data16 sub pusha cmpps insb push jecxz sahf or movaps and xchg (bad) aad dec (bad) pushf bound js loop push cwtl pop ret jo lods mov xor mov clc outsl jo test xor adc rcl fwait add pop test (bad) cmpsl idivl lret cmpsb inc jle push sub daa ficompl adc xor and inc test jecxz mov push add lret jg (bad) outsb sub mov and pop jno std mov popf cmpsb pop sub stos call inc mov and scas cmpsb push cld dec (bad) gs xchg dec xlat pop leave dec sbb ret aaa movsl fistp mov xor ljmp dec in or sub sbb sub push sbb push or sti mov sub js push scas inc sbb out shrb xchg loope stos mov jne cmp addr16 (bad) jnp inc or xchg fistpll ret scas or lret fadds mov inc sub repnz pop hlt gs xor mov push mov fisttpll mov pop xchg std pop adc dec scas mov fsubl jp xchg mov sub andl and (bad) dec push std cmc pop sub xlat push mov jg xchg dec int jbe adc (bad) fs pop xor ljmp or push notb sti fs mov cmpsl lret test in push xor jmp jle sahf rcr movsl ss fwait xor dec sbb loop pop scas xor xlat xor movsb push pop pop cmp push add sbb pop push clc jno jnp or jno outsb mov push in jb jbe sub cltd test mov popf and jmp dec shll xchg xor outsl ss jp sub add lods xchg pop ret sbb scas inc sub pop lods dec dec and lock adc and sbb pop call mov mov sub cmp lods mov jno ds leave jnp out push cwtl je lcall call mov and xorl add cmp int3 fldl cmpb jge jmp cmp loop and push fisubl xchg outsl xchg sub pop mov cld js fistpll xchg movsl mov xor xchg ficomp in pop fsubr dec movb notl sti mov loop dec xchg xchg insb lock lock out xorl stos test aaa bound lock (bad) cmpsb xchg pop push inc cwtl dec inc lods or pusha push add pop ficomp iret inc jecxz mov mov int3 mov aad negl aam dec fwait ss jp mov out dec (bad) xchg je and rcll xor inc push iret pop adc cmp and dec mov fisttpl (bad) push dec add mov (bad) push lds jb mov cmpsb mov dec push loope cmpsb out pop bound xor mov push lock jecxz mov and mov packsswb (bad) inc addb popf mov xchg cs mov jecxz fcomip jecxz ss mov pop scas push fstl cmp in loopne mov dec std mov ljmp stc into push and movsl arpl dec pop outsb dec xor cmpsb or xor inc sbb call xchg mov mov mov in pop mov imul pop sbbl int clc mov adc stos in fldcw mov inc loop cld xor inc enter cmpsb jmp ljmp lock lds popa sub lret out arpl mov adc (bad) jmp push cmpsl insl cwtl and pusha arpl dec xor or int inc jl adc push inc addr16 jle andb xlat add adc adc jb push popf adc jb jmp lods adc xor pop pop fs es out inc inc jge adc dec sub decb (bad) fisttpll xchg lods sbbl xchg jne mov mov (bad) adc dec clc sub sub cmp dec jnp out aas add andb add (bad) or mov and paddw (bad) mov mov jmp xor or fdivl and ds movb scas xchg mov mov adc dec dec adc outsl pop pushf and (bad) lock sbb or out and xor sbbl rcl cmp push fist (bad) fildll xor inc push add add pushf loop repz movsb es jmp push mov pop mov or push sarb adc dec rorl lcall xchg arpl jp sbb dec jl cmp sub add push adcl lods imul dec in lret mov insl dec (bad) fidiv push push cmp fcomp lods mov jle andb jg idivb sub sub xchg fdivrl pop xorl sbb pushl mov addb bound mov inc or push lds cld into rcr or fsubrl mov mov dec push pop cmp icebp sbbl adc test shrb xchg ss jl das ret cmpsl xor or lods push xchg repz inc mov shlb mov jno in mov and les pop in dec cli xchg inc sahf inc mov (bad) ja ss js add dec or mov inc es rcll pop cmpsb out leave xchg push jp mov mov pop loope fldcw stos lret andb pop cwtl and pop jne adc pop movsl sbb add sbb push pushf mov mov xchg cs bound or push cmpsl inc (bad) dec out dec push cmp inc clc sbb les dec mov mov cmc fcompl int nop cwtl out lcall add imul mov fsts and pusha cmc sub lods or imul add mov sbb push sti push inc mov mov pushf inc sbb add stc xchg (bad) aad (bad) shrl inc inc stc mov dec mov push push loop inc dec add (bad) jo in aas mov dec or rorl mov cwtl xchg push lds add jo push dec dec loopne out and cmpsl or fsubrp dec sbb pop lret fbstp scas imul sub pusha xor jmp pushf mov js loop mov dec das subl call jno mov pop ljmp mov paddusb into lret lds ret mov cmp dec jmp sub jmp jg mov aaa dec aad add scas mov fiadd adc mov and xchg mov je aas push rcll push sbb insb shrb sub inc lahf jg cwtl mov inc sbb scas gs dec insl pop js pop pop push in scas stc inc js sub inc test add (bad) push sahf xorb mov push dec lret sub xchg lret xor and cwtl mov in aas jp mov movsb and int out adcb decb dec xchg das mov adc pusha jmp int3 pop loop addl or mov cmp (bad) jmp push in movsb xchg incl or cmpsb add dec pop ss jo shll mov inc sbb mov jnp jmp dec pop das add pop dec sbb sbb icebp push pop fwait sub push js pop rcl repz add std ljmp cmp sahf lret pop lret push frstor mov lods inc out add cmpl mov sahf out jns out mov cld mov fistpl iret sbb xchg mov push das fisubrl loop in mov clc (bad) push (bad) int3 (bad) pop or shrl pop mov add adc push addr16 mov fs mov mov inc cmp test cwtl ds stc jnp loop hlt inc cld aas lods lods lret fwait iret stc int mov (bad) rorw jo fmull cmpsb fbstp sti test leave and cmpb mov push pushf jmp pop jnp scas in dec mov pop in adc add mov inc outsl sbb in fs stos pusha adc sub inc into in xor sub mov stos int cmp hlt add mov mov mov mov cmp pop daa xchg pop add push sub aad mov push stc xor (bad) int sbb jns push cltd jo mov movsb pop mov sbb loope enter jge rcl xchg scas or bound xor popf jge gs and in adc pop adc dec jnp mov pop push stc add mov enter stos enter sub add loope jl rolb jge inc addr16 les adc mov cmp push ja pop in (bad) jmp pop or pop sub pop ret xchg mov repz lcall pop inc lock imul inc push aaa lcall scas pusha sti sub pop push mov les pop add jbe leave push loopne push xor dec push adc xor mov add dec test ret repnz shlb cmp lods pop jge xor cli dec pop xchg dec cmp mov xchg imul add and cwtl or cmp lock xor push cs stos inc dec and pop cmp stos shlb xchg mov (bad) enter imul cltd rcrl loope jl jmp xchg jge pop push or repnz xor sub jg lods cmp inc jne inc mov dec gs scas jnp xchg repz pop popl jg adc sbb in lods mov inc inc jae cmp xchg sti pop add inc test in cli test inc adc add dec xchg in inc (bad) loope push cmp ss lea cmp add or mov (bad) mov sub cmc xor mov cmc cmc or repnz inc rorl addb mov jne or imulb push mov cwtl sub (bad) mov cmp xor test pop ds es test push sub pop imul jns push stos xchg pop push repz cmp in add int3 xchg notl iret add movsl clc sub dec int fcomps les pushf push mov xchg sub adc fucomip notw addr16 add and dec out cmp int3 jno fsubrl xchg cmp imul cmp dec aad movsl mov jae xor movsl insl xchg or test aam pop mov cltd fist loopne jns (bad) and fsubrs outsl cmp bound lahf adc scas xchg cmp (bad) push gs push movsl cmp rol leave cmc or pop out lock and leave daa mov idivb dec stos insl dec outsb xorl or fistpll (bad) lret jge fs ss aaa aas aam push fisubrl lods (bad) adc call mov hlt popa cltd xchg push lock mov rorl inc mov mov sub or cmp (bad) (bad) add xchg mov push aaa imul xchg movsl mov es test (bad) testb and and or cmp mov std sub mov cwtl incb call les test pop lea xor in mov fcoms inc sbb pop inc push mov inc and (bad) stc mov sub in mov shlb xchg rclw push fstps sub bound fmuls and push mov add popa insl aas rcll int3 xchg jbe mov ljmp cmp sub ficom inc xchg jo daa sub loop stc push cwtl xchg jp mov (bad) int adc dec xor push pushf jg (bad) cmpsb mov jb,pn js push es mov daa sbb jne cld mov dec sub (bad) out jbe xor and xor inc or jb popf js or cli fdivrs push leave and xlat mov fidiv fsubrs lock pop adc inc jnp xor int3 xor jno into cmp scas xlat cmpsb clc js dec shr outsl nop xor and mov int3 push (bad) cmp rorb data16 ds mov call mov fidivr dec add jns icebp enter push add cmp and dec movsl add and mov inc out (bad) mov mov out mov pop (bad) cmp xchg in mov jnp je jo cwtl dec mov orl iret imul jmp cltd setnp vmread leave xchg cmp aad or dec movsb ret mov push jge jbe pop cmp inc add lahf mov test cmp mov xchg int3 test cld dec rol lcall in push adc adc xchg mov rorl and mov jmp outsb ret mov pop lret xor add mov mov pop xchg pop mov mov mov or pop mov add mov pusha cmc lock mov xchg sbb cmpsl int3 (bad) mov xlat jge imull cli in jno add icebp fs outsl jmp stos pusha out mov xchg jmp mov adc ret pop or mov roll stos arpl out pop bound push dec push pop and xchg in and jae rolb ljmp es jmp call pop (bad) stos dec mov subl xor add imul sbb loope xchg test popf loope adc fucomp lock stos insb outsb dec (bad) jne cld inc loopne inc mov ret jb jp pop add iret (bad) (bad) sbb adc shr inc add (bad) stos cwtl inc (bad) jbe aam es (bad) rolb dec ss push aas jb or cmc push mov mov xchg inc sub into repnz std xor das sub mov loop mov jae pop (bad) xchg lea add mov push and sub mov cmc mov cld aam jb (bad) in dec mov idiv out in les popa aad fs sub test mov mov inc cltd pushf xor push dec sbb ror inc pop sbb daa lcall bound test adc out lock imul sahf ss dec ror add (bad) push pop mov repz lea mov ss dec repnz (bad) rcr xor jae pop xlat out jae pop push enter loop xchg lret stc fidivr fwait scas les into cli out test mov fldl inc call cmp add sub or jb mov data16 pushf mov std in pop jne xchg dec popa mov mov lods pop int movsb imul test clc lock cwtl xor push push mov xor xchg sahf insl mov data16 or sti sub popa push js and or cld test sub imul insb inc call movsb cmp xor sahf sar sub fldenv cwtl arpl sbb out sub fmuls sbb xchg lret xlat sbb ret mov aaa dec icebp jge in aad pop inc push jae into loopne dec (bad) adc add push lcall add mov cmp lahf movsb mov int3 rcrb push cmp add dec and push mov popf cwtl sbb (bad) add negl xorl jecxz mov xchg pop cltd (bad) fwait ja add (bad) fisttpl and push mov addr16 adc adcl arpl pop sub nop jl mov loopne cmp push pop and into jl popf (bad) fisub xchg das dec add xchg inc test aad int pop cmp js cltd mov mov push bound cwtl xchg mov (bad) pop mov ja or push fstpt cmp int3 dec sub pop test sbb test outsb adc cmp pushf outsl sub push lods out stos xchg cmp mov or out inc mov cmp or xchg mov cmp fldt insb es popa push inc das mov xor (bad) icebp lods xchg push lods arpl in (bad) add sub mov (bad) loopne sbb test and cltd add ret mov pop xchg fcompl push pop xchg les inc add scas nop jge adc aaa pushl cmp test data16 inc jecxz imul xchg icebp ret mov jecxz mov stos cld (bad) imul in push (bad) push mov popa sarb sub in pop idivb lea je xchg xchg xchg ljmp mov rcrb pushf das adc cmpsl adc arpl pop (bad) pop dec jp movb inc not movsl xchg or adc insb add lret mov in pop mov xchg lods add mulb mov jno sub ds (bad) or test xor sub xchg jg xchg mov mov sbb gs jo xor push and push outsb jg lods xor mov sbb pop pop mov mov arpl lock and aaa mov jge imul aad xor sbb ffree and scas test arpl into leave out decb xchg mull add cltd in jmp push loope or (bad) lahf mov cmp (bad) or mov xchg inc add xchg in pop push (bad) fwait jb addr16 jmp in lea adc sub repz ljmp std dec push bound pusha mov or add push mov jbe push dec xor mov lret aad cmp push into lea es aad lret push icebp add hlt rcr lds pop push xchg ljmp decb leave dec xchg adc sbb call and pop jmp out mov mov xor loopne and scas dec cmpsb or pusha fisubl jns stos cs cli fldl lcall imul mov adc push mov pop mov cmp cli ja dec push sub repnz call cmp aam cmc ficom add test pop add pushl mov addr16 push or rol insl iret cwtl test mov dec call push push push repz (bad) lock popa popf inc cmc dec ja inc cmp inc fldl fstp shlb faddl outsl mov ja cmovbe std (bad) (bad) out inc (bad) lret sub (bad) iret or mov cltd loop jb rcrb jb jg lock arpl xchg fcompl gs (bad) imul cmp (bad) stos jno neg xlat mov inc cmpsl popa jb push fadds pop xchg inc es jl arpl jo pusha outsb mov mov jg sarl add loopne dec ret lret push cmp js shlb pop fildl push (bad) loopne gs dec ficompl xchg xchg cwtl sbbb inc cmpsl call mov pop or pop ja inc lcall pop iret das in inc bound push repz jp into cmp sbb cmc mov xlat mov and cwtl out hlt fisttpl xchg nop jmp lods jb sbb ljmp lret pusha add loopne xchg aaa lret into ljmp (bad) scas popa and int3 sub mov lar int3 push sbb mov movsb fist (bad) (bad) fidivr mov ret mov leave and fmull jmp fdivr lret jp arpl cmpsl xlat pop or out (bad) cs test orl dec jo test daa pop or dec (bad) jp mov aad pop fisttp pop enter (bad) (bad) insl lea jge dec pop insb push aad scas dec cwtl in dec aaa aas adc xchg pop push mov div test sahf and push insl cmp leave stos xchg clc add sub push insl add rcr adc (bad) lock jmp out leave scas dec in mov inc sub sbb mov jp push push js or mov push pop mov in into (bad) inc inc mov inc cs push (bad) outsb out jbe rcrb adc sub adc xchg (bad) dec and stc cmp or ja out lcall and jnp movsl mov shr mov pop sub gs xchg dec insl pop bound xchg (bad) repz push arpl mov addr16 ds lea loopne js or bound jl nop pusha xor mov mov aaa mov fsubr and pop gs mov test loope push xchg xchg mov loopne mov cmp popf loopne icebp popa mov mov repnz scas lods fmul je or fwait (bad) jae popa push ret aad cmp mov mov imul and (bad) xchg ja and xor in mov cmpsb sub push les (bad) cmp pusha jns xchg sbb cltd mov xchg scas lret (bad) jae sub add lods ljmp in jo jae mov mov pop xchg cmp rcll test xor cld cmp pop ja xor lahf aas jno popf arpl loop incb jo ret adc outsb into lock stos and jg,pt scas inc and mov std dec push lea mov xor or insb jg hlt lcall dec and repnz ljmp dec sub push cmpsb jne push pop fwait xchg pop mov cmp es push in cmp fcmove les xor pop loope xor mov and addr16 bound or fcom jb ss mov fcoms mov scas insl xor enter inc notb pop inc or test lods mov out es jp inc xor scas call popf loopne cwtl aaa mov push test stos inc mov pop pop mov mov addr16 mov jb pop and adc sbb in sarl and dec das cmpsl sbb pop aas cmp jl (bad) xchg mov je adc outsl (bad) aam add mov jmp mov insl call sbb adc push mov ret shrb jne sub cmp jae xchg mov mov jecxz (bad) cmp das pop or xchg sarl or movsb imul imul mov fs lds les jbe (bad) sti mov inc mov lods inc gs dec in mov rcrb mov mov int3 lret mov (bad) mov inc data16 mov push xor ljmp nop dec pop push mov jle jl lds sarl sub je bnd cmpsb in xchg push push or or add dec dec inc xchg xor popf jmp rcrl dec icebp push mov push jl and mov and hlt les adc dec pop jl xbegin and (bad) loope sahf pop cmc xchg mov in fwait mov aam orl and pop addr16 mov xchg sahf jnp jne inc stc and xchg add stos sub adc mov insl shlb and xor stos sti into fcompl add subb cmpsl loop loop xchg jl cmc ret sbb adc outsl mov frstor jno or fistpl pushfw test xlat pop pop xor push add adc stc push bnd push inc cli pop cmp xlat pushf outsb sbb stos call add ret xor ret ja mov xchg lds fcom jge (bad) js mov cltd inc in shlb or mov jecxz imul sub sbb jl imul fmull sub pop xchg or mov and adc (bad) (bad) jmp mov scas stos sbb mov js out pop iret xchg enter or (bad) pop mov cmp cmp mov das in jne leave je sbb js es dec icebp fnstcw mov sub add mov mov ds dec jbe mov clc je jb aas xchg shrb pop sti mov sub (bad) mov outsl push loope mov test push jno clc jmp or orl mov pop jo lods lds (bad) pushf loopne rcll push dec sti out sbbb hlt leave dec inc lcall test sbb cmp int and mov dec loopne cmp xor insb (bad) push xchg in push cld mov mov fsubl ret sbb sbb loop loopne lods add nop xor mov ret push mov out sti fwait inc adc inc add (bad) dec xchg and sbb pop mov mov lea push add mov scas in std in cmpsb in jl repnz push (bad) mov mov scas xchg out inc cs aas mov add or popl sbb in fisubrl clc aaa gs xor inc leave push imul jb jg mov push inc lods dec arpl or mov and xchg inc xchg pop cmp pop mov xchg pushf jle into std push sub pop fmulp test or or mov int3 mov lea pop and repz cmp adc popa bound fisubrl xor ja sbb ljmp push inc mov xchg movsb sub in (bad) mov xchg (bad) cmp orl aad les lds lahf aaa roll push nop xor rclb aad stos pop in test idivl ret xchg fsubs (bad) loope out lret adc and xchg adc inc mov fisubrl sti push pop add (bad) fidivl xchg pop int3 sarb leave jmp loopne mov repz bound and jle inc mov push adc or mov pushf rcrl push fsubs mov inc enter jl mov push jae mov xchg out rcl lret mov adcl (bad) mov sub test stc add es jmp jecxz jl adc jecxz jno enter jl ret mov fnstsw ret pop sbb ljmp loop fsubl inc sahf popf jbe mov rorl insl fs lods fisubrl mov ds adc push xor or mov aad sub (bad) rcrb scas adc loope mov sbb mov dec push enter mov in arpl jo movsl loop push fiaddl jmp and out mov je pop fisubrl imul xor xor jbe out out xor out lock fsub mov push lock pop mov push mov incl imul rclb inc pop push loop jmp mov xchg cmp inc mov ljmpw popa push push push (bad) stos dec outsl cwtl push xor push lods fwait or cs cwtl add sub pop icebp cmp xor mov fimull xor out inc aam xchg lahf and pop out pop mov xor sbb enter pop jl sub jae cmpl sti mov inc dec ss inc scas test and dec ja or push (bad) pop notl je call fdivrs mov (bad) fstpt mov pop (bad) jb mov mov mov and fwait mov lret pop mov (bad) jle mov andb dec cmp pushl sti mov mov imul push mov cltd jl sbb sub outsl xchg mov ja,pt mov fsubrs xor lcall mov push and (bad) cmc pop imul and ja pushf les dec stos or jns jle lret in push mov test mov jl andb and and lods inc cmpsb (bad) scas push inc std jnp daa (bad) iret jnp mov adc insl mov pop add jge fistpll fnstsw xchg insb les lret or icebp sbb jle (bad) xor mov dec cmp pop xor movsl sbb js jg and lret cmp push popf mov pop sahf mov jb pop ljmp push not shr dec sub dec jp pop mov dec cwtl inc mov sub xor iret movsl sahf add mov xchg sbb hlt (bad) jo mov test or mov inc push scas aad mov loope out ror or cld jb pop lods push nop or insl lods jb jl push dec add pop leave jle pop nop les mov jecxz mov aad dec pop shrb sbb add inc nop cs jle sub or mov cmc jae int add mov dec jp mov fucomip dec jge lret push add iret inc inc xor in or shlb fimull jo pop mov into fcomi incl cmpsl mov sub add xchg mov rorb and popl sub sub cmp inc pop or movsl mov jne sub stos sbb arpl xor jno lock shrl mov dec repz lds hlt lret push stos mov imul cmp test leave out cmp xor jb mov arpl addr16 mov mov (bad) and mov inc or (bad) xchg pop xor cmp test add pop inc xchg js lcall pop lds mov or xlat push pop push sub fnstenv xchg ret out mov sbb aam inc lahf cltd jecxz inc pushf add and int data16 flds fs dec cld pop fisttpll pushf jnp inc rcll fstl shlb pop hlt ror push pushf mov sub mov add popa push test insl (bad) jnp test cmp mov adc xchg cmpsb out mov test in pop loope test sbb mov test in daa insb and and or or (bad) aas sbb and jb add adc mov into push test push pusha cwtl sub nop pop cld jge or or xor mov mov cs pushf decl inc lcall xor jp ret mov xor cmpsl andl test jg dec (bad) cli push scas jne sbb cmp leave rolb cmp cmp out mov insb sti out inc mov (bad) and push lcall lods or adc idivb mov gs or push andl test stos iret pushl mov es xor bound int clc push cwtl cmpsl insl mov in int mov loope mov xchg mov aaa rcrb mov dec cmp test jmp out add outsb pop loopne cmp or sub and cmp loopne int3 add mov data16 push stos fidivr inc add (bad) inc (bad) outsl popf inc jnp ljmp xchg aaa xor push jmp movsb movsl fcom outsb shrl pop mov sub mov ja mov jmp stos sub xor jmp xchg xor xor xchg mov and iret jo pop lds fldcw pop (bad) inc enter nop fidivl inc notl lcall bound (bad) xor out mov mov cmp sbb lahf and sti aad mov jmp sbb xor jb cmp mov mov lcall mull jbe add xor mov push imul outsl cwtl push pop fistp sub repnz das dec shr inc xchg adc pop hlt gs inc sub ja or push mov das in daa mov les jno push pop or lea add pop and sbb xor negb addl call les mov add adc and mov sti repz push sbb sub (bad) pop ret imul sbb test cmpl pop inc test divb cmp sbb mov xchg xchg negl fcoms sbb pop rorl mov mov int3 pop or push jg arpl push fiaddl and andb sub mov and mov aam push lret aaa jg inc jo jmp sub std push fcom cwtl or lds cmpsb dec fisttp mov push dec sahf xchg repz lods (bad) addl push test lret or add push out lea pusha push mov mov dec push imul cmp dec outsb xor fucomip stos test mov les (bad) (bad) fnstsw hlt cmpsl popa xchg ja out cli sbb into sub and mov xchg cmpsb nop ds mov jp popl jb out mov clc lret jle fdivl imul xchg add jmp jle pop cli aam xlat lret outsb int3 out mov xchg fs in sbb xchg and jl mul ret jne test sbb fisubl arpl int push jne aas bound mov (bad) scas mov dec xor jo stos cmp cvtps2pi cld or aam or enter xchg jnp cld inc mov jnp xchg scas mov pop lods jp adc jns mov jns repnz popf shrl dec mov lahf dec push addr16 inc pop pusha add fsts mov and mov jge mov leave dec mov pop xor test xor ss jne sbb dec insl daa test push pop mov fisub lea aad cltd test loop xor cmp and loope mov xchg and mov or sub loopne fwait pop imul push sti (bad) cmp mov rclb je hlt adc (bad) je push sbb mov push mov mov cli dec push ret lods adc lods cmp xlat loop adc rorl lds jmp popf push int (bad) cli ja mov pop ljmp cmpsb fwait cmp icebp jp push shrl pop push and fs and mov add out ja or fldcw mov sub ja jnp out xchg mov pop or mov das das lret jno dec stc mov and mov dec or jno (bad) jnp ds add (bad) mov push jno push mov dec rorl jge or ret (bad) arpl addr16 mov push xchg add enter mov cltd leave adc or push ljmp and mov or stos bound test (bad) jnp,pn fcoml inc inc insl sbb mov cltd push imul mov xchg push cmp sub jno xchg lock fmull xchg ja lods movsl mov jnp sbb inc test paddd fisttpl das sti mov jae add popf and ret sbb mov cmpl pop mov push add mov jle jge leave and mov dec mov setno dec daa fdecstp test adc pop arpl xchg test pop dec in pop fistpll (bad) cmpsl jb idivl xchg xchg les sub inc pop xchg pop (bad) jl fnstenv cmpsl aad add mov (bad) aad jge out push dec or (bad) lods mov aaa (bad) fsts sub lods lock cmc xor loopne xchg mov push das push xor cmp mov fcoms sub jg (bad) and in pop fsubr mov xchg mov adc rcrb movsl xor sbb sbb jno inc ds dec popf mov pusha jbe mov mov dec out inc xchg sbb mov inc loopne add push aad adc mov dec adc cmp sub outsb in inc add ret mov mov pop sbb mov xor data16 int3 and add jo stos das inc and cli scas inc rolb cmp mov (bad) mov inc or fwait mov iret aam pop (bad) mov inc xchg inc xlat pop adc sbb push daa ds ja divl nop mov es (bad) mov mov repnz mov sub inc (bad) or aad jmp lcall das push sbb leave jp sub pop movsl or mov mov push inc int3 shll cld mov xchg inc shrb jge int out inc mov int3 pop dec xchg call pop dec sub sub xor and sbb and cmp or and loope push movsb adc lahf mov out xchg out rorl and hlt mov mov add sbb lods cmp pop add pop dec cs fdivrp mov dec out fildll sub (bad) cmp cli nop into movsb mov pop insb cli fcomps pop mov addr16 add mov imul xor jo repnz out pop jno cmp (bad) int3 incl aad mov leave cmp jmp mov cmp insb mov icebp dec pop fldcw sub (bad) mov outsb or int3 or sahf repz or (bad) xor imul adc call jp push push mov sahf push lcall mov cmpsl sahf cmp xchg sbb adc mulb add insl xlat and aam sbb add xor lods xor int lods jmp xchg push paddsb inc movsl mov (bad) rcl sbb push ret sbb dec ficoml test sbb mov pop cmc imul inc pop iret les bound data16 sbb or adcl std xchg mov mov jmp adc pminsw aad pop ret je outsl xchg jne gs mov xchg push cmp fwait adc sbb aam sahf jae sbb sub fistl cmc loop and add inc test xchg mov ret pushf lods or icebp mov adc jge jecxz adc cwtl (bad) das pushf js jp cmp jg jmp dec cs addr16 pop mov cmp push adc sub pop repz shrb cltd hlt icebp cmpsb ret add inc add test mov lahf sbb jae push push pushf xchg daa mov xchg icebp ds pusha repz call ljmp pop jo (bad) stc push nop call push or mov pop pop pop adc mov pop mov fisttpll jg (bad) std shl add es sti cmp jns insb jmp stc jle pushf shrl mov sub aas mov clc gs mov pop cmpsl dec dec pop out lahf repz and shl insl ds je jae mov aam inc sbb sub sbb repz addr16 cmpsb mov repnz dec mov mov popa aam xchg inc sbb mov pop std (bad) popf xchg loop mov sbb stos enter test mov jg sub dec cmp arpl pop push in dec sub sbb or adc jge mov aaa loop,pt les xchg xor ja je mov jbe mov aam (bad) sub (bad) mov cmp (bad) xlat shl (bad) repz test add (bad) or jbe mov aam xchg mov subl mov dec subl jo jle mov inc movsb mov inc push sub imul push push adc adc test mov push or mov mov stc arpl sbb mov sbb push jae iret mov ret leave popl fist aas (bad) (bad) sti cmc lds push cmpsl aam (bad) fstps popa push mov add sub (bad) push decl push push ljmp push add pop (bad) mov jbe dec push in lret (bad) icebp jp out jmp rolb aad mov or xchg outsl jmp jp cmp fisubr mov push jbe loop sbb dec cmp loop inc dec shrl ja and xchg cmp out push add int3 push pop (bad) rclb pop ss add cmp mov aas movl iret mov es call jo lods arpl sahf or and loop std pushf dec add clc inc mov lods pop popf cmp sahf cld mov dec shrl imul lods or pop mov repz loopne fnstsw fidivr dec lret in adc and arpl lret pop add jp pop sub mov aas pushf ljmp dec fidivr mov in push jo xchg pop mov xchg add xor cmc push lea mov popa dec mov sbb (bad) lods push mov popa aas or outsl xchg xchg lret (bad) stc add outsl cmc dec icebp xchg movsl sbb andl add out dec arpl dec fbld popa fwait pusha (bad) jo scas mov aam pushf cmp mov pop scas and xor nop mov lcall enter dec in pop cltd out mov clc ficoml sbb xchg and xor jl xor xor xor (bad) stc loop ds imul cs adc dec xor rcrl push xchg pop push sub mov iret xor pop add je and pop xor enter rcll sbb aam add mov sbb mov mov sub and lock je loop sti jbe sub scas es lods add jmp (bad) sbb jne bound ret xor lds outsb pop jns sbb mov jmp inc (bad) mov pop jl dec neg push or jmp aam xor in xchg lea dec loope pushf xor mov insl or ljmp lret lret insb movl mov aaa (bad) testb hlt loop xor sbb cltd mov (bad) icebp (bad) sti mov mov cli mov stos mov (bad) mov loope lahf cmp cmp cli and mov addr16 xchg mov dec in mov lret add jg mov icebp jge jmp sub nop and inc xchg jl (bad) jb lods or sub dec push mov out rorb lahf adc stos loop gs pop dec jmp (bad) pushf sub sub ds or and nop add and fdiv push or orl repz dec pop es scas stos push add les lds shr mov (bad) fnop adc popa in popa in (bad) push xchg test adc or mov or pop xchg push mov cmp cmp sub or mov and mov dec in aaa gs jge (bad) cmpl sub jne or insl (bad) test int3 xor roll push out mov divb push (bad) punpckldq xchg xor fnsave push loop mov xor push xor les sub ss mov test sahf std imul fsubrs xor xlat cmp sub and and xchg fs push daa cmp dec xor or xor and jp gs xor in dec fcomps arpl push sbb daa mov inc jb stos iret test sbbl cli cmp loope fcmovb fmuls fldcw dec pop call nop jmp xchg pop ds fnsave xor mov test aad inc ds inc (bad) (bad) pushf xor into int jp sub lea and roll dec pop cmp es (bad) hlt (bad) fidivrl pop sarb cld cltd lock scas sub in loopne pop call arpl and sahf jo stos lock mov push dec cmc aam inc mov dec sbb fs xor outsl pop mov out jecxz inc loope and mov sub push sti (bad) call xchg xchg idivb dec pushf jecxz arpl ja test cmpsw movl jl xor (bad) and sbb jo jle mov jge adc adc xor cmp out sti inc lods cmp xchg mov dec sbb je mov mov int3 jno ss insb mov dec and pop rcrl dec xlat xchg les xor and es sub in jbe aas jge imul mov (bad) jle pop sub sbb daa flds pop ds dec scas inc cli pusha inc (bad) or sti arpl jb sbb ret xchg push out and sbb ss fdivr mov in push xchg in in lods sbb fiadd imul xor and cmp adc mov dec mov xor xchg sbb sub sbb mov mov in inc rolb imul ss dec push out xchg pop adc inc ficom jecxz push inc push ret aam test mov mov jae sub add cmp lea fdivl (bad) ds xchg repz adc ret inc (bad) fwait sbb pop cld test repz mov mov jl jmp sub cmp xchg hlt fs cmp dec and jle lea xor mov xor push mov lea (bad) scas sbb adc xor movsl cmp (bad) adc jnp (bad) notl loope imul sub mov push sub dec inc pop jecxz or xor das adc jge xor cld sub cmc mov sub data16 mov fdivs pop movl rorl ja push jo loopne cmpb pop shr js (bad) insl cltd mov outsl lret mov lods adc push adc dec lock add push dec popa repnz (bad) jae pop popa push xchg movsb daa dec insb and hlt push (bad) sahf popf dec cld cmp sub outsb sub call adc es data16 pop cmc jbe cmp sarl aaa sbbb xchg bound mov push in mov fwait cltd mov adc push imul mov pop push mov movsl cmp stos sbbb adc jbe mov sbb sti mov sub sahf xchg xor jnp rol sub add push out or and jnp fwait push or xor cmc add xchg jecxz iret xor in inc cwtl sub ret xchg inc test cwtl sbb sub mov sbb ret in sub movsl addr16 popf sub insl fwait add (bad) pop icebp stos mov test movsb mov sbb cmp fimul aam xchg lret ja xor aaa cmpsl fsubrs dec int inc ret inc inc jae jge jae pop xor sbb fwait add adc (bad) mulb test sub mov jmp mov daa lahf test and pushf nop dec repz push repnz scas jecxz jmp mov pushf adc push in dec jbe cmp lcall decl mov jle pop cwtl dec cmpsl hlt fwait pop push or xor stos jcxz cmp push enter in out mov pushl (bad) xor mov fistpl inc sbb mov (bad) into (bad) data16 ja (bad) cltd jge incl push test sbb fsts inc mov push cmp daa std pop lret ja ja fs pop call orl (bad) push dec in fcoms imul les fdivl jecxz (bad) lret scas mov in sbbl jp in mov jg mov hlt pusha pop fcoms ljmp pop insl xchg out jmp and ret iret and xchg addr16 repz xchg (bad) cltd xor sub sbb pop es les les push imul call pop test xchg xlat cmp mov inc add pop and push enter je in (bad) xlat jb add xlat aas adc fidivl ficom push out ret push and out aaa mov xor test loop jmp cwtl sbb xor cmpsb or sub mov scas jo scas push lahf fldl add and int mov es mov xorl out sbb pop inc rcll rol shrb sbb out out push inc sbb aas stos jbe adc mov pop aaa test stc xchg inc sbb orb insl push leave jno dec int mov xchg mov (bad) je (bad) stc js mov lds aad sarl iret insb lea cs mov outsl lret and push push xchg sub sub jae adc xor mov xchg mov xor (bad) and jae rcrb rcl out cli lds lret fistl mov cmc jecxz mov xor mov push outsl test pop call lock insb hlt (bad) mov adc jle hlt pop jge roll xor movsb jo dec pop mov fimull sarb popf dec push roll xchg movsb shl call cmp xor xchg mov cs test xor xchg retw imulb mov dec cmpsl pop inc popf stos xor pop pop inc ja sub addr16 lret inc rcl nop gs movsb mov imul outsb or pop lahf repnz add and jle stos or sub xor loopne ljmp ja inc in ret (bad) cli test sbb xlat gs in lret aad pop or pop jb loope push inc (bad) xor pop sahf sub jl clc or gs clc adc jno imul mov rcrb mov mov add lds mov leave lcall push mov in jne (bad) add push pop outsb insb xchg out movsl push ss mov pop mov cmc xchg ljmp inc adc cs call pusha int3 cmp ficom iret or xor push mov adc (bad) and sti movsb bound stos ss xor cwtl dec mov dec (bad) adc lods lret inc mov sub stc mov les and mov or movsb push xchg pop mov dec xchg jae jns ds pop jb pop je mov sub add mov push movl and mov mov or xchg mov ret (bad) sahf inc ret mov sbb jb xchg or jmp ret xchg xor into out pusha lret cmpb rcll mov jne fimul movsl pop (bad) mov movsl xor and mov mov sub cmp (bad) stc pop xor mov stos stos sub andl cli test mov sahf mov insb sarl icebp mov mov cmc push or nop in cs loop test adc jge and add jae jmp mov cmc call bound jmp pop into adc mov es ret in (bad) dec mov mov and jne ret mov mov xor outsl negb or dec xchg dec pop lock je pop fwait aam fidiv sub ja (bad) leave mov jmp or jge ss in mov push push mov dec (bad) and loop shlb and push mov xchg or push daa (bad) cli sbb loop out xor cmpl inc hlt mov pushf lock and movsb xchg (bad) aam xchg xchg and or loope popl (bad) push mov cwtl ficoml leave arpl pop pop (bad) xor push cmp rcl or and clc mov (bad) mov call mov or cmc mov out lahf sbb mov cmp push fdivl xchg repnz push out mov sub int call lods movsl dec and cmp imul xchg lock push cli xor jmp popf inc xchg pop mov enter shrb lahf push push int fdivl insb inc xchg lock scas jae loop inc cmp push dec aaa xor cs sbb mov fldl add mov mov adc mov lcall insb rcll negl sub popf popf mov inc mov loopne (bad) xorl sbb lret outsb aas insb jo popa jb nop ja sub out or mov mov insl push es xlat xchg or xchg pop adc iret add pop imul lods add sahf sahf stos out es cli push in lea rol xchg xchg outsb inc push movsl add dec xchg fistpll push and mov push mov loop xor loopne and fs loopne movl lahf iret cltd dec js icebp xchg push push hlt adc jmp movhps mov cli mov dec shrb xchg movsl (bad) dec dec rcll xlat iret adc lret sub inc rcr daa ret jns jl mov dec xlat inc fwait outsl (bad) push je mov inc mov bound jg movsb repnz in mov mov lahf out hlt push cld and jbe mov or lods out out outsb clc insb pop cmp mov push xor repz xor mov shrl fcoml scas (bad) cli ljmp flds iret mov sbb daa test mov icebp push ljmp lret inc (bad) stos out lret sub mov jo test in data16 xchg test xor loope push and movsb imul into fisttpll movl mov stos push ret adc or (bad) fbstp pusha cwtl inc insb mov out jo or pop fwait lods add and (bad) aaa xchg mov rclb in outsb xchg ret pop sub loope movsl mov inc mov pop push inc and mov enter jecxz add jl cmc cltd loop rcl fdivs lods add sub ljmp (bad) sub xchg loope push icebp das outsb imul dec jp jnp mov ret sbb sbb inc dec lcall pop fisubr xor mov bound add mov into and insb xor stos repz (bad) cmc mov jo adc fsubrs mov mov and std dec xchg dec test mov (bad) lcall (bad) sbb mov test mov mov cmpsb nop addl mov inc jo jmp je dec sub fs lcall adc adc dec into and xchg adc flds dec repnz xchg (bad) pop jmp sahf flds lret xor add add sarb (bad) mov lds lret jnp sbbl rolb arpl fucomip std cmpsl push xchg cltd mov push jg or sub pushl notl out repnz fsubrl pop jo dec xlat test and inc gs (bad) xor inc insb mov iret pop (bad) hlt fisubr (bad) mov push adc sub xor sub aam inc test mov jecxz aad aas stos std std mov inc out (bad) lds inc inc pop testl clc adc dec inc (bad) xor call jg mov adc pusha loopne cltd out jae rorl dec in xchg mov xchg mov lret push mov mov sub sub dec cmp pop xchg mov mov lods inc xchg (bad) notb sbb mov mov lret ljmp iret or ja jae mov loopne and cmp leave push mov mov mov aas cld mov ret sub inc daa mov inc jns adc (bad) pop mov movsb xchg outsb mov xchg paddq dec push jns push insb sub jle movsb (bad) push add out mov mov jl je lret cmc add push cmp push pop jl mov je sub rorl out mov pop sbb dec pusha inc mov mov mov repnz insb mov xchg int jge and nop jle xor sbb ret cli scas xor dec mov pop sti xor inc leave jg ljmp in (bad) mov test (bad) stos adc adc mov cwtl movsb mov movsl adc xchg fsubs xor cmp xchg aaa insl push inc sti mov sub loop sub adc lahf (bad) sti add jbe xor xchg test or inc lcall fs adc xchg pop cmp fsub xchg and pop dec (bad) (bad) adc sbb inc push sub mov mov movsl push push mov push ss sbb scas in push and loope enter shrb inc loope mov jp pushf mov mov inc inc dec sti test dec insl pop pop repz or jmp xor enter pop dec int and cwtl mov mov movsl ja js sbb ds aad or rolb xchg mov arpl add sbb adc scas jb stos dec fist mov cld xor stc jmp and out leave test xchg mov (bad) jb repz adc xor dec test push imul push ja inc push dec dec push loope stos pop cltd inc addr16 xor pop add push notl sbb dec enter repz sahf sub test adc cmp xor mov das scas popa mov push mov sbb mov cmp mov rorl xchg lcall inc xor pop adc mov fild add or inc test push xchg adc in adc lahf mov xor andl nop mov aas or (bad) lahf jmp jmp and fmull cld cmc mov xchg or and dec insb and lods scas cld pop das mov hlt aas shl mov cmpb dec loope scas (bad) mov push cmp sbb ficomp (bad) cmp js sbb lock int3 mov dec mov les sub rorb jmp (bad) lock mov insb test cld imul pop cmp ds mov (bad) jno dec stc jae jno (bad) lea pop out adc pop xor or fnsave sbb mov movsl cmp in lods out mov cmp jnp std fcomip sub test cmp enter or cmpsb jl xor xchg inc imul inc test mov lock and ss in nop mov add clc out pop fldcw cmp lods or lcall movsl dec leavew lcall or cli xchg pushf adc or jne dec cmpsl adcl and fsubrp cmp pop sub mov pop fmul sbb xchg loope rorl adc rorb loop mov lcall int3 int3 jl dec add sti jecxz add xchg jno imul enter sbb pop mov das push jne sbb aad push lret enter jae insb gs pop adc inc pop inc shrb jb (bad) jnp push or jnp lods and leave mov stos pop and pop outsb andb ret std bnd in sbb cwtl and mov push adc fld loop or out movsl mov xlat inc sub (bad) sbb jle gs int3 and sbb add cmc andl dec mov mov shlb mov pop and jno test push pushf pop in fdivrp push or xchg enter fnop push leave ds shll rcll std sti sar clc popa addl es xor (bad) mov dec dec mov aam repz xchg xor xchg jmp lret add jae and arpl ret dec lods sti (bad) jmp push jno es push nop les inc push mov fwait cmpsl sub repz and cmp test jns xchg jb cwtl lock mov dec sub pop das jp std in lods push sbb in sub aad mov inc mov imul mov xchg mov xor and daa (bad) loope push pop push mov outsb dec mov addr16 pushf imul pushf adc sbb jl adc dec push fdivp jbe mov mov pop pop cmpsl das dec aam cmp pop bound mov pushf fs add fs add stos mov xchg ljmp fistl push repnz mov fcoml outsb fidivrl daa push in pop mov jge mov out adc push rcrb imul div push sub cli stc pop pop xchg inc stos lock push out or push scas lcall (bad) ja ret icebp jo push enter jnp lods fsubrp mov arpl in cmp test mov mov pusha lds jmp push jns mov fs pushf roll xchg fcmove int3 icebp pop pop and lret dec jno cmp sbb das outsb mov mov cmp fdivrl rclb cld (bad) mov sub push add sbb pop imul fwait jno loop negb outsl repz insb inc (bad) xlat ret dec sbbl or outsb (bad) in pop cmpsb add inc repz sbb (bad) ss xor imulb push in push lock sub add in sbb repz pop push add lods mov jp add lret lds or pop test adc loope shlb std push push subl mov idivb mov outsl cld cmc jg icebp lcall out pop xor popa add jnp shrb fsubrs roll in jnp xchg pop out add imul cmp jl add out cs subl sti mov mov insb xlat mov lea push sar jmp enter fdivs adc cli cmp (bad) mov iret cmc les inc pop push jns and rol repz lds test lahf shlb mov mov jp adc std decb stos orl jl out pop lods mov daa jmp lret jg cld or cmpl aad ljmp sub out sub cmp iret or ss lock sbb adc jle sahf into cmc and jl mov ret inc and jg jmp (bad) dec sbbb mov adc mov sti (bad) sub in mov cs movsb in fwait jp iret sbb pop jae (bad) fwait fs aad adc (bad) push sub inc and adc inc fsts out mov imul mov lods mov (bad) and es outsl pop es fs push pop fwait xor std or jbe xchg mov inc hlt sub cs mov or pop jo stos xchg mov sbb outsb sub sbb mov movb pop clc push (bad) and mov test out cmp hlt out dec daa lock dec sbb pop lods nop fs je sbb test lahf pinsrw or subl movsb loop push dec loope push imul jns fwait rclb cltd lcall (bad) imul das std aaa cmp sub jmp out mov lcall mov je jo inc nop sbb lods das mov inc gs xor and test and pop add push stos mov xchg movsb in jo sub mov push (bad) pop or mov xchg test inc mov add sbb and push pushl xor das ret pop cltd inc fcomip test push inc mov in and arpl rcll je sub jle cmp cmp mov scas jbe cmpsl movsb test and dec and cmc or ss arpl and or and repnz xor sub xor push test mov jle xchg inc or fisttp iret xor push push mov or negb rolb cs jo or add push jmp gs and xor shrb fcomip mov adc lret mov dec stos sti fwait sub xchg pop push sub repz mov adc enter sub cmp mov jb cmpsl push sbb and push mov sub xor inc scas xor ret jge repz and imul es leave jne mov inc cmpsb (bad) xor sahf movsl loope push inc xor pop push adc pushf cmc adc loop iret or in mov mov mov enter mov stos fistl inc pop jno sbbl sahf sahf pop push sbb xchg add dec sub outsl jne mov mov jae shlb aad sbb fild push mov pop (bad) xor or test test cli rolb gs xchg test imul jle sti aad lock aam xor xor std push mov imul mov mov test dec pop adc mov out jbe pop cmp shlb pusha fmull cmp pop push sahf les adc lods in mov int cmp push jg xchg xchg pop push les sbb cmp test repz fwait fs xor loop out cwtl adc jbe cmp jecxz fcomp popf adc lds fcos es sbb aam (bad) dec dec mov in imul dec mov xchg cmp adc jns push inc ss ficomp aas xor mov push jg sbb gs popf sub add rcl ficom or jle cs sbb cmc lock iret sub xchg add xchg push out loopne repz fisttp cmp xor mov ja pop push int3 xor mov adc outsl sbb mov out cmp cld mov in ret addb and mov sarb pop mov mov xchg push dec sbb fs inc std push push ficompl das push mov (bad) icebp pop mov test mov loop xchg pusha lcall in or xchg inc cmp push add or adcb shrb sub dec outsl add push jo roll aas loop xchg jge imul xchg sarl notb sahf bound xchg lcall mov adc mov jae in repz xor arpl pop mov adc push mov cmp movsb xchg ret aas or dec lret sub xchg (bad) pop pop xor sbb xchg inc cmp mov dec mov std or inc cmp xlat mov dec pop das xchg pop push cmp insb or fwait sbbl jo out fdivs fist gs aaa fsubrl (bad) push into fstl aad jnp mov xor aam shlb insb xor arpl pop or or (bad) ljmp fwait imul xchg scas mov ret gs mov cltd jle mov (bad) push pop iret and fcoml test ret inc or mov repz popa (bad) inc mov (bad) mov dec cmp negl (bad) insb adc mov and scas jp jge jno das push rcr adc lds xchg daa cltd xor ljmp xor aaa inc lret sti mov hlt testl popl dec dec dec dec test dec jnp pop jge cmc adc popa fistp ds jmp mov pop jge sbb (bad) pop jmp jge aaa enter pop js adc in push mov and imul aad mov dec jno or pop cmp cmp imul mov push hlt insb data16 or jno repnz enter cmp adc movsb xchg in movsb leave add cmp out lods xchg test add stos (bad) stos cmp bound sbb (bad) test pop lock rcl aas jmp xchg inc enter cmpsb cwtl cmpsl negl lcall lret (bad) lods iret or arpl pusha in jae out lahf push xlat mov lock out insl dec adc sbb push gs in xchg mov sbbl pop mov adc inc sbb stc dec pop add leave xchg sbb test and cmp mov std ret and push adc clc xor mov jne cmp push bound jmp xchg sbb jno and pop int3 mov cmc adc pop inc xor xor jp and xchg jmp mov sar (bad) ljmp lea mov push jl mov and jne sbb clc or lods sbb rclb add in pusha dec psrad dec adc sub jb jp adc lret sbb jg movsb sub add ret push divb push mov aad andl dec dec dec outsb nop movsb push or push mov cmp out mov and mov inc push mov ja pop jbe or xchg xor pusha scas push mov insl pop lods xor push fsubs jg imul pop repz es iret xor dec in push out adc arpl inc cmc adc mov subl imul iret notb inc je jae scas sahf push dec rclb xchg push mov loop ret mov mov jno jno mov fildll jp repnz mov sub fldenv mov popw pushf (bad) test aad mov inc daa xor out sbb divl cmp ret sbb xor sbb xor xchg sub lds fsubl sub sbb adc jp hlt rcrb mov mov push adc (bad) push lock dec jmp push icebp cwtl add test xchg aaa jns adc or xor xor addl jle dec mov in lods jne lret sub (bad) out out test adc dec lret ss pop lahf (bad) dec inc mov jns push call xchg pop inc mov mov fxch inc fdivr int sub sarb arpl js gs rorb call or or push sub rorb xchg cmp or jmp mov popf or xchg xor cs cmpsb je mov jbe out popa xchg fldl cltd in add mov cltd (bad) dec jnp out push or cmpl xchg sbb scas imul jle stos lock or inc mov cmp mov adc stos or adc sub xchg cld loop fdivr loope xor loop pop cmp dec jmp cmp jb insb xchg gs jnp mov out data16 out nop enter xchg sbb lahf mov cmp (bad) xor aam xor dec dec push pop sub mov add (bad) mov nop pop cmpsb lea and push out push sbb and push lds (bad) mov mov dec sub xchg orb jg cwtl or fdivl or xchg es mov orb ret test stc loop sub lcall (bad) and sub decl push push outsb dec inc or sarb and popl and add inc aaa scas jg fwait mov clc es addr16 or sti rorb push (bad) sbb push in lock xlat sarl lods push push nop inc jp and jle xor and sub mov sub mov mov fs das out movsb push pop jo pop push add sbb xchg cmp imul xor xlat scas and xchg mov dec lret sub adc ds sub mov movsl ds fs out jmp inc push test sbb adc shrl gs lock loop movsb mov gs inc subb ficomp repz xor mov xchg dec jge jbe mov jae mov fsts cld in push cld pusha ret (bad) xor adc ret insb mov push mov orb out jge push ret sub idivl add addl jb aad dec negl pushf push les adc scas mov mov pusha data16 inc pushaw outsb mov arpl call xchg push outsb jle les inc and mov (bad) sti xchg mov push jp je popf pop in sub lret or aas cmpsl stos lods cmp pop aaa sahf shrb and iret or cmc dec int cmp scas out lock or pop sti gs push bound fdivr pop xchg into jo mov ficompl push pop xchg mov and jmp xchg mov fnsave out lret mov mov pop adc int adc mov in xchg xchg inc int3 add inc lods (bad) xchg les inc cmp xchg push sub cmpl jb or ljmp or or mov jle int3 jo dec mov pop int xor adc repz aad inc dec inc sbb push pop inc cmp pop int3 leave ljmp push je sub adc notl (bad) dec lods sub and fisttpll js das lods xlat push and bswap fs (bad) mov cmp xchg stos int3 enter push lahf arpl rorl xchg lcall das jge mov push jecxz clc jl and shrl test cmp outsb subl mov decl in push mov fsubrl sbb dec cmp dec (bad) (bad) dec insl imul inc ror nop jae clc sub shll jmp dec aad out sbb mov adc mov lret push int jp ds inc add int int adc push lcall sub add dec mov push or and in cli loopne,pn test faddl dec xor (bad) pop xchg push push call mov mov dec sti dec jbe sbb dec insb pop loope dec mov insl dec and fs pop or fwait adc aad outsb mov dec xchg leave (bad) popa mov incl mov add jecxz (bad) dec xor sub cmp mov mov pop cwtl (bad) test dec gs rclb push cwtl xor out rol aad lock cmp imul jecxz (bad) cmp pop in fcoms or leave rol add push add jg sbb mov mov cmpsb push fiadd ret push ficom cwtl repz fnstsw xchg jae out mov fldenv xchg (bad) sub or xchg xchg les fildl and jb rcrl cmpsl pusha adc xchg pop test jne (bad) pop jne adc pop add push jl push fadd loopne lea lea lcall xor sub sbb adc jmp in add movsl adc cs jno cmpsb xchg push mov push add ret add rcrb insl pop lea pop add test jge addl and mov out lock loope test or (bad) movsb pop insb jecxz (bad) mov loop data16 fidivl dec (bad) dec pop movb sti les dec mov inc test and sti pop lret (bad) cwtl mov lcall lret icebp pop popf loopne icebp repz or hlt push shrb (bad) and fwait jge sbb and or hlt out das repnz imul cmpsb dec mov mov ss cmp push mov cwtl dec push aad imul roll mov adc icebp lahf in outsb emms push and scas (bad) sahf test pop jle loop mov mov sbb pop mov gs or test mov xchg scas aam fidivr test adc repnz ficomp jge add add push cli push pusha cmp adc lcall cmp in mov in loope jge sbb stc mov jne lds or dec and xchg dec pop mov xchg push cmp xor and jecxz insb les cld mov xlat fist pop sbb sub xor lods stc jno add lds fldenv mov sbb fist outsl rol mov je addr16 repz push jl lret mov cmp jl cmp push test fwait fwait jp xor shrb cmpsb fcmove xchg add dec pop lds fiadd push add pop xchg push cltd dec push inc repz ja and xchg sbb xchg mov mov push cmp mov push test aas dec sti pop sahf repnz add xchg mov ret es lcall xchg cli pushf or mov cmpsl xchg lret repz aam mov jge loope xchg pop lods add int3 bsr scas fisttpl in out iret lods dec out push mov sbb insl pop ja (bad) mov sub mov add push mov fwait cwtl xlat idivl and cwtl xchg mov mov sbb push clc xchg punpckhdq mov lret cld sahf inc mov and and gs (bad) fidivrl inc cmp aas dec call out imul push sbb nop cmp dec push or out lret pop dec mov inc mov mov (bad) xor mov les sub mov cmc sub dec cmpsl push sbb push cmp sub jmp xor cld mov sub das sub mov mov mov cmp (bad) mov rolb fwait inc cmp sahf xchg data16 imul cmp xor push or mov pop nop dec inc sub orl into loopne imul pushl mov stos out mov outsb fdivrs add sbb xchg mov sub push addl rcrl movl mov add add dec aaa and or bound rcrb loopne cli xchg cwtl lods mov push insl pop out mov addr16 sub or or mov mov cmpsl pop fucomi in lret cld das cwtl dec xor and or mov or sbb inc ret hlt and xchg and add jge xor jae mov imul outsb xchg bound (bad) imul xchg pop inc mov fs movsb in mov imul lods aas fstp pop andl dec push mov aaa mov imul mov xor pop push pusha mov inc fildl nop add movsl jecxz out adc mov fsin sbb xchg sbb or cmp cwtl jecxz fisubr and outsl imul in sbb push pop adc pop (bad) mov mov mov mov std cmc clc leave fcmovu addl aas movsb jne add orl push cmpsb icebp jge (bad) (bad) jbe wbinvd test je (bad) sbb aad aaa adc gs in lock add bound inc insb jnp add lods jg mov pop pop mov xor mov add add stc lods and stos xchg enter jcxz jmp sbb clc or or mov inc in pop xor call adc mov gs pop dec loop mov lret xchg out lret das aas cld cwtl sbb orb and std push pop ret or mov and mov add arpl cmpl test xchg xor int fildll call mov (bad) push pop enter fcoms les fild sbb orl int pop (bad) mov add std sbb sub fadds jne or mov cmpsb cmp in mov or dec xchg sbb mov inc aaa repz inc jmp mov mov popa push stos and leave test sbb jnp mov fistpl addr16 shll js rolb loope xlat lea gs inc lcall adc icebp insb push inc (bad) mov push jnp add mov dec and in bound movsl in lea cmp push dec fsubrl test or sub orb loopne or push aas mov (bad) and (bad) movsl or cmp mov clc xchg jae or mov push mov dec pop loop ljmp pop pop sbb and mov je inc mov outsb xor scas fcmove dec cmp in dec adc scas fwait pop ret out pushf and add lock in or lods or xchg in pop popf outsb in popf fmul int3 sti insb mov aaa in dec mov out xchg dec lcall or lock repnz mov in (bad) jle out lcall inc fcoms ret jle movl inc (bad) out fisubl dec aas jne popf lods and test jnp gs xor fs or sarl insl pop fisubrl inc loopne xchg iret popa xor adc adc mov pushf add subb sbb ret and sub (bad) sbb out jo mov ds neg xchg sarl dec dec aam in fsts ja mov inc repz xorb mov mov adc add mov insl jle or in cmp in hlt dec lods in inc inc loop in test sbb pusha loop enter cmp insl dec xor pop sub icebp pop jne test pop stc sahf inc pop mov movsb dec xchg (bad) xchg jb fstpl in (bad) iret mov pusha scas ljmp dec mov inc popw adc (bad) call xchg pop mov add pop lods mov in loope cmpsb add xor add mov ja scas xchg cmp call addr16 ljmp cltd sub bound pop or xor (bad) mov or stc xchg lret (bad) fisubr sub jmp inc sti (bad) ja rclb out cmp and inc xor movsb ficompl repz mov mov clc sbb push leave cmp cmpb (bad) inc xorb xor enter daa mov inc push adc xchg pop and dec aaa sub inc stos mov inc mov into sbbl mov mulb pop popa push sub mov dec ljmp push pop and andb addr16 add fiadd fs sbb popa loopne add lock adc add fldcw mov pop cld arpl pop fcoml cltd cmp jmp popa mov or lret cli mov jnp inc les ja xor std or bnd pop aaa push fnstenv imul sub jns adc jle sbb sahf mov (bad) movsl and inc lahf cmpsb jo shrb dec sub fistpll mov jno es nop sbb pop imul sti popf sbb mov aam or int mov (bad) ret dec add int3 jne je clc cmp adc mov mov or push idivl test push xor insb adc mov es xchg sub adc std cmc lret enter pop fcmovnu negb imul ret outsb repnz (bad) sti aad es testl mov pop cmp sub test push aaa inc loop xchg mov nop repz pop mov wbinvd outsb jbe (bad) call mov (bad) jmp cli enter fisubr sub push xchg lods sbb (bad) into dec or or pop mov jl push xchg jb (bad) repnz clc cmp dec in xchg fistpl aas nop lcall (bad) mov aas outsl sbb mov sbbl push push xchg push fdivrp lret daa jle pop scas mov xchg inc push sub dec adc (bad) mov popf loop push pop inc je ss dec xchg sub lods sbb aas movsl outsl ret or push leave push jae mov mov js test mov and aaa cmpsl (bad) adc and lock fiadd jnp repnz (bad) imul loopne pop push les xor sbb or inc inc ljmp or repnz cmp mov inc and outsl sub adc loopne lods cmp or add or add jmp push xlat sbb cmp pop mov movsl add lcall jnp leave rclb loopw jecxz inc inc mov mov or mov pop mov mov into push inc ds cmp sti (bad) lahf jg push outsl mov mov lahf jo inc mov insb or pop dec insl rcr test fs pop fcoms (bad) sbb outsb push dec and cmpsl mov fs dec shr cmp out mov imul xchg notl jne push rcrl ss push inc imul push adc insl sbb ja sahf (bad) push popa mov ljmp mov fisubr push pop jp cmc cmc lods lcall clc aad pop xchg or pusha or mov inc popa sbb sbb xchg adc sbb repnz outsl dec jp loopne daa sub loope lock addr16 cmp imul cmp pop sti mov mov push pop pop aad popf shlb mov (bad) push (bad) cmp cmp mov mov les dec outsb xor jecxz (bad) push mov rol and xchg jne xor or out mov cld lcall int sub stc jmp pop aad jp cmc mov add mov cmpsb mov les daa sub cs add add syscall sbb or clc xchg mov jnp jecxz or add and stos add fistpll mov inc out push and out xor in cltd xchg mov nop adc aad rcrl dec mov stos mov sub test mov bound mov ljmp add push aas pop out inc gs adc sbb addr16 inc pop and aad sub ffreep sub adc inc dec cmc hlt adc and mov mov xlat jg jne lock cli xchg ja sub inc xlat mov (bad) ret dec outsb insl callw lea and sbb mov xchg pop xor stos mov daa sarl outsb aad push lea or pop jmp xor mov insb xor xor cwtl dec push add fldt bound mov cmc adc inc data16 mov sbb mov dec xchg das dec mov push bnd mov aaa mov dec out mov and jecxz push mov popf in aas mov int lods add call or mov mov jmp xor mov lcall mov add lret push add jns ret push lea lahf push mov add and int3 mov dec inc jae imul out push mov out cld cld js mov sbb (bad) insb sbb sub mov mov hlt xor jmp popa mov cltd mov outsb out pop inc aaa mov sub xor mov loope (bad) bound (bad) and icebp jne out mov mov inc sahf mov mov mov (bad) pop sbb stc stos ret xor into data16 cs sti aam lcall push cmp push push xlat daa or mov jl xor sub cli mov pushf aad and outsl outsb fs ss mov dec pop add and pop jge stos into sub lret cli jge pop xor les jge repnz lea int3 cmpsl mov push dec add test mov int3 adc popf cwtl ja andl cmp sbb daa dec aaa mov test xchg mov mov jns jb fwait push arpl or and sub mov and mov lods pop dec inc mov sub in clc sbb arpl mov fdivr mov push adc jg mov mov ret dec jmp into jle cmp ds fisub cmp pop shlw sub cmp push mov mov sahf pusha jp cmpsb out jp mov dec das sarl push cmp jae dec mov xchg xor pop shlb push (bad) mov jbe test fisttpll scas shlb repz and cmp js pop imul mov ror (bad) daa outsb imul lcall aas scas adc sub sub sbb hlt cld or or fstpt aad or test xor xchg in push jp sub into aam cld pop jmp inc stos outsl orl pop mov sbb out lret loopne lahf mov cmp adc out adc (bad) push or cmc push mov jns jno idivl nop adc cmp repz scas mov mov stos or in and add mov addr16 or pop insl aas push movsl popf mov jnp psubusw lock aam loope mov je push xchg insb movsl inc jbe cld adc add xor ss cmp movl es repz adc xor ss sub mov flds mov es jp loop and loope cmp xlat adc into aad mov dec iret das xlat nop mov out int3 jecxz pop jg pop jecxz (bad) jmp mov roll mov mov out mov dec dec punpcklwd dec jb out mov mov cld fwait scas inc pop jg pop (bad) (bad) push dec adc clc fadd cltd scas lods add mov int3 dec imul ds pop or sub fs jg scas in loope xlat ret fidivl push xchg push imul (bad) pushf pop sbb mov std dec out out seta pop or mov mov mov out sub xor lock inc loopne jnp sti andl mov jnp xchg fwait movsl cs fisub cmp dec or xor arpl jbe push (bad) sub mov out jmp in nop sub mov cwtl mulb (bad) push cmpsb mov (bad) stos stos push mov test pop or hlt bound add das add pop daa ret in mov lods mov sub cli adc ficompl dec fnstenv int xlat aaa mov negb test icebp mov xchg adc out jae sub fldenv pop lods iret movsb inc jp xor dec (bad) movsb mov sub add mov xor shrb ja pop xchg mov les inc test paddd sbb push nop data16 stos xchg (bad) add call clc test imul cli mov or pop jmp (bad) movsl outsb dec popf or mov mov int3 popf and scas inc mov lds inc daa and sub out (bad) dec les pop and fsubrl xchg ss cmp lds cmc ljmp xor imul mull cld aad xor xchg and jmp test xchg add xor adc dec push mov jle (bad) jg ss aaa sbb pop (bad) movsl test loop mov mov sub js jle cmp cmp movsb push fdivl cli push cmc mov std or aaa jbe jno mov sub rcrl push repz mov into push xchg push movsl adc mov addr16 ret xlat push pop loopne xlat push and cmp sarb pop sbb negl lret out imul inc and rcll mov dec push jmp enter mov jmp pop enter dec sbb out leave (bad) fxch mov ja dec out and push mov xchg pop insl or pusha repz pusha lahf call xor xchg dec or xchg or (bad) test xor cmp arpl dec std std fwait jp imul (bad) fsubrs insl jg mov push xlat xchg cltd clc pushf (bad) imul rol call or test ljmp add xor (bad) xor jl rorb add xlat fs mov fwait sbb and ja pop pop and ja pop push sbb out dec and (bad) jbe call mov popf jmp out test pop stos leave push mov inc xor mov and cltd xchg andl lods mov movsb inc push aas adc cld adc (bad) femms inc in sub mov nop xlat cli pop insl push add and ljmp cwtl fstp mov test ja movsb vdivps jmp fsubl sub jnp outsb ret repnz and inc jl jnp loope jg daa out mov (bad) xor outsl or push arpl into inc cwtl jne mov pop adc cmpsb or mov dec mov xor loopne jns test stos push lods ss lret stos pop and mov (bad) cld imul xlat or add mov js mov mov mov std subb push ja mov insb sub test and mov jo stos in ret pop les negb cli xlat pop stos call cmp leave shll cmp and fidivr pop jle xchg pop push pop cli addr16 fadds stos mov outsb mov jl cmp cmpsl scas test std sub mov les mov lret jo jne and test cmp or dec bswap in xor cld cld add (bad) mov repz sbb je inc clc ss push cmp call cmpsb data16 mov xchg repz cmpsl sahf cli lcall jo dec mov movsb adc test mov add imul int3 enter xchg aam mov (bad) add push out ss jne jecxz lret push stos imul (bad) icebp inc (bad) dec subb (bad) cli ret mov lods push dec pop fnsave daa push adc repz adc sbb sub dec lods add mov popa fimul aad fadd jp leave xor rol fwait int3 or jo mov jmp ljmp imul push movsb and js loope and cmp loop stc and daa idivb icebp xchg icebp scas xor dec (bad) (bad) and test inc icebp (bad) loope (bad) push or push add add sub xchg inc mov negl nop arpl cld xchg cmp mov aam sub push cmp insb repnz movsb adc in loope sbb adc out xor movsb (bad) xor bound and inc gs out (bad) out jp outsb jmp es out push mov or cltd hlt jbe or das xorl cmp mov cmp inc xchg mov pop clc ss add sti xor dec xor sub aad dec push hlt xchg call stc push movsl lea add push mov (bad) jb pop ds pop pop out jae cmp pop xlat loope das (bad) aaa popa sub in stos je loopne out cmp cmpl add add clc mov pop in xor es inc pushf mov jbe or test adcb adcl lret xor cld test popf xlat insb data16 cltd psubsb jo (bad) cmc cmp (bad) xor push popf push adc or sbb push daa pop xchg and cmpsb test mov cmp or enter jg jno out jbe inc mov cltd mov mov add cmp inc add jb (bad) call adc daa stos mov dec cmp sarl sub call xor aad jmp mov cmc out push cmp add sub cmpsb std xchg xchg sub sbb aad jnp add (bad) push popf xchg push sbb and inc xchg loope cmp in iret xchg loope inc or in mov mov stos aad leave loope xorb push or pop pop cmp mov data16 fs mov aam or rcl pop sar jae sbbl inc sti out shr nop mov fcomip push lret sbb aaa (bad) (bad) out cli clc test dec pop out xor mov cmp mov arpl aam stc mov call dec repz out sub sub mov test and inc popa xchg stos jns aas pcmpeqb jb cmp mov pop mov enter stos mull (bad) cld sbb add adc sbb pop xchg dec pop xchg rclb mov inc or push out or ficompl in mov out and sbb cmp xchg outsw jge lahf jnp shl sub jbe repz jbe cmp mov inc loop xor lods adc mov inc rcrl xchg orb fidivl xchg and cwtl push push xor sub adc clc mov imul add or insl xor lods jecxz mov or sbb jecxz dec push sbb stos test jmp jp sbb inc xchg xchg (bad) cld cmpsb cmpsl mov xor outsl jl bound mov jns rorl fsubl pop xchg (bad) imul mov dec dec jbe push (bad) in lret fdivrs fwait jmp arpl pusha popf add loop lods fiadd (bad) dec movsb cld loope imul iret movsl dec popf out push or pop stos mov add push pcmpeqd xchg or into iret cmc scas dec sbb mov cwtl cmp sub fbstp mov dec pop ss mov jge mov inc xchg pusha mov arpl dec xor xchg jo scas stos or mov or jb enter add add inc enter ja fild iret push and in shl jecxz or xchg mov sti xchg nop mov std dec mov mov loope rol sub cmp mov pushf sub sbb cltd std mov sti pop ror (bad) sarl push mov fwait sbb (bad) cld mov sub call mov cmpsb aas add jle sub idivb mov pusha adc sarb fbstp mov flds cmp (bad) xor mov in dec imul and loopne loop sub rcrb or enter in (bad) hlt jecxz enter icebp jae cmpsb inc rolb dec (bad) mov aam stos popa popf mov pusha xchg (bad) sbb stc mov sub cmc and shl pop or cltd push jb outsb mov lea lret fdivl test (bad) shr (bad) or rolb shrd nop mov cmpsb into test int test ret or ds dec adc mov jno xlat pusha mov inc add mov icebp mov (bad) xchg cmp iret mov cli jmp adc or scas mov stos push negl inc inc cmp (bad) xchg cmp cld into mov xor xor add test int add xor sub mov or push test fwait mov pop add dec add adc jbe mov add data16 pop ljmp in adc inc jno sarb call cmc out (bad) mov xor xchg cli inc pop xchg test jmp mov cs enter mov shll inc add lds insb stc lahf (bad) xor jl ja aam jmp cmp insb pop movsb xchg out les fildll xor ja ljmp pusha loopne in jmp adc adc mov add (bad) push (bad) fwait pop jle pushf cld fmuls jno xor push dec mov into sub daa sbbl popa sub ss nop imul scas and add add fldlg2 xlat mov or pop inc cmp jae es push stc dec sub aam adc daa dec les fistp loope test popf inc xlat cmc enter or or ljmp sub pop ffree push inc movsl cmpsl into mov mov dec out push inc adc subl cmp inc mov pop scas push movsl add pop popa pushf popa cmpsb (bad) push and push fs out daa mov mov ss xor (bad) xor xchg and (bad) xor push add test bound stos xor and add mov notb nop pop push adc pop addl repz bound call lret mov outsb int negl js mov sub add inc (bad) outsb mov sbb repnz stc popa pushf lods adc out in and in sub mov adc lds and mov int3 pop jb pop xchg jmp or dec jge mov jno nop leave jmp jnp (bad) imul fyl2x les cmpsb jp js cmp je jge xchg dec (bad) aad out add xchg lods inc fmull aad fimull mov mov xchg mov mov ret pusha sarl add hlt cltd sbb or fcoml cmpsl lock jg into jmp sbb mov lret mov hlt mov push ljmp or inc in out mov or dec xchg push pop movsb sbb clc pushf xor jp add lahf inc (bad) mov bnd xor lcall and rcrl stos loop jp test pushf jg lret (bad) cmp mov pop sbb lret cmpsl leave mov call inc ds mov scas dec test (bad) loopne outsl pop fmull dec cmp (bad) dec mov jne mov mov dec sub adc sub mov int aas dec es test xchg cmp (bad) stos popf mov lods jg push ret arpl fnsave push cmc mov hlt cltd hlt add rcl lret scas push mov sbb add in int xchg or sub inc xchg dec es ja inc ss pop lret dec scas or fdivs repnz jb in xchg mov imul outsb sarl aas aaa aas or and add jecxz mov inc add push leave fldt call ficomp or ficompl sbb cld stc fisubr stos cs stc ljmp xchg stos jae scas scas and sbb rcl xlat out mov gs (bad) imull sub gs test sub mov clc fwait xorb sahf cmp frstor insl lods dec out or (bad) inc fcmovne jns mov cmp inc mov std push rorl stos ss fsubrs adc nop in adc adc clc jmp shrb movsb data16 iret mov gs nop movsl xchg pushf adc push gs mov dec xchg rcl xchg test mov fwait jno test sbb gs xchg pop add lret mov insl adc mov adc pop loope (bad) je pop mov leave inc xchg gs xchg shll pop popf cmp jg sbb icebp cld cmp lret mov mov or icebp sti popa test ret dec cmp push xchg pop xchg aaa jo movsl add scas sbb fdiv cmp rcrb adc mov push fcomp pop dec popa addr16 cmp (bad) sbb insl scas sti into and push loope dec nop jno bound pop and out xchg mov adc fstpl dec jne and aas js dec aas xchg sub jecxz push jno dec fnstenv lea lds sub cmp sbb cli aas in xchg jmp iret cmp xor pop hlt mov cwtl repz sahf lds fwait or push test cltd mov jg jo inc fcoml jl mov or mov mov (bad) sbb das (bad) aad into movsb adc push lea lcall mov xchg mov xchg push push sub mov mov dec sub xor loop adc xchg inc arpl pop jg pop (bad) hlt gs inc xor shl cmp stos call ficomp dec xchg stos jge and aam mull ret scas stos js sbb sub pop inc mov loopne inc enter (bad) pop mov sub subl mov dec sbb cmpsl mov shr cwtl rorl aas icebp stos push xor cltd pushf jecxz xacquire jnp mov stc sbb aam pop xlat (bad) insb xor cwtl xchg add (bad) push aam xor sub addr16 imul sub mov add pop jne push out imul jecxz xchg scas ret ret arpl loop js sub sbb dec fldl mov fsubl adc pop cmp xchg insb push or dec and push stos rcrb mov js pop and stos fcompl mov das ss and hlt fs mov sbb out clc fstl aaa push icebp mov mov inc fistp insb mov inc dec mov fstpt notb push icebp xchg cwtl and test out push mov push ret mov push jg pop into (bad) testl sub rclb into pop ja mov pop inc inc dec jp sbb loop frstor or mov (bad) ss dec pop push ret and dec lock push cmp push jnp pop ret mov adcl xchg inc iret je dec gs mov addr16 dec fs mov mov pop leave adc ficoml dec inc dec push adc ret popf jmp mov stc rcll push cmc and xchg inc jo push inc movsl clc adc add fistpl je ljmp das push sub add jno ficomp xchg and push les pusha in (bad) xor pop frstor push jg je push xchg movsl mov daa out aas mov adc xchg fwait pop nop push sub lret ljmp pop mov mov inc add cmp jne cmpsl dec mov imul lods jnp dec mov loopne xchg and movsl jp cmpsb push out daa mov outsl dec inc add jb aaa cmp stos push jno in sbb mov (bad) jnp sbb jae dec adc stc pop cmp (bad) cmp mov cmpsb mov clc loope outsb int3 mov inc iret inc xor movsl inc jmp fwait push xchg mov out jnp and xchg mov ret jne cltd ja sahf and push inc aam cli icebp inc outsl mov pop out mov ss jecxz push xchg (bad) adc fwait jecxz,pt insl cs ss subb and xlat or test adc lret xor loop andb jo je loop dec add js insw xchg adc mov jl in mov mov les aaa ja addr16 xchg dec dec pop xlat mov fdivr push les imul iret or mov js (bad) adc lahf call jns inc jecxz scas jecxz scas inc add pop iret sbb add or adc mov xchg inc adc pop (bad) xchg inc hlt nop out cmp es loop (bad) fs lret les repz mov jp mov imul fsubs pop mov inc pop daa add insb loope or push call xchg xchg or rep (bad) sub mov (bad) or pop sub xchg lock in mov xchg mov out mov fstpl loope jno mov test push lret push hlt dec mov push ja jo,pn mov and stos lds jo fisttpl sarl out mov (bad) push iret arpl mov add sub xchg imul (bad) dec sbb dec inc xlat stos xor xor fbld flds mov lret mov add outsb (bad) lahf mov push cmpsl mov test mull dec inc inc sub inc inc fs add sbb inc xor add and pop outsl adc out imul addr16 sti push dec sbb mov icebp cld sub jp scas sub push or push mov xchg pop popa orl (bad) sbb lock jp xchg mov mov mov aam shlb mov mov or cmp out repz fs or add push xlat bound mov and xor inc rcrl fwait sub cs push test rcl pusha test mov ret xor lods ret js (bad) loopne daa push fildl data16 sbb xor and mov shlb dec je (bad) loope xor rorb mov sahf mov jo pop jno pop inc mov dec lods test pop cltd mov inc sub adc lret sti cmp aaa sbb mov lods mov (bad) mov hlt dec mov dec lea push push push not in popa lock sub xor mov cmp sub jg es push fs and sub mov ljmp decb and imul lahf adc jg sarb adc hlt add inc xchg add sbb or lcall dec outsb ss daa adc pop xchg mov out fdivs mov inc dec push and sti daa popf lret andl fnop ret out call push and mov test pop and inc gs in xor mov xchg cs cmpxchg rcll nop idivl imul stc rol cmp add popa aas pop sub repz xchg aad jne push es xor lret movsl cmp jb sub fs pop lea lahf pop out mov or test int popa pop popa fiadd stos inc or add rcr test mov out push sbb js and in or sub mov push fs sarl push jl fwait lock cmp adc cmp jmp mov (bad) cmp loopne hlt je push push jp lds movsb cmp fxch jnp jg repz xchg cmp loopne aad jbe fwait dec xlat call addb roll jecxz add mov mov lahf cwtl or test ds lret movsb fidivl xchg fs loope addr16 test sbb ja fidiv fidivrl jns incl dec add cltd loope sahf ss popf popf cmc clc enter xchg ss push out les push lret fcmovnb test cmp xlat lcall cmp iret pop cli aad insl inc sub leave cmp arpl repnz out cmpsb stc ja dec mov inc mov jmp push out in out fldenv cmp inc imul mov sete jg aaa xchg sub sbb sub cs cld cmp dec gs scas mov inc and ret xor mov mov movsb lock arpl repnz xchg fst les dec fistpl test pop imul in adc cmc fidivr dec mov jp pop popf and iret and jae sbb or loope sbb daa or sbb ror sub mov or or (bad) iret inc dec rorb xlat lea dec add push jae inc xor lahf xor inc cmp negb mov iret fldenv xchg or xor cltd push xchg aas adc mov stc sub mov mov pop cmp dec lods enter sbb out fnsave repnz pusha mov fisubr dec test pushf pop xchg sub fs hlt or jae fisubl push outsb or add and inc iret test mov pop push inc pop fs xchg xor push add rcrb and in loopne or sbb (bad) clc fldcw ret xor xor icebp dec jnp fild inc xchg sub adc enter push les mov jae dec mov loope push inc (bad) int3 ss pop out pushf nop inc ja sbb out pop add (bad) jno aas xlat mov jp das cmpsb jb mov sub imul (bad) fsubr movsb inc and fsubs pop (bad) sar sub push adc lods inc test inc push mov pop test or std dec sbb push daa test mov insl std mov je lock or pushf sbb notl in rorl xor mov xor into inc test add sbb ds outsl jb xchg push in popf lock push jno arpl mov pop push pop dec add add in test stos dec inc xchg loopne inc addr16 jnp add aad mov or aas inc sti les xchg adc push shlb test mov jns lds daa mov cmp pop mov and sub xor sbb mov mov js,pn fisub cmpsb jo push or in repnz cmp addr16 cld shr mov jle repz fwait jg stc pcmpeqw out xchg mov fs call js fnop pop rorl adc cli mov jg loopne daa cmc xchg arpl mov mov pop push dec cwtl pop lret sub (bad) ljmp cmc (bad) adc imul mov fist int3 mov cmp xchg pusha inc sti xchg arpl add mov or mov subb or jno insl lahf xor add xchg call cmp outsl daa clc xor repz push cmpsl mov dec stc int pop mov cmp sbb jecxz sahf sti xor mov sti js inc or or mov push and sbb adc mov (bad) dec inc sub adc imul stos sahf aaa stc mov rclb imul pop les pop test jmp sub inc test adc push pop sbb (bad) dec xchg int3 test sub jb fisubl mov fcoms dec xchg scas fisubl mov mov aas pop add push inc outsb dec add icebp cmpsb mov outsl or sub sub mov sbb mov sub pop lea rorb mov in ret inc out xchg adc add enter (bad) (bad) repz and mov xor ficompl outsb inc mov out pop ret cmc in mov shrl test test int inc pop out int3 mov adc sbb sub push sahf mov sbb adc mov cs xchg inc fsin sub sbb mov inc jne lds dec stos mov mov fild lahf jge mov push pop and cmp push jl in or inc xchg lcall pop xor stos dec lea mov ficoml inc pushf mov outsl dec pop xor out stc pop loop iret mov and mov jg cli and xlat mov and ss xor out aad dec in addl cmp xchg fstp sub inc lods pop mov push daa (bad) enter xchg add notl jecxz add insl sub aam inc add popa fnstsw repz imul in lret push fisttpl mov jnp add test xlat lret fisttpl inc sarb mov fcomp xchg pop cmp ret cs jl fsubrs cmpsb xlat jno push outsl mov push call cmpsl fstps repnz mov dec adc scas mov in outsb xor iret inc jns push ds aas sub mov mov adc ss inc inc pusha xorb mov jge outsb (bad) push add lock jp mov imul mov mov out xchg sahf jp mov ds push xchg inc inc scas jmp mov push xor loop (bad) push pop aam fisubr fdivrl cwtl dec pop push xor ret clc hlt ja (bad) je push sub add int3 mov sub cli xchg iret pop popf push (bad) mov mov popf out jb fwait push sub ds sbb mov sbb lods cld lret cmp mov data16 out cmpsb pop les movaps insb out sti enter cmp fist pop mov cmp imul mov ficompl and jmp push cmp dec (bad) sarb in jnp cmp adc push and pop cs test and bound pop push pushf jp mov mov cli gs enter ret or lahf addl mov lods sub dec or and and loope push inc lcall push adc loopne pop add shlb lock arpl xchg cli scas fdiv or jno dec loopne icebp fs jbe sub rorb mov cmp divl push out mov fisubr out xchg aaa push es popa cmc or in push dec cwtl push test mov bound xchg pop outsb mov xor mov addr16 sub push gs and les xchg or sub call jp jnp push xor adc dec das popf iret dec xor (bad) pop sbb or jl dec push rcr (bad) lods leave cmp scas daa pop ja add push dec and lods jle mov ret pop iret fistpl outsb sub popa ds jl test (bad) or jno movsb pop ss lods mov daa iret jp and xor mov mov jp (bad) xor in jle fcompl out mov orl jb jno jmp inc fcomps inc lods cltd stos mov pushf xor xchg jo leave (bad) stc inc cltd out jecxz xchg add xchg repnz adc xchg jb dec sti mov rcll jmp push decl ds and mov jmp jns into push cmpsl jmp jl mov jno pusha mul std lret sahf pop rorb dec insl mov sub nop sbb mov cmp stos mov stos push aas imul scas mov in pop das cs push xchg pop out mov cs es cmp mov push mov sbb call dec out aas std mov mov jle pop jp in mov dec and mov cmp xor jmp push arpl sarl test nop mov test stos and inc push jno push jns cmp pop ss cld or fsub sub cmp (bad) scas pop dec cmp ja mov fs mov mov pavgb sbb stc add and addr16 daa or lahf outsl int3 jae je hlt and dec jno enter in lcall rorb mov insl cltd out lods xlat add mov sti es adc add decl data16 mov dec fistpl iret add jl jne pminub fdiv cmp add ret clc dec lock jb xor clc adc push int3 (bad) jne divl hlt out xchg add (bad) lds xchg sbb sbb outsb incl mov fisubl pop negb jp ds inc (bad) lret dec mov inc gs xchg icebp add mov adc push (bad) gs xchg jo add aam out ret xchg ljmp lret ljmp xchg ds test jb cli jns pop (bad) mov mov bsf into cmp cmp jno,pt scas sti ss mov in sbb aam push ret push (bad) dec movsl and sub pushf ja xor mov mov enter cmp test pop inc sub push stos push mov sub adc xor test sub adc mov mov or jp add ds dec test lahf in jne or push cmp pop jns mov inc js das jae add scas inc jnp dec adc or xor outsl mov jo int3 and movsl (bad) in sbbb sbb jo xor adc xorl inc or inc imul mov int mov and mov pusha out cmpsl mov movb push repnz pop lods push test jno pushf push and or add dec inc xor test jo mov xchg mov js jns pushfw xchg push cld adc aad or jge add popf stos jmp and gs test and std dec mov movsb repz xorl (bad) into sub outsl dec xchg enter dec jnp push xchg xchg out test adc enter aas fcomi pop out or jno out jp das add push mov and mov and xor mov int3 iret xlat xchg int3 add dec and push xor fdivl mov in jb fisubr (bad) xor lods leave ret jg jbe lcall gs jmp jl mov pop push dec cmp insb (bad) push jnp mov cmpsl cld loope (bad) notl stos sbb out xchg mov in out rcll jnp add (bad) (bad) fstps ss mov icebp enter ljmp xchg fcmovb decb push (bad) pop addr16 dec in cmp jnp gs adc xchg xor lods (bad) ss out mov and lock mov leave or ds ljmp jge cmpsb sbb xchg aad xor sbb out dec jae cli add in cmpsb dec sub jp lret xchg and pushf xor sub inc sarb inc movsb push mov aad fisttp in adc jo das cmp or jns mov js jnp in in std and sub xor jg aad mov xbegin arpl cmp xor pusha loopne aam cmp mov mov in pop xchg movsb dec hlt pop mov lock sub (bad) cwtl mov push int3 mov jae lahf leave idivl or daa add xchg jle inc sub popf stc jmp testb sbb sbb ror fadd fdivr out pop or mov aad jp mov loop adc jo adc or push inc daa mov aam faddl sbb pop icebp dec cld dec ss popa test loope dec fcompl pop push or lcall xchg out lahf adc loopne cmpsl bound (bad) test mov mov adc leave mov and (bad) cmpsb movsl test cwtl jns xor jo push cli ja movsb jno pop jg pop pop jns mov mov jae or mov aad imul or cltd movsb lahf mov lret in repz fldl (bad) fidivl dec cmc repz xchg data16 dec fsubl iret add (bad) ljmp mov xchg jno mov push addr16 stc sbb insb cmp cmp push mov fcoml jecxz fnstcw aaa cmp cmpsb cmc addr16 stos mov or pushf xor into cmp mov sbb inc clc dec in or jmp js mov les mov repnz test mov dec inc mov xchg sbb cmp sub lahf sti dec arpl mov imul js lret sahf mov in jle data16 cmp xor inc xchg movsb jmp add and mov cmp jp mov jae mov cltd roll bound pushf mov mov or outsb imul mov mov inc jnp notb add pop repz ljmp ss adc cmp push mov cmpsl mov shrb and mov mov imul ja sbb pusha je dec cmpsl add lods (bad) stc push pop adc dec add jnp xor jl inc cmp mov jg xor jb ljmpw xor or scas mov dec or movl hlt aas sbb popf gs pop sub loope xchg push or cmp arpl push rol scas xor sbb mov pop mov add or insb (bad) in fwait mov or jl xor mov push dec push movsl mov sub movl xchg into xchg popf mov fsubrl fwait xchg xchg mov adc mov sub pop add mov and hlt cmp mov iret mov mov dec pop push sub jne ret loopne (bad) stc dec adc arpl jne leave call mov push dec icebp out inc jg jbe sbb xchg push bound cmp negb adc cmp mov mull xor inc imul repnz ss mov std pushf or jns add test or adc arpl std mov lcall sti add (bad) pop sar add imul test movsl leave rcrl sub xchg test movsb inc enter push cld js jg (bad) push push mov rcr sbb bound xorl in and push fldcw lret mov dec add in push xchg and into mov rcrl inc adc adc imul xchg aam sub cmp sub push adc push sbb mov jmp es mov rcll (bad) (bad) jbe lods aad mov mov andl sbb test dec adc or hlt (bad) shr mov pop lds mov mov loopne adc je and and xlat sub xchg xchg int3 sub jo xchg sbb out jnp imul test sarb push pop jbe and (bad) out xchg push mov sub xchg shlb ucomiss adc dec movsb sbb repz and test mov add pushf push or shr add sbbl stos sbb push add dec data16 jbe inc jle arpl (bad) mov or sbb mov cmp pop inc aaa cmpsb jge sbb xchg jns popf xchg push jmp insl in loopne sbb sbb sub dec xchg pop in jb,pn xchg loop lea gs (bad) stos or add adc push adc xchg mov fwait dec jg aam testb xchg and jns mov jge inc mov jb out pushf add (bad) push scas push outsb lcall cmp loope add pop lcall in aas cmp mov push mov test insb (bad) push fistpl push sub ret mov popa xchg test xlat or cmp mov iret xor mov dec scas lock aaa pop call mov mov push notb mov pop jmp daa leave mov cmpsl (bad) out pop div pop fldt xchg xchg aam mov push scas (bad) lret imul mov inc cs xor jl (bad) jns stc and xchg push push jne jmp sub push or fwait adc fildll stc dec inc xchg in cmpsl clc (bad) xchg and jge adc jb or push test mov rcrl push ret mov pop int mov mov rol xor cld mov imul mov xor stos jb and adc cmp bound inc loope mull push jle fld in push xchg js stos adc mov lods or (bad) fcomps inc sub rorb (bad) sbb dec out mov mov inc push mov and or shrl hlt outsb aas mov sub jno fdivp lods out enter or push jb and inc cld dec ja sub js push cltd int3 pop mov mov pushf std and lods push rcrl lods mov test outsb sbb pop lea or dec cltd outsl insb push cwtl int3 xchg inc pop mov cltd jmp lret into pop in xchg add push inc mov mov inc push mov (bad) lods adc mov imul sub inc lahf rclb jns push mov out cs cwtl pop xchg pusha mov fwait and pop repnz adc sarb test cmpsb dec das inc sub jae mov leave idiv lods sub mov jecxz adc jbe xor xor add rorl test adc test popf mov jbe mov jno push add cwtl call test push das stos push adc and jae adc mov dec mov adc int3 repz push xchg hlt lds jno xor add xor push inc mov fsub or cwtl hlt xchg ja adc sti mov int addr16 xchg ljmp repnz out stc aad cmpsb push inc adcb lret adc ja in int sub loopne mov out das iret hlt push out xchg sbb fisub or sbbb pop shll pop jp mov loopne je sub insb add jle mov jns fldlg2 dec cmpsb ljmp mov inc xor test das int sbb rolb jmp sbb icebp in shrl fstp jmp bound (bad) mov add jmp (bad) push shlb stos cmp cwtl sahf inc scas and jo adc push push inc test cli bound cmp lods fwait clc kortestw outsl xchg mov lds fcomi sbb insl mov mov inc mov xchg icebp push pop clc scas or mov sub or arpl dec xchg sbb addb push fnstenv negb push mov mov sub loop aad mov dec pop sbbl mov lcall mov pusha cmp subl sub xor jge call adcb mov cmp or repz and cmp test cmpsb insb mov mov inc frstor mov ret cs movsl fstp add movsl lds insb aas mov jno std lcall mov in es test js push in adc adc xlat pop fbstp xlat les ret lock sarb and adc arpl jae push fdiv lods lahf mov mov inc lea cmp les les je scas (bad) jg rorl adc sub (bad) pushf inc loop mov test int lret hlt lret push aaa jnp out push ds les sbb ss fidivr pop mov pop rcrl sbb cs mov and (bad) mov xor (bad) scas cli jnp mov jnp mov pushw and cmp pop mov lods fs jo mov das lods dec movb js dec call and sti pop data16 das or psubusb sbb ss stc sbb mov and outsl lcall or cmp stc inc dec cmp stc std popf insb bswap sbb mov and xchg push jno arpl adc call push hlt add lods xchg pminsw xor lea call js pop aaa cltd xor (bad) push mov push fdivs in jns and and lahf inc pop mov cltd mov mov push cli (bad) and mov mov xchg push cltd mov stos jb mov xor xlat pop cld cmpb ljmp add (bad) jb sbb sub push xor sub jbe mov lea jbe mov jg push pop std and ljmp stos bound mov repnz imul fwait sub (bad) xchg inc fidivr jae jle jg in nop mov fldcw xchg lea mov (bad) int3 dec pushf loop pop fcompl inc (bad) cmp jg fcoms cmp (bad) jg jl rcr xor nop lahf pop cmpsb out and adc mov add aas adc dec and rcrl stos xor repz xlat repnz xchg mov xchg sub pop mov lds push mov call icebp es cmp mov data16 jb nop test in add cld jo jnp jns out adc negb sti addr16 rdpmc pop inc pop mov push (bad) aam rcll cmp dec rcrl add fnstenv add jne push sbb pop mov and xor ljmp mov cwtl sbb movsl sub pop shll cmpsb in adc mov (bad) jg shl shlb pop xlat (bad) xor dec xor xchg adc test out (bad) mov push rorb stos data16 adc mov mov inc dec dec stc jp sbb nop insb add adc or xchg adc pop fs or in aas jne mov out pop or xchg outsb jge xchg scas pop (bad) mov pushf outsb lret scas or (bad) cmc aaa sub mov in imul xchg dec lret mov pushf test into inc fs inc (bad) loop inc (bad) test xchg push add xchg xor das mov popa andl mov dec nop or loop pushf scas dec inc daa iret std not adc (bad) cli xchg cli stos push push pop mov fiadd nop cmp cmc jnp and iret dec cmp xchg cli dec lea mov sub out scas int xor mov loope adc insl xchg aad sbb in arpl xor add and and inc (bad) jmp imul repz cwtl ret or xor cli sahf je lret in movsl mov jne mov inc dec data16 cmp mov pushf xor gs cltd pushf in inc cmp pop mov ss in insb nop stc sarb outsl inc cltd mov fbstp jno mov jnp fwait adc dec dec cmpsb aad mov out or sbb fisubr jns pop cmpl pop fisubl inc xchg jb testb xor por cmp lods js pop sub imul fcmovb pushf pop cmp dec cmc push inc dec mov rcll xchg hlt fs aaa fsubrl push jns (bad) dec (bad) mov and lock loope add push pop dec ret inc pop fld1 into sbb fwait rorl into xchg cmp in mov push sub in xor xchg faddp idivl or mov add mov sub mov cmp add insb cld dec jno inc mov push in sbb les add es mov les add push pop mov ret dec sub xor fsubs sub in cmp jecxz test mov sub adcl in sub lahf cmpl cs test add sub popf jno shrl popf aas stos test popf mov xchg mov stos xor pmulhw and pushf (bad) imul (bad) jecxz cmpl fbstp aaa addr16 lcall xchg outsl addr16 mov fsubr aas movaps xchg (bad) mov pop pop xchg xor (bad) ret outsb std adc (bad) je cld pop adc pop jl fbld push (bad) not add mov push scas daa (bad) lahf add add adc in sbb leave adc test leave jge out dec cltd mov pmulhw adc add lret lea mov fidivl xor xchg clc mov lds xor stos stc mov mov inc pop in xor push inc push arpl mov add out lods pop sub subb test cmc fsub jo,pn mov lea mov xchg arpl setl aam or cwtl sbb lock iret xor aas jg lea fwait int (bad) pop fcmovne dec fwait clc (bad) cmp mov pop incb (bad) mul mov (bad) xor jge arpl out sbb sub shrb sarb inc cmp or and push inc repnz add sti xlat outsb loope arpl cmpsb imul shlb mov aas mov push fsubrs xor push test pop inc xchg (bad) cmpsl stos push jp (bad) mov mov adc xchg fsub sarl mov test inc mov pop stos movsl js ljmp pusha pop mov pop inc fs ss stos inc jl stc bound jmp mov pop shrl xor iret xchg xor mov or outsl push sub push adc mov mov xchg mull lret mov call pop std jbe cs aad push mov flds pop push adc push test out ja xor adc (bad) lret mov shll dec enter icebp jmp mov popa lret lds or xchg inc popa lcall (bad) pusha jno push (bad) sbb sbbl push (bad) rcrl mov imul shrl push dec and mov pop pop movsl and lock push dec adc (bad) mov int dec adc and sub jne dec sub rcrb lahf jnp mov push stos scas or adc jb idivb test sbb mov pop jg adc adc push (bad) fmull push xor inc gs push les sbb int dec pusha out pop mov jne push lret lea cmpsb imul aam insb cli in ljmp and iret icebp add leave and rolb lock cmp sbb call fsts sub (bad) (bad) sub lods scas cmp clc lods fs and in out and mov (bad) icebp aam pushf cli mov pop push dec mov dec loop out leave insl xchg dec loop inc and out push lcall ret jae jmp lds sarb cmpsb adc mov pusha jne xchg xor leave adc mov imull sub dec lods je loopne (bad) xchg sbb dec xlat testl mov (bad) xchg xor xchg mov out gs mov push pop scas cmp fdivp xor bound testb pop (bad) out dec aas push pop mov and sbb arpl sub outsl pop (bad) mov (bad) jns out xchg jnp adc (bad) clc inc inc (bad) mov xchg lahf gs pop (bad) popa daa dec sbb dec in xchg shrl div add lock mov sub outsl add or arpl pop lods je loopne push adc jb jb and in fdivs xchg rclb das jge pushf bnd cmp insl aas xchg shrb in (bad) repz into fistpl iret aaa int3 jp call mov fcmove push pop xor and lea and dec fwait mov ljmp out xor xlat push fnstenv in push repz xchg stc adc lret xor mov ret sub cltd or xor loop test loopne push fnsave test into scas test sub jae,pn cmp stc std pop std insl rcrb and jb cmpsb mov adc arpl int cltd lretw jp jae ljmp sahf pop int sbb add mov in pushf mov cmp clc and pop insl add dec cmpsl pop fsts test dec jne jg enter sbb jne out jl jmp in cmp dec mov add and xlat (bad) lahf loop and call xchg imull cmp adc insb mov out xor cmc dec mov lods aam aam mov push mov dec pop (bad) (bad) cmc lahf pop pop je divb push std stc dec (bad) adc nop and adc ss rorl js out cmp sbb mov mov jne add iret cmp cmp nop fwait pop out inc loope test lahf or mov jge mov fwait jecxz dec push jbe fdivl mov cmpsb std cmp inc push jns mov adc push dec lods rclb jp mov lods xor ficomp je inc pop add jo dec lock insb aam and cltd in inc into repnz cmc in jo imul sub sub lret push adc or and hlt loope inc and out jnp mov xlat fs jecxz ja mov fcompl jns mov (bad) push stc hlt cld lock push cmpsl jmp ror jns xchg sbb pop stos cmp sti test arpl jne add jp xchg imul mov insl mov test sub fild mov cmp push ret add outsl dec call nop jo lahf adc mov adc adc inc push out bnd lret mov mov imul in jle jg mov ljmp out mov loop jge inc into xchg dec jp push lcall push sbb pop mov push mov or xchg lret sbb test ljmp cwtl (bad) push mov (bad) hlt xchg xchg cmp xchg fsubrs jmp mov cli adc pop repnz movsb pop mov in (bad) adc (bad) jne sub rorb cld push in data16 mov adc xlat in ja cmp cmp clc das jne loope icebp mov (bad) sub dec xchg cltd jmp sbb test test mov addr16 pop push sbb hlt jne sahf inc icebp jmp aad mov sbbb jns mov push je push test ss lcall push test or add scas sti and adc int pop xor rcrb push xor mov mov test xor xlat in push out gs arpl cmpsb es xchg adc jecxz fsubrs call xchg cvtpi2ps ret jmp jbe inc adc sbb jb push mov (bad) hlt aaa jp mov cmc xchg aas stos mov test clc or or movsb in and mov jns mov montmul cmpsb add and cmp push jbe ret dec cmp sub arpl insl arpl loop (bad) jle out enter jnp repnz push dec pop dec les or xchg cltd outsb daa scas (bad) dec mov add jb dec xchg inc fwait add cmpsl xchg mov dec (bad) xor pop push loopne shll test imul shr lret pop test es lahf jnp inc cmp (bad) cmc loope (bad) or jns lea inc ficoml imul das push lds scas lea iret cmp movb (bad) lock ret fwait jecxz clc sbb mov rcrl orl xchg xor lret ficoml sarb cld out (bad) mov scas add sbb xchg and fwait ret cmp dec adc (bad) cmp mov test push or in popf outsb lcall dec pop sti sub jg add mov (bad) fdivrs daa scas xor pop insb or movsb dec out daa call push cmp test pusha mov or imul jecxz fcmovnbe push inc cmp mov mov mov sbb ljmp inc add push jp roll ljmp sub test in xchg pusha cmp out jbe sub push xchg pusha (bad) xchg add hlt and inc fld imulb cltd fs or lods adc jo insb adc cmpsb (bad) and scas jecxz shrb je in sahf nop cwtl push push xor aas push adc push mov jnp jae and jp dec lea mov mov dec adc (bad) cmp dec sbb iret mov insl mov add rolb mov sub sub je jb movsl loope outsb sub insb add es jae iret insl icebp adc inc dec pop rorb xor push mov push mov cmp xor cmpsl loopne cmp cmp loopne (bad) in fisttpl int fistp sub insb mov sti icebp (bad) push neg adc and and in outsl xchg cmp sbb sarb fs (bad) cmc addr16 add mov and sarb xchg in test call mov (bad) dec outsb imul (bad) out or scas xchg mov pop in or push ljmp popf mov xchg (bad) sbb jns push jp popf dec (bad) enter sbb mov push je xchg mov insb mov xchg lret mov dec rcll mov add xchg xchg push sub add xor test (bad) out pusha imul ja pop and verr jnp push sub sbb icebp or insl sti orps xchg js pop push ret pop mov push sub test call divl int3 jmp sahf inc push push push push cmp mov str clc or fs int3 (bad) xor dec int orb adc xor fs out rcrb add frstor out xchg (bad) cli test push jno jne divb jnp,pt push sbb jne inc int3 add movb cmp repz jbe fldcw lret xchg cmpsb (bad) clc push pop call and (bad) cltd sub mov sbb insb (bad) hlt xlat (bad) shrb jae icebp jo sub push fwait in or mov gs (bad) iret inc cs out pop lcall inc mov (bad) stos enter insb and adc imulb popa push inc add inc mov and add mov lock xchg jae push es fstps cmpsl idiv mov xchg cmpsb xchg in lds pop sub in inc or push fadds fs jns pushf (bad) dec sub mov push cltd fcomp add fimull fmull movsb fs sbb xchg mov sbb push sub rcl lods jle sub outsb cmpsl (bad) cmp loopne insb xchg push xchg loopne mov adc jb rclb sbb int3 xchg out or jl sahf push xor mov (bad) hlt test dec (bad) mov xor pushf mov lret sbb popf fldl imul jge and fwait stos fidiv add sub int3 dec inc stos fsubrs sahf incb data16 mov pop fs in mov lcall pop sbb jnp jmp push outsl add loopne scas jecxz mov and repz sub mov cmc xchg insb jmp sbbl xchg xor mov stc jg sub inc inc hlt or adc ret inc xchg movsl imul xchg mov pop out clc adc cld aaa xlat fs data16 pop pop ljmp leave in dec stc push addr16 sub or imul cmp cmp gs cwtl or mov enter fstpl adc lahf add push (bad) cmp out or insl push mov dec xor inc orl pusha mov into idivl dec push lret fdivrs mov (bad) (bad) push pop lgs xchg mov jmp (bad) mov cs aad mov shrb add pop jo in dec icebp adc stc cs js test mov add jge sbb je repnz or xchg xchg repnz jge mov test xchg push ret cmp sub pushf mov stc adc mov adc ja cmp sub fsubs push popa inc lret jp pop dec mov in and xor inc test daa fist sahf sbb inc mov adcl push push sub push xlat int3 jae mov int3 xchg xor mov std lods call fistpll fwait loope lea ret data16 sbb push fs add sbb mov push cmp je pop in dec sbb (bad) lret stc fldl xchg out or lock dec lret pop loopne or adc adcl call idiv shrl cld ja fadds popf lahf pop ret and jp mov lods lcall cli mov mov mov idivb out cmp mov pop sub dec xchg pop movsl mov adc xchg sti sbb sub (bad) addr16 ja or lods fisub pushf repz (bad) js mov ret scas aad daa cmp out sti and add cld fadds lock iret pop and jb push test clc lods or mov das inc repnz je pop push or mov fstpt push push adc fstpl push jne mov lea fs rolb sbb rclb or aad jnp xor sahf mov mov sti fistpl popa out insl lret ror in jl (bad) push pusha mov stos mov xchg push popf in rol ret mov imul add jne sbb sbb or xchg rcll pop (bad) (bad) cmp lcall pop mov sti jmp add stos jne adc popf call test sahf add push add inc nop aaa lret int3 sbb imul mov pop sbb pop es adc sub scas lds dec mov cmp xchg xchg stos cmp aam daa pop movhps rcrl negb xchg stos stos stos stos loop insb or xor xlat fadd push les (bad) mov mov cld movsl jne popa mov imul or out nop xchg das push js popf sub jnp sbb mov add ret (bad) (bad) or sbbl imul and fnstcw movsb bound sbb push icebp pop jg mov and or inc cs pop mov push add into outsl xor inc mov pushf leave loopne test ret repnz ds fwait outsb add fbld pop sbbl fucom jno scas shll das sub call cmp aas sbb data16 lret cmp mov cmp mov scas jmp xchg add jb test cwtl mov pop mov aaa out lret sbb jnp divb out adc xchg dec jbe aam inc push xor mov mov mov (bad) jne decb into push fwait cmpsl or adc out pop lea ss mov jnp sub aaa mul inc pop ja xor or adc pop mov xor loope add fwait vmread inc imul sbb fs andl subl out sar popf pushf in test mov inc loope fisubr fs add into jae (bad) (bad) mov adc mov mov sbb dec sub cmp (bad) bound add jp pusha xlat es push lahf std sahf jecxz cwtl and push repz and cwtl (bad) adc dec xchg push and cmp addr16 test jecxz dec addr16 out out pusha push mov cmpsb mov or cltd and gs sub popa daa jle dec arpl sbb leave out rcl xchg cmpsb mov mov hlt jg xchg pop xor cmp test fstl fstps pusha in (bad) mov adc mov mulb mov rolb mov imul loopne sarl xchg mov adc add (bad) cmp fistp fcoms (bad) out mov pop xchg xor push push inc mov enter int3 stos call imul xchg sbb pushf mov dec push cmpsl out lds mov sbb mov or and and sub xchg mov jge,pt adc mov sub push add adc arpl rol jge incb aad cmc aam jp and icebp dec bound sbb push movsl xor ror hlt and aam icebp mov add mov mov inc cmpsb outsb inc (bad) xchg cmpsb fldt dec pop inc sbb xchg in jl mov rorb push bnd daa out and sar popa jge mov pop inc jns xor std and popa xchg and jmp inc (bad) fsubrs imul loope jne jge mov pusha dec push out cmp push xchg rorb jge push leave sahf inc (bad) dec push pop sbb add dec movl mov push push push repz mov cmp pusha or mov loopne loop add je inc cmpsb mov xor hlt jae mov sbb mov mov and push rcl stc mov dec lret lods pop cmpsl push xchg adc mov push sub dec push fwait push (bad) push (bad) ljmp repz xor pop out and jne dec call outsb sub lods mov or mov mov cmpsb mov into cs (bad) and lock dec inc sbb xchg cmp (bad) test cmpsl popa mov xchg pop jmp enter imul aas leave mov inc sti hlt into lods or aas xchg out xor sahf (bad) dec fwait inc pusha fstps mov stc test adc and out lock ficom sti xchg and jb add rolb in add pop mov jae xchg adc clc adc enterw fsubrp out enter lcall dec xchg shrb pusha sub pop cmp js jmp mov aas mov xor aam inc jmp stos loopne cmpsb daa jo push ljmp mov movsb (bad) mov lahf lods ss gs pop in mov negl gs add stos imul or and adc clc jp mov shlb adc xor add cltd popf icebp icebp jmp les and repnz (bad) jne in call in pop lcall adc lahf push sbb jge and cs sbb adc aam cmpsl push push and loop mov hlt and shl or pop push sub add push jg xchg into push cmp add adc sbb test adc pop fldenv and pushf ror std outsb mov push jns (bad) es inc pop sbb test (bad) ret or icebp jmp jmp lret mov (bad) mov adc add ja pop out (bad) add fs (bad) inc mov mov pop stos sub mov ss sub xchg dec (bad) (bad) sbb mov in movsb pop jo fs loopne stos repnz xchg push outsl outsl lea pop aad daa nop inc rorl add push insl imul leave pop cmp push cmpl js mov push pop cmp and (bad) idivb inc push sbb xor lahf ja mov data16 mov pop sub enter mov fwait bound lea mov adc and jmp mov adc insl or mov popf add cmc xchg adc loopne aad xchg push jg lahf sub cld add jle mov push xlat sub aaa pop pop scas adc inc mov aad lods mov stos mov and or gs inc jno push sbb fstpl insl inc (bad) repnz lods mov jo int push cltd addl out add in daa std mov jmp jo push mov add sar fdivl pop sub push jmp ficoml cmp clc pop pop and lcall sub inc aad inc mov xchg mov pop pop icebp xlat dec icebp pop mov adc push sbb jle pop cld dec or xchg lods lods inc nop jecxz pop aam mov sbb test clc add sti in dec and rclb lock and dec add pop mov (bad) cmp pop cltd add cwtl (bad) sbb cli push and in xor es push cwtl cwtl cmp rclb mov hlt jae inc sarb popf xchg pushf and pop (bad) addr16 mov outsl cmpsb jge xchg sub cs sbb outsl loopne (bad) fwait inc (bad) rcr and sbb xlat push cmc mov adc es (bad) enter mov and xchg rorb stc ret jo cld adc test dec push pop rcll dec fucom in adc (bad) jns fild stos mov es sbb test js jb addr16 xor movsb imul sub push les or (bad) sbb es jb dec stos jae repnz jo loopne outsl ret (bad) dec push lret push cli push gs je hlt dec jae (bad) sbb or ja mov (bad) jo pop cmp insl mov mov cld test mov mov push iret (bad) das jle mov out (bad) call stos jns lds fmuls or add lods xchg cs fstp sub lds hlt and push repnz roll std inc add pop or aas int3 std stc jmp inc mov cmovb out fildl sub and aam cmp push jnp repz mov xor mov or aad push divb ss addr16 push icebp fwait mov add mov add leave lods mov or jnp test sbb popw adc sub jmp into mov mov lods xlat mov lods rcrb cwtl sbb insb std jmp jo lcall inc or adc int cwtl fildll je aaa sub cmp pushf mov xchg (bad) xlat pop (bad) jae cmc pop mov pop aaa xor mov in push les test sub sub dec push call ja testl mov cmp inc xor into adc sub xchg (bad) icebp out xlat (bad) xchg xchg loopne push ror cmc fnop aad sub movsb push pushf fucom movsb sbb xor pop sub lahf cmp pop inc in leave add pushf adc push out cld cmc dec and or dec dec jmp movsb les sub adc (bad) cmp (bad) jno (bad) data16 mov call ret mov (bad) imul arpl sub rcr outsb mov mov lods lock ret insb rcr out jl,pn sub adc sub pop aam shrb pop movsl ret ret or lret repnz push sbb push cs pop add jb clc mov out in xchg les or cld stos xor (bad) mov stos negl inc pop mov xchg xchg dec popa dec mov xchg outsb mov mov out and bound cwtl sub xlat push jb jns adc dec push or pop test into adc out fisttpll (bad) in bound rcrb scas xor repnz jne or (bad) negb (bad) lods add dec push jge push pop or add lea fistl push mov (bad) push aad jmp les in add call stc xchg daa sub or mov sti push adc or mov mov and adc or je (bad) repz mov sbb rcr mov inc or ds pop dec mov imul cmc or jecxz int3 sub in push mov ret lods test xor mov mov pop dec xorb gs sub imul out mov enter fldt or scas aam fadd (bad) lret pop aam or inc mov cmp push adc ret push dec sbb stos cmp movsb xchg dec (bad) ja mov jl mov loope js out and dec or adc push add imul push cli loope pushf jle sbb dec addl fnop sub fucomp push into mov dec bound or fwait mov fiadd and in aam inc jbe push cmc inc pop mov ss mov clc shrb jb xchg bound inc in ret into mov rolb andb add mov or and or clc popf cmpsb je push xchg or lahf inc aam mov sub sub pop inc add and (bad) in (bad) mov or adc dec dec fist push movsl mov dec jbe daa stos pop mov cmp xchg inc push or adc data16 push mov je sar adc xlat into insb add rcl jbe out and lret and test cmp dec mov shlb add rcrb cmp idivb sub mov jg jge jp push cld push scas or out out jo sub or fldl daa push aam and dec imul mov xor xor push sbb insb xchg jno push test adc or sti mov add js adc add mov or jnp push test mov test mov add xchg mov int3 xchg mov adc cld xchg mov or cmpsl adc adc dec into (bad) jp xor ret pop (bad) jmp mov xor xchg mov mov push sti inc icebp pusha stc pop jle (bad) hlt add scas jge sub (bad) data16 mov adc mov movsb push imul adc fdivp ss sub adc and add jbe rcrl pusha xchg mov add pop popa (bad) mov inc int loop insb sub cld dec or pop or lea push mov sti dec movsl iretw jb testb cli mov cld and and mov adc mov addr16 jg dec mov dec mov push and inc cmpsb addl ljmp rorl dec add push and or out or xor call dec sbb sbb (bad) leave inc notb push sub xchg ja insl scas divb jns pop out addr16 mov mov arpl sahf leave cld inc cmp sahf sbb or mov jnp into (bad) lock fcoms and fstpl out movnti pop ja xor inc dec push xchg xchg test sub sub cli (bad) jmp subl cmp adc adc sub loope xor pop mov mov std inc sub mul cmc cwtl clc adc rcrb loope mov sbb outsb cmp xchg adc les add int mov es jg ljmp cmpsl (bad) or lahf lds mov sub inc inc sti mov add ds ja int3 rolb inc movsb dec lods dec enter inc xchg push adc jmp (bad) movsl mov pusha jae cmp sbb xlat xlat cmp push int3 jne test das inc outsb pop xchg xchg insl push fisubr push xor dec sbb (bad) sbb inc cs push cmp xchg paddusb cs (bad) push mov jne ds inc sbb adc push sub icebp movsl jecxz pop rorb add (bad) rorl imulb push call jb pop push mov jl js lret outsl sbb inc adc cmpsl cmp cltd or xor shrl call sbb and lods test mov dec in jnp sar clc cmp cli sbb les popf xchg scas sti dec icebp sbb dec adc lahf lcall pop cmp mov imul mov (bad) test sbb dec dec mov jns insl cs enter repnz jge rol pop leave push fiadd ret lea xchg out push cmc (bad) pop aaa jp arpl dec mov (bad) mov xor mov loop ds (bad) push and test jae clc cmp pop jmp outsl mov push xchg rcll add add push (bad) insl aaa mov xlat push xor xchg push mov jno inc out sub push jno icebp rcr das js add jne dec pop push (bad) sahf icebp jns mov mov out stc dec iret pop inc repnz shll (bad) mov fdivs scas mov dec mov push mov or rol hlt pop inc insb fcoml lcall cli jo dec or dec das int3 sti mov dec int3 (bad) mov insl sbb daa dec pop mov mov or fistl push in addr16 jbe or imul cmp rorb scas or pop xchg add push imul push sbb inc fidivr stos insl das test scas (bad) mov or clts and cmp addb iret (bad) inc pusha push dec jmp cmp imul jmp mov fwait insb cs (bad) cmp fstp dec lcall mov mov iret adc sbb dec xor xchg (bad) cmpl xchg (bad) dec scas xlat push and enter pop ror mov shr clc aam stos sub jns inc adc out movsb (bad) in and sbb enter xor cltd ja js mov and sub cmp dec pop mov (bad) jne mov (bad) mov in xchg xor jmp or sub push jmp aaa sub loopne aaa xchg daa fisubrl xchg mov dec out mov push dec andl mov stos hlt add sbb leave notb fs jnp je push mov mov rcll in test sub mov bound js outsb adc or cld data16 fcmovbe push xor jle mov xor lds loope mov dec ja je addr16 jp mov (bad) repz stos xchg mov push lret jg pop mov movsl mov leave ret mov sub jno imull jae ss lods in mov dec rclb negb vpmacsdqh dec fistp rcrl sub sub insl lcall add into loop xor loopne call insb ljmp daa test push sbb xchg push inc push test fwait setae pop or add mov sub inc mov mov adc mov mov or in (bad) jo lods lret call inc insb push addr16 push frstor dec loop or (bad) ja mov ljmp scas sbb sbbb mov lahf imulb jae mov jge sti fucomip push mov push rolb cmp adc push (bad) (bad) (bad) sub scas sti test or pop jb add cs js xchg mov sub lods dec add (bad) loope arpl into sub scas xor aas add insl fstps push or adc sub adc pop ss sbb sbb sbb out test lea repnz and mov xor out addr16 mov jne cmc or lock jo gs into into popf outsb xchg sahf mov push cmpb nop jns adc fwait xchg mov pop push xchg xor ret dec shlb test sub fmulp sbb inc push push mov clc das stos or in mov mov xchg lds jbe jb add (bad) xchg fcomip jbe cltd (bad) icebp gs dec pushf xor jl pop fs xchg or arpl mov lahf rsqrtps sub inc sahf cltd push inc cmp fimull jo jns outsl cs aam mov iret ret mov pop xor or fcom mov aaa mov jle dec sbbb jge push rclb add add in and mov outsl xchg mov lahf mov dec mov nop popa adcl mov shrl or sbb adc rolb lret outsl fwait jecxz jecxz cmp mov cld rolb int3 pop mov xchg ja lret jb adc push push mov sub in pop cmpsl and xchg sahf or jnp pop bound xor inc inc sub daa mov dec dec rorl rol hlt or push push pop and outsb mov iret xchg adc push sbb mov ret fldt and pop mov xchg inc fucom jmp sub mov inc dec inc dec (bad) lret std inc mov xor adc mov mov arpl ss or fiadd inc in lock dec cmp fsubl or rol jo repz daa arpl xchg jp mov popa xchg jmp insl xchg popf out xchg int3 xor repz aad jnp mov dec sbb lahf ljmp inc popa mov sub push insb add cltd in inc cmp sub stc movsl mov sbb push cmp or outsl pop jnp inc xchg jg jbe mov mov insb call cmpsb dec clc xchg mov inc mov mov push pusha mov dec mov lds dec jb mov mov mov adc scas in aaa mov dec pop pop test mov lods in mov dec pushf inc call lahf les gs xchg xlat xor daa scas sbb adc sbb (bad) add jp mov std imul jge inc ja mov shlb mov int inc ja lds fild pop xchg mov cli xor cmp lret repz aas sub add xchg mov cmp gs fistl adc pop pushf hlt mov test mov sar push xchg les pop idivb insl imul mov push mov popf lds sbb or lahf call sbb add and call push test int dec call test scas je stos test push dec dec (bad) dec sub ss es fidivr cmc cmpl sub push cmp sahf scas iret int push lret iret movsb mov mov stos add cld js jle mov div add mull fnop mov in stc or repnz jno decl inc (bad) push push (bad) sbb push inc int3 add repnz and sbb push adc cmp jae pop adc pop adc sub idivb cmp insl addr16 push lret leave and cmpsb fisttpl dec push dec ss cld jle scas jnp rolb divb push lods dec outsl jo pop add or je into sbb adc push pop xorl fwait jecxz ljmp dec fimull ljmp (bad) adc popf into lds into pop stos xor leave leave cmc pushf pop ror mov sub sbb stos inc pop ror inc jge cmp xor dec mov in (bad) jge,pt inc (bad) dec xchg mov jne mov in (bad) rol pushl inc in out inc scas cs rcrl insl add popf jns into lret pop loope push cmp mov jle mov mov push add xor int adc orb aad movsb les cmp or inc mov (bad) jecxz pop jns and pop inc dec (bad) push je out jns (bad) xchg jnp xchg xor lret dec cmpsb dec pop sarb cmp popa loopne fcoml and out dec xlat jb js lahf test imul pop sub arpl sbb jb pop nop or dec xor mov leave xchg fwait (bad) mov loop pop mov mov (bad) imull (bad) ljmp (bad) fcmovbe aas adc repz lret cmpb nop aaa divb outsb jg mov mov dec aam cmp addr16 and test jns lock pop sahf stos js sbb inc dec dec dec arpl xchg jbe jmp inc std in rorb dec dec fildl int3 sbb adc xchg mov dec jmp popf repz (bad) cmp orb ja sahf push lds icebp repnz movsl test mov add mov inc mov xor add dec sub and sbb daa mov aam dec aaa mov sbb aam les adc sub push dec adc out mov imul mov popf cltd cmp call xchg sub je imul das dec inc jo adc enter popa pop (bad) lds in test cmp cltd adc mov fwait jne fsts test or movsb inc mov into push or dec sbb or jge sub lds pop cld jle jo add cmp vmovupd cmp loop pop inc inc cli fidivl push pop add jo fldcw enter mov xor stos jmp sti jns pop ret cmp fidiv ffree scas sbb pop fidivrl cmp ja sbb add mov push sbb adc inc mov xor xor aam mov add mov out mov jecxz insl divl into repnz test push aas jo push pop addl jbe sub gs int3 fisubr jle mov int aad nop and daa and (bad) std mov adc mov push into cld test sbb aam mov xchg es inc jno mov xlat incb mov push sbb fmuls iret push or lea xchg (bad) es fsubrs fildl mov stos ljmp imul pop mov aas js rcl aam mov aam adc stos pop div mov lret xor sub aam mov (bad) aaa in jno jnp ss lcall adc movsbl (bad) mov xchg imul stos (bad) mov dec and inc jae outsl stos xchg mov add lods add cld negb inc loope sarl xchg dec imul repnz lret leave sub mov jle jg adcb or (bad) or cmp movsb inc fcmovne (bad) and mov (bad) test out hlt lods mov arpl aad in mov loop ds push rcl addr16 insb icebp cwtl lret push push mov cmp push lea mov push pop add push mov ljmp xchg out int test pop jb fstps dec data16 imulb fcmove xchg inc nop lods das jno xchg imul loope dec mov outsb cmp add xlat xor adc adc bound aas add jp sub or repnz ret popa push cli xlat ds xor adc xchg ret mov lock inc sti lahf xchg jb sbb cltd icebp fldenv mov out movsl js mov xor je je pop pusha fwait add mov jb xchg ss sub xchg gs pushw popf in repz pop movsb lds pushf int js xchg fstpt cmc stos test sub pop pop mov jne lock jle or pop mov lahf inc shl cmp sbb cmp cltd sbb jbe mov ds (bad) push xchg sbb xor cmp cmpsb xor xor mov aaa lods push gs or mov add popf inc cmc popa xor int3 out int3 xor nop stc clc adc xchg jge mov sbb add lods xchg xor lcall dec inc cmp mov lock cmp testl add je xor int jnp addr16 sub mov imul dec jecxz sbb test mov sub dec xchg cltd sbb dec cmp fimul dec test icebp test cmp imul jge dec push lea fwait mov lea lret sti mov xor movsl call push daa std lods pop out mov sbb into loope daa jne dec adc fcomps test xchg xchg popf ficoml adc cmp pushf sub fbld popa mov lret das imul xchg stc popl in leave repnz xchg mov enter or rol cmp stos pop jne mov pop fs mov nop loop cmp loope pop jae call test stc ret shll pusha addl sarl divb or adc sub jno sub test pop loopne xor mov xlat shr or mov cmc loope adc pop push push sbb test mov mov mov dec mulb icebp cli push movsb xor dec lahf pop dec (bad) repz jecxz inc imul inc push or sub bound or and mov ja jg stos mov out push jp adc imul sub insb sbb iret pop mull fcomip aas push out aas xchg sti leave dec icebp in cmp repz out fisttp lock cltd (bad) ret imul imul sbb mov (bad) pop ret add ja pop cmpsl inc sub jg push add out lods lock mov or inc mov jmp inc gs ja add stos stos scas and mov adc dec pop ss repnz ja lock (bad) cmc xor mov and ret gs add ljmp mov int3 mov (bad) mov jns in adc addr16 cld push pusha aaa and mov xchg popf xchg sbb in adc push or gs push sbb mov mov push mov or ja pop fwait and adc mov sbb xchg add lret js bound mov outsl adc mov sub insl add sub fld pop pop andl cs fimul or dec (bad) jge cmp mov ret and fisub fiadd loop adc and sub jno xorl (bad) and jl inc xor hlt setae (bad) test lcall sbb adc test dec ja cwtl and lea cld mov push jmp jl and or aam pop mov sub dec shrl cli sahf jge dec inc lret test idiv adc fs pop std pusha fwait cli movsl jle inc push loop ret stos arpl mov es (bad) repnz mov xchg inc mov mov inc jae mov push loop pushf cmpsb scas dec push stc xorl and insb inc pop pop fwait and add imul lret insb (bad) lock jp int adc test inc sbb imul sub push pusha pop pop mov (bad) (bad) xlat push out nop pop fstl fisttpl ret push sbb push insl in jg ljmp jbe sar (bad) push add mov xchg pop xchg out ss xchg dec je cli pop pop adc xor mov in outsl fldz push out fwait mov fwait pop xchg pushf cmp loop mov test xchg sti loope jmp push pop adc les ret mov xchg ret in pushf leave (bad) jp jg fadds sahf adc cmpb mov or cli imul imul test repnz dec inc aam mov push or lret adc stos or mov cmp bound jecxz (bad) nop jmp jmp nop or ljmp cmpsl (bad) out insl ss and xchg jg insl int3 mov sub mov push jmp cmpsb mov notb and ja iret push push inc fidiv mov imul or xchg loop xor aad adc lahf xor fsubr movsb aas mov insb jle mov fsubrp ja call inc sbb push out push scas (bad) negl or sbb mov mov or ret in rorb lock xor mov pop int3 pop mov adc mulb xor add push sti jp push shll fldcw daa jmp mov jecxz push popf sbb leave cmp lods xor xchg push mov pop rcrl mov lods addr16 mov lock pop xor and cmpsb imul xchg stos test fsubs aam mov xchg hlt dec cmc fildll out orb lcall call (bad) inc dec lret leave push inc fwait jp lock out nop mov pop nop imul cmp jle loopne aad in cmp sbb mov adc gs dec mov mov push xchg sti mov inc lock in jne stos int mov push mov flds cli inc cmp (bad) int3 jl jmp ret mov cmp ret rorl jno addr16 mov scas clc lods test push xor pop dec adc sbb icebp pop scas cltd or push add cmc loopne pop inc sarl mov xchg or pop aas xchg cmp movsb inc imul mov lcall adcl enter fmul push mov sbb test mov xor ja stc jmp push dec xchg pushl push xchg (bad) mov pop or jae roll insl inc ljmp sti push js aam insb push int hlt ret int3 pop jle xchg pop mov (bad) aam or xor mov sbb fstl sbb sub cpuid out shlb js xchg fildl sbb outsb mov xchg jno cwtl sub mov xor push rcll aas mov lds lahf fadd movsb mov pop pop push pop pop xlat mov pushf cwtl imul sbb xor lods mov and pushf sti add inc adc insl xchg inc mov adc sub jns stos push add or pop or jmp xchg add test inc xlat or js mov sbb cmp jo mov fcmovnb mov cmp or xlat test cltd jp sbb pop mov mov ja sub xor nop ret mov lahf popa xchg mov pusha jbe es es inc jns pop sbb dec lds add punpckldq add xchg test xchg sar cmp (bad) test inc push jne (bad) mov clc stc fdivl das sbb aaa lods cmpsb xor stos push stos (bad) not mov call jns fwait push lods inc mov and push inc mov mov fwait adc in int and jno dec ret mov (bad) jmp inc fnop and js daa mov (bad) repnz int3 int xor rcl frstor mov pop cmove in jbe jmp sbb jno pop std loop in pop or jge and popf dec xlat ret mov jne jb popf add bound sub mov dec (bad) fisubrl mov imul dec cmp aaa pop arpl or mov adc push pushf arpl sub dec and mov dec fsts out inc xchg mov stos out arpl and jge xor pusha ja jno adc rorl push hlt mov push jnp jle cmp scas xchg jecxz mov cld hlt mov xlat iret jno dec fwait lea iret hlt ds and adc dec jp jg repz lahf cwtl mov in addr16 (bad) mov sbb and dec cmc fmulp clc aas and ljmp fsubl and or sub in add pusha cs mov iret jns and sti (bad) push or ss jmp out lods mov pusha fmull push mov mov out dec test je cmpsl movsl (bad) and mov lds mov mov (bad) call int3 mov push cmp mov mov je scas std xor lcall loop insl xor pusha out mov sarl pop adcl ss jae dec dec xchg jp pop mov sar out xchg movsl stc sub jle ret repnz aas jp sbb add addr16 sbb mov pusha sbb int xor mov inc mov fucom mov fwait and outsb mov cmp push mov (bad) xchg icebp insb movsl push or pop sub frstor cs jle dec rorb inc push (bad) cmp imull mov inc sti das pop aam movsl xchg pop add mov sub mov repnz xchg jne sub ja xchg push cmp sahf push sub xchg pop fwait cmpsb inc (bad) int movsb in test push xor add outsl ja out push xchg add fldenv xchg and int test aad push fistl jg enter movl add lcall dec adc push xor sbb xor sbbb inc cli enter jb mov in arpl or popf sbb push xchg insl cmp cmp lcall push rorl fidiv xchg xor sub inc das lret clc test imul lods aaa mov int3 lea imul sbb rcrl pop dec xorl push inc out sarb add adc jg jge imul std add add lods gs ja jp (bad) or fs xchg or xchg fcmovne mov fadds loop lods xor jns xor push push loope or mov loope push stc loop inc insb adc dec enter add enter addr16 jle stc add xor inc mov xchg fisubl push sbb xchg lods (bad) repnz mov add pop mov (bad) lock movsl jecxz addr16 push xchg sub inc inc jmp std insb andl inc out sub xor test pop insb (bad) sbb pop sub movsb jmp cmp lods mov data16 insb bnd dec cmp ror push push push push dec pop cmp sti in jae pop ret mov add stos bound lods mov adc call jg sub nop ja out mov aas cld clc sbb or mov clc push mov push push push xlat out add jecxz xlat (bad) and jge pop push test into xor rcrl or cmc xchg rcll cmpsl inc push push adc xchg mov adc dec outsb test mov dec mov add je mov mov xchg add das xorl ljmp jecxz sbb movsb insl leave mov sbb sbb mov pop xor jg mov aas js insb fwait xchg mov mov xorl scas outsb mov mov cmc enter and push dec inc aad les pop xchg adc lods xchg das xor aaa mov fwait jmp fsubl and dec push in stc cmpsl lods push mov sete cmpl (bad) pop cmp sbb test div mov or das mov pop mov pusha test fdivrl cmp test push int push jne roll aas out jae insb neg jne lock mov mov outsb xchg mov sub push (bad) cld sub dec mov push jecxz clc scas cmp imul cmpsl out fnop stos ds mov (bad) ljmp inc ja adc push inc xchg mov outsl cltd ljmp loop cmc xchg (bad) aas cmc insl loopne mov dec mov (bad) cmp loopne dec test iret adc out push loope mov xorb jo dec mov add repnz notl dec and jge adc sub sahf xchg fcoml pushl xchg dec pop inc ret xor jns ret lods (bad) insb nop adc cltd push sbb lret ja mov cmc cmp (bad) fs pop mov mov das movsl out or icebp shrb lds decb xchg stos mov jne lcall daa xchg popa jnp es jne xlat aas clc je loop fistp repz (bad) in rcrb mov jno ret leave mov out fcompp push mov sbb rolb outsb jmp push or sbb pop push fstl jmp inc hlt sbb mov jmp jbe and or jbe enter jnp adc sbb in dec jb push pop popa xchg in jecxz adc stc sub pop push or fdivs push jle add mov mov loop inc xor push int3 dec cmp fbld mov addr16 cmp xor gs xchg pop xchg hlt push in xor fbstp les pop je jle (bad) neg jns in cmp setl cmp inc mov mov xor test mov call popa iret aas out out lock push lret enter mov scas fwait push mov popf sub pop push in aaa fs jl js (bad) pop shrl jnp mov and loopne xchg sahf push into push ffree pop stos fiadd dec push and mov enter iret lcall or out mov fiaddl cld scas insl out decb lcall jnp shrb xlat rolw inc cld out (bad) mov dec mov xchg (bad) push push cltd pop or cmpsb sbb mov insb ficomp sbb stc add dec mov push push mov or adc inc dec dec in (bad) clc dec mov push popa in arpl adc push test sub xchg ljmp pop seta inc std lahf (bad) xchg xor cmp adc inc nop in fs sub mov pop aaa fldenv sahf xchg sub insb inc data16 dec lahf push test adc lcall xor subl sbb cmp jbe in or cmpsl xorb cmp lcall les data16 test addr16 sbb lret stos mov packssdw rcrb jl stos or push push pushf aam rorb out and insb or (bad) ja lret and push pop es in push addr16 (bad) cmp (bad) shrl ret mov subl fbld cld imul mov ret adc xor mov inc daa or jb sub call repz dec dec jns aad xor out inc mov (bad) and js mov xor push inc sar out cmp and loop xor sbb mov leave cmp popa arpl fwait (bad) dec outsl inc (bad) xchg cltd fdivs mov das idivl xor test cli imul xchg out push push or add push pop sbb inc ss push test cs mov xchg out xor mov or jmp mov push or mov pop jecxz aad push addr16 testb out sbb mov lcall mov sbb pop dec loopne inc bnd inc stc adc sbb (bad) je rolb imul (bad) clc in js ljmp int3 imul (bad) push dec add test clc fs cmpsl mov or mov (bad) mov fdivp jo mov add pusha int3 scas mov int mov les jl jg lahf mov insb xor and lret xchg inc pop xchg mov push cs enter pop push fldl inc mov clc push sti insl jecxz call adc (bad) xchg push mov push aas rol sub jp or xor jp fucomip cmp dec cltd testb cmp stos lret sbb sbb scas push mov sbb mov cld and pop inc aad cli lock mov ljmp in fisub ja test les pop and movsl pop test xor sub sub push lea gs xor lods ljmp pop pavgb sub jmp mov (bad) popa leave sbb xor (bad) stc add xchg mov jl shlb add dec pop lods in mov sub mov outsl add xor aam mov add jbe pop lock test std mov pop fs adc (bad) lea sub gs (bad) mov ds pop outsb sub lds dec dec cmc jno and (bad) jmp jg das pop mov cmp out es inc mov xor repz (bad) btr cmpsl sub test push mov pop and insl inc or pop sbb push cmp aam sub or (bad) mov inc (bad) in jle jns dec jbe xor idivb out mov mov mov and idivb xchg mov daa lock fistpll mov xor mov test mov mov add shll mov pop mov divb mov push inc push call dec mov nop inc dec out inc loope lret xchg push divl jnp adc in punpckhbw in or lock or ljmp out jl (bad) mov gs in xor aas insb or ljmp add pop lret sub or ja pop popf ror test das pop mov dec lahf or popf pop ficomp jge in movsl pop sbb or repnz pop loop pop mov icebp pop call je es (bad) adc add pop sub jmp out lea jb ja push ficomp pop cs cmp push mov mov cld rorl xor xor repz pop bound out mov ror adc sti pop jp push mov fcompl ficom cmp cmp lods repz mov lahf pop loope andl fimull push loope repz jae frstor testl push movsl cwtl (bad) arpl lods fdivs inc push negl inc mov mov mov out in cmovns jbe hlt and (bad) push mov push jb incl mov sti test iret mov fcmove test xlat sbb sbb jg ja arpl jmp cmpsl mov (bad) rolb mov xor lea fdivr loopne mov cld dec and dec cli scas int fldl setb pop jo push fisub stos les mov (bad) jge mov add pusha test clc ljmp out scas and mov mov lock aaa mov jnp xchg int push fldcw push ja cmp inc jle mov rcr insl sub mov jl mov pop call add pop nop pusha fwait sti mov mov pop lds ljmp les ljmp insl dec pop roll (bad) out repnz mov cwtl out mov les lock cmp jg push or sarb aas (bad) ds push sbb mov adc add adc (bad) sbb inc cmp jmp push lcall (bad) or es and cmpsb jg lods stos and jecxz fnstenv shll out int jge je and pop adc data16 mov enter dec xor in adc adc dec sarb fld mov xchg cmp pop xchg test jecxz fsubs or adc or jp push cmp mov mov inc mov loope lds xor fidiv loope aad xor jmp jae out addr16 gs in xchg pop inc push jae lret leave mov mov cwtl add mov mov push fsubs mov add fcmovnbe out xchg adc in jecxz mov inc incb into scas movsb pop fs sub and inc mov mov or jbe fucom (bad) in cmp mov push fdivr mov bswap popa add cmp mov jl stos out mov in or jmp push (bad) (bad) pop imul sub ffreep out mov cmp mov iret (bad) lock (bad) test out iret push mov ss mul jl outsb flds js xchg popa xchg xchg pop sub inc and pusha data16 ret xchg sub clc pop lock cmc leave mov mov cmp pcmpeqw sti or test xchg cld push and pop cld imul test lods and daa sub lret popf jne stos push jge out pusha or mov daa sahf es jp add xor and sub test (bad) jmp cs cmpb loopne mov cmp fs fidivr loop dec (bad) push push jo ss sarl ljmp mov mov scas repnz and sub into inc clc testl mov ret adc out fucompp loop sub fwait ret mov into dec (bad) aas sti jmp lods pop pop loop aaa add iret xchg jl in sbb push js ret gs push jae push pop cwtl jecxz loop pop sbb add lret test xchg inc lock inc and and sub cmpsl std mov adc inc add jne icebp lds cmp mov lahf (bad) xchg les jge sub xor inc movsl insb fistpll push inc jnp xchg rorl and xchg clc adc lahf andl inc iret das bswap jae leave add mov adc int3 (bad) fcoms jl (bad) xor cmpsl and loop std daa out pop push ljmp stos lea sbb movsl inc sar cltd pop cmp ss or inc shrb call ss lret testb cs gs pusha daa jle imul jmp sbb add gs jb adc inc lret les push sbb lret inc jns inc popa mov xor and es test sub arpl lcall imull aaa lret xor fcoms push jle in faddp test adc inc (bad) xor xrelease pop cmp cld callw mov dec in shr sbb lcall lahf popa push divb inc xchg mov mov repz loop push mov sbb mov fstps loopne pop cmpl outsb mov imul popa in js push pop or push out mov cmp call bound adc jp cld bound sahf mov cmpsl sbb inc pop rcrl push mov cmp mov cltd (bad) rolb inc addb jb cmc xor fcoml dec fs jp rclb dec test mov cwtl lea aaa add push rcl lea testl jns sbb dec cwtl int and mov adc fdivrp add dec jne,pt pusha stos rolb lret fucomi xor stos sbb test leave push xchg xchg ds xor jns ja cld mov mov pop clc or mov ret dec xor jge loop test in int jg mov push cltd add mov lret dec in stos cltd xchg cmp lret sbb xchg xor and sub jle push xchg inc or in test add and pushl nop in and and adc xor mov xchg cmp fs push out bound dec adcb shrl and hlt in ljmp cmp fadds mov out aad cmp sub and dec sub imul out push movsb shrl inc cli sub add mov sbb add push roll cmp ja imul les (bad) aas add mov mov aad cmp mov test shl add mov dec add xchg dec add jo (bad) sub pop sarb dec pusha push rsqrtps lds fcomip cli mov mov sbb ficompl mov adc xor and pop or ss pop pusha mov mov jp sbb ror loope adc ljmp cwtl loopne mov sahf cmp bound iret fbld outsb inc loopne mul sbb push xor mov mov mov pushf adc jg push hlt arpl sbbl xchg ljmp jb lret pop mov loop fst mov (bad) movsl stos negl sbb lret inc lock push mov dec xor std aad jmp js add push movsl sub xchg xchg or rcrb cmc jge mov clc cmc sti xor sub notl inc push jns fidivrl test gs or xchg cs and iret mov xor lea inc call or xchg adc mov (bad) xor in mov jns scas pushf mov aas outsl inc xor jns gs or xchg or mov xor and xor pop ret sbb ret sarb or jecxz and mov popw mov mov out fcompl pop and lods loope mov jo lock mov stc add addl cmpsl mov push inc adc inc cmp notl cmp (bad) xchg hlt inc or pop addr16 adc ljmp inc test outsl popf adc lock outsl adc popa rolb dec ret sbb adc repz jl cmp sbb ret add mov clc mov and mov rorl dec movl (bad) ss (bad) cld cmp and mov dec in push clc cmp je out dec xor mov cld adc lds adc jbe aad dec sub push ret or sub pop cmp mov (bad) jo mov loopne xchg cmpsl fwait xor (bad) mov (bad) stc jne jl push push mov xchg dec scas jbe (bad) mov test jo dec mov (bad) ljmp xchg mov das test out inc in jg mov dec jmp adc cmp ss outsb notb and sbb cwtl add mov dec (bad) cmp mov xorb cmc mov in test cmp daa jne dec fsts out xchg dec jmp jne push sbb mov jb mov cmp push test lock pop cmc xlat jmp dec iret push jp jle dec sahf sbb data16 xchg mov push fnsave test test pop (bad) std mov mov lea mov js pop sbb push repz aad xchg jge pop mov pop mov adc dec push cmp sub or pop popa push repnz je sarb mov and scas mov stos ret mov dec daa push aaa imul pop iret sub test test mov mov dec add (bad) inc loope cmc fdivp and add scas add push and jne mov (bad) cmp mov pop stos jmp jge xor push mov dec lods mov rcr adc pop addr16 ds xor mov push adc adc aaa push cltd stos cld (bad) into (bad) rcrb or cld inc arpl gs sub jae mov pop or lods push lahf xor decb sbb push jbe adc jb push mov jl popf adc (bad) add sti lods jmp pushf sbb pop mov insl fist pop popf xlat dec push jo and mov pop inc lods xor imul xchg dec add test pop xchg dec das mov ljmp clc (bad) adc lds xlat ficompl push pop loopne (bad) push data16 in es enter lds scas imul xchg and jp outsl fdivrl pop mov pop mov lock dec adc ret jns sti inc lret inc cltd ror mov mov dec insb pop push inc push and lret loopne adc sahf cs mov push inc int3 mov lods adc push ret lea sub aaa jmp lock mov cmp repz ret jge (bad) repnz std inc out lret inc test (bad) lock or jl push stos add cwtl jle push mov enter idiv push push je bound jmp pop jns xchg mov xchg ds sub jo and sub xchg cld dec fcoml stos sub cmp lret cli sub mov push imul push (bad) rclb cmp pop xchg mov aas xor repz out adc mov or mov cmp adc sub sbb fldenv or mov sub jne pushf test jne out sub cmp cmpsb dec out push mov mov stos pop dec int imul push rcrl jns arpl mov xchg dec xchg jp stos aaa movsl test sub xor jbe push test lcall add xchg push sbb xchg and insl xchg mov inc int or (bad) lods ficom mov sbbb mov or mov aad adc and mov dec adc call xchg cld int mov dec into test fdivl js xchg add jnp or and sbb and adc lea lea or daa (bad) mov add xchg (bad) rcrl jle lock sbb xor fcoml jl enter mov push push dec ljmp or dec (bad) adc mov lcall (bad) jnp xor (bad) mov scas xchg arpl lods sub sbb push add test jecxz int3 js push sbb dec bnd mov mov mov iret insb inc andl nop lods xchg (bad) scas pop in xor clc dec shrl jno repnz stc mov loope pop in push iret orl imul test or pop sbbl ds add xor mov sbb xlat pop inc pop xchg and dec xlat pop push gs mov and lcall fwait ja arpl stos repz inc or sbb jo add dec inc or pop sub inc scas jle cltd shll cmp jnp std mov aam adcl inc sti lcall fst lods stos mov or into lods movb (bad) push enter push xlat jno rclb adc jne (bad) or xchg mov jo mov orl mov aam sub xor cmpsb sbb jbe dec cmp outsb xchg dec test iret (bad) mov mov mov jmp scas iret jle loop and iret sub test out aas pop test (bad) outsb push xchg xchg (bad) repz dec sbb outsb and cld dec test (bad) adc insb (bad) mov mov stc sbb mov mov leave daa inc pop push jbe gs pop loopne push into daa push sbbb int3 ret pop push jecxz inc jmp push stos mov movsb inc pop popf and push jecxz es std sbb stc jmp aaa or cld or call xlat loop sbb or inc cmp test dec aam push inc push xchg cmp ret mov mov test popf mov jmp or jl mov mov and push jo test pop pop mov lock test push pop sub stc inc sub push cmp mov testb mov and aas (bad) fcompl or inc fimull jbe cmpsl xchg mov add push pop inc pop dec pusha ret inc test inc mov sahf push popa addr16 dec imul dec or daa sbb mov ljmp jb cld xchg sbb aaa lret sub (bad) cwtl jecxz (bad) mov inc jnp popa dec std pop int3 test mov xchg call dec repz imul mov pop push mov xchg movsb clc adc inc cs jns inc jb ja dec sub push add cmc cli mov imulb mov and int xor mov jl addr16 ss push (bad) adc bound ror jbe test popaw lods adc dec cmpsl bound cmp in sahf mov lds inc push das sub popl fs mov adc xor (bad) bound mov mov in adc test lahf inc jge mov cwtl pop imul xor insl and icebp cmp (bad) push jne int3 loopne sub (bad) repz push sub sbb add cld aas pop mov and sbb inc mov adc cmp ret ljmp ficom cmp mov sub adcl lds pusha add leave ret (bad) out cmpsl sub xor jmp and ror divl pop sub inc or (bad) xor mov push scas out inc scas ljmp adc imul jmp mov ficompl push int3 push insb fldt insb inc sub insl outsl xchg in mov cli lea jae mov jp fnstsw and imul adc mov mov call rcrb mov int jge pop and dec mov jl cmp fild leave pop or leave fwait andb sbb outsl popa out (bad) pop jne mov pop xor test dec xchg pop push jno das add jl lods lods arpl aaa loop lcall gs fildll xchg out ss inc sbb imul fdivl cmp push xor popl lahf cmp push jmp dec mov or lea or pop push jnp pop enter mov mov mov lock pop and adc inc push pushf push cltd fcomps (bad) pop sbb pusha adc (bad) cs stos inc push mov rcrb push push lods std stc aaa push insl inc sbb lds jge test loope (bad) mov rcrl cld lock cmp cmp int3 les rorb xchg sub inc ljmp or dec lds adc push aaa daa lcall mov es add scas fistpl xchg dec gs push call pop xor (bad) jmp popa and xor sub mov lock leave loope jle pop sbb xchg xchg adc and lods mov dec mov sbb int or int sbb mov addl lret push sub int3 (bad) cli dec mov (bad) cmpl adc cwtl in loop fnstenv loop scas inc adc xchg sbb daa mov rcr inc mov sub add and pop jl mov sub pop inc adc fnsave jl pusha xor xor cmpsb push add sarl push cmp mov inc or pop in add xor call (bad) jbe popf jmp sub loope mov pop popf rcr xchg add add aam cld mov loopne and repz jmp mov insl xor (bad) cld xchg lds ss mov test in lret test gs fdivrl push shll mov out xlat lock adc outsl sub jp jbe cmpsb xchg push fidivr sub mov stos lret inc mov add scas rcrl out xor mov mov jp mov sahf inc call loope and mov popa dec ret test std movsb es and insb mov daa lahf hlt dec inc aad jle fwait loop cmp pop pop and movl xor je cmp and or sbb enter jmp (bad) mov jae dec xchg mov (bad) add pop shlb fdivl stos pop mov fsubl ret push mov pushf imul call scas (bad) dec imul jns xchg movsb aaa imul and in and fwait mov inc jnp in mov jbe jge rep js insb popf mov clc pop (bad) adc fldenv or movsl mov dec arpl cmp popl cmp mov lock pop (bad) push js andl int3 or insb decl push arpl jbe movsl mov divl mov jae sti scas pop jp outsb mov bound (bad) jno push mov xchg mov xchg (bad) jbe dec sbbl add xchg sbb (bad) iret jbe bound addr16 sbb xchg stos fwait movsb stos and jl dec ret outsb push lods iret mov mov jge (bad) ret mov jbe xchg jle add (bad) or fwait xlat (bad) gs or push aam push sti pop xchg xchg mov (bad) aaa ret fidivr push test mov xor movsb lds cmp (bad) dec fidivr fmuls jnp fwait xchg pop adc xchg push and ds (bad) (bad) dec arpl ja int3 stos and rorl mov and xor (bad) out jge das mov rcl mov mov insl push int3 fild lock sub data16 mov or add mov xchg rolb xor add jo xor dec sbb mov cmp test and push lds mov pop jo xchg std mov (bad) cli imul xor add pop stos loopne mov push leave data16 addr16 scas sti fucom int3 pop jle pop icebp xchg fidivrl cmp xor jo cmp loop cli mov cmp inc fcompl xor jle outsb int3 iret call aad jp movsb cwtl inc pop xor push xor popf and jp cmp ficompl ds xchg mov xchg push mov clc outsb jne and jmp in call xor imul inc add mov mov mov jecxz fldl gs aad popf dec cmp repz mov js enter (bad) in cmp in cmp pop mov dec fild je (bad) (bad) mov jmp mov nop or (bad) jae fucomi adc cmp dec dec jg mov mov mov sbb pop add mov pop mov int imul xor call pop sbb es xchg mov (bad) jmp xor adc ret aad jp xchg fsubs ret enter jbe jge outsl dec cli dec adc mov ja arpl xor mov test push push xlat fs lret ljmp test in mov and jae cli scas xor xchg fstpl cmp shl inc mov dec xor jo ljmp out fcoms adc jne leave out ret push xchg jae inc sub out mov icebp push mov mov outsb out fistl out aas pusha push test not ss push leave int3 adc cmpsb sub jle cld movntps push dec mov add xlat jno insb pusha jmp outsl cwtl ret sub jnp cmp in mov xor add jl sbb mov mov jbe (bad) fwait mov stos clc or push jg enter faddl and lods jo icebp jp cltd iret std imul outsl and dec pop mov repz mov rorl xor outsl inc js lcall std push cld js aam mov dec dec add enter testl mov icebp imul mov xchg movsb test add pop pop mov mov ror arpl or push (bad) fidivr cmp dec dec test mov outsl jp pop cli ljmp inc pop repnz mov out call jp aad fcmovne stos (bad) das psubsb icebp mov jne pop iret test andl adc cmpsl in dec adc adcl les jb mov (bad) jo pop adc les push xor cmp jp lahf test cmpsl pop lock pop outsb arpl sbb xlat mov (bad) aam out jb mov xor std xor inc sbb lods cli jnp dec subl insl mulb cmpsb out cmpsb pop lds in sub faddl add test push adc cmp imul xor std movsb inc pop ret adc fstps out rorl lcall jne sbb mov fucomip lret cmp push into mov stc inc mov dec cmp and es (bad) dec jb inc sbb sti xchg dec pop push jp and jo and push xorb lods xchg je cs dec inc dec sub js gs inc pushl lret out mov scas adc mov dec lds imull xchg push mov rcrl repnz bound push mov icebp repnz cwtl mov es (bad) cmc xchg jmp mov lods in mov fnstsw push (bad) and daa adc out aam outsl jae jp and mov cld mov push aas scas (bad) sbb push mov enter in cmp xor inc (bad) cwtl aam js push xchg les mov inc jle mov dec mov lock jecxz scas sti stos cmp (bad) adc lahf divb mov lds inc sarl in or xchg arpl push lods in ficompl jge cmc and ljmp stc das mov or cltd mov cli aam fcmovnu push sub fdivr cmc popf mov es jmp mov popf pop mov push xor repz cmpsb daa in or mov push sbb dec call xchg xchg mov shl adc inc inc sbb cmp bound aam scas test lret pop push fs add mov fiadd dec stos fwait dec js or cltd std call outsl xor mov cmc (bad) dec test popa popa subb outsb push xor (bad) dec mov cmp xchg or es cltd test add mov pusha lock icebp sub cmpsb add out xor inc jp scas mov jge inc loope and mov push pusha arpl inc (bad) (bad) sub in aas mov test clc jbe xchg cmp cwtl dec aas pop loop inc loop pop stc jmp icebp je cmp (bad) mov in lcall pop push loopne ret jne fcmovnb bound int mov sarl leave dec mov fs cmp jmp xchg fmul imul jae js fmul (bad) (bad) cmpsb inc inc (bad) hlt inc lock jae lret push cmp xor loop and mov jbe mov sbb (bad) mov inc mov ljmp xchg repz sti dec add cld rcl mov outsb dec and add xor in push rclb arpl out sub out jp (bad) aad cwtl jnp in pushf pop jge or xchg fisttp push and rcr sarl mov inc les xchg nop push adc sub add insb pop push stos mov push cmp mov (bad) mov xor fcompl stos mov enter cmpsl add dec data16 mov fwait push adc loop inc cmp push lcall dec popa js xchg push call in mov hlt mov xchg lahf dec add stos mul sub cmp mov push (bad) cld aas xchg xor cmp pop cmpsl jo cmpl jno xchg addr16 mull repnz cltd sub insb mov mov cltd ret js je pop jg jl inc push adc xor sbb xchg jae loope pop lods lock arpl and and (bad) jbe hlt and dec nop outsb jge pop add (bad) mov (bad) xor mov adc inc pop xchg test popf mov in sahf adc fnstsw jmp or repz push insl sti jbe aam add inc push loopne aaa xchg bnd jmp jb pop push test xor mov aas mov in push int xlat lods inc es mov xor sbb pop jmp cmp sbb fstpl cli rolb andl xor (bad) inc sbb loop dec mov popf imul gs push std mov jns dec lds adcl xchg cmp fistpl add ljmp add xchg add test mov mov fistp test lret xchg cmp xchg mov movsbl lret loopne pusha pop lea lahf jbe outsl ret lahf or or and bswap pop cmp cwtl xor sbbl lcall bound das or in lods mov add xchg popf retw cmp and push pop mov adc enter (bad) test dec xchg cmp pop adc xchg arpl ret mov xchg pop jnp add lret out xchg adc fidivrl sti cs push out pushf (bad) cmpsl hlt mov xlat cmp or jne jl test cmp mov cmp imul jae mov jae xchg cli insl sbb xor push ret jnp fnop cmp dec icebp and mov lods inc push cmpsb sahf je push fiaddl pop shlb sbb push push fcom push sub cmp dec add xlat xchg jb push jns scas mov pop xchg ret out xchg sub hlt repz mov movsb pop stos insb mov sarl pop ss popa adc rcr pop or int3 mov mov adc and sub mov in push cwtl lods (bad) mov es or insl (bad) je fmuls movsl xor fsubrp dec arpl aam add int imulb dec push cmpsl incl (bad) flds les inc xchg mov mov mov mov inc xchg xor xor mov clc xchg nop and outsb sub data16 fstpl ss xor inc mov xchg cltd psrld lahf imul pop int3 mov cs movsl les dec jmp xchg pop xchg xor push xchg dec push sahf mov and jg jl stc push push sarb aaa aad loope sbb (bad) pop cmp mov adc out (bad) sub add (bad) popa mov sarl or mov jno or (bad) in xchg aad lea pop sbb jno dec mov aad mov mov cmp cmc loope stos stos push shlb jnp jecxz and inc or leave int3 cmp ret xor repnz sti in xchg xchg fcoms adc inc fwait push mov mov add push std ret ret je jno jae sahf movl cltd sahf jns and or out xor push inc xor inc movsb mov cs jo cmp dec mov stos mov push lods or stc inc lods movsb adcb (bad) mov sbb ds (bad) scas and xchg mov mov and ds fwait incl sub xlat enter test mov mov popa imul cmpsb cmp sub call mov xor jecxz dec out fsubs roll lods sub mov pusha dec (bad) pop pop xor push sarl sbb sahf and pop in ss dec lods lcall je loope popa mov push dec push lods pop or mov movsl and aam pop arpl rcll fisubl mov in stos sarl jecxz xor fistpll enter icebp adc sub repnz add rclb in mov loop xchg enter call add mov push jl mov dec insb cmp fsubrl imul punpckldq sbbb pop mov jp add push xchg jg gs bound ljmp out in les lods inc xchg aaa bound lods push jge jl or jnp mov mov xlat outsl (bad) ss (bad) push push addr16 push sbb outsb and pusha sbb pop mov loop icebp mov push in lock push push ror out mov mov add inc push push arpl inc pop xchg cwtl xchg pushf out jge pop repz jnp mov xor das xchg push mov js inc mov mov outsb jg push jmp int3 sbb xor in roll in push jne pop lret cmpl cmpsb xchg push push mov xor out and out ds popa xchg jne cmp call ret add jae xor ds js or jg pop out mov into xor jb ja jmp cli jmp jbe add (bad) jo int3 pop in jmp in imul xor mov fstl pop inc jecxz adc mov call pop incb mov push jle add arpl xor test test dec ds in into (bad) repnz rcrb loop clc into lahf popa mov add xchg pop out add out pop nop jg je pop stos xor ret or movsl jae add jnp popa mov lcall leave or mov aam jae inc cmpsb in movsb and push or loopne loope in mov in pop test cmpsl mov sbb and cltd stos in mov mov or mov add cmp fs popf hlt mov sbb mov cwtl icebp jmp imul mov daa push ret lock pop sub insb jecxz loop pushf jp push mov imul mull push sbbl (bad) cmp or inc inc xchg cmp add xchg cmp pusha adc insl mov xor mov lock push mov js dec jg push jle add lret and xor pusha add roll movsl pop sub xchg inc iret adc jge in push cmc add and pop jl in cs pop push lret adcl pop cli out rcrb adcb or rolb mov mov int3 fdivl cmp push pop jmp js in xor aad mov fdivr sbb dec cltd fild out jbe pop push (bad) xor xlat push cmp add mov sub enter out out imul sub jno push cmp jno mov cld pop jl pop xchg pushf in xor cmp in sub xchg in dec push movlps shlw sub out popf mov xor fs xor adc mov lock fs ljmp test sub inc iret jno jbe adc (bad) mov and (bad) out ret inc hlt call int3 inc stos leave cmp bound rcrb inc imul dec mov je sar call push stos (bad) insl js xchg jge xor cmp xchg test push xor comiss movsl cmpsb jnp incl and adc inc inc push outsl or insl xchg rcrb push inc xchg mov popa mov push mov xchg les jle (bad) dec aam pop mov adc into lret cs (bad) sub push xor jnp into sub dec or or and pop adc test sub inc cli push xor mov movsl int3 sub stc ret or inc push mov stos mov push outsb mov loope or fcoms pop cwtl inc ss pop sub cs push jmp arpl push jb and cmp inc jp inc mov jns repz push sti and insl popf addl ret gs inc cmc cmp (bad) xchg add adc xor dec popa inc and push pop lret aas test mov (bad) pop int (bad) and sub and adc inc or leave jnp and jb lcall and pushf xchg xlat and inc sub rol pop cmp (bad) imul cld cmp (bad) xor xchg ds lock imulb add cmp daa adcb xchg cld rolb jnp sbb mov sti daa roll push fistp mov fwait jle dec adc dec or cld adc jbe mov insl sbb cwtl clc inc xchg jl mov mov je jb test (bad) pop imul divl xor pop mov pop sahf xlat jle insb das jecxz adc xchg ret and push xor loopne mov fistp loope pop gs cmpsl or sub mov les rclb pop sahf test pop adc and iret scas inc ja adc sbb adc add xchg xchg xchg cs (bad) sub jno mov mov xchg clc rolb mov sub insb pop (bad) lret imul jmp and lea dec or or pop imul lret xor or or mov jmp int3 add dec pop push andl test fstpt lretw scas test int mov leave xor sbbl sub jae or lcall add rorl pushf fldenv icebp sbb sar push mov jge repnz std lcall push je dec jo lods push cmp mov int push xor adc dec int3 inc hlt aad push jp aad mov iret stos add adc jp test mov lock out stc jnp fnstenv stos into inc (bad) mov mov xchg inc loop data16 sub lea mov in in (bad) ss adc sub fiaddl stc ljmp inc aam and cli mov jbe push sahf cwtl sub add shrl mov fistl push xchg aad xchg das lret xor pop and dec imul sbb sub lss int3 xlat mov inc cltd out sub pop sub mov push repz mov ficompl xchg dec adc (bad) cltd mov fidivl pushf fdivl and ljmp add loope push cmp sti enter icebp mov mov lcall dec mov adc dec lcall ss xor cwtl dec (bad) or pop (bad) rorl in lock jg mov push lock adc dec shrb das std mov clc xlat insl test pop loop sbb jns cs pop or add add in push sarb repz add adc cmpsb call aas ror pop cmpsb mov xchg (bad) mulb mov jl outsl (bad) daa xor jg outsl jb loope adc in dec out fld or inc xor mov gs arpl popa inc outsb jo icebp cmp scas into out xchg or movsl pop mov fmul daa add inc or lods pop push mov out insl fsubr sbb loope outsb cli rolb jno adc loopne lock movsb test jb sub (bad) mov mov jo testl or bound mov sbb push and cmp fcompl ss jl mov repnz push push mov pop test pop lods lock and incb mov jmp xchg and negl push mov mov inc sti inc pop push nop imul sub fwait lahf jnp push lods pop and inc pop mov (bad) xor stos (bad) sbb sbb inc (bad) xlat pusha fidivr (bad) (bad) inc addb popa push pushf push lret or sub loop and pop pop xorb cli xchg jno xchg mov dec inc repnz inc es sahf fimull aas inc push mov cmp adc rcrb pop xchg xlat aaa sbb (bad) sbb lahf imul inc in (bad) pop xor inc pushf mov fwait push iret vpextrw lds sub jecxz cmpsb call sbb mov (bad) lret lret mov inc pop adc cmc es mov push mov stc test jns dec pop mov xchg imulb (bad) cmc das es or jg dec mov xor in pop ss fistpl popf push add imul push aaa mov xchg cmp cs in adc leave add adc (bad) xlat mov lea pop movd ss or ja add es jl pop int3 jo es repnz mov int int3 pushf and mov jge test loop movsl xlat int3 inc test iret repnz ficomp bnd xchg sub aad mov in fwait jo sbb dec lret inc scas hlt pop daa or (bad) aam mov out jae adc lret jb movsb sub or (bad) xor loope jns or sbb cmp sbb stc pop adc mov lds mov movsb imul int3 inc inc cmp aaa xor lret mov and xor fbstp jp and xor pop cmpsb mov dec sti nop jae mov outsb jle mov cmp adc push jno mov adc fidivl loopne shrb lods cltd cmp jmp loope push mov xchg in mov xor mov jnp inc out cmp inc adc mov sahf dec xchg mov test xchg push ja leave lods nop imul pop ss pop fildl arpl inc (bad) (bad) jmp jo ss dec xchg in cli outsb push fisubrl xor lds fbld prefetchnta cmpsb adc adc inc les add sti mov or ss stos sbb inc in ret sbb jne mov inc nop je adc xchg inc sbb (bad) hlt push pusha in outsb ret lods push call outsl push addr16 lahf mov mov lcall or cmc adc mov loop js xchg pop movsl pop or jo fidiv dec aaa ja lea mov add aaa sub js aad adc xchg (bad) push js clc add gs cmp ljmp fisubl cwtl les or cmp dec pop imul mov (bad) cli dec loope loope pop dec push dec testl ss dec adc ja jbe loopne and gs ds push hlt xor mov mov add adc leave js and jp (bad) movsb xor mov subl (bad) mov xor mov mov xor call or xor jp lock nop ljmp movsl fistpll ret dec pusha fisubr xchg jne add out loop xor sbb xor popf vpgatherdd loop test mov jg push or fisubl or movsl inc dec or sub shr xor lahf (bad) fbld dec fistpl pop or jbe sarl add xchg xor les jns dec mul inc mov int push test lcall and xor cmp hlt stos mov ret aaa loopne dec xor fdivp fbstp push outsb fisttpl sub mov jl dec js xchg dec mov aad push mov aad icebp jae jno mov jge cmc movsl mov or fcompl pop pop xor adc add daa ja sbb push dec mov bound out push jmp xchg aas pop push and pushl aam dec mov dec fmuls adc dec add rcll mov repz daa iret sbb repnz adc and fnstenv lds mov add and adc das xchg pop jo xlat loopne daa arpl adc imull test sub and inc dec rcll fisubr cmpsb add fsub jnp add cs push rcll cmp out xor rclb mov xor jecxz jae ss popf (bad) addr16 cwtl add nop mov inc stc and inc sti lret push shrb outsl and cli mov in mov add in adc out xchg push inc xor sbb sbb sub xchg and push jne inc out in mov and idivl call cld fsubrs mov fcomi fnsave int jecxz inc sbb in orl pop pop mov and cmpsb inc iret arpl sub sbb hlt jge mov or gs and shrb jb pop mov mov mov lret sub pop or das jle mov aam xchg in inc cmp push adc or cwtl or xor and jne dec es xchg les push jecxz or in lods dec pop pop popa inc call gs xchg rcrl jl xchg mov repnz (bad) mov adc not lret in in or fstl into fnstcw jne add cmp and dec stos dec mov xchg cmp cwtl cltd xor repz lds out xor testl mov inc aaa cmp std and mov jnp sub mov and mov adc inc int sbb inc xor pop dec pop jnp stos jne add sub (bad) movsl adc stc adc nop es sub lret outsl jne cmp std fs add fwait sub stc pop adc xchg repz pop xor inc test cwtl test jnp rcrl bound cmp (bad) inc addr16 popf cld lods sbb xchg lds cmp lds adc dec mov test sbb jnp mov dec movsb inc in xor mov out push xor rorl sahf imul gs je xchg fnclex and dec dec xchg fsubs pop xor jge lock out push mov stos mov dec push cmp mov stos inc adc cltd xchg mov shrl cmc popa mov (bad) (bad) cwtl sub cmp mov add inc sahf adc push mull test cmp pop aam add in jle ss (bad) jne mov out loop testb jb repnz adc test je leave ficoml dec stc jecxz adc das outsb xchg mov mov inc movsl lods out (bad) jno mov xlat adc mov inc mov push clc mov cmp cmp (bad) aam mov pop add sub je (bad) sbb lock adc cld lret or out mov pop or lods dec (bad) inc pop mov cltd (bad) iret mov or cld mov sbb jno push cltd inc in addps mov jmp dec sbb imul pushf jge insb adc movsl cmpsl sar and push rolb pushf out fiadd pop je in (bad) push das ljmp (bad) imull hlt mov mov (bad) fistpl addl mov pop pop repnz fdivs outsl lcall mov pushw xor test lahf negl cmp lods xchg pop lods mov or push ljmp and jl (bad) add sub (bad) mov int xchg lock jle loope mov les adc dec mov xor aad scas mov jbe loope add sub (bad) push sti das mov dec push jns cli sub mov mov dec inc jo popa inc and xchg cs pop push jmp jne jo fildl fdivr lds mov mov insb fimull sahf cmc mov xchg sbb les orl mov jg aaa imul test pop rorb jnp call shr sbb insl jge adc aaa lret pop dec jno sub cmpsb mov test dec sbb lods and lret xchg mov xor fbstp (bad) jo push push mov fldcw fwait clc push push cmp in sar lret insl aad test or sbb hlt add imul loop fbld fsubrs shrb mov dec cld and rcll adc (bad) aas jp and fisubrl pop pusha sub stc and inc adc cwtl jns cmp test arpl (bad) std push stc mov mov jbe jo fmul jo xor mov int dec fisttp or daa mov nop pop xchg inc cmp pop loopne movsb and dec lods add pop leave popf cmpl sub xchg leave jg insl jae add xor mov es int scas jg ds push mov push ljmp test lds adc push les imul cltd push xor and ret push sub mov sub lods fnstenv add sbb insb aad inc or pop cmpsl bound mov std pop sbb add cmpsb dec in lcall leave sub pusha movsb dec sbb jno aad (bad) push mov sbb jns cltd addr16 scas adc lcall stos clc push (bad) divb clc in clc hlt dec decl or daa insl stc pop adc adc jns mov sub push addl cltd enter inc ss pushf dec fcompl push sub hlt and sub sub and pop ret sahf mov dec mov and add es or (bad) dec push ret xorb (bad) inc movsb sbb mov push sub jl,pt xchg lahf add push jo out lret call or cmc icebp scas push stos mov sbb aas sbb pop mov sbb adc (bad) in mov sbb jecxz into lret jle jnp sub fldt push cs cmp sbb sti popf xor fcoms sbb mov mov mov sbb test inc pop mov adc lds pop aad mov out std sahf jo (bad) lods push aam fs pop sub xor mov sbb lahf out daa popf push mov fldl2e mov jecxz jl add or lahf mov popf mov cmp pusha push jbe ret lock jge jp outsl dec cmp push lret out cmp mov mull jecxz fwait xchg jle push ds in mov dec jnp repnz fldt inc push inc sbb test or cmpsb or mov hlt ror push adc sbb cli (bad) push or shll inc mov addr16 inc cmp push or jno pop mov or sub cmp ljmp ss (bad) int3 xor push scas imul aas shlb (bad) loop fld mov adc push dec data16 inc or pop rol cmp jl jns and leave subb and mov fidivrl and (bad) or sub jle (bad) lret out push movsl mov or or out push (bad) push dec inc sbb addr16 jno ficompl inc mov or js ss loope xor xor inc ja add sub pop (bad) mov jnp je pop xchg mov inc pop sbb inc call std push fld cmc sbb push rolb dec jle push dec sar aam mov and insl mov mov aaa sub fild jecxz (bad) cmp adc jecxz shll mov mov mov clc jge lret lret fwait xchg jl push andb inc add inc adc repz jno push sbb aam and inc sbb les clc inc sbb iret icebp adc insl inc pop jge outsb pop aam pop addl rcll adc adc jge and mov (bad) loop jne sahf cmc inc and leave stc cwtl cltd add mov xlat sbbb and icebp sbb mov xchg cmp outsl mov in push flds xor cmp in in ret mov daa pop xchg movsl mov push xor sub mov mov nop repz add xor in mov stc movl scas cmp cli jne in adc lahf sub out cwtl adc add test jno inc ret and and dec or push and pop dec pop sub jb or jmp mov push jecxz not mov mov cs fmull xchg pop adc hlt dec jae mov scas out cmpsb adc xchg xchg mov cmc jp lahf pop mov gs arpl sbb cmp fistp jmp adc fisubl jo mov mov in mov sbb mov sbb loop inc pop push cwtl outsl mov mov mov jle or mov inc stos jl insl adc test mov fdivrs lret int and sahf cmp and cmp test inc add mov in mov mov fcmovbe sub sbb inc push sub jg enter xchg fwait movb lea fcomp cli mov sarb es add and pop add stos out add pop je add scas aam pop mov fidiv movsl lahf jle mov inc mov inc mov (bad) cld dec call jecxz loope adc out mov sbb mov add cmpsb push daa pop fisubrl xchg repz xchg out lret jo mov (bad) ja push cmpsb dec pop out clc adc mov test call mov sbb push out adc clc push xchg nop cs pop addr16 mov jmp add ds push add pop das shrb xchg sub into xchg inc sbb sahf (bad) sbbl cmp idivl inc add leave aam push loop push pop inc enter adc cmp cmpsl jns xor xchg bound add xchg movsb mov cmp das mov das lret lock (bad) icebp int aaa stos and inc ret (bad) flds mov pop lcall mov sbb (bad) cwtl inc mov nop fistl lahf dec sub es sbb test mov sti adc mov cld push in inc mov lods add popf (bad) testb pop adc xor into popa xchg aam clc (bad) or inc xor (bad) or (bad) jnp mov push sti sti stos adc rcrb xlat lret mov sbbl sub ret jne iret roll fist sub push dec and js outsl push lret lods das inc adc mov out jbe sbb in jle adc sub data16 add mov mov int3 sub cmp sub mov mov es mov shrb es add dec cmp adc sbb loop inc aad jbe pop push rol mov mov icebp popf mov fdivrs out sar sub xchg push scas mov and adc cld mov xor rcr or addr16 pushl fsubrl scas jle inc jg (bad) jne and sub jae decl cwtl inc xchg daa ljmp push es pop fcomps mov fwait stos mov popf fcmovne mov dec push or cwtl and shlb punpcklwd aam loope mov mov mov mov stos cmp mov bound lret push dec inc enter cmp add pushf in ljmp mov pop inc push adc cmpsl subb mov mov stc sbb pop adc arpl cmp push jno faddl pop and jg cli stos pop imul aam cmc pushf sbb or divb jmp cmpl xchg out add or pop sub pop push and xchg adc adc sbb mov add int push and fscale ret push sbb ljmp pusha movsl leave mov aam mov cltd insb icebp jbe pusha cmc imul jo sbb aad sbb mov sub mov into ret xor sub cli sbb fistpl xor data16 or adc or stos xchg outsb cltd into pop rcl out push sbb mov mov xlat aam mov lret arpl ror mov ss sub mov repz and xlat adc imul imul lods sub repnz js mov or (bad) dec or aas inc push jge mov mov lods xlat lea sbb push sub dec cmp jmp fbstp (bad) fwait icebp icebp bound sub psrld nop cmc xchg sbb adc fdivl push lcall push sub xchg adc das std rcrb js ja (bad) cmp cli shlb inc mov pop push rolb fcmovnbe mov jle leave inc xchg push out xor pop mov push daa inc or lock test add push in jecxz jg (bad) ja xchg pop jle and sarl test in add adc inc cmp lahf xchg (bad) pop mov je jae (bad) mov jns mov loope pusha rcrl fs xchg stos pop push mov jbe mov mov pop ja fdivr cwtl adc cmp jmp popa jg jno mov (bad) mov mov cmp or sub jnp and pop jg std pop sti push dec xchg (bad) mov add fnop aad push test cmpsl xor adc (bad) loope cmpsb ja out outsb int daa push fisub in pop ret sarb addb cli out sub pop shrd scas es fcmovnu stos xchg fidivl (bad) rcr jnp sti push sahf popa xchg fistp jnp jle xchg sbb lret cmpsl fwait mov shrl inc int3 mov pop fwait insl leave aam cmpsl lock xchg pusha enter or push mov xor adc lds fwait imul popf je sbb and jne dec sub mov mov idivb mov and les or sahf inc aam jae lods mov mov and dec and xorl or mov cs aam or push add push inc inc ret and hlt daa fcomps divl out inc daa mov pop add sub je xorw ret adc cwtl cmp cmp cmp push js ss add mov pop fnstcw and push mov sti mov cmpsl int mov in fisub jg jb sub or movsl sahf add (bad) sub fimul sbb ret stos pusha push call mov xor pushf add xor sbb pop jae fistpl fs jp das jne enter fwait in outsb cmpsb add mov je lea xlat sub dec add pop mov xchg dec ret sbb insb xor cltd fildll mov jo cld pop pushf dec fwait jmp pop inc testl hlt repnz cmpsb mov jae inc mov or lock ds popa dec jle inc add xchg int3 xor mov mov aaa test xchg xchg (bad) nop sbb inc pop pop fmulp icebp xchg push into xlat mov je pushf inc fnsave (bad) lock fidivr push or dec xor or vdivpd out popf sub inc int sarb sub gs push aas add aam or jb aad and les mov cmp mov es es xchg jno fcmovb mov mov sahf hlt jge cmp mov inc icebp lds mov mov ljmp js loopne xor faddl mov mov sbb (bad) jbe call jle repz (bad) xchg lret sub add gs andb mov pop mov inc arpl fistpll xchg mov and out pop jae inc xor mov pop outsl mov mov (bad) and cld fsts roll mov imull enter push mov or aas dec js mov sar mov addl out push mov out mov jne pop or mov or xor ret fldenv into lret add mov sbb imul (bad) lret xchg xchg xor cmp cmpsl lcall inc rorl cmp push pop ljmp adcl repz (bad) lds pop or mov xorl (bad) sub test lods sti std pop testl sbb add test ret cmp ljmp inc je dec sbb cmp dec jae (bad) clc sub insl out push in push lds lret cmp or mov movsb mov mov pop mov adc push rcrl movsl push rorl jne ss push mov mov adc in cmp (bad) les xchg cs inc loope into jbe insb jl imul xchg lret add testl and sub push and or test int jmp out cmp mov sbb and adc test xor insb mov in pushf pop mov ds mov inc push je mov sub enter repz mov xor es xchg jmp pop or dec rcr jnp xchg inc xchg inc data16 test repz push sub jmp pop jg mov or in dec xchg xchg sub jne loope mov ret mov dec idiv and test add (bad) stos ja,pn jb (bad) mov mov pop or pusha sbb pop ret xchg xchg fwait or pop cmpsl mov cmpsb pop hlt cli les aad xor dec ret hlt dec jge,pt mov addr16 ds pop insb (bad) inc mov pop (bad) lods dec lea xchg mov stos into adc add enter cwtl or cltd and add aaa cwtl es rolb les (bad) xchg add add pop sub adcl and and and mov push pop cmc jp test jno pop (bad) fnstcw in test cwtl repz mov push mov mov add mov mov mov push outsb imul jb mov and and mov lcall jecxz and in repz push shll add scas loope mov mov push pop lods adc mov fcmovu adc pop cmpl jg cltd aas cltd outsb cmp es test inc fcoml jns add imul pop xchg adc inc outsb mov stc cs lods ljmp and cmp (bad) arpl sub push jnp addl jb inc adc mov fildl jnp lret sub jne mov push ffree push jl sbb cmpsl sub loop fcmovu and dec lods int3 jnp sbb adc push push sub decb lret xchg outsl fs xchg insl shrb inc mov fidivrl pop shr inc dec push or ficompl bound push sbb call xchg fs mov or adc in xor movsb inc mov icebp mov scas ss clc push ret sbb clc fdivr inc pop dec mov xchg stc mov sbb fnstsw sub es push test mov push push scas fldl outsb movsb popa insl imul dec dec add inc dec lock and js data16 adc scas mov dec addr16 lds and je lods jg xchg jmp jmp or iret imul xchg inc push add or pop inc inc jbe inc iret sbbb loopne push notb pop xchg fnsave data16 nop mov xor sbb lret xchg and xlat cwtl jmp xchg lods adc aas adc rolb in fisttpl scas inc pop push adc mov stc mov scas inc bound pop cli sub or je scas flds jg or xchg add fmull add jno movsb jle sti jns xchg call das push bound jae push push mov std dec loopne and jle popa push fwait sbb les aaa mov xchg dec push fist mov sbb mov insl add cmp data16 fsts loopnew ss daa and dec add (bad) jne or ss push sub cmp rol iret rol enter push lret sbb mov push pop lret pop cmpl sarl in cmpl xchg and push or push imul cmp insl inc push mov in les inc add inc add pop in jmp push std mov push inc addr16 mov dec test jne scas (bad) idivl and add push adc or jne,pn ljmp xchg aam fsubrs inc aaa pop rcrb pop push jns popa mov je lcall or jae bound sub and lahf outsl leave movsb inc push pop outsb ljmp sbb cmp cmc sbb insb push sub ret mov gs fisubrl sbb push add insb jg adc in adc imul dec cmp xchg lahf dec adcl xlat adc push rcl jne dec dec push (bad) mov mov cmp stos les (bad) rol arpl jge in sbb mov pop gs adc mov lods mov add fcomip mov ret imul call fstpt push sbb ss inc adc jno mov jno inc loopne imul jno (bad) push fwait out pop push hlt cmp cmp das test mov push mov sahf out mov leave sub test inc dec pop movsl lret dec cmp push loopne negl mov out add or insb in fsubrl lds mov and and (bad) aad mov fistp call cmp shrb jp xchg adc xor sub inc (bad) (bad) hlt push out and faddl sar rcrb lcall lcall fnstsw nop cli xor orl dec pop dec sub sub pop mov add add sbb adc and xorb call jp add push shl inc dec icebp pop lret pop cmp stos inc rorb mov xor xchg negb imul arpl jg inc pop pushf pop cmpsl stos pop mov loop push mov int3 jecxz loopne dec dec cltd push mov push jge daa fwait add mov nop and mov fisubr pop cmp inc pop cld xchg std dec lahf fbld cld mov or adc cs out mov pop jle lods call loope aaa int mov mov test aam aas (bad) pop cmpsb into icebp sub push vpermt2w dec xor idivb ljmp cs or sub jle push xchg les test mov mov fsubr mov push aas test mov jno xor push cmpsl gs test mov in xor xchg cmp scas xchg arpl sbb in jl aad mov stc jg sar xchg push lds (bad) in cs out (bad) mov push les or jb sbb stos fcmovnb sbb pop xchg xor stos fdiv push or cmp dec out pop lods cltd rclb flds cmp enter pop je add mov ret ds jmp inc in sbb aam frstor xor imul sti pop jae cmpsl repnz inc lcall lret (bad) and out jp cmp aad push test outsl orb enter adc imul icebp or jmp lret imul jg popf sbb bound and dec adc pusha sarl cli dec pop mov cmc fisubl es or mov test adc xor or ret push cmp sar stos pop scas xchg pop dec cmpsl aad sti negl or mov sub out cwtl cld test push out (bad) push outsl mov xlat insl mov notl sbb add test in sysexit adc cwtl gs jns pushl sub cmp mov and imul xor push mov jb in lcall add adc xchg mov ret lcall cltd push adc xor insl push xor push mov sbb pop dec mov lret icebp push out sub xor sti add aad mov xchg cmpsl or adc or ljmp lea and lcall add mov imul or scas pushf push jecxz dec iret jae pop sar mov jg xor xlat jo sbb and loopne dec cmp push sahf lods adc sbb test les mov jb hlt lods cmpsl icebp xor sti bound mov pop iret xor xchg (bad) movswl call es fmul fdivs or and (bad) pop bound mov fs in fnstsw push cmp jne es jo mov out cmp and daa (bad) popa das pop push mov mov dec pop sbbl xlat xchg push jns das jecxz dec (bad) lock xchg outsl mov adc sub lahf (bad) xchg ret int into in aad mov test adc imul xor scas push jnp lds sub je add test dec aaa cs arpl dec out fstp nop jns outsb lea pushf cwtl or mov xor hlt cld cli sbb cmp ret add icebp addr16 ja mov arpl sbb shr mov ljmp pop dec cld (bad) ljmp mov out dec outsb (bad) fwait or ljmp insl mov (bad) adc jle adc xor mov fwait sbb outsb mov sub in and jge in nop xchg sbb int jb lods cld pusha adc xor (bad) data16 sahf insb cmp fmull sub push mov xchg lea adc xchg mov ja repnz hlt scas mov in sbb leave sbb cmc mov xor daa ret cmp push inc fdivl loop mov mov mov mov jle dec pushf dec push adcl cltd sbb adc cld sti enter (bad) mov pop or test xchg insl frstor out xchg pop xor loopne dec mulb inc push rolb jbe pop enter in cmpsb outsl mov (bad) or or fidiv fcmovnbe inc jnp pcmpeqw (bad) pop jmp ds daa sub or cld dec adc ss dec mov xor faddl lea out mov lods xchg cli sti fsubr inc mov adc lea jmp int call mov push cmc xor lahf add pushf mov jno outsb mov bound jns xor inc sub add lahf into pop mov mov int xor push int3 daa out sbb aam pop mov jb or cmp inc cmpsl cmp (bad) lahf inc int mov movsl xorb jmp xor out cmp mov sbb pop lahf adc sub or cltd dec inc sbb adc dec scas cltd adc xchg call cmp mov sahf cwtl rolb push xor xlat jg aad and xor jo cmp mov add xor mov notl sbb in dec fisubr xor add loope dec dec cmp pop sbb sbb sbb fidivrl pop xor sub cmp inc xchg mov mov scas pop inc mov pop sub sub shrb popa rcrl sti jne inc mov pop lcall lcall aam lahf mov cmp mov hlt and jbe lods popa imul cwtl push push cmpsb in mov repz sub mov pushf mov shrl xor cmc mov lds fsubrl shr mov push inc jne aam loopne xchg fistpll mov sbb aam in mov push adc push cli (bad) and mov jae sbb adc (bad) mov mov pop int3 push shrb xchg mov xor (bad) stos imul decb mov je mov (bad) sub xchg dec cmp into lret adc fwait lret int lea loopne cwtl lods shl mov mov xchg xorb push subl pop push cwtl mov stc mov fwait sbb mov test lds pusha jmp push jbe push push sbb js mov add xchg mov test sbb (bad) int3 mov dec dec inc (bad) dec jnp test es sbb shrb lcall clc mov adc mov dec lods push pop jb push add cld cmp inc pop mov nop sub mov mov scas add cwtl dec imul daa (bad) lods xchg or mov push popa (bad) out movsb mov ss or mov push jge pop jnp dec mov jbe (bad) mov xchg (bad) mov mov sub mov xchg dec cmp jg dec pop shlb imulb or push nop xor or xchg push outsb lcall pop insl sbb xchg jle jnp xor int jnp std das mov pop subl and pop cld lret shrb adc xchg outsb cmp popa dec push xchg and xchg in inc jne (bad) push cmpsl inc dec cmp cld (bad) pop test inc and (bad) dec inc std add (bad) pusha (bad) rcll call movsb xor lds repz test pusha aas mov mov rcrl stos mov add mov and push (bad) int mov pop subb aaa mov rcll pop leave aam xor or popf adc mov lea ljmp xchg mov pop cmp push jns (bad) jno aad ret jge lock pop data16 jae icebp lods scas clc mov jns sbb inc imul xor sbb js mov cmp loope dec lea sbb mov inc adc stc push in scas (bad) cli xor inc int mov aam jp lret sahf lock jl push or mov fnstsw dec adc clc movsb lret daa scas hlt or and dec add cli pop addr16 xor or sbb loope shr mov jbe sbb out push js pop push mov (bad) lea mov push push popa das arpl adc xchg mov out xor or sub popa out and (bad) mov fiadd pop out sub clc or pop dec inc pop push push jb xlat inc (bad) lds adc mov lods ljmp inc sub daa mov out jno sahf mov push icebp and gs or mov test es sub lea fmuls dec ss xchg add jg (bad) rolb inc dec (bad) rcll movsl add hlt xor fwait popa push test ret les repnz int3 jecxz dec mov cmp dec leave xchg arpl mov sub sti test jmp (bad) aas mov pop fstl sbb enter mov jnp mov mov sub ss pop or lret adc outsl fcomps dec lock mov stc xlat push std int3 cmpl repz (bad) mov fimull jle sbbl cmc movsb test and sub sub inc out aad ret ja bound fsubr mov ror inc popl mov pop cmpsl dec adc adc ret jg inc (bad) adc ja dec ljmp cmc fcmovnb out xchg xlat xor jb mov mul cmpsb rcrb push inc push stos jp push popa fnstsw jmp lock pop lcall xchg lret xor scas cmp and stc in imul mov test sti repz sbb or jo ret mov ficom add std mov adc mov jb js lods inc sarb xchg test mov push sub mov sub les out jno js mov dec pop cmp add mov (bad) xchg mov cld sub adc (bad) std (bad) cmp popa fstpt inc xchg xor test push cli or adc push nop loope aam ficomp stos lahf in fldt mov xor into mov sub xlat mov jbe or das inc insl insb cmp add pop aas cmpsl pop roll (bad) jmp call mov inc or cld iret hlt sub inc sahf and pop mov (bad) imul inc into cmp sbb lret test test xchg push cwtl inc push cmp mov mov je int cmpl pop jbe push jbe add addr16 loope xchg or mov js cmp sahf and cs fwait insb mov insb insb sbb in loope loope cmp dec iret mov cmpsb faddp jno lret cmpsb inc mov cli add daa cmpsb or and pop cmp stos rclb jge or enter (bad) cwtl mov out and icebp ljmp push test lret cld sub in xchg cmp int xchg lods lock call add inc in or (bad) loop xor pop mov scas sub cmpl push out and stc mov inc xor sti flds cmpl lret mov and fidivrl inc fsubrs xor add push push fadd sbbl repnz insb mov cmpsl mov daa cs cltd sub repz and adc imul push push xchg mov and mov int mov and rolb mov jbe cmp repz icebp loopne ret fdivp push fild push test out jle sub pop pusha loopne xchg mov dec aad add xchg outsb mov dec rol dec std into push xchg xlat (bad) into mov mov add stos push insb out cmp ja ss sub imul js (bad) mov or add insb ret mov adc jg add jno mov and mov imul jo dec (bad) cld out outsl out popf and sti mov clc int3 test and loopne xor pop test and pop cwtl fdivp (bad) rorb fcomi mov jne sahf dec cmp sub cld mov aad inc mov fisub lds mov mov cmp add or or adc cmp shlb lods mov pop (bad) setg jle lahf lret sub mov mov cmp insb sbb or out popf in jmp mov stos xor jnp jo in loopne mov negl push lock int cmpsb adc xchg sbb (bad) push jecxz mov mov mov (bad) sub ss nop (bad) scas inc xor sbb xor ds aam adc add push les mov fwait mov lock std cmp scas in pop call cmp (bad) out pop test cs pop pop cmp mov fmull jmp sarl pop mov sbb test jg xchg inc in jne push jno in jbe (bad) minps stos (bad) hlt jge and jnp mov xchg inc nop jecxz xor xchg ja push fwait outsl mov aam xor adc aad inc push dec mov xor subb sub xor insb mov cmp pop dec jb inc inc sarb sbb (bad) daa ds or int das xor sbb inc jge pop pushf jmp out ret sbb jbe sub mov cwtl inc cs divl jmp xchg dec push push imul adc outsl hlt loop dec movsl adc repz adc mov pop testb mov jb sub push mov cli cmp out pusha dec insl sbbb adc inc out dec jle inc xchg in loop int3 push daa (bad) cmpsl cmp adc les pop mov jmp (bad) aam xor mov xchg inc (bad) jo mov mov lods push add cs arpl insb fsts loop pop ret insl pop enter jo mov fisubrl pop sub mov mov (bad) push gs lods mov nop repnz shll inc (bad) insb xor mov sbb ret ljmp cmp push loopne push cli test xchg insb popa cli pop jbe jnp sub mov test fisubrl fdivl add add pop inc imul jae int mov inc test mov and add jl pop cli test (bad) cli cmp fsubs xchg aad daa loop mov je adc fild decl ficom lods cmp dec outsb lret mov pop sbb xchg sub sbb mov lods jecxz cmp fistp or lods (bad) cmp cltd jbe cmp adc shlb jbe mov mov push lahf inc and movsb mov cmp xchg bound rorl stos sahf in pop imulw push mov xor into jns sub mov dec or add clc xchg test test test lds lds jo sbb mov addb adc je jae shrw jae ss out add aad or mov ja mov sub ret add inc out arpl and push sbb (bad) cmpsl addr16 pop test or andl jge sub scas dec pop insl std or mov sub pop pusha jnp in fcoml push jo push outsb sub add inc in sarl mov jne and adc and in int test js jle adcl (bad) test push cmpsb push add popf or jae in dec fwait test push sahf adc in xlat data16 xchg not int rorl dec cmpsb imul repnz add push scas push cmp sub das cmp repz call jge xchg and stc jg xor pop js ja add jne lret das cltd jle test dec cs xor outsl mov fnsave notb mov (bad) mov adc iret mov xorl push scas jo or mov jno dec cmpsb add pop and ja cltd sub cmp add inc adc enter pop dec or mov adc mov mov mov or faddl addr16 jo aaa into xchg out push nop jb dec pop mov xchg ret popa mov test adcb stos add negb cmc movsl jmp lock pop cmpsl xor push mov in pusha repnz sbb (bad) jg pushf sbb (bad) dec iret push jg mov xchg leave insl test fmulp int3 xchg inc ja aam les sub push push ret mov xchg fmuls xchg ljmp out mov jmp sub lret imul pushf out insl sub push je das adc dec jo cmp xor insb pop lods push cli arpl adc xchg xor lea daa mov in gs adcl mul mov fs stc test inc in mov fwait rcr lahf and mov fdivrl icebp aaa dec jl (bad) sbb mov loopne mov (bad) or sbb mov mov cmp sub ja out push jmp adcl sub jmp fcoml pop lods lahf or dec xchg mov leave aaa or push xchg cltd negb sub scas pop cmp mov mov arpl sbb mov mov int loop pop add cmc jno xor add sub dec popa inc cmc testb adc or bound rcl mov xor pop aas lds imul test mov repnz cltd incb xlat sbb sub test lock sub xchg pushf or out divl jg test pop sbb inc dec xor cmc ds scas xchg lods mov loope mov xchg fnstsw sahf inc ja std das lea sub loopne insb mov jnp loope fcmovnbe sub jno push imul cwtl ret mov xchg imul in mov mov clc je aad pushf insb insb inc out mov fild jecxz (bad) stos gs mov mov and push and pop les scas fchs popa aam loopne and jne repz cmp stos mov pop je aam ds mov repnz mov les sub shrl xor cmp test aaa push popa cmpsl arpl jbe dec enter adc or cmp ret push imul fsubl sbb jo xchg dec mov sub negb mov push mov pop jb or pop jae scas fucomp mov xchg das movsl fstl jl jmp sarb dec add pop mov lahf jle or xchg loope pop imul and lret add scas sbb ja mov xor ss xor int3 mov les mov das cmp push xor jle push lock adc scas les xchg dec sahf lods xchg or xchg cmp jae jb xchg xchg fs sti (bad) xor in push push pop (bad) repz pusha pop gs gs rolb fdivs push xor pop and insl test pop jecxz or xor xchg mov fdivs gs and pop movsb push (bad) pushf in pop lods cmp js xor push jo jbe enter (bad) aam cmc inc (bad) jae ja push (bad) mov popa test hlt xchg test jae mov inc add push and aad sub test and lods mov fidiv stos push popf sahf cmp out orb repnz inc sub out lcall ja js jl hlt cld popa inc and cmp mov sub push popw pop adc (bad) sub adc cmpl out cmp (bad) cmp jecxz add push cmp mov inc lea fsub pop and imull movntq push cmp ret sbb insb loopne xor test std inc mov psubb sub (bad) jae xor lds sbb jae out enter xor sbb pop aad lahf xchg popa cli pop lcall rorl mov sub ja pop adc adc clc mov imul movsb popf out lret xor cmpl add sbb pop out aad mov popf adc sbb or pxor mov fimul mov cmc xchg pushf cmp add sbb sti ror push dec mov and into lcall push add pop mov and mov jl add movsl mov test bound (bad) cli (bad) pop icebp mov inc in dec out inc add push (bad) inc push inc jns (bad) je jg adcb les jmp iret call rol sub out xor and pop adc (bad) push inc int3 push enter or or cmp addr16 push push call mov loopne loopne xchg (bad) aaa jne (bad) roll push nop cmpsb inc incb rcrb aam mov push ja sbb scas ror scas sbb jg push stos adc mov jb shll js aaa into push (bad) (bad) xchg ds loop add into cwtl jno jmp daa mov inc cwtl nop mov (bad) xor faddp aaa mov push (bad) out (bad) int3 xchg sbb cmc mull daa addl pop mov xor mov mov adc push sbb add add adc push mov dec mov cltd xchg or jb sbb push lods sarb pop jmp sub into bound cmp cmp imul sub fiadd rcrb lods push jbe enter int3 pop fsts jecxz fistl scas test sub mov cmp into adc mov fldl mov lock daa push xor or test push xor mov out (bad) fldt fld xchg and call cmpsb pushf push lock scas xchg cltd fisub inc inc repnz sbb xlat popa pushf sub faddl dec outsb dec jl (bad) movsb rcll cmp mov push aad xor xchg and sub push cs ljmp sub addb add scas mov ljmp sbb cmpsl outsb mov ficoml add inc stos ja pop pop scas das pop sub push ljmp pop cmpsb sarl or fld scas jo and mov lock mov push dec sub mov into andb fmul inc jp popa rorl inc (bad) dec add pop and setl (bad) sbb push xchg add cli adc test jmp mov sbb mov mov bnd push rcrl inc cltd lods in out push cmpsl aam pop push mov stos pop sub add std lods jle pop mov inc mov mov mov test mov mov lcall test sbb scas bnd xchg mov loope sahf dec xchg xchg or sbb xchg out cld mov es (bad) fstpt test dec mov pushf cmp sti inc push daa dec mov jns xchg mov pop adc dec inc add sub and rorb arpl ret lods mov mov std cmp je inc sti mov or inc jl xchg mov insb pushf or mov icebp repnz mov xchg xchg stos repnz stc test inc pop out xor ds test add mov cltd pop bnd and es push gs pop mulb js dec fsubs shlb arpl inc (bad) push fdivrs push pop imul loopne movsl cmp mov adc sbb pop movsb xchg add add jmp jecxz test push lahf adc cltd mov mov mov ror test lds push or adc dec lds out adc xchg dec movsl jg jp das and int3 jnp cld mov outsb and data16 lds xchg jle cmp xor dec fildll sti push bound mov sarl (bad) dec jbe bound xchg xchg data16 sbb outsl call test (bad) sub (bad) fbstp clc or pusha jle or mov push add lret dec clc in ds cmp pop push inc mov dec mov xchg call mov pop mov adc mov adc jno xchg pop mov rcrl movsl xlat pop mov push mov test or fcoml out jne mov mov gs call (bad) push iret mov and adc mov jne lret test mov das dec repnz ja mov das lods jmp lret stc adc cmpsb cmp sbb inc ds cld in xchg sub out popa xor pushf jnp dec inc scas push mov jl cmp mov cs clc mov (bad) fisubrl loopne mov fildll inc add dec inc cltd jmp fldcw adc xchg inc loopne push jge testb cltd push test sub mov das cmp and sbb xor std jnp adc outsb push sbb pop sti lcall xchg xor pop fnstsw scas into lahf mov mov jg xor pop fxam or test mov adc mov repnz mov stos sub mov mov push add inc arpl or inc inc or mov cmp mov out rcll push push sub loope dec pusha jge pop cs add mov mov adc movsl movsb pop in fidiv lcall jno push sti int3 insl fisttp xchg adcl lock clc cmpsl test (bad) mov test cmp icebp jecxz ds xchg mov sbb xorl inc mov sbb and jnp clc mov and dec pop hlt (bad) cmpsl shlb ret mov test push out sub int3 xchg jg mov push and cmp int3 mov sub int3 xchg sub movsl daa test mov scas test orl jmp xchg xchg movsl push push (bad) mov xchg sub inc (bad) jno inc movsb into in or mov iret pop inc xor and ret sbb fisttp xchg dec jne and call inc sti pop stos (bad) xchg and leave pusha fildl pusha (bad) ficoml dec out sub lods inc int aad in outsl adc das mov push dec mov push xchg xchg add cmp mov imul (bad) or dec je nop test enter out pushf push subb in xchg pop sbb ret es dec inc dec or xchg daa aam clc pop adc mov xorl jb sbb dec inc (bad) gs cmp repz sarl cs adc add (bad) lods add xchg movsl sti and jmp sub push mov sbb inc seto insl into add inc scas xor mov movsl sub shrb in adcl ja inc xor fwait adc aad xchg sub pop gs ds fldenv push xor fmuls xchg and pop (bad) mov in out sub loopne pop push jns adc inc mov shrb jbe mov (bad) dec ss jle and pop daa outsl cld roll or or fidivl (bad) sbbl jl adc fsub (bad) (bad) mov leave std ror sub sbb mov mov push push (bad) movsb out jmp enter xor jno pop and divb ror negb mov add in jl or fsubrl and ret sub push shll or es lcall mov rcr not lea or xlat sub or mov mov scas push rcl jmp (bad) dec js gs xchg cli mov int mov pop in movsb and mov mov mov aaa xchg scas lahf movsl or adc lret or push pop pushf lahf mov mov divl xchg mov jne jno inc mov sar push cmc cwtl lahf (bad) jle out inc jmp fmuls call (bad) jg iret nop test js add lret xor dec fldenv jle popf cld pop movsl xchg in mov sti xchg lds jmp cmovle (bad) cmpsb cwtl loopne arpl sbb jbe mov sub gs cmp iret insl adc shrl mov popf outsb push xchg xor stos push adc mov mov adc mov (bad) mov std test adc aad clc push test jg lahf pop and or out inc mov fcmovbe aam push mov lock loope (bad) dec sbb push sub xchg inc leave pop js aaa sub push push mov cmp jne andb data16 jle push add add daa add repnz sub xor cmp jecxz repnz inc sub push mov inc lds push push adc xchg cmc sub push mov daa hlt push push inc push sub dec fidiv (bad) mov sbb aam sub ret pop mov (bad) xchg jbe test ficoml dec xchg mov (bad) jb fimul lret cs cmp cmpsl movsb fisubrl pop fs cmp js mov int3 add fwait and shll cmpsl add js shll xchg cwtl xor push les mov adc in mov push jne adc pop push js jecxz cmp xor inc push clc imull roll mov or mov xchg out cmp push (bad) dec push cmp test subl pop notb sub (bad) add adc xchg jns pop std pushf je fnstcw fwait sub and mov cmp sbb mov xor and push dec sbb nop (bad) and arpl cmp subb stos sub inc jbe ja push lcall sub jmp or rol call xor je shll mov push sbb ja mov les aas inc (bad) in and out sahf movsb push sub movsl xchg mull mov push pushf adc ja dec and sub cwtl pusha jnp imul mov xchg push sub scas cli push out dec sub movsl xchg sbb jle cmp mov data16 jecxz imul lcall stos (bad) xor jmp popl insl inc pop mov sbb push xchg insl xor jg cmpsl or dec xchg (bad) mov mov mov sub add imul leave adcb cmp addr16 push sbb pusha pop mov push xlat (bad) pop push (bad) mov push mov pop imul pop cmp lcall xor xor out push jns pop outsb mov loopne jno sub pop and pop mov sub sbb cmp xchg mov push mov (bad) mov xlat pop arpl inc mov ret ret je test jo repz (bad) mov out or mov push push stos and (bad) icebp sub push fdivrp mov out mov (bad) and inc mov jb push xchg jbe enter rol mov mov cs pop insb mov mov das sbb lea adc (bad) lods dec orb mov and les inc lahf movsb dec sub adc clc mov pop test fnsave mov cli xchg inc mov aam (bad) lcall test jno add (bad) and cmc mov mov hlt sahf or clc gs mov add fcmovbe sahf pop mov cmp ret mov sub dec (bad) (bad) or int3 popf jg cmp push int3 (bad) imul lret jne xor sub les gs cmp cmp or inc (bad) in and push ret in jp cmp mov pop cmp mov xchg test cli mov in sbb in frstor aam popl xchg addl add sbb es cmp pusha mov das xchg out sarl push mov pop out int3 jp mov adc cs in gs in mov cmp mov jp unpcklps inc test fcmovnu loop jae (bad) popw jbe sub enter sub cmp (bad) jno cli jp cmp mov (bad) ss (bad) dec rclb and xchg (bad) fistl mov pop add mov add mov outsb push int outsl sub ret ljmp inc test push mov iret jne mov sti add lret js out jmp stos ss inc sti (bad) push ja pop mov fldenv inc add popl mov jle dec (bad) xchg xchg clc inc rcrb jae add roll xchg mov (bad) ljmp sbb scas enter (bad) jo clc out arpl jl sahf nop icebp and ret sub hlt add dec pop ljmp in sub jecxz and fsubs scas and iret ficom dec in mov mov adc daa into cmc out xchg mov pusha dec xor mov xchg fucomi imul movb xor push pop shrb pop outsb in in lret or (bad) insb sbb cwtl inc mov bound xorl aaa mov push pushf lahf adc cmp fmuls leave je scas loope sti jp fwait add inc out mov inc xlat and or mov gs jmp and sbbl mov scas xchg (bad) dec out sbbl mov lods and push ljmp sbb aaa xchg mov in ja jb sbb adc ljmp test mov sbb push insw lcall mov lret sbb ds arpl pop popa adc inc (bad) pop or call jmp incb xor fsubr pop or cmpsl (bad) mov in (bad) mov pop insl xor pop fwait out out push insb rorb inc dec scas test (bad) sbb mov pop sub lods icebp nop xchg cltd adc repnz sbb in mov notl std xor mov fistp loope out adc mov and adc mov out hlt jg cmp outsb sarb push push (bad) push adcl xchg mov add jns xorl fidivrl add fsts jns aam dec and movsb imul push pop mov (bad) and push inc out mov repnz mov mov lret and cmc dec dec xlat pushf not cmc inc loopne loope js adc insb push decb arpl and mov inc scas sbb lods mov roll ja jo clc dec jg mov shrb in xchg fwait push push jl dec cwtl push sbb pop cmp sub aaa dec lahf add adc imull push xchg xchg add popf mov and out adc fwait idivb icebp clc sbb out lods push es mov cmp in sbb push popa pusha movsb xchg test subb and imul or test movsl adc adc outsl xorb mov repnz imul jl dec mov scas push les xlat mov jae push iret pop pop loop movsl and std push out mov mull adc and jae dec outsl stos test sbb dec lahf ret sub into call roll adc mov outsb pushf mov fmull cmp mov push jle movsb xor ret pusha sbb stos inc loopne mov lret mov stc push lods fs arpl jl push push xchg imul jle adc push clc rcll push (bad) mov sub adc add xor arpl in lret aad xchg xor rolb jp cmp sbbl cltd mov cmp test jmp xor lods jl bound nop ss cmp push daa and mov rclb daa divl ret xchg push loopne inc stos je icebp mov push mov sbb (bad) and lahf addr16 mov push hlt stos inc aad popf loop cwtl aas cltd incb jne xchg xor push movsb lahf push mov fs pop mov jo or fucomi pop fldenv dec outsb mov push sahf cs jns mov fisubl jge jb and iret pop and jno loop mov ja aam aaa lds xchg leave add int gs (bad) mov cmp inc rcrb or push mov sub dec xchg out pop stos test add xchg sub add xchg les mov les or fnstcw fildll pop jns and xchg or push arpl loope adc mov cmp outsl push xor or imul cmp jbe imul jl xchg into mov inc mov push aam and out ficom inc mov and repnz shrb divl out jno adc inc (bad) xchg test sub jg ljmp sahf mov cmc nop jae mov into pop inc std jae and dec jmp xchg mov lds adc ret lea xchg adc into fwait loope cmp sbb xchg adc inc pushf je sbb daa lret cs mov stc mov sbb xor adc es shrb inc inc mov add pop jl (bad) jno add lock sar cmp jmp out push repz ja pushf mov outsb or mov adc sub enter and pop fstpt stc or out adcl lds or std aad adc cmp adc mov js and push sub and icebp push loop adc jmp addl loopne aad es loopne ds xchg mov test mov aad xchg outsb sti push in sub shrb or movsl push mov jecxz adc call sub nop jno pop push push rorb sbb jp mov andl push mov outsb xchg (bad) inc (bad) aas push mov cmp jle inc popa out loop (bad) jae and sub shll or xchg adc mov inc pop mov mov mov or dec jmp sub mov jns or pop dec pop jb clc test leave mov rorb xorl lcall out sahf add cmp sbb stos ljmp stc mov call test cmp dec js sbb lea hlt xor xor pxor fwait or ds out loopne mov ror sub add and cmpl mov mov mov mov push cli aam lret or mov lods inc pop pop mov dec divb mov outsl lock (bad) out mov cs (bad) pop test mov inc push outsb mov mov cmp fisubr mov mov outsb popa (bad) loop fcoms xchg popa xchg ret pop mulb pusha movsb pop lock out xor jle cs xchg ret lcall hlt aad or and in or mov adc mov pop sbb lods shlb stc xor test inc andl and mov inc (bad) pushf adc repnz pop lcall (bad) dec mov mov inc adc cmpl fdivrl sub xchg jecxz repnz roll push leave idivl sbb mov pop mov cmpsl iret lret add jb adc jb or push pushf cwtl leave clc repnz add stos scas out (bad) and inc inc adc or fiaddl fwait shrb cmp imul mov out imul mov jecxz int3 jns incb movsb mov mov push pop cltd inc or (bad) cli fistl aaa cli pop add sbb adc xchg out push out sub (bad) fnop pop in sarl mov cs inc lcall push lods fucomip aam add dec mov scas enter fldl adc in daa mov pop arpl test aad adc mov add or fdivr jno js fisttpll sbb popf mov xor pop idiv push sbb inc fidivl aaa mov (bad) adc or xchg adc rclb imul jnp mov sub arpl cmpb pushf lret sbb cli in push daa push or and mov mov xor ljmp xchg pop rorl add pushf mov cmp pop inc inc js and jmp je push pop pushf xchg (bad) mov stos fist xor inc adc mov scas xorb imul ds std push mov sbb mov push jne sahf lea add icebp rcrl xor push cld mov aad insl out jle cmp stc test xchg dec in lret loop js push cld add fdiv jbe mov add hlt (bad) mov inc dec mov movsl outsl mov pop add xchg adc std std in jo mov test repz jae jns movsl and dec push mov ds or (bad) mov dec add push adc iret cmpsb mov and mov insl inc add adc movsl lods mov lock add icebp js sbb xor xchg adc pushf gs lcall sub adc orb stos lods and mov test dec das movsb fcmovnbe sbb scas sbb mov mov push xchg ret leave movups fdivl mov sub xlat aaa sub les dec movsb mov out scas imull test and push mov push daa dec ror arpl in mov ret pop sti outsb xchg out xchg jae icebp pop je push cs je ret ja popf adc mov (bad) (bad) cmp (bad) sub dec (bad) dec push push mov xor inc jmp enter jg mov stos dec push (bad) mov int stos fwait xor sub xchg adc and xchg pusha dec int3 or jmp jb cmp dec sub loope pop out cli ljmp (bad) xor dec sbb xchg ret les and stos rorb push loopne je neg out pop sub imul xor cmp les jae xor loope push lods push lahf pushf jge adc outsb push jecxz adc sbb mov in pop stos adc inc jl mov jmp sub gs dec sbb in sbb out pop and adc inc or loope mov sbb jae lcall mov jnp dec cmp popa inc xchg arpl outsl mov add iret fbld cld (bad) fcmovnu dec es dec sub adc mov mov or std dec adc jp add std mov test jp fcmovb mov and out sbb mov sbb mov xor cli in (bad) push pop lods stos das cmp sahf insl jg and and insb push sub mov jnp jno cltd mov dec inc mov (bad) ja xchg or mov insb (bad) jbe in in inc add int3 call in cmp mov cmp into imulb sbb mov icebp shr js ftst sbb dec lahf das in xchg adc push lds pop mov pop out mov jl add mov xchg xchg add dec adc jl xor dec int dec aaa and sub xchg dec mov idivl subl adc (bad) push mov insb repz push mov lock inc dec mov add cmc fst jge fistp js push imull cmpsb cmc cmp pop and or add sbb inc inc sub or lock vmovmskps push xor inc dec xchg adc fnstenv dec xor fstl inc add into mov sbb insb xchg pop add data16 (bad) es jns jno jmp std icebp mov inc xchg psadbw dec mov (bad) stc and movsb das pop repnz sub or daa adc add and cmp cltd roll fidivrl cmc sarb inc dec pop fwait push lods ss nop cmp mov mov dec mov add insb sbb xchg sub rcr rorb int jno push idiv sbb lods nop inc pop dec jbe sbb jmp and pop in loop jl mov sub cld xchg adc mov mov loop pop inc pop mov nop push pusha sbbl js lcall int3 pop cltd test negb mov jmp dec mov pop (bad) dec mov repnz xchg push loop lods pop mov (bad) xor lock shl repz inc xor cwtl xchg aam sub push shll mov xchg mov mov jmp bnd adc sub test in imul jb inc and out inc and and bound inc cmp das adc cmpsb rorl fnstcw fldcw test icebp cmp sbb adc test punpckldq xor data16 sub pushf loopne dec stos sub xor fildl mov xchg fucom xchg xchg pop xchg xor cmp xlat add in aas in push int3 mov into (bad) adc adc (bad) xchg mov fsubl cmc jae cmp stos scas cs jo cltd cmp xchg stos test aaa xor out sbb cmc fldcw xchg cmp sub movsl cmpsb cmp cltd dec sbb mov xor fimull std or outsl imul sub push push imul fucomip enter cmp imul popa test cwtl out jl inc test mov js mov dec or cmpsl jmp inc jg aaa push in xchg in clc cmpsb insb (bad) call in pop mov xor cmp jle push (bad) iret lds mov jno mov cmp mov into scas clc test je xor call cmp cmp cltd sub mov pop adc sti xor fs inc cmp shr lods xchg (bad) into pop notb and in mov push popa push daa outsb sbb stos and push push lock dec pop (bad) sub das clc and cmpsl ret stos pop outsb xchg adc jge mov cltd xchg mov xchg insb icebp je xor and out sbb xchg pop dec xchg es shll push and mov aas ljmp imul inc pop mov pusha fadd adc lock test push cwtl sbb rclb adc stos jg imul push iret std pushf lods scas jle imul or cli xlat sbb js mov imul jmp mov outsl push pop cmp (bad) mov int fdivrl bound mov push aam cltd cmp sub inc pop outsl popf and cwtl fwait adc idivb and pop xor ficoml mov or sbb out stos inc (bad) int3 lret scas scas pop scas adc add cld hlt cli (bad) ss sahf pop dec fsubs cmp loopne outsl mov fcomps lock jne mov dec mov pusha fildl pop jnp mov cs xor cmp xor sbb (bad) je push int3 lods loopne mov push push mov mov ret sbb mov jmp cmpl cmp dec cs cmpb xor (bad) sbb xor sub aaa xor or test jne or jmp and inc mov inc mov outsb cmp adc jle sbb jo stos push vpsubusw insb int dec fdivr repz (bad) out out push addr16 jl cli bound pop stos stos (bad) pop mov nop out sbb or outsl lahf xor clc lahf or leave mov sbb sub jge ja jmp sahf shl out fdivrs insb mov sub lods and aaa mov fildl sbb int push mov (bad) mov or mov mov aas xchg aam mov push jne mov imul mov cmpsb pop imul and mov into jo add (bad) (bad) sbb adc inc mov inc xchg lods arpl ror iret insl pop push mov (bad) out dec test add and add pop scas stos js dec dec lock inc int mov mov (bad) jecxz mov int xchg and sub sahf jb lock cmp out mov fsts inc (bad) sub sub mov fcoms (bad) repnz popl and pop scas pop add lcall stos cld std fs mov out xlat xor (bad) jno push adc pop sub xchg or mov rclb scas test (bad) (bad) movsb leave fbstp cmp xchg mov loope or mov inc adc adc pushf push adc cmp jbe cmc xlat movsl fwait mov outsl or dec inc imul push and fistl xor iret and mov pusha adc das rcll enter mov call pop test pop add xor enter fldcw in and xlat popf fwait push fwait (bad) fistpll and bound in pop in jns nop lahf cmpsl leave cmc mov mov inc lcall add movsl dec daa sub dec scas gs repnz mov inc lret out push (bad) jno jp gs mov add shlb fisttpl inc adc or adc in push mov rclb test pop cwtl cmpsl leave jnp sub jbe xchg outsb aam cs mov push mov insl or or jecxz das mov mov and mov xor lods jp push lahf push addr16 and add clc mov rolb inc add push into hlt xlat cmpsl mov or or repz fnstenv dec (bad) iret in cmp adc loope shrl in mov leave roll (bad) jnp jo rorl rcrl mov (bad) xchg rcrl bound pop jnp dec nop fucomi (bad) dec cwtl (bad) je mov test sbb dec out mov loope mov inc ret mov push mov push jge sbb jns jo and rorl xor lock pop mov cld inc clc leave jb ds and in jecxz sbb test jo jl jne jo pop pushf mov scas jmp out lahf out pop int3 out incl sarl pop cld mov outsb insl insb or movsb outsl xor adc jae lods jns ret ss add mov jmpw in add cmp gs daa ss jns push and dec dec jge dec loope rclb sbb lds (bad) xchg mov mov insl sub cld sbb sub jecxz lods mov dec (bad) lcall loope xchg pop (bad) scas inc jne clc scas int repnz ror push mov rcrb jno aaa sbb in aas movsb in sub mov adc in add jns icebp jp push mov (bad) repz cmpsb (bad) (bad) jmp xchg push fldl or cli cmc adc dec test in lods out mov cmpl mov lds setb in lods mov mov mov lahf pushf push mov lods push movsb lahf cmp sbb add adc test lret sub push xorb inc lods pop or dec lock enter cmp cld mov mov rorb ss dec jmp sub aam pop and bound gs xor push and lret sbb sbb out dec in xchg inc jl sbb pop in push mov sbb and bound lock sub clc adc mulb mov adc push repz mov or fimul mov ljmp mov cmc dec mov sti (bad) pop outsb dec mov xchg sbb push fldl push mov jae xchg mov out sbb xchg in pop jge xor pop lret add lret stos xchg dec decb enter cmp lods or testl pop stos ficoml leave (bad) push (bad) clc add test dec jmp cmp mov pop mov enter shll test fwait jbe fs pop mov jno repnz pop and (bad) or ret gs cmp in ljmp cmp movsl je addl push ja push imul addr16 sti cmp cld sahf jge outsb xorl nop jno xchg ret add dec cs mov inc pushf movsb pop frstor cmp scas ret (bad) rep aad inc sbb and ja xor jnp arpl or arpl mov sbb cmpsb cmp pop aad ss in add loope push jne add jnp jmp int lcall jmp mov shll or hlt or (bad) mov fxch cmpl icebp xchg stos mov xchg aad stos (bad) mov cmp (bad) icebp dec push xlat jg in hlt lea pop movsb push lret push sarb lret ds loop aaa push jle sahf inc sti ljmp push adc das mov mov lcall lock loope adc shll test nop mov dec cld mov lret repnz sub adc adc in adc add xchg push fmuls push xor (bad) jo sub js dec imul lea mov mov inc ss (bad) dec mov and in cmp (bad) aaa dec rorl sbb ret fild mov cli xchg xchg notb sbb dec mov xor inc es (bad) call jbe test (bad) jmp add mov icebp sub (bad) or std inc or jg or inc bound insl loope push les test ret inc jne (bad) xchg je sti cmp push sbb mov out xor mov idivl aaa mov adc shrl stos enter adc mov test pop add or xchg mov mov outsl lret addr16 push inc imul out aad pop push rol mov popf aad mov jo out mov dec xor push cmp sbb movsl fs add in xor scas push in dec je pop mov push ss iret pop rorb cmp int3 xchg push add xchg js pushf std jp mov stos sbb mov addr16 cmp mov rep std jo mov aad jle xchg aas inc xrelease mov sub movsb pop addl shrb push loop sarb add mov inc repnz add data16 xor (bad) push cwtl (bad) add and inc mov bnd test loopne hlt lods inc hlt xorl jb (bad) xor jbe sbb test xchg lahf addl mov data16 push ret sub in (bad) test in push popf movsl ja push (bad) outsb jecxz cli xor or sub lret adc scas sub dec dec scas cltd insb das xchg inc pushf jo inc int mov sbbb addr16 loopne jecxz (bad) addl inc sub mov (bad) fldenv or mov fisttp push xor into int3 add xor mov xor or bound sbb scas cltd add daa mov inc repz pop mov mulb push xor cwtl sti and std mov cmpsl mov fadd or lea rolb repz incb cltd mov push and jge in mov sbb xlat iret loop push ds pusha out repnz or repnz sub std loopne sarb (bad) (bad) adc xchg cli mov mov sbb lcall jbe add scas mov inc cmc pop fidivr shll insl popf arpl jb cmp fucomp pop fildl std aam cli daa subl xor lock je fistpll or rcrl leave add xlat out lea out add xchg mov and push lods sbb xorb mov iret mov call sbb xor push and fldl scas nop fadds dec insl or mov roll rcrb or test lods cld repnz cltd fs out and sbb (bad) jg push out mov int fwait es add clc pop cmovbe fcoms inc sti jo cmp xchg loopne sbb repz inc add xchg mov push xchg mov mov push lods pop in mov hlt xchg xor insl sbb xchg jmp cmp call sub ficompl pop int3 and and pop mov je and fldt and jmp adc lahf outsb xor cmp mov mov (bad) lret adc sub fiadd pusha xor dec call xchg adc or jne ljmp jne inc pop sbb jno movsb insb (bad) ss ja test rcr inc rorb cwtl mov cmp inc push mov add pop popf loopne test sti jmp xchg pop je fidivrl or inc scas mov sbb neg cmc dec add js pop mov scas enter rclb mov out bound push fadd cmp in rcr inc repnz mov in add scas gs push fcoml stc sarb adc mov lea cmpb (bad) test jb push cs in (bad) int3 jge sbb mov xchg rorl int3 xor scas jle and sbb mov imul and mov or les outsl loopne mov cli (bad) lea xlat (bad) stc aas mov cmp xchg push xor das add (bad) daa and loop sub fs sub sub sbb add insl pop ja dec adc xchg ljmp xlat (bad) lcall push inc add shll adc inc mov mov icebp xlat imul and jge xchg (bad) shrl (bad) divl push repz jbe inc stos jns (bad) jbe sub sahf and jge rcrb mov pop mov fisttpl int inc shl push (bad) jno sarb ret imul push rcl adc xchg inc shlb out jle fcmove movsb rcll movsl or (bad) fbld mov xchg adc pop clc fiadd ss mov sbb mov xchg jp mov (bad) xor dec cwtl xchg test scas lret mov jne ficompl mov xor (bad) fistpl dec notb jge add (bad) (bad) jb fisubrl stos out movsl push dec in addb lcall cmp popf insl jg stos cld int3 add sub jle cmpsl movsl sub daa in xchg sub cmpsl shll fwait out dec ret in inc flds test (bad) repz leavew (bad) sbb pop mov fbstp pop pop xor mov (bad) jnp in jbe pop push xor mov jge (bad) mov adc out lret fsubs sbb aaa or xor xlat jmp hlt pop adc sbbl or sub add les divl push xorl enter popa fistpll popa imul movsl add cmp loop aaa (bad) sub insl loop std dec mov add mov (bad) jno sbb ss sub enter cmp in popa pop cmp cmp push ret imul cmp jno or mov js (bad) pop adc mov dec fs xlat pop rcll sbb pop or xchg add mov mov xchg movsb out cwtl movsb mov or rclb pushf call mov adc and loope int3 adc push in mov out adc lcall in inc inc add mov lods adc mov into xchg rclb repnz sbb sbb movsb sti jbe js je outsb inc outsb stc jno ljmp sbb jno lcall or dec cs pop mov xchg bound lds xlat cmp les ja nop push das sbb cmc nop pop rcrb mov mov jmp cmpsb enter scas inc or pop rsqrtps lahf in pushf mov int3 ds pop in mov repz popa inc test or dec mov fldcw lods pop idivl data16 out jno xor pop inc sahf insl push test sbb xlat lods (bad) or imul dec inc bound xchg sbb scas add xchg pop inc xor inc arpl mov jns repnz test cmp jb mov pop push adc out pop insb daa mov mov and movsl aam and mov clc sbb pop and int3 or mov or int3 cltd xchg mov cmp mov aam jnp dec addr16 stos jp cmc mov shll prefetch or xlat call fistl fsubs ret scas outsb mov aas xor sub bound loopne pop pop imul mov cltd movsl arpl pushf xor xchg and call push enter fld test mov sbb test in xchg sub push (bad) push push imul xchg mov mov (bad) imul jmp clc and jecxz and xor clc mov mov movsl jmp jmp adc push pop sbb mov sub mov repz inc mov test divb les ja cmp and popf inc sub jmp es lcall je in popl out pop lahf jmp add dec xchg iret loope (bad) leave movsb jle out sbb jb sbb dec xor xchg add or insl aam mov and imul adc nop jne rdpmc xchg fmuls xchg testb fistl stos sub add imul adc arpl out in repnz je sahf jmp insl lods sbb inc xchg clc or pop sub ss cmp mov pushl test xor ret mov out int icebp adc xor inc popa and cmp pop cmc faddp je pop movsb lcall hlt jns cmp ljmp aas xor pop xchg inc mov mov stos lea mov std cwtl (bad) les hlt dec cmp shrb out dec les in sbb (bad) cs call mov mov or or lret jp mov das and imul jecxz (bad) jg dec iret adc and ret test ljmp adc jno outsb data16 jmp inc lahf jo push xor pop mov ficom aam outsb inc lock (bad) jne dec jb pushf inc jo (bad) mov mov sub cmp je (bad) mov (bad) popa jmp mov jp mov adc (bad) in xchg call mov je out and and xchg data16 sahf mov add shll add push into inc xor jne insb and or insl out xor sbb je aam imul add add or stc xchg loopne pop das mov les scas iret pop outsb clc in lds inc mov in xor ret ss inc jno push push mov fwait sbb aaa mov js dec push push push hlt dec push ds mov and pop sbb push mov fsubrs fmull adc movsl pop clc pop xchg ror dec clc pop sub jmp lods inc jo push stos push push add mov cmp sbb pop les lret xor jp xchg sbb pop sar push sbb adc data16 sbb xchg cwtl imul sub xchg mov xchg sbb xchg xchg daa ja aaa cs add add in call mov sub mov fsubr stos int3 push jnp cld xchg pop sti icebp xchg out jne sub cld inc scas shrb in movsl aas fucomp bound loopne pop aad dec and pxor mov mov mov xchg (bad) divl mov sub mov adc and fsubs insl fs fcoml call mov scas sarl pop ss mov and dec rorb cmp adc sub nop dec push jno jns jecxz mov sbb loope arpl ja adc mov (bad) pop sbb (bad) jnp (bad) ljmp inc inc pop jg jg xchg xchg push test clc jne xchg mov cmp stc jp mov fs ret das (bad) mov inc int add aas test cld test (bad) fisub or sbbb movsl and xor inc das shr adcl push or stos add or out adc enter mov dec push pushf pop jb hlt pop inc dec in (bad) movsl mov imul (bad) rcll jbe sbb fdivrs sbb ljmp lahf add out xlat test and pop lock mov cmp or and aam cmpsw or fmuls rol out and loopne stos mov pop and scas jge repnz and sub xor mov mov and leave or jl (bad) dec pop clc lahf push (bad) cmpsb outsl mov xchg or mov test enter out pop je lock (bad) push lds lret sarl rolb cltd insb es mov scas mov push rcr dec xor std sti mov daa mov sbb fs mov pop inc sbb lock divl jmp ljmp rol dec adc xchg adc mov gs hlt clc fdivrs movsl decl add arpl xor sub xchg mov insl mov inc leave int3 out or aaa aam insb pop push pop dec aam dec and lret lcall pusha pop loop (bad) adc scas and xchg mov pop lods jno mov (bad) cmpb imul pop push dec les es ret lea add decb cs lds sub ds xchg pushf fadd loope dec test jecxz sti inc stos test mov out cmp pop ficompl xchg lods push cmpsl push insb xchg inc imul in mov xchg mov lcall pop jno scas lods pop out aam nop inc cmp rclb rcr mov out sbb push leave (bad) int push mov fs mov imul add push sub add jb sub pop push (bad) loopne pop push xor sarl cmp cmp jge mov push mov xor push inc add es mov mov jmp sub out rcrl test mov cltd iret inc mov es inc nop and leave jbe push inc sub and enter ret sub push shll and and jl rclb dec (bad) movsb jmp (bad) outsl test jge fstl mov jb cltd xor into push pop stc into shr jbe inc enter repz push push xchg cmp cmpsb adc mov pop scas cs (bad) fsub push test or int push pop mov rcrb sbb cmp in pop sar jo ds push lea inc adc imul jnp push sub xor popa mov lcall enter loopne sub mov cmp in lret mov and push loop es loope pop andl (bad) mov sub push mov mov lahf sahf xchg push jnp cmpsl stos pop (bad) lcall lret ffreep mov (bad) jmp jp iret jg lret adcl test repnz rorl sbb psubd (bad) push mov ficoml out mov (bad) scas cmpsl and ja pusha pop xchg dec pop inc add push or iret shrb ss add push or pop push dec push push lahf mov mov xorl cmp lcall add mov push call decl xor popf (bad) add dec cmpxchg mov lret in outsl lods mov xchg cmpxchg out sbb cmp subl inc mov popf pop (bad) cs sahf mov cmp mov mov outsl mov in sbbb pop int lods loop adc cmc es adc dec xchg jmp cmpsl xor test cmp (bad) xor and inc imul inc jmp lock insl out dec push (bad) clc or lea (bad) cmp mov loop mov (bad) out idivb fwait rcr dec negl clc push stos push insl das or popf pop mov xchg imul cli adcb fwait xchg cmp and cwtl (bad) out pop cmp adc in mov cmp add dec inc ja dec or cld cmp addr16 (bad) xor enter gs jne popa call xor rcrl shr xor repnz sbb sarb jg fisttpl cli push mov pop pop mov pop jmp scas add jl jmp xchg data16 rclb xchg inc (bad) jo inc mov int sbb xchg nop ficompl adc out jmp jg repnz push or in sub in dec xchg pop loopne outsb inc mov sti push xlat scas out mov sub xchg jo pop push dec push sbb in cmpsl insb or jns pop cmp mov push repnz cltd pop repnz mov push out jmp push insl out and pushf loop mov lods and add dec loopne xchg addr16 xchg popf ret fnsave mov icebp cltd pop jne xchg dec inc mov adc jp jae,pt insb data16 push add pop pop cmp scas push mov iret pop lods and out cs sahf shl divb sub shrb jnp pop lret incl les mov sbb lds pop aam leave push popf sbb mov jmp sbb mov cvtps2pi xor out enter aaa mov daa flds mov adc xor int enter inc lods mov mov arpl movsl sarb jbe push mov lret mov mov or out shll inc pusha xor int hlt adc dec (bad) pop adc cld lcall lahf nop mov das nop mov mov stos push int3 adc or pop pop out into popa push into call sti mov adc sub clc shll xor cmp stos ret adcl addr16 xor loopne mov movsb jbe cmp mov jbe data16 mov push scas jne and in sahf sbb aam sbb ljmp rol hlt lahf out loopne xor dec dec rcr lahf std rcll fistpl add push jne shll ljmp int3 push push mov mov sbb sbb in jo,pt mulb mov cmp push out imul jmp push or js sti push xor or leave jp push sti stc add ja call test fstpl jp aaa push or repz cmc call cmp cwtl fimul mov mov jl xchg push add sbb shlb sub mov cmpl test mov fldcw mov lods test inc xchg cmp mov xor or adc cltd xor ljmp or arpl add xchg andl fisttpl jecxz jbe repnz pop push dec (bad) mov aas nop mov stc cld int jle mov jns dec (bad) jmp aas add push (bad) gs push xchg (bad) lret nop mov cs fimull cmp and jno (bad) in scas mov inc sbb jge inc pop lcall add dec jmp popa or mov in stc shrl xchg cmp sbb dec add ret mov cmp xchg mov lds test mov (bad) lret mov cmpsb bound out inc shll and dec xlat nop aam negb xchg fidiv gs inc add dec ljmp movsl sub inc mov test dec fcompl (bad) data16 ds stc pop dec adc outsb mov push fisub add movsl sub add out add xor sbb cmp add cmp push subl jne enter pop int3 out scas inc (bad) repnz test cmp ds scas jle mov lea lea pcmpeqw dec divl or inc mov ret fistpl ds popf test add test cmp insb imul enter dec ret fildll arpl push mov mov push call xchg sub push js int3 out dec ret fisub xchg adc jmp fstpl jns cmp ja cli and cmpsl enter mov add lahf xchg cmp lret icebp push mov pop jle cmp and and imul je mov and rcll push outsb addr16 das and inc cltd sbb mov ss cmp lret repz test push in mov repz andb jo cs dec int pop in mov mov inc mov ljmp or jecxz jo mov mov flds std test push pop (bad) and adc scas or lods cmp sub (bad) mov dec sarb insl xchg mov in mov or std inc fistpll imul sahf subb or ja pushf adc icebp inc sub push fistpll xchg cmp mov push push ljmp mov xchg cwtl in lods mov sub xor stos sbb test adc and loope adc daa mov inc jo xorl pusha sub mov pop into sbb enter cltd repnz add insl jno popf pop int3 add xchg sbb js adc pop pop lcall pop into push mov pusha jno (bad) mov (bad) mov mov cmc push push push mov hlt xor jle leave push mov and pop inc inc push or bound add les pop dec jo loope test cmp in inc (bad) push and push inc pop inc scas push aaa xchg fs mov push sub popf sub cmp xchg push push lret lahf pop mov push repz push or pop push sbb sbb bound jecxz sbb sbb sub push (bad) jb push dec lcall cmc lds sbb maskmovq imull or pop pop and iret xchg mov and lods arpl scas mov cmp leave mov adc bound adc dec dec mov push clc pop xchg xchg cmc jg xor dec and sti sbb or xchg sub idivb xor cmpsl cmpsl mov sarb (bad) scas fdivrs or popl sub push scas testb add push pop push sbb call int3 sbb xchg fsubs fsubrs sbb gs inc stos jl mov bound aas pop xchg mov add mov or cmovp addr16 and fimul cmc jo (bad) jmp mov add adc (bad) test cwtl or add mov pop scas pop xchg sahf test xor nop pop or sahf pop inc mov int add dec lock xchg pusha cmp negb pop and lds cmc in pop loop adc stos adc mov inc pop and scas adc lods mov xchg jmp mov or into repnz inc push dec jo cmc and cli (bad) scas nop xchg mov iret packsswb (bad) jp sbb movsl push jbe cmc icebp cmp iret mov (bad) dec cmp mov mov inc imul add rorl in fs jo es sbb out arpl jmp pop xchg dec adc pusha push mov nop xchg out inc jp push popf cmc mov and mov sti jnp cmp add jns add call js fs dec jmp and cmp cmp jb mov lret loope pop xchg fstpt pop and xor in cmpsl sub or (bad) cmp mov and inc (bad) and cmp sbb shlb jne out sub incb push (bad) xor ss addl lock (bad) jmp jbe add dec test lahf push jb sub xchg popa (bad) jno fsts outsl mov imul sub es mov and pop mov push orl mov inc and sbb mulb aas movsb or movsl nop stos out icebp and nop xor mov aaa out push call dec inc pop sub fcompl popf test mov adc loopne outsl adc push mov scas cmp sbb cmp xor mov (bad) lcall pop xchg and xchg aam aas add and dec leave mov jge or jmp (bad) push cmp mov (bad) dec mov in inc mov fistl (bad) rcrl js insb jae and push inc es jnp fsubrl lret cmp (bad) (bad) imul gs and pop adc lcall cmp cmp jne push and push mov fwait or shlb dec mov (bad) outsl cmp lods jmp dec or pushf mov mov aas push nop and mov cmc loope jle pop mov out (bad) (bad) sub jbe sti dec or mov int3 les xor mov lods shrl push mov mov (bad) lret sti adc xor jns add mulps iret sbb loopne cmp sub xor sub rclb jp mov mov (bad) shr aas insl adcl test jmp pop mov sub adc repnz mov leave scas es insb in or xor add nop sti aaa cld pop repz xlat xchg cmp fwait jecxz daa ds jns adc (bad) or xchg iret add cmp mov loop add loope insl es push push inc push add jne or sbb push mov adc sbb dec dec xor or jbe je add xor inc sub stos pop lahf xorl or push pushw mov rolb adc jno aam les jmp icebp adc repnz mov mov dec mov and imul jge mov repnz gs dec movlps aad push fsubs push js push and in push xchg stc ljmp sahf clc inc push mov and aas arpl test jl cwtl out jnp adc mov mov xor sub stc or xor mov (bad) lret dec insl or sbb insb (bad) testb sbb loope push (bad) xor push ret lret rcll jae mov jbe in aam leave add xchg xchg and add adc gs jp add imul ja mov shrl inc cmp fsubrs lods pop leave fsubrs push in movsl add cmp orb outsl repnz stc jns lret dec std mov lret and pop rcrl insl mov mov rorb inc int3 lea pusha or lds in stos lods int mov or fdivp sub sub push push add psraw std decl std lret bound adcl push lods xchg cmp xor fs and xchg cmp roll push ror mov push adc int3 les push cmp jns adc adc (bad) dec adc or jp aad daa loop mov dec pop mov repz push cmp pusha adc loop xor fs ret loop adc mov mov mov fdiv or mov and ss stos rorb add sbbl int3 and dec jmp nop xchg fimul pop scas mov jno lds inc add cwtl addr16 in xchg jbe jecxz push mov mov jbe add pop add jb divl mov (bad) lds fiadd xor rcr dec cli inc mov mov clc cmp movsb (bad) cmpsl test sub gs xor movsb aam jne jns mov fstpt aad push dec jecxz imul mov mov sub pop stos dec and jns in daa and popf xchg or adc movsb fistpll fmul in push adc adc (bad) dec cmp push test or call push stos sbb (bad) dec inc add mov mov or aas add sarb sahf xchg pop (bad) das test fimull pop loopne call adc add loop push nop dec lahf jl sbb stc stos sub js xor mov mov sbb stc or scas (bad) in dec pop pop xor jp and in mov xchg rolb add test and xor mov movhlps cmp pop loope jle int3 xor push mov jbe movl fldenv mov pop aas push (bad) lock mov mov add mov (bad) fucomip and inc aaa adc lds incb or outsb jne adc dec fsubrs fsts cwtl xchg nop or dec (bad) mov dec int popa mov dec sub cmpsb mov mov icebp (bad) dec mov and add insb in outsl jmp (bad) js adcl jae jo pop lret ret inc add std faddl xchg xor mov jg or xor repnz push adc lea lods into mov imul push mov xor ljmp sbb movsl push fwait out (bad) mov repnz stos jge ljmp jne jno (bad) hlt popa (bad) or les dec imul sarb xor mov nop dec sub xor jp outsl (bad) jle or (bad) stc fidivr jne lock cmp in pop fwait jl out fucomp lret pop cmp insb dec fs sbb fdivr out sub scas jns mov inc mov mov mov bound fsubrl ret mov jle iret ficoml shlb jne sbb stos push or clc push idivl mov dec jne fildll nop or push sub sub je jno xor jp cmpsl mov inc pop into pop lcall test rcrb adc jecxz loopne lahf push faddl data16 inc push sbb jle cld call negb or fsincos cs ja fwait clc sub push fcomps enter adc add jg scas rolb mov add sbb bound pop xor push sti push push fsubrl and pop je sahf inc adc lock mov popl cmp ret mov fsubs aad je sbb inc ficoml add inc subl orl aas into data16 mov lods decb rorl ret and or fisub cltd fldenv xchg mov cmp dec jecxz push push add adc fidivr pop mov out mov (bad) sub push daa and cmp jns mov jno push add sahf inc cmp fwait (bad) sbb jp mov lea (bad) jae push stos push adc mov dec call inc nop jo cmpxchg pop pop cwtl rcrb fninit cmc and in sbb pand jno pop cli in pop cmp or pop fstpt pop mov jmp mov lods nop sub enter mov push cmc cmp dec push sub sub repz push dec addr16 and andb sub dec push dec incl nop mov xchg dec push pop push outsl mov adc and jge cwtl push dec push repnz bndldx pop jg pusha mov test mov ja fist mov jmp (bad) stos mov push dec jle outsb jne subl cmpsl dec test adc mov push scas pusha ja (bad) mov out push cs mov cltd xor imulb dec dec push mov (bad) (bad) push mov aam inc dec cli dec mov or ds jge and cwtl xchg (bad) in and lea mov pop in in pop shl es jmp push push sub hlt cmp push add push loope sbb ret jl mov int3 testl jmp mov dec or push (bad) jne aaa xor xor mov aas sbb jl or add mov test mov enter in cmp cmpsb inc leave loop adcl scas shl daa and dec push cmpsb rclb in int insb pushf (bad) add pop test sbb inc call subl in push pop or push clc jno pop addr16 mov jne test xchg mov je daa sbb cmp arpl push mov cmp push scas shrl std jnp bound adc sbb or xchg lds dec pop mov enter inc (bad) ljmp push dec mov loopne dec adc mov sub pop sbb cmpsb int3 fldcw (bad) ljmp jge std jl cmpsl sub and lds lret jo js (bad) mov push and leave (bad) push push inc cld push jnp xchg shll test inc cmp cmc adc (bad) mov dec jo dec (bad) jb xchg add in xchg xchg aam lcall adc stos fcomps repz inc fmul dec fwait adc xchg call jecxz sbb js out cwtl sbb mov je xchg mov es ss test pusha mov cmp pop out xchg mov xchg ret repnz iret or mov inc leave adc in push mov inc into or pop popf pop push lds jne icebp (bad) mov sbb jnp jp xor xor mov test ret std mov push xor push cmp push call jo nop ret jae push fdivrs test sbb leave (bad) jo sub clc xor sbb add das lea out mov das js add int lock cmp mov aam adc mov arpl jmp dec aas daa mov add leave adc push inc and or cmpsl stc mov jp pop notb rorl jbe cmpb scas fildll lret xchg adc jno xor je mov sub daa movsb sub or and ss int mov mov data16 (bad) pop leave fldenv mov lds push sub std sbb mov test stos shl jp scas stos pop jns fnstenv rorb cmp roll xor insl outsl enter in ja pop adc mov (bad) ja dec ss mov or fs mov adc push mov inc add int3 dec sbb in pop popa pop mov je inc icebp dec ret repz mov inc aam inc mov inc xor bound sahf push incb pop arpl (bad) sub jb add in aas pop mov and popa add test outsl mov cmpsb iret cwtl mov aam pop sbb lahf and push sub bound out mov aas je mov adc inc ret in lods stc sbb sarb xor dec add dec adc loope lds mov push push pop push int jae jo pop addr16 add fldcw dec in stos nop push pop pop sub sbb ds fcmovu sub pop rorl xchg lock not xchg xchg aas es cli lret jnp,pt xchg push clc fldt (bad) sub ret cmpsl pop ja dec lods pushf stos inc xchg dec imul pop lock test mov adc subl jno xorb stos inc or cmpsb pop mov std sbb vpunpckldq jae shll sbb dec ret (bad) or (bad) mov repnz push xchg xlat test inc int3 ja jns call cmp jmp cmp (bad) mov outsb mov insl mov scas outsb cmp ja (bad) lea sub mov mov mov (bad) mov enter xchg pop (bad) in mov xor adc cmp outsb aaa cmp xchg cld push sarl imul pusha sub xchg pop ja repz enter add xor inc dec and inc and shrl into insl int repnz jg fs or pop (bad) mov out mull sub in ja fcmovnu out dec fwait outsl inc mov jno stos fnstenv xor out imul or gs mov cmp pop bound push lret (bad) push jo add adc jnp push lret movl add movsb mov xchg lods inc dec daa fnsave popl xchg roll fidivl inc inc flds repnz dec loope shrb jno or mov sbb jnp sbb jg imul ror dec loopne or mov out lret insl push push ret call mov ror dec (bad) mov lcall push movsl sub enter inc cmp loop popa jb stos scas and cmpsl pushf dec arpl add xor insb or xchg test fwait dec rcrl mov enter je jl ljmp hlt lods enter loope bound call movsb add mov pop enter xchg mov mov ret mov xchg ret ret pop std subl pop cld shrl cmpsb or xor xchg ret cld push mov scas xlat mov mov sub jecxz xchg aad out inc xchg scas add inc clc dec das fcom jno stos and ljmp cwtl dec aad adc or insb mov mov inc call jle fldl sbb pop dec jbe das mov outsl sti call push (bad) insl imul mov gs push xchg push ret push movsb clc and xchg cmc ds xchg lds lahf pop mov or and push and dec daa sarb dec mov adc adc sbb lret gs in mov (bad) jbe stc in ljmp mov jnp or and push or scas hlt sbb rorb mov outsb push loopne rcrb cs es xor push inc jae mov andl mov out push scas fs mov push mov (bad) mov sarb jns dec out repnz push fwait int3 stc arpl adc test fisttp add std or fildll and and lea test push adc (bad) (bad) popa mov push fstpt jp jg sbb jecxz or dec pop add lods adc mov cmpsb push mov (bad) or (bad) adc popa push xchg jo cmp fcomps outsl lret jbe mov xor outsb aaa dec jbe and and and pop push or fwait call outsb (bad) mov in scas mov dec (bad) xor rorl xor mov sub into lahf fidiv mov mov clc scas xchg (bad) cmp sahf bound scas adcl jecxz lret inc dec fnstsw mov dec fnstsw dec scas mov xor (bad) mov ja sbb out mov roll push or fdiv repz iret sub test leave pop test sbb mov addl xor ljmp imul mov arpl aaa mov jl pop les sbb add shl pop movsl cmp xchg data16 jbe cs sub push insb fldenv popa add aaa jne insb out xorl mov lret ja add pop adc mov xchg xor fdivrs or leave incb (bad) rolb sbb cmpb ja add mov or mov stos outsl lock cmc jg popf or out xlat cmpsb aam test dec mov push inc in adc ret rclb and add fcomp inc xlat inc out lods dec popa fcmovu dec mov vcvttsd2si jg add cmpsl xchg mov add jl mov and jecxz xchg jae mov jg mov enter inc jg sub xor popa lods (bad) xchg or fistpll fnstsw (bad) or sub repz popa cmc sar repnz imul sub dec insl mov dec sub (bad) dec xchg sbb jno mov cwtl sub repnz aam adc dec cmpsb push stos lods xchg (bad) cltd dec mov add test mov xchg and addr16 push mov aam push pop popa test int3 (bad) data16 (bad) mov shll int mov xor xor jne inc lcall leave es imul hlt mov sub inc mov push cmp mov push push pop push push jae jecxz jg jae jae hlt movl dec pop mov mov in pop and fiaddl shll sub popa in jmp mov loop out push cmp lcall sub mov push out std ret jnp and sbb scas or push testl addl iret mov mov push les cmpsb clc ret dec or lahf int3 call hlt push mov (bad) mov mov jle xchg xchg dec xchg adc scas repz dec bound dec or jl insl mov stos dec inc ds inc hlt push inc cmp inc out push sbb mov jl (bad) jno adc sub sub jb push dec push shll outsb rclb (bad) lea add popa loopne in xor dec popa data16 out popf jecxz jp je and jne cmp test (bad) repz pop push js mov jb sub in mov pushf js sbb mov jo (bad) cld mov lods jl pop xchg sub inc popf cmp or push in (bad) jmp xor cmp push push fbld movsb aas mov dec push inc and notl pop jmp sti xchg mov jno cwtl mov inc push xchg push xchg cmp (bad) lret xor lcall mov inc inc sub fwait sub cs inc mov sbb in mov mov ffreep out sub push xchg mov rcl arpl dec popa mov loopne sbb mov js pushf pop push mov xchg adcl pop adc jae mov mov popa inc xor push inc mov dec push push pop addr16 lock mov mov lcall je inc xchg loop fdivrs dec inc mov nop add push iret vucomiss sbb idivb cs in xchg jnp xor fistl dec lea int3 (bad) aad mov in aam inc into aam lcall jecxz rclb jno add xor xchg ret in ret mov dec cs add out mov xchg push sbb test cmp adc jnp lods mov ja loop sub outsb sbb xorl and mov mov mov mov mov arpl add push jmp lods dec cwtl (bad) je out in jae jb sub dec insl ds cwtl mov not das data16 adc insb pop arpl outsb inc and xchg pop cld mov loope mov push or dec xchg repnz pop shrb dec xor cmp push loopne repz ficompl xor mov push push push sub stc pushf test cmp sub pushf and pop xor lods add pop in movsl ljmp cmp lods cmp outsl insb pushf cmc mov sub dec out cmp rcrb repnz jge ja xchg mov xor stos dec je addr16 std mov xorb fnsave arpl rorb jmp push outsb dec rcrl mov lods out pop pop push int3 sbb shlb cmp cwtl pusha lcall popa daa sub pop cwtl lret stos or jnp stos mov test lea idivb mov mov daa (bad) or ja jno aaa das mov jecxz (bad) test sbb cmp fild mov or bound adc dec jbe push cmp aaa les push pop pop pop arpl fidivrl imul repz jmp pop add lods js shlb jl xchg inc push cmp std push add ja dec pop mov jo dec xor pop in jnp fnop mull cli fdiv xor mov imul mov or cmc imul and ret daa and stos outsb push aam mov or in xor or movsl insl mov ja fcompl pushf add in out shrl cld push xchg test lret imul mov (bad) mov fcomps xorl mov add or sub jecxz cmpsl jl and mov sbb test (bad) (bad) and aaa scas push lds cmpsb hlt sbb mov mov mov mov leave leave mov and mov and scas pushf mov xchg push mov pop lock mov (bad) jo ja lcall push sti push fidivl fisubl pop fcomps iret data16 nop push lea adc gs roll leave sub fwait jmp sub addr16 dec mov add pop (bad) add insl and js fstps enter jge (bad) (bad) (bad) mov sbb xchg imul ficompl push dec dec fisubl inc mov js pop mov fldenv mov shll loop mov int3 test push push insl adc dec add ret cmp popl sbb scas sbb inc icebp shrb pop es inc addr16 (bad) and mov and pop jns pop mov ds xchg ljmp push (bad) mov push jmp in pushf pop out dec imulb mov ret scas int scas scas push pusha cs gs fimull jle sbb sbb or and scas sar xchg cmp stos mov cmp test mov xchg dec mov adc mov and popf or sbb xchg arpl cld (bad) dec push pusha adc movswl es mull pop icebp imul ljmp xchg jg xchg push fcoml fdivrs xchg ds call adc jge or mov mov jl lock jl scas pop sub daa (bad) (bad) jg test adc imul xchg mov test cmp pop fsubl dec es das loop cmp jnp test stos push cmp xor das clc ret negb mov vcvtdq2ps adc mov push pop nop xor (bad) outsb mov jb add (bad) dec cmp out dec pop test popf sub js imul mov inc cld push xor jnp stos popf mov imul dec test repnz jne push pop adc or jecxz mov xor ljmp sub (bad) rcll mov mov jb mov jae mov rcll inc mov fwait in jecxz pop out cli insl xchg stc push or cmpb lock sub mov outsl fdivrp and mov push mov push out pop mov add adc sbbl out movsb jecxz hlt ret jp fs cmp sbb call jle or jbe mov test movsl add subl mov xchg adc or cmp cmp push outsb dec jno jge pop or xor push iret fsts xchg (bad) push lock (bad) sbb inc fiaddl gs das xchg out addr16 aam fbstp imull call sub adc cs inc shlb ficoml nop push cmp sub mov adc arpl fadds out sub and jg and (bad) cli pop adc ret int3 mov lods nop xchg jg xchg cmp sub cmp xchg cmovne add addr16 orps adc jge pop fildl jb push ss push cmc or push std adc xor and mov cmp repz push mov enter mov dec add jp xor pop sub in xor push movb mov mov mov jle sahf pop mov cmpsl push and (bad) xchg clc pop cmp out aad push repnz sub push fwait xchg int fdiv loop mov inc loopne loopne jg aam mov push mov outsl push dec xlat xchg les dec repnz insl je or add cmp icebp and loopne xchg adc mov jae xor jg,pt xor leave stc out icebp sahf adc cld call xor xchg and jb insb push sahf dec add add icebp sbb js xchg aas je cmpsb (bad) jp aaa ljmp mov jecxz cltd or dec push adc pop or adc sub jne and sub loopne add ret aad (bad) cmpsb add dec add orl rclb push inc mov mov faddl mov mov jmp mov nop add xor mulb icebp lret mov aad gs imul mov inc dec fdivp fcmovne subl inc dec adc cli jnp addr16 iret push cmp xor fldt call in dec fwait pusha icebp xor ret sub enter lret cmpsl aaa in xor hlt int3 pop inc push out mov push mov fcmovb (bad) mov jne std js push inc inc fimull adc arpl jl js daa shr and add add cmpsl cmp and aam stos (bad) adc jl leave push xchg int fldt add xor inc sbb adc mov or pop sbb push jle jns inc (bad) enter adc xlat mov rcl mov dec mov stos mov xchg add insl add int int push adc pop arpl push add pop sbb (bad) xor imul adc mul xor mov mov xchg sub stos addl pop inc mov jp xor arpl pop xlat push mov das xorl push pop mov stc dec adc addb pop jb mov shrl xchg loope mov out fsubrl mov or or mov xor std pop cld lcall xlat mov fdivl mov pop push fstps hlt and inc mov movsl adc push je sbb push xor sbb mov dec pop icebp mov mov adc sub mov adc addr16 xor into pop daa cmpsb lods push sub push jmp xchg mov or inc mov lds int sbb ret mov jp fildll jnp aas mov xor das add mov inc cs add mov dec cwtl ss ljmp orl xchg mov dec push and bound or inc mov iret mov lods icebp insl dec mov push (bad) sbb mov jbe jecxz and push dec jnp movsb sarb aad mov sbb cmp adc mov cmp jg fwait (bad) mov je loope in jbe and aam int3 jl sub gs paddsw addr16 cmpsb mov pusha and (bad) enter ficoml inc stos lret addl sarl adc addr16 nop orl jo scas xor (bad) dec sbb outsl jns push movb sub fxam inc mov bound int outsb (bad) lahf int pop repnz js push add repnz clc cltd fmul xchg sbb and and mov rorl (bad) or loop mov adcl es hlt int3 into mov loope test add jb pop inc inc xchg js xchg push jge dec dec fnsave xlat ja pop inc das mov xabort (bad) ja sbb adc dec add jne pop notl cmp cmc dec lcall lods jnp push cwtl not or xchg jmp pop push jle jno xchg xchg xchg fbld xchg mov leave and imull dec dec push cmp xchg aaa test in int3 pop (bad) daa lret test ljmp (bad) int mov jno inc jmp jae int3 cmp sbb jno daa adc mov notb push mov roll cmc nop add mov xchg (bad) xor mov mov rcll add int add adc jnp outsl lea std jbe inc movsl jle fildll push mov pop call push jnp inc sub enter cmpsb outsl xor or adc (bad) (bad) jmp and inc (bad) cmp push repnz push mov lcall clc pop add sti int lea mov stos aam jp loopne bnd mov add sub sub dec mov dec mov stc push mov (bad) (bad) dec sbb fwait in in (bad) sbb neg and mov scas jmp cld jo js sbb mov ds repnz pop jmp pop call adc rcrb mov sub cmp ffreep push shll jno (bad) addr16 dec jge stc ffree jmp sbb repz dec in push test fsubrp xchg xor push cmpsb divb in fidivl out push inc das dec out popf fadd inc out cmp fs enter insb mov dec sbb aas jbe lcall aam (bad) dec js in je in lds (bad) mov sbb xchg push std enter in popf stc jnp cmc cmp adc call movsb adc incl push pop fistpll lods add pop inc inc mov push pop sti dec std iret xchg das and out nop xchg cmc mov jle xchg ss and (bad) fsubrs inc jb sub sub dec and or jnp aad out cld push cmc dec sub sub jg add fild daa lock sub aaa ret repz call js dec fistp into sub mov scas push outsb cmpsl push push and xchg rcll pop push sbb loopne adc push inc ja cmp je and test nop sbb scas fwait scas roll fildll inc adc insb pop lods sbb fimul enter push mov inc and adc (bad) cmp repz xlat inc pop stos arpl mov cwtl inc movsb imul sbb addb rsm fsubrs cmp repnz and leave mov jbe mov sub hlt xor mov dec mov in fnsave popa cltd jne lcall ds lcall scas xorl cli ss lea data16 mov call lds iret mov pop outsl xlat lock cmp xlat inc test push xchg movsb aas ss cli cmp push out lahf add or popa mov lret in iret adc (bad) (bad) jecxz sub cmp xor pop ds pop cltd out (bad) fisubl and lea fcoms pop push pop (bad) roll mov sar fisttpl inc sub mov rclb repz lock stc jne pusha imulb mov cmp flds (bad) add outsl sbb xorl adc test icebp outsb mov pop adc cmpsl test xor cmc insb pushf sub dec sbb sbb cmp inc ret (bad) pop in add (bad) js xor mov popf aas (bad) sti rolb std pushf cmpsl lock outsl les or and addr16 lcall add (bad) mov pushf xchg inc push (bad) mov push pop mov cld pop pop xor mov jl,pt lcall dec push push aam pop pop out fidiv cwtl adc cmp xchg imul and inc jno dec push dec push fistl xchg jnp adc jns (bad) cmp sbb call aas shl ljmp jge ljmp add iret mov ja jl sub mov lahf cmp pop ss push orb adc popa lock repnz add jo jmp lahf in mov mov mov sbb iret xchg (bad) push xchg imul (bad) aaa sbbl push (bad) sbb in mov lret icebp lcall jb in inc xchg out ja ljmp jg push pop mov sub clc movsl and sbb lds or (bad) mov (bad) mov sbb stos dec jno jne scas pop fbstp lea inc dec fsubs out (bad) mov cmpsl and in in and xor shll stos inc mov jnp out ljmp addr16 les pop mov andl cmp sub cmp and jnp sub pop lea dec addr16 add inc aaa cmp push add dec sahf and fnstenv ror sahf dec jmp lea mov push push mov cmpsl adc divl addr16 adc and cmp mov add mov cli pop std out inc inc (bad) mov adc mov je js mov push add mov data16 pop adc jae lds or (bad) arpl pop (bad) (bad) jl sbb fisttpll cmpsl cmp (bad) sbb cld ss clc add jne push int3 out mov subb mulb mov fcomi nop push adc mov push imul and dec pop push pushf cmp (bad) cld rorl push stos xlat test mov stc jl cli sub repz insb mov mov and fldcw clc add dec cmp aas cld jae jne sbb out xor cmova sarl adc out cld (bad) jl pusha pushf add add mov (bad) outsl fcmovne push xchg js jb cli xchg addw in outsl push mov or out fistl lahf test clc pop xlat jp pop dec fwait jmp test dec call push (bad) test pop sbb mov cmc in mov jnp mov insl jl cwtl lcall test lret jle loopne cld pop popf in mov sbb test inc jbe lahf jae pop sbb lret (bad) (bad) jb mov sbb pop mov nop and test mov jae inc fnstsw fwait in mov add repz inc mov leave dec fs adc popa jno outsb push push in aaa or jns pop jbe add iret ret setnp mov pop mov (bad) mov loopne sbb add mov add dec dec lock inc imul (bad) (bad) mov fist (bad) jo and xchg outsl out push popf sub test inc jmp scas adc dec push (bad) mov add mov aam stc xchg and aam dec fwait jbe mov mov dec sub adc jbe push (bad) push test pcmpeqd les mov sbb mov inc mov fstl jns movsb add (bad) mov add xchg sbb add dec sub jg iret fistp push shrb rcrl (bad) cmpsl cmp mov or into jmp daa stos mov push add mov enter fstp mov gs pop (bad) ja xchg dec xor dec jle out hlt lods or add pop fsubl std mov (bad) fstpl mov push pop or mov iret pop add fisubr push test or jecxz mov push aam pusha pushf pusha mov sub sarb add push inc mov xchg dec fs push mov and pop xchg data16 cmp xchg push ss adc std and cmpsb gs xchg aas sub ret bound jecxz add push aas test pop scas aaa and cmp (bad) sbb add jp add jle je loop mov xchg fiadd xor xchg xlat arpl mov add fdivrs (bad) pop jge pop push pop das cmp mov mov xor ret jl hlt scas leave lods jne xor cli pop pop aas push loopne add sbb jl and (bad) inc arpl dec xchg out aam clc jmp arpl inc push aad movsl sahf subps daa lret enter mov mov jp mov xor and dec mov dec jle (bad) data16 cmp mov lcall out js outsb lds roll loope cwtl push sub sbb mov cmc mov ret mov mov lods jl outsb popa xor add (bad) (bad) push jns nop sub stc xchg add inc inc xor mov pop jne fstpl and or pusha dec sbb sub dec mov push mov add insl sub push out xlat mov jle (bad) fnstenv push sbb insl adc sub mov xchg xor in call sbb pop sub lea loope push fistpl cmp push push mov xchg test add jg hlt int3 add rclb lret push fldt sti mov xchg cltd inc jecxz lret cmp mov mov and addr16 sub sub inc lcall xor add pop adc mov mov xchg jnp xor iret fcmovb in arpl mov jecxz inc inc xor push dec and dec fsts out je mov sub and mov je shll scas mov push loope sti movsl test nop and sahf popa xchg out clc fisubrl mov push add int3 aam nop cs in sub xchg cmpb and dec popf xchg add jne cmpsb (bad) push adc pop mov dec in lea fidivrl call mov nop mov out gs pop imul sub bound jae jns inc dec (bad) in ja orb pop xchg aam stc (bad) cmp pop cmp or fisub stc loope (bad) popf or (bad) int3 sbb stos pop pushf mov test jp cmpsb pop mov pop pop push adc gs add or popa fldl into (bad) enter sbb mov jecxz xchg stos pop nop jp jle in sbb popa lods ljmp cmp mov int jne pop cmp outsb or ret push fstpt pop pop rcl and adc xor out into loop (bad) sub scas add loope clc (bad) cs div into (bad) cmp cmc add loopne icebp mov (bad) jae mov fs mov out fcom add sti dec rcl and adc mov pusha dec cltd jb and in pop jecxz dec call idivb out mov int3 adc cmpsb jg pop xchg push pop hlt fnstsw sbb fwait add adc pop daa push (bad) popa cld out xchg push xor jmp xor fstpl lret inc movsb fbld lea adc dec cmpsb push mov mov out test das fnstsw adc (bad) push fisubr insb aaa cmp imul dec test pop mov xlat out insl imul movsl mov add loopne or jne std imul add hlt jmp adc popf popf jne jnp sub fmull push hlt bound add pusha cwtl push ret pop inc int3 mov xlat jne xor lods mov pop imul test sub push inc push shrd mov fmull outsl outsb pop pop mov mov cmc mov mov bound lods or mov aas mov jnp inc (bad) jl xor fidivr sbb mov jbe xchg test cmp ja (bad) sub sub pop cmp lods dec and mov cld push mov jge mov imul mov add cld nop cmpsb sub lcall insl mov jno dec loope scas or mov ds js movsl jns xchg jle xchg cmp ror out icebp mov (bad) jnp pop add push stos out popf stc fidiv clc jo xlat mov imul push cs gs insl cltd (bad) xor add or leave sti stos lcall or popf xchg icebp lret (bad) mov jmp rcrl inc dec fcmovbe sbb or mov aad stos ja xchg popf adc pusha stc fs jecxz (bad) jno arpl sbb sub or ds repz pop xor iret lret sarb pop scas test xchg dec ret sbb mov fs loopne mov loope pop scas dec and mov sub arpl jbe in xorl adc (bad) xor bound in dec inc (bad) cltd hlt call pop sub add and xchg mov xchg xchg (bad) test sub pop jbe popa dec mov jno dec mov and cmc mov in cmp cmp (bad) jns popa test jnp daa icebp (bad) bound mov loop in lock cmc iret (bad) dec xchg jp out push xlat xor or or dec addr16 inc lcall ss gs or add push pop jo leave xchg cwtl mov adc jne adc aaa mov test mov pop ds xor mov mov incl pop les mov dec loop addr16 lret dec test leave or call in mov stc pop jg jmp mov dec sbb and rcrb adc loop pop loope cmp xchg rorl jne sub sti and or sbb push fstpt dec lret push std dec or push mov xor or dec jmp hlt add sub sbb imul mov roll xlat mov cmp adc (bad) xchg es jns shll jae xchg setl inc hlt cmp fdiv xor (bad) sub scas mov pushf sub inc testl imul pushw popa in add adc xchg push cmpsl cwtl ljmp adc add mulb loopne or fldt dec xchg mov jl jns push xchg stos mov aas push or and mov mov cmp ljmp cmp dec fimul cmc cmp push jb mov cmp cmpsl inc sub mov mov jg sbb fnstsw inc (bad) nop xor inc repnz sarl inc out stos dec mov jl ficom mov lods mov mov pop int ficompl mov cmp mov mov (bad) jecxz sahf xor (bad) fdiv clc jo mov push popa leave sbb popf mov out in icebp cmp or push pop mov arpl pop ficompl cwtl jne (bad) add leave imul dec cmc xchg and ds add add mov pop incl inc mov notl enter fcoms (bad) arpl push or sub mov lods rorb pop and push incl (bad) std push cmpsb leave addr16 sub cld dec mov in jns aad add gs fldl mov rsm inc jb xchg cmpsb inc jnp ret cmpsb adc movsl sbb pop nop xor mov stos mov mov and add repnz or sbb pop mov aam jae ret pop push faddl iret outsb mov (bad) divl iret cmpsl test xchg inc fimul insl loop mov fsts xchg cmpps popa clc pop or inc sahf lods jno dec gs sbb aad dec lock xchg mov orb fldl lcall mov out lret adc xor jp jb jo movsl in mov inc je mov dec les sbb or jg adc test mov push fmull mov mov repnz xlat loope das (bad) out fstpl clc push sub mov xchg lcall jl call or stos push aas inc ja fldenv jp pop mov clc add sbb adcb lods sbb add xor dec jle jmp sbb lcall cld jmp push pop sub sti push or lcall mov icebp enter inc scas inc mov out mov int3 mov das xor adc jg pop mov (bad) or aam rcrb mov pop hlt sbb mov xchg rorb ss popl xchg push daa mov mov shrb (bad) fcomp out stc cmp cmp mov and lret out or out popa mov (bad) loopne xchg fistpl or xor test decl mov push addr16 jl clc cwtl loop (bad) shrb xchg inc test (bad) xor aaa inc cs out int enter xor pop arpl imul dec mov aam loope push xchg add sub sarl push in ljmp lahf and in bound lcall pop adc xlat js aam push (bad) xor dec push xor fmul push pop loope rcll add sub (bad) jmp mov scas pop loop xor or aam fs repnz push xlat sbb outsb shl sbb je out sbb push lods in stos jmp push call jg js loope stos imul (bad) ret xor cs pop je pop jne jne sbb mov and scas and pop sub add and in and dec sub call adcl pop jnp les insl pop data16 mov sub add lds push pusha dec (bad) pop pop cli clc mov lods pop mov add or dec stos (bad) mov out out pop sbb negb popf jle bound test sub inc loopne les fsubr xchg jne in fcompl inc and or cmp test mov mov jecxz cld movsl mov add es inc add cmp arpl pop pop xchg (bad) lock push and sub or adc mov ret mov test fsubl adc or jne cs insb aas adc aad cmc add ficom jb sahf mov sub inc xchg into sti sub mulb xchg adc xor into xchg idivl andb jb pop sahf rorl insl mov sub inc pop sbb daa rorl jecxz js das xchg dec rorb ret aad pushf pusha inc cmp cwtl psraw cmp sub fiaddl xchg in in test and or add mov jo bound or inc push loopne inc out movsb cmp loopne or push gs or jmp mov cwtl mov pop aas sbb dec sub int push sahf js jmp inc aad cli inc jg jecxz mov mov punpckldq pop je xchg mov or popa adc pop xlat mov xor popf dec int3 stos int3 pop dec rol clc and xor push xchg mov mov fcomi lea push sbb (bad) xchg cwtl mov dec lds je ljmp xchg pop xchg daa inc fistl mov or bound mov inc ljmp mov or iret xchg movlps inc (bad) jle cmpsb negb dec mov ljmp test and data16 xor into push push mov mov cmp dec and inc mov jno add pop and mov lods ss sbb es pop aas jbe scas xor or addr16 fnop xchg je test jo fcoml mov das mov xchg xchg push xor cmpsb (bad) add roll aaa aas inc mov mov ss dec dec cmp jp (bad) mov aaa lret mov dec pop cli fcomps icebp jg or xor fwait out stos not arpl enter cmpsb mov fs add jmp cli xchg xchg cmpb fisubrl ja mov adc sub and mov xchg mov pusha cmpl push pop sub xor loopne mov popl lret repnz mov lahf xor pop dec dec adc and popl popf jmp mov adc mov mov and out dec or adc clc or ja pop mov mov cmc ret insl nopl (bad) mov jo ja shrb mov fwait inc cmpsl repnz pop and daa xlat cmpsb mov lods mov or jo xor adc fwait inc add inc inc (bad) xor xor inc push push cmpsl push lret jle sbb mov test dec push scas and push (bad) mov push adc insb cmpsl rorb lods (bad) lods (bad) push cmpsb ret loope or es jae inc je,pt pop dec popf in cmc inc mov push adcl inc mov test shrl pop ret scas dec mov int mov sti mov mov sbb sbb mov (bad) stos xlat ret adc or jno cltd lods shrb jecxz or sar iret arpl adc cmp rclb out movsb sbb pop movsb adc pop jmp popa inc shrb ja adc push xor add or adc idiv loop mov xchg adc lret pop sub pop hlt popf mov in lock sti scas mov mov sub sub fldenv and sub jmp push inc dec mov dec cs iret loop gs cwtl push jmp sbb push iret pushf sub imul test stos xchg add mov bound or cmc stos sub outsl pushw and jmp popa rcrl roll and push inc mov es push xchg rcll jmp add push xor addr16 cmp fdivs xchg pushf sti outsb inc int3 sub dec mov xor cmp push add out repnz adc or jg xor pop imul or push scas xchg cmpsl bound adc mov and int3 push dec push mov jg pop pusha pop mov pop fnstcw dec push ja push sub icebp and sbb std add xchg push fwait jmp je mov outsl ret xor stc jns mov repz pop jo sti sub and sbb in fs push mov adc movsl cmpsl imul or or inc or in jno outsb jle lea movl roll push cs jno pop mov mov arpl mov and ljmp sub jg cmp cmp xor sub cmp or jb movsl fcomi mov ljmp lea popa inc in jne mov inc add push cmp insb icebp inc ror cwtl stos inc pop iret ss fcmovbe jecxz data16 (bad) fmuls gs sbb aas mov into xchg jmp inc lcall adc mov (bad) mov cld jl aam and in pusha movsl movsl loop mov add jl xchg xchg and in mov add jo insb xchg mov test inc sbb repz mov pop dec into cmp je imul sbb ljmp out mov aaa and pop and xchg jbe mov dec es adc xchg test std pop mov mov and sub aas daa (bad) pushf pop js fmull sbb mov jmp and out (bad) and clc or pusha sbb test pop xor mov out loope add xchg jge dec sub adc imulb mov add sub daa dec mov and mov adc pop mov mov adc fsubr out rolb push add push or xor inc cmp out rcl cmp mov ss pop ja,pn sti or xor rol cmp fwait mov dec jae mov nop pop push mov (bad) in dec adc adc cltd and or rorl pop mov arpl or jno push test or and fildll dec add cmp rorb adc in sub lods mov std or or subl or je sub sub pop mov (bad) std lods jg fcmovbe icebp adc pop inc icebp dec xor roll sarl add (bad) and xor xchg dec rclb es cmp pop cmp mov lret push sbbb dec xchg cmp mov push insb mov jae loope gs pop out xchg call sbb scas shrl adc jnp movsl fbstp dec sub (bad) (bad) cmpsb or lods out adcl daa pop jnp std adc dec cltd in popl aad mov out xchg push lcall nop or mov and pop mov dec (bad) sub add shrb or xlat fnstsw and dec pop sbb jecxz test xor mov cmp pop dec pop sbb or push jg push stc mov xor out add fs pop aaa jae orb add xchg daa pop rcrb lods in test cmpsb push mov inc sbb mov leave sbb xor repz (bad) inc negb pusha cmp aam loope (bad) push mov push cs popa jmp pop aam mov ja mov dec xchg mov ret sahf push add addr16 cs adc mov ljmp into push into stos mov popw pusha int xor jmp stos adc addr16 push arpl mov data16 mov fs outsl mov or fildll and movsl cmp mov ja call icebp cmp cmp incl mov adc test pop fisubl add mov out scas cmpsl inc dec adc pop lods ja ret pop dec xor mov lcall pushl mov and in pop lret repnz int inc jp lds lret lret mov jge gs jl sub das enter cld popf sub sbb jbe jo push jno sahf push cltd push and aas mov and das hlt mov mov push xchg xchg inc stos out pop je (bad) xor jmp daa xlat (bad) push cmp sbb daa pusha mov lock jg bound xor (bad) or mov test push jle fistl cmp ret sub mov push mov dec mov enter mov adc out ljmp pop push pop jae fstps sbb loopne sbb xchg pop mov std add mov rcl inc mov inc jns add ret mov xor mov shrl jb xor cld sahf loope out or dec aad dec das je stos xchg dec jmp addr16 or mov dec jmp adc test pop add jmp mov add sub inc cmc mov push clc aas (bad) shl inc xchg adc cli leave mov (bad) cmp xor xchg loop cmp loope outsb cmp out push outsl and xchg xor add leave fs rorl dec aas xchg push sub notb test cs adc cmp test movsl fmuls pusha lods mov xor or and (bad) ss mov lahf pop xor pop mov sub jae cmp insl dec lods std xchg cli add stos xchg xlat lods sbbl xorb cmp test push lods (bad) push fcoms int and pop pop adc into mov jne xchg inc add ret std rol xorb pop pop dec aam or push in inc mov push mov pop arpl push stos inc xchg push dec sub stos sbbb sti push test cmpsb cmpsl dec adc std ja mov lret outsl nop clc inc in sub idivb inc out les shll sub dec fcmove and mov inc loope inc push and movl das adc push fwait xlat xor fimull imul repz in mov inc jb jl adc jnp arpl jp stos push xchg pop pop dec fwait xor inc cmpsl inc stos sub stos jmp mov jge clc clc xchg jne pop jnp adc in pushl ucomiss add cmp inc out push pop push scas or inc fs push es cs jnp in lea xorl add push dec jno sbb sbb add mov inc cmp cmp xchg jle popa outsl in popl mov movsb rcrb cmp (bad) inc or out xchg xchg test mov push jns ljmp sbb lock dec aaa mov insl out (bad) pop mov jl xor add lods in js mov sbb incl stos cmpsl sahf inc push arpl ss jae pop add mov push lods jl fstpt repz sbb ljmp ror imul mov and adc aam add inc loope aaa or idivl add push shll loope jp pusha test xor insb aaa pop sbb jmp inc mov fcmovnu xchg or (bad) cmpsb mov int lahf push fwait mov shrl push dec jno lahf sbb out xchg ss fnsave lret push ret jl sbb sub mov popa mov mov xor mov fwait loope aam int3 clc xor testl imul rol aaa pop cmp idivl add lret mov sbb dec (bad) (bad) xor cs lret push dec or adc lods push mov stos loopne adc out sbb xchg mov sarb (bad) aas scas loopne mov imul add dec sub cld addr16 clc mov cmp fnsave insb mov mov dec xchg jbe add fldenv push xchg shrl xor jge leave pop enter mov dec xchg cmp sbb add mov ret and (bad) icebp mov data16 sbb sbb inc sub in add dec flds in jmp xchg pop push xchg cmp mov mov jge inc add lock and or sub sbb shl add (bad) fs xchg xor into lahf jge aas dec pop jmp sbb imul mov aam inc jno and xor arpl icebp scas rolb mov lock jns push test or orl inc mov cs xlat or enter imul push push outsl and ret fwait and cmp cmp or cmp xchg pop int3 cli lahf in xchg push pop fsubrs aas or sbb insb gs iret out push inc jne nop fidivrl xor jmp add pusha stos or outsb jge subl cmp arpl aam fdivl lods sbb test jmp (bad) jbe mov push or shrl lret mov mov mov loope movsb pop lods mov mov mov aas add ret test xor add imul cmpsl int3 fist rcr leave stos sub inc daa enter add dec push push or ja pusha xchg es sbb or sub arpl jno js (bad) push pop or mov testl (bad) mov push mov or daa in push mov call dec mov and pop andl bound (bad) jbe fisttpl popa sbbl ret pop or xchg jge sub push add inc pop int push scas test sti and dec lcall xlat fisubrl or mov loop push cmp cld cmp lods stos jae xor arpl sbb popl and cmp ss or imul fwait cmp int3 scas daa xor or jae sub ret mov aad xor out fistl loop sbb adc cwtl cld jne xchg aas icebp sbb aas mov add imul sub mov or fs in inc adc add xchg mov lret divb and fwait cmp xchg sub xchg rolb cmp (bad) jns adc push addr16 imul imull and push sbb (bad) (bad) jae mov cltd stc add xchg out repz hlt add mov xor iret mov in mov iret imul pushf or in adc inc inc (bad) test lock movsb psrlq lds (bad) push inc aam or add lea ja stc push nop stos ja test sbb mov jne test jae xor mov add inc sub jecxz and out cmp sub dec sub dec and mov add and ret insl mov testb adc rolb daa jp test aas mov fist xor dec movl and mov (bad) das lods sbb addr16 jb inc jmp mov sub ljmp xchg pop arpl dec jg insb and jle sbb clc faddl iret icebp outsb jl cmc mov iret pop jl xor hlt dec cmpsb pop les ret xor (bad) push imul clc mov pushl mov enter aam scas add jno add xchg (bad) dec cld cmp iret insl xchg adc repnz jp enter mov lret loope xor ljmp mov jnp xchg cmc mov sub jg ret jae outsb cmp lahf pop inc jno or mov (bad) ss dec pop xchg push pop jno addr16 lret testb jecxz test ja out bound mov push imul jecxz jl loope mov jo jmp and cli scas shll inc aam (bad) cs inc push dec or xchg cltd gs scas scas pusha aas xor add pusha cmp mov inc sbb aas add mov outsl jnp cmp mov cmp hlt stos sbb leave shlb call sbb lret in div in imul (bad) popf xchg frstor stos pusha mov and jns xor sub ja push pop fcmovnb dec imul push push pusha mov and lds out mov pop nop aas fsubs dec shll pop hlt in mov shr push push mov sahf sbb arpl addr16 (bad) or int3 cs stc std and rorl fisttpll pushf (bad) push repnz adcl sbb ret xchg arpl mov mov adc notl divl movsl fild fidivrl in nop loope (bad) inc or lret and test dec dec xchg jbe or (bad) (bad) enter pop pop push inc sbb fsubl lods aam gs pop daa jecxz aas xchg pop cmp mov sub add cmpsl push sti and inc sti js and (bad) movsl ljmp dec pop mov pop adc icebp test lahf mov xor fmulp push push mov loope test cli sbb jle xor push scas mov mov push (bad) mov sbb stos es mov push data16 fiadd test ljmp loope lcall cmp (bad) movq add sarb daa mov cmpsb sbb outsb int3 jbe adc push repnz push mov out (bad) in lods push (bad) sub int sub push loopne pop mov dec scas dec dec pop inc aaa pop mov push (bad) cmpsb daa push test hlt mov add or dec ljmp or push insl data16 jg push push dec push repnz mov xchg jbe jle xor aam notb jbe cmpl (bad) pusha jbe mov ja repnz hlt or adcb or cmp in mov jnp aaa mov or pop mov jb xor imul and inc mov and mov movsl (bad) stos sarb inc aaa je pop lods xor push fs mov push int3 push fldenv fimul pop xchg pop stos or mov xor mov inc (bad) icebp xor test addr16 xlat cmp cmp sarl and lods push push adc inc (bad) fimul sub lods add xchg mov or sub or xchg idivb cmp mov (bad) push outsb ds sub dec gs xor (bad) or sub push mov cli dec fldcw mov mov lret jo lahf push cmp fdivl pop sbb ret mov push repz ja sbb ja mov stc or sbbl das mov pusha std xchg (bad) sub sahf pop pusha inc cmp enter sbb xchg jb in cmpsl dec test mov mov dec jl pop leave outsb mov icebp add jnp xor push leave mov sbb shrl dec arpl rcrb and adc mov push addr16 lcall (bad) and mov push add loopne dec cmpsl dec (bad) jae icebp das xchg test lret sub cmpsb pushl in inc imul adc loope int3 pop outsb add loope mov jo jae data16 lods arpl mov push sbb (bad) sub xchg sar rcll mov mov sbb and std je in jecxz sbb jbe out scas iret aad pushf inc add add in push cmp push push xor fs sub add cmpsl dec sub lds enter push cmpsb pop arpl xor mov inc and bound or lret dec fcmovb inc ds in je aam xchg gs xchg mov or lahf and mov mov sbb fnstcw nop out jbe cmp orl gs sub xchg xor or push add js daa pop arpl mul xor scas cld ds stos mov aaa xchg out push pop outsb popf scas jo lahf icebp daa xchg lods arpl xchg cwtl addl aad and add and cmpsb mov mov aam inc fsubrs iret jmp cmp xor dec cmp jecxz int xchg add pop loopne xchg test ja pop pop call imul mov popf scas xchg and push loope mov fcomp rorl repz jg mov push iret adc test aad push orl mov cmp push (bad) lahf popf test mulb loope ss dec jl aas and mov flds and lret jge hlt inc add jg data16 xor push inc and mull aad insb and inc pushf stc rolb xor ja lret push lahf pop dec insl xchg outsl (bad) lock adcb sbb pop cmpsb cmc adc sbb push loopne and test inc jbe sbb cld jmp les stos shll das cld fildll iret sahf cmp sbb shr call fs lret test call dec cmp sbb mov fwait jno add and loopne es enter lahf aam pop fcmovu in jmp mov lods inc inc lret fidiv pop (bad) adc test or (bad) sbb xor lcall test pop pop dec insb pushf and dec in jae mov movsl push daa call mov pop sub xchg test inc movsl pusha add (bad) sarb jmp (bad) jg aad (bad) in dec mov jb icebp stos int3 fwait je (bad) mov inc imul dec sub mov (bad) (bad) shrl ja das ret xchg hlt lret bound sub loope clc fcomps mov or cmc xchg and nop arpl inc lahf fistp test adc addr16 int3 mov out sarl dec dec push jle test xchg sbb out cmp or (bad) add inc inc fs jmp mov (bad) ss out push stos jmp je daa dec test lds cmc xor outsb scas aaa mov sbb pop cmp jnp mov jp roll mov pop cltd and inc sub pop pop lcall xchg mov and add mov popf mov shr out rolb out and outsb (bad) (bad) (bad) cmpsl mov push xchg icebp sbb dec ret pop lea pusha jp in dec ret (bad) xor pop dec mov loope orl cld je xchg inc push and je mov mov cmp jp daa sub inc jp xchg idivl or outsl pop xor pusha jno sti fucomp dec lahf std addr16 fldl jmp das sbb cmc insl mov jp mov jecxz gs mov hlt cmp xchg es push cmp (bad) fwait jbe mov jle pop (bad) mov mov in dec lods cmc add cmp stos mov mov js imul (bad) (bad) mov sbb inc lods mov lods and push insb in jge lcall push adc popf xchg inc (bad) or mov jno xchg movsl add xchg mov xor in adc stos movsl sbb push sub pop mov xor xor sar dec add lret sub (bad) sbb inc sub inc loopne cmp adc cli fidivrl push (bad) (bad) jmp sub pop mov subl mov xchg or xlat and xor cld or cmp outsb and mov add punpcklwd out mov mov xchg cmp cmp scas (bad) std popa fucomi daa jnp dec push mov adc inc sbb cmpsb sub lods sbb jecxz adc xchg xor push scas mov fisubrl pop js lock es call ss fpatan scas push btc std sahf stos dec xchg fxtract (bad) sbb push fcomps (bad) push xchg in sub fwait clc dec xor pop xlat (bad) inc lahf sbb fildl add test push dec push in jne roll inc stos push pusha mov inc adcb xchg pusha xchg add test sub and mov jle or dec test adc (bad) and pop mov mov in scas in fmull dec pop data16 mov sbb cmp pop sahf mov push mov inc inc je mov out ljmp mov inc pop jp inc hlt lock outsl pop pop inc sub mov das lret loope xchg fs lret dec bound inc dec outsb push cmp sub je push cmp adc add cmp cld push cmp xor push ret sub or clc leave jmp aaa sbb cld or loopne jae (bad) xor sub push in ss ss insl aad sti sti xchg stc push adc pop and xlat and shll sub cs pop cmp sub pop cs (bad) or or jmp into push test dec out and xor frndint pop out imul fsubs lahf ja out pop mov sub add (bad) xor shrl sub lret jb mov nop loop enter shlb inc mov push test ljmp mov (bad) out std leave push mov frstor aas adc xor insl (bad) mov (bad) std out lret cmpsb mov push mov bound jne gs cmc sub push ljmp fisttp (bad) daa idivl mov mov data16 jbe into stc fwait cmp cmc repz mov arpl pop ficomp mov push imul xor dec lock cld loope aas mov dec dec das dec mov push sub dec imul cli inc sub divb test jp je push xchg mov dec xchg jb sbb and ret mov (bad) sub mov dec aaa and test das dec push (bad) push les bound or (bad) fstp push lret std pop lods ud2 add jns pop ljmp je jne sbb insb jns inc mov mov and out (bad) jmp pop ja jo icebp add or sbb push and xchg stos stos pop test xor sbb sub cwtl xchg add loop aam pop cmp aam sub mov jp lods decb inc sbb fistl (bad) and sub dec mov jae mov mov fldl cmp call fnstsw repnz add and xchg xchg in jne dec mov repnz (bad) mov lock enter mov nop xchg mov xchg idivl push mov data16 scas sbb jmp out jo mov xor cltd pushf ljmp or pop adc xor mov push jmp xadd cmpsl (bad) outsl adc sbb sbb push or push and fcomps shr pop dec int3 outsl and jge nop inc or ds ret shl or rcrb add (bad) testl insb (bad) push xor add cli scas sbb pop sbb or inc stos inc cmp jg (bad) ret enter loopne mov pop insb jbe sub jnp hlt or sub mov xlat int3 cmp cli adc pop stc std dec xor test testb inc lcall dec inc jecxz and loop mov or mov negb push in fsubr pusha jb (bad) hlt pushf mov icebp test ret aad dec pop cltd push int scas push or loop xlat sarb repnz or push and adc rcll cld xor out cmp jne mov mov pop fwait jge mov imul mov inc clc popa mov mov rorl loope mov or push test xchg (bad) mov loop mov es dec cmp mov jg gs mov stos stos mov push xchg data16 push packuswb jae cmp sub test stos xchg in inc int3 lahf in mov pop cltd mov movsb sti jae pushf or lahf stos out rol mov pushl jp dec mov lds sub fbstp inc ljmp pop ret aaa dec mov sbb dec cmp fwait bound pop adcb dec sub jno out mov adc das out fisttpl adc and (bad) mov pop and or mov rorl mov adc call fisttp test xor (bad) xlat jae cmp (bad) aas or mov push out dec adc jnp xorl scas (bad) out lcall add iret divl push jo and dec imul (bad) in adc xor cmp jno rolb idiv adc pushf sbb mov push sbb decl push mov out jnp shlb fdivl (bad) std push sub fistpl mov dec lcall add push mov bound push or mov and cmp inc jbe ret clc lcall mov xchg lret or push pop (bad) loope push outsb mov jbe sti mov or rcrl sbb cmp fisubr pop fs fisubr add repnz inc out sbb (bad) xchg popl in outsl aam (bad) and pop cs aam repnz sbb xchg mov in jp lahf in ljmp out mov xchg into cmp data16 xchg sub aas jmp xor jl jne cld mov inc pop sbb ficomp adc mov sbb setae lock cmp push sub adc push cltd cmp adc xchg (bad) mov or bound dec loope sar je mov movsl (bad) aad add mov enter fistpl (bad) mov fsubs xchg xchg xchg mov xor mov int xchg insl jne in test and les cmp insb sub punpckhbw cmp mov scas sbb jae sub ljmp xchg gs jnp bound hlt add jnp push testb repz loope add scas lods xchg clc sub jg push rorl inc ljmp mov out scas bound lahf xchg jmp add int3 jmp fadds or cltd push shlb sub mov (bad) das sub ret arpl insl mov loope mov ja leave (bad) inc lods jb add sbb insl jbe dec iret sbb dec mov jb dec dec add mov sub dec mov push jmp sub xchg inc pop out add xor xchg and or adc test lahf leave push mov mov or adc int3 pop in pop ja pushw dec sbb fs jo stc mov inc xor push mov dec sub fcoml (bad) shl mov frstor pop jl dec and xchg ret lods (bad) popa cmp jo lods leave push jns dec pop lcall fild inc xor jo out subl sub sub das outsb mov xchg orb inc int3 and push pop call dec xor repnz mov jg ja lods cltd lods js dec rcrb pusha mov (bad) div stc fldcw push adc adc ja pop cli pop xchg je add xor xchg cmpsl xchg enter or movb jg pop pop sbb mov out mov das sahf movsb cld mov scas add int3 iret nop icebp (bad) xlat dec adc pop repz js mov add adc inc mov sarl icebp test test cmpsl xor push in sub sahf pop repnz popf sub add or js dec xchg xchg movsb mov xchg dec fs mov push dec ss sti popf mov add and (bad) mov in fld (bad) (bad) xchg sbb sbb rorl sti mov pop or cmp shrb nop adc dec jmp mov jle mov movsb add add (bad) (bad) (bad) jmp add insl outsl insl gs imul add adc add add je add inc add add add add or push outsl insb jns outsl jb jae add or insb popa fs bound xor add or push and lret adc add incl das add add or outsb outsl addr16 jo imul add jb gs fiaddl xchg or incl xor add add add je insb popa jb xor add or popa jo imul add psubq scas pop scas add add add imul add add popa jb add push adc or incl xor add add insb imul jae add or bound imul outsb gs add pop push divps or add incl xor add push or insl gs jb outsb gs add or imul bound je add push rolb add add add add add or inc outsl insb imul add or inc outsb outsb gs jae jne jb add add or adc incl daa add add add jb data16 or inc imul gs add adc adc xchg adc add add pop add jo jb jae add or jae jo outsl jae outsl insl outsl jne add push mov adc or incl xor adc push jb fs je popa outsb fs gs cmp add or dec popa insl jo jns je outsb je add adc push add add or incl xor add or add jae data16 gs lldt jae jns imul add or xchg add add add add add je insb outsl imul or inc popa je insb imul loope inc or incl das add add popa outsb fs popa jae imul add add addr16 addr16 add add adc add add add add or bound imul jae add or inc outsl insb imul add push mov sbb movss add add or dec gs gs outsb fs add push add jae insb add add add adc add add add add str imul gs gs add or push gs imul add or add or adc add add add add add jo add or jp bound imul xchg add bound cmp adc add add add add push add jns outsb je jo fs jb add push add gs jb imul orl jp je adc add add add adc add jae arpl je outsl outsb jae imul imul gs add or push popa jo insl popa imul add or or adc incl xor add adc add jo imul add outsb outsl outsb arpl outsb je outsb xor add psubusb cmp jecxz adc add add add add insb outsl bound imul add or push outsb je arpl add pop and scas adc adc incl xor add push or push jb outsb addr16 add or je imul outsb gs add pop outsl or adc or adc add add add popa jo add push add imul add or adc push add add add add adc dec popa jb imul je jb gs gs add or jae imul outsb add adc adc add add add or pushw insl jae gs jae add or dec outsb fs imul fs add pop inc adc sbb incl xor add sbb add jns bound jo insb insb outsb add or push outsl outsl insl insb gs add add movups add add add add or jo imul xor add jne imul or fmuls add add add add add outsl gs popa outsb add or inc jb data16 fs add or sbb incl sub add sbb insl gs imul add popa data16 add push sub fisttp mov adc incl cmp add push adc dec outsl outsb gs arpl imul outsl outsb add or push jne popa fs arpl xor add push (bad) push aam aam adc add add or dec insb imul addr16 gs add or push jne jb popa insb imul fcoms xchg push sbb mov incl xor add and add outsb outsb outsl insl imul imul add jae outsl jbe jb add add mov pop add add or data16 jbe gs jae jae add or insl imul add or add sub adc add add or dec jo imul add or addr16 jne outsb add add push adc add add add add or outsb imul add push add jae outsb jbe outsb fs jae add add push call and incl das add add add je outsb xor add or insb outsl insb outsl addr16 jae gs add push cmp sbb repnz and incl add add je insb imul add adc inc jns outsl outsb outsl insl jb popa fs xor add or adc and incl cmp add es add jne gs jb popa outsb imul gs gs add or push je imul gs add push hlt add adc add add lldt push jo jb outsb addr16 gs add verw je fs arpl imul push or es add add add or push outsl gs outsl outsl fs lldt gs arpl popa je outsb xor add or (bad) or or daa add add or push jb imul fs jae add str fs outsb imul xor add or lret push adc add add add add or dec outsl insl insl outsl fs jae add add jb add add or sete adc add add add add or jae popa jb gs add str insb insb imul je gs add or adc or add sub incl sub add sub add outsb jne jne imul inc jne insb gs jae add unpckhps add adc add add add add js insb add or jo fs imul xchg add (bad) or add add add add pop add outsl addr16 insl xor add or dec jb addr16 outsb add push or sub add add or dec popa gs outsl jb push add pop add imul repnz or or adc add add add xor add popa jo outsl outsb add or inc outsb je popa insb imul add add add movups add add add add pop add jae gs add or jbe jns addr16 gs add adc adc cmpsl pop adc add add or bound imul jb add or data16 jns gs je add pop fimul push add or xor incl xor add xor add jb imul add popa jb outsb outsl jo gs popa insb add adc pop adc incl sub add xor add popa jbe outsb xor add or inc outsl jb popa outsb outsb xor add push es adc add add add add je imul imul je jb add or push outsb outsb gs jae add add adc incl xor add ss add outsl jb bound add sldt imul jo jne outsb gs add add cmp incl xor add aaa adc gs bound jae popa outsb fs insb fs add pop add fs gs add cmpps pop sub adc add add add inc add inc add out add in add add inc add add inc add inc add add add in add (bad) (bad) incl add add in add add add in add in add in add add add add add add inc mov (bad) (bad) (bad) incl add add in add add add in add in add in add add add add add add push (bad) (bad) incl add add in add add add in add in add in add add add add add add sarb (bad) incl add add in add add add in add in add in add add add add add add fsubrs (bad) incl add add in add add add in add in add in add add add add add add test inc add (bad) (bad) incl add add in add add add in add in add in add add add add add add adc add (bad) (bad) incl add add in add add add in add in add in add add add add add add jo inc add (bad) (bad) incl add add in add add add in add in add in add add add add add add js inc add (bad) (bad) incl add add in add add add in add in add in add add add add add add mov (bad) (bad) incl add add add add add lods out add add add out add in add in add add add add add add mov (bad) (bad) incl add add in add add add in add in add in add add add add add add cmp inc add (bad) (bad) incl add add in add add add in add in add in add add add add add add add add (bad) (bad) incl add add inc add (bad) (bad) incl add add add jl add inc add add inc add or int3 int3 int3 int3 jmp mov xor pop ret push mov sub push mov push mov mov call push push push mov movl mov and mov mov and mov mov mov pushl call push push lea push call call push push push push lea push push push call add lea mov lea mov movl lea push pushl call mov mov call lea push fld1 push fstps lea push call lea push push call lea call cmpl jne push push call movl jmp movl mov mov mov movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add mov mov pushl call cmpl jne push push call movl jmp movl mov mov mov mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov pushl mov pushl call mov lea call mov mov add call lea call push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov pushl call push mov pushl call mov lea call push pushl push call add lea call push push push push lea push push push call add movl movl lea push pushl call mov mov call movl movl lea push pushl call mov mov call movl movl lea push pushl call mov mov call movl movl lea push pushl call mov mov call lea push lea push call lea push push call lea push push call mov lea push lea push call lea call movl fwait push jmp lea call lea call lea push push call ret lea push push call lea mov lea push push call ret mov mov pushl call mov mov mov pop pop pop leave ret push mov push pop call movl movl andl jmp mov add jo mov mov cmp jg jmp mov mov pushl call xor leave ret call push mov push push push mov push mov push pop call push push push mov movl push push call mov movl andl jmp mov add jo mov mov cmp jg movl fildl fstpl fldl cmpl jne fdivl jmp pushl pushl call call mov jmp call movl movl lea push call fstps lea call movl movl lea push call lea call cmpl jne jmp mov add jo mov push pushl lea push call call jmp mov add jo mov push pushl call mov lea call push call push push call call lea call fwait push jmp lea call lea call ret ret xor mov mov pop pop pop leave ret call int3 int3 int3 int3 int3 int3 sahf sahf sahf sahf mov (bad) (bad) (bad) (bad) (bad) (bad) ljmp adc add lock into lock fdiv add in lock cld lock or add sub add cs add cltd add addb add add fs add push add adcb cmpb add add sbbb add add (bad) icebp add out add cld icebp add or add push repnz sub add cmp add pop add adcb add add jbe add mov add lcall add repnz lret add repnz in repnz (bad) repnz adc add and add cs inc repz push repz add andb add add jl add xchg add xchg repz cmpsb repz mov add mov repz (bad) repz add add dec push push inc push dec xor inc dec dec add add pop inc dec arpl add add pop popa fs data16 popa outsb add add pop pop jbe popa push je dec xor add add jbe popa inc jb gs popa jb add add fs imul xor add pop popa fs data16 gs xor add pop pop jbe popa push je inc popa je add pop pop jbe popa push gs jns je insl inc jb outsl jb add pop pop jbe popa dec jb jae insb je push bound add add fs imul xor add pop pop jbe popa inc jb push popa jb add pop pop jbe popa inc jb inc gs jb arpl add pop popa fs imul imul popa fs imul xor imul dec jae outsb add add pop pop jbe popa inc jb jae add add pop pop jbe popa push popa jb gs add add pop pop jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa inc jb inc outsl outsb jae jb arpl add add jbe popa push jb outsb je bound add inc insb insb inc jne arpl outsb inc popa insb insb add add fs data16 je outsb add add jbe popa push gs push inc dec push pop push dec dec dec pop push gs gs jae add add pop inc dec jae jb add add inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl add pop pop jbe popa inc js gs dec popa outsb fs gs add add fs data16 gs add add pop popa fs imul ss add add jbe popa inc push inc js gs imul pop inc dec insb outsl add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add add fs imul xor add add fs imul xor imul jbe popa push je inc outsl jo add add pop pop jbe popa dec xor je add add pop pop jbe popa inc gs inc jb xor add add fs imul xor add add pop popa fs imul add pop pop jbe popa push popa jb outsl jo add add pop pop jbe popa inc jo xor add pop inc dec popa je outsb add add jbe popa push je dec outsl jbe add add pop pop jbe popa inc jb inc outsl jo add add pop pop jbe popa dec xor jns add pop popa insb insb insl jne add add dec je outsb add add pop inc dec gs add add pop pop jbe popa inc jb gs je 