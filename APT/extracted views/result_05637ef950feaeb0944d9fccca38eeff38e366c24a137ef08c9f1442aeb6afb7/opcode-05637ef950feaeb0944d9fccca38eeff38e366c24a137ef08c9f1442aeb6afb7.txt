push mov push lea push mov call movl mov pop pop ret int3 int3 int3 int3 movl jmp int3 int3 int3 int3 int3 push mov push mov movl call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl ret int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl ret int3 int3 movl movl mov test je mov test je mov mov ret int3 int3 mov cmp je mov test je mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 mov test jne ret mov ret int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl sete ret int3 int3 int3 int3 int3 int3 cmpl jne mov jmp xor push push push add push push call mov test jne call push mov call add mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push call lea push lea push call mov mov mov xor call mov pop ret int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov movl call mov mov mov add push push lea push call movl movl jmp mov add mov cmpl jge sub mov mov lea call mov sub mov mov lea call mov lea push call mov movb lea call sub mov mov lea call mov sub mov mov lea call mov lea lea call sub mov mov mov mov call mov lea push call call movb lea call jmp call mov mov movl mov sub mov sbb mov mov mov mov andl fildll andl movl fildll fchs faddp fmull fdivl fstpl fldl fdivl call add mov movl jmp mov add mov mov imul cmp jge sub mov mov lea call mov sub mov mov lea call mov lea push call mov movb lea call sub mov mov lea call mov sub mov mov lea call mov lea lea call sub mov mov mov mov call mov lea push call call push call movb lea call jmp sub mov mov lea call mov sub mov mov lea call mov lea call mov movb lea call mov mov call movzbl test je mov call mov mov call mov mov mov movl mov add mov push mov sub mov call add mov mov mov mov mov mov lea jmp dec dec dec dec movl movb lea call movl lea call mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push push lea mov addb lea mov lea mov lea mov lea mov lea mov call mov mov push push push push call push push push push call mov call mov call push push call mov push push mov push lea push call test je mov lea mov lea push push push call test jne lea push call lea push call push push push lea push call test jne mov pop pop pop mov pop ret int3 push mov sub push mov push push movl movl movl movl movl mov call push push mov call mov mov push push movl movl movl call lea push mov call pop mov pop ret int3 int3 int3 int3 int3 int3 mov call mov ret push mov and sub mov xor mov mov mov sub push mov je sub je sub je mov mov push push push push call pop mov xor call mov pop ret mov movzwl sub je dec je mov push push push push call pop mov xor call mov pop ret push call xor pop mov xor call mov pop ret mov push push push push push call xor pop mov xor call mov pop ret lea push push call lea push push call xor pop mov xor call mov pop ret push call mov pop xor xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub je dec jne mov cmp je cmp je xor pop ret mov movzwl push push call mov pop ret int3 int3 int3 int3 push mov call mov push call add movl pop ret int3 int3 int3 int3 int3 mov mov movl mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add mov movl mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea call mov xor test je mov test je mov xor test je mov test je mov movl movl test je mov test je mov mov mov mov mov mov pop ret mov mov mov mov pop ret mov mov mov mov pop ret int3 int3 int3 int3 push mov sub lea call mov xor test je mov test je mov xor test je mov test je mov movl movl test je mov test je mov mov mov mov mov mov pop ret mov mov mov mov pop ret mov mov mov mov pop ret int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push xor cmp je lea cmp je dec mov jne mov cmp jne push mov cmp jbe lea mov dec cmp lea je mov push call add cmp ja mov pop cmp je push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call add movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor test je mov test je mov movl movl test je mov test je mov mov mov mov pop ret mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl test je mov mov mov ret int3 int3 int3 int3 int3 int3 int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor cmp sete ret int3 int3 int3 int3 int3 int3 int3 mov test je dec mov jne movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl movl test je mov mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov mov movl movl test je mov test je mov mov mov mov pop ret mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov mov sub xor test je cmp ja push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov xor push mov call add cmp je mov xor mov xor mov mov mov mov mov mov mov mov mov mov mov push push push push call mov mov mov pop pop pop mov pop ret lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov xor push mov call add cmp je mov xor mov xor mov mov mov mov mov mov mov mov mov push sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov push mov call mov mov mov pop pop pop mov pop ret lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 push mov push mov push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push sub mov mov mov mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub xor test je cmp ja push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 push mov mov push push mov call movl mov pop pop ret int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push xor push mov call add cmp je mov xor mov xor mov mov mov mov mov mov mov mov pop mov pop ret lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov mov mov ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push call add test jne mov lea push lea call push lea push movl call mov pop ret int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov lea mov movl call mov xor test je mov test je mov mov mov push mov push sub mov mov movl movl test je mov test je mov mov mov push mov call mov mov pop pop pop pop mov pop ret mov call push push call int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov xor sub mov mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov lea mov call sub mov mov mov mov mov cmp je mov cmp je mov mov mov push mov call mov mov pop pop pop pop mov pop ret mov call xor push push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov lea mov call mov mov mov sub mov lea lea mov call mov cmp sete test jne shr cmp ja movl jmp lea lea lea call cmp sete test jne mov xor test je mov test je mov lea test jne xor jmp mov mov mov shr and cmp ja sub mov mov add push mov call mov dec mov jmp mov mov cmp jae mov call cmp jb push push call mov sub sub mov mov mov push lea mov call mov mov call sub mov mov mov call call mov add mov mov push mov push lea mov call mov lea call mov mov call sub mov mov mov push lea mov call mov mov call sub mov mov mov call lea jmp movl lea lea call cmp sete test jne mov xor test je mov test je mov lea test jne xor jmp mov mov mov shr and cmp ja sub mov mov add push mov call mov dec mov jmp mov mov cmp jae jmp lea mov call cmp jb push push call sub mov mov mov call mov sub mov mov push lea mov call mov mov call mov sub mov mov push lea mov call mov mov call lea call add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov xor mov mov mov mov xor mov cmp je mov cmp je mov mov mov xor cmp je mov cmp je mov mov mov push sub mov mov mov mov cmp je mov cmp je mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov mov push call mov mov pop pop pop pop mov pop ret mov call xor push push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov mov mov ret int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push call add test jne mov lea push lea call push lea push movl call mov pop ret int3 int3 int3 int3 push mov sub push mov testb push jne mov add shr cmp ja call mov test jne mov shl mov dec push mov shr cmpl jne push call add test je mov mov mov mov and add pop je mov mov mov incl mov pop pop mov pop ret lea push lea movl call push lea push movl call int3 mov test je incl push mov shl cmp pop ja movl dec mov jne movl ret int3 int3 int3 int3 push mov sub push mov mov mov add push test jne add shr cmp ja call mov add mov push mov shr cmp ja sub mov cmpl jne push call add test je mov mov mov and add pop je mov mov mov incl pop pop mov pop ret lea push lea movl call push lea push movl call int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor test je mov test je mov mov add movl movl mov test je mov test je mov mov pop ret int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 mov xor test je mov test je mov mov dec test jne xor jmp mov mov and push mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov mov mov ret int3 push mov sub mov mov sub movl cmp jae push call mov shr cmp jae mov jmp cmp jbe mov sub cmp ja mov mov push push mov xor shr add mov mov cmp jbe cmp ja lea push call add mov cmp je mov mov add add lea lea sub add sar add add push push mov mov lea push call mov add mov add cmp ja sar mov mov mov add add push push push mov call mov add add sub je mov xor mov rep mov test je mov mov jmp lea mov sar add add push push push call mov lea sub add mov sar add add push push push call mov add lea test je xor rep mov pop pop test je push call add mov mov add mov mov pop ret lea push lea mov call push lea push movl call int3 mov test jne xor jmp mov mov mov and push mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja lea push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test jne xor jmp mov mov mov and push mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push sub mov movl movl mov mov test je mov test je mov mov mov mov mov mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea call mov mov cmp sete mov pop ret int3 int3 push mov sub lea call mov mov xor cmp setne mov pop ret push mov and mov sub test je mov test je mov test jne xor jmp mov mov push mov push test je mov test je mov test jne xor jmp mov mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push mov cmp je cmp je mov test je mov test je mov test jne xor jmp mov mov test je mov test je mov test jne xor jmp mov mov test je mov test je mov test jne xor jmp mov pushl push push push push push call mov mov mov sub add add mov mov movl movl mov test je mov test je mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push mov push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov mov mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov sub push sar lea mov push push push call add add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push xor mov rep pop ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja lea push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 mov xor cmp setne ret int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov lea mov call mov mov sub mov mov mov mov cmp je shr cmp ja movl cmp je mov lea mov push mov call inc jmp mov mov cmp jae jmp lea mov call cmp jb push push call mov sub sub mov mov mov push lea mov call mov mov call sub mov mov mov call call mov add mov mov push mov push lea mov call mov lea call mov mov call sub mov mov mov push lea mov call mov mov call sub mov mov mov call lea jmp movl jmp lea cmp je mov lea mov push mov call inc jmp mov mov cmp jae mov call cmp jb push push call sub mov mov mov call sub mov mov mov push lea mov call mov mov call mov sub mov mov push lea mov call mov mov call lea call add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea call mov mov cmp sete mov pop ret push mov mov test jne mov mov mov pop ret mov mov mov mov pop ret push mov mov mov push push push cmp je dec mov cmp je mov mov mov shr and cmp ja sub mov mov and mov mov shr cmp ja sub mov mov mov add mov mov mov mov mov mov mov mov inc mov cmp jne pop pop pop pop ret push mov push mov mov mov push mov push mov push mov push push push call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov sub pop ret int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov mov sub mov mov test je mov mov mov sub dec cmp jae push call mov mov sub add sub cmp jae mov shr or sub cmp jae movl mov jmp add mov cmp jae mov mov push lea call mov movl mov mov sub push push push mov call add add push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov call mov mov sub push push push call mov mov mov sub add add test je push call add mov add lea mov mov mov mov mov pop pop pop pop mov pop ret mov push call add push push call push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov call mov mov lea cmp je cmp je push mov call mov add add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov sub push sar lea mov push push push call add add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push xor mov rep pop ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 mov test jne mov mov mov ret mov mov mov mov ret int3 int3 int3 int3 int3 int3 mov movl movl test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov or shr sub cmp pop jae xor jmp add cmp jae mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp setne ret int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov and push mov mov mov shr push push cmp ja sub mov mov mov mov shr and cmp ja sub mov mov mov mov mov add mov add mov pop mov pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push mov push push mov sub mov sub mov mov mov cmp jbe mov mov test je mov cltd idiv mov mov test jne mov cmp jge test jle jmp mov mov mov add mov add mov mov cmp jne lea mov mov jmp mov lea mov mov mov mov jmp mov mov mov mov shr and cmp ja sub mov and mov mov mov shr cmp ja sub mov mov mov add mov mov mov add mov mov mov mov mov mov mov sub mov cmp jge mov add mov mov lea jmp mov mov sub add mov mov mov lea mov mov cmp jne mov dec mov test jg pop pop pop mov pop ret push mov mov mov sub add pop ret int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov sub add pop ret int3 push mov push sub mov mov push push push call add add pop pop ret int3 int3 int3 push mov push mov push xor push test je mov test je mov mov mov xor test je mov test je mov mov mov push sub mov mov movl movl test je mov test je mov mov sub mov mov mov movl movl test je mov test je mov mov mov mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je cmp je push mov call add sub lea pop pop ret pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push mov mov add dec jne pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 mov mov and push mov mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov and push mov mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov mov sub add pop ret int3 push mov push sub mov mov push push push call add add pop pop ret int3 int3 int3 int3 int3 push mov push mov push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov mov call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub pop ret int3 int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov push push push call add add pop pop ret int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push mov cmp je push push mov mov test jne xor jmp mov mov mov mov shr and cmp ja sub test je mov mov mov mov inc inc mov cmp jne pop pop pop pop ret int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push push mov sub mov sub mov mov mov mov test je cltd idiv mov mov test jne mov mov cmp jge test jle mov neg mov mov neg mov mov neg lea mov mov jmp nop mov lea mov cmp jne mov mov neg movzbl mov movzbl mov mov mov lea mov mov cmp jge add add jmp sub mov add sub add add add mov mov cmp jne mov dec dec mov mov test jg pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub add pop ret int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov pop ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov mov lea lea mov inc test jne sub pop ret int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov mov movsbl mov push push push call add pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 push mov push push mov push sub push push mov xor push lea mov xor mov mov mov mov movl mov movb xor mov cmp je jmp mov mov mov sub mov add add mov cmp jne mov mov and shl shr mov mov mov mov and add shr add mov mov lea mov mov shr add and mov mov mov mov cmp jae lea mov movzbl mov mov or sub cmp jbe lea cmp ja mov cmp jae push push mov call mov jmp test jne mov cmp jb mov jmp mov movb test setne test je mov cmp jb mov jmp mov mov mov cmp jb mov jmp mov movb mov inc mov cmp jl xor xor cmp jne cmp je cmp jge mov sub push lea push push call add mov mov and shl shr mov mov mov mov and add shr add mov lea mov mov shr and mov lea add xor mov mov cmp jle cmpl mov jae lea movzbl mov mov mov or sub cmp jbe lea cmp ja mov cmp jae push push mov call jmp push call test jne mov cmp jb mov jmp mov movb test setne test je cmpl mov jb mov jmp mov mov mov cmpl mov jb mov jmp mov movb mov inc lea mov cmp jl cmp jge mov or sub inc cmp jbe lea cmp ja mov cmp jae push push mov call jmp test jne mov cmp jb mov jmp mov movb test setne test je cmpl mov jb mov jmp mov mov mov cmpl mov jb mov jmp mov movb cmp jl cmpl jb mov push call add mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor cmp je inc cmp jl ret int3 int3 int3 cmpl jne mov ret xor ret int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl sete ret int3 int3 int3 int3 int3 int3 push mov sub cmpl je xor mov pop ret mov push push mov mov add xor mov mov test je mov mov dec cmp je mov inc inc mov cmp jne xor lea mov xor cmp je inc cmp jl mov inc cmp jl mov mov add mov shr add and add mov mov mov shr mov shl and xor mov shl add mov mov mov mov add mov mov xor test jne test je cmp jge mov sub push lea push push call add xor mov xor cmp je inc cmp jl mov inc cmp jl mov mov add mov shr and add add mov mov mov shr mov shl add and shl xor dec mov mov test jle mov push lea push push call add add mov mov sub pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov cmpb mov movl jne lea dec cmpb je mov mov lea rep xor mov lea rep test je lea movzbl incl lea inc cmp jb xor xor xor lea mov cmpl jne mov cmp jbe lea lea cmpl jne mov cmp jbe lea lea cmpl jne mov cmp jbe mov mov cmpl jne mov cmp jbe lea lea add lea add cmp jb mov sub inc mov cmp jb mov xor xor mov mov mov mov mov jmp mov or sub cmp jbe lea cmp ja cmp jae push push lea call mov test je mov mov cmp jae lea mov mov mov cmp jae lea movb mov inc cmp jb mov xor lea mov mov mov cmp je cmpl jb mov push call add mov mov mov cmpl jae mov inc push lea push push call mov mov add mov mov jmp test jne mov mov cmp jae lea movb jmp push call mov mov mov mov mov mov jmp cmpl jb mov push call add mov mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov mov xor mov mov mov movl push mov mov mov push mov mov call mov push sub mov mov push push lea mov mov push movl mov call cmpl mov jae lea mov push push lea call add mov mov mov mov mov mov movl cmp jae lea mov push lea push or mov movb call movb cmpl jb mov push call add push lea push or mov call push lea push or call mov push push mov call mov cmp jb mov push call add movl mov mov cmp jb mov push call add movl mov mov cmp jb mov push call add mov mov mov pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add cmp jbe nop mov xor inc cmp jb pop ret int3 int3 push mov push mov mov mov mov xor xor xor mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov xor xor xor mov mov mov add js mov xor dec jns mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push movl movl push mov movb call mov ret mov movl movl movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push movl movl mov movb call mov ret int3 int3 int3 push mov mov push mov mov push movl movl movb lea mov inc test jne sub push push mov call pop mov pop pop ret int3 int3 int3 int3 int3 int3 push mov movl movl movb call mov pop ret int3 int3 int3 push mov cmpl jb mov push call add movl movl movb pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push push or call ret int3 int3 int3 int3 push push call ret int3 int3 int3 int3 int3 int3 int3 cmpl jb mov add ret int3 int3 int3 int3 int3 cmpl jb mov ret int3 int3 int3 int3 int3 int3 int3 cmpl jb mov ret int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp je cmpl jb mov push call add movl movl movb cmpl jae mov inc push push push call add jmp mov mov movl mov mov mov mov movl movl movb mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push push or call ret int3 int3 int3 int3 push mov push mov push mov mov or sub cmp ja push call test je push lea cmp jbe push call mov cmp jae push push mov call test je mov mov push push push mov call cmpl mov jb mov movb pop mov pop pop pop ret test jne mov cmp jb mov pop movb mov pop pop pop ret pop mov pop movb pop pop ret mov movb pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov push mov cmp jae push call mov sub cmp jae mov cmp jne push add push mov call push push mov call pop mov pop pop pop ret cmp jbe push call mov cmp jae mov push push mov call mov test je mov cmp jb mov cmp jb mov jmp test jne mov cmp jb mov pop movb mov pop pop pop ret pop mov pop movb pop pop ret mov push add push push call add cmpl mov jb mov movb pop mov pop pop pop ret mov movb pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov test je mov cmp jb mov jmp mov cmp jb cmp jb mov jmp mov mov add cmp jbe cmp jb mov mov push sub push push mov call pop pop pop ret mov mov push sub push push mov call pop pop pop ret push mov cmp jbe push call mov cmp jae mov push push mov call test je cmpl jb mov jmp test jne mov cmp jb mov pop movb mov pop pop pop ret pop mov pop movb pop pop ret mov push push push call add cmpl mov jb mov movb pop mov pop pop pop ret mov movb pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push lea lea mov inc test jne sub push push call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpb push push mov mov je cmpl jb push mov test je push push push call add push call add pop mov movl movb pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmpl jb mov ret int3 int3 int3 int3 int3 mov cmpl jb mov ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push call ret int3 int3 int3 int3 int3 push mov mov push mov mov mov cmp jae push call sub cmp jae mov mov or sub cmp ja push call test je push lea cmp jbe push call mov cmp jae push push mov call mov test je mov mov cmp jb mov cmp jb mov jmp test jne mov cmp jb mov pop movb mov pop pop ret mov pop movb pop pop ret mov add mov push push add push call add cmpl mov jb mov movb pop mov pop pop ret mov movb pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push cmp jae push call mov sub cmp jae mov test je mov push cmp jb mov jmp mov cmp jb mov jmp mov sub add push add add push push call mov add sub cmpl mov pop jb mov movb pop mov pop pop ret mov movb pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jne cmpl jb mov mov mov mov pop ret cmpl jb mov add push movsbl push push call add pop ret int3 int3 push mov cmpl mov mov jb mov movb pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov cmp jbe push call mov cmp jae mov push push call xor cmp sbb pop neg pop pop ret cmpb je cmp jae push mov cmp jae mov cmp jb mov test je push push push call add push call mov add mov movl xor movb cmp pop sbb pop neg pop pop ret test jne mov cmp jb mov movb xor cmp sbb pop neg pop pop ret int3 int3 int3 int3 int3 push mov push mov test je mov cmp jb mov jmp mov cmp jb cmp jb mov jmp mov mov add cmp jbe mov pop pop ret xor pop pop ret int3 push call int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 push push push call ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov mov mov or cmp jbe mov jmp mov mov mul mov shr shr cmp jbe mov sub lea cmp jbe mov xor lea mov cmp jbe cmp ja push call add test je mov jmp lea push lea movl call push lea push movl call mov mov mov inc mov push add movb call mov mov ret mov mov mov test je cmpl jb mov jmp mov push push mov push call add cmpl jb mov push call add mov movb mov mov mov cmp jb mov movb mov mov pop pop pop pop mov pop ret mov cmpl jb mov push call add push movl movl push movb call int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub fldl fstpl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push sub fldl fstpl call add pop ret int3 int3 int3 int3 int3 int3 push mov mov push sub fldl fstpl call add pop ret int3 int3 int3 int3 int3 int3 push mov sub fldl fstpl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push sub fldl fstpl call add pop ret int3 int3 int3 int3 int3 int3 push mov mov push sub fldl fstpl call add pop ret int3 int3 int3 int3 int3 int3 push mov sub push push mov mov mov xor mov repz je sbb sbb mov mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov movsbl push mov push call add pop ret int3 int3 int3 int3 push mov mov movsbl mov movsbl xor cmp sete mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov movzbl pop ret int3 int3 int3 int3 int3 push mov mov mov mov xor cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call mov cmp je mov mov mov jmp call neg sbb add mov mov mov pop ret push mov or pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov or pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov xor mov pop ret int3 int3 int3 int3 push mov or mov pop ret int3 int3 int3 push mov or or pop ret int3 int3 int3 int3 int3 push mov flds pop ret int3 int3 int3 int3 int3 push mov fldl pop ret int3 int3 int3 int3 int3 push mov fldl pop ret int3 int3 int3 int3 int3 push mov fldl pop ret int3 int3 int3 int3 int3 push mov fldl pop ret int3 int3 int3 int3 int3 push mov fldl pop ret int3 int3 int3 int3 int3 push mov fldl pop ret int3 int3 int3 int3 int3 push mov fldl pop ret int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 int3 int3 push mov push mov lea push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov lea push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov lea push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push mov call movl mov add call movb mov add call movb mov add call movb mov add call movb cmpl jne push lea call push lea push call mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov movl mov push call add movb mov add call movb mov add call movb mov add call movb mov add call movl mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov sub mov call mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push mov call mov pop ret push mov push mov mov mov pop ret push mov push mov mov mov pop ret push mov push mov mov push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl jne push lea call mov cmpl jne mov add mov mov mov mov lea call mov mov mov pop ret int3 int3 push mov sub mov push lea call mov cmpl jae mov mov add mov mov lea call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push lea call mov cmpl jbe mov cmpl jae mov mov sub mov mov mov mov neg sbb not and mov lea call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call mov mov call mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov call mov mov mov cmpl je push mov mov mov mov call mov jmp movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov mov call mov mov mov cmpl je push mov mov mov mov call mov jmp movl mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov add call push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp jae mov mov mov mov mov mov jmp movl mov mov cmpl jne mov mov movzbl test jne mov jmp jmp call mov mov mov cmp jae mov mov mov mov mov jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov movl mov mov mov cmp je lea push mov call mov mov mov movl mov or mov push mov call test je lea push mov call mov mov mov movl mov or mov lea push mov call mov mov mov movl mov or mov mov push mov call test je movl jmp movl mov mov movl mov and je andl lea call movl mov and je andl lea call movl mov and je andl lea call mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call movzbl neg sbb add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov call mov pop ret int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov movzbl mov mov movswl movswl and neg sbb neg mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movzbl push mov mov mov mov call mov pop ret int3 push mov push mov movzbl push movzbl push mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov movl mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov movl cmpl je mov cmpl jne push call add mov movl cmpl je mov call push lea call mov mov or mov push mov push mov call mov jmp movl mov mov movl mov mov mov mov and je andl lea call mov mov mov pop mov pop ret int3 int3 int3 int3 push mov push mov mov movl mov call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov add mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl jle mov mov push call add jmp mov cmpl jge mov mov mov mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add push movzbl push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov jmp mov add mov mov cmp je mov add push mov movzbl push call add mov mov jmp mov mov pop ret push mov push mov mov add push movzbl push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov jmp mov add mov mov cmp je mov add push mov movzbl push call add mov mov jmp mov mov pop ret push mov push mov mov mov pop ret push mov push mov mov sub push mov push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret push mov push mov mov sub push mov push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov movl mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov mov push mov push mov call mov movl mov mov pop ret int3 push mov push mov mov call movzbl neg sbb not and mov pop ret int3 push mov sub mov mov and mov mov mov mov mov and jne jmp movzbl test je push push call jmp mov mov mov and and je push lea push call add push push lea call push lea push call jmp mov mov mov and and je push lea push call add push push lea call push lea push call jmp push lea push call add push push lea call push lea push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call neg sbb add mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov call and neg sbb neg mov pop ret int3 int3 int3 int3 push mov push mov mov and mov mov mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov and mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov not mov and mov mov mov pop ret int3 int3 push mov push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push push mov push sub mov xor push lea mov mov movl mov mov push lea call movl mov push mov mov call push mov call lea push mov call mov or mov movl lea call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov push call add mov pop ret push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov movl mov movl mov movl mov movl mov movl movl mov movl movl mov movl mov movl push mov call push call add mov cmpl je mov call mov jmp movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov jmp mov mov mov cmpl je mov mov push mov push mov push mov mov call add jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov movl mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov call mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov add call mov movl mov movl mov movl mov mov pop ret push mov push mov mov movl mov add call mov pop ret int3 push mov push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov lea call movl mov add call mov cmpl je lea push mov mov mov mov call mov mov mov movb mov push lea call movb lea call mov mov mov mov mov mov mov mov mov mov mov mov lea push mov add call movl lea call mov mov pop mov pop ret int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov movl mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov cmpl je push mov mov mov mov call mov jmp movl mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add or lock dec jne mov mov mov mov call mov call mov pop ret push mov push mov mov add or lock dec jne mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov cmpl je mov mov call mov pop ret int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov movl mov mov pop ret int3 push mov push mov mov mov pop ret push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov movl mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov movl mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov movl mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov movzbl and je mov push mov push lea call mov mov mov movl mov push call movl lea call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov call mov movl mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret push mov push mov mov movl mov call mov pop ret int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret int3 int3 push mov fldl pop ret int3 int3 int3 int3 int3 push mov push push mov push push sub mov xor mov push push push push lea mov mov push push lea call movl movb sub fldl fstpl sub fldl fstpl lea call sub fldl fstpl sub fldl fstpl lea call sub fldl fstpl sub fldl fstpl lea call sub fldl fstpl sub fldl fstpl lea call sub fldl fstpl sub fldl fstpl lea call sub fldl fstpl sub fldl fstpl lea call sub fld1 fstpl sub fldl fstpl lea call sub fldl fstpl sub fld1 fstpl lea call sub fldl fstpl sub fld1 fstpl lea call sub fldl fstpl sub fld1 fstpl lea call sub fldl fstpl sub fld1 fstpl lea call sub fldl fstpl sub fldl fstpl lea call push flds fstps push flds fstps lea call push flds fstps push flds fstps lea call push flds fstps push flds fstps lea call push fld1 fstps push flds fstps lea call sub fldl fstpl sub fldl fstpl lea call sub fldl fstpl sub fldl fstpl lea call fldl fstpl movl sub mov mov push lea push call mov sub mov mov push lea push call lea call fldl fstpl movl sub mov mov push lea push call mov sub mov mov push lea push call lea call movl sub mov mov push push call mov sub mov mov push lea push call lea call push push mov mov lea call push push lea call lea test je lea add mov jmp movl lea push lea push lea push call add mov mov push mov push call add mov push mov call fldl fstpl lea test je lea add mov jmp movl lea push lea push lea push call add mov mov push mov push call add mov push mov call fldl fstpl lea test je lea add mov jmp movl push lea push lea call mov mov push lea push lea push call add mov mov push mov push call add mov push mov call lea test je lea add mov jmp movl push push lea call mov mov push lea push lea push call add mov mov push mov push call add mov push mov call sub fld1 fstpl sub fldz fstpl lea call sub fld1 fstpl sub fldl fstpl lea call sub fldl fstpl sub fldl fstpl lea call jmp lea test je lea add mov jmp movl push mov mov mov mov call push mov push call add mov call movl mov ret movl movl movl lea call mov mov mov pop pop pop pop mov xor call mov pop ret int3 int3 push mov push mov mov add call mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call push mov mov push push mov call mov pop ret push mov push mov mov push call add push mov push mov mov push push mov call mov pop ret int3 push mov push mov mov movl mov movb mov mov pop ret int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov jmp mov add mov mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov movl mov pop ret int3 push mov push mov mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push sub push push push mov xor push lea mov mov mov movl mov push lea call movl lea call cmp jne mov or mov jmp movb movzbl push mov mov mov add mov call mov call mov mov mov call mov lea push lea push call add movzbl test je mov or mov jmp push push mov mov mov add call movl mov ret movl push mov push mov mov mov add call mov mov movl lea call mov mov mov pop pop pop pop mov pop ret push mov sub mov movl mov mov mov add mov call movzbl test jne mov mov mov add call mov call cmp jne mov or mov push mov push mov mov mov add call mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov movl mov call mov pop ret int3 int3 int3 int3 push mov push mov cmpl je movzbl push mov call or push mov call mov pop ret int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov movl mov pop ret int3 push mov push push mov push push mov xor push lea mov mov mov push mov call movl movzbl push mov mov call mov mov movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl neg sbb neg sub mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov add call test je mov mov mov mov mov add call mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov movl mov mov mov mov mov cmpl je push mov call mov jmp movl mov add call mov pop ret int3 int3 int3 int3 push mov sub mov mov call mov mov cmpl jl jg cmpl jbe mov call push call add mov jmp mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov cmpl jl jg cmpl jbe mov call push call add mov jmp mov call mov call mov lea push lea push call add movzbl test je call mov jmp mov call mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor xor mov pop ret int3 push mov push mov call mov pop ret push mov sub mov mov mov mov mov call mov call mov lea push lea push call add movzbl test je call mov jmp mov call push call add mov mov mov pop ret int3 int3 int3 push mov sub mov movl movl cmpl jl jg cmpl jbe mov call mov mov cmpl jl jg cmpl jbe mov cmp jg jl mov cmp jae mov mov mov mov mov push mov call push mov push call add mov add mov mov add mov adc mov mov mov sub mov sbb mov mov mov push mov call jmp mov mov mov mov call mov call mov lea push lea push call add movzbl test je jmp jmp lea push call add mov mov mov add mov mov add mov adc mov mov mov sub mov sbb mov mov jmp mov mov mov pop ret int3 int3 int3 push mov sub mov movl movl cmpl jl jg cmpl jbe mov call mov mov cmpl jl jg cmpl jbe mov cmp jg jl mov cmp jae mov mov mov mov mov push mov push mov call push call add mov add mov mov add mov adc mov mov mov sub mov sbb mov mov mov push mov call jmp mov push call add push mov mov mov mov call mov call mov lea push lea push call add movzbl test je jmp jmp mov add mov mov add mov adc mov mov mov sub mov sbb mov mov jmp mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret push mov push mov xor mov pop ret int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov mov pop ret push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov movl mov add call movl mov or mov push mov add push mov call movl mov mov mov mov movl mov push mov add call movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov mov mov mov mov movl movl mov sub call movl mov sub call mov mov pop mov pop ret int3 int3 int3 push mov push mov mov mov mov mov movl mov call mov sub call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov mov mov and je mov call test je mov call mov cmp jae mov call push mov mov push mov call push mov call call mov lea push lea push call add movzbl test je lea push call add jmp jmp mov call test je mov call mov mov call cmp jae lea push call add mov mov call mov mov jmp jmp mov mov and je call jmp jmp mov call test jne movl jmp mov call mov mov call sub mov mov mov mov mov mov shr cmp jae movl jmp mov shr mov mov mov cmpl jbe mov sub cmp jae mov shr mov jmp cmpl jne call jmp mov add mov mov push mov add call mov mov call mov cmpl jbe mov push mov push mov push call add cmpl jne mov mov mov mov add push mov push mov call mov mov and je mov push push mov push mov call jmp mov add push mov push mov push mov call jmp mov mov sub add mov mov mov add push mov call sub add push mov call sub add push mov call mov mov and je mov push push mov push mov call jmp mov call add push mov call sub add push mov push mov call mov mov and je mov push mov push mov add call mov mov or mov mov lea push call add mov mov call mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov mov call test je mov call mov mov call cmp jbe call mov lea push lea push call add movzbl test jne lea push call add mov mov call sub push lea push call add movzbl test jne mov mov and je call jmp jmp push mov call call mov lea push lea push call add movzbl test jne lea push call add mov mov call mov lea push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov call test jne call jmp jmp mov call mov mov call cmp jae mov call push call add jmp jmp mov mov and jne mov call test je mov call mov mov call cmp ja mov call mov cmp ja call jmp jmp mov call mov cmp jae mov call mov mov mov mov push mov call push mov call push mov call mov call push call add pop mov pop ret int3 push mov sub push mov mov call test je mov call mov cmp jae mov call mov mov mov and je mov call test je cmpl jne mov call mov mov sub mov cltd add adc mov mov jmp cmpl jne mov and jne mov call mov mov call sub mov cltd add adc mov mov jmp cmpl je mov mov mov mov cmpl jl jg cmpl jb mov call mov mov sub mov cltd mov mov mov cmp jg jl mov cmp ja mov call mov mov call sub mov cltd add adc push mov call mov and je mov call test je mov call push mov call push mov call push mov call jmp mov mov mov mov jmp mov and je mov call test je cmpl jne mov call mov mov sub mov cltd add adc mov mov jmp cmpl jne mov call mov mov call sub mov cltd add adc mov mov jmp cmpl je mov mov mov mov cmpl jl jg cmpl jb mov call mov mov sub mov cltd mov mov mov cmp jg jl mov cmp ja mov call mov mov call sub mov cltd add adc push mov call jmp mov mov mov mov jmp mov or je mov mov mov mov mov push mov push mov call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov lea call mov mov mov call test je mov call mov cmp jae mov call mov mov mov cmp jne mov cmp jne jmp mov and je mov call test je cmpl jl jg cmpl jb mov call mov mov sub mov cltd mov mov mov cmp jg jl mov cmp ja mov call mov mov call sub mov cltd add adc push mov call mov and je mov call test je mov call push mov call push mov call push mov call jmp mov mov mov mov jmp mov and je mov call test je cmpl jl jg cmpl jb mov call mov mov sub mov cltd mov mov mov cmp jg jl mov cmp ja mov call mov mov call sub mov cltd add adc push mov call jmp mov mov mov mov jmp mov mov mov mov mov push mov push mov call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov fldl fstpl mov fldl fstpl xor mov lea push lea push mov add push mov push push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov fldl fstpl mov fldl fstpl xor mov lea push lea push mov add push mov push push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov fldl fstpl mov fldl fstpl xor mov lea push lea push mov add push mov push push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov fldl fstpl mov fldl fstpl xor mov lea push lea push sub fldl fstpl sub fldl fstpl push call add mov mov pop ret int3 push mov sub mov mov flds fstps mov flds fstps xor mov lea push lea push mov add push mov push push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov fldl fstpl mov fldl fstpl xor mov lea push lea push mov add push mov push push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call lea push mov add call lea call xor mov lea push lea push mov add push mov push push call add mov mov xor call mov pop ret int3 int3 push mov sub mov mov fldl fstpl mov fldl fstpl xor mov lea push lea push sub fldl fstpl mov push call add xor mov lea push lea push sub fldl fstpl mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov sub call mov and je mov sub push call add mov sub mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov sub call mov and je mov sub push call add mov sub mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov sub call mov and je mov sub push call add mov sub mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov sub call mov and je mov sub push call add mov sub mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov add call mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov add push mov call mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov cmp jae mov call mov mov sub cmp jae mov mov sub mov mov cmp jae mov mov jmp mov mov mov push mov push mov call add push call add mov cmpl je mov mov jmp mov cmp jae movl jmp mov xor cmp setne mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov push call add mov movl mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl jne mov or mov jmp mov mov movzbl push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov call mov movl mov mov pop ret int3 push mov push push mov push push sub push push push mov xor push lea mov mov mov mov mov mov add mov call movzbl test je mov mov mov add call test je mov mov mov add mov call mov call movzbl test jne mov mov mov add call and je lea push mov mov mov add call mov mov mov movl mov push call add mov movl lea call movl mov mov mov add call mov call mov mov mov jmp mov mov mov add call mov call mov mov mov call mov lea push lea push call add movzbl test je push push mov mov mov add call jmp jmp lea push call add movzbl push push mov call movzbl test jne jmp jmp jmp push push mov mov mov add call movl mov ret movl mov mov mov add mov call movzbl test je mov jmp push push mov mov mov add call xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov add mov call test je mov mov mov mov mov add call mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov cmpl jl jg cmpl jbe mov call push call add mov jmp mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov cmpl jl jg cmpl jbe mov call mov mov mov mov mov push call add mov jmp lea push call add push mov mov mov mov call mov mov mov pop ret int3 push mov push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov add mov mov pop ret int3 int3 int3 push mov push mov mov mov mov sub mov mov mov mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov sub mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov add mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov sub mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov cmpl je mov mov mov mov jmp movl mov cltd mov pop ret push mov push mov mov mov mov sub mov mov mov mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov sub mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov sub mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov sub mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov cmpl je mov mov mov mov jmp movl mov cltd mov pop ret push mov push mov mov call mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov mov mov mov mov call movzbl test je mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov movl mov add call movl mov or mov push push mov push mov call movl push push push mov add call mov mov mov mov movl movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov mov call movl mov movl mov add call mov push mov call push push push mov call movl mov mov mov pop mov pop ret int3 int3 int3 push mov sub mov mov mov and je mov call test je mov call mov jmp mov call mov mov call mov sub push mov call push mov add call push push push mov call push push mov call mov movl mov mov and mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov mov push mov call movl mov mov mov add call movzbl test je mov mov mov add call test je mov mov mov add mov call mov call mov mov mov add mov call mov mov movl mov mov mov pop mov pop ret push mov push push mov push push mov xor push lea mov mov movl call movzbl test jne mov mov call movl mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl neg sbb neg sub mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov movl movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov cltd mov add adc mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov cmp jae mov call mov mov sub cmp ja mov call cmpl jbe mov mov add mov push mov push mov call movzbl test je mov mov sub push mov call add push mov call add add push call add movzbl push mov push mov push mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jne movl jmp lea push lea call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov mov mov mov movl movzbl test je cmpl jne movl jmp mov mov mov add mov mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push push push push mov xor push lea mov mov mov movl mov mov mov add mov call and je mov call jmp movl mov ret movl mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov mov mov mov movl mov movl movl movzbl push mov push mov mov mov add mov call movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov movl mov add call movl push call add mov cmpl je mov call mov jmp movl mov mov mov mov call movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov movl mov mov mov cmpl je mov mov and cmp je mov push mov add call mov mov push mov push mov push call add mov add mov mov mov mov and jne mov add push mov push mov push mov call mov mov and jne mov mov and je mov add mov jmp mov mov mov add push mov push mov push mov call mov call test jne mov push push mov push mov call mov mov or mov mov mov pop ret int3 int3 int3 push mov sub mov movl mov and jne mov or mov mov and jne mov or mov mov and je mov or mov mov and je mov or mov mov mov pop ret int3 int3 int3 push mov push mov xor mov mov mov mov mov mov mov mov mov mov mov mov movl mov movb mov movl mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov rep mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push mov call mov mov pop ret push mov sub mov mov mov mov mov push lea call mov mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov add mov call test je mov mov mov mov mov add call mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov add call test je mov mov mov mov mov add call mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov mov mov mov movl push mov call mov mov mov cmpl jne push push mov call movzbl test je mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add mov mov mov add mov mov mov add mov mov mov add mov mov mov add mov mov mov add mov mov push push mov call push push push mov call mov pop ret int3 int3 int3 push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov push mov mov push mov call mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov mov mov sub mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov lea push mov call mov mov mov movl mov push call add mov movl lea call movzbl push mov call mov mov pop mov pop ret push mov push mov mov mov add mov mov mov mov pop ret int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 push mov push push mov push sub mov xor push lea mov push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne push lea call push lea push call jmp mov mov mov mov mov mov mov call mov call mov mov movl lea call mov mov mov pop mov pop ret int3 int3 push mov push mov push call add mov mov mov push call add mov mov mov lea push call add mov mov mov mov pop ret int3 push mov push push mov push sub mov xor push lea mov mov push call add mov push lea push call add mov mov mov movl mov push lea push call add push lea push call movl lea call mov mov pop mov pop ret int3 int3 int3 push mov push mov push mov push call add push push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add fstpl mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push lea push mov call lea push mov call movl push lea push lea call xor mov lea push lea push sub mov mov push call lea push mov call push lea push mov push call add movzbl test jne lea push mov call mov jmp xor mov movl lea push sub mov lea push call sub mov push lea push mov push lea push call add push mov call sub mov lea push call lea push call add push mov push lea push lea push call add push lea push lea push call add push lea push call add push lea call lea push mov call mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov mov mov add mov call mov mov mov mov mov add mov call push mov push mov push lea push mov call movl mov mov mov add mov call mov mov lea call xor mov mov mov cmp jl jg mov cmp jbe mov mov mov add call mov mov mov mov add mov call and je movzbl push lea call xor mov sub mov sbb push lea call jmp movzbl push lea call xor mov sub mov sbb push push lea call lea push mov push call add mov movl lea call mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call push mov push mov push call add mov mov xor call mov pop ret push mov push push mov push push sub push push push mov xor push lea mov mov movl mov push call add xor mov mov mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call mov mov mov cmp jl jg mov cmp jbe mov mov mov add call sub sbb mov mov jmp movl movl mov mov mov mov mov push lea call movl lea call cmp jne mov or mov jmp movb mov mov mov add call and cmp je jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov add mov call movzbl push mov mov mov add call mov call mov mov mov call mov lea push lea push call add movzbl test je mov or mov jmp jmp cmpl jne mov push mov push mov push mov mov mov add call mov call mov mov mov cmp jne mov cmp je mov or mov cmpl jne jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov add mov call movzbl push mov mov mov add call mov call mov mov mov call mov lea push lea push call add movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call movl mov ret movl push mov push mov mov mov add call mov mov movl lea call mov mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov push call add movzbl test je mov push mov push mov push mov push call add movzbl test je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov push call add movzbl test je mov push mov push mov push mov push call add movzbl test je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov push call add movzbl test je mov push mov push mov push mov push call add movzbl test je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push sub fldl fstpl mov push call add movzbl test je mov push mov push sub fldl fstpl mov push call add movzbl test je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov push call add movzbl test je mov push mov push mov push mov push call add movzbl test je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov push call add movzbl test je mov push mov push mov push mov push call add movzbl test je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov push call add movzbl test je mov push mov push mov push mov push call add movzbl test je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov fldz fcompl fnstsw test je sub fldl fstpl call add movzbl test jne mov push lea push push mov push call add mov fstpl xor jmp mov pop ret int3 int3 int3 push mov sub fldl fstpl call add movzbl test jne mov push lea push push mov push call add mov fstpl xor jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov add push mov add call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov add call mov pop ret int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl cmpl jne movl jmp mov mov mov mov lea mov mov push mov add call movl mov or mov mov push mov call mov movl mov movl mov mov mov mov movl mov mov mov mov movl movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov push mov call movl cmpl je mov add mov jmp movl mov push mov add call mov movl mov movl movl mov mov mov pop mov pop ret push mov push mov mov push mov call mov movl mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 push mov push mov mov push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push mov push mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add push mov call mov mov pop ret int3 push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov sub mov movl mov push mov push mov push mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov xor mov mov mov mov mov mov mov mov mov mov mov mov movl mov movb mov movl mov movl mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov add call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov movl cmpl je xor mov push movzbl push mov sub push mov call mov jmp movl mov mov movl mov mov cmpl jne movl jmp mov mov mov mov lea mov mov mov mov pop mov pop ret push mov sub mov push mov sub push lea call push lea push call mov pop ret int3 int3 int3 int3 push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl push mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov cltd pop ret int3 int3 int3 int3 int3 push mov push mov xor mov mov mov mov mov mov mov mov mov mov mov mov movl mov movb mov movl mov movl cmpl jg jl cmpl jae mov neg mov adc neg push push mov call mov call jmp mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov mov movl mov call movzbl test je mov call movzbl test je push mov call mov or mov mov jmp jmp mov and je push mov call mov or mov mov jmp jmp push mov call mov or mov mov jmp jmp mov call movzbl test je push mov call mov or mov mov jmp lea call movl mov mov mov mov mov call mov mov or jne movl movl mov and je mov add cltd add adc mov mov jmp mov and je mov add mov adc mov mov movl push push mov push mov push call add adc mov lea push lea push call add mov mov push mov call push lea push call add mov mov mov movb mov push lea call movb lea call movl jmp mov add mov mov cmp jae push push lea call movb lea test je lea add mov jmp movl mov push mov call mov push push lea push call add push push push lea push call add push mov push call add push call add mov call lea push lea call mov mov mov movb mov lea call movb lea call movb lea call jmp movb mov or jne mov add cltd mov sub mov sbb mov mov push mov push push lea call movb cmpl jg jl cmpl jae push lea call mov call movzbl test je push push push lea call mov call movzbl push mov push mov cltd mov sub mov sbb sub sbb push push push push lea push call add lea mov call mov or mov movl lea call mov jmp jmp lea call cmp jbe mov lea call movsbl sub mov cmpl sbb add mov cmpl jne mov sub mov sbb lea call movsbl sub mov mov and jne mov add mov adc push push lea call cmp jne movb mov mov jmp mov add mov mov call cmp jae mov push mov call cmpl je movb jmp jmp movzbl test je movb push mov push lea call movzbl test je lea call sub mov cmpl je mov push lea call movsbl sub cmp jne mov push lea call movb mov sub mov jmp cmpl jne mov push lea call movsbl sub cmp jne mov push lea call movb mov add mov jmp mov push lea call mov mov mov add mov mov jmp mov lea call mov mov mov add mov mov movzbl test je mov sub mov sbb lea call movsbl cmp je mov add mov mov sub mov sbb push push lea call jmp mov push push lea call mov call movzbl test je push push push lea call mov call movzbl push mov push mov push mov push mov cltd push push lea push call add lea mov call mov or mov movl lea call mov mov mov pop pop pop mov xor call mov pop ret int3 push mov push push mov push push sub mov xor mov push push push push lea mov mov mov movl movl mov push lea call mov movb mov movl push push lea call mov cmpl jne push push lea call mov cmpl je lea call mov lea mov lea push call add mov mov mov mov mov push push lea push lea call mov mov mov movb mov push lea call movb lea call mov movb lea call test je xor lea call movsbl cmp jne mov movb push push lea call jmp xor lea call movsbl cmp jne push push lea call push lea push call add mov movzbl test jne push lea push call add mov movzbl test jne push lea push call add mov movzbl test jne push lea push call add mov movzbl test je mov movzbl test je call push mov call mov call jmp call push mov call movb movb lea call mov jmp lea call cmp jb push push lea push lea call mov mov mov movb mov or mov push mov push call add mov movzbl test jne push push lea push lea call mov mov mov movl mov or mov push mov push call add mov movzbl test jne push push lea push lea call mov mov mov movl mov or mov push mov push call add mov movzbl test je movl jmp movl mov mov movl mov and je andl lea call movl mov and je andl lea call movl mov and je andl lea call movzbl test je call push mov call movb movb lea call mov jmp push lea push lea call mov push lea push lea call mov push lea push call add lea push lea call push lea call movzbl test je lea push lea call push lea call movzbl test je call push mov call movb movb lea call mov jmp jmp mov mov lea push lea call mov mov mov push mov push lea push lea call push push lea call mov cmpl je push lea push lea call mov push lea push lea call mov push lea push call add mov mov push lea call lea push lea call push lea push call add movzbl test je mov push lea push lea call push mov mov push call call add mov lea call sub mov lea push lea call mov mov mov push lea push lea push lea call mov call mov mov mov push mov push lea push lea call push lea call mov mov mov movb mov push lea push call add mov mov mov movb lea call movzbl test je call push mov call movb movb lea call mov jmp push lea call mov mov movsbl cmp jne push lea push lea call mov push push lea push lea push lea call mov call mov push lea push call add movl push lea call mov mov movsbl cmp jne mov mov push lea push lea push lea call mov call mov mov mov push mov push call add mov mov mov lea push lea call mov mov mov push mov push lea push lea call push push lea call mov add mov mov sub mov mov jmp push lea call movl mov mov and jns dec or inc mov mov mov and jns dec or inc test je mov cmpl jge mov add mov jmp mov mov mov mov push push lea call mov mov add mov lea call sub cmp jae lea call sub mov sub mov push mov push lea call mov mov mov movb mov lea call movb lea call cmpl je push mov add push lea call push mov push lea call mov mov sub mov mov push push lea call mov mov add mov cmpl jbe mov mov mov and jns dec or inc neg sbb add mov mov cltd and add sar sub mov push mov shl mov sub push lea call push mov push lea call mov mov mov lea mov mov push push lea call mov mov add mov lea call sub sub mov mov and jns dec or inc mov cmpl je mov sub mov jmp movl mov mov cmpl je push mov push lea call movl lea call sub cmp jbe mov add push push lea push lea call mov mov mov movb mov push lea call movb lea call movl lea push lea push mov call mov push lea push mov call mov push call add mov push push lea push lea call mov mov mov movb mov push call add mov push mov call mov mov movb lea call lea call sub shr mov movl jmp mov add mov mov cmp jae mov shl push lea push mov push lea push lea push lea call mov call mov call mov mov push lea push lea call mov push mov push lea call mov mov mov movb mov push call add mov mov add push mov call mov mov movb lea call jmp mov cmpl jle mov mov mov call push mov call movzbl test je mov call mov cmpl jg mov cmpl jne mov push lea call movl lea call mov movzbl test je call push mov call jmp call push mov call movb lea call jmp push lea call movb mov push lea call push lea call lea push lea call push lea push call movb lea call movl mov ret movl mov mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov fldl pop ret int3 int3 int3 int3 int3 int3 push mov push mov xor mov mov mov mov mov mov mov mov mov mov mov mov movl mov movb mov movl mov movl sub fldl fstpl mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push mov push mov push mov push call add movzbl test jne xor jmp lea push call add movzbl test je movl lea push lea push call add movzbl test je mov push lea push push mov push lea push call add push mov call xor jmp mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push xor mov push sub mov lea push sub mov lea push call sub mov lea push call sub mov lea push call push call add mov push call add mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push sub push push push mov xor push lea mov mov movl mov call mov mov mov mov add mov call mov mov cmpl jl jg cmpl jbe mov mov mov add mov call cmp jbe mov mov mov add mov call sub mov jmp movl mov mov mov push lea call movl lea call cmp jne mov or mov jmp movb mov mov mov add mov call and cmp je jmp mov sub mov cmpl jbe mov mov mov add call movzbl push mov mov mov add call mov call mov mov mov call mov lea push lea push call add movzbl test je mov or mov jmp jmp cmpl jne mov xor push push mov call push mov mov mov add call mov call mov mov mov xor mov mov mov cmp jne mov cmp je mov or mov jmp jmp mov sub mov cmpl jbe mov mov mov add mov call movzbl push mov mov mov add call mov call mov mov mov call mov lea push lea push call add movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call movl mov ret movl push mov push mov mov mov add call mov mov movl lea call mov mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 push mov mov sub fldl fstpl call add movzbl test je mov fldz fcompl fnstsw test je mov fld1 fcompl fnstsw test jp mov push mov push push mov push call add mov fstpl xor jmp mov pop ret int3 push mov mov sub fldl fstpl call add movzbl test je mov fldz fcompl fnstsw test jne mov push mov push push mov push call add mov fstpl xor jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov fldz fcompl fnstsw test je mov fld1 fcompl fnstsw test jnp mov sub fldl fstpl call add movzbl test jne mov push mov push push mov push call add mov fstpl xor jmp mov pop ret int3 push mov mov fldz fcompl fnstsw test je mov sub fldl fstpl call add movzbl test jne mov push mov push push mov push call add mov fstpl xor jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub fldl fstpl call add movzbl test je mov fldz fcompl fnstsw test jne mov push mov push push mov push call add mov fstpl xor jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub fldl fstpl call add movzbl test je mov fldz fcompl fnstsw test jne mov push mov push push mov push call add mov fstpl xor jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov fldz fcompl fnstsw test je sub fldl fstpl call add movzbl test jne mov push lea push push mov push call add mov fstpl xor jmp mov pop ret int3 int3 int3 push mov mov push flds fstps call add movzbl test je mov flds fcompl fnstsw test jnp mov flds fcompl fnstsw test jne mov push mov push push mov push call add mov fstps xor jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push flds fstps call add movzbl test je mov flds fcompl fnstsw test jp mov push mov push push mov push call add mov fstps xor jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub fldl fstpl call add movzbl test je mov fldz fcompl fnstsw test je mov fld1 fcompl fnstsw test jp mov push mov push push mov push call add mov fstpl xor jmp mov pop ret int3 push mov mov sub fldl fstpl call add movzbl test je mov fldz fcompl fnstsw test jne mov push mov push push mov push call add mov fstpl xor jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push call add movzbl test je movl lea push mov push call add movzbl test jne movl lea push mov push call add movzbl test je mov push mov push push mov push lea push call add push mov call xor jmp mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push call add movzbl test je movl lea push mov push call add movzbl test je mov push mov push push mov push lea push call add push mov call xor jmp mov mov xor call mov pop ret int3 int3 int3 int3 int3 push mov push lea push sub fldl fstpl call add mov pop ret int3 int3 int3 push mov sub cmpl je mov mov jmp movl lea push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push mov mov call mov call movl push push mov call movzbl push mov push mov call movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push mov mov call mov call movl push push mov call lea push lea call movzbl test je lea push lea call push lea call push mov call movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov sub push push mov mov call mov mov call pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov mov push mov push call add mov mov push mov push call add push mov push mov call mov push mov call add push mov call mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov cmp ja mov call mov call add mov pop ret int3 int3 int3 int3 int3 push mov push mov push mov push lea push mov call mov pop ret int3 push mov push mov push mov push lea push mov call mov pop ret int3 push mov sub mov movl lea call push mov push mov push mov push mov call mov or mov mov mov pop ret int3 push mov push push mov push push sub push push push mov xor push lea mov mov mov movl mov push lea call movl lea call cmp je lea push mov mov mov add call mov mov mov movb mov push call add mov movb lea call movb cmpl jne movl jmp mov mov mov add mov mov push mov mov mov add call movzbl push mov push mov mov mov add call push lea call mov push mov push lea push mov call mov mov call movzbl test je mov or mov jmp push push mov mov mov add mov call movl mov ret movl push mov push mov mov mov add call mov mov movl lea call mov mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push mov add call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov mov and jne mov or mov push mov call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov and jne mov or mov push mov call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov call mov and jne mov or mov push push push mov call mov pop ret int3 int3 int3 push mov push push push mov mov mov mov rep mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call movzbl test jne mov movzbl neg sbb add mov mov mov pop ret int3 int3 push mov push mov mov xor cmpl sete mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov xor cmpl sete mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl jne push mov call cmpl jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call movzbl test je push mov call cmpl je movb jmp movb mov mov movl push mov call cmpl jb push mov call cmpl jb push mov call cmpl jb push mov call cmpl jb movl jmp movl jmp movl jmp push mov call cmpl jb movl jmp movl jmp push mov call cmpl jb push mov call cmpl jb movl jmp movl jmp push mov call cmpl jb movl jmp push mov call cmpl jb movl movzbl test je movl jmp mov mov add mov mov mov pop ret int3 int3 int3 push mov mov movsbl xor cmp setne pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret push mov push mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push lea call mov mov mov mov mov pop ret int3 int3 int3 push mov push mov mov push mov call mov mov mov xor cmp sete mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call movzbl neg sbb add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov add call mov movl mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push push mov push sub mov xor push lea mov mov push mov mov mov push call mov call movl push push mov call mov push mov push mov push mov call movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov push mov call movzbl test je mov call mov sub push mov push mov mov call jmp mov or sub cmp ja mov call cmpl jbe mov mov add mov push mov push mov call movzbl test je mov push mov push mov call mov add push call add mov push mov call mov pop mov pop ret int3 int3 push mov sub mov cmpl jne mov call push mov push mov call movzbl test je movzbl push mov push push mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push mov call movzbl test je mov push mov call mov sub push mov push mov push mov call jmp mov mov cmp jae mov call mov or sub cmp ja mov call cmpl jbe mov mov add mov push mov push mov call movzbl test je mov mov sub push mov call add push mov call add add push call add mov push mov push mov call add push call add mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov cmpl jne mov mov cmp ja mov jmp mov mov cmp jae mov mov sub mov mov cmp ja mov sub mov sub mov mov call add mov jmp mov sub add mov sub mov mov add mov mov push mov push mov push call add mov cmpl je mov push mov push mov push call add test jne mov call mov sub mov jmp jmp or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov cmp jae mov call mov add mov mov call add mov jmp mov add mov mov cmp jae mov push mov push mov push call add test jne mov call mov sub mov jmp jmp or mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov mov movl mov mov and jne mov call test je mov call mov cmp jae mov call mov jmp mov mov mov mov call mov sub mov call mov mov mov lea call movl lea mov call mov or mov movl lea call mov jmp jmp mov mov and jne mov call test je mov call mov mov call sub mov call mov mov lea call movl lea mov call mov or mov movl lea call mov jmp jmp lea call movl lea mov call mov or mov movl lea call mov mov mov pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 push mov push mov xor mov mov mov mov mov mov mov mov mov mov mov mov movl mov movb mov mov mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov xor cmpl sete mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov push mov mov push mov push mov call mov mov pop ret push mov push mov mov movl mov call mov pop ret int3 int3 int3 int3 push mov push mov mov push movzbl push mov push mov push mov push mov push mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov mov mov call and jne movzbl push movzbl push mov push mov push mov push mov push mov mov mov mov call mov jmp jmp lea push mov call mov mov mov movl mov push call add mov movl lea call lea call movl movzbl test je lea push mov call mov mov mov movb mov lea call movb lea call jmp lea push mov call mov mov mov movb mov lea call movb lea call mov call mov mov cmpl jl jg cmpl jbe mov call mov lea call cmp jbe mov call mov lea call sub mov jmp movl mov mov mov call and cmp je mov push movzbl push mov push mov push lea push mov push call add mov mov mov mov movl lea call push lea call push mov push mov push lea push mov push call add mov mov mov mov push push mov call mov push movzbl push mov push mov push mov push mov push call add movl lea call mov mov mov pop pop pop mov xor call mov pop ret int3 push mov sub mov xor mov mov mov push mov call push push lea push mov push call add push push lea push call add push lea push movzbl push mov push mov push mov push mov push mov push call add mov mov xor call mov pop ret int3 int3 int3 push mov sub mov xor mov mov mov push mov call push push lea push mov push call add push push lea push call add push lea push movzbl push mov push mov push mov push mov push mov push call add mov mov xor call mov pop ret int3 int3 int3 push mov sub mov xor mov mov mov push mov push mov call push push lea push mov push call add push push lea push call add push lea push movzbl push mov push mov push mov push mov push mov push call add mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov push mov push mov call push push lea push mov push call add push push lea push call add push lea push movzbl push mov push mov push mov push mov push mov push call add mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov call mov mov cmpl jg jl cmpl ja mov call and jne movl movl jmp mov call mov mov mov mov mov mov cmpl jl jg cmpl jbe movl jmp mov mov mov mov mov cltd mov sub mov sbb mov mov movl movl mov call and cmp jne fldl fmull fldl fucompp fnstsw test jnp fldz fcompl fnstsw test jne movl jmp movl mov mov movzbl test je fldl fchs fstpl jmp mov add mov fldl fcompl fnstsw test jne cmpl jae fldl fdivl fstpl jmp fldl fcompl fnstsw test jne jmp mov add mov cmpl jl jg cmpl jb fldl fcompl fnstsw test jne cmpl jae fldl fmull fstpl mov sub mov sbb mov mov jmp movzbl test je fldl fchs fstpl sub fldl fstpl mov push mov call push push lea push mov push call add push push lea push call add push mov push mov push mov push lea push movzbl push mov push mov push mov push mov push mov push call add mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov call mov mov cmpl jg jl cmpl ja mov call and jne movl movl jmp mov call mov mov mov mov mov mov cmpl jl jg cmpl jbe movl jmp mov mov mov mov mov cltd mov sub mov sbb mov mov movl movl mov call and cmp jne fldz fcompl fnstsw test jne movl jmp movl mov mov movzbl test je fldl fchs fstpl jmp mov add mov fldl fcompl fnstsw test jne cmpl jae fldl fdivl fstpl jmp fldl fcompl fnstsw test jne jmp mov add mov cmpl jl jg cmpl jb fldl fcompl fnstsw test jne cmpl jae fldl fmull fstpl mov sub mov sbb mov mov jmp movzbl test je fldl fchs fstpl sub fldl fstpl mov push mov call push push lea push mov push call add push push lea push call add push mov push mov push mov push lea push movzbl push mov push mov push mov push mov push mov push call add mov mov xor call mov pop ret int3 int3 push mov sub mov xor mov mov mov push push push lea push call add push lea push movzbl push mov push mov push mov push mov push mov push call add mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movb mov mov mov mov mov pop ret int3 push mov push mov mov mov mov pop ret push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov cmp jb mov call cmp jae mov call mov call sub mov mov cmp jae mov mov mov or sub cmp ja mov call cmpl jbe mov mov add mov push mov push mov call movzbl test je mov mov sub push mov call add push mov call add add push call add mov cmp jne mov cmp jae mov add mov jmp mov mov mov push mov call add push mov call add push call add jmp mov push mov call add push mov call add push call add mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov lea mov mov mov mov pop ret int3 int3 push mov sub mov mov mov movb mov add mov mov and je mov movb mov add mov mov and je mov movb mov add mov mov movb mov add mov mov movb mov add mov movsbl test je mov mov mov mov add mov mov and mov cmpl jne movb jmp cmpl jne movb jmp cmpl setne lea mov mov mov mov mov mov mov add mov mov movb mov mov pop ret int3 push mov push push mov push sub mov xor mov push lea mov lea push mov call mov mov mov movl mov push call add mov movl lea call lea push mov call movl mov call mov lea call movb mov add push push push call add mov mov movsbl cmp je mov movsbl cmp je movl jmp movl mov mov call mov mov mov movb movb mov push push mov push call add mov mov push movsbl push mov push call add mov cmpl jne movl lea call movsbl cmp je lea call movsbl test jle mov push mov push lea call cmpl jne push mov push lea call jmp cmpl jne push mov push lea call movl push mov push mov sub push lea call movl cmpl jne push mov push lea call jmp push mov push mov sub add push lea call push mov push mov sub push lea call movl movl lea call mov lea push xor lea call push call add mov mov movsbl cmp je mov movsbl test jle mov movsbl mov sub cmp jae mov movsbl mov sub mov push push mov push lea call mov movsbl test jle mov add mov jmp xor lea call mov movl lea call mov mov add add add mov mov call mov mov cmpl jl jg cmpl jbe mov call cmp jbe mov call sub mov jmp movl mov mov mov call and mov cmpl je cmpl je mov push movzbl push mov push mov push lea push mov push call add mov mov mov mov movl jmp cmpl jne cmpl jbe push mov push mov push mov push lea push mov push call add mov mov mov mov mov add mov mov sub mov mov push movzbl push mov push mov push lea push mov push call add mov mov mov mov movl mov push movsbl push mov push call add mov cmpl je mov sub add mov movzbl push mov sub push mov push mov push mov push lea push mov push call add mov mov mov mov mov push movzbl push mov push mov push lea push mov push call add mov mov mov mov push mov call movzbl push mov push mov push lea push mov push call add mov mov mov mov mov push movzbl push mov push mov push lea push mov push call add mov mov mov mov mov add mov mov sub mov mov push push mov push call add mov cmpl je mov sub add mov movzbl push mov sub push mov push mov push mov push lea push mov push call add mov mov mov mov mov push movzbl push mov push mov push lea push mov push call add mov mov mov mov movl mov call and je movl jmp movl push mov push mov push mov push lea push mov push call add mov mov mov mov mov add mov mov sub mov movzbl push mov push mov push mov push mov push lea push mov push call add mov mov mov mov mov push movzbl push mov push mov push lea push mov push call add mov mov mov mov push push mov call mov push movzbl push mov push mov push mov push mov push call add movb lea call movl lea call mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov movb mov add mov mov and je mov movb mov add mov mov and je mov movb mov add mov mov movsbl cmp je mov mov mov mov mov add mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov and mov cmpl jne movb jmp cmpl je mov mov mov jmp mov and neg sbb and add mov mov mov mov mov mov mov add mov mov movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov lea push mov call mov mov mov movl mov push call add mov movl lea call lea push mov call movl mov movsbl cmp je mov movsbl cmp je mov movsbl cmp jne mov movsbl cmp je mov movsbl cmp jne movl jmp movl mov mov jmp movl mov mov lea call movsbl cmp je lea call movsbl test jle lea call mov mov mov mov movsbl cmp je mov movsbl test jle mov movsbl mov sub cmp jae mov movsbl mov sub mov mov add sub push mov add push mov add sub push mov mov lea push call add mov add movb mov add mov mov movsbl test jle mov add mov jmp mov call mov mov cmpl jl jg cmpl jbe mov call cmp jbe mov call sub mov jmp movl mov mov mov call and mov cmpl je cmpl je mov push movzbl push mov push mov push lea push mov push call add mov mov mov mov movl jmp cmpl jne mov push mov push mov push mov push lea push mov push call add mov mov mov mov mov add mov mov sub mov mov push movzbl push mov push mov push lea push mov push call add mov mov mov mov movl mov call movzbl push mov push mov push mov push mov push lea push mov push call add mov mov mov mov push push mov call mov push movzbl push mov push mov push mov push mov push call add movl lea call mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov sub mov lea call mov add mov cmpl jbe mov movzbl push lea call mov call jmp mov mov mov mov mov mov pop ret push mov jmp mov sub mov lea call cmpl jbe movzbl push lea call mov call jmp mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push mov mov mov mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push mov mov mov mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov jmp mov sub mov lea call mov add mov cmpl jbe mov add push push mov movzbl push call add movzbl push lea call mov call jmp mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub jmp mov add mov mov sub mov mov push push mov push call add mov cmpl je mov sub mov jmp mov mov mov mov mov push mov push mov push mov push lea push mov push call add mov mov mov mov mov add mov mov sub mov jne jmp movsbl test je push movzbl push mov push mov push lea push mov push call add mov mov mov mov jmp mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je movzbl push mov mov call mov call mov lea push lea push call add movzbl test je mov movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret int3 int3 push mov push mov mov mov pop ret int3 int3 push mov push mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push mov mov mov mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov xor mov mov fldl fldz fucompp fnstsw test jp call push mov call jmp fldl fld1 fucompp fnstsw test jp call push mov call jmp sub fldl fstpl call add movzbl test je call push mov call jmp sub fldl fstpl call add movzbl test je call push mov call jmp call push mov call lea push sub fldl fstpl call add fstpl fldl fldz fucompp fnstsw test jnp push sub fldl fstpl call add fstpl sub fldl fstpl call add fstpl mov sub mov push push lea push call add push mov call fldz fcompl fnstsw test jp fldl fnstcw movzwl or mov fldcw fistpll fldcw mov xor push push mov call jmp fldl fchs fnstcw movzwl or mov fldcw fistpll fldcw mov xor push push mov call fldl fsubl fstpl jmp cmpl je mov cltd push push lea push call add push mov call mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov movzbl test jne mov call movzbl test je movb jmp movb mov mov movzbl test je push mov call cmpl jne mov cmpl jne push lea push mov call mov push lea push mov call mov push lea push call add lea push mov call push lea call jmp jmp push mov call cmpl jne mov cmpl jne push lea push mov call mov push lea push mov call mov push lea push call add lea push mov call push lea call jmp xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov movl lea push lea push mov call mov push lea push mov call mov push call add mov movl mov movb mov movl mov movl movl mov mov mov mov movl xor mov mov mov mov mov or je push push mov push mov push call mov mov push push mov push mov push call mov mov mov add mov jmp cmpl jbe mov mov mov lea mov mov mov lea push lea push call add movl lea push mov call mov push lea push lea push call add mov lea push lea push lea push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov cmp jae mov mov jmp mov mov mov mov mov mov pop ret int3 int3 int3 push mov push movl mov push mov push call add mov or mov mov mov pop ret int3 int3 int3 int3 int3 push mov push cmpl jne movl jmp mov mov mov add mov mov mov push mov push mov push mov mov call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movzbl push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movzbl push mov mov mov add call mov pop ret int3 push mov push push mov push sub mov xor mov push push push lea mov mov and xor cmp sete mov mov and xor cmp sete mov mov and xor cmp sete mov mov and xor cmp sete mov mov call test je xor mov call movsbl cmp jne movl jmp movl mov mov movzbl test je push push mov call mov or jne movl mov call mov lea push lea push call add mov xor mov mov movzbl test jne mov call movzbl test jne push push mov call cmp jne push mov call movzbl test jne movzbl test je push push mov call push mov push mov call movzbl test je push mov call jmp movzbl test je push push mov call cmpl jl jg cmpl jbe push mov sub mov sbb push mov call movzbl test je push push push mov call jmp movzbl test je push push push mov call jmp movzbl test jne movzbl test jne movzbl test jne lea push mov call lea push mov call push lea call movzbl test je lea call mov call movsbl cmp jne jmp lea push mov call push lea call movzbl test je lea call lea push mov call mov mov mov mov mov push mov push lea push mov call mov call movzbl test je push mov call jmp movzbl test je cmpl jl jg cmpl jb mov call xor mov mov mov sub mov sbb mov mov movzbl test je mov add mov adc mov mov cmpl jl jg cmpl jbe push mov push mov call movzbl test jne movzbl test jne cmpl jl jg cmpl jb mov cmp jg jl mov cmp jae mov add mov adc mov call xor mov mov mov mov mov cmp jl jg mov cmp jbe push mov add mov adc mov call xor sub sbb push mov call movzbl test jne movzbl test je push mov call jmp mov add mov adc mov call xor mov mov mov mov mov cmp jg jl mov cmp jae cmpl jg jl cmpl jae push or sub mov sbb push push mov call push push mov call jmp push push mov add mov adc push mov call jmp movzbl test jne movzbl test je push mov call movzbl test je push push mov call add xor mov mov mov call xor sub sbb mov sub mov sbb mov mov cmpl jl jg cmpl jbe push mov push mov call jmp movzbl test jne mov call cmp jbe push push push mov call push push mov call mov push mov push call add mov mov lea push lea push call add movl lea call cmp jae push lea call mov sub push push lea call cmpl jg jl cmpl jae push push push lea call jmp push push push lea call lea mov call movl lea call movzbl test je push push push mov call jmp movzbl test je push push push mov call mov mov pop pop pop mov xor call mov pop ret int3 int3 int3 int3 push mov mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov call neg sbb add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push call add push mov push call add push call add push lea push mov push call add mov pop ret int3 push mov sub mov push mov push lea push call add mov push mov push lea push call add mov push lea push call add mov push lea push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov mov push mov call mov mov pop ret int3 push mov mov push mov push call add movzbl neg sbb add pop ret int3 push mov sub movl lea push lea push call add movzbl push lea push mov push mov push call add mov mov pop ret int3 int3 int3 int3 push mov mov push mov call neg sbb add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl lea push lea push call add movzbl push lea push mov push mov push call add mov mov pop ret int3 int3 int3 int3 push mov mov push mov push call add push mov push call add push call add pop ret int3 int3 int3 int3 int3 push mov mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push call add mov cmpl je cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push call add mov mov lea push mov call push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl je mov mov jmp movl lea push mov push mov push mov push mov push call add mov mov pop ret int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push movl lea push lea push call add movzbl test je mov push lea push push mov push lea push call add movl lea push lea push call add movzbl test je mov push lea push push mov push lea push call add movl lea push lea push call add movzbl test jne movl lea push lea push call add movzbl test je mov push lea push push mov push lea push call add movl lea push lea push call add movzbl test je movl lea push lea push call add movzbl test je movl push lea push lea call mov jmp movl lea push lea push call add movzbl test je movl push mov movzbl push sub mov lea push call sub mov lea push call lea push call add push lea push lea push call add push lea call mov jmp mov push push mov push lea push call add mov mov mov mov push lea call mov mov mov mov push mov call mov jmp jmp movl lea push lea push call add movzbl test je movl lea push lea push call add movzbl test je movl push lea push lea call mov jmp movl lea push lea push call add movzbl test je movl push mov movzbl push sub mov lea push call sub mov lea push call lea push call add push lea push lea push call add push lea call mov jmp mov push push mov push lea push call add mov mov mov mov push lea call mov mov mov mov push mov call mov jmp xor mov movl mov push push lea push sub mov push lea push lea push lea push call add push mov call sub mov lea push call sub mov lea push call sub mov lea push call lea push call add movl push lea push lea push lea push lea push call add push lea push call add push lea call movl lea push lea push call add movzbl test je movl push lea push mov call mov jmp lea push lea push lea push call add push lea push call add push call add movzbl test je mov push push mov push mov push call add mov jmp lea push lea call lea push mov call mov pop mov xor call mov pop ret int3 int3 push mov sub mov xor mov movl push lea push lea call lea push mov push lea push sub mov lea push call call add movzbl test je lea push mov call mov jmp lea push mov push lea push sub mov lea push call call add movzbl test je lea push mov call mov jmp lea push mov push lea push sub mov lea push call call add movzbl test je lea push mov call mov jmp lea push mov call mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push lea push push flds fstps call add mov pop ret int3 int3 int3 int3 int3 push mov sub cmpl je mov mov jmp movl lea push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push lea push sub fldl fstpl call add mov pop ret int3 int3 int3 push mov sub cmpl je mov mov jmp movl lea push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push call add mov mov lea push mov call push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push call add mov mov lea push mov call push call add movzbl neg sbb add mov pop ret int3 int3 int3 int3 int3 push mov sub lea push sub fldl fstpl call add mov and mov and mov mov cmpl jne cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add call pop ret int3 int3 push mov push push mov push sub mov xor push lea mov push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne push lea call push lea push call jmp mov mov mov mov mov mov mov call mov call mov mov movl lea call mov mov mov pop mov pop ret int3 int3 push mov push mov xor mov mov mov mov mov mov mov mov mov mov mov mov movl mov movb mov movl mov movl mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne push lea call push lea push call jmp mov mov mov mov mov mov mov call mov call mov mov movl lea call mov mov mov pop mov pop ret int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movzbl push push mov call mov pop ret int3 int3 int3 int3 push mov push mov mov xor cmpl sete mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push lea call push mov call mov mov pop ret push mov push mov mov mov pop ret int3 int3 push mov mov call mov and jne mov or mov push push push mov call mov pop ret int3 int3 int3 push mov sub mov xor mov mov lea call mov push mov push lea call lea push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea call mov push mov push lea call lea push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor cmpl setne mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor cmpl setne mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov call call call call call call call call call call call call call call call call push push lea push call add mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov xor cmp sete mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov movl cmpl je mov cmpl jne push call add mov movl cmpl je mov call push lea call mov mov or mov push mov push mov call mov jmp movl mov mov movl mov mov mov mov and je andl lea call mov mov mov pop mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov movl cmpl je mov cmpl jne push call add mov movl cmpl je mov call push lea call mov mov mov movb mov or mov push push mov push mov call mov jmp movl mov mov movl mov mov mov movl mov and je andl lea call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov movl lea call movl call lea push lea push lea call mov mov push lea call movzbl test je lea push lea call movzbl test jne push push lea call mov mov mov movb mov push call movb lea call lea mov call mov or mov movl lea call mov mov mov pop pop mov xor call mov pop ret int3 push mov push push mov push sub mov xor push lea mov call lea push lea push lea call mov mov push lea call movzbl test je lea push lea call movzbl test jne push push lea call mov mov mov movl mov push call movl lea call mov mov mov pop mov pop ret int3 int3 push mov push push mov push sub mov xor push lea mov call lea push lea push lea call mov push lea call movzbl test je lea push lea call movzbl test jne push push lea call mov mov mov movl mov push call movl lea call mov mov mov pop mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov call mov and jne mov or mov movl push lea push call add mov mov mov movb mov push push lea push call add mov mov mov movb push push lea call mov mov mov movb mov push push lea push call add mov mov mov movb mov push mov push push call add movb lea call movb lea call movb lea call movb lea call push call add movl mov and jne mov or mov mov call movzbl test jne movb mov call push mov call mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov call mov and jne mov or mov mov call movzbl test jne movb push lea push call add mov mov mov movl mov push push lea push call add mov mov mov movb mov call push mov call movb lea call movl lea call mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov call mov and jne mov or mov push push push mov call mov pop ret int3 int3 int3 push mov push push mov push mov xor push lea mov mov call mov and jne mov or mov movl push sub fldl fstpl mov call movl mov mov mov pop mov pop ret int3 push mov push push mov push mov xor push lea mov mov call mov and jne mov or mov movl push call sub fstpl mov call movl mov mov mov pop mov pop ret int3 int3 push mov push push mov push mov xor push lea mov mov call mov and jne mov or mov movl push call sub fstpl mov call movl mov mov mov pop mov pop ret int3 int3 push mov push push mov push mov xor push lea mov mov call mov and jne mov or mov movl push call sub fstpl mov call movl mov mov mov pop mov pop ret int3 int3 push mov push push mov push mov xor push lea mov mov call mov and jne mov or mov movl push call sub fstpl mov call movl mov mov mov pop mov pop ret int3 int3 push mov mov call mov and jne mov or mov push call push push mov call mov pop ret push mov mov call mov and jne mov or mov push call push push mov call mov pop ret push mov mov call mov and jne mov or mov push call push push mov call mov pop ret push mov mov call mov and jne mov or mov push sub fld1 fstpl mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov sub mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov movl mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov mov push mov call movl mov movl movzbl push mov push mov call movl mov mov mov pop mov pop ret int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push sub push push push mov xor push lea mov mov mov mov call mov mov movl mov movl mov movl movl movzbl test je movl jmp mov mov mov lea push mov call push push mov push call add mov mov mov mov lea push mov call push push mov call push call add mov mov mov mov lea push mov call push push mov call push call add mov mov mov mov jmp mov call push push call movl mov ret movl lea push mov call push push mov mov movzbl push call add mov mov lea push mov call push push mov mov movzbl push call add mov mov movzbl test je lea push mov call push push push call add mov mov lea push mov call push push push call add mov mov mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov push call add mov add mov mov mov mov pop ret int3 int3 push mov sub mov xor mov mov mov mov mov mov mov mov mov mov mov mov movl mov movb mov movl mov movl fldl fabs fstpl call fstpl call fld1 faddp fmull fcompl fnstsw test jne movb jmp movb mov mov movzbl test je movl lea push lea push mov call mov push lea push mov call mov push call add jmp fldz fcompl fnstsw test jne movb jmp movb mov mov movzbl test jne fldl fstpl jmp fldl fchs fstpl fldl fstpl mov mov fldl fcompl fnstsw test jp fldl fdivl fstpl mov add mov jmp fld1 fcompl fnstsw test jne fldl fmull fstpl mov sub mov jmp mov and jns dec or inc mov mov and jns dec or inc mov sub mov test je fldl fmull fstpl mov sub mov jmp mov mov mov mov mov mov movl lea push lea push mov call mov push lea push mov call mov push call add movl jmp mov add mov cmpl jge fldl call mov mov push mov call mov mov mov mov movl fildll fsubrl fstpl fldl fmull fstpl jmp mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push mov mov call movzbl test je mov jmp mov call movzbl test je mov call movzbl test je mov call movzbl mov call movzbl cmp je call push mov call mov jmp mov call movzbl test je mov push mov call jmp mov mov mov sub mov mov call movzbl test jne cmpl jle mov jmp jmp cmpl jge mov push mov call jmp lea push mov call lea push mov call movb mov cltd and add sar mov mov movzbl mov movzbl cmp jne cmpl jl mov push lea push lea push lea call mov call mov push mov push lea push lea push mov call mov call mov push lea push mov call mov push lea push call add movl lea push mov push lea push lea push lea call mov call mov push lea push lea call mov push call add lea push lea call mov mov jmp mov neg push lea push lea push lea call mov call mov push mov neg push lea push lea push mov call mov call mov push lea push mov call mov push lea push call add movl lea push mov neg push lea push lea push lea call mov call mov push lea push lea call mov push call add lea push lea call mov mov movb movl movl jmp mov sub mov cmpl jl mov push lea call mov mov push lea call mov add add mov mov xor mov div mov mov imul mov sub mov push lea call mov jmp movzbl test je mov lea mov rep mov mov mov mov cmpl je lea push mov call mov push push lea push lea push mov call mov call mov push lea push mov call mov push lea push call add push mov call mov mov mov mov add mov mov jmp cmpl jg cmpl jne mov push mov call test jle mov push lea push lea push lea call mov call mov push mov push lea push lea push mov call mov call mov push lea push mov call mov push lea push call add movl lea push mov push lea push lea push lea call mov call mov push lea push lea call mov push call add lea push lea call mov mov jmp cmpl je lea push mov call mov push mov neg push lea push lea push mov call mov call mov push lea push mov call mov push lea push call add movl lea push mov neg push lea push lea push mov call mov call mov push lea push mov call mov push call add mov mov lea rep lea push lea call mov mov lea push mov call mov mov movb movl movl jmp mov sub mov cmpl jl mov push lea call mov mov push lea call mov sub sub mov jns mov add mov movl jmp movl mov xor mov div mov mov push lea call mov jmp movzbl test je mov lea mov rep mov mov mov mov mov mov mov mov push lea push mov call mov push lea push mov call mov push lea push call add mov mov lea push mov call push lea call movzbl test je lea push mov call push lea call movzbl test je mov movb mov movl jmp lea push mov call mov mov mov push mov push call add mov lea push mov call mov push lea push mov call mov push mov push lea push lea push mov call mov call mov push lea push call add movl lea push lea push mov call mov push mov push lea push lea push mov call mov call mov push call add mov shl mov mov sub mov mov mov call movzbl test je call push mov call jmp mov xor cmpl setge mov mov cmpl jne mov call movzbl test je mov push lea call lea call call push lea call xor test setg mov jmp call push mov call xor test setg mov movzbl test je mov mov mov call push mov call movzbl test je mov call mov pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov call mov mov pop ret int3 int3 int3 int3 push mov sub mov mov movzbl mov movzbl cmp setne mov mov movb mov call mov mov call mov mov call mov mov call mov mov call movzbl test jne mov call movzbl test jne movzbl test je movzbl test jne movzbl test je movzbl test je call push mov call mov jmp movzbl test jne movzbl test je call push mov call movzbl test je mov call mov jmp movzbl test jne movzbl test je call push mov call jmp mov cmpl setl mov mov cmpl setl mov movzbl movzbl cmp jne movzbl test jne mov mov mov jmp mov mov neg mov mov mov movzbl test jne mov mov mov jmp mov mov neg mov mov mov mov sub cmp setge mov movzbl test je movzbl test je call push mov call jmp call push mov call movzbl test je mov call mov jmp mov mov mov add mov mov mov add push mov add push call add mov mov mov push mov call push mov call push call add mov cmpl je mov mov add mov mov mov mov push lea push lea push mov call mov call mov push mov mov sub push lea push lea push mov call mov call mov push lea push mov call mov push lea push call add mov call mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov call mov and jne mov or mov movl push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call call push mov call call push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push push push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call push mov call movl cmpl jl jg cmpl jbe cmpl jg jl cmpl jae call sub shr xor add adc push mov call push mov call mov jmp jmp cmpl jg jl cmpl jae mov neg mov adc neg push push lea push call add mov call push mov call mov jmp jmp lea call xor mov lea push lea push call push lea push call add lea push mov call mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push lea push sub fldl fstpl call add mov pop ret int3 int3 int3 push mov push lea push sub fldl fstpl call add mov pop ret int3 int3 int3 push mov mov push mov push call add push mov push call add push call add push lea push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push lea push lea push call add mov mov movzbl push mov push call add push mov push call add push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push call add push mov push call add push mov push call add push call add push lea push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov cmp jae mov mov jmp mov mov mov mov mov mov pop ret int3 int3 int3 push mov sub cmpl jg jl cmpl jae mov neg mov adc neg mov mov jmp mov mov mov mov mov mov mov pop ret int3 push mov push movl mov push mov push call add mov or mov mov mov pop ret int3 int3 int3 int3 int3 push mov lea call pop ret int3 int3 int3 push mov jmp mov add mov mov cmp je mov push call add movzbl test je jmp jmp mov pop ret push mov mov push mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret push mov jmp lea call lea push lea push call add movzbl test je lea call push call add movzbl test je jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret push mov mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov lea push lea push call add mov add mov mov pop ret int3 push mov push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov lea push lea call mov add mov mov pop ret int3 int3 int3 int3 int3 push mov lea call pop ret int3 int3 int3 push mov jmp mov add mov mov cmp je mov mov mov mov jmp pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov call push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call lea call push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl je mov mov jmp movl lea push mov push mov push mov push mov push call add mov mov pop ret int3 int3 push mov sub mov push call add mov mov lea push mov call push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push lea push sub mov lea push call sub mov lea push call mov push call add mov mov pop ret int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl je mov mov jmp movl lea push mov push mov push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov movzbl test jne push lea push lea push lea push call add push lea push lea push lea push call add push lea push call add push mov call mov jmp lea call movl push lea push lea call push lea push lea push lea push call add push lea call fldl fstpl call fstpl push push lea push lea call push lea push lea push lea push call add push lea push call add push lea call fldl fstpl call fstpl push push lea push lea call push lea push lea push lea push call add push lea push call add push lea call fldl fstpl call fstpl push push lea push lea call push lea push lea push lea push call add push lea push call add push lea call lea push lea push call add push lea push lea push call add push lea push call add push lea push lea push call add push lea push call add push lea call push lea push lea push lea push lea push call add push lea push lea push lea push call add push lea push call add push lea push call add push lea call push lea push lea push lea push lea push call add push lea push lea push lea push call add push lea push call add push lea push call add push lea call fldl fstpl lea push lea push lea push call add push lea push lea push call add push call add push call add movzbl test je movl lea push lea push lea push lea push call add push call add movzbl test jne movl lea push lea push lea push call add push call add movzbl test je fldl fstpl lea push lea push lea push call add push call add movzbl test je mov push sub mov lea push call lea push call add push lea push lea push call add push lea push call add push lea call jmp lea push lea push lea push lea push lea push call add push lea push call add push lea push call add push lea call fldl fstpl lea push lea push lea push call add push call add movzbl test je mov push sub mov lea push call lea push call add push lea push lea push call add push lea push call add push lea call jmp lea push lea push lea push lea push lea push call add push lea push call add push lea push call add push lea call jmp fldl fstpl lea push lea push lea push call add push lea push lea push call add push call add push call add movzbl test je lea push lea push call add mov push lea push lea push lea push call add push lea call movzbl test je fldl fstpl lea push lea push lea push lea push call add push call add movzbl test jne movzbl test jne fldl fstpl lea push lea push lea push lea push call add push call add movzbl test je mov push mov push sub mov lea push call lea push call add push lea push lea push call add mov push mov push lea push call add lea push lea push lea push call add push lea push lea push lea push call add push lea push call add push lea call mov push sub mov lea push call lea push call add push lea push lea push call add push lea call lea push lea push call add push lea call jmp mov push lea push mov push sub mov lea push call lea push call add push lea push call add mov push mov push lea push call add lea push lea push lea push call add push lea push lea push lea push call add push lea push call add push lea call mov push sub mov lea push call lea push call add push lea push lea push call add push lea call lea push lea push call add push lea call jmp lea push lea push call add push lea push lea push call add push call add movzbl test je push lea push lea push lea push lea push call add push lea push call add push lea push call add push lea push lea push call add push mov push sub mov lea push call lea push call add push lea push lea push call add push lea push call add push lea call lea push lea push call add push lea call jmp push lea push lea push lea push lea push call add push lea push call add push lea push call add push lea push lea push call add push mov push sub mov lea push call lea push call add push lea push lea push call add push lea push call add push lea call lea push lea push call add push lea call jmp push lea push lea push lea push lea push call add push lea push call add push lea call push lea push lea push lea push lea push call add push lea push call add push lea call lea push lea push call add push lea push lea push call add push lea call lea push lea push call add push lea push lea push call add push lea call lea push call add push lea push call add movzbl test jne lea push call add push lea push call add movzbl test jne lea push call add push lea push call add movzbl test jne lea push call add push lea push call add movzbl test je lea push lea push call add movzbl test je lea push lea push lea push lea push lea push call add push lea push lea push call add push lea push call add push lea push call add push lea call jmp lea push lea push lea push lea push lea push call add push lea push lea push call add push lea push call add push lea push call add push lea call jmp lea push lea push lea push call add push lea push lea push lea push call add push lea push call add push lea call call push lea push lea push call add push lea push call add push lea call lea push lea push lea push call add push lea push call add push lea call lea push lea call lea push mov call mov mov xor call mov pop ret int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push call add push mov call push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push call add push lea push lea push call add push call add movzbl test je mov push push mov push lea push call add push mov call mov jmp xor mov xor call mov pop ret push mov xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push lea push push flds fstps call add mov and mov xor cmpl setne mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add call pop ret int3 int3 push mov sub lea push sub fldl fstpl call add mov and mov and mov mov cmpl jne cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add call pop ret int3 int3 push mov sub mov xor mov push mov push lea call lea call push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov cmpl jne movl cmpl jne movl push lea call movl push mov call mov mov push lea call mov mov mov movb lea push lea push mov call mov call mov mov mov movb mov lea call movb lea call movb lea call push lea call mov push lea call call imul xor mov div add mov mov push mov cltd push push lea push call add mov mov mov mov mov mov mov mov mov lea push call add push sub mov mov lea push call mov lea push call add mov mov mov movb mov push lea call movb lea call lea push lea call movb lea push call movb lea call movl lea call mov mov pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov push lea push call add mov mov mov movl mov push lea push call add push lea push call movl lea call mov mov pop mov pop ret int3 int3 int3 push mov push mov mov call mov mov mov call mov add mov mov mov mov pop ret int3 push mov sub push movl mov push push mov call push call add mov mov call mov or mov mov pop mov pop ret push mov push movl mov push mov push call add mov or mov mov mov pop ret int3 int3 int3 int3 int3 push mov sub push push movl mov call mov mov call mov mov call sub cmp jbe mov call mov mov call sub mov call cmp jae mov mov call push call add mov mov call mov or mov mov jmp jmp mov push push mov call push call add mov mov call mov or mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov movb lea push call add mov mov mov lea call movl call push lea call movzbl test je lea push call add mov lea push mov call movb lea call mov cmpl je push lea call movsbl test jle mov call mov movl push lea call mov mov mov mov movsbl test jne mov add mov mov cmp jae mov push lea call mov mov movsbl test jg movb jmp mov mov mov mov mov mov mov sub mov lea push mov push call add mov sub mov mov sub mov mov xor mov div mov mov add mov lea push call add mov lea push mov push call add mov xor mov div mov cmpl jne mov mov movb lea call movl lea call mov jmp movb lea call mov sub mov mov xor mov div mov mov add mov lea push call add mov lea push mov push call add mov xor mov div mov cmpl jne mov mov movl lea call mov mov mov pop mov xor call mov pop ret int3 push mov sub mov mov mov mov cmp jne xor jmp movb movb movb mov mov push lea push call add movzbl test je mov mov add mov mov movb jmp mov mov push lea push call add movzbl test je mov mov add mov mov mov mov push mov mov push mov push call add mov movzbl test je mov xor sub mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp jne xor jmp movb movb movl movb mov mov push lea push call add movzbl test je mov mov add mov mov movb jmp mov mov push lea push call add movzbl test je mov mov add mov mov mov mov push mov mov push lea push call add mov movzbl test je movl movzbl test je cmpl ja movl jmp movl mov mov xor sub mov mov jmp call mov movzbl test je mov cmp ja movl jmp movl mov mov mov mov mov mov mov pop ret int3 push mov sub mov mov mov add mov mov mov mov addl cmpb jne mov sub mov mov add mov mov push call add mov mov mov mov mov jmp mov sub mov mov add mov mov add mov cmpl jbe mov mov mov mov jmp mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl mov add call mov add call movb mov add call movb mov add call movl mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov add call mov pop ret int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl cmpl jne movl jmp mov mov mov mov lea mov mov push mov add call movl mov or mov mov push mov call mov movl mov movl mov mov mov mov movl mov mov mov mov movl movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov push mov call movl cmpl je mov add mov jmp movl mov push mov add call mov movl mov movl movl mov mov mov pop mov pop ret push mov push mov mov push mov call mov movl mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov push push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov call mov pop ret int3 int3 int3 push mov sub mov xor mov lea push mov push lea call push mov call mov mov pop ret push mov push mov mov mov pop ret int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov add push mov add push call add mov add push mov add push call add mov add push mov add push call add mov add push mov add push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret int3 int3 push mov push mov mov mov pop ret int3 int3 push mov push mov mov mov pop ret int3 int3 push mov push call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov push mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov lea call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push lea call mov mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov push lea call mov mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov push lea push mov call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push lea call mov mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov push lea push mov call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call movzbl neg sbb add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov imul add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov movl lea call movl call lea push lea push lea call mov mov push mov push lea call movzbl test je lea push lea call movzbl test jne push push lea call mov mov mov movb mov push call movb lea call lea mov call mov or mov movl lea call mov mov mov pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov movl mov call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov add call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov movl cmpl je xor mov push movzbl push mov sub push mov call mov jmp movl mov mov movl mov mov cmpl jne movl jmp mov mov mov mov lea mov mov mov mov pop mov pop ret push mov sub mov push mov sub push lea call push lea push call mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov movl lea call movl call lea push lea push lea call mov mov push lea call movzbl test je lea push lea call movzbl test jne push push lea call mov mov mov movb mov push call movb lea call lea mov call mov or mov movl lea call mov mov mov pop pop mov xor call mov pop ret int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add push mov push call add add push mov push call add push call add mov pop ret int3 push mov push mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov push mov mov neg push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov push mov mov mov mov pop ret push mov sub mov mov mov mov mov push lea call mov mov mov mov mov pop ret int3 int3 int3 push mov push mov mov neg push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push mov call mov pop ret int3 int3 int3 push mov push mov mov cmpl je call mov mov push mov mov push mov call mov mov mov sub mov cltd mov idiv push mov mov push mov add call mov movl mov movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov movzbl test je movzbl push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov lea mov mov mov mov pop ret push mov push mov mov add push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov call mov movb mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je call mov mov push mov mov push mov call mov mov mov sub sar push mov mov push mov add call mov movl mov movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov movzbl push mov call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret push mov push mov mov mov pop ret int3 int3 push mov sub mov xor mov mov mov mov mov mov movb mov call movzbl test je call push mov call movzbl test je mov call mov jmp mov call movzbl test je mov jmp mov call movzbl test je call push mov call jmp mov call movzbl test je movzbl test je mov call mov jmp mov push lea call lea push lea push lea call mov neg push fld1 fdivl sub fstpl lea call push mov call movl jmp mov shl mov cmpl jg mov lea push mov call mov lea push lea call mov push lea call lea push lea call call push lea call lea call lea push mov call jmp mov mov mov mov movl mov mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov mov call movzbl test je mov call movzbl test jne mov call movzbl test jne mov call movzbl test je mov call movzbl neg sbb and add jmp mov call movzbl test je mov call movzbl test je mov movzbl mov movzbl cmp jne movl jmp mov movzbl neg sbb and add mov mov jmp mov call movzbl test je mov call movzbl neg sbb and add jmp jmp mov movzbl neg sbb and add jmp mov call movzbl test je mov call movzbl test je movl jmp mov movzbl neg sbb and add mov mov jmp jmp mov call movzbl test je mov movzbl neg sbb and add jmp jmp mov movzbl mov movzbl cmp je mov movzbl neg sbb and add jmp jmp mov mov mov cmp je mov mov mov xor cmp setl lea mov mov movzbl test je mov mov jmp mov neg mov mov jmp jmp mov push mov call mov mov movzbl test jne mov mov jmp mov neg mov mov mov pop ret int3 int3 int3 push mov sub push mov lea push mov call mov push lea push mov call mov push lea push mov call mov push lea push call add lea push mov call push lea call movzbl test je lea push mov call push lea call movzbl test je movb jmp movb mov mov movzbl test je xor jmp jmp lea call mov lea call mov cmp sbb and add pop mov pop ret int3 int3 push mov sub movl movl mov sub mov jmp mov sub mov cmpl jl mov mov mov mov mov mov jmp mov sub mov cmpl jl mov sub mov mov mov mov mov mul add adc mov mov jmp push push mov push mov push call mov mov mov push push mov push mov push call mov mov jmp mov mov pop ret int3 int3 int3 push mov mov push call add push mov push call add push mov push call add push call add push lea push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov push call add push mov push call add push mov push call add push call add push lea push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov push call add push mov push call add push mov push call add push call add push lea push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov push mov push call add push mov push call add push call add push lea push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl lea push lea push call add movzbl push lea push mov push mov push call add mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov cmp jge mov mov jmp mov mov mov mov mov mov pop ret int3 int3 int3 push mov sub mov xor mov mov mov mov cmpl jg jl mov cmpl jae lea call push push lea call lea call xor mov mov mov neg mov adc neg mov mov lea push lea push mov push lea push call add lea push lea push mov push call add jmp xor mov mov mov mov mov mov lea push lea push mov push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea push sub fldl fstpl call add mov mov and mov mov cmpl jne cmpl jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea push sub fldl fstpl call add mov mov and mov mov cmpl jb ja cmpl jbe movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov lea call pop ret int3 int3 int3 push mov jmp mov add mov mov cmp je mov push call add movzbl test je jmp jmp mov pop ret push mov mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp je mov sub mov mov cmp je mov push mov push call add jmp pop ret int3 int3 int3 int3 int3 push mov push mov push mov push call add mov movzbl push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push call add movzbl neg sbb add pop ret int3 push mov sub mov lea push mov call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea push mov call push lea push mov call mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov mov call movzbl test je mov jmp mov call movzbl test je mov jmp mov call movzbl test je xor jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add mov push mov push mov call mov mov pop ret int3 int3 int3 push mov mov push mov call xor test setl mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov cmpl jne movl cmpl jne movl push lea call movl push mov call mov mov push lea call mov mov mov movb lea push lea push mov call mov call mov mov mov movb mov lea call movb lea call movb lea call push lea call mov push lea call call imul xor mov div add mov mov push mov cltd push push lea push call add mov mov mov mov mov mov mov mov mov lea push call add push sub mov mov lea push call mov lea push call add mov mov mov movb mov push lea call movb lea call lea push lea call movb lea push call movb lea call movl lea call mov mov pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add mov mov lea push lea push mov call mov call push call add push mov push call add mov pop ret int3 int3 push mov sub mov xor mov push mov push lea call lea call push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push xor mov xor mov push sub mov lea push lea push sub mov lea push call sub mov lea push call push call add mov push call add mov pop mov pop ret int3 int3 int3 int3 push mov sub mov xor mov cmpl je mov mov jmp movl mov push mov push call add mov test je lea push call add mov jmp lea push call add mov mov mov mov push mov call mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push mov push lea push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov call mov and jne mov or mov movl xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call movl mov and jne mov or mov movl xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call movl push mov push push push mov push call add mov mov mov pop mov xor call mov pop ret int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push lea push mov call mov mov pop ret push mov sub mov push mov push call add movzbl test je mov mov jmp mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call mov push call add fstpl lea push lea call push call add mov xor call mov pop ret push mov sub mov xor mov push mov push lea call mov push call add mov mov lea push lea call push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push mov push call add movzbl test je mov mov jmp mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push call xor mov xor mov push sub mov lea push lea push lea push lea call push push call add mov push call add mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push lea push mov call mov mov pop ret push mov sub mov xor mov mov mov push mov call movzbl test je mov push mov call movzbl test jne push mov push lea call xor mov lea push lea push lea call push mov call jmp xor mov lea push mov push mov call mov mov xor call mov pop ret int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push mov push lea push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov push mov call movzbl test je mov push mov call movzbl test jne push mov push lea call xor mov lea push lea push lea call push mov call jmp xor mov lea push mov push mov call mov mov xor call mov pop ret int3 push mov sub mov push mov push call add movzbl test je mov mov jmp mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov call push mov call push call add pop ret int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call mov push call add fstpl lea push lea call push call add mov xor call mov pop ret push mov sub mov xor mov push mov push lea call mov push call add fstpl lea push lea call push call add mov xor call mov pop ret push mov sub push call xor mov xor mov push sub mov lea push lea push sub mov push lea push call push call add mov push call add mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push lea push mov call mov mov pop ret push mov sub mov xor mov mov mov push mov call movzbl test je mov push mov call movzbl test jne push mov push lea call xor mov lea push lea push lea call push mov call jmp xor mov lea push mov push mov call mov mov xor call mov pop ret int3 push mov sub push call xor mov xor mov push sub mov lea push lea push sub mov push lea push call push call add mov push call add mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call push mov push lea call lea call push lea call push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push lea push mov call mov mov pop ret push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push lea push mov call mov mov pop ret push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov lea push mov push call add mov mov pop ret push mov mov call push mov call push call add movzbl neg sbb add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push xor mov lea push mov push call add mov mov pop ret push mov mov call push mov call push call add movzbl neg sbb add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push mov push lea push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push mov push lea push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov push mov call movzbl test je mov push mov call movzbl test jne push mov push lea call xor mov lea push lea push lea call push mov call jmp xor mov lea push mov push mov call mov mov xor call mov pop ret int3 push mov sub mov xor mov mov mov push mov call movzbl test je mov push mov call movzbl test jne push mov push lea call xor mov lea push lea push lea call push mov call jmp xor mov lea push mov push mov call mov mov xor call mov pop ret int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov push xor mov mov push lea push mov call mov mov pop ret push mov sub mov xor mov mov mov push mov call movzbl test je mov push mov call movzbl test jne push mov push lea call xor mov lea push lea push lea call push mov call jmp xor mov lea push mov push mov call mov mov xor call mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call lea call push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push call add push mov call push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je push mov push lea call mov push lea call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call movzbl test jne mov call push call add push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov cmpl jne movl cmpl jne movl push lea call movl push mov call mov mov push lea call mov mov mov movb lea push lea push mov call mov call mov mov mov movb mov lea call movb lea call movb lea call push lea call mov push lea call call imul xor mov div add mov mov push mov cltd push push lea push call add mov mov mov mov mov mov mov mov mov lea push call add push sub mov mov lea push call mov lea push call add mov mov mov movb mov push lea call movb lea call lea push lea call movb lea push call movb lea call movl lea call mov mov pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov cmpl jne movl cmpl jne movl push lea call movl push mov call mov mov push lea call mov mov mov movb lea push lea push mov call mov call mov mov mov movb mov lea call movb lea call movb lea call push lea call mov push lea call call imul xor mov div add mov mov push mov cltd push push lea push call add mov mov mov mov mov mov mov mov mov lea push call add push sub mov mov lea push call mov lea push call add mov mov mov movb mov push lea call movb lea call lea push lea call movb lea push call movb lea call movl lea call mov mov pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov call xor test setg mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov call test je mov call mov cmp jae mov call mov mov mov and je mov call test je cmpl jne mov call mov mov sub mov cltd add adc mov mov jmp cmpl jne mov call mov mov call sub mov cltd add adc mov mov jmp cmpl jne mov and je push push mov call mov jmp mov call mov mov call mov add cmp ja mov call mov add mov cmp ja mov push mov call mov and je mov call test je mov call mov mov call sub push mov call jmp movl movl jmp mov and je mov call test je cmpl jne mov call mov mov sub mov cltd add adc mov mov jmp cmpl jne mov call mov mov call sub mov cltd add adc mov mov jmp cmpl je push push mov call mov jmp mov call mov mov call mov add cmp ja mov call mov add mov cmp ja mov push mov call jmp movl movl jmp movl movl mov push mov push mov call mov pop mov pop ret int3 push mov sub push mov lea call mov mov mov call test je mov call mov cmp jae mov call mov mov mov and cmp je mov and je mov call test je cmpl jl jg cmpl jb mov call mov mov sub mov cltd mov mov mov cmp jg jl mov cmp ja mov call mov mov call sub mov cltd add adc push mov call mov and je mov call test je mov call mov mov call sub push mov call jmp movl movl jmp mov and je mov call test je cmpl jl jg cmpl jb mov call mov mov sub mov cltd mov mov mov cmp jg jl mov cmp ja mov call mov mov call sub mov cltd add adc push mov call jmp movl movl jmp movl movl mov push mov push mov call mov jmp jmp push push mov call mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov call test jne call jmp jmp mov call mov mov call cmp jae mov call push call add jmp jmp mov mov and je mov call test je mov call mov mov call cmp jb mov call mov cmp jae mov call mov cmp jae mov call mov mov mov mov push mov call push mov call push mov call mov call push call add jmp jmp call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov mov call test je mov call mov mov call cmp jae mov mov and jne call mov lea push lea push call add movzbl test jne lea push call add mov mov call sub push lea push call add movzbl test je push mov call call mov lea push lea push call add movzbl test jne lea push call add mov mov call mov lea push call add jmp jmp call pop pop mov pop ret int3 int3 int3 int3 int3 push mov sub push mov call mov lea push lea push call add movzbl test je lea push call add jmp jmp mov call test je mov call mov mov call cmp jae lea push call add movzbl push mov call mov jmp jmp mov mov and jne call jmp jmp mov call test jne movl jmp mov call mov mov call sub mov mov mov mov mov mov shr mov cmpl jae movl movl mov call mov cmpl jbe call sub cmp jae mov shr mov jmp cmpl jbe mov add mov mov movzbl neg sbb and push mov push mov add call mov cmpl jbe mov push mov push mov push call add mov movzbl test je mov push mov push mov add call mov movb cmpl jne mov mov mov mov add push mov push mov call mov mov and je mov add push mov push mov push mov call jmp mov push push mov push mov call jmp mov mov sub add mov mov mov call mov mov call sub mov mov call mov mov call sub mov mov add push mov call sub add push mov call mov push mov call mov mov and je mov call add push mov add push mov push mov call jmp mov push push mov push mov call lea push call add movzbl push mov call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov movzbl test je mov call test je mov call mov jmp mov call mov mov call mov sub push mov call push mov add call mov movb push push push mov call push push mov call mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov call movl mov add call movb mov movl mov movl mov movl mov movb mov add call movb mov movb push mov add call movb mov add call movb mov push mov call movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov mov call movl mov add call movb mov movl mov movl mov movl mov movb mov add call movb mov movb push mov add call movb mov add call movb cmpl je mov push lea call movb lea push mov call movb lea call movl mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov mov movl mov call test jne mov add mov call mov or mov mov jmp mov mov mov cmp jge mov call movzbl and je mov mov push mov mov push lea call mov mov mov movl mov push call movl lea call lea call movl mov call push lea call mov add lea call movl jmp mov add mov mov call cmp jae mov push mov call mov mov add lea call mov cmpl jne mov mov lea call cmp jbe mov movzbl push mov mov lea call sub push lea call mov add lea call jmp mov movb lea mov call mov or mov movl lea call mov mov mov pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov push xor mov lea push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov push sub mov mov mov mov mov mov mov mov mov lea call sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov movl movl mov push mov push lea call mov call mov or mov movb lea call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov push lea push call add mov mov mov movl mov push lea push call add push lea push call movl lea call mov mov pop mov pop ret int3 int3 int3 push mov push mov mov push call add push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea call movzbl push mov push mov push mov call mov pop ret int3 int3 int3 int3 push mov push movl mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl push mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov movb mov sub mov mov movl mov cmp ja mov movsbl cmp jl mov movsbl cmp jl xor jmp mov movsbl sub mov mov mov sub mov movl movb lea call movl call push lea call movzbl test je lea push call add mov lea push mov call movb lea mov mov call mov cmpl je push mov call movsbl test jle movb mov call mov movzbl push mov call movsbl sub mov movb jmp mov sub mov mov cmp jb movsbl test je mov imul mov mov xor mov div cmp je movb mov movsbl sub mov mov imul mov mov movsbl cmp jl mov movsbl cmp jge cmpl je mov xor divl cmp jne call sub mov cmp jb movzbl test je cmpl je movb movb lea call movl lea call mov jmp mov mov add mov mov mov imul mov mov sub mov jmp lea push mov push call add movzbl test jne movb jmp jmp mov cmp jne movb movb lea call movl lea call mov jmp movzbl mov sub cmp jae mov add mov movzbl push mov call mov mov jmp movzbl test je movb movb lea call movl lea call mov jmp movb lea call mov cmp ja mov imul mov mov xor mov div cmp je movb mov movsbl sub mov mov imul mov mov movsbl cmp jl mov movsbl cmp jge cmpl je mov xor divl cmp jne call sub mov cmp jb movzbl test je cmpl je movb movl lea call mov jmp mov mov add mov mov mov imul mov mov sub mov jmp movb movl lea call mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call add mov mov mov push call add mov mov mov lea push call add mov mov mov mov pop ret int3 push mov push mov push call add mov mov mov push call add mov mov mov lea push call add mov mov mov mov pop ret int3 push mov jmp mov add mov mov add mov mov cmp je mov push mov push call add jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov push mov push call add push call add mov mov cmpl jge mov mov sub mov mov movb lea push mov mov push call add mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov push mov push mov push call add push push call add mov mov cmpl jg jl cmpl jae mov mov sub mov mov movb lea push mov mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add mov movzbl push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add mov movzbl push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov add call mov pop ret int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl cmpl jne movl jmp mov mov mov mov lea mov mov push mov add call movl mov or mov mov push mov call mov movl mov movl mov mov mov mov movl mov mov mov mov movl movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov push mov call movl cmpl je mov add mov jmp movl mov push mov add call mov movl mov movl movl mov mov mov pop mov pop ret push mov push mov mov push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov cmp ja mov mov cmp je mov mov mov push mov push mov call movzbl test je mov push mov call mov pop ret int3 push mov sub mov mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push mov mov call push push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmpl jg jl cmpl jae mov neg mov adc neg push push mov call mov call jmp mov push mov push mov call mov mov pop ret int3 push mov sub mov cmpl jl mov movl jmp mov add cltd and add sar mov and jns dec or inc neg sbb neg add mov movl lea push lea push call add push push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov mov pop ret push mov push mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov push mov mov call mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov sub cltd mov idiv mov pop ret int3 int3 push mov push mov mov imul mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov movl mov movl mov movb mov mov mov mov add call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov add call mov movl mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov mov call pop ret int3 push mov mov call pop ret int3 push mov push mov mov movl mov movl mov add call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov movl cmpl je xor mov push movzbl push mov sub push mov call mov jmp movl mov mov movl mov mov cmpl jne movl jmp mov mov mov mov lea mov mov mov mov pop mov pop ret push mov sub mov push mov sub push lea call push lea push call mov pop ret int3 int3 int3 int3 push mov push mov mov movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push lea call movzbl neg sbb mov lea push lea push mov push call add push mov call mov movl mov mov pop ret push mov push mov mov mov pop ret int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov lea push mov add call mov movl mov movl mov movl mov mov pop ret int3 int3 int3 int3 push mov push mov mov mov pop ret int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov mov add shr pop ret int3 int3 push mov push push mov push sub mov xor push lea mov mov push mov mov mov push call mov call movl mov push call add push mov push mov call movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret push mov push mov mov mov pop ret push mov push push mov push push push push push push mov xor push lea mov mov mov mov push mov call movzbl test je movl mov push mov push mov mov push mov call mov mov jmp mov call push push call movl mov ret movl mov mov pop pop pop pop mov pop ret int3 int3 push mov push mov lea push mov add call mov movl mov movl mov movl mov mov pop ret int3 int3 int3 int3 push mov push mov mov movl mov movl mov movl cmpl jne xor jmp jmp mov call cmp jae mov call jmp mov push mov add call mov mov mov mov mov mov mov mov mov lea mov mov mov mov pop ret int3 push mov push mov mov add push mov push mov push mov push call add mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 push mov push mov mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl cmpl jbe mov mov jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov xor mov mov mov call movzbl test je mov mov mov cmp jne mov mov mov cmp jne mov push mov call test jne movb jmp movb mov mov movzbl test je mov movzbl mov movzbl cmp je call push mov call mov call jmp call push mov call mov jmp jmp mov call movzbl test je mov call movzbl test jne mov call movzbl test je mov push mov call jmp mov jmp mov push lea call lea call lea push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov movl push mov call mov mov mov xor mov div mov cmpl jne jmp mov imul mov mov mov add mov mov jmp movl movl push lea push call add mov mov push mov call mov mov movl fildll mov fstpl fld1 fstpl movl jmp mov add mov mov cmp jae fldl fdivl fstpl mov push mov call mov mov movl fildll fmull mov faddl mov fstpl jmp mov mov movl fildll mov fdivrl mov fstpl mov movzbl test je mov fldl fchs mov fstpl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push mov push call add push mov push call add push lea push call add lea push mov push lea push call add push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add mov movzbl push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add mov movzbl push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp je mov push call add movzbl test je jmp jmp mov pop ret push mov push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov lea push lea call mov add mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov mov cmp jne lea call xor mov lea push mov push mov push lea push call add lea push mov call jmp mov push push mov push mov push call mov mov mov or je mov push mov call jmp push push mov call mov mov mov mov mov mov push lea call push push mov push mov push call mov mov mov or je lea push lea push call add push push mov push mov push call mov mov mov or je movb jmp movb mov mov movzbl test je lea push mov push call add jmp mov xor call mov pop ret int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push mov sub sar mov mov shl push mov push mov push call add mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push mov xor push lea mov mov lea push mov call mov mov mov movl mov push call add mov movl lea call push mov push call add mov call mov movb movl mov call movzbl push mov push movzbl push mov push call add mov mov push mov call movl movl movl lea call movb movl mov push movzbl push mov call mov cmpl je cmpl jne mov add mov jmp mov sub push mov call add mov mov mov mov mov mov add push mov call movsbl mov push mov call movsbl cmp jne mov add push mov push mov push mov push call add mov add mov mov mov jmp mov cmp je mov push mov push mov push mov push call add mov mov mov add mov mov push lea push lea push mov call mov call mov mov mov call movzbl push mov push mov push mov push mov call push lea push mov call push lea push call add mov lea push mov call push lea call mov movzbl test jne jmp mov mov mov push mov call mov call mov push mov call mov mov cmpl jne jmp cmpl jne movb jmp cmpl jne movb jmp mov cmp jle mov mov mov add mov mov add mov jmp cmpl jne mov add mov jmp mov sub push mov call add mov mov mov mov mov mov call push mov push mov push mov push call add movzbl test jne cmpl jl mov call movzbl and je push mov push lea call mov mov mov movl mov push call movl lea call movl movl jmp mov add mov mov cmp jge mov push mov call cmpl jne mov push mov call mov mov mov add mov jmp mov sub mov push mov push call add mov call sub mov mov movzbl push call mov mov push mov call movzbl test je mov mov or mov mov mov add mov mov movzbl test je mov mov or mov mov jmp mov mov and mov mov mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov add call mov movl jmp mov add mov mov call cmp jae mov push mov call mov mov add call add mov mov cmpl jne mov mov mov lea push lea push call add mov mov mov add call add mov jmp mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov lea push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov push sub mov mov mov mov mov mov mov mov mov lea call sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov movl movl mov push mov push lea call mov call mov or mov movb lea call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push mov call neg sbb add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov movl lea push lea push call add movzbl test je mov push lea push push push lea push call add movl lea push lea push call add movzbl test je mov push lea push push push lea push call add lea call movl push lea push lea call push lea push lea push lea push call add push lea call lea push lea push call add movzbl test je lea push call add push lea push call add movzbl test je mov movzbl push sub mov lea push call mov push call add mov jmp jmp lea push lea push call add movzbl test je lea push call add push lea push call add movzbl test je mov movzbl push sub mov lea push call mov push call add mov jmp movl lea push lea push call add movzbl test je movl push lea push lea push lea push call add push mov call mov jmp jmp movl lea push lea push call add movzbl test je movl push lea push lea push lea push call add push mov call mov jmp lea push lea push call add movzbl test je lea push lea push call add fldl fstpl call fstpl push push lea push lea call push lea push lea push lea push call add push lea push call add push lea call fldl fstpl call fstpl push push lea push lea call push lea push lea push lea push call add push lea push call add push lea call fldl fstpl call fstpl push push lea push lea call push lea push lea push lea push call add push lea push call add push lea call lea push lea push call add push lea push lea push call add push lea push lea push call add push lea push call add push lea push call add push lea call fldl fstpl push lea push push lea push lea call push lea push lea push call add push lea push call add push lea call movl lea push lea push lea push call add push lea push lea push lea push call add push lea push call add push call add movzbl test je movl lea push lea push call add movzbl test je mov push lea push lea push lea push call add push lea push call add mov push mov push lea push call add push lea push lea push call add push lea push call add push lea call jmp fldl fstpl lea push push lea push lea call push lea push lea push call add push lea push call add push lea push lea push lea push call add push lea push call add push lea call flds fstps lea push lea push call add movzbl test je lea push lea push lea push lea push call add push lea push lea push lea push call add push lea push call add push lea push call add push lea call jmp lea push lea push lea push lea push call add push lea push lea push lea push call add push lea push call add push lea push call add push lea call lea push call push lea push call add push lea push call add push lea call lea push lea call lea push mov call mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov cmpl jne movl cmpl jne movl push lea call movl push mov call mov mov push lea call mov mov mov movb lea push lea push mov call mov call mov mov mov movb mov lea call movb lea call movb lea call push lea call mov push lea call lea push lea call movb lea push call movb lea call movl lea call mov mov pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov lea push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push lea call lea call lea call movl lea push lea push call add movzbl test je mov sub imul add push lea call push lea call mov sub imul add push lea call push lea call mov sub mov jmp mov sub mov cmpl jl lea push lea call lea push lea call mov imul add push lea call mov imul add push lea call jmp jmp movl lea push lea push lea push call add push lea call mov push lea call push lea call mov push lea call push lea call movl jmp mov add mov mov cmp jae lea push lea call lea push lea call mov imul add push lea call mov imul add push lea call jmp push lea push lea push lea push call add push mov call mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call lea call push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov movl lea push mov push call add movzbl test je mov push mov push push mov push mov push call add mov jmp movl lea push mov push call add movzbl test je push mov push push mov push lea push call add push lea push call add push mov call mov jmp push mov push lea call push lea push call add push lea call flds fstps push lea push lea call push lea push call add movzbl test je movl push mov push lea call push lea push lea push call add push lea push call add push mov call mov jmp lea push call add push lea push call add movzbl test je mov push mov call mov jmp sub mov mov push call lea call call xor mov mov lea push lea push call add push lea push lea push call add mov push mov push mov push mov push call add lea push mov call mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call lea call push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push lea push lea push call add push lea call flds fstps push lea push lea call push lea push call add movzbl test je lea push call add push lea push call add movzbl test je movl lea push lea push call add movzbl test je mov push push push mov push call add mov jmp movl push lea push mov call mov jmp movl push push lea push lea call push lea push lea push call add push lea push call add push mov call mov jmp lea push call add push lea push call add movzbl test je lea push mov call mov jmp sub mov lea push call lea call call xor mov mov lea push lea push call add push lea push lea push call add mov push mov push mov push push call add lea push mov call mov mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov and jne mov or mov movl push lea push call add push lea push call add push mov call movl push mov call mov mov mov pop mov xor call mov pop ret int3 int3 push mov push push mov push sub mov xor mov push lea mov mov and jne mov or mov movl push lea push call add push lea push call add push mov call movl push mov call mov mov mov pop mov xor call mov pop ret int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov pop ret int3 int3 int3 int3 int3 push mov push xor mov lea push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call lea call push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push mov xor mov pop ret int3 push mov mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov lea push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov push sub mov mov mov mov mov mov mov mov mov lea call sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov movl movl mov push mov push lea call mov call mov or mov movb lea call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov lea push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov push sub mov mov mov mov mov mov mov mov mov lea call sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov movl movl mov push mov push lea call mov call mov or mov movb lea call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov push lea push call add mov mov mov movl mov push lea push call add push lea push call movl lea call mov mov pop mov pop ret int3 int3 int3 push mov sub mov movzbl test je mov call mov push mov push call add mov mov add mov mov mov add call test je mov mov mov cmp jge mov mov push lea push mov add call mov call movzbl test je mov mov add mov mov jmp mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov push movl mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl push mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jge xor sub mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl jg jl cmpl jae xor sub mov sbb mov mov jmp mov mov mov mov mov mov mov pop ret int3 push mov push push mov push sub mov xor mov push lea mov movb lea push call add mov mov mov mov mov lea call movl call push lea call movzbl test je lea push call add mov lea push mov call movb lea call mov cmpl je push lea call movsbl test jle mov call mov movl push lea call mov mov mov mov movsbl test jne mov add mov mov cmp jae mov push lea call mov mov movsbl test jg movb jmp mov mov mov mov mov mov mov sub mov lea push mov push call add mov sub mov mov sub mov push push mov push mov push call mov mov add mov lea push call add mov lea push mov push call add push push mov push mov push call mov mov mov or jne mov mov movb lea call movl lea call mov jmp movb lea call mov sub mov push push mov push mov push call mov mov add mov lea push call add mov lea push mov push call add push push mov push mov push call mov mov mov or jne mov mov movl lea call mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp je mov push mov push call add jmp pop ret int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov cmp jge mov mov jmp mov mov mov mov mov mov pop ret int3 int3 int3 push mov push mov mov mov pop ret push mov push mov push mov push call add mov movzbl push mov push call add push mov push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl cmpl ja movl jmp cmpl ja mov shl push call add mov cmpl jne push lea call push lea push call mov mov pop ret int3 int3 int3 int3 push mov sub mov mov add call mov add call mov add call mov pop ret int3 int3 push mov push mov mov call mov add call mov pop ret int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl cmpl jne movl jmp mov mov mov mov lea mov mov push mov add call movl mov or mov mov push mov call mov movl mov movl mov mov mov mov movl mov mov mov mov movl movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov push mov call movl cmpl je mov add mov jmp movl mov push mov add call mov movl mov movl movl mov mov mov pop mov pop ret push mov push mov mov push mov call mov movl mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 push mov push mov mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov push mov call push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov add push mov call mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push mov push lea push lea push mov call mov call mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push lea call push mov call mov mov pop ret push mov push mov mov xor cmp sete mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push mov call mov mov pop ret push mov push call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov sub sar mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl mov call cmp jae lea push mov call mov mov lea push mov call mov sub push mov push mov call jmp mov call cmp jae lea push mov call mov mov mov push lea push lea push mov call mov call mov mov mov push mov push lea push mov call movl lea call mov mov pop mov pop ret int3 push mov push mov mov imul mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov movl mov add call mov add call movzbl push mov add call call mov mov mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov movl push lea push lea call lea push lea push call add lea push lea push call add lea push lea push call add lea push lea push call add call fstp mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov add call mov movl mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov movl push lea push lea push call add push mov add call movl push lea push mov add call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov movl lea push mov add call movl push lea push mov add call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call call pop ret int3 push mov push mov mov movl mov movl mov add call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov movl cmpl je xor mov push movzbl push mov sub push mov call mov jmp movl mov mov movl mov mov cmpl jne movl jmp mov mov mov mov lea mov mov mov mov pop mov pop ret push mov sub mov push mov sub push lea call push lea push call mov pop ret int3 int3 int3 int3 push mov push push mov mov call mov mov call and neg sbb neg pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push lea push mov call mov push lea push mov call lea push lea call movzbl test je mov push mov mov push mov push call add mov mov mov push mov push mov call mov mov mov mov mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push sub mov xor mov push push push push lea mov mov mov cmpl jne jmp mov call mov mov call sub cmp jae mov call jmp mov call mov add mov call cmp jae mov call add push mov call mov mov push mov add call mov mov mov sub cltd mov idiv mov movl movl mov push call add push mov push mov imul add push mov call mov add mov mov push mov push mov mov push mov call mov add mov mov add imul add push mov mov push mov push mov call jmp cmpl jle mov imul add push mov push mov call cmpl jle mov imul mov imul add add push mov imul add push mov call mov push mov push mov add call push push call movl mov ret movl mov call add mov mov cmpl je mov mov push mov mov push mov call mov mov mov sub cltd mov idiv push mov mov push mov add call call mov imul add mov mov mov imul add mov mov mov mov mov jmp mov mov sub cltd mov idiv cmp jae mov push lea call movl mov imul add push mov mov push mov push mov call movb lea push call add push mov mov sub cltd mov idiv mov sub push mov mov push mov call jmp mov imul mov add push mov imul add push mov call push push call movl mov ret movl mov imul mov add mov mov mov mov push mov push mov call lea push mov imul mov mov sub push mov push call add movl lea call jmp mov push lea call movl mov mov mov mov mov push mov push mov imul mov sub push mov call mov mov mov mov push mov push mov call mov push mov imul mov sub push mov push call add lea push mov imul add push mov push call add movl lea call mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov add call movzbl push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov and jne mov or mov movl lea push push push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov push mov mov mov mov shl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov push lea call mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push lea call mov mov mov mov mov pop ret int3 int3 int3 push mov mov call pop ret int3 push mov push push mov push sub push mov xor push lea mov mov mov mov mov mov mov add mov add call movl mov add mov add call mov add push mov add call mov mov mov mov mov mov mov mov mov mov movl mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add push mov add call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov push mov mov mov mov sub cltd mov idiv mov pop ret int3 int3 push mov push mov mov push mov push mov call mov mov pop ret push mov push mov mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov call mov shr sub cmp jae movl jmp mov shr add mov mov mov mov cmp jae mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add push mov push mov push mov push call add mov imul add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call push mov mov push mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov push mov push mov call mov mov pop ret push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov push mov mov push mov push mov call mov mov pop ret push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov push mov mov push mov call movzbl neg sbb add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov movb mov call movzbl test je mov call push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl cmpl jbe mov mov jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 push mov push mov mov push push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmpl jge xor sub mov cmp jae mov mov add mov mov mov or sub shr lea mov mov sub mov mov mov mov xor mov div mov mov jmp mov mov add mov mov mov mov shr mov mov lea mov mov mov mov xor mov div mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov imul mov add mov mov mov mov pop ret push mov push mov mov push mov call mov mov mov xor cmp sete mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov sub mov mov add call push push call add mov cmpl je mov push mov call mov jmp movl mov movb mov pop ret int3 int3 int3 int3 push mov sub mov movzbl push mov call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 push mov push mov mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret push mov push mov mov mov pop ret int3 int3 push mov mov cmp je lea call mov mov cmp jne mov add mov lea call jmp lea push lea push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add push mov push call add push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push mov sub sar mov mov shl push mov push mov push call add mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov sub sar mov mov shl push mov push mov shl mov sub push call add mov shl mov sub mov pop ret int3 int3 push mov sub mov xor mov mov cmp jne mov push mov push call add jmp mov cmp jne lea call mov push mov push lea push call add mov push lea call jmp mov push mov call mov push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call add mov mov mov push call add mov mov mov lea push call add mov mov mov mov pop ret int3 push mov sub mov lea push mov call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov add call test je orl mov add call push lea call mov jmp orl lea call mov mov mov mov push mov call mov and je andl lea call mov and je andl lea call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl jmp mov add mov mov call cmp jae mov add call test je mov push mov call cmpl jl mov push mov call mov push lea push mov add call mov call movzbl test jne push mov push mov call add mov call jmp mov movl mov movb mov add call test je jmp mov mov add mov mov mov mov mov cmp jge mov mov push lea push mov add call mov call movzbl test je jmp mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov lea push mov call mov mov mov movl push mov push call add mov call mov movl lea call mov call test jne movzbl push lea call mov mov mov movl mov push mov push mov call movl lea call jmp mov call cmp jbe sub mov mov movzbl push call mov mov push mov call push push mov add call movl jmp mov add mov mov cmp jae movzbl push mov push mov call mov call jmp push mov add call mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push mov xor push lea mov movl movl mov push movzbl push mov call mov cmpl je mov add mov call cmp jb movzbl and je mov call push mov push lea call mov mov mov movl mov push call movl lea call jmp mov add mov jmp mov add push mov call movsbl mov push mov call movsbl cmp jne mov add mov jmp mov add mov lea push mov call push lea push mov call mov push mov push lea push lea push mov call mov call mov push mov push lea push call add mov call mov mov call cmp jae mov push mov call movsbl movsbl cmp jne mov add mov mov add mov jmp mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push lea push lea push mov call mov call mov push mov push lea push lea push mov call mov call mov push mov call mov pop ret int3 int3 push mov sub push mov movl movb movb mov mov mov lea push mov call add mov mov push mov call movzbl test je mov push lea push mov call add push movzbl push call add xor jmp mov call movsbl push mov push call add mov call movsbl cmp jne movb mov push mov call mov call movzbl test je mov push lea push mov call add push movzbl push call add xor jmp mov call movsbl push mov push call add mov call movsbl cmp jne jmp jmp mov call movzbl push mov push call add movzbl test je mov push lea push mov push mov push lea push call add mov mov mov mov push mov call movzbl test je mov push lea push mov call add push movzbl push call add xor jmp mov call movsbl push mov push call add mov call movsbl cmp jne mov sub mov mov mov call movzbl test je mov push lea push mov call add push movzbl push call add jmp mov jmp mov call movsbl push mov push call add mov call movsbl cmp jne mov sub mov mov mov call jmp mov cltd mov mov mov mov movl jmp jmp mov push mov call movzbl test je push mov call movzbl push mov push call add movsbl mov mov sub mov cmpl ja mov movzbl jmp jmp jmp mov mov or mov mov jmp mov mov or mov mov jmp mov mov or mov mov jmp mov mov or mov mov jmp mov mov or mov mov jmp mov mov or mov mov jmp mov mov or mov mov jmp jmp jmp mov call jmp mov push mov call movzbl test je mov push lea push mov call add push movzbl push call add mov jmp mov call movsbl push mov push call add mov call movsbl cmp jne mov push mov mov push mov mov push lea push call add mov mov mov mov push mov call movzbl test je mov call movzbl push mov push call add movzbl test je mov push mov add push mov push mov push lea push call add mov mov mov mov push mov call movzbl test je mov push lea push mov call add push movzbl push call add mov jmp mov call movsbl push mov push call add mov call movsbl cmp jne mov call mov push mov call movzbl test je mov call movsbl push mov push call add mov call movsbl cmp jne mov push mov mov push mov mov push lea push call add mov mov mov mov push mov call movzbl test je mov call movzbl push mov push call add movzbl test je mov push mov add push mov push mov push lea push call add mov mov mov movb jmp mov movl movl mov push mov call movzbl test je mov call movsbl push mov push call add mov call movsbl cmp je mov call movsbl push mov push call add mov call movsbl cmp je mov call movsbl push mov push call add mov call movsbl cmp jne mov call jmp mov push mov call movzbl test je mov push lea push mov call add push movzbl push call add mov jmp movzbl test je mov call movsbl push mov push call add mov call movsbl cmp jne mov call mov jmp push mov call movzbl push mov push call add movsbl mov mov sub mov cmpl ja mov movzbl jmp mov mov or mov mov mov mov and mov mov mov mov or mov mov jmp mov mov and mov mov mov mov or mov mov jmp mov mov or mov mov mov mov and mov mov mov mov or mov mov mov mov and mov mov mov mov or mov mov jmp mov mov and mov mov mov mov or mov mov mov mov and mov mov mov mov or mov mov jmp mov call mov push mov call movzbl test je mov push lea push mov call add push movzbl push call add jmp mov call mov mov mov mov mov or mov mov mov movl jmp push mov push call add mov call mov mov mov mov or mov mov mov movl jmp mov mov or mov mov jmp mov mov and mov mov mov mov or mov mov mov mov and mov mov jmp mov movl movl jmp movzbl test je mov mov mov mov mov mov mov movl movl jmp mov movl jmp mov push lea push mov call add push movzbl push call add mov call movzbl test je mov push mov call movzbl test je mov call movsbl push mov push call add mov call movsbl cmp jne mov call mov jmp jmp mov push lea push mov call add push movzbl push call add mov pop mov pop ret nop pop inc inc add inc inc add inc add inc inc add inc add inc add inc add inc inc add or or or or or or or or or or or push or or or or or or or or or or or or or or or or or or or or or or or or inc add inc add dec inc add dec inc add inc inc add inc inc add inc inc add dec inc add inc add inc add inc inc add dec inc add push add add push push push push push push push push push push add push push add push push push push push push add pop or push push push push push push or or push add int3 int3 push mov push mov mov mov and je mov mov and je mov mov and mov mov jmp mov mov and mov mov mov movb mov mov and or mov mov mov mov and je mov mov and je mov mov and mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov sub mov xor mov push mov mov push mov push lea call lea push mov push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov call push mov call push call add pop ret int3 push mov push xor mov lea push mov push call add mov mov pop ret push mov sub xor mov movzbl push lea push sub mov lea push call mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push call add push lea call mov push call add push mov call lea push call add push mov call mov xor call mov pop ret int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push lea push mov call mov mov pop ret push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call push mov push lea call lea call push lea call push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push mov call push lea call push mov call mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov push call xor mov xor mov push sub mov lea push lea push push lea push lea call push push call add mov push call add mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push mov push lea push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov push mov call movzbl test je mov push mov call movzbl test jne push mov push lea call xor mov lea push lea push lea call push mov call jmp xor mov lea push mov push mov call mov mov xor call mov pop ret int3 push mov sub mov push call add fstpl lea push mov call push call add mov pop ret int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push mov push lea push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov push mov call movzbl test je mov push mov call movzbl test jne push mov push lea call xor mov lea push lea push lea call push mov call jmp xor mov lea push mov push mov call mov mov xor call mov pop ret int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push mov push lea push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov push mov call movzbl test je mov push mov call movzbl test jne push mov push lea call xor mov lea push lea push lea call push mov call jmp xor mov lea push mov push mov call mov mov xor call mov pop ret int3 push mov push push mov push sub mov xor push lea mov mov push call add mov push lea push call add mov mov mov movl mov push lea push call add push lea push call movl lea call mov mov pop mov pop ret int3 int3 int3 push mov sub mov lea push mov call mov call push call add mov mov lea push mov call mov call push call add push lea push mov push call add mov pop ret int3 int3 push mov sub mov lea push mov call mov call push call add mov mov lea push mov call mov call push call add push lea push mov push call add mov pop ret int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je push mov push lea call mov push lea call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add fldl fstpl mov call mov mov pop ret int3 int3 int3 int3 int3 push mov push xor mov mov push lea push mov call mov mov pop ret push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add fstpl mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov call push mov call push call add pop ret int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push lea push mov call mov mov pop ret push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push xor mov lea push mov push call add mov mov pop ret push mov sub mov xor mov movl push lea push lea call lea push mov push mov push mov push mov push call add mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov call xor mov mov mov cmp jb ja mov cmp jb mov mov mov mov mov mov andl fildll andl movl fildll fchs faddp fstpl mov push push lea push lea call push push mov push lea push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov movl push lea push lea call lea push mov push mov push mov push mov push call add mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add push lea push mov call mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne xor je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov push movl mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl push mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov mov cmp jl mov call movzbl and je mov mov push mov mov push lea call mov mov mov movl mov push call movl lea call jmp jmp movl jmp mov add mov mov call cmp jae mov push mov call mov mov cmp jne mov add push call add push mov add push mov push mov call add push mov push mov call push mov push call add jmp mov mov pop mov pop ret int3 int3 int3 push mov sub mov movzbl test je mov call mov push mov push call add mov mov add mov mov mov add call test je mov mov mov cmp jge mov mov push lea push mov add call mov call movzbl test je mov mov add mov mov jmp mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea call movzbl push mov push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl movl mov movl movl mov mov mov mov movl mov movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov call mov and jne mov or mov movl xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call movl mov and jne mov or mov movl xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call movl push mov push push push mov push call add mov mov mov pop mov xor call mov pop ret int3 int3 push mov push push mov push sub mov xor mov push lea mov call mov and jne mov or mov movl xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call movl movl push lea push lea call movl jmp mov add mov cmpl ja mov imul mov lea push mov push lea push lea push call add push lea push call add push mov push mov sub imul add push lea push call add push lea push call add push lea push call add push lea call jmp lea push mov call mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov call mov and jne mov or mov movl xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call xor mov lea push lea push push sub fldz fstpl lea push call add push mov call movl movl push lea push lea call movl push lea push mov push lea push call add push lea call movl jmp mov add mov cmpl ja movl mov imul mov lea push lea push lea push lea push lea push call add push lea push lea push call add push lea push call add push lea push call add push mov push mov sub imul add push lea push call add push lea push call add push lea push call add push lea call jmp lea push mov call mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add mov movzbl push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push call add push mov push call add push call add pop ret int3 int3 int3 int3 int3 push mov push mov push mov push call add mov movzbl push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov lea push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add mov movzbl push mov push call add push mov push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl cmpl ja movl jmp cmpl ja mov imul push call add mov cmpl jne push lea call push lea push call mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov add call mov pop ret int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl cmpl jne movl jmp mov mov mov mov lea mov mov push mov add call movl mov or mov mov push mov call mov movl mov movl mov mov mov mov movl mov mov mov mov movl movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov push mov call movl cmpl je mov add mov jmp movl mov push mov add call mov movl mov movl movl mov mov mov pop mov pop ret push mov push mov mov push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call cmp jae lea push mov call mov mov mov mov movzbl push mov call mov sub push mov push mov push mov call jmp mov call cmp jae lea push mov call mov mov mov mov mov push lea push lea push mov call mov call mov mov mov mov mov push mov push mov push mov push lea push mov call mov pop ret int3 int3 push mov push mov mov push mov call movzbl neg sbb add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov push mov push mov call mov pop ret int3 int3 int3 push mov push mov mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov push mov mov mov mov mov mov mov mov mov pop ret push mov push mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov add call mov movl mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov add call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov movl cmpl je xor mov push movzbl push mov sub push mov call mov jmp movl mov mov movl mov mov cmpl jne movl jmp mov mov mov mov lea mov mov mov mov pop mov pop ret push mov sub mov push mov sub push lea call push lea push call mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov lea call call lea push lea push lea call mov mov push lea call movzbl test je lea push lea call movzbl test jne push push lea call mov mov mov movl mov push call movl lea call lea push mov call mov mov mov pop mov xor call mov pop ret int3 push mov sub mov lea push lea call movzbl test je lea push mov call mov mov mov push mov push call add push mov push mov push call add push mov call jmp lea push mov call mov mov lea push lea call push lea call push mov push mov push call add push mov push mov push call add push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov cmp ja push mov push mov call jmp movzbl push mov mov sub push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl neg sbb and mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov cmpl jbe mov mov push lea call mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push mov push lea push mov call mov push mov push lea push mov call lea push mov call push lea call mov lea push lea call movzbl test je mov push mov push lea push mov call mov push mov push mov push mov push lea push call add lea push mov call push lea call push mov call mov push mov push lea push mov call mov call mov mov pop ret int3 int3 int3 push mov sub mov mov push mov push mov push mov call mov lea push mov add push lea push lea push mov call mov call mov push mov push mov push lea push lea push mov call mov call mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov mov mov cmp sbb neg mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov mov push lea call movl lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call lea push mov call mov mov lea push mov push mov push mov call movl lea call mov mov pop mov xor call mov pop ret int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov push mov call movzbl test je mov push mov call mov sub push mov push mov push mov push mov call jmp mov mov cmp jae mov call mov mov sub cmp jae mov mov sub mov or sub mov mov sub cmp ja mov call mov mov sub sub mov mov cmp jae mov push mov call add add push mov call add add push call add cmpl ja cmpl jbe mov mov add sub mov push mov push mov call movzbl test je mov cmp jae mov push mov call add add push mov call add add push call add mov push mov push mov call add push call add mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov cmpl jbe lea push mov call push lea call push lea call mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov lea push mov call push lea call mov cmpl jne jmp mov call mov mov call sub cmp jae mov call jmp push mov call add push call add push mov call mov call test jne mov mov add mov mov jmp lea push mov call mov mov add mov mov lea push mov call mov push mov push mov push mov push mov push lea push lea push mov call mov call mov push mov push lea push call add mov pop mov pop ret int3 int3 int3 push mov sub mov mov call cmp jae mov call mov push call add mov mov call cmp jae lea push mov call mov mov mov push lea push lea push mov call mov call mov mov mov push mov push lea push mov call mov mov mov mov xor mov div mov cmpl jbe mov sub push mov call mov mov mov shl sub mov and mov mov mov pop ret int3 int3 int3 int3 push mov push mov mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call movzbl neg sbb add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov cmp jb mov call cmp jae mov call mov mov sub cmp jae mov mov sub mov mov call sub mov mov cmp jae mov mov or sub mov mov sub cmp ja mov call mov mov sub sub mov mov mov add sub mov mov mov cmp jae push mov push mov call mov cmp je mov push mov call add add push mov call add add push call add mov push mov call add push mov call add push call add jmp mov cmp ja mov push mov call add push mov call add push call add mov push mov call add add push mov call add add push call add jmp mov cmp ja mov push mov call add add push mov call add add push call add mov push mov call add push mov call add push call add jmp mov add cmp ja mov push mov call add add push mov call add add push call add mov push mov call mov add sub add push mov call add push call add jmp mov push mov call add push mov call add push call add mov push mov call add add push mov call add add push call add mov sub push mov call add add push mov call add add push call add mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov cmpl jae mov shl mov jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call cmp jae lea push mov call mov mov lea push mov call mov sub push mov push mov call jmp mov call cmp jae lea push mov call mov mov mov push lea push lea push mov call mov call mov mov mov push mov push lea push mov call mov pop ret int3 push mov push mov mov mov mov sub sar mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push lea push mov call mov push lea push mov call lea push lea call movzbl test je mov push mov mov push mov push call add mov mov mov push mov push mov call mov mov mov mov mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov mov mov sub sar shl mov add mov sub mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov push mov call mov mov mov cmp jne mov mov mov cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push lea call mov mov mov mov mov pop ret int3 int3 int3 push mov push mov mov push mov push mov call mov mov pop ret push mov push push mov push push sub push push push mov xor push lea mov mov mov cmpl jne jmp mov call mov mov call sub cmp jae mov call jmp mov call mov mov call add cmp jae mov call add push mov call mov mov push mov add call mov mov mov sub sar mov movl movl mov push call add push mov push mov mov lea push mov call mov add mov mov push mov push mov mov push mov call mov add mov mov add mov lea push mov mov push mov push mov call jmp cmpl jle mov mov lea push mov push mov call cmpl jle mov mov lea mov lea push mov mov lea push mov call mov push mov push mov add call push push call movl mov ret movl mov call add mov mov cmpl je mov mov push mov mov push mov call mov mov mov sub sar push mov mov push mov add call call mov mov lea mov mov mov mov lea mov mov mov mov mov jmp mov mov sub sar cmp jae mov mov mov mov mov lea push mov mov push mov push mov call movl lea push call add push mov mov sub sar mov sub push mov mov push mov call jmp mov mov mov lea push mov mov lea push mov call push push call movl mov ret movl mov mov mov lea mov mov mov mov push mov push mov call lea push mov shl mov mov sub push mov push call add jmp mov mov mov mov mov mov mov mov push mov push mov shl mov sub push mov call mov mov mov mov push mov push mov call mov push mov shl mov sub push mov push call add lea push mov mov lea push mov push call add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 push mov push mov mov push mov push mov call mov mov pop ret push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov push mov mov push mov call movzbl neg sbb add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov sub sar mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov call mov shr sub cmp jae movl jmp mov shr add mov mov mov mov cmp jae mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 push mov push mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov lea mov mov mov mov pop ret push mov push mov mov push mov call mov mov mov xor cmp sete mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 push mov push mov mov push call add push mov push call add push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add mov mov mov mov push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl call mov mov mov mov movl push mov add call push mov add call movzbl push mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp lea call lea push lea call movzbl test je lea call movzbl push mov push call add movzbl test je jmp mov mov mov mov pop ret int3 int3 push mov movzbl push push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea call mov movl mov mov mov jmp lea call mov push lea call movzbl test je lea call movzbl push mov push call add movzbl test je push lea call movzbl push mov push call add mov mov mov imul mov mov movsbl mov mov lea mov mov jmp mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov movzbl push movzbl push mov push call add mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push lea call mov push mov push mov push lea push call add mov mov lea push lea call movzbl test je lea call movsbl push mov push call add mov call movsbl cmp jne lea call mov mov mov mov pop mov pop ret int3 int3 int3 int3 push mov sub lea call mov movl movl mov mov mov jmp lea call mov push lea call movzbl test je lea call movzbl push mov push call add movzbl test je push lea call movzbl push mov push call add mov mov push push mov push mov push call mov mov mov movsbl sub cltd mov add adc mov mov mov jmp mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movzbl test je mov call mov push mov push call add mov mov add mov mov mov add call test je mov mov mov cmp jge mov mov push lea push mov add call mov call movzbl test je mov mov add mov mov jmp mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push xor mov xor mov push sub mov lea push lea push sub mov lea push call push call add mov push call add mov pop mov pop ret int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov flds pop ret int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl push mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add push lea push mov call mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je push mov push lea call mov push lea call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov mov mov mov mov push lea call lea call lea push mov call push lea call lea push lea call lea push lea push call add push lea push mov push lea push call add push lea push call add push call add movzbl test je mov sub mov sbb mov mov mov or jne mov mov sub mov sbb mov mov mov lea push mov call mov mov xor call mov pop ret int3 int3 push mov sub cmpl je mov mov jmp movl lea push mov push mov push mov push mov push call add mov mov pop ret int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add push lea push mov call mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov mov mov mov mov push lea call lea call lea push mov call push lea call lea push lea call lea push lea push call add push lea push mov push lea push call add push lea push call add push call add movzbl test je mov sub mov sbb mov mov mov or jne mov mov sub mov sbb mov mov mov lea push mov call mov mov xor call mov pop ret int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call xor mov lea push lea push lea call push mov call mov xor call mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add push mov push call add lea push mov call mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne xor je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je push mov push lea call mov push lea call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movzbl test je mov call mov push mov push call add mov mov add mov mov mov add call test je mov mov mov cmp jge mov mov push lea push mov add call mov call movzbl test je mov mov add mov mov jmp mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movzbl test je mov call mov push mov push call add mov mov add mov mov mov add call test je mov mov mov cmp jge mov mov push lea push mov add call mov call movzbl test je mov mov add mov mov jmp mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov push lea push call add mov mov mov movl mov push lea push call add push lea push call movl lea call mov mov pop mov pop ret int3 int3 int3 push mov mov call pop ret int3 int3 int3 push mov push push mov push sub push mov xor push lea mov push mov push lea call movl lea test jne movl jmp mov mov lea mov mov push mov push mov add call lea test je lea add mov jmp movl mov push mov push call add mov mov lea call mov mov and setne mov mov mov lea call mov mov movzbl test je mov or je movb jmp movb mov mov push mov call movzbl test jne cmpl jl jg cmpl jbe push push mov mov lea call lea test je lea add mov jmp movl mov push mov push call add mov call mov movb mov mov and je mov call test je mov movsbl push mov mov lea call movsbl cmp je mov movsbl push mov mov lea call movsbl cmp je push mov mov lea call mov mov call mov movsbl test je movl movl jmp movl movl mov mov sub mov sbb mov lea push lea push call add mov mov mov mov and setne movzbl push movzbl push mov push mov mov lea call movzbl push mov push mov push mov push mov push mov push call add jmp lea test je lea add mov jmp movl mov push mov push call add mov call mov mov call mov movb mov mov and je mov call test je mov movsbl push mov mov lea call movsbl cmp je mov movsbl push mov mov lea call movsbl cmp je movb mov cmp jne mov mov mov mov cmp jg jl mov mov cmp ja movzbl test jne mov push mov push mov call jmp mov push mov push mov call movl mov call push mov push lea call movb lea test jne movl jmp mov mov lea mov mov push mov push mov add call lea test je lea add mov jmp movl mov push mov push call add push push mov mov lea call movzbl test je lea test je lea add mov jmp movl push mov push call add lea test je lea add mov jmp movl mov push mov push call add mov call test jne mov mov and je movb lea test je lea add mov jmp movl push mov push call add mov call mov mov call mov mov mov mov lea push lea push call add mov mov mov cmp ja mov push mov push mov call jmp movzbl neg sbb neg add mov lea push lea push call add mov mov movzbl mov jmp mov add mov mov cmp jae mov add movsbl movzbl neg sbb neg mov sub mov mov call movsbl cmp jne jmp mov cmp jb movzbl mov mov push mov push mov call mov xor mov sub mov sbb mov mov mov mov lea call movzbl push mov push mov call mov sub push mov add push mov call movb lea call mov call movl lea call mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov mov cmp jl mov call movzbl and je mov mov push mov mov push lea call mov mov mov movl mov push call movl lea call jmp jmp movl jmp mov add mov mov call cmp jae mov push mov call mov mov cmp jne mov add push call add push mov add push mov push mov call add push mov push mov call push mov push call add jmp mov mov pop mov pop ret int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov mov push mov push lea call movl lea push mov push mov push mov call mov mov movl lea call mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov jmp mov sub mov mov add mov cmpl jbe mov mov mov mov jmp pop ret int3 int3 int3 int3 int3 push mov mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov call push mov push lea call push mov call mov mov pop ret int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push lea push mov call push lea push mov call push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov push mov call movzbl test je mov push mov call movzbl test jne push mov push lea call xor mov lea push lea push lea call push mov call jmp xor mov lea push mov push mov call mov mov xor call mov pop ret int3 push mov sub mov push lea push mov call push lea push mov call push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov push mov call movzbl test je mov push mov call movzbl test jne push mov push lea call xor mov lea push lea push lea call push mov call jmp xor mov lea push mov push mov call mov mov xor call mov pop ret int3 push mov jmp mov add mov mov add mov mov cmp je mov push call add push mov call jmp mov pop ret int3 int3 int3 int3 int3 push mov push mov push mov push call add mov movzbl push mov push call add push mov push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp je mov push mov call jmp pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp je mov sub mov mov sub mov mov push mov call jmp mov pop ret push mov xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push push push push mov xor push lea mov mov mov mov movl jmp mov sub mov mov add mov cmpl jbe mov push mov push mov push call add jmp jmp jmp mov add mov mov cmp je mov push mov push call add jmp push push call movl mov ret movl mov mov pop pop pop pop mov pop ret int3 int3 int3 push mov push mov call pop ret int3 push mov push mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov push mov push lea push call add mov push mov push mov push mov push lea push call add mov push mov push mov push mov push lea push call add mov push mov push lea push call add mov push mov push lea push call add mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov push mov push mov push lea push call add mov push mov push mov push mov push lea push call add mov push mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov push mov push lea push call add mov push mov push mov push mov push lea push call add mov push mov push mov push mov push lea push call add mov push mov push lea push call add mov push mov push lea push call add mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add mov movzbl push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push call add push mov push call add push call add pop ret int3 int3 int3 int3 int3 push mov push mov mov call mov add call mov pop ret int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl cmpl jne movl jmp mov mov mov mov lea mov mov push mov add call movl mov or mov mov push mov call mov movl mov movl mov mov mov mov movl mov mov mov mov movl movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov push mov call movl cmpl je mov add mov jmp movl mov push mov add call mov movl mov movl movl mov mov mov pop mov pop ret push mov push mov mov push mov call mov movl mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 push mov push mov mov add call mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov add mov add call mov add mov add call mov add push mov add call mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov sub call mov pop ret int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add push mov add call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov mov push mov push mov push call add push mov push mov push call add push mov call mov pop ret int3 int3 push mov push mov mov push mov call mov mov pop ret int3 int3 int3 int3 push mov sub mov mov movzbl test je mov call mov jmp movl mov mov pop ret int3 int3 push mov push call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov mov pop ret push mov push push mov mov call mov mov call sub mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov add push mov add call mov mov add mov mov push mov push mov add push lea push call add push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov add mov mov mov add push mov add call mov push mov add call mov add push mov call mov mov pop ret int3 int3 int3 push mov push mov mov push mov call mov add call mov movl mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov add call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov movl cmpl je xor mov push movzbl push mov sub push mov call mov jmp movl mov mov movl mov mov cmpl jne movl jmp mov mov mov mov lea mov mov mov mov pop mov pop ret push mov sub mov push mov sub push lea call push lea push call mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov xor mov movzbl push mov push mov call movl push push mov call push mov add call mov mov mov mov movl movl mov mov mov pop mov pop ret int3 int3 push mov push mov mov sub call mov and je mov sub push call add mov sub mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov mov mov mov movl movzbl push mov push mov mov mov add call movl mov mov mov pop mov pop ret int3 push mov sub mov mov call movzbl test je mov call movzbl test je movzbl push mov call push mov call jmp mov call jmp mov call movzbl test je mov call push mov call mov pop ret int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov call mov pop ret push mov push mov mov mov mov pop ret push mov sub mov movzbl push mov call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov pop ret push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add mov mov mov mov push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov and cmp je mov mov push mov push mov call mov mov mov mov mov and cmp je mov mov push mov push mov call mov movsbl test je mov movzbl push mov call mov mov push mov call push mov mov push mov call mov mov push mov call mov add call test je mov add call push lea push mov call lea call jmp cmpl je mov push lea push mov call lea call mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov mov cmp jl mov call movzbl and je mov mov push mov mov push lea call mov mov mov movl mov push call movl lea call jmp jmp movl jmp mov add mov mov call cmp jae mov push mov call mov mov cmp jne mov add push call add push mov add push mov push mov call add push mov push mov call push mov push call add jmp mov mov pop mov pop ret int3 int3 int3 push mov mov cmp jne mov push mov push call add jmp mov cmp jne mov push mov push call add jmp mov push mov call mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push movl push lea push lea call movl lea push lea push call add movzbl test je lea push lea push lea push call add push call add movzbl test je mov push lea push push mov push mov push call add mov jmp movl lea push lea push call add movzbl test je sub mov lea push call lea push call add push mov push mov push sub mov push lea push lea push call add push mov call lea push call add push lea push call add push lea call movl lea push lea push lea push call add push call add movzbl test je call push lea push lea push call add push lea push call add push lea push call add push call add movzbl test je mov push push mov push mov push call add mov jmp lea push call push lea push call add push lea push call add push lea call movl lea push lea push call add movzbl test je mov push push mov push mov push call add mov jmp lea push call add cmp jne mov push lea push push mov push mov push call add mov jmp lea push mov call mov jmp movl lea push lea push call add movzbl test je lea push lea call movl lea push lea call jmp lea push lea push lea push call add push call add movzbl test je movl lea push lea push call add movzbl test je mov push lea push call add sub push lea push call add push lea call jmp lea push lea push call add push lea call call fstpl push call push push lea push lea call push lea push lea push call add push lea push call add push lea call push lea push lea push call add push lea call lea push call add push lea push lea push lea push call add push call add movzbl test je movl lea push call add push lea push lea push lea push lea push call add push lea push call add push call add movzbl test je mov push push mov push mov push call add mov jmp fldl fstpl movl push push lea push lea call push lea push lea push lea push call add push lea push call add push lea push lea push call add push lea call lea push lea push call add push lea push lea push call add push lea call lea push lea push lea push call add push lea push call add push call add movzbl test je mov push push mov push mov push call add mov jmp lea push lea call jmp lea push lea push call add push call push lea push lea push call add push lea push lea push call add push lea push call add push lea call lea push mov call mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov mov push mov push lea call mov push lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add push mov push call add lea push mov call mov call push call add fstpl lea push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add fstpl lea push lea push mov call mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov call mov xor call mov pop ret int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call push mov push lea call lea call push lea call push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push call add movl push lea push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov push mov xor mov pop ret int3 push mov mov cmp jne mov push mov push call add jmp mov cmp jne mov push mov push call add jmp mov push mov call mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call xor mov lea push lea push lea call push mov call mov xor call mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne xor je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov lea push mov call push lea push mov call mov call push mov call mov pop ret int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov push push mov push sub mov xor push lea mov mov mov mov cmp jl mov call movzbl and je mov mov push mov mov push lea call mov mov mov movl mov push call movl lea call jmp jmp movl jmp mov add mov mov call cmp jae mov push mov call mov mov cmp jne mov add push call add push mov add push mov push mov call add push mov push mov call push mov push call add jmp mov mov pop mov pop ret int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov mov cmp jl mov call movzbl and je mov mov push mov mov push lea call mov mov mov movl mov push call movl lea call jmp jmp movl jmp mov add mov mov call cmp jae mov push mov call mov mov cmp jne mov add push call add push mov add push mov push mov call add push mov push mov call push mov push call add jmp mov mov pop mov pop ret int3 int3 int3 push mov push movl mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl push mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov call mov cmpl je mov cmp je push sub mov push push call lea push mov mov mov mov call mov call mov mov call mov cmpl je mov cmp je push sub mov push push call lea push mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov call cmpl jl jg cmpl jbe mov cmp ja movsbl neg sbb neg add push mov call movsbl test je movzbl push push mov call cmpl je mov push mov push mov call jmp movsbl test je movl movl jmp movl movl mov xor mov sub mov sbb sub sbb mov mov movl movl movl movl mov push mov call movzbl test je push push mov push mov push call mov mov mov sub mov sbb mov mov jmp mov and je mov mov mov mov jmp mov mov mov mov mov or je movzbl push mov push mov call movsbl test je movzbl push push mov call cmpl je mov push mov push mov call mov or je movzbl push mov push mov call mov pop ret int3 push mov push push mov push push sub push push push mov xor push lea mov mov movl mov push lea call movl lea call cmp je mov mov mov add call mov mov cmpl jg jl cmpl ja movl movl jmp mov mov mov add mov call sub sbb mov mov mov mov mov mov movb mov mov mov add call and cmp je jmp mov sub mov sbb mov mov cmpl jne cmpl jl jg cmpl jbe mov mov mov add mov call movzbl push mov mov mov add call mov call mov mov mov call mov lea push lea push call add movzbl test je mov or mov jmp cmpl jne movzbl push mov mov mov add mov call mov call mov mov mov call mov lea push lea push call add movzbl test je mov or mov jmp mov sub mov sbb mov mov cmpl jne cmpl jl jg cmpl jbe mov mov mov add call movzbl push mov mov mov add call mov call mov mov mov call mov lea push lea push call add movzbl test je mov or mov jmp jmp push push mov mov mov add call movl mov ret movl push push mov mov mov add call push mov push mov mov mov add call mov mov movl lea call mov mov mov pop pop pop pop mov pop ret int3 int3 push mov push push mov push sub push mov xor push lea mov push mov push lea call movl lea test jne movl jmp mov mov lea mov mov push mov push mov add call lea test je lea add mov jmp movl mov push mov push call add mov mov lea call mov mov and setne mov mov mov lea call mov mov movzbl test je mov or je movb jmp movb mov mov push mov call movzbl test jne cmpl jl jg cmpl jbe push push mov mov lea call lea test je lea add mov jmp movl mov push mov push call add mov call mov movb mov mov and je mov call test je mov movsbl push mov mov lea call movsbl cmp je mov movsbl push mov mov lea call movsbl cmp je push mov mov lea call mov mov call mov movsbl test je movl movl jmp movl movl mov mov sub mov sbb mov lea push lea push call add mov mov mov mov and setne movzbl push movzbl push mov push mov mov lea call movzbl push mov push mov push mov push mov push mov push call add jmp lea test je lea add mov jmp movl mov push mov push call add mov call mov mov call mov movb mov mov and je mov call test je mov movsbl push mov mov lea call movsbl cmp je mov movsbl push mov mov lea call movsbl cmp je movb mov cmp jne mov mov mov mov cmp jg jl mov mov cmp ja movzbl test jne mov push mov push mov call jmp mov push mov push mov call movl mov call push mov push lea call movb lea test jne movl jmp mov mov lea mov mov push mov push mov add call lea test je lea add mov jmp movl mov push mov push call add push push mov mov lea call movzbl test je lea test je lea add mov jmp movl push mov push call add lea test je lea add mov jmp movl mov push mov push call add mov call test jne mov mov and je movb lea test je lea add mov jmp movl push mov push call add mov call mov mov call mov mov mov mov lea push lea push call add mov mov mov cmp ja mov push mov push mov call jmp movzbl neg sbb neg add mov lea push lea push call add mov mov movzbl mov jmp mov add mov mov cmp jae mov add movsbl movzbl neg sbb neg mov sub mov mov call movsbl cmp jne jmp mov cmp jb movzbl mov mov push mov push mov call mov xor mov sub mov sbb mov mov mov mov lea call movzbl push mov push mov call mov sub push mov add push mov call movb lea call mov call movl lea call mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push mov mov call mov call movl push push mov call lea call mov mov movzbl push mov push mov push mov call movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call xor mov lea push lea push lea call push mov call mov xor call mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call xor mov lea push lea push lea call push mov call mov xor call mov pop ret int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push push push push mov xor push lea mov mov mov mov movl jmp mov add mov mov add mov mov cmp je mov push mov push mov push call add jmp jmp jmp mov add mov mov cmp je mov push mov push call add jmp push push call movl mov ret movl mov mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push call add push mov push mov call pop ret int3 int3 push mov push push mov push sub push mov xor push lea mov mov lea call movl mov mov mov sub cltd push push mov mov push lea call push push lea push lea call movb push mov mov lea call lea test jne movl jmp mov mov lea mov push mov push call add mov push lea push call add mov mov mov mov add call test je lea call mov call cmp jne movl jmp movl mov mov movb lea call movl lea call mov mov mov pop pop mov pop ret push mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push lea push lea push call add mov movzbl push mov push mov push mov push mov push mov push mov push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub jmp lea call lea push lea call movzbl test je mov movzbl push lea push lea call mov call jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push lea push lea push call add mov movzbl push mov push mov push mov push mov push mov push mov push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov sub sar mov mov shl push mov push mov push call add mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add mov movzbl push mov push call add push mov push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add push push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov movzbl push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl mov push lea push mov call movl mov call test je mov push lea push mov call mov call lea call lea push mov call mov or mov movl lea call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push sub push push push mov xor push lea mov mov mov movl movl mov movl movl push mov push lea call movl lea call cmp jne call mov jmp movb mov mov mov add call mov call mov mov mov call mov lea push lea push call add movzbl test je mov or mov jmp mov mov mov add mov call mov call mov mov add mov adc mov mov mov jmp push push mov mov mov add call movl mov ret movl push mov push mov mov mov add call mov mov movl lea call mov mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov mov mov pop ret push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov sub mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov sub mov movzbl test je mov call mov mov call mov or mov mov jmp mov call mov mov call not mov and mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov add call mov movl mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov movl push push push mov call mov mov pop ret int3 int3 int3 push mov push mov mov add push mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov and je push push mov call mov jmp mov call mov mov call sub mov cltd mov mov mov call mov lea call mov mov mov cmp jg jl mov cmp ja mov add push lea call add push mov push mov call push push mov call mov pop mov pop ret push mov sub push mov mov and je push push mov call mov jmp mov call mov mov call sub mov mov call mov mov call sub mov mov call mov mov mov cmpl je cmpl je cmpl je jmp cmpl jl jg cmpl jb mov cltd mov mov mov cmp jl jg mov cmp jbe push push mov call mov jmp jmp mov add push mov add push mov push mov call jmp cmpl jl jg cmpl jb mov cltd mov mov mov cmp jl jg mov cmp jbe push push mov call mov jmp jmp mov add push mov add mov sub push mov push mov call jmp mov cltd add adc mov cmpl jl mov cmp jle push push mov call mov jmp jmp mov add push mov add push mov push mov call mov call mov mov call sub mov cltd push push mov call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl mov mov push lea call movl mov push mov mov mov mov call mov push mov mov call lea push mov call mov or mov movl lea call mov mov mov pop mov pop ret int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl jae mov mov add mov mov jmp mov movl mov mov add mov mov mov pop ret int3 int3 int3 int3 push mov push push mov push sub push mov xor push lea mov push mov push lea call movl lea test jne movl jmp mov mov lea mov mov push mov push mov add call lea test je lea add mov jmp movl mov push mov push call add mov mov lea call mov mov and setne mov mov mov lea call mov mov movzbl test je mov or je movb jmp movb mov mov push mov call movzbl test jne cmpl jl jg cmpl jbe push push mov mov lea call lea test je lea add mov jmp movl mov push mov push call add mov call mov movb mov mov and je mov call test je mov movsbl push mov mov lea call movsbl cmp je mov movsbl push mov mov lea call movsbl cmp je push mov mov lea call mov mov call mov movsbl test je movl movl jmp movl movl mov mov sub mov sbb mov lea push lea push call add mov mov mov mov and setne movzbl push movzbl push mov push mov mov lea call movzbl push mov push mov push mov push mov push mov push call add jmp lea test je lea add mov jmp movl mov push mov push call add mov call mov mov call mov movb mov mov and je mov call test je mov movsbl push mov mov lea call movsbl cmp je mov movsbl push mov mov lea call movsbl cmp je movb mov cmp jne mov mov mov mov cmp jg jl mov mov cmp ja movzbl test jne mov push mov push mov call jmp mov push mov push mov call movl mov call push mov push lea call movb lea test jne movl jmp mov mov lea mov mov push mov push mov add call lea test je lea add mov jmp movl mov push mov push call add push push mov mov lea call movzbl test je lea test je lea add mov jmp movl push mov push call add lea test je lea add mov jmp movl mov push mov push call add mov call test jne mov mov and je movb lea test je lea add mov jmp movl push mov push call add mov call mov mov call mov mov mov mov lea push lea push call add mov mov mov cmp ja mov push mov push mov call jmp movzbl neg sbb neg add mov lea push lea push call add mov mov movzbl mov jmp mov add mov mov cmp jae mov add movsbl movzbl neg sbb neg mov sub mov mov call movsbl cmp jne jmp mov cmp jb movzbl mov mov push mov push mov call mov xor mov sub mov sbb mov mov mov mov lea call movzbl push mov push mov call mov sub push mov add push mov call movb lea call mov call movl lea call mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push lea push mov call mov mov pop ret push mov mov push call add push mov call push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl je mov mov jmp movl lea push mov push mov push mov push mov push call add mov mov pop ret int3 int3 push mov sub mov xor mov movl movl lea push lea push call add movzbl test je lea push lea push call add push lea call jmp mov neg mov push lea push lea push call add push lea call lea call sub mov lea push call call add movzbl test je movl lea push lea call lea push lea push lea push call add push lea call mov neg mov jmp lea push lea push lea push call add push lea call fldl fstpl lea push lea push call add movzbl test je movl lea push lea push lea push call add push lea call push call push lea push lea push call add push lea push call add push lea call push lea push lea push lea push lea push call add push lea push call add push mov call mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call mov push call add mov mov lea push lea call push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov mov push call add push mov call push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl je mov mov jmp movl lea push mov push mov push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub cmpl je mov mov jmp movl lea push mov push mov push mov push mov push call add mov mov pop ret int3 int3 push mov push mov mov push call add push push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov push call add mov mov lea push mov call push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea push call add call mov lea push lea push call add movzbl test jne call mov lea push lea push call add movzbl test jne mov push call add movzbl test jne movl mov push lea push mov push push push call add jmp lea call mov xor call mov pop ret int3 push mov push push mov push mov xor push lea mov mov and jne mov or mov movl push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add push push call add movl mov push mov call push mov call mov mov mov pop mov pop ret push mov call pop ret int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push call add push mov call push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push call add push mov call push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push mov push lea push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov push mov call movzbl test je mov push mov call movzbl test jne push mov push lea call xor mov lea push lea push lea call push mov call jmp xor mov lea push mov push mov call mov mov xor call mov pop ret int3 push mov mov push call add push mov call push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push mov push lea push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov push mov call movzbl test je mov push mov call movzbl test jne push mov push lea call xor mov lea push lea push lea call push mov call jmp xor mov lea push mov push mov call mov mov xor call mov pop ret int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov xor mov lea push lea push mov call push mov call push lea push mov call mov call push mov call mov pop ret int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov sub fldl fstpl lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov mov push mov push lea call xor mov lea push lea push lea call push mov call mov xor call mov pop ret int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov call push lea push mov call mov call push mov call mov pop ret int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov cmpl jne movl cmpl jne movl push lea call movl push mov call mov mov push lea call mov mov mov movb lea push lea push mov call mov call mov mov mov movb mov lea call movb lea call movb lea call push lea call mov push lea call call imul xor mov div add mov mov push mov cltd push push lea push call add mov mov mov mov mov mov mov mov mov lea push call add push sub mov mov lea push call mov lea push call add mov mov mov movb mov push lea call movb lea call lea push lea call movb lea push call movb lea call movl lea call mov mov pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov call push lea push mov call mov call push mov call mov pop ret int3 int3 int3 push mov sub mov xor mov xor mov lea push lea push mov call push mov call push lea push mov call mov call push mov call mov pop ret int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov call push lea push mov call mov call push mov call mov pop ret int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push mov mov push call add push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov xor mov lea push lea push mov call push mov call push lea push mov call mov call push mov call mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov call push lea push mov call mov call push mov call mov pop ret int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push sub push mov xor push lea mov push mov push lea call movl lea test jne movl jmp mov mov lea mov mov push mov push mov add call lea test je lea add mov jmp movl mov push mov push call add mov mov lea call mov mov and setne mov mov mov lea call mov mov movzbl test je mov or je movb jmp movb mov mov push mov call movzbl test jne cmpl jl jg cmpl jbe push push mov mov lea call lea test je lea add mov jmp movl mov push mov push call add mov call mov movb mov mov and je mov call test je mov movsbl push mov mov lea call movsbl cmp je mov movsbl push mov mov lea call movsbl cmp je push mov mov lea call mov mov call mov movsbl test je movl movl jmp movl movl mov mov sub mov sbb mov lea push lea push call add mov mov mov mov and setne movzbl push movzbl push mov push mov mov lea call movzbl push mov push mov push mov push mov push mov push call add jmp lea test je lea add mov jmp movl mov push mov push call add mov call mov mov call mov movb mov mov and je mov call test je mov movsbl push mov mov lea call movsbl cmp je mov movsbl push mov mov lea call movsbl cmp je movb mov cmp jne mov mov mov mov cmp jg jl mov mov cmp ja movzbl test jne mov push mov push mov call jmp mov push mov push mov call movl mov call push mov push lea call movb lea test jne movl jmp mov mov lea mov mov push mov push mov add call lea test je lea add mov jmp movl mov push mov push call add push push mov mov lea call movzbl test je lea test je lea add mov jmp movl push mov push call add lea test je lea add mov jmp movl mov push mov push call add mov call test jne mov mov and je movb lea test je lea add mov jmp movl push mov push call add mov call mov mov call mov mov mov mov lea push lea push call add mov mov mov cmp ja mov push mov push mov call jmp movzbl neg sbb neg add mov lea push lea push call add mov mov movzbl mov jmp mov add mov mov cmp jae mov add movsbl movzbl neg sbb neg mov sub mov mov call movsbl cmp jne jmp mov cmp jb movzbl mov mov push mov push mov call mov xor mov sub mov sbb mov mov mov mov lea call movzbl push mov push mov call mov sub push mov add push mov call movb lea call mov call movl lea call mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push mov xor push lea mov push mov push lea call movl lea test jne movl jmp mov mov lea mov mov push mov push mov add call lea test je lea add mov jmp movl mov push mov push call add mov mov lea call mov mov and setne mov mov mov lea call mov mov movzbl test je mov or je movb jmp movb mov mov push mov call movzbl test jne cmpl jl jg cmpl jbe push push mov mov lea call lea test je lea add mov jmp movl mov push mov push call add mov call mov movb mov mov and je mov call test je mov movsbl push mov mov lea call movsbl cmp je mov movsbl push mov mov lea call movsbl cmp je push mov mov lea call mov mov call mov movsbl test je movl movl jmp movl movl mov mov sub mov sbb mov lea push lea push call add mov mov mov mov and setne movzbl push movzbl push mov push mov mov lea call movzbl push mov push mov push mov push mov push mov push call add jmp lea test je lea add mov jmp movl mov push mov push call add mov call mov mov call mov movb mov mov and je mov call test je mov movsbl push mov mov lea call movsbl cmp je mov movsbl push mov mov lea call movsbl cmp je movb mov cmp jne mov mov mov mov cmp jg jl mov mov cmp ja movzbl test jne mov push mov push mov call jmp mov push mov push mov call movl mov call push mov push lea call movb lea test jne movl jmp mov mov lea mov mov push mov push mov add call lea test je lea add mov jmp movl mov push mov push call add push push mov mov lea call movzbl test je lea test je lea add mov jmp movl push mov push call add lea test je lea add mov jmp movl mov push mov push call add mov call test jne mov mov and je movb lea test je lea add mov jmp movl push mov push call add mov call mov mov call mov mov mov mov lea push lea push call add mov mov mov cmp ja mov push mov push mov call jmp movzbl neg sbb neg add mov lea push lea push call add mov mov movzbl mov jmp mov add mov mov cmp jae mov add movsbl movzbl neg sbb neg mov sub mov mov call movsbl cmp jne jmp mov cmp jb movzbl mov mov push mov push mov call mov xor mov sub mov sbb mov mov mov mov lea call movzbl push mov push mov call mov sub push mov add push mov call movb lea call mov call movl lea call mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov push lea push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push lea push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push sub push push push mov xor push lea mov mov mov movl lea push mov push mov push call add mov push mov call movl jmp mov add mov mov cmp je mov movzbl push push mov call jmp jmp push push mov call push push call movl mov ret movl mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push call add push mov push mov call pop ret int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push call add push push mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov lea call movl lea push mov push call add lea push mov call mov mov movl lea call mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov sub jmp lea call lea call lea push lea call movzbl test je lea push lea call push lea push lea call mov call jmp mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea push lea call movzbl test je lea push lea call mov call push lea push lea call mov call mov call jmp mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov sub sar mov mov shl push mov push mov push call add mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl jg jl cmpl jae mov neg mov adc neg push push mov call mov call jmp mov push mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov movzbl push mov push mov add call mov push mov push call add mov mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov mov push push call add mov movl cmpl je mov push call add push mov call mov jmp movl mov mov movl mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov push push call add mov movl cmpl je mov push call add push mov call mov jmp movl mov mov movl mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov call movzbl push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 push mov push mov mov imul add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov sub mov mov jmp mov movl mov mov sub mov mov mov pop ret int3 int3 int3 int3 push mov sub mov push lea push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push lea push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call lea call push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push lea push mov push mov push mov push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea push sub mov lea push call call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push call add fstpl lea push mov call push call add mov pop ret int3 int3 push mov push xor mov mov push lea push mov call mov mov pop ret push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov lea push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call lea call push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl push lea push mov call mov mov pop ret push mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl jg jl cmpl jae mov neg mov adc neg push push mov call jmp mov push mov push mov call pop ret int3 int3 int3 int3 push mov mov mov xor pop ret int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call lea call push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea call mov call push lea call push call add lea push call add push mov call mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl je mov mov jmp movl lea push mov push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov pop ret int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov lea push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov mov mov mov mov movb mov call movzbl test je mov jmp mov call movzbl test je call push mov call movzbl test je mov call mov jmp mov or jne mov call movzbl test je call push mov call mov jmp jmp call push mov call mov call movzbl test je mov call mov jmp mov call movzbl test je mov jmp cmpl ja cmpl jb mov mov mov lea call mov push mov push lea call lea push mov call jmp mov mov cmpl jbe mov mov push mov push mov call push call add mov push mov call cmpl jne mov mov sub mov mov lea push mov call mov push mov mov sub push lea push lea push mov call mov call mov push push lea push lea push mov call mov call mov push lea push call add mov mov mul mov xor push push push push call mov mov mov sub push mov call mov mov call movzbl test je call push mov call jmp mov mov mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call lea call push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call lea call push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov pop ret int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov push lea call lea call push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add push mov push call add lea push mov call mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add push lea push mov call mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add mov mov lea push lea push mov call mov call push call add push mov push call add mov pop ret int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov mov push mov push lea call lea push mov push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add push mov push call add push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov xor mov push mov sub fldl fstpl lea call lea push mov push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov call push lea push mov call mov call push mov call mov pop ret int3 int3 int3 push mov sub mov xor mov lea push mov call push lea push mov call mov call push mov call mov pop ret int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov push lea push call add mov mov mov movl mov push lea push call add push lea push call movl lea call mov mov pop mov pop ret int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea call push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call mov push call add push lea call push call add push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call xor mov lea push lea push lea call push mov call mov xor call mov pop ret int3 push mov push mov mov push call add push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov lea push mov call push lea push mov call mov call push mov call mov pop ret int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov mov push mov push lea call mov push call add push lea call push call add push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea call push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov push lea push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push lea push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push lea push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push lea push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub mov mov mov mov mov mov mov mov mov mov call mov pop ret int3 int3 push mov mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov sub fldl fstpl mov call mov pop ret int3 int3 int3 push mov push lea call movzbl push mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call mov pop ret int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor pop ret int3 int3 int3 int3 push mov mov push mov push call add push call add pop ret int3 int3 push mov push mov mov push call add push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push sub push push push mov xor push lea mov mov mov mov movl movl push call add mov mov mov cmpl je lea push mov push mov call mov jmp movl mov mov mov mov mov jmp lea push lea call push push call movl mov ret movl mov mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea call lea push mov push lea push call add movb fldl fstpl lea push lea call test jg movb push lea push lea push call add mov sub mov mov cltd mov mov lea push call push mov push call add movl movl lea push lea push call add movzbl test jne lea call lea push lea call lea call lea call movzbl test je lea push mov push call add jmp lea push mov push call add lea push call add mov call push mov push lea push call add lea push call add test jge lea call movl movl mov add mov adc mov mov lea push lea push call add lea push lea push lea push call add movzbl test je mov and mov and mov mov mov or je lea push mov push call add jmp lea push mov push call add lea push lea call test jl mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov add call mov pop ret int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl cmpl jne movl jmp mov mov mov mov lea mov mov push mov add call movl mov or mov mov push mov call mov movl mov movl mov mov mov mov movl mov mov mov mov movl movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov push mov call movl cmpl je mov add mov jmp movl mov push mov add call mov movl mov movl movl mov mov mov pop mov pop ret push mov push mov mov push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push push mov push push sub push push push mov xor push lea mov mov mov movl mov push lea call movl lea call cmp je lea push mov mov mov add call mov mov mov movb mov push call add mov movb lea call movb cmpl jne movl jmp mov mov mov add mov sub fldl fstpl mov mov mov add mov call movzbl push mov push mov mov mov add call push lea call mov push mov push lea push mov call mov mov call movzbl test je mov or mov jmp push push mov mov mov add mov call movl mov ret movl push mov push mov mov mov add call mov mov movl lea call mov mov mov pop pop pop pop mov pop ret int3 push mov mov call pop ret int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov call call pop ret int3 push mov call call pop ret int3 push mov push mov mov movl mov movl mov add call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov movl cmpl je xor mov push movzbl push mov sub push mov call mov jmp movl mov mov movl mov mov cmpl jne movl jmp mov mov mov mov lea mov mov mov mov pop mov pop ret push mov sub mov push mov sub push lea call push lea push call mov pop ret int3 int3 int3 int3 push mov push mov mov call mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov add push mov add call mov pop ret int3 int3 int3 push mov sub mov push mov call movzbl test je mov add mov jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov sub fldl fstpl movzbl push mov push mov push mov push mov push mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov and jne mov or mov movl lea push push push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov and jne mov or mov movl lea push push push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov mov call pop ret int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov mov sub mov mov mov mov mov mov mov mov mov mov call mov pop ret int3 int3 push mov mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov sub push push movl movl movl jmp mov add mov mov cmp jge mov mov mov xor push push mov push mov push call add adc mov mov mov xor push push mov push mov push call mov mov mov mov mov mov mov mul mov sub mov sbb mov mov jmp mov pop pop mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov movl movl push lea push lea push lea push call add push lea push call add push lea push lea push call add push lea push lea push call add push lea call movl lea push lea push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push call add mov push mov push mov call mov mov pop ret int3 int3 int3 push mov sub mov xor mov mov call movzbl test jne xor mov lea push push mov push lea call push push mov push lea call push push push lea push call add mov call push mov call jmp jmp mov call movzbl test je mov push mov call jmp lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add xor pop ret int3 int3 int3 int3 int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov call push lea push mov call mov call push mov call mov pop ret int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov xor mov lea push lea push mov call push mov call push lea push mov call mov call push mov call mov pop ret int3 push mov sub mov xor mov xor mov lea push lea push mov call push mov call push lea push mov call mov call push mov call mov pop ret int3 push mov sub mov xor mov xor mov lea push lea push mov call push mov call push lea push mov call mov call push mov call mov pop ret int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea call push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl push mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea call push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub mov mov mov mov mov mov mov mov mov mov call mov pop ret int3 int3 push mov mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push flds fstps mov call mov pop ret int3 int3 int3 int3 int3 push mov mov sub mov mov mov mov mov mov mov mov mov mov call mov pop ret int3 int3 push mov mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov sub fldl fstpl mov call mov pop ret int3 int3 int3 push mov mov sub mov add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je push mov push lea call mov push lea call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je push mov push lea call mov push lea call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push sub push push push mov xor push lea mov mov movl movb push mov push lea call movl lea call cmp je lea push mov mov mov add call mov mov mov movb mov push call add mov movb lea call push push mov call movb mov mov mov add mov call mov mov cmpl jl jg cmpl jbe mov call mov mov mov mov add mov call cmp jae mov mov mov add mov call mov jmp mov call mov mov mov mov mov mov add call mov call mov mov mov jmp mov sub mov mov mov mov add call mov call mov mov mov cmpl jbe call mov lea push lea push call add movzbl test je mov or mov jmp jmp lea push call add movzbl push push mov call movzbl test je jmp jmp lea push call add movzbl push push mov call movb jmp jmp push push mov mov mov add call movl mov ret movl push push mov mov mov add call movzbl test jne mov or mov push mov push mov mov mov add mov call mov mov movl lea call mov mov mov pop pop pop pop mov pop ret int3 int3 int3 push mov sub mov lea push mov call mov call push call add mov mov lea push lea push mov call mov call push call add push mov push call add mov pop ret int3 int3 push mov push mov mov mov pop ret push mov push push mov push sub mov xor mov push push lea mov mov push mov call mov call movzbl test je mov call mov call movzbl test je mov movl jmp mov call mov mov push call add mov call cltd mov idiv cmp jge mov imul mov mov cltd mov idiv mov jmp mov cltd mov idiv mov mov imul mov mov neg cltd push push lea push call add push mov call mov call movzbl test jne mov call movzbl test jne mov call movzbl test je mov push mov call mov call movzbl test je mov call mov cltd sub sar mov mov neg cltd push push lea push call add push mov call mov call push call add cmp jle lea call lea push mov push lea push call add cmpl jle cmpl jle call sub cmp jle push lea call mov mov mov movl push push push mov push call movl lea call cmpl jge cmpl jge call sub cmp jge push lea call mov mov mov movl push push push mov push call movl lea call mov add mov lea push mov call call push mov call test jl call push mov call mov add mov jmp call push mov call test jge call push mov call mov sub mov jmp mov mov mov mov call movzbl test je mov call mov mov pop pop mov xor call mov pop ret int3 push mov sub mov xor mov mov lea call mov sub fldl fstpl lea call lea push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov cltd mov mov call cltd mov mov mov cmp jg jl mov cmp ja call cltd mov mov mov cmp jg jl mov cmp jae push lea call mov mov mov movl mov push lea call mov mov mov movb push push push mov push call movb lea call movl lea call mov push mov call cmpl jl jg cmpl jbe cmpl jg jl cmpl jae mov neg mov adc neg mov xor call push push mov call jmp cmpl jg jl cmpl jae cmpl jl jg cmpl jbe mov mov xor call push push mov call jmp mov or je mov cltd push push lea push call add push mov call mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov and jne mov or mov mov call movzbl test jne push push call add movb call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call movzbl test je movl jmp mov call movzbl neg sbb and add mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push sub mov xor mov push push push push lea mov mov mov cmp je mov cmp jne lea call mov push mov push lea push call add lea push mov call jmp movl movl lea push mov call test jne mov push mov call jmp mov push call add mov mov mov cmpl je cmpl je cmpl je jmp mov push mov call jmp push push mov call jmp mov push mov call jmp mov push call add test jne push push mov call jmp movl movl lea push mov call test jge lea call lea call mov push lea call lea call lea push mov push lea push call add movl movl lea push lea push mov push call add jmp movb lea call movl mov push lea push call add lea push mov call test jne xor mov lea push lea push mov push mov push call add jmp jmp call mov mov movl mov ret movl mov push call add test jge movzbl test jne lea push call add mov call push mov call lea call lea call lea push mov push lea push call add fldl fstpl lea push mov call test jl fldl fstpl lea push mov call test jge fldl fstpl lea push mov call test jg mov push lea push call add mov push lea push call add lea push mov push call add jmp jmp mov or je lea call push push lea call mov push lea push call add lea push lea push mov push call add xor mov lea push lea push mov push lea push call add lea push mov push call add jmp mov push lea call lea call push push lea call mov push lea push call add lea push lea push mov push call add jmp mov or je mov push lea push call add lea push lea push call add lea push mov push call add xor mov lea push lea push mov push lea push call add lea push mov push call add jmp mov push lea push call add mov push lea push call add lea push mov push call add mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov call mov call movzbl test je mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov cmp jne lea call mov push lea push call add lea push mov call jmp mov push call add mov mov push call add xor test setl mov cmpl jne lea push call add mov call push mov call jmp jmp cmpl jne mov push mov call movzbl test je push push mov call jmp mov push mov call jmp jmp cmpl jne push push mov call jmp mov push lea call lea call movzbl test je lea call mov and jne mov or mov xor je call mov jmp movl mov cltd mov mov push lea call test jl movzbl test je push push mov call jmp mov test je lea push call add mov call mov jmp lea push call add mov call mov mov mov mov push mov call jmp movl movl lea push lea call test jg lea push call add mov call push lea call movl lea push lea call push push mov call movzbl test je lea push mov push call add jmp lea push mov push call add lea push lea push call add mov xor mov mov lea push lea push call add lea push mov push call add lea push lea call test jle mov add mov lea push lea push call add mov xor mov mov lea push lea push call add movzbl test je mov and je lea push mov push call add jmp lea push mov push call add jmp jmp mov push lea push call add lea push lea push call add lea push mov call test jne xor mov lea push lea push call push mov push call add jmp call push lea push mov push call add mov push lea push call add mov cltd mov mov lea push call push lea push call add lea push lea push call add push push lea push call add lea call lea push mov push call add xor mov lea push push mov push lea push call add push push mov call mov push mov push mov push call add mov push lea push call add movzbl test je movl movl lea push lea push mov push call add jmp lea push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov call mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push sub push push push mov xor push lea mov mov mov movl mov push lea call movl lea call cmp je lea push mov mov mov add call mov mov mov movb mov push call add mov movb lea call movb cmpl jne movl jmp mov mov mov add mov flds sub fstpl mov mov mov add mov call movzbl push mov push mov mov mov add call push lea call mov push mov push lea push mov call mov mov call movzbl test je mov or mov jmp push push mov mov mov add mov call movl mov ret movl push mov push mov mov mov add call mov mov movl lea call mov mov mov pop pop pop pop mov pop ret int3 push mov push push mov push push sub push push push mov xor push lea mov mov mov movl mov push lea call movl lea call cmp je lea push mov mov mov add call mov mov mov movb mov push call add mov movb lea call movb cmpl jne movl jmp mov mov mov add mov sub fldl fstpl mov mov mov add mov call movzbl push mov push mov mov mov add call push lea call mov push mov push lea push mov call mov mov call movzbl test je mov or mov jmp push push mov mov mov add mov call movl mov ret movl push mov push mov mov mov add call mov mov movl lea call mov mov mov pop pop pop pop mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov call mov add call mov movl mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov push mov sub fldl fstpl movzbl push mov push mov push mov push mov push mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov mov mov mov movb mov call mov mov or jne movb jmp movb mov mov mov call movzbl test jne movzbl test je movzbl test je call push mov call jmp movzbl test je call push mov call movzbl test je mov call mov jmp mov call movzbl test jne movzbl test je call push mov call jmp cmpl ja cmpl jb mov mov mov lea call mov push mov push lea call lea push mov call jmp cmpl jne cmpl jne mov mov mov mov jmp mov mov mov mov push mov push mov call push call add mov cmpl je mov mov add mov mov mov mov push lea push lea push mov call mov call mov push mov mov sub push lea push lea push mov call mov call mov push lea push mov call mov push lea push call add mov call mov mov mov xor cmpl setge mov mov cmpl jne mov call movzbl test je mov push lea call lea call call push lea call xor test setg mov jmp call push mov call xor test setg mov movzbl test je call push mov call movzbl test je mov call mov jmp mov mov mov mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov call movzbl test jne mov call movzbl test jne call push mov call mov jmp mov call movzbl test jne mov call movzbl test je mov jmp mov push lea call lea push lea push mov call mov and jns dec or inc test je mov add mov fldl fdivl fstpl fldl call fstpl mov cltd sub sar push sub fldl fstpl lea call push mov call mov neg cltd sub sar push fldl fdivl sub fstpl lea call movl jmp mov shl mov cmpl jg mov lea push mov call mov lea push lea call mov push lea call lea push lea call lea call push push lea call call push lea call lea push lea call lea push lea call mov push lea call mov push lea call lea call lea push lea call lea push lea call lea push mov call jmp mov movl mov mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov mov cmpl je xor jmp mov call movzbl test je mov jmp mov cmpl jge xor jmp mov mov cltd and add sar add mov cmpl jb mov jmp push lea push mov call mov push mov push lea push lea push mov call mov call mov push lea push call add lea push mov call push lea call mov pop ret int3 push mov sub mov xor mov mov mov call movzbl test jne mov push mov call mov jmp mov cmpl jge call push mov call mov jmp mov push lea call mov shr add mov movl movl lea push push lea push lea push lea call mov call mov push mov push lea push lea push lea call mov call mov push call add lea push mov call mov mov xor call mov pop ret int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov push lea push mov call mov mov pop ret push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push call add mov mov lea push mov call push call add movzbl neg sbb add mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl je mov mov jmp movl lea push mov push mov push mov push mov push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push lea mov cmpl jne movl cmpl jne movl push lea call movl push mov call mov mov push lea call mov mov mov movb lea push lea push mov call mov call mov mov mov movb mov lea call movb lea call movb lea call push lea call mov push lea call call imul xor mov div add mov mov push mov cltd push push lea push call add mov mov mov mov mov mov mov mov mov lea push call add push sub mov mov lea push call mov lea push call add mov mov mov movb mov push lea call movb lea call lea push lea call movb lea push call movb lea call movl lea call mov mov pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push lea push call add lea push call add movzbl test je call mov mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jne mov test je mov push mov push call add mov call jmp mov cmp jne mov push mov push call add jmp mov push mov call mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea call push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov mov push mov push lea call lea push mov push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call push mov push lea call lea call push call add push lea call push call add push mov push mov call mov xor call mov pop ret int3 push mov sub mov xor mov mov push mov push lea call mov push call add push lea call push call add push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call mov push call add push lea call push call add push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jge mov neg mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push lea push call add mov mov mov movl mov push lea call push mov push lea call push mov push lea call push mov push call add push call add push call add push call movl lea call mov mov pop mov pop ret int3 int3 push mov sub mov xor mov cmpl jae mov push mov call jmp push push mov call lea call lea call lea call push push lea call push push lea call movl movl mov xor mov div add xor mov mov movl movl jmp mov add mov adc mov mov mov cmp ja jb mov cmp jae push push lea call push push mov push mov push call mov mov lea push lea push call add push push mov push mov push call add adc mov mov lea push lea push call add lea push mov push call add lea push lea push call add mov neg mov adc neg mov mov lea push lea push call add lea push lea push lea push call add cmpl jg jl cmpl jae lea call lea push mov push call add jmp movl movl lea push lea push call add movl movl lea push mov push call add lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov xor mov push mov mov push mov push lea call lea push mov push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea call mov mov push mov push lea call lea push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov movl lea call mov push lea call movl movl lea push lea push mov push call add lea call mov sub push mov push lea push call add lea push call add test jge lea call movl movl jmp mov add mov adc mov mov cmpl ja jb cmpl jae mov push lea push call add lea push lea push call add lea push mov push call add lea push call add xor test setl mov movzbl test je lea call lea push lea call test jle jmp movzbl test je lea call jmp cmpl ja cmpl jb push lea call mov mov mov movl push push push mov push call movl lea call mov mov pop mov xor call mov pop ret int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov push lea call mov push lea call mov push lea call lea push lea push mov push call add push push mov push call add lea call push mov push lea push call add lea push call add test jge lea call lea call lea call movl movl jmp mov add mov adc mov mov cmpl jg jl cmpl jae mov push lea push call add mov push mov push lea push call add lea push call add lea push lea push call add lea push lea push lea push call add lea push mov push call add lea push call add test jge lea call lea push lea call test jl jmp jmp cmpl jl jg cmpl jb push lea call mov mov mov movl push push push mov push call movl lea call mov mov pop mov xor call mov pop ret int3 push mov mov mov push mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov and jne mov or mov mov call movzbl test jne push push call add movb call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push mov call mov call movzbl test je mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov add call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov cmpl jge xor xor jmp mov call mov movzbl test jne call push mov call test jle call jmp jmp movzbl test je call push mov call test jge call jmp jmp lea push mov call lea call movzbl test je lea call push lea call mov xor mov mov movl mov cltd and add sar mov lea push lea push call add mov mov movl jmp mov add mov mov cmp jg push push mov push mov push call mov mov mov push lea call mov xor add adc mov mov jmp movzbl test jne mov mov mov mov jmp mov neg mov adc neg mov mov mov mov mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl movl mov sub mov jmp mov sub mov cmpl jl mov mov mov mov mul add adc mov mov push push mov push mov push call mov mov push push mov push mov push call mov sub mov sbb mov mov mov jmp mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push call add movl push lea push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov push lea push call add mov mov mov movl mov push lea push call add push lea push call movl lea call mov mov pop mov pop ret int3 int3 int3 push mov sub mov test je call cltd mov mov mov mov mov mov cmp jl jg mov mov cmp jbe mov jmp xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add push mov push call add lea push mov call mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov xor mov lea push lea push mov call push mov call push lea push mov call mov call push mov call mov pop ret int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je push mov push lea call mov push lea call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je push mov push lea call mov push lea call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov mov push mov push lea call lea push mov push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov push lea push call add mov mov mov movl mov push lea push call add push lea push call movl lea call mov mov pop mov pop ret int3 int3 int3 push mov mov mov push mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov cltd mov mov call cltd mov mov mov cmp jg jl mov cmp ja call cltd mov mov mov cmp jg jl mov cmp jae push lea call mov mov mov movl mov push lea call mov mov mov movb push push push mov push call movb lea call movl lea call mov push mov call cmpl jl jg cmpl jbe cmpl jg jl cmpl jae mov neg mov adc neg mov xor call push push mov call jmp cmpl jg jl cmpl jae cmpl jl jg cmpl jbe mov mov xor call push push mov call jmp mov or je mov cltd push push lea push call add push mov call mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl movl lea push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov movl cmpl jae mov push mov call jmp lea call push push lea call mov push lea push lea push call add push push mov call lea call push push lea call movl movl lea push lea push call add lea push mov push call add movl movl lea push mov push call add mov add mov adc mov mov lea push lea call test jle lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov mov push mov push lea call mov push lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov add call mov pop ret int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl cmpl jne movl jmp mov mov mov mov lea mov mov push mov add call movl mov or mov mov push mov call mov movl mov movl mov mov mov mov movl mov mov mov mov movl movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov push mov call movl cmpl je mov add mov jmp movl mov push mov add call mov movl mov movl movl mov mov mov pop mov pop ret push mov push mov mov push mov call mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov add call mov pop ret int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl cmpl jne movl jmp mov mov mov mov lea mov mov push mov add call movl mov or mov mov push mov call mov movl mov movl mov mov mov mov movl mov mov mov mov movl movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov mov push mov call movl cmpl je mov add mov jmp movl mov push mov add call mov movl mov movl movl mov mov mov pop mov pop ret push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov and je mov push call add mov mov pop ret int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov push mov call mov add call mov movl mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov add call mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov movl cmpl je xor mov push movzbl push mov sub push mov call mov jmp movl mov mov movl mov mov cmpl jne movl jmp mov mov mov mov lea mov mov mov mov pop mov pop ret push mov sub mov push mov sub push lea call push lea push call mov pop ret int3 int3 int3 int3 push mov push mov mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov push call add mov movl cmpl je xor mov push movzbl push mov sub push mov call mov jmp movl mov mov movl mov mov cmpl jne movl jmp mov mov mov mov lea mov mov mov mov pop mov pop ret push mov sub mov push mov sub push lea call push lea push call mov pop ret int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov call push lea push mov call mov call push mov call mov pop ret int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov call push lea push mov call mov call push mov call mov pop ret int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add push push mov push call add lea push mov call mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add mov mov lea push mov call mov call push call add push lea push mov push call add mov pop ret int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne xor je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl push mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je push mov push lea call mov push lea call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea call push call add push mov push call add push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl push mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push mov mov push mov push lea call lea push mov push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov xor mov mov call cltd mov mov mov cmp jg jl mov cmp ja call cltd mov mov mov cmp jg jl mov cmp jae push lea call mov mov mov movl mov push lea call mov mov mov movb push push push mov push call movb lea call movl lea call mov push mov call cmpl jl jg cmpl jbe cmpl jg jl cmpl jae mov neg mov adc neg mov xor call push push mov call jmp cmpl jg jl cmpl jae cmpl jl jg cmpl jbe mov mov xor call push push mov call jmp mov or je mov xor push push lea push call add push mov call mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov push mov call mov add call mov movl mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl cmpl je mov movl mov add call movl mov or mov mov push mov call movl mov movl mov movl mov mov mov mov movl mov mov mov sub mov mov mov mov mov cmpl je mov add mov jmp movl cmpl je mov add mov jmp movl mov push mov push call add movl mov mov mov pop mov pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push call add push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne xor je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea call push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov cmpl jg jl cmpl jae mov neg mov adc neg push push mov call mov call jmp mov push mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push call add push push mov push call add mov pop ret int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov xor mov lea push lea push mov call push mov call push lea push mov call mov call push mov call mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add mov mov lea push mov call mov call push call add push lea push mov push call add mov pop ret int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov push mov mov push mov push call add mov pop ret int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call xor mov lea push lea push lea call push mov call mov xor call mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne xor je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea call push call add push mov push call add push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je push mov push lea call mov push lea call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov xor mov lea push lea push mov call push mov call push lea push mov call mov call push mov call mov pop ret int3 push mov sub mov lea push mov call mov call push call add mov mov lea push mov call mov call push call add mov mov lea push lea push mov call mov call push call add push lea push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov call mov call movzbl test je mov call movzbl test je jmp mov call movzbl test je call push mov call lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov xor mov mov cmp jne lea call mov push lea push call add lea push mov call jmp mov push call add mov cmpl je cmpl jle cmpl jle jmp lea push call add mov call push mov call jmp push push mov call jmp mov push lea call movb mov push call add test jge lea call movzbl neg sbb add mov lea call lea call call push lea call test jle call push lea push lea push call add lea push lea push call add push push lea call lea push lea push lea push call add lea push call add test sete mov call push lea push call add lea push lea push call add movzbl test jne movzbl neg sbb add mov push call push lea push call add lea push lea call test jle lea push call push lea push call add lea push lea push call add lea push call add test sete mov lea push call add test sete mov fldl fstpl lea push lea call test setl mov fldl fstpl lea push lea call test setl mov movzbl test je push push mov call jmp movzbl test je push push mov call jmp movzbl test je lea push lea push lea push call add push push lea push call add lea call sub fldl fstpl lea call lea push lea push mov push call add lea push mov push call add jmp movzbl test je lea push lea push call add push push lea push call add lea call sub fldl fstpl lea call lea push lea push mov push call add jmp push push lea push call add lea push lea push lea push call add push push lea push call add lea call sub fldl fstpl lea call lea push lea push mov push call add lea push mov push call add movl jmp mov add mov mov cltd mov mov cmpl jg jl cmpl jae movl movl lea push mov push lea push call add mov push mov push lea push call add mov push lea push call add movl movl lea push lea push call add lea push lea push mov push call add jmp movzbl test je mov call mov xor call mov pop ret int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push call add push push mov push call add mov pop ret int3 int3 int3 int3 push mov push mov mov push mov call movzbl test jne mov call push call add push push mov call mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add push mov push call add lea push mov call mov call push call add push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea call push call add push mov push call add push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 push mov mov push mov push mov push mov push call add pop ret int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push call add push push mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov and jne mov or mov mov call movzbl test jne push push call add movb call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov cmp je mov cmp jne lea call mov push mov push lea push call add lea push mov call jmp lea call mov push mov push mov push call add mov push call add test jge mov push lea push call add jmp mov push lea push call add mov push lea push call add lea push mov push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push lea mov mov push lea call mov push lea call mov push lea call lea push lea push mov push call add movl movl lea push mov push call add lea call push push lea call push lea push lea push call add mov push lea push call add lea push call add test jge lea call lea call movl movl jmp mov add mov adc mov mov cmpl jg jl cmpl jae mov push lea push call add mov push mov push lea push call add lea push call add lea push lea push call add lea push lea push lea push call add lea push mov push call add lea push call add xor test setl mov movzbl test je lea call lea push lea call test jg jmp jmp cmpl jl jg cmpl jb push lea call mov mov mov movl push push push mov push call movl lea call mov mov pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov lea push mov call push lea push mov call mov call push mov call mov pop ret int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov mov lea push mov call push mov call mov lea push mov call push mov call mov movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call jmp movzbl test je lea push mov call push mov call movzbl test je xor mov lea push lea push mov call push mov call mov call jmp movzbl test je movzbl test je push mov push lea call mov push lea call jmp movzbl test jne movzbl test jne mov test je xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call jmp xor mov lea push lea push mov call push mov call xor mov lea push lea push mov call push mov call mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov cmp jne lea call mov mov push mov push lea call lea push mov push mov push mov push call add jmp mov push mov push mov push call add mov push mov push call add mov xor call mov pop ret int3 int3 push mov push mov xor mov pop ret int3 push mov cmpl jg jl cmpl jae mov neg mov adc neg push push mov call jmp mov push mov push mov call pop ret int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call xor mov lea push lea push lea call push mov call mov xor call mov pop ret int3 push mov sub mov mov call push call add mov mov lea push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call push call add mov mov lea push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call xor mov lea push lea push lea call push mov call mov xor call mov pop ret int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov call push call add mov mov lea push mov call mov call push call add push lea push mov call mov call push call add push lea push mov push call add mov pop ret int3 int3 int3 int3 int3 push mov push mov mov push mov call movzbl test jne mov call push call add push push mov call mov pop ret int3 int3 int3 int3 int3 push mov sub mov xor mov movl cmpl jae mov push mov call jmp lea call push push lea call lea call lea push lea call lea call sub fldl fstpl lea call lea call sub fldl fstpl lea call lea call push push lea call mov neg push lea push lea push call add movl lea push lea push mov push call add push mov push mov push call add lea push lea push call add lea push lea push call add push lea push lea push call add lea push lea push lea push call add mov push lea push lea push call add push lea push lea push call add lea push lea push mov push call add mov push call add xor test setl mov movzbl test je mov call lea push mov call test jg jmp movzbl test je mov call mov sub push mov push mov push call add mov push lea push call add mov add mov push lea push lea push call add mov test jne lea push lea push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov call mov call movzbl test je mov call movzbl test je jmp mov call movzbl test jne call push mov call lea push mov call push mov call mov xor call mov pop ret int3 int3 int3 int3 push mov sub mov xor mov push mov mov push mov push lea call lea push mov push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov push mov mov mov push mov call mov mov pop ret int3 push mov push mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov xor mov lea push lea push mov call push mov call movzbl test jne xor mov lea push lea push mov call push mov call movzbl test jne movl jmp movl mov mov pop ret int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call lea call push mov push mov call mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov push mov push lea call xor mov lea push lea push lea call push mov call mov xor call mov pop ret int3 push mov sub mov xor mov mov cmp jne lea call mov push lea call lea push mov push mov push mov push call add jmp mov push mov push mov push call add mov push mov push call add mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov push mov push mov push call add pop ret int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor mov pop ret int3 push mov sub mov lea push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov lea push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub sub jmp int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub sub jmp int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub sub jmp int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub sub jmp int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub sub jmp int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub sub jmp int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub sub jmp int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub sub jmp int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub sub jmp int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 sub jmp int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call ret push mov push push call mov add pop ret int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov xor push lea mov push mov movl call call push mov movl call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret mov mov mov mov ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test jne or ret mov shr xor test je mov mov mov shr test je mov add mov shr test je mov add mov shr test je mov add test je inc ret int3 int3 mov shl mov test je mov mov mov shl test je mov sub mov shl test je mov sub lea test je mov sub test je dec ret int3 int3 int3 int3 int3 push mov push mov cmp jb xor pop pop ret movzbl mov inc and push cmp jb cmp jae movzbl mov and shl inc or cmp jb cmp jae movzbl mov and shl inc or cmp jb cmp jae movzbl mov and shl inc or cmp jb cmp jae movzbl mov shl inc or cmp jae mov pop mov pop pop ret pop xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or mov cmp jae shr mov add ret mov shr or mov cmp jae shr mov add ret mov shr or mov cmp jae shr mov add ret mov shr or mov shr mov add ret int3 int3 int3 int3 int3 int3 int3 int3 push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call test je xor mov pop ret lea push mov call mov call mov pop ret int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 mov push call pop ret int3 int3 push mov push push mov push push push mov xor push lea mov mov mov xor lea mov cmp ja sub mov cmp jne add add cmp jbe mov cmp ja mov xor call sar add mov mov pop pop pop mov pop ret cmp jae mov cmp jne inc inc cmp jb mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov mov ret int3 int3 int3 push mov testb push mov movl je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov ret int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 imul shr ret int3 int3 int3 int3 int3 int3 int3 mov imul shr ret int3 int3 int3 int3 int3 mov mul shr lea ret int3 push mov push push mov push push mov xor push lea mov mov mov movl sub mov mov dec inc test jg mov mov pop pop mov pop ret int3 int3 int3 int3 push mov mov sub cmp jge lea mov mov mov mov mov sub add add sub mov sub cmp jl test jle lea shr inc mov mov mov mov add add dec jne pop ret int3 int3 int3 push mov push mov lea cmp jge add add mov inc cmpb je cmp jg mov mov mov mov mov mov mov mov lea pop pop ret push mov xor inc test jle mov sar inc inc test jg sub add add mov pop push push push call add lea pop pop ret int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov mov movl cmp jge cmp jae add mov shr add and sub or mov or mov mov add mov mov pop pop mov pop ret add add sub or mov mov add mov mov pop pop mov pop ret int3 push mov push push mov push push push push push mov xor push lea mov mov mov xor or mov cmp jl lea shr mov neg shl add mov test je and push mov movl call call push mov mov call test je and push mov movl call call push mov mov call test je and push mov movl call call push mov mov call mov movb mov add decl jne mov cmp jle test je and push mov movl call call push mov mov call test je and push mov movl call call push mov mov call test je and push mov movl call call push mov mov call mov movb mov add subl test je and push mov movl call call push mov mov call test jns and push mov movl call call push mov mov call test je push mov movl call call push mov mov call mov mov cmp jge cmp jae add mov shr add and sub or or lea mov mov inc mov mov pop pop pop pop mov pop ret add add sub or mov lea mov add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push lea push lea movl call add test je mov mov mov mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov xor mov mov mov mov mov cmp jae add cmp jb lea test je push push lea movl mov mov call lea push movl mov push mov call add test je and mov push mov movl call call push mov movb call or mov test je and cmpl jb mov push call add cmp jbe push push lea movl movl movb call or lea push movl or push mov call add test je and mov push mov movl call call push mov movb call mov test je cmpl jb mov push call add movl movl movb cmp ja mov jmp mov cmpl jne push call add mov mov mov lea push push push mov call add mov mov mov pop pop pop pop mov xor call mov pop ret int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov mov movl mov mov pop mov pop ret int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov mov mov xor mov mov mov mov cmp jbe mov or test je and push mov movl call call push mov mov call lea test je push push lea movl movl movb call or lea push movl or push mov call add test je and mov push mov movl call call push mov movb call mov test je and cmpl jb mov push call add test jne mov jmp mov shr xor test je mov mov mov shr test je mov add mov shr test je mov add mov shr test je mov add shr je inc mov sub mov test je and push mov movl call call push mov movl call mov mov lea mov mov cmp jb mov mov inc imul mov shr mov nop test je and push mov movl call call push mov movl call movl mov mov mov test je and push mov movl call call push mov movl call mov mov shr add mov inc add mov cmp ja mov mov imul mov shr mov movzwl add mov test je and push mov movl call call push mov movl call test jns and push mov movl call call push mov movl call mov sub mov mov mov mov mov cmp jne test je and push mov movl call call push mov movl call mov sub mov dec cmp jge mov mov add add mov inc cmp jg mov mov mov mov mov mov mov mov mov add jmp mov xor lea test jle mov sar inc inc test jg sub add add mov mov mov push push push call add add mov mov mov add test je and push mov movl call call push mov movl call mov lea xor cmp ja lea sub mov jmp mov mov mov cmp mov lea jne add add cmp jbe cmp jae mov cmp jne inc inc cmp jb lea mov add sub mov test je and push mov movl call call push mov movl call mov push push call mov mov mov add add mov cmp jae test je and push mov movl call call or push mov mov call jmp mov cmp ja mov mov mov xor mov shl mov test je mov mov mov shl test je mov sub mov shl test je mov sub lea test je mov sub add je dec sar add mov jmp or test je and push mov movl call call push mov mov call mov mov mov imul sub shr mov lea mov test je and push mov movl call call push mov mov call test je and push mov movl call call push mov mov call mov mov mov imul shr mov movzwl add mov mov mov test je and push mov movl call call push mov movl call test je and push mov movl call call push mov movl call mov mov cmp je test je and push mov movl call call push mov movl call test je and push mov movl call call push mov movl call mov mov mov imul shr inc mov mov mov jmp mov mov cmp jae sub mov lea cmp jge mov push add lea add push push mov call add lea jmp mov xor lea test jle lea mov sar inc inc test jg sub push add add push push mov call add lea jmp mov mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push call ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push push mov xor push lea mov xor mov mov mov mov mov mov lea push call cmpl je mov mov mov mov mov push call movzbl and mov shl or cmp jb add cmp jb xor mov mov pop pop pop mov pop ret mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov movl cmp jne mov mov mov mov push call mov mov mov lea push call mov mov test jne movb xor mov mov pop pop pop mov pop ret add mov movzbl movzwl mov shr inc sub mov cmp jae push lea push push call mov mov mov mov add push call movl jmp lea mov mov mov mov lea push call cmpl mov je lea push lea sub push mov call mov mov push push lea push call mov mov mov add push add call cmp jb mov lea lea mov mov mov mov mov pop pop pop mov pop ret cmp jae push push lea push call mov mov mov mov add push call lea movl mov mov mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push mov xor push lea mov xor mov mov mov mov mov lea push mov call movl mov mov mov push mov call mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov movl mov mov mov mov mov call mov cmp jae mov lea jmp mov lea call mov mov mov lea sub push push mov call mov xor mov mov mov mov cmp jbe jmp xor mov mov lea push mov call mov mov test je and mov push mov movl call call push mov movb call mov test je and cmpl mov jb mov push call add lea push push call mov mov add movl cmp jb mov jmp cmpl jne push call add mov mov mov push push push call mov mov add push mov call lea mov mov lea push mov call mov lea mov push lea sub push mov call mov mov push mov mov push lea push call mov mov add add push mov mov call cmp jb testb je andl push mov movb call call push mov movb call mov mov testb mov je andl push mov movb call call push mov movb call push lea lea call mov mov mul shr cmpl lea jne push call add mov mov mov mov mov push push call mov mov mov mov push push push mov mov call mov mov sub add push mov mov push call mov mov mov add mov sub push mov call cmpl ja mov push call mov push call mov push call mov add mov mov pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add mov pop ret mov xor cmp sete ret int3 int3 int3 int3 mov push mov sub cmp jae xor pop ret push push push call add add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push cmp ja cmpl jb mov sub cmp jb mov mov mov mov mov mov mov mov add mov mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push push mov xor push lea mov mov mov mov mov sub lea sub movl cmp ja xor mov mov pop pop pop mov pop ret cmp ja cmp jb cmp jb mov sub mov mov mov mov mov mov mov mov jmp lea cmp jb mov sub mov mov call jmp cmp jb mov sub mov mov sub mov mov dec inc test jg mov add mov mov mov mov pop pop pop mov pop ret int3 int3 push mov push push mov push sub mov xor push lea mov mov movl mov mov movl mov mov lea push lea call add mov mov pop mov pop ret push mov sub mov mov mov push lea call add mov pop ret int3 push mov push push mov push sub push mov xor push lea mov mov lea lea push mov movl call add test jne xor mov mov pop pop mov pop ret mov mov mov mov xor xor add adc mov jne cmp ja push mov call mov call test je xor jmp lea push mov call mov call mov movl mov mov lea movl push lea mov mov call add mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 int3 add mov cmp sbb inc ret int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 add mov cmp sbb inc ret int3 int3 int3 int3 push mov push push mov push sub push mov xor push lea mov mov movl mov mov xor lea mov push lea mov call add mov mov pop pop mov pop ret int3 int3 int3 push mov push push mov push sub push mov xor push lea mov mov movl mov mov movl movl mov lea lea movb call mov mov sub mov mov mov pop pop mov pop ret push mov push push mov push sub push push mov xor push lea mov mov mov mul shr lea push mov call mov call test je xor jmp lea push mov call mov call mov mov movl mov mov movl movl mov lea lea movb call mov sub movl push mov movl movl call mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push mov push sub mov xor mov push push push mov xor push lea mov mov mov xor mov mov mov mov mov mov mov lea push lea call test jne movl mov mov mov mov push call xor jmp mov cmp ja mov add push lea mov call cmpb je mov cmp jne mov jmp xor movl mov mov mov mov push call mov mov mov pop pop pop pop mov xor call mov pop ret push mov push push mov push sub mov xor mov push push push lea mov mov xor mov mov mov mov mov lea mov push lea mov call test jne movl mov mov mov mov push call xor jmp mov cmp ja push lea mov call cmp je mov cmp jne mov movl mov mov mov mov push call mov mov mov pop pop pop mov xor call mov pop ret push mov push mov mov add push mov call cmpb pop je mov cmp jne mov pop ret xor pop ret int3 push mov mov call cmpb je mov cmp jne mov ret xor ret push mov push push mov push sub push push mov xor push lea mov mov mov sub movl cmp jge mov call test je mov mov inc test jne mov mov movzbl mov sub shr mov mov inc sub cmp ja cmpl jb cmp jb mov mov mov mov mov mov mov mov add testb mov je andl push mov movl call call push mov movl call mov add sub cmp jge mov jmp cmp jb lea mov and inc add mov sub mov cmp jae mov mov sub mov cmp jb push push push call mov mov mov add mov mov mov mov sub mov add push call mov mov mov lea push call mov mov mov mov test je lea mov mov cmp jb mov mov sub mov cmp jb push push push call mov mov add mov mov add sub add cmp jmp movzbl movzwl mov shr mov and movzbl and add mov push add call test je mov sub cmp jmp mov mov pop pop pop mov pop ret int3 push mov push push mov push sub push push push mov xor push lea mov mov mov movl mov mov sub cmp jge call test je mov mov inc test jne movzbl shr inc cmp jb lea mov and inc add mov sub cmp jae lea add mov cmp ja mov sub mov mov mov push call mov mov mov lea push call mov mov test je mov lea mov cmp jb add mov cmp ja add jmp movzbl movzwl mov mov mov shr add mov and mov and lea mov cmp jbe movzbl add cmp mov setbe test je mov sub cmp jge mov jmp mov mov pop pop pop pop mov pop ret int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub add pop ret movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov cmp je push mov push push push call add add pop pop pop ret mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp cmp jne repz jmp mov andl movl movb ret mov push mov mov mov movl mov mov movb pop ret mov test jne mov ret mov push mov cmpl push mov je push pushl call lea push call pop pop mov test je pushl push push call add movb pop pop pop ret mov push mov cmpb je pushl call pop andl movb pop ret mov push mov mov push mov andl movl movb pushl call mov pop pop ret mov push mov push mov push mov cmp je call cmpb je pushl mov call jmp mov mov mov pop pop pop ret movl jmp mov push mov push lea push mov call movl mov pop pop ret movl jmp mov push mov push lea push mov call movl mov pop pop ret movl jmp mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov andl movl movb call mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne jmp test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop add inc add jnp add add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea xlat jnp add jnp add inc add inc add inc add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov lock add jnp add inc add jl add leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop nop jl add inc add mov sub shr sub cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea xor add jge add inc add inc add inc add inc add inc add inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov mov add inc add inc or leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret mov push mov pop jmp mov push mov pushl push call pop pop pop ret mov push movl call pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov pushl push call pop pop pop ret mov push call pop ret mov push mov mov add push add push call neg pop sbb pop inc pop ret mov push mov mov add push add push call neg pop sbb pop neg pop ret mov push mov mov add push add push call pop pop xor test setg mov pop ret lea ret mov movl ret mov ret mov push mov push push push lea push mov movl call movl mov pop leave ret mov push mov sub jmp pushl call pop test je pushl call pop test je leave ret testb mov mov jne orl push lea push mov movl call push mov call pop push lea call push lea push mov call int3 mov push mov cmpl jne call pushl call push call pop pop pop ret mov cmp je xor ret mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov ret push push call lea push call xor cmp jne push push push push call mov cmp je mov jmp mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov call test jne push call pop call test jne push call pop call mov call test jns push call pop call mov call mov call test jns push call pop call test jns push call pop push call pop cmp je push call pop call testb je movzwl jmp push pop push push push push call mov cmp jne push call call jmp mov mov mov mov push push call pop pop ret mov mov mov cmpl jne push call call movl mov call ret call jmp mov push mov mov push test je cmpl jne call push pop mov call mov jmp cmpl je cmp jae call push pop mov mov jmp push pushl pushl call add xor pop pop ret push call pop ret mov push mov sub push push xor push xor pop lea mov rep cmp jne call movl call or jmp mov cmp je push mov mov lea push push pushl lea push movl movl call add decl mov js mov mov jmp lea push push call pop pop mov pop pop pop leave ret mov push mov lea push pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov pop jmp mov push mov push push push mov push push call fldl pop pop movzwl mov mov and cmp jne push push fstpl call pop pop test jle cmp jle cmp jne fildl push sub fstpl fldl fstpl push call add jmp push push call pop pop jmp fldl push faddl sub fstpl fildl fstpl fldl fstpl push push call add jmp fldz fucompp fnstsw test jnp fldl lea push push push fstpl call mov mov add test jns mov sub cmp jl jmp mov sub cmp jg add cmp jle push sub fstpl fldl fstpl call fstpl fildl fstpl push push fldl fstpl push push jmp cmp jle add push push push fstpl call add push sub fstpl fildl fstpl jmp cmp jge fmull push sub fstpl fildl fstpl fldl fstpl push push jmp cmp jge add push push push fstpl call add jmp push push push fstpl call push fstpl push call add fldl pop pop leave ret mov push mov cmpl je pushl push pushl call test jne push call mov call push call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push test je mov xor mov test je mov add xor je sub je test jne sub jb push mov shl add mov shl add jmp pop add je mov add xor je sub jne pop ret sub jb mov xor mov add xor xor add and je mov xor je xor je shr xor je xor je jmp pop lea pop ret lea pop pop ret lea pop pop ret lea pop pop ret call mov cmp je mov test jne call mov ret mov push mov push push push mov push pushl call pushl mov mov call mov cmp jb mov sub lea cmp jb push call mov lea pop cmp jae mov cmp jae mov add cmp jb push pushl call pop pop test jne lea cmp jb push pushl call pop pop test je sar push lea call mov pushl mov call mov add push call mov mov jmp xor pop pop pop leave ret mov push push push call pop pop mov push call mov mov test jne push pop pop ret andl xor pop ret push push call call andl pushl call pop mov movl call mov call ret call ret mov push mov pushl call neg sbb neg pop dec pop ret mov push mov pop jmp pushl call test je call push call push push call add jmp mov push mov push pushl call pushl mov call mov mov pop pop ret pushl call ret mov push mov push push push mov test jne call movl call fldz jmp push push mov push push call fldl pop pop movzwl mov mov and cmp jne orl push push fstpl call pop pop test jle cmp jle cmp jne fldl push push push fstpl push call add jmp fldl jmp fldl faddl push sub fstpl fldl fstpl push push call add jmp push push push fstpl call push fstpl push call fldl add pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret call test je push call pop testb je push push push call add push call int3 mov push mov mov mov mov and not and or mov pop ret mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov call mov push call pop push call push call cmpl jne push call pop push call push call leave ret mov push mov mov push push test je mov test jne call push pop mov call mov jmp mov test jne mov jmp mov sub mov mov inc test je dec jne test jne movb call push pop mov mov jmp xor pop pop pop ret mov push mov cmpl jne call push call push call pop pop mov test jne inc push push pushl call pop ret mov push mov push mov cmp ja push push cmpl jne call push call push call pop pop test je mov jmp xor inc push push pushl call mov test jne push pop cmp je push call pop test jne jmp call mov call mov mov pop pop jmp push call pop call movl xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je mov add test je test jne add lea lea mov mov add xor xor add test je mov test je test je test je test je jmp lea mov sub ret lea mov sub ret lea mov sub ret lea mov sub ret push mov and test jne mov and shr je jmp lea movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqa movdqa lea lea dec jne and je mov shr je mov mov lea lea dec jne mov and je mov mov inc inc dec jne pop pop pop pop ret mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push call mov xor ret mov push mov cmpl je pushl pushl pushl pushl pushl call pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret push push call mov xor cmp jne push push push push lea push push call add mov cmp jne xor jmp push call pop mov jmp dec mov cmpb jne mov cmp ja dec push call pop mov cmp jne push call pop mov test je add push call pop mov test je pushl push push call add xor cmp jne mov mov mov mov mov mov jmp push push push push push call push call pop pushl call pop movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret mov push mov cmpw jne movl pushl push push pushl pushl pushl call add pop ret push push call xor mov cmp jne push call pop mov cmp jne push push add push push call add mov mov cmp jne push lea push push call add xor jmp push call pop mov mov mov dec mov test je lea cmpb jne movb jmp push call pop mov cmp je lea push call pop mov test je pushl push push call add xor cmp jne mov mov mov mov mov mov mov jmp push push push push push call push call pop pushl call pop mov movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov pushl call push call pop pop mov jmp movl call call ret push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test jne mov cmp jne or je cmp jne or je shr cmp jne or je cmp jne add add or jne mov xor ret nop sbb shl add ret test je mov add cmp jne add or je test je mov add cmp jne or je cmp jne or je add jmp mov push mov mov mov pop ret mov push mov push push call pop pushl call pushl mov call push mov call pop mov pop pop ret push call pop ret pushl call ret mov push mov pushl call test je pushl call pop test je xor inc pop ret xor pop ret mov push mov sub mov push push push pop mov lea rep mov mov pop mov pop test je testb je movl lea push pushl pushl pushl call leave ret mov push mov mov mov cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne call xor pop ret push call xor ret mov push mov push call test je push push call test je pushl call pop ret mov push mov pushl call pop pushl call int3 push call pop ret push call pop ret mov push call mov push call push call push call push call push call push call add pop ret mov push mov push mov jmp mov test je call add cmp jb pop pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret mov push mov mov test jne call movl call push pop pop ret mov test je mov xor pop ret mov push mov mov test jne call movl call push pop pop ret mov test je mov xor pop ret mov push mov cmpl je push call pop test je pushl call pop call push push call pop pop test jne push push push call mov mov pop mov cmp jae mov test je call add cmp jb cmpl pop pop je push call pop test je push push push call xor pop ret push push call push call pop andl xor inc cmp je mov mov mov cmpl jne pushl mov call mov mov test je pushl call mov mov mov mov sub mov cmp jb call cmp je cmp jb pushl call mov call mov call pushl call mov pushl call cmp jne cmp je mov mov mov mov mov mov jmp movl cmpl jae mov mov test je call addl jmp movl cmpl jae mov mov test je call addl jmp movl call cmpl jne movl push call pop pushl call cmpl je push call pop ret call ret mov push mov push push pushl call add pop ret mov push mov push push pushl call add pop ret push push push call add ret push push push call add ret mov push mov call pushl call pop push call int3 mov push mov xor mov cmp je inc cmp jb xor pop ret mov pop ret mov push mov sub mov xor mov push push mov push push call mov xor pop mov cmp je push call pop cmp je push call pop test jne cmpl je cmp je push push mov push call add test jne push mov push push mov call mov test jne push push push call add test je xor push push push push push call push call inc pop cmp jbe push call lea mov sub push sar push sub push push call add test jne push mov push push call add test jne pushl push push call add test jne push push push call add jmp push push push push push jmp push call mov cmp je cmp je xor mov mov cmp je inc cmp jb push lea push lea push mov call pop push lea push push call mov pop pop xor pop call leave ret push call pop cmp je push call pop test jne cmpl jne push call push call pop pop ret mov push cmp je add lea cmp jb add pop cmp jae cmp je xor ret mov push mov push call mov test je mov mov mov push cmp je add lea cmp jb add cmp jae cmp je xor test je mov test jne xor jmp cmp jne andl xor inc jmp cmp je mov push mov mov mov cmp jne push pop mov andl add cmp jl mov mov cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl pushl push call pop mov jmp andl push call pop mov pop or pop pop pop ret mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push push xor cmp jne call mov test jne mov mov cmp ja test je test je cmp jne xor test sete mov movzbl push call pop test je inc inc jmp cmp ja inc mov test jne pop mov pop ret cmpl jne call push mov push xor test jne or jmp cmp je inc push call pop lea mov test jne push inc push call mov pop pop mov test je mov push jmp push call cmpb pop lea je push push call pop pop mov test je push push push call add test jne add add cmpb jne pushl call andl andl movl xor pop pop pop pop ret pushl call andl or jmp xor push push push push push call int3 mov push mov mov mov pop ret mov push mov push mov push xor push mov mov mov movl cmp je mov addl mov mov cmpb jne xor cmp mov sete inc mov jmp incl test je mov mov inc mov mov movzbl push inc call pop test je incl cmpl je mov mov incl mov inc mov mov test je cmpl jne cmp je cmp jne test je movb andl cmpb je mov cmp je cmp jne inc jmp dec jmp cmpb je cmpl je mov addl mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne cmpl je lea cmpb jne mov jmp xor xor cmp sete mov shr test je dec test je movb inc incl test jne mov mov test je cmpl jne cmp je cmp je test je movsbl push test je call pop test je mov mov incl mov inc incl mov mov incl mov jmp call pop test je inc incl incl mov inc jmp test je movb inc mov incl mov jmp mov pop pop test je andl incl leave ret mov push mov sub push xor push push cmp jne call push mov push push mov call mov mov cmp je mov cmp jne mov mov lea push push push lea call mov add cmp jae mov cmp jae mov shl lea cmp jb push call mov pop cmp je mov lea push add push push lea call mov add dec mov mov xor jmp or pop pop pop leave ret mov push mov sub push push call mov xor cmp jne xor jmp cmp je add cmp jne add cmp jne push mov push push push sub push sar inc push push push push mov call mov cmp je push call pop mov cmp je push push pushl push pushl push push push call test jne pushl call pop mov push call mov jmp push call xor pop pop pop leave ret mov push mov sub push lea push call push push pop push call pop pop xor cmp jne or jmp lea mov mov cmp jae add orl movw mov movw movb mov mov mov add lea add cmp jb push push cmp je mov cmp je mov add mov add mov mov cmp jl mov cmp jge mov push push call pop pop test je addl lea mov cmp jae add orl andl andb andl movw movw movb mov add add lea cmp jb add cmp jl jmp mov xor test jle mov mov cmp je cmp je mov mov test je test jne push call test je mov and mov sar shl add mov mov mov mov mov mov push lea push call test je incl addl inc incl cmp jl xor mov shl add mov cmp je cmp je orb jmp movb test jne push pop jmp lea neg sbb add push call mov cmp je test je push call test je and mov cmp jne orb jmp cmp jne orb push lea push call test je incl jmp orb movl inc cmp jl pushl call xor pop pop pop leave ret or jmp mov push push mov mov test je lea cmp jae lea cmpl je push call mov add add lea cmp jb pushl call andl pop add cmp jl pop pop ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret push call ret call ret mov push mov pushl pushl call call pop ret mov ret mov push pushl call mov test jne pushl call mov push pushl call mov pop ret mov push mov pushl pushl pushl call call pop ret mov cmp je push pushl call call orl mov cmp je push call orl jmp push push call push call mov movl andl xor inc mov mov movb movb movl push call pop andl pushl call movl call push call pop mov mov mov test jne mov mov pushl call pop movl call call ret xor inc mov push call pop ret push call pop ret mov push push call pushl mov call call mov test jne push push call mov pop pop test je push pushl pushl call call test je push push call pop pop call orl mov jmp push call pop xor push call pop mov pop ret mov push call mov test jne push call pop mov pop ret push push call mov test je mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov cmp je push call pop push call pop andl mov test je push call test jne cmp je push call pop movl call push call pop movl mov test je push call pop cmp je cmp je cmpl jne push call pop movl call push call pop call ret mov push call pop ret mov push call pop ret mov push mov cmpl je cmpl jne push pushl mov call test je pushl pushl call call mov pop push pushl pushl call call pushl call mov cmp je push push call pop ret jmp jmp mov push push call mov test jne call xor pop ret push mov push push call push push mov call push push mov call push push mov call cmpl mov mov je cmpl je cmpl je test jne mov mov mov movl mov mov call mov cmp je pushl push call test je call pushl mov call pushl mov call pushl mov call pushl mov call mov call test je mov push pushl call call mov cmp je push push call mov pop pop test je push pushl pushl call call test je push push call pop pop call orl mov xor inc jmp call xor pop pop ret push push push call xor test setne mov mov ret pushl call andl ret mov ret int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret int3 int3 int3 int3 int3 int3 int3 mov cmp je mov add xor call mov mov add xor jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov sub push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne mov lea mov mov mov mov cmp je lea lea mov lea mov mov mov test je mov call movb test js jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov mov call mov cmp je push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je push push mov call jmp mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp jne mov jmp test jne mov or shl or mov not mov pop pop pop leave ret mov push mov mov mov pop ret mov push mov sub mov xor mov push mov push cmp je push call pop andl push lea push push call lea mov lea add mov mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea mov movl mov mov mov mov mov mov mov mov call push mov call lea push call test jne test jne cmp je push call pop mov pop xor pop call leave ret mov push mov push pushl call pushl mov call mov mov pop pop ret pushl call ret mov push push mov push push call add push call push call pop ret mov push mov pushl pushl pushl pushl pushl call int3 mov push mov pushl call test je pop jmp pushl pushl pushl pushl pushl call int3 xor push push push push push call add ret xor push push push push push push call push mov push push call add push call push call int3 mov push mov pop jmp mov push mov mov xor cmp je inc cmp jb lea cmp ja push pop pop ret mov pop ret add push pop cmp sbb and add pop ret call test jne mov ret add ret call test jne mov ret add ret mov push mov push call mov push mov call pop mov call mov pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov test jne call push pop jmp call mov mov xor pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov test jne call push pop jmp call mov mov xor pop pop ret mov push mov push push mov push call mov mov pop test jne call movl orl or jmp test je call movl jmp push xor test je mov test je mov and mov mov mov and or mov mov mov test jne call add cmp je call add cmp jne pushl call pop test jne push call pop testl push je mov mov lea mov mov sub dec mov cmp jle push push pushl call add mov jmp or mov or jmp mov cmp je cmp je mov and mov sar shl add jmp mov testb je push push push push call and add cmp je mov mov mov jmp xor inc push lea push pushl call add mov cmp je orl or jmp mov and pop pop pop leave ret mov push mov mov push mov movb test jne call mov mov mov mov mov mov cmp je mov test jne call mov mov cmp je mov mov test jne call mov mov testb jne orl movb jmp mov mov mov mov mov pop pop ret cmpb je mov andl ret mov ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov push testb push mov mov mov je cmpl jne mov add jmp andl cmpl jle mov mov decl mov call incl cmpl jne cmpl jne mov mov call cmpl jg cmpl jne mov mov pop leave ret mov push mov mov addl mov mov pop ret mov push mov mov addl mov mov mov pop ret mov push mov mov addl mov mov pop ret mov push mov sub mov xor mov push mov push mov xor push mov pushl lea mov mov mov mov mov mov mov mov mov call call mov test jne call movl call cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov mov mov mov mov test je inc xor mov cmp jl lea cmp ja movsbl movsbl and jmp xor movsbl push sar pop mov cmp ja jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov mov cmp jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne add mov mov mov cmp jge orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne add orl mov jmp cmp jne cmpb jne add andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov and lea push movzbl push call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je test jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne mov add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov test je mov test je testl movswl mov je cltd sub sar movl jmp and jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb mov movl je orl jmp addl mov mov call test je testb je mov mov jmp mov mov movl jmp mov orl movl mov test je mov mov add jmp mov orl lea mov mov mov cmp jge movl jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov test je mov mov mov jmp movl mov mov add mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call call mov add and je cmpl jne lea push push pushl call call pop pop cmpb jne test jne lea push push pushl call call pop pop cmpb jne orl inc mov push jmp movl mov jmp sub je dec dec je sub jne mov movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je test jg jl test jae neg adc neg orl testl mov mov jne xor cmp jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add mov mov mov cmp jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmp je add test jne sub sar jmp test jne mov mov mov jmp dec cmpb je inc test jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub mov test jne mov jmp mov lea mov dec call cmpl je test jg pushl mov mov lea push lea call testb pop pop je testb jne mov jmp lea mov mov dec call cmpl je test jg cmpl mov je test jle mov mov movzwl decl push push lea push lea push add call add test jne cmp je pushl mov mov lea push lea call cmpl pop pop jne jmp orl jmp mov push pushl lea call pop pop cmpl jl testb je mov jmp mov lea mov dec call cmpl je test jg cmpl je pushl call andl pop mov mov mov test je mov mov mov jmp cmpb je mov andl mov mov pop pop xor pop call leave ret nop push mov add add inc add mov add mov add inc add call in sub andl push push pop xor lea rep pop cmp jne call movl call or leave ret mov test je push pushl mov pushl mov pushl lea push movl movl call add decl mov js mov movb jmp lea push push call pop pop mov pop leave ret mov push mov pushl push pushl pushl call add pop ret mov push mov sub push push xor pop xor lea mov rep pop cmp jne call movl call or leave ret pushl lea pushl movl pushl movl push mov mov call add leave ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov sub push push xor push xor pop lea mov rep cmp jne call movl call or jmp mov push mov cmp je cmp jne call movl call or jmp mov mov cmp ja mov pushl lea pushl movl pushl mov push mov call add mov cmp je cmp jl decl js mov mov jmp lea push push call pop pop cmp je mov jmp xor cmp mov setge sub pop pop pop leave ret mov push mov pushl push pushl pushl pushl push call add test jns or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jns or pop ret mov push mov cmpl jne call movl call or pop ret push mov test je cmpl ja call movl jmp pushl pushl pushl pushl push push call add test jns movb cmp jne call movl call or pop pop ret mov push mov pushl push pushl pushl pushl call add pop ret mov push mov cmpl jne call movl call or pop ret push mov push mov push test jne test jne cmp jne xor jmp test je mov test jne call movl jmp call pushl pushl pushl cmp jbe mov inc push push push call add cmp jne call cmpl jne call mov jmp mov push push push call add movb cmp jne cmpl jne call cmpl jne call mov jmp test jns movb cmp jne call movl call or pop pop pop pop ret mov push mov pushl push pushl pushl pushl pushl call add pop ret mov push mov pushl push pushl pushl pushl push call add test jns or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jns or pop ret mov push mov push push mov fldl movzwl fstpl add shl and or mov fldl leave ret mov push mov movzwl shr and sub cwtl pop ret mov push mov movzwl fldl mov shr and lea push push push fstpl call add pop ret mov push mov push push movzwl fldl mov fstpl shl and or mov fldl leave ret mov push mov xor cmpl jne cmp jne xor inc pop ret cmpl jne cmp jne push pop pop ret mov mov push mov and pop cmp jne push jmp mov cmp jne testl jne cmp je push jmp xor pop ret mov push mov fldl fldz fld fucomp fnstsw fstp test jp xor jmp movzwl xor test jne testl jne cmp je fcompl mov fnstsw test jne xor inc jmp xor jmp shll testl je orl shll dec testb je push mov and pop cmp je mov or fldl push push push fstpl call add jmp push fstp fldl push push fstpl call movzwl shr and add sub mov mov pop ret mov push mov push push fldz mov fstpl mov mov xor and xor mov fldl leave ret mov push mov push push fldz mov fstpl mov mov mov not xor and not xor mov fldl leave ret mov push mov pushl fldl push push fstpl call add pop ret mov push mov push push push mov push push call fldl pop pop movzwl mov mov and cmp jne push push fstpl call pop pop test jle cmp jle cmp jne fldl push push push fstpl push call add jmp push push call pop pop jmp fldl push faddl sub fstpl fldl fstpl push push call add jmp fldz fucompp fnstsw test jp fldl push sub fchs fstpl fldl fstpl push push jmp fldl lea push push push fstpl call mov fstp dec mov fildl push push fstpl call add fldl pop pop leave ret mov push mov sub fldz push push fstpl push mov push push call mov mov mov movzwl pop pop mov and cmp je movzwl and mov cmp jne mov mov mov and mov cmp jne test jne test jne mov mov and cmp jne testl jne cmpl je pushl fldl faddl sub fstpl fldl fstpl fldl fstpl push push call add jmp cmp je cmp je mov mov fldl fld fldl fld fucomp fnstsw fstp test jp push fstp pushl fstp call fldl pop pop jmp fld fldz fld fucomp fnstsw fstp test jp fxch movl fcom fnstsw test jne andl jmp movl fxch fcom fnstsw test jp fxch fcom fnstsw test jnp fxch fcom fnstsw test jne fxch fcom fnstsw test jne fstp lea fstp mov fstp mov test jne dec mov jmp fxch fcom fnstsw test jp fxch fcom fnstsw test je fxch fcomp fnstsw test jne fcompp fnstsw test jne jmp fstp fstp fstp lea mov mov test jne inc jmp fstp fstp mov mov mov shr test jne test jne test je fldl lea push push push fstpl call mov add add push push push fstpl call add pushl sub fstpl fldl fstpl fldl fstpl push push jmp cmp jne test je cmp jne test jne fldl lea push push push fstpl call mov add add push push push fstpl call add pushl sub fstpl fldl fstpl fldl fstpl push push jmp push pushl call fldl pop pop jmp pushl fldl sub fstpl fldl fstpl push call add pop pop pop leave ret mov push mov mov mov and xor cmp setne mov pop ret mov push mov mov mov mov and add cmp jne testl jne cmpl jne cmp jne xor inc pop ret xor pop ret mov push mov mov mov mov and cmp jne fldl push push fstpl call dec pop pop je dec je dec je xor inc pop ret push jmp push pop pop ret mov pop ret movzwl and test jne testl jne cmpl je mov neg sbb and sub pop ret fldl fldz fucompp fnstsw test mov jp neg sbb and add pop ret neg sbb and add pop ret mov push mov mov mov push push push xor mov mov xor mov mov inc mov test je mov or movl test je mov orl movl test je mov orl movl test je mov orl movl test je mov orl movl mov mov mov shl not xor and xor mov mov add not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor call test je mov orl test je mov orl test je mov orl test je mov orl test je mov or mov mov and je cmp je cmp je cmp jne mov orl jmp mov mov and or mov jmp mov mov and or jmp mov andl mov mov and je cmp je cmp jne mov andl jmp mov mov and or jmp mov mov and or mov mov mov shl xor and xor mov or cmp mov mov je andl mov flds mov fstps mov or mov andl flds mov fstps jmp mov and or mov mov fldl mov fstpl mov or mov mov and or mov fldl mov fstpl call lea push push push pushl call mov testb je andl testb je andl testb je andl testb je andl test je andl mov and xor sub mov je dec je dec je dec jne orl jmp mov and or mov jmp mov and or jmp and mov shr and sub je dec je dec jne and jmp mov and or jmp mov and or mov cmp je flds fstps jmp fldl fstpl pop pop pop pop ret mov push mov push pushl pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl pushl pushl pushl pushl pushl call add pop ret mov push mov sub mov push push xor mov and inc mov test je test je push call pop and jmp test je testb je push call pop and jmp test je testb je push call mov pop mov and je cmp je cmp je cmp jne fldz mov fcompl fnstsw fldl test jnp jmp fldz mov fcompl fnstsw test jnp fldl jmp fldz mov fcompl fnstsw test jp fldl jmp fldz mov fcompl fnstsw test jp fldl jmp fldl fchs fstpl and jmp test je testb je xor test je mov push mov fldl fldz fucompp fnstsw test jnp fldl lea push push push fstpl call mov fstpl add add cmp jge fldl mov fmull jmp fldz fcompl fnstsw test jne mov jmp xor mov and or mov mov cmp jge sub test je test jne mov shrl test je orl shrl dec jne test je fldl fchs fstpl fldl fstpl jmp mov pop test je push call pop andl mov testb je testb je push call pop and xor test pop sete pop leave ret mov push mov cmpl je jle cmpl jg call movl pop ret call movl pop ret mov push mov xor mov cmp je inc cmp jl xor pop ret mov pop ret mov push mov mov test je push jmp test je xor inc pop ret test je push jmp test je push pop pop ret movzbl and add pop ret mov push mov sub xor mov cmp je inc cmp jl xor mov test je mov mov mov mov mov mov mov push mov mov mov mov mov push pushl mov mov call lea push call add test jne push call pop fldl pop leave ret mov jmp push pushl call pushl call fldl add leave ret mov push mov cmpl jne pushl fldl sub fstpl fldz fstpl fldl fstpl pushl push call add pop ret call push pushl movl call fldl pop pop pop ret mov push mov push push cmpl fldl faddl fstpl jne pushl fldl sub fstpl fldl fstpl fldl fstpl pushl push call add leave ret call push pushl movl call fldl pop pop leave ret mov push mov push push and add push mov mov mov sub mov xor mov pushl lea push pushl call add test jne andl push lea push lea push pushl lea pushl push lea push call add pushl call add cmpl jne test je pushl fldl sub fstpl fldz fstpl fldl fstpl pushl push call add jmp push call movl pushl call fldl pop pop mov xor call mov pop mov pop ret mov push mov push push and add push mov mov mov sub mov xor mov pushl lea push pushl call add test jne mov fldl and fstpl or mov push lea push lea push pushl lea pushl push lea push call add pushl call add cmpl jne test je pushl fldl sub fstpl fldl fstpl fldl fstpl pushl push call add jmp push call movl pushl call fldl pop pop mov xor call mov pop mov pop ret mov push mov push fstsw movswl leave ret mov push mov push fnstsw fnclex movswl leave ret mov push mov push fstcw mov mov and not and or movzwl mov fldcw movswl leave ret mov push mov push push mov test je fldt fistpl fwait test je fstsw fldt fstpl fstsw test je fldt fstpl fwait test je fldz fld1 fdivp fstp fwait test je fldpi fstpl fwait leave ret mov push mov push cmpl je stmxcsr jmp andl mov leave ret push push call xor cmp je testb je cmp je mov ldmxcsr jmp mov mov mov cmp je cmp je xor ret xor inc ret mov andl andl ldmxcsr movl jmp andl ldmxcsr call ret mov push mov push cmpl je stmxcsr andl ldmxcsr leave ret xor cmp je call and ret xor cmp je call and jmp ret mov push mov push xor cmp je call mov and mov mov not or and or push call pop mov pop pop ret mov push mov call mov and or push call pop pop ret mov mov movl movl movl movl mov movl movl movl movl ret mov push mov mov mov mov pop ret mov push mov call cmpl je call fnclex pop ret mov push mov push push mov push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop pop pop ret mov push mov push mov test je push push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop mov pop pop ret mov push mov push push mov mov xor push cmp je cmp je mov cmp je cmp jne mov cmp je cmp jne push call pushl call pop pop mov cmp je cmp jne push call pushl call pop pop pushl call pushl call pop pop mov cmp je cmp jne mov sub push call mov mov sub push call mov sub push call pushl call add mov cmp je cmp jne push call pushl call pop pop lea movl cmpl je mov cmp je cmp jne push call pop cmp je mov cmp je cmp jne push call pop add decl jne push call pop pop pop pop pop ret mov push mov push mov test je mov test je push mov cmp je push mov call pop test je push call cmpl pop jne cmp je push call pop mov pop jmp xor pop pop ret push push call call mov mov test je cmpl je call mov test jne push call pop mov call ret push call pop andl pushl add push call pop pop mov movl call jmp push call pop mov ret mov push mov push mov push call add cmp jbe or mov pop pop ret mov push mov mov mov mov pop ret mov push mov push push xor pushl call mov pop test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor push pushl pushl call mov add test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl call mov pop pop test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl pushl call mov add test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret mov push mov sub mov xor mov cmpl mov push push push mov mov jne andl push lea mov push pushl pushl push call mov add test jne call cmp jne push push pushl pushl pushl call add mov test je inc push push call mov pop pop test je pushl mov push pushl pushl pushl call mov add test je push push call mov xor pop pop cmp jne cmp je push call pop or mov pop pop xor pop call leave ret lea push push push push call add test jne cmp je push call pop xor jmp push push push push push call cmpl jne mov xor push push pushl mov pushl call mov test je push push call pop pop mov test je push push pushl pushl call test jne pushl call andl pop jmp cmpl jne andl push lea push mov or push pushl call test je mov mov jmp mov push mov mov mov pop ret mov push mov mov mov mov mov mov pop ret push push call xor push call pop mov cmp jne mov pushl call mov movl jmp mov pushl call mov movl cmp je cmp je call mov movl call cmp jne xor jmp xor push call pop ret cmpl je pushl call pop xor inc call ret mov push mov mov mov push cmp je mov imul add add cmp jb imul add pop cmp jae cmp je xor pop ret pushl call ret call add ret call add ret push push call andl mov mov cmp je cmp je push pop cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne call mov test je mov cmp jne pushl call pop mov test je pushl push push call add pushl mov call pop test je mov mov mov cmp je add jmp mov add mov imul add lea cmp jae cmp je jmp push call pop andl cmp je cmp jne cmpl jne push push call xor inc cmp jne mov jmp call mov call mov movl mov mov sub je sub je sub je sub je dec jne pushl call mov cmp je push call mov jmp pushl call mov cmp je push call mov jmp pushl call mov cmp je push call mov jmp pushl call mov cmp je push call mov movl call cmpl jne mov jmp mov push call pop ret cmp je cmp je cmp je cmp jle cmp jle call movl call or call ret push push call xor mov mov mov cmp jg je mov push pop sub je sub je sub je sub jne call mov mov test jne or jmp mov mov jmp pushl mov call pop lea mov jmp mov sub je sub je dec je call movl call jmp mov mov jmp mov mov jmp mov mov movl push call mov xor cmpl je cmp jne push call cmp je push call pop xor mov cmp je cmp je cmp jne mov mov mov cmp jne mov mov movl cmp jne mov mov mov add cmp jge mov imul mov mov incl jmp call mov movl call cmp jne pushl push call pop jmp mov mov cmpl je push call pop ret push call pop cmp je cmp je cmp jne mov mov cmp jne mov mov xor call ret andl ret mov push push xor mov cmpl jne lea mov push pushl add call test je inc cmp jl xor inc pop pop ret andl xor jmp mov push mov push mov push mov test je cmpl je push call push call andl pop add cmp jl mov pop mov test je cmpl jne push call add cmp jl pop pop ret mov push mov mov pushl call pop ret pushl push call push call pop ret push push call xor inc mov xor cmp jne call push call push call pop pop mov lea cmp je mov jmp push call pop mov cmp jne call movl xor jmp push call pop mov cmp jne push push call test jne push call pop call movl mov jmp mov jmp push call pop movl call mov call ret push call pop ret mov push mov mov push lea cmpl jne push call pop test jne push call pop pushl call pop pop ret mov andl ret mov push mov mov mov mov mov xor mov mov mov pop ret mov push mov cmpl je jmp mov mov pushl mov call pop mov mov test jne pop ret mov mov test jne xor ret cmp jl cmp jg movsbl sub inc mov ret xor jmp test je cmp jl cmp jg movsbl add inc lea mov mov cmp jne mov inc mov cmp je or ret mov push push mov push xor cmpb jne inc mov mov mov cmp jl cmp jle cmp jne xor inc mov movsbl cmp jg je test je cmp jne cmpb jne inc inc mov movsbl cmp jg je sub je sub je dec dec jmp cmp jl cmp jle cmp jle cmp jne inc mov jmp movsbl sub mov inc or mov test je or jmp and cmp jge mov mov test je and or jmp and mov and je cmp je cmp je mov jmp test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or and sub je dec dec je dec dec je dec dec jne and or jmp and or jmp test je and or jmp and jmp cmp jle cmp jle cmp jne and or jmp mov jmp inc mov mov cmp jl cmp jg movsbl lea mov call or jmp mov jmp mov dec jmp or jmp sub je dec je dec je sub jne inc mov mov mov cmp jl cmp jg movsbl mov or sub mov test je and or jmp and test je and or jmp and or test je or jmp and and sub je dec dec je dec dec jne test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or jmp xor test sete lea jmp and or jmp and or jmp or inc mov jmp mov cmp jl cmp jg movsbl inc add and mov cmp ja jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and jmp and jmp and or jmp and or jmp and or jmp and or jmp and or jmp and or jmp cmp jne inc mov mov jmp xor test setne lea mov pop pop pop ret xchg loop add loop add jecxz add inc add inc add inc add inc add inc add sub and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov and xor cmp setne mov ret mov shr not and ret mov shr not and ret mov shr not and ret mov and ret mov and ret mov and ret mov shr not and ret mov and ret mov shr not and ret mov push mov mov not test mov mov jne add pop ret mov push mov push push mov add and cmpl mov je push call pop jmp test jne push pop mov push cmp jae mov cmp ja push push mov call test je andl jmp xor test je mov test je mov jmp mov sub mov mov jmp xor jmp sub mov mov mov lea pop pop pop pop ret mov andl movb andl ret mov push mov mov mov mov mov mov mov pop ret xor cmpb setle ret xor cmp sete ret movsbl ret mov orl ret mov shr and ret xor cmp je testl je inc ret cmpl je orl ret xor cmp je testl je inc ret orl ret mov shr and ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov test jne xor ret mov jmp mov test jne xor ret mov jmp mov push mov mov test jne mov pop ret mov pop jmp mov push mov mov cmpb je mov mov cmp jle mov pop ret mov push mov mov mov mov mov mov mov pop ret xor cmpl sete ret mov orl ret mov movl ret mov push mov mov mov movl mov pop ret xor inc ret mov ret mov push mov mov cmp jae mov mov inc pop ret mov push mov mov mov movl test je mov cmp je cmp jne xor mov pop ret mov test je mov test je mov mov jmp xor ret mov test je mov test je mov mov jmp xor ret mov push mov mov test je mov test je mov mov pop jmp mov pop ret mov push mov mov mov mov dec neg sbb and add movl mov pop ret mov ret cmpl setne dec and ret mov push mov xor inc test jne or mov xor mov mov mov mov mov movl mov movl mov mov movl mov mov cmp ja imul add pop ret mov pop ret mov push mov mov mov orl mov mov movl mov pop ret mov push mov cmpl jge mov mov push push mov call mov mov mov call add pop mov pop mov pop ret mov push mov mov mov call test jne mov mov pop jmp pop ret mov push mov push pushl mov mov pushl mov call cmp jae pushl mov mov push call pop pop ret xor cmp je inc inc cmpb jne ret mov push mov test je sub mov mov inc dec jne pop ret mov push mov cmpl jne xor pop ret mov test je cmp jne inc inc decl jne movzbl movzbl sub pop ret mov push mov mov mov orl lea orl mov mov mov test je push mov mov mov pop jmp andl andl mov mov mov mov mov mov movb pop ret mov push mov sub xor mov and and push lea push push lea push pushl mov mov call mov add leave ret mov push mov sub andl andl mov and and push lea push push lea push pushl call mov add leave ret mov push mov pushl mov pushl call pop ret mov push mov mov push mov push mov sub cmp jle mov test je mov mov sub mov push mov mov inc dec jne pop lea pop pop pop ret mov push mov cmpl push mov je push push mov call test je pushl mov call jmp xor test mov setne dec and mov jmp andl movb andl mov pop pop ret mov push mov push mov mov andl cmp je cmp je xor jmp mov andl mov cmp jne push call pop mov test jne movb mov pop pop ret mov push mov push mov mov push mov push test je test jne mov call lea push push mov call mov test je jmp mov mov test jne mov jmp mov lea push push call movb jmp test je movb pop mov pop pop pop ret mov push mov push push mov mov test je push push mov call test je mov orl movl mov mov jmp xor mov test jne movb pop pop pop ret mov push mov push mov andl movb andl cmpl je push push mov call test je pushl mov call jmp xor mov test jne movb mov pop pop ret mov push mov mov push mov andl mov cmp jne push call pop mov test jne movb jmp andl mov pop pop ret mov push mov push mov cmpl je push mov cmpl je push push mov call test je mov mov mov mov jmp xor test je incl mov mov pop mov pop pop ret mov push mov mov cmp ja mov cmp je cmp jg mov mov mov mov mov mov jmp mov andl andl movb jmp mov push call mov pop ret mov push mov push push mov mov movl test je cmpl je push push mov call mov mov test je test je mov sub mov mov inc dec jne jmp andl andl pop mov pop pop ret mov ret mov test je mov mov ret xor ret mov push mov pushl pushl pushl pushl call add pop ret mov push mov cmpl jne push push pushl pushl call add jmp mov pop ret mov push mov mov cmpb pushl jne mov incl call jmp pushl call pop pop mov pop ret mov push mov pushl call mov pop pop ret mov push mov push mov cmpb jg cmpl mov je cmp je cmp je test je push call pop push mov call jmp push call mov pop pop ret mov push mov push push mov xor cmp je andl movb mov jmp push mov cmp je mov cmp je sub je dec push mov je push call cmp je pushl mov push call jmp push call cmp je mov movl mov jmp xor mov cmp jne movb jmp movb pop pop pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov cmp je xor cmp je inc cmp jne cmp jbe push push mov call mov pop pop ret mov push mov push mov xor push mov mov andl mov mov cmp je cmp je mov mov mov cmp je cmp je cmp je cmp je cmp je cmp je cmp jl cmp jle cmp jl cmp jle cmp jl cmp jle cmp jb cmp jbe testl je inc inc mov mov cmpb jne push pushl mov call mov mov test je inc mov cmp je andl movb jmp cmpb jne movb jmp movb mov pop pop pop ret mov push mov sub mov xor mov push xor push mov push mov andl lea mov mov push push pushl dec pushl call add mov or mov mov mov jne lea sub push push mov call mov pop mov pop xor pop call leave ret mov push mov sub mov xor mov mov push mov xor mov andl push lea mov mov mov cmp jg jl cmp jae mov neg adc movb neg mov push jmp xor push push push pushl dec call add mov mov mov mov or mov jne pop cmp je dec movb lea sub push push mov call mov pop mov xor pop call leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg mov mov test jne movsbl push mov call jmp cmpl jne mov mov mov jmp push mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp mov test je cmp je movsbl push call jmp push push mov call test je push mov call jmp xor push mov call pop mov pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov xor cmp je inc cmp jne push push mov call mov pop pop ret mov push mov push push mov mov test je movsbl sub incl cmp ja mov andl and push pop or mov mov shr not test je and sub je sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push jmp push jmp push call add push lea call mov mov mov mov mov leave ret mov andl andl movb leave ret mov push call mov leave ret mov push mov mov mov test je cmp je mov andl andl movb pop ret mov incl push call jmp mov push call mov pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp push push mov call test je movl mov jmp xor push mov call pop mov pop pop ret mov push mov push mov cmpb jg push push mov xor cmp je cmp je cmp jne push call jmp push push mov call cmp je xor cmp je inc cmp jne push push mov call jmp xor push mov call pop pop mov pop pop ret mov push mov sub push xor push mov mov andl movl mov cmp jne push mov mov cmp je cmp je cmp je mov jmp push mov call mov mov cmp je movsbl sub cmp ja mov push lea inc push mov call push mov call jmp andl lea push lea push mov call mov sub pop pop cmp jle mov cmpl je lea push call lea push mov call cmp jne andl movb mov cmp je jmp push mov call pop mov pop pop leave ret mov push mov push push mov mov push mov mov mov push mov mov call lea push call pop push mov call push mov call mov cmpb jne incl mov pop leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov sub push xor cmpb jne inc mov mov mov test jne mov push call mov jmp cmp jl cmp jg movsbl sub cltd inc push mov push test je lea call push lea push push call add jmp lea call mov mov mov mov mov mov jmp push push xor xor jmp test je cmp jl cmp jg movsbl shld sub cltd shl add adc inc mov mov mov cmp jne mov inc mov cmp je mov andl andl movb jmp mov push call mov jmp cmpb push push je test je lea call jmp lea call jmp test je lea call push lea push push call add jmp lea call mov mov mov mov mov mov pop pop pop leave ret mov push mov sub mov mov andl andl test je movsbl add cmp ja jmp push jmp push jmp push jmp push lea call mov movsbl incl sub je dec dec je dec dec je dec dec jne lea push lea push push lea call mov call mov mov jmp mov mov mov mov mov leave ret mov andl andl movb leave ret mov push call mov leave ret nop dec testl testl testl testl call in mov movsbl sub sub je dec dec je lea push call pop mov test jne mov mov test je cmp je cmp je mov andl andl movb leave ret mov incl shr not test mov jne mov push lea push lea call mov mov mov mov mov mov leave ret incl mov mov mov mov leave ret mov incl shr not test mov jne mov push jmp incl push mov call mov leave ret mov push mov mov mov sub test je cmp jne incl mov mov xor and mov mov leave ret lea push call pop push lea push push lea call mov call push pushl lea jmp push pushl lea push push push lea call mov call mov call mov leave ret mov push mov sub andl push xor xor incl mov mov movsbl push mov sub push mov je dec je dec je cmp je mov mov cmp je cmp je mov andl movb jmp addl add movsbl add lea cmp jbe andl andl push lea push lea movb mov call push push lea call push lea push lea call mov mov jmp mov mov push lea mov call mov cmpb mov mov mov mov jne incl jmp mov push lea mov call mov mov mov mov mov cmp je incl jmp push lea call mov mov mov or mov mov jmp mov push call mov jmp mov movl jmp cmp jne mov andl and movb push lea push lea movb mov call jmp cmp jne mov mov cmpb mov je mov mov mov incl mov and mov pop pop pop leave ret mov push mov mov sub push xor cmp je call mov cmp jge mov cmp jne lea push push lea lea jmp andl push push mov mov mov test je push lea call jmp mov decl test je mov cmp je lea push push call pop pop push lea push push lea call mov call mov mov mov push lea mov call lea push lea call cmpb jle cmp je test je lea push lea push mov call mov mov mov jmp push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov lea push lea push call mov mov pop pop mov or pop mov mov pop jmp mov cmp je push lea push push lea call mov call mov mov mov push lea mov call mov mov mov push lea mov call mov mov mov push lea mov call lea jmp lea push push lea lea push push push call mov call mov call push pushl call mov pop pop pop leave ret mov push mov sub lea push push call pop pop push lea push push lea call mov call push pushl lea call mov leave ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov mov mov sub push push mov xor mov mov inc mov cmp jg mov cmpb je lea push call mov pop mov mov push lea mov call push lea push lea call mov mov mov mov cmp jg mov cmpb je push jmp mov mov test je cmp je lea push call pop push lea push push lea call mov call mov mov mov push lea mov call lea push mov call mov cmpb jne inc mov cmp jg cmpb je push mov call cmp jle cmp jg mov cmpb jne push mov call push mov call mov cmpb jne incl jmp cmp jg push lea push push lea call mov call mov mov mov mov mov pop pop leave ret mov push mov sub pushl lea call mov mov incl cmp jne mov mov incl cmp jne incl lea push push call lea push push call mov mov add test je cmp je inc mov mov test jne cmpb jne mov dec push mov call mov leave ret mov inc mov mov mov mov mov leave ret mov andl andl movb leave ret mov push mov push push mov mov test jne mov push call jmp push cmp jne incl lea push call push push pushl call add jmp pushl call pop pop mov leave ret mov push mov sub mov xor mov mov push mov incl push mov push movsbl cmp jg je sub je sub je dec je dec jne lea push call lea push call cmpb pop pop jg cmpb jg push lea push lea call test jne andl andl movb jmp mov mov cmp jne mov mov movb jmp movb lea push push push lea push lea push lea call mov call mov call jmp mov cmpb jne incl push mov call jmp lea push call pop push push push lea call jmp push call jmp decl push mov call jmp cmp je jle cmp jle cmp je cmp jne push lea push push call lea push call mov mov mov add mov jmp lea push call testl pop je push lea push lea call lea push call push call pop pop test je push jmp lea push lea lea push cmp jne push call mov call push push lea call jmp push jmp push lea call cmp jl cmp jg lea push call pop push lea call push lea call sub je dec je dec je dec je dec jne lea push call pop push lea call push lea call lea push call pop push lea call push lea call lea push call pop push lea call push push lea call jmp push call pop mov pop mov pop xor pop call leave ret mov push mov mov xor sub cmp je cmp je cmpb jne inc mov mov cmp jne mov push call jmp push push pushl call jmp cmpb jne pushl inc pushl mov call pop pop jmp push mov lea push push call mov pop pop pop test je lea push lea push push lea call mov call mov mov jmp test je lea push lea push push jmp mov mov mov mov mov leave ret pushl push pushl call add mov leave ret mov push mov pushl pushl call mov pop pop pop ret mov push mov sub mov xor mov push xor push mov mov andl mov movb movl cmp jne push mov mov mov cmp je cmp je cmp je mov jmp push mov call mov mov movsbl sub cmp ja inc mov push mov lea push call jmp and mov mov cmp jne inc mov push lea call jmp cmp jne inc cmp je mov lea push call jmp cmp jne lea push call testl pop je push lea push lea call lea push call push call pop pop cmp je push jmp lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov jmp lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov jmp and lea push lea push mov call pop pop mov mov mov mov mov sub cmp jle mov cmpl je lea push call lea push mov call cmp je pop mov mov pop mov xor pop call leave ret mov push mov sub mov movsbl push xor mov and and push xor inc mov mov mov cmp jg je cmp je cmp jle cmp jle cmp jg movsbl pushl lea call cmp je lea push lea push push lea call mov call mov mov mov mov mov mov mov mov mov pop pop leave ret and mov cmp je lea push call pop push lea push push lea call mov call lea push lea call mov cmp je mov call cmp jne push lea call push lea call mov cmp je movb mov cmp jne mov mov mov mov jmp inc mov push mov lea push push call mov mov add mov mov mov cmp je cmpb jne lea push lea push push lea call mov call mov mov mov mov cmp je lea push lea call jmp dec mov mov push call mov jmp cmp je jle cmp jle cmp jne movsbl inc mov cmp jg cmp jge cmp jg je cmp je cmp jle cmp jle cmp jg movsbl pushl mov call jmp movsbl pushl jmp movsbl pushl lea call mov or mov mov mov jmp cmp je cmp jle cmp jle cmp jne push push lea push call mov add or jmp movsbl inc mov cmp je cmp jne push push jmp cmp jg cmp jge sub je dec je dec jne movsbl pushl lea call mov mov cmp jne push pushl lea call jmp movsbl sub js cmp jae pushl lea call mov movsbl incl cmp je cmp je add cmp jbe decl jmp mov mov mov mov lea push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push push call pop pop mov call push lea call push pushl lea call jmp lea push push call mov pop pop mov mov push lea mov call mov mov mov mov lea push lea call lea jmp movsbl pushl lea call push lea push push call mov mov add mov mov cmp je test je mov andl movb mov jmp lea lea push pushl call jmp cmp jl cmp jle cmp jle cmp jle cmp jne movsbl inc mov cmp jl cmp jle cmp jle cmp jg movsbl pushl jmp movsbl pushl lea call mov cmpb jne lea push call pop push lea call mov cmpb jne incl jmp lea push call pop push lea call push lea call mov mov mov mov jmp movsbl pushl jmp movsbl pushl jmp xor inc movsbl pushl lea call cmp je cmp je orl jmp mov push mov mov sub cmpb jne cmpb jne orl orl orl push mov push mov lea mov lea push mov mov add lea mov mov cmpb movb jne inc mov lea push lea push push call jmp push lea push push call mov mov add mov mov test jne movb cmpb jne lea push call pop push lea push push lea call mov call lea push lea call mov test je mov call cmp jne push lea call push lea call cmpb je mov cmpb je incl mov mov mov pop mov mov mov pop mov mov pop leave ret mov andl andl movb leave ret mov push mov sub mov xor mov push mov mov movsbl push mov sub mov cmp ja mov push inc push mov call mov jmp andl push mov and cmp jne lea push push call pop pop mov mov mov mov mov mov inc mov cmp je dec xor mov cmp setne inc push lea call jmp mov mov mov movl mov test je cmp jne inc inc decl jne movzbl movzbl sub jne add mov jmp mov push mov mov pop mov test je cmp jne inc inc dec jne movzbl movzbl sub jne addl mov lea push call testl pop je push lea push lea call lea push call push call pop pop lea test je push call jmp lea push call lea push lea push push lea call mov call mov mov mov push lea mov call lea push lea call jmp cmpb je mov cmpb jne mov xor and incl mov mov jmp push push lea call mov mov mov mov cmpb pop je mov cmpl je lea push call mov mov mov mov mov mov pop xor pop call leave ret mov push mov sub push push mov push xor push lea push mov mov and push mov call mov mov mov add mov cmp jne mov mov cmp je cmp je push lea push push lea push lea push call pop mov call mov call mov mov mov mov mov mov cmp jne incl jmp cmp je and movb mov jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call mov mov mov mov pop mov pop pop leave ret mov push mov pushl call mov pop pop ret mov push mov mov sub push push mov shr xor not inc and je test je xor mov movsbl andl mov and incl sub je sub je dec je dec je dec je dec je dec jne push jmp push jmp lea push mov call pop push lea push push lea call mov call mov mov mov mov jmp push jmp push jmp push lea call andl and test je mov mov mov mov lea push call pop lea push lea call mov mov mov mov mov jmp mov decl push call mov pop pop leave ret mov push mov mov cmpb jne inc cmpb jne push pushl call pop pop jmp push push pushl mov call jmp push push pushl call add mov pop ret mov push mov sub push call add push lea call mov cmpb je movsbl inc mov mov sub je dec dec je sub jne mov andl andl movb leave ret lea push call pop push lea call jmp push lea call jmp push lea call push lea call mov mov mov mov mov leave ret mov push mov sub push push push xor mov and mov call mov mov cmp je testl movl jne mov cmp jne mov andl movb mov jmp cmp jne push push pushl call add mov jmp cmp jne mov mov mov mov jmp mov andl mov mov je xor mov and cmpl sete mov test mov je and jmp and test je mov and cmp je cmpl mov je and jmp and test je mov and cmp je cmp je test je mov mov shr not test je shr not test je lea push call pop push lea push push lea call mov call mov mov mov mov jmp lea push call pop push lea call mov mov mov test je and jmp and test je cmp jne lea push push call pop pop mov lea push lea push push lea push call mov call push lea call lea push call mov pop test jne lea push lea push push lea call mov call mov mov mov push lea mov call lea push lea call push lea call lea push call mov pop mov shr not test je mov shr not test je test jne lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov jmp and and and and and xor mov mov mov mov mov mov cmp je and jmp and cmp je cmp je mov and cmp jne lea push push call mov mov mov mov lea push push call mov mov mov mov lea push push call add jmp cmp je mov and cmp jne lea push push call pop pop mov mov mov mov lea push push call mov mov mov pop pop mov xor cmp je cmpl je mov and cmp je mov and cmp lea push je call pop mov mov mov mov jmp call pop push lea call mov mov shr not test je shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call mov cmpl je cmpl je testl jne push lea push push lea call mov call lea push lea call jmp mov mov mov mov and xor mov cmp je lea push push call pop pop push lea push push lea call mov call lea push lea call testl je mov jmp xor push push mov call cmp je mov movb andl mov lea push push call pop pop mov mov mov mov mov mov test je and jmp and test je test je mov and cmp jne lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov push lea mov call mov mov mov mov lea push lea call jmp test je mov and cmp jne lea push lea push push lea call mov call mov mov mov push lea mov call lea push lea call jmp push lea call mov mov mov push lea mov call lea push lea call lea push call pop push lea push push lea call mov call mov mov mov push lea mov call lea push lea call test je mov and cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call mov shr not test je test je mov mov mov mov mov mov mov mov jmp pushl lea call mov mov test jne mov and cmp jne lea push pushl call pop pop jmp test jne mov and cmp je test jne mov and cmp jne push lea push call mov pop pop mov mov push lea mov call mov mov mov mov lea push lea call push pushl lea call jmp test jne mov and cmp jne lea push pushl call jmp test je mov and sub jmp mov and neg sbb inc test mov mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push lea call jmp cmpl jne mov and cmp je cmpl je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov mov and xor cmp sete neg sbb test jne mov xor cmp sete neg sbb test je lea push lea push push lea call mov call mov mov jmp lea push lea push call pop pop mov mov mov jmp mov mov xor mov mov cmp je and sub jmp and neg sbb inc cmp je mov shr not test je mov cmp je and sub jmp and neg sbb inc cmp je cmp je mov and sub neg sbb inc jmp xor inc cmp je lea push lea push push lea call mov call mov mov mov mov mov test je mov and cmp je test je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp jne lea push lea push push lea call mov call mov mov mov mov mov shr not test je cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl je push test pop sete jmp mov and neg sbb inc test je lea push lea push push lea call mov call mov mov mov mov cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je testl jne lea push lea push push lea call mov call mov mov mov mov test je lea push lea push push lea call mov call mov mov mov mov mov mov mov pop pop pop leave ret mov push mov sub push push mov push test je andl lea push push call or pop pop mov mov mov mov mov jmp mov mov cmp jne inc mov cmp jne cmp jne lea push call mov pop jmp inc mov cmpb jne jmp lea push call mov mov xor inc pop test je test je mov jmp andl mov shr and cmp jle mov mov mov jmp mov mov test je cmp je lea push call mov pop test je cmpb je lea push lea movb mov mov call mov cmpb mov mov mov mov je lea push call mov mov mov mov mov mov mov lea mov movl call mov mov mov mov lea push lea call mov mov jmp mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov cmpl je test je or mov mov test je or mov test je mov test jne mov mov test je cmp je mov andl andl movb jmp incl test je cmpl jne test jne andl andl lea push lea push call pop pop jmp lea push pushl call pop pop jmp test jne mov push call mov pop pop pop leave ret mov push mov sub push push mov xor push mov mov and mov mov jmp mov mov cmp je cmp je cmp je cmp je cmp je push lea push push lea call mov call mov mov mov mov cmp je push lea push push lea call mov call mov mov mov mov mov mov cmpb jne inc mov movsbl sub je dec je sub je dec dec je sub push je lea push lea push call pop jmp lea push push lea push push lea inc push push mov call add mov call mov call movb jmp lea cmpb jne cmpb jne mov push lea push push lea push push call add mov call mov mov mov mov mov cmpb jne incl jmp lea push call pop push lea push push lea call mov call mov mov mov push lea mov call push lea push lea jmp push push lea call push lea push push lea call mov call mov mov mov mov mov cmpl je lea push call jmp lea push dec push mov lea jmp lea push push lea push push push call add mov call mov mov mov mov cmp je mov mov cmp je cmp je and movb mov jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call mov mov mov mov pop mov pop pop leave ret mov push mov mov mov sub test jne pushl push pushl call mov add leave ret cmp jl cmp jle cmp je mov andl andl movb leave ret push movsbl sub inc mov cmp jne mov test je movsbl sub inc mov cmp jl cmp jmp pushl push pushl call mov add jmp test js cmp jle or cmp jne mov andl andl movb jmp andl andl push mov mov push mov mov mov and mov je lea push lea push push lea call mov call mov mov mov mov mov cmpb je lea push call pop push lea push push lea call mov call mov mov mov mov lea push lea call mov mov mov jmp lea push lea push push lea call mov call mov mov mov mov mov mov test je cmp jne mov incl and cmp lea push je call pop mov mov mov mov test je mov shr not test lea push je call pop push lea push push lea call mov call mov mov mov mov lea push lea call mov mov mov mov jmp call pop push lea call jmp mov andl andl movb jmp lea push pushl lea push call mov call jmp call pop push lea call mov shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call xor cmp je lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov push push mov call cmp je mov andl mov mov jmp xor lea push push call lea push call add push lea push push lea call mov call mov mov mov push lea mov call lea push lea call mov and cmp je cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call cmp je mov mov mov mov mov mov mov mov mov jmp mov push call mov pop pop pop leave ret mov push mov sub mov mov push push mov and push xor movb test je cmp jne pushl lea push lea push lea push call mov add cmp je mov mov mov mov jmp mov mov xor cmp setl and movsbl mov dec and add sub xor and mov mov sub je dec je sub jne mov shr not test je test je mov push lea mov mov call push call add push lea lea jmp push jmp mov shr not test je test je mov push lea mov mov call push call add push lea push lea call mov mov mov mov jmp push call add push lea call mov jmp mov mov shr not test je shr not test je test je mov push lea mov mov call push call add push lea lea push call mov mov mov mov jmp push call add push lea call incl mov cmpb jne pushl lea push lea push lea push call mov add test jne mov mov xor cmp setl movsbl dec and add sub mov jmp mov mov mov jmp cmpb je inc mov cmp ja mov push lea call xor mov mov mov lea push lea call cmpl mov mov mov mov je mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov test je mov push lea mov mov call mov mov mov mov lea push lea call mov mov mov mov test je cmpl je mov andl andl movb jmp cmpb je lea push lea push push lea call mov call mov mov mov mov mov cmpb lea push je lea push lea push call pop mov call mov mov mov jmp lea push push lea call mov call mov mov mov mov jmp mov cmpb je lea push call pop push lea call mov mov test jne push lea call jmp incl cmp jne mov shr not test mov je and cmp jne cmpl jne lea push lea push lea push call pop mov call mov mov mov mov jmp and cmp jne lea push call pop push lea call test je lea push lea push push lea call mov call mov mov mov mov test je lea push lea push push lea call mov call mov mov mov mov xor mov cmp jne mov cmp je mov test jne mov cmp je push lea push push lea call mov call mov mov mov push lea mov call push lea push lea call jmp test je mov mov mov mov jmp push jmp mov cmp je push lea push push lea call mov call lea push lea call mov or cmpb je or mov mov mov jmp cmp jne mov cmp je testl jne mov cmp je push lea push push lea call mov call mov mov mov push lea mov call push pushl lea call jmp push push pushl call add jmp mov cmp je push jmp mov push call mov pop pop pop leave ret mov push mov sub mov mov and xor and and mov test je cmpb jne mov cmp jne addl lea push call pop push lea push push lea call mov call mov mov jmp cmp jne lea push push call pop pop mov mov cmp jne mov mov lea push call pop mov mov cmp jne xor leave ret cmp je testl jne mov cmpb jne mov mov jmp pushl lea call mov test jne mov test je mov call inc mov add and push call pop mov test je pushl lea push call mov mov jmp cmp jne inc mov inc jmp inc cmpb je jmp mov inc inc mov test jne mov mov mov leave ret mov push mov push push mov mov push xor push cmp je cmp jl cmp jle cmp jne pushl lea call mov mov cmp je cmp je testl jne push lea call cmp je push lea call lea push pushl call pop pop mov jmp mov push pushl lea push pushl push call xor cmpb sete push lea push pushl call add jmp push lea call pushl lea call mov cmp je push lea call push mov cmp je cmp je push lea call push lea call mov mov mov mov mov pop pop pop leave ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov pushl pushl pushl pushl call mov add pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov movzwl push push pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov pushl pushl pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret mov push mov mov mov sub push push push test je incl andl movzbl mov and mov or movb cmp jg je sub cmp ja movzbl jmp push jmp push jmp push jmp push jmp push jmp cmp je jle cmp jle cmp je cmp jne mov mov incl mov movzbl cmp jg cmp jge cmp jg cmp jge test je cmp je add cmp ja push jmp pushl lea push call push push pushl call add jmp decl push lea call jmp push jmp cmp jl cmp jle cmp jg push jmp push jmp push jmp cmp je cmp je cmp je cmp je add cmp ja lea decl push call mov pop mov mov mov test jne mov mov mov jmp push jmp push jmp push jmp push pop mov mov andl and mov mov mov cmp jne push lea push lea push lea mov or push call add test jne push lea call mov mov mov mov jmp push jmp push lea call jmp mov and jmp lea jmp push lea call push lea call cmp jne mov sub je push pop sub je sub je sub je sub je sub jne movzbl sub je sub je sub je sub je sub jne lea push lea push push jmp lea push lea push push lea call mov call mov mov mov mov mov cmpl je push lea push push lea call mov call lea push lea call mov mov mov mov mov jmp cmpl jne test je push lea call test je push lea call jmp test je push lea call push lea push lea push pushl call add jmp pushl push pushl call add mov pop pop pop leave ret mov mov xor int inc add xor loope inc add add add add add add mov sub mov movsbl push xor mov and sub push mov je sub je sub mov je dec je push pushl call pop pop jmp push lea call cmp je push lea call push mov mov incl mov lea push lea push pushl or mov call add jmp mov mov cmp je cmp je mov andl movb mov jmp addl mov movsbl mov cmp jg je sub je sub je dec je dec jne incl and push lea push push lea push push mov call push pushl call add jmp incl push push pushl call jmp incl push pushl call jmp push jmp sub je dec je dec jne mov incl push call jmp incl jmp push lea call cmp je push lea call push jmp pushl push pushl call add mov pop pop leave ret mov push mov sub pushl lea call mov mov xor cmp je cmp je cmp je lea push pushl call pop pop jmp incl cmp jne mov push call jmp lea push pushl lea push call jmp incl andl push lea push push lea push lea push mov call mov mov mov mov lea push pushl call add jmp lea push pushl lea push call mov call mov leave ret mov push mov sub push push push mov call test je andl movb andl mov jmp xor push pushl call lea push call mov add mov mov push lea mov call pushl lea push lea call mov mov mov mov mov pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret push push call call mov test je andl call jmp xor inc ret mov movl call call ret call mov test je call jmp push push call pushl call test je andl call jmp xor inc ret mov movl call int3 push call mov ret mov push mov mov mov pop ret mov push mov push push pushl call mov mov test jne call push pop mov call mov jmp andl push test jne push call mov test jne call push pop mov call mov jmp push push call mov test jne call mov mov call push call pop mov call call push call pop jmp push push call mov call push push mov call cmp pop je pushl call push pushl call test jne call movl call mov jmp xor pop pop leave ret mov push push xor pushl call mov add cmp jb pop pop ret int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test je mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret mov push mov sub mov xor mov mov push mov mov push push mov call andl cmpl mov jne push call mov test je mov push push call test je mov push call push push mov call push call push push mov call push call push push mov call push call mov test je push push call push call mov mov mov mov cmp je cmp je push call pushl mov call mov test je test je call test je lea push push lea push push push call test je testb jne orl jmp mov cmp je push call test je call mov test je mov cmp je push call test je pushl call mov pushl call test je pushl pushl pushl pushl call jmp xor mov pop pop xor pop call leave ret mov push mov push mov push test je mov test jne call push pop mov call mov pop pop pop ret mov test jne xor mov jmp mov cmpw je add dec jne test je sub movzwl mov add test je dec jne xor test jne mov call push pop mov mov jmp mov push mov mov push mov push push test jne test jne cmp jne xor pop pop pop pop ret test je mov test jne call push pop mov call mov jmp test jne xor mov jmp mov test jne xor mov jmp mov cmp jne mov sub movzwl mov add test je dec jne jmp mov sub movzwl mov add test je dec je dec jne test jne xor mov test jne xor cmp jne mov push mov pop jmp mov call push pop mov mov jmp mov push mov mov mov add test jne sub sar dec pop ret mov push mov push mov push test je mov test jne call push pop mov call mov pop pop pop ret mov test jne mov jmp mov sub movzwl mov add test je dec jne xor test jne mov call push pop mov mov jmp mov push mov mov test js cmp jle cmp jne mov pop ret mov mov pop ret call movl call or pop ret mov push mov mov mov pop ret mov push mov sub pushl lea call movzbl mov mov test jne cmpl je mov mov movzwl and jmp xor test je xor inc cmpb je mov andl leave ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov sub pushl lea call mov test je cmpl jne push push pushl pushl call add cmpb je mov andl leave ret cmpb je mov andl xor leave ret mov push mov push pushl call pop pop pop ret sub je sub je sub je dec je xor ret mov ret mov ret mov ret mov ret mov push push mov push xor lea push push call xor movzwl mov mov mov mov shl or lea stos stos stos mov add lea sub mov mov mov inc dec jne lea mov mov mov inc dec jne pop pop ret mov push mov sub mov xor mov push push lea push pushl call mov test je xor mov inc cmp jb mov movb test je lea movzbl movzbl cmp ja sub inc push lea push push call add mov add test jne push pushl lea pushl push push lea push push push call xor push pushl lea push push push lea push push pushl push call add push pushl lea push push push lea push push pushl push call add xor movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp lea movl xor sub mov lea add lea cmp ja orb lea jmp cmp ja orb lea mov jmp movb inc cmp jb mov pop xor pop call leave ret push push call call mov mov test je cmpl je mov test jne push call pop mov call ret push call pop andl mov mov cmp je test je push call test jne cmp je push call pop mov mov mov mov push call movl call jmp mov push call pop ret mov push mov sub push xor push lea call mov cmp jne movl call cmp je mov andl jmp cmp jne movl call jmp cmp jne mov mov movl jmp cmp je mov andl mov pop leave ret mov push mov sub mov xor mov push mov push mov push call mov xor mov cmp jne mov call xor jmp mov xor cmp je incl add cmp jb cmp je cmp je movzwl push call test je lea push push call test je push lea push push call xor inc add mov mov cmp jbe cmpb je lea mov test je movzbl movzbl jmp push lea push push call mov add imul mov lea mov jmp mov test je movzbl movzbl jmp mov mov or movzbl inc cmp jbe mov add cmpb jne mov incl add cmpl mov jb mov mov movl call push mov lea lea pop mov mov add add dec jne mov call jmp orb inc cmp jbe add cmpb jne lea mov orb inc dec jne mov call mov mov jmp mov xor movzwl mov shl or lea stos stos stos jmp cmp jne or mov pop pop xor pop call leave ret mov push mov sub push lea call mov cmpl je cmpb mov je mov andl leave ret cmpb je mov andl xor leave ret push push call orl call mov mov call mov mov call mov cmp je push call pop mov test je mov mov mov rep andl push pushl call pop pop mov test jne mov pushl call test jne mov cmp je push call pop mov push mov call testb jne testb jne push call pop andl mov mov mov mov mov mov xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp pushl call test jne mov cmp je push call pop mov push call movl call jmp push call pop ret jmp cmp jne cmp je push call pop call movl jmp andl mov call ret cmpl jne push call pop movl xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov test jne cmp jb cmpl je jmp push mov cmp jb neg and je sub mov add sub jne mov shl add mov shl add mov and shr je rep test je mov add sub jne mov pop ret mov ret mov push mov push push mov push mov mov mov push push mov call or pop cmp jne call movl mov mov jmp pushl lea push pushl push call mov cmp jne call test je push call pop jmp mov sar mov and shl lea andb mov mov pop pop leave ret push push call or mov mov mov cmp jne call andl call movl mov mov jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je pushl pushl pushl pushl call add mov mov jmp call movl call andl mov mov movl call mov mov call ret pushl call pop ret mov push mov mov call mov xor mov mov push mov push xor mov mov mov cmp jne xor jmp cmp jne call mov call movl call or jmp mov sar mov push lea mov and shl mov add sar mov mov cmp je cmp jne mov not test jne call andl call movl call jmp testb je push push push push call add push call pop test je mov testb je call mov xor cmp lea sete push mov pushl mov call xor cmp je cmp je cmp je call mov mov xor mov cmp jbe mov mov test jne mov mov xor cmp sete mov mov add cmpl je mov mov mov andl push lea push jmp movsbl push call pop test je mov sub add xor inc cmp jbe push lea push push call add cmp je inc incl jmp push push lea push call add cmp je xor push push push lea push push lea push push pushl inc incl call mov test je push lea push push lea push mov mov pushl call test je mov mov add mov cmp jl cmpl je push lea push push lea push mov mov movb pushl call test je cmpl jl incl incl jmp cmp je cmp jne movzwl xor cmp sete add addl mov mov cmp je cmp jne pushl call pop cmp jne addl cmpl je push pop push mov call pop cmp jne incl incl mov cmp jb jmp mov mov incl mov mov mov jmp xor mov testb je cmpb mov jne mov cmp jbe mov xor sub lea cmp jae mov inc inc mov cmp jne incl movb inc inc mov inc inc cmp jb mov lea sub push lea push push lea push mov mov pushl call test je mov add cmp jl mov sub cmp jb jmp cmpb jne mov cmp jbe andl mov sub push lea pop cmp jae movzwl add add mov cmp jne add push pop mov mov add add add mov add cmpl jb mov lea sub push lea push push lea push mov mov pushl call test je mov add cmp jl mov sub cmp jb jmp mov mov cmp jbe mov andl sub push lea pop cmp jae mov movzwl add add cmp jne push pop mov add add add mov add cmpl jb xor push push push lea push lea sub cltd sub sar push mov push push push call mov cmp je push lea push mov sub push lea push mov mov pushl call test je add cmp jg jmp call mov cmp jg mov sub mov cmp jb jmp push lea push pushl pushl pushl call test je mov andl mov jmp call mov cmpl jne cmpl je push pop cmp jne call movl call mov jmp pushl call pop jmp mov mov testb je mov cmpb jne xor jmp call movl call andl or jmp mov sub pop mov pop xor pop call leave ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je pushl pushl push call add mov jmp call movl call andl orl movl call mov call ret mov push call pop ret mov push mov incl push call pop mov mov test je orl movl jmp orl lea mov movl mov andl mov pop ret mov push mov mov cmp jne call movl xor pop ret test js cmp jb call movl call jmp mov and sar mov shl movsbl and pop ret mov ret mov push push pop test jne mov jmp cmp jge mov mov push push call pop pop mov test jne push push mov call pop pop mov test jne push pop pop ret xor mov jmp mov mov add add cmp jl push pop xor mov push mov sar mov mov and shl mov cmp je cmp je test jne mov add inc cmp jl pop xor pop ret call cmpb je call pushl call pop ret mov push mov push mov mov cmp jb cmp ja mov sub sar add push call orl pop jmp add push call pop pop ret mov push mov mov cmp jge add push call mov orl pop pop ret mov add push call pop ret mov push mov mov mov cmp jb cmp ja andl sub sar add push call pop pop ret add push call pop ret mov push mov mov mov cmp jge andl add push call pop pop ret add push call pop ret mov push mov mov test jne call movl call or pop ret mov pop ret push push call xor xor cmp setne cmp jne call movl call or jmp call push pop add push push call pop pop mov call add push call pop mov lea push push pushl call add push call mov call add push push call add movl call mov call ret call add push push call pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov mov mov or xor cmp sete neg sbb and mov pop ret mov or xor cmp sete mov ret mov push mov sub push push mov xor push mov cmp jne cmp jbe mov cmp je mov xor jmp mov cmp je orl cmp jbe call push pop mov call mov jmp pushl lea call mov cmp jne mov mov cmp jbe cmp je cmp jbe push push push call add call movl call mov cmp je mov andl pop pop pop leave ret cmp je cmp ja call push pop mov call cmp je mov andl jmp mov mov cmp je movl cmp je mov andl jmp lea push push push push push lea push push mov pushl call cmp je cmp jne mov cmp je mov jmp call cmp jne cmp je cmp jbe push push push call add jmp mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub pushl orl lea call lea push pushl mov pushl lea pushl push call add test jne mov jmp or cmpb je mov andl leave ret mov push mov push orl push pushl call push pushl lea push call add test jne mov leave ret or leave ret mov push mov sub pushl lea call movzbl mov mov movzwl and cmpb je mov andl leave ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov mov cmp sbb neg pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret mov push mov push mov push mov mov cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je xor jmp xor inc test jne test jne mov cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp jne mov mov xor test jne xor test jne mov xor cmp sete jmp cmp jne mov mov mov and neg sbb and neg neg sbb neg cmp jne xor inc jmp xor jmp xor cmp sete mov pop pop pop ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov push testb push mov mov mov je cmpl jne mov add jmp andl cmpl jle mov mov decl mov call incl cmpl jne cmpl jne mov mov call cmpl jg cmpl jne mov mov pop leave ret mov push mov mov addl mov mov mov pop ret mov push mov sub mov xor mov mov push mov push mov push pushl xor lea mov mov mov mov mov mov mov call orl mov call mov cmp jne call movl call cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne cmp je mov mov mov cmpl jne cmp je xor mov orl orl orl mov mov mov mov mov mov mov test je mov jmp mov inc cmpl mov jl lea cmp ja movsbl movzbl and xor jmp xor xor mov imul movzbl xor shr inc mov cmp jne cmpb je cmpl jne push lea push push call add test jle mov cmpb jne cmpl jne push lea push push call add mov jmp andl xor cmp jne push lea push push call mov add dec cmpl lea mov mov jne test js cmpb jne cmp jge cmp jle mov mov xor mov jmp cmp je cmp ja jmp cmp jne cmp je cmp jne cmpl jne jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp or jmp orl jmp orl jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec cmpl lea mov jne test js cmpb jne cmpl jge cmp jle mov add lea cmpl je pushl push push jmp add mov mov xor mov cmp jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec cmpl lea mov je add mov mov xor mov cmp jge orl jmp mov movb mov mov jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne add orl mov jmp cmp jne cmpb jne add andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov andl lea push movzbl push call pop pop test je mov lea mov call mov inc mov mov test je mov mov lea mov call jmp orl jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add mov mov jmp testl jne orl jmp testl jne orl mov cmp jne mov cmp jne addl mov mov jmp sub je dec dec je sub je dec dec jne xor inc xor mov test je cmp jne addl mov movzwl jmp mov cmp ja add cmp jne lea cmp jne movl mov mov jmp push pushl push push call add test je jmp mov movzwl push push lea push lea push call add test je mov jmp cmp jne addl mov movzwl jmp mov cmp ja add cmp jne lea cmp jne mov jmp push pushl push jmp mov movzwl mov mov lea mov jmp cmp jne addl mov mov jmp mov cmp ja add cmp je mov mov cmp je mov cmp je testl movswl mov je cltd sub sar mov jmp movl mov mov mov jmp mov jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne mov xor inc movl test jns or mov xor jmp xor cmp jne addl mov mov jmp mov cmp ja add cmp je mov mov call test je testb je mov mov jmp mov mov movl jmp xor inc xor orl movl jmp xor inc xor orl cmp jne cmp jne mov cmp ja add lea cmp jne movl mov jmp pushl pushl push push call add test je jmp lea mov mov mov cmp jge movl jmp jne cmpb jne mov jmp cmp jle mov mov cmp jle mov add push call xor pop mov test je mov mov mov jmp mov jmp xor cmp jne mov mov add mov mov mov jmp cmpl ja mov add mov mov mov mov mov mov lea push pushl movsbl pushl push pushl lea push push pushl call call mov add and je cmpl jne lea push push pushl call call pop pop cmpb jne test jne lea push push pushl call call pop pop cmpb jne orl inc mov push jmp movl movl jmp sub je dec dec je sub jne xor inc movl xor testb movl je mov add movb mov movl mov test je cmp jne mov mov mov add mov jmp mov cmp ja cmp jne add lea cmp jne movl mov mov mov jmp push pushl push jmp test je cmp je mov cmp ja cmp jne add lea cmp jne movl jmp push pushl push jmp mov add mov mov mov jmp test je test je cmp jne addl mov movswl jmp mov cmp ja cmp je add mov movswl jmp mov jmp cmp jne addl mov movzwl jmp mov cmp ja cmp jne add lea cmp je push jmp mov add mov movzwl jmp test je cmp jne addl mov mov jmp mov cmp ja cmp je add mov mov cltd jmp cmp jne addl mov mov jmp mov cmp ja cmp je add mov mov xor test je test jg jl test jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add mov mov mov cmp jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp mov cmp ja add cmp jne lea cmp je pushl pushl push jmp mov mov testl mov je cmp jne mov mov mov mov jmp dec cmp je add cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne cmpl je cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub mov test jne mov jmp mov lea mov dec call cmpl je test jg pushl mov mov lea push lea call testb pop pop je testb jne mov jmp lea mov mov dec call cmpl je test jg cmpl mov je test jle mov mov movzwl decl push push lea push lea push add call add test jne cmp je pushl mov mov lea push lea call cmpl pop pop jne jmp orl jmp mov push pushl lea call pop pop cmpl jl testb je mov jmp mov lea mov dec call cmpl je test jg cmpl je pushl call andl pop mov mov mov test jne xor cmp je cmpl jne cmpl jne cmp jne cmp jl mov lea mov dec je dec je dec je dec je dec je dec je dec dec jne mov add jmp mov add inc add mov cmp jle incl cmpl jge xor jmp cmpb je mov andl mov mov pop pop xor pop call leave ret nop mov add popa inc add inc add inc add arpl out inc add inc or je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov push testb push mov mov mov je cmpl jne mov add jmp andl cmpl jle mov mov decl mov call incl cmpl jne cmpl jne mov mov call cmpl jg cmpl jne mov mov pop leave ret mov push mov sub mov xor mov push mov push mov xor push mov pushl lea mov mov mov mov mov mov mov mov mov call call mov test jne call movl call cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov mov mov mov mov mov test je inc mov cmp jl lea cmp ja movsbl movzbl and jmp xor mov imul movzbl push shr pop mov cmp je push pop cmp ja jmp xor orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne or jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov mov test jns orl negl jmp mov imul movsbl lea mov jmp andl jmp cmp jne add mov mov mov test jns orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne add orl mov jmp cmp jne cmpb jne add andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je andl andl lea push movzbl push call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je test jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne mov add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov test je mov test je testl movswl mov je cltd sub sar movl jmp andl jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb mov mov je orl jmp addl mov mov call test je testb je mov mov jmp mov mov movl jmp mov orl movl mov test je add mov mov jmp mov orl cmpl lea mov mov mov jge movl jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov test je mov mov mov jmp movl mov mov add mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call call mov add and je cmpl jne lea push push pushl call call pop pop cmpb jne test jne lea push push pushl call call pop pop cmpb jne orl inc mov push jmp mov mov jmp sub je dec dec je sub jne mov movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je test jg jl test jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add mov mov mov cmp jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmpw je add test jne sub sar jmp test jne mov mov mov jmp dec cmpb je inc test jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub mov test jne mov jmp mov lea mov dec call cmpl je test jg pushl mov mov lea push lea call testb pop pop je testb jne mov jmp lea mov mov dec call cmpl je test jg cmpl mov je test jle mov mov movzwl decl push push lea push lea push add call add test jne cmp je pushl mov mov lea push lea call cmpl pop pop jne jmp orl jmp mov push pushl lea call pop pop cmpl jl testb je mov jmp mov lea mov dec call cmpl je test jg cmpl je pushl call andl pop mov mov mov test je mov xor mov jmp cmpl je cmpl jne cmpb je mov andl mov mov pop pop xor pop call leave ret lea cmp add je add inc add je add jne add jne add add rol call in pop jmp mov push mov sub push pushl lea call mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call pop cmp jne add mov mov mov mov mov mov inc mov mov mov mov inc test jne pop cmp je mov andl leave ret mov push mov sub push pushl lea call mov mov mov test je mov mov mov cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je mov mov push mov cmp pop jne dec mov inc inc mov test jne cmpb pop je mov andl leave ret mov push mov fldz mov fcompl fnstsw test jp xor inc pop ret xor pop ret mov push mov push push cmpl pushl pushl je lea push call mov mov mov mov mov jmp lea push call mov mov mov add leave ret mov push mov push pushl pushl pushl call add pop ret mov push mov test je push call inc push push add push call add pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov sub push push pushl lea mov call xor cmp jne call push pop mov call cmpb je mov andl mov pop pop leave ret cmp jbe cmp jle mov jmp xor add cmp ja call push jmp push cmp je mov xor cmp setg xor cmpl sete mov add mov call mov cmpl mov jne movb lea cmpl jle mov mov mov mov mov mov inc mov xor cmp sete add add cmpl jne or jmp sub add push push push call add test jne lea cmp je movb mov cmpb je mov dec jns neg movb cmp jl cltd push pop idiv add mov cmp jl cltd push pop idiv add mov add testb pop je cmpb jne push lea push push call add cmpb je mov andl xor jmp xor push push push push push call int3 mov push mov sub mov xor mov mov push push mov push mov push pop push lea push lea push pushl pushl call add test jne call mov call mov jmp mov test je cmp jne or jmp xor cmpl sete sub xor test setg sub lea push lea push push xor cmpl sete xor test setg add add push call add test je movb jmp pushl lea push push pushl mov push pushl call add mov pop pop xor pop call leave ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov sub push push pushl lea movl xor movl call cmp jge mov mov cmp jne call push pop mov call cmpb je mov andl mov jmp cmp jbe mov add movb cmp ja call push jmp mov mov mov mov mov shr mov push and xor cmp jne test jne mov cmp jne or jmp add push pushl lea push push push call add test je cmpb movb je mov andl jmp cmpb jne movb inc cmpl movb sete dec and add mov push add push call pop pop test je cmpl sete dec and add mov movb jmp and xor or je movb inc mov test sete dec and add neg sbb movb mov mov and and xor add xor or jne movb mov mov and add or jne mov jmp movl jmp movb add mov inc mov cmp jne mov jmp mov mov mov mov mov mov mov and mov ja cmp jbe mov movl cmpl jle mov and mov movswl and and call add movzwl cmp jbe add mov subl mov mov shrd shr inc decl cmpw mov mov jge cmpw jl mov and mov movswl and and call cmp jbe lea mov cmp je cmp jne movb dec jmp cmp je mov cmp jne add mov jmp inc mov jmp incb cmpl jle pushl push push call add add mov cmpb jne mov cmpl mov sete dec and add mov mov mov call xor and and sub push pop sbb js jg cmp jb movb add jmp movb add neg adc neg mov movb cmp jl mov jg cmp jb push push push push call add mov inc mov mov mov cmp jne test jl jg cmp jb push push push push call add mov mov inc mov mov cmp jne test jl jg cmp jb push push push push call add mov mov inc mov mov add mov movb cmpb je mov andl xor pop pop pop leave ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov sub push push push pushl mov mov mov lea dec call test jne call push pop mov call cmpb je mov andl mov jmp cmpl jbe cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push lea call inc push push push call movb add mov jmp add cmpl jle push lea call inc push push push call mov mov mov mov mov mov add test jns neg cmpb jne cmp jl mov mov mov call push push push call add cmpb je mov andl xor pop pop pop leave ret mov push mov sub mov xor mov mov push push mov push pop push lea push lea push pushl pushl call add test jne call mov call mov jmp push mov test jne call mov call mov jmp or cmp je xor cmpl mov sete sub mov lea push mov add push push xor cmpl sete add push call add test je movb jmp pushl lea push push push mov call add pop mov pop xor pop call leave ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub mov xor mov mov push mov push push pop push lea push lea push pushl pushl call add test jne call mov call mov jmp mov test je push mov xor dec cmpl sete lea cmp jne or jmp sub lea push pushl push push call add test je movb jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push pushl mov pushl call add jmp pushl lea push push pushl mov pushl pushl call add pop mov pop xor pop call leave ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov mov cmp je cmp je cmp jne pushl pushl pushl pushl pushl call add pop ret cmp je cmp je pushl pushl pushl pushl pushl pushl call jmp pushl pushl pushl pushl pushl pushl call jmp pushl pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl pushl pushl pushl pushl pushl call add pop ret mov push push push xor push call add test je push push push push push call pop ret mov push mov sub push movzwl push mov movzwl mov test jne or jmp andl push mov lea push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call push push push or lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or mov add mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push push pop lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call add push push pushl or lea push push call add or pop pop pop leave ret mov push mov push mov test je pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl push mov je push push call mov pop pop test jne xor inc jmp mov mov call test je push call push call pop pop jmp movl jmp mov mov cmp je add push call mov xor pop pop pop pop ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov mov mov inc cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push push mov push xor mov mov cmp jne cmp jne mov mov mov jmp push push call mov pop pop cmp jne xor inc jmp mov push pop mov push rep call xor pop mov cmp jne push call pop jmp mov mov cmp je push call pop mov cmp jne xor inc push call pushl call pop pop mov jmp mov movzwl push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call add or je push call pop or jmp mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov mov mov inc cmpb jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov xor inc mov mov test je mov mov mov test je push call mov test je push call test jne pushl call pushl call pop pop mov mov mov mov mov xor pop pop pop leave ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov mov mov inc cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push push mov push xor mov mov mov cmp jne cmp jne mov mov mov jmp push push call mov pop pop cmp jne xor inc jmp push call pop mov cmp jne push call pop jmp mov cmp je push call pop mov cmp jne push call pushl call pop jmp mov movzwl lea push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call add or je push call push call pushl call pushl call add jmp mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov mov mov inc cmpb jne jmp push pop mov mov rep mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor inc xor mov cmp je mov mov mov cmp je push call mov cmp je push call test jne pushl call pushl call pop pop mov mov mov mov mov xor pop pop pop leave ret mov ret call mov mov cmp je mov test jne call mov ret mov push mov mov test je push xor pop div cmp jae call movl xor pop ret imul push mov test jne inc xor cmp ja push push pushl call test jne cmpl je push call pop test jne mov test je movl xor jmp mov test je movl pop pop ret mov push mov cmpl jne pushl call pop pop ret push mov test jne pushl call pop xor jmp push jmp test jne inc push pushl push pushl call mov test jne cmp je push call pop test je cmp jbe push call pop call movl xor pop pop pop ret call mov call push call pop mov jmp call mov call push call pop mov mov jmp mov push mov mov push xor cmp jbe push xor pop div cmp jae call movl xor jmp imul push push mov cmp je pushl call pop mov push pushl call mov pop pop test je cmp jae sub push push add push call add mov pop pop pop pop ret mov push mov mov push xor push push cmp jne cmp jne cmp jne xor pop pop pop pop ret cmp je mov cmp ja call push pop mov call mov jmp cmp jne mov jmp mov cmp jne mov jmp cmpl mov jne mov sub mov mov inc cmp je dec jne jmp mov sub mov mov inc cmp je dec je decl jne cmp jne mov cmp jne cmpl jne mov push mov pop jmp mov call push pop mov mov jmp mov push mov mov test je mov mov add pop ret mov push mov mov test je sub cmpl jne push call pop pop ret mov push mov sub mov xor mov mov mov mov push push push mov xor push push pushl mov pushl call mov mov cmp jne xor jmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push pushl pushl call test je push push cmp jne push push jmp pushl pushl push push push pushl call mov push call pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl push call add cmpb je mov andl leave ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne jmp test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop movsb mov inc add mov mov mov mov mov mov shr mov add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea ja inc add add add add add add inc add inc add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov nop mov inc add inc add leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop xor inc add add mov sub shr sub cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea shlb inc add mov inc add mov inc add movsb inc add movsb inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov sub inc add inc add add inc add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret mov push mov pop jmp mov push mov pop jmp mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret push call pop ret mov push mov mov jmp dec cmpb je inc test jne dec mov sub dec pop ret mov push mov sub mov xor mov mov push xor push push cmp jle mov mov dec cmp je inc cmp jne or mov sub dec cmp jge inc mov mov cmp jne mov mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov mov cmp jne xor jmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov jmp mov cmp je push pushl pushl pushl push pushl call test je mov push push push pushl pushl pushl call mov cmp je mov test je mov cmp je cmp jg push pushl push pushl pushl pushl call jmp mov cmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push pushl pushl pushl pushl call test je push push cmp jne push push jmp pushl pushl pushl push push pushl call mov push call pop pushl call mov pop lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl leave ret mov push mov push push mov xor mov push xor push push mov cmp jne mov mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp jne xor jmp jle cmp ja lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov test je lea push push push call add push push pushl pushl push pushl call test je pushl push push pushl call mov push call mov pop lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl push call add cmpb je mov andl leave ret pxor push push mov and test jne mov and shr je lea movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea dec jne test je mov shr je jmp lea movdqa lea dec jne and je mov xor shr je mov lea dec jne and je mov inc dec jne pop pop ret mov neg add sub xor push mov and je mov inc dec jne shr je mov lea dec jne pop jmp mov push mov mov push push test js cmp jae mov sar mov and lea mov shl cmpl jne cmpl push mov jne sub je dec je dec jne push push jmp push push jmp push push call mov mov xor pop jmp call movl call andl or pop pop pop ret mov push mov mov push xor push push cmp jl cmp jae mov sar mov and lea mov shl testb je cmpl je cmpl jne sub je dec je dec jne push push jmp push push jmp push push call mov orl xor jmp call movl call mov or pop pop pop pop ret mov push mov mov cmp jne call andl call movl or pop ret test js cmp jb call andl call movl call jmp mov sar mov and shl testb je mov pop ret push push call mov mov sar mov and shl add movl xor cmp jne push call pop mov cmp jne push lea push call test jne mov incl movl call cmp je mov sar and shl mov lea push call mov call ret xor mov push call pop ret mov push mov mov mov and sar mov shl lea push call pop ret push push call orl xor mov push call pop test jne or jmp push call pop mov mov cmp jge mov test je mov mov add cmp jae testb jne cmpl jne push call pop xor inc mov cmpl jne push lea push call test jne mov jmp incl andl call cmpl jne lea push call testb je push call add jmp mov mov push call pop ret cmpl jne movb orl sub sar mov shl add mov cmpl jne inc jmp push push call pop pop mov test je lea mov addl mov add cmp jae movb orl movb andl add mov jmp shl mov mov sar mov and shl mov movb push call pop test jne orl movl call mov call ret push call pop ret push push call xor mov xor testb je add testl je or testb je or pushl call cmp jne call push call pop or call ret cmp jne or jmp cmp jne or call mov mov cmp jne call movl call mov jmp mov pushl push call pop pop or mov sar lea mov and shl mov mov mov lea andb mov lea andb movl movl call cmp je mov jmp mov xor cmp jne mov sar mov and shl mov lea andb push call pop ret mov push mov push cmpl jne call mov cmp jne mov leave ret push lea push push lea push push call test je mov leave ret push push call push call pop andl pushl call pop movzwl mov movl call mov call ret push call pop ret mov push mov sub push push mov xor cmp je cmp je cmp jne mov cmp je xor mov xor pop pop leave ret pushl lea call mov cmp jne mov cmp je movzbl mov cmp je mov andl xor inc jmp lea push movzbl push call pop pop test je mov mov cmp jle cmp jl xor cmp setne push pushl push push push pushl call test mov jne mov cmp jb cmp je mov cmp je mov andl jmp call movl cmp je mov andl or jmp xor cmp setne push pushl mov push push push pushl call test jne jmp mov push mov push pushl pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp push push call xor mov push call pop mov push pop mov cmp jge mov mov cmp je mov testb je push call pop cmp je incl cmp jl mov mov add push call mov pushl call pop mov mov inc jmp movl call mov call ret push call pop ret mov push mov push push mov mov mov and xor cmp jne test je mov push mov sub test jle push push push call pop push call add cmp jne mov test jns and mov jmp orl or pop mov andl mov pop mov pop pop ret mov push mov push mov test jne push call pop jmp push call pop test je or jmp testl je push call push call pop neg pop sbb jmp xor pop pop ret push push call xor mov mov push call pop mov xor mov cmp jge mov lea cmp je mov testb je push push call pop pop xor inc mov mov mov mov test je cmp jne push call pop cmp je incl jmp cmp jne test je push call pop cmp jne or mov call inc jmp xor mov mov pushl push call pop pop ret movl call cmpl mov je mov call ret push call pop ret push push call xor cmp jne push call pop jmp pushl call pop mov pushl call pop mov movl call mov call ret pushl call pop ret push call pop ret mov push mov push mov push call push call pop pop test je call add cmp jne xor jmp call add cmp jne xor inc incl testl jne push push lea cmpl mov jne push call pop mov test jne lea push mov mov pop mov mov jmp mov mov mov mov mov orl xor pop inc pop jmp xor pop pop ret mov push mov cmpl je push mov testl je push call andl andl andl andl pop pop pop ret push push call call lea mov xor cmp setne test jne call movl call or jmp push call pop andl push call mov pushl pushl pushl push call mov push push call add movl call mov call ret mov push call pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov sub mov xor mov push xor push mov push mov mov mov mov mov mov mov cmp je lea cmp jne push movzwl push push lea push push call add test jne push call push mov push mov call push push mov call push push mov call push push mov call add mov cmp je cmp je cmp je cmp je cmp je mov mov xor mov mov inc cmp jl lea push pushl call test je cmpl ja movzwl mov cmp jle cmp je lea mov cmp je movzbl movzbl jmp mov movb movzbl inc cmp jle add cmp jne mov push push pushl add push push pushl mov push push call add test je mov mov push pushl mov push add push push inc push push pushl push call add test je mov push pushl add push push mov push inc push push pushl push call add test je mov mov lea xor cmpl mov mov mov lea mov mov mov mov lea mov mov jle cmp je lea mov mov cmp je movzbl movzbl mov cmp jg lea jmp mov incl mov mov add mov mov movzbl cmp jle mov add mov cmp jne push lea push push call push lea push push call mov push lea push push call mov add cmp je push call test jne mov sub push call mov mov sub push call mov sub push call pushl call add mov movl mov mov mov mov mov mov mov mov mov mov mov pushl call pop mov jmp pushl call pushl call pushl call pushl call xor add inc jmp mov cmp je push call mov mov movl movl movl movl xor mov pop pop xor pop call leave ret call mov mov cmp je mov test jne call mov ret mov push mov mov test jne pop jmp mov mov pop ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call add ret mov push mov push mov cmp jne xor leave ret mov cmp jae movzwl mov movzwl jmp lea push push lea push push call test jne and movzwl movzwl and leave ret mov push mov pop jmp mov push mov pushl pushl call pop pop pop ret mov push mov sub push pushl lea call mov mov test je mov test jne call movl call cmpb je mov andl xor jmp cmpl je cmpl jl cmpl jg andl mov push mov push lea cmpl jle lea push movzbl push push call mov add jmp mov movzbl movzwl and test je mov inc jmp cmp jne orl jmp cmp jne mov inc mov test js cmp je cmp jg test jne cmp je movl jmp mov cmp je cmp je movl jmp movl jmp cmp jne cmp jne mov cmp je cmp jne mov add or xor divl mov mov movzbl movzwl mov and je movsbl sub jmp and je lea cmp movsbl ja sub add cmp jae orl cmp jb jne cmp jbe orl cmpl jne mov dec test jne cmpl je mov andl jmp mov imul add mov mov inc jmp mov test jne test jne and je cmpl ja test jne cmp jbe call testb movl je orl jmp testb push pop setne add mov mov test je mov testb je negl cmpb je mov andl mov jmp mov test je mov cmpb je mov andl xor pop pop pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret int3 int3 int3 int3 int3 push mov push mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov cmpl sbb neg pop ret mov push mov mov and pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl call pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov movzbl push call pop test jne cmpb je pop ret xor inc pop ret mov push mov mov add pop ret mov push mov sub push push pushl lea call mov mov cmp jae mov cmpl jle lea push push push call mov add jmp mov movzwl and test je mov movzbl jmp cmpb je mov andl mov jmp mov cmpl jle mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp call movl xor mov movb inc mov push pushl lea push push push lea push push pushl lea push call add test je cmp movzbl je movzbl shl or cmpb je mov andl pop pop leave ret mov push mov cmpl jne mov lea cmp ja add pop ret push pushl call pop pop pop ret mov push mov sub mov xor mov push push mov push pushl mov lea call lea push xor push push push push push lea push lea push call mov lea push push call add testb jne cmp jne cmp je mov andl push pop jmp cmp jne cmp je mov andl push jmp testb jne testb jne cmp je mov andl xor mov pop pop xor pop call leave ret mov push mov push pushl pushl call add pop ret mov push mov sub mov xor mov push push mov push pushl mov lea call lea push xor push push push push push lea push lea push call mov lea push push call add testb jne cmp jne cmp je mov andl push pop jmp cmp jne cmp je mov andl push jmp testb jne testb jne cmp je mov andl xor mov pop pop xor pop call leave ret mov push mov push pushl pushl call add pop ret mov push mov sub mov xor mov push push mov push pushl mov lea call lea push xor push push push push push lea push lea push call mov lea push push call add testb jne cmp jne cmp je mov andl push pop jmp cmp jne cmp je mov andl push jmp testb jne testb jne cmp je mov andl xor mov pop pop xor pop call leave ret mov push mov push pushl pushl call add pop ret mov push mov mov push mov test je call movl call jmp mov mov pop pop ret mov ret mov push mov mov push mov push mov xor cmp jne call push pop mov call mov jmp cmp jbe mov mov cmp jle mov inc cmp ja call push pop mov mov jmp push lea movb mov test jle mov test je movsbl inc jmp push pop mov inc dec test jg mov movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp push call inc push push push call add xor pop pop pop pop ret mov push mov push mov movzwl push mov shr and push mov and push mov mov mov movzwl mov and mov test je cmp je add jmp mov jmp xor cmp jne cmp jne mov mov mov mov jmp add mov movzwl mov shr shl or or mov shl jmp mov mov shr add or add add mov mov test je mov or pop pop mov pop leave ret mov push mov sub mov xor mov mov push mov push mov push lea push lea push call pop pop lea push push push sub lea mov movsl movsl movsw call mov mov movsbl mov movswl mov lea push pushl push call add test jne mov pop mov pop mov xor pop call leave ret xor push push push push push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret mov push mov mov mov and and push mov test je test je push push call pop pop mov call push pop mov call mov jmp push pushl test je call mov jmp call pop pop xor pop pop ret int3 int3 push lea sub and add sbb or pop jmp push lea sub and add sbb or pop jmp mov push mov sub push pushl lea call mov mov xor cmp je mov cmp jne call movl call cmp je mov andl xor xor jmp cmp je cmpl jl cmpl jg mov push mov push mov mov mov lea cmpl jle lea push movzbl push push call mov add jmp movzbl mov movzwl and cmp je mov mov inc jmp cmpb mov jne orl jmp cmpb jne mov inc mov mov push pop cmp jne cmpb je movl jmp mov cmp je cmp je movl jmp mov cmp jne cmpb jne mov cmp je cmp jne mov add mov mov mov cltd push mov push push push mov call mov mov mov mov mov mov movzbl movzwl mov and je movsbl sub jmp and je lea cmp movsbl ja sub lea cmp jae mov orl cmp jb ja mov cmp jb mov cmp jne cmp jne xor cmp jb ja cmp jbe orl cmpl jne mov decl test jne xor cmp je mov mov mov mov jmp push pushl pushl push call xor add adc mov mov mov mov incl mov jmp mov mov test jne test jne and je cmp ja jb cmpl ja test jne cmp jb ja cmpl jbe call testb movl je orl orl jmp testb je andl mov jmp orl mov mov pop pop test je mov mov testb je mov mov neg adc neg mov mov cmpb je mov andl mov mov pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret mov push mov push mov push or test jne call movl call or jmp testb je push call push mov call push call push call add test jns or jmp mov test je push call andl pop andl mov pop pop pop ret push push call orl xor mov test setne test jne call movl call or jmp testb je andl mov call ret push call pop andl push call pop mov movl call jmp mov push call pop ret push push call mov cmp jne call movl or jmp test js cmp jb call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je push call pop push call test jne call mov jmp andl cmpl je call mov mov call movl orl movl call mov call ret mov push call pop ret mov push mov sub push pushl lea call mov lea cmp ja mov mov movzwl jmp mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp xor mov movb inc mov push pushl pushl lea push push lea push lea push push call add test jne cmp je mov andl xor jmp movzwl and cmpb je mov andl pop leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl pushl call add pop ret mov ret mov ret mov push mov test je test je cmp je push push pop mov rep andl push call pop pop pop ret mov push mov push call mov push pop test sete lea mov cmp je test je cmp je cmp je call movl call or jmp and jmp or mov jmp orl mov pop pop ret mov mov mov mov mov mov mov ret push push call mov test je push call pop andl mov test je push call test jne mov cmp je push call pop movl call cmpl je push call pop movl pushl call pop mov test je cmpl jne cmp je push call pop movl call mov mov mov push call pop call ret mov push call pop ret mov push call pop ret mov push mov pop jmp push push call call mov push push call pop pop mov mov test jne call movl xor jmp call call mov mov mov mov push call pop andl pushl call pop movl call push call pop movl pushl call movl call mov call ret mov push call pop ret mov push call pop ret jmp xor ret mov push mov push push xor xor cmp jle push lea add pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov push push push mov push xor push push call mov mov add test jne xor jmp cmp jne lea cmp je push push lea push push call add test jne mov jmp push push push push push call push push mov call cmp jmp cmpl lea mov jne cmp jae cmp je push push push pushl jmp cmpl jne cmp jae cmp je push mov push push add jmp cmpl jne cmp jae test je cmp jne push mov push push sub push call add test jne cmp je test je incl lea push push call test pop pop jne or pop pop pop pop ret xor push push push push push jmp mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add lea cmp pop pop je push push push pushl pushl call add pop ret push push push push push call int3 mov push mov sub push xor inc push mov call pop mov test je push lea movb mov pushl mov push pushl push push push call lea add movl mov push push push call add test jne mov lea pushl mov pushl call pop pop test je andl mov pushl addl push mov mov pushl push push push call add cmpl jl cmpl jne mov mov test je push call test jne pushl call pop mov test je push call test jne pushl call pop mov andl andl mov mov mov jmp xor push push push push push call pushl call mov mov xor pop cmp je push call test jne pushl call pop mov cmp je push call test jne pushl call pop mov mov mov mov mov pop pop leave ret mov push mov sub mov xor mov mov push push mov push mov mov mov mov mov call lea mov lea lea add mov mov test je cmpl je cmpl je cmpb jne cmpb jne push pushl pushl call add test jne test je mov mov mov mov test je andl mov jmp xor push push push push push call push call mov pop mov cmp jae push pushl call pop pop test je push pushl call pop pop test je andl lea push push call pop pop test jne lea push push push call add test je movzwl mov mov lea push push pushl call add cmpb je mov cmp jb mov mov inc push push push pushl call add test jne xor cmp je push push pushl call add cmp je push pushl pushl call add pushl pushl pushl call add test jne mov jmp push push push push push jmp xor mov pop pop xor pop call leave ret mov push mov sub mov xor mov mov push mov push mov mov call mov push lea push lea push push lea push pushl call add test jne xor mov pop xor pop call leave ret shl add pushl lea push call pop pop test jne mov jmp lea push call add push mov call pop pop mov test je mov mov mov lea mov mov mov lea imul add push push mov lea push call mov lea push mov mov mov add add push push call add test jne mov mov add mov movzwl mov push lea push pushl call add cmpl jne mov andl mov mov mov mov lea mov cmp je mov incl mov mov mov mov mov mov add cmpl mov jl jmp mov test je lea mov mov mov mov mov mov mov cmpl jne push pushl lea pushl push push push push push call add test je xor mov and inc cmp jb push pushl lea push call add neg sbb inc mov jmp andl mov mov mov mov cmpl jne mov mov mov imul push call pop test je mov pushl mov call mov pop mov mov mov mov jmp cmpl je mov add add pushl call test jne pushl call pushl call andl pop pop mov mov add add movl mov jmp xor push push push push push call int3 mov push mov sub mov xor mov mov push push xor mov push mov cmp je cmp je push call pop jmp add mov jmp movl mov cmp je cmpb jne cmpb jne cmpb jne mov push push call mov pop pop test je sub mov je cmpb je movl mov jmp mov push push pushl call add test jne pushl call pop cmp je incl add cmp jle inc push push call mov xor pop pop cmp jne cmpb jne cmpl jg push push lea push push call add test jne mov mov mov lea push call pop test je incl add cmpb je inc cmpb jne xor cmp je mov jmp push push push push push call xor jmp push push push push lea push push call add cmp je lea test je pushl lea push call pop pop test je lea push mov call pop test jne and jmp incl inc add cmp jle xor cmp jne cmp je call mov pop pop xor pop call leave ret mov push mov cmpl push push ja cmpl je xor inc push push call mov pop pop test jne call movl xor pop pop pop ret push push call pop pop mov test jne push call pop jmp push push call pop pop mov test jne pushl call push call pop jmp mov mov call pushl mov mov call pop test jne pushl call pushl call push call add jmp pushl mov pushl call pop pop test je pushl call pushl call pushl call push call add xor jmp mov mov mov mov mov jmp mov push mov pop jmp push push call andl cmpl jbe call movl call xor jmp call mov mov call orl andl xor inc push push call pop pop mov mov test je push call pop mov mov mov call andl call pushl mov mov call pop mov test je cmpl je push pushl call pop pop test je mov push call pop movl lea push push call push call add testb jne testb jne pushl push call pop pop mov mov mov mov mov mov mov andl call jmp mov mov xor inc push call pop ret mov push call pop ret jmp push call push call pop pop movl call mov call ret mov andl ret mov push mov mov push mov lea xor cmp jb cmp jae xor inc mov mov pop pop ret mov push mov mov cltd push pop and add mov sar and jns dec or inc sub or shl mov not test je xor pop ret cmpl jne inc cmp jl xor inc pop ret mov push mov mov push push push cltd push pop and add mov sar and jns dec or inc mov sub xor inc shl mov xor lea cmp jb cmp jae xor inc mov jmp test je mov lea xor cmp jb cmp jae xor inc mov dec jns pop pop mov pop pop ret mov push mov push push andl push push push mov dec lea cltd and lea lea sar and jns dec or inc mov push pop sub xor inc shl mov test je or shl mov not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl xor sub inc shl mov lea cmp jb cmp jae movl mov mov jmp test je mov lea xor cmp jb cmp jae xor inc mov mov dec jns mov mov or shl push pop and inc cmp jge sub lea xor rep mov pop pop pop leave ret mov push mov mov mov push pop sub push mov mov add dec jne pop pop ret mov push mov push mov xor stos stos stos pop pop ret mov push mov xor mov cmpl jne inc cmp jl xor inc pop ret xor pop ret mov push mov mov cltd and sub add mov push sar and push jns dec or inc andl andl mov or mov shl movl sub push not mov mov and mov mov mov shr mov or mov mov mov shl incl cmpl mov jl push pop mov sub lea pop cmp jl mov mov jmp andl sub dec jns pop pop leave ret mov push mov sub mov xor mov mov mov mov movzwl mov and mov mov mov mov movzwl push mov and sub shl push push mov mov mov cmp jne xor xor cmp jne inc cmp jl jmp xor lea stos stos stos jmp andl lea lea movsl movsl mov movsl mov mov dec lea cltd and add sar lea and mov jns dec or inc lea push xor pop sub inc shl mov test je mov or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl sub xor inc shl lea mov add mov mov cmp jb cmp jmp test je andl lea mov lea mov cmp jb cmp jae movl dec mov mov mov jns mov mov or shl push pop and mov inc cmp jge lea sub xor rep cmpl je incl mov mov mov sub cmp jge xor lea stos stos stos jmp cmp jg sub lea lea movsl movsl mov cltd and movsl lea mov sar and jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns mov dec lea cltd and add sar lea and mov jns dec or inc push pop sub xor inc shl mov test je or shl mov not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl xor sub inc shl lea mov lea mov cmp jb cmp jae movl mov mov mov jmp test je lea mov lea xor cmp jb cmp jae xor inc mov mov dec jns mov mov or shl push pop and inc cmp jge lea sub xor rep mov lea cltd and lea lea sar and jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns xor push pop jmp cmp mov jl xor lea stos stos stos orl mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns mov add xor inc jmp mov add andl mov cltd and add sar mov and mov jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns xor push pop sub mov shl mov neg sbb and or or cmp jne mov mov mov mov jmp cmp jne mov mov mov pop pop xor pop call leave ret mov push mov sub mov xor mov mov mov mov movzwl push mov and mov mov mov mov movzwl and sub shl push mov mov cmp jne xor xor cmp jne inc cmp jl xor jmp xor lea stos stos push stos pop jmp andl push lea lea movsl movsl movsl mov dec lea cltd and add sar lea and mov mov jns dec or inc lea push xor pop sub inc shl mov test je mov or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl sub xor inc shl lea mov add mov mov cmp jb cmp jmp test je andl lea mov lea mov cmp jb cmp jae movl dec mov mov mov jns mov mov or shl push pop and mov inc cmp jge lea sub xor rep cmpl je inc mov mov sub cmp jge xor lea stos stos stos jmp cmp jg sub lea mov lea movsl cltd and add movsl mov sar and movsl jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns mov dec lea cltd and add sar lea and mov jns dec or inc push pop sub xor inc shl lea mov test je or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl xor sub inc shl lea mov lea cmp jb cmp jae movl mov mov jmp test je lea mov lea xor cmp jb cmp jae xor inc mov mov dec jns mov or shl and mov inc cmp jge push pop lea sub xor rep mov lea cltd and add lea sar and jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns push xor pop jmp mov cmp jl xor lea stos stos stos orl mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns mov add xor inc jmp add andl mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns xor pop push pop sub shl mov neg sbb and or mov or cmp jne mov mov mov mov jmp cmp jne mov mov mov pop xor pop call leave ret mov push mov sub mov xor mov mov mov mov movzwl push mov and mov mov mov mov movzwl and sub shl push mov mov cmp jne xor xor cmp jne inc cmp jl xor jmp xor lea stos stos push stos pop jmp andl push lea lea movsl movsl movsl mov dec lea cltd and add sar lea and mov mov jns dec or inc lea push xor pop sub inc shl mov test je mov or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl sub xor inc shl lea mov add mov mov cmp jb cmp jmp test je andl lea mov lea mov cmp jb cmp jae movl dec mov mov mov jns mov mov or shl push pop and mov inc cmp jge lea sub xor rep cmpl je inc mov mov sub cmp jge xor lea stos stos stos jmp cmp jg sub lea mov lea movsl cltd and add movsl mov sar and movsl jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns mov dec lea cltd and add sar lea and mov jns dec or inc push pop sub xor inc shl lea mov test je or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl xor sub inc shl lea mov lea cmp jb cmp jae movl mov mov jmp test je lea mov lea xor cmp jb cmp jae xor inc mov mov dec jns mov or shl and mov inc cmp jge push pop lea sub xor rep mov lea cltd and add lea sar and jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns push xor pop jmp mov cmp jl xor lea stos stos stos orl mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns mov add xor inc jmp add andl mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns xor pop push pop sub shl mov neg sbb and or mov or cmp jne mov mov mov mov jmp cmp jne mov mov mov pop xor pop call leave ret mov push mov sub mov xor mov mov movzwl andl mov and and push mov mov mov mov movzwl shl push mov mov mov test jns test je lea xor cmp jb cmp jae xor inc andl mov mov test je mov andl lea mov lea cmp jb cmp jae movl decl mov mov jns test je incl mov jmp mov mov mov cmp jne movl or mov mov mov mov mov pop xor pop call leave ret mov push mov mov push mov mov add push mov shr mov lea or mov mov shr add or pop mov mov pop pop ret mov push mov mov mov mov push push mov mov shr shl or mov mov shl shr shr or pop mov mov pop pop ret mov push mov sub mov xor mov mov xor push mov movzwl push mov mov mov mov movzwl mov xor and mov mov and and lea push movzwl mov mov cmp jae cmp jae mov cmp ja mov cmp ja xor mov jmp mov test jne inc mov test jne xor cmp jne cmp jne mov jmp xor cmp jne inc mov test jne cmp jne cmp je mov lea movl mov mov add mov test jle add mov lea mov movzwl movzwl andl imul mov lea cmp jb cmp jae movl cmpl mov je incw subl add decl cmpl jg mov mov add incl decl cmpl jg add mov test jle testl jne mov mov mov shll shr add or mov shr add or add mov mov test jg test jg add test jns mov neg movzwl mov add testb je incl mov mov mov shrl shl shr or mov shl shr or decl mov mov jne cmpl je orw mov cmp ja mov and cmp jne cmpl jne andl cmpl jne andl cmp jne mov inc jmp incw jmp incl jmp incl mov cmp jae mov or mov mov mov mov mov mov jmp xor xor cmp sete dec and add mov mov mov mov pop pop xor pop call leave ret mov push mov sub mov xor mov mov mov sub xor mov cmp je jge negl mov sub mov cmp jne xor mov cmp je push push push mov addl sarl and cmp je imul add mov mov cmp jb mov lea movsl movsl movsl decl lea movzwl mov mov mov mov movzwl mov xor and mov mov and and lea movzwl mov cmp jae cmp jae mov cmp ja mov cmp ja xor mov jmp xor cmp jne inc testl mov jne cmp jne cmp jne xor mov jmp cmp jne inc testl mov jne cmp jne cmp jne mov mov mov jmp mov lea movl mov mov add mov test jle lea add mov mov mov mov movzwl movzwl andl imul mov lea cmp jb cmp jae movl cmpl mov je incw addl subl decl cmpl jg mov add incl decl cmpl jg add test jle testl jne mov mov shll shr mov add or mov shr add or add mov mov test jg test jg add test jns mov neg movzwl add testb je incl mov mov mov shrl shl shr or mov shl shr or dec mov mov jne cmp je orw mov cmp ja mov and cmp jne cmpl jne andl cmpl jne andl mov cmp jne mov inc jmp incw jmp incl jmp incl mov cmp jae mov or mov mov mov mov mov mov jmp xor xor cmp sete dec and add mov mov mov xor cmp jne pop pop pop mov xor call leave ret mov push mov sub mov xor mov mov xor push xor mov mov inc push mov lea mov mov mov mov mov mov mov mov mov cmp jne call movl call xor jmp mov mov mov cmp je cmp je cmp je cmp jne inc jmp push mov mov inc cmp ja jmp lea cmp ja push pop dec jmp mov mov mov mov cmp jne push pop jmp movsbl sub je dec dec je sub jne mov jmp push pop movl jmp andl push pop jmp lea mov cmp jbe mov mov mov mov cmp jne push jmp cmp je cmp je cmp je cmp jle cmp jle sub cmp ja push jmp dec push jmp lea cmp jbe mov mov mov mov cmp je cmp je mov jmp mov jmp cmp jg cmpl jae incl sub mov inc jmp incl mov inc cmp jge mov mov mov mov cmp je cmp je cmp je jmp cmpl mov mov jne jmp decl mov inc cmp je jmp cmp jg cmpl jae incl sub mov inc decl mov inc cmp jge jmp sub mov cmp ja push jmp lea mov lea cmp ja push jmp movsbl sub je dec dec je sub jne push jmp orl push pop jmp push jmp mov jmp mov inc cmp je sub cmp jbe dec jmp lea cmp jbe cmp jmp cmpl je movsbl sub lea mov je dec dec je mov cmpl mov mov je push pop cmp jbe cmpb jl incb dec incl mov cmpl jbe jmp push pop dec cmp jne jmp mov xor jmp cmp jg imul movsbl lea cmp jg mov inc cmp jge jmp mov mov jmp cmp jg mov inc cmp jge jmp decl incl dec cmpb je lea push pushl lea push call mov xor add cmp jge neg add cmp jne add cmp jne sub cmp jg cmp jl mov sub mov cmp je jge neg mov mov sub cmp jne xor mov cmp je jmp mov xor mov sarl add and mov cmp je imul lea mov cmp jb mov lea movsl movsl movsl decl lea mov xor mov mov mov mov movzwl mov xor mov and and and mov lea mov movzwl cmp jae cmp jae mov cmp ja mov cmp ja xor mov mov jmp xor cmp jne inc testl jne cmp jne cmp jne xor mov jmp cmp jne inc testl jne cmp jne cmp jne mov mov mov jmp mov lea movl mov mov add mov test jle lea mov lea mov mov mov movzwl movzwl andl imul mov lea cmp jb cmp jae movl cmpl mov je incw addl subl decl cmpl jg add incl decl cmpl jg add test jle mov test js mov mov shll shr mov add or shr lea or add mov mov test jg test jg add test jns mov neg movzwl add testb je incl mov mov mov shrl shl shr or mov shl shr or dec mov mov jne cmp je orw mov cmp ja mov and cmp jne cmpl jne andl cmpl jne andl mov cmp jne mov inc jmp incw jmp incl jmp incl mov cmp jb xor xor cmp mov sete mov dec and add mov jmp mov or mov mov mov mov mov mov jmp xor test sete andl dec and add andl mov cmpl jne mov movzwl mov mov shr jmp movl jmp xor mov mov xor movl jmp movl xor xor xor xor mov or mov mov mov mov mov pop mov pop xor pop call leave ret lea inc cli inc add cli inc add inc add inc add sti inc add sti inc add sti inc add inc add inc add cld inc add sub mov xor mov mov mov mov push mov push push xor push push push pushl push push lea push call mov lea push push call add cmp jne or mov mov pop xor pop call leave ret mov push mov mov mov push push push mov mov lea xor cmp jb cmp jae xor inc mov test je mov lea xor cmp jb cmp jae xor inc mov test je incl mov mov lea xor cmp jb cmp jae xor inc mov test je incl mov add pop pop pop pop ret mov push mov sub mov xor mov movzwl movzwl mov and push mov mov lea push and cmpw push mov movl movl movl movl je movb jmp movb mov mov test jne test jne test jne xor cmp mov setne dec and add mov movw movb xor inc jmp cmp jne mov xor inc mov mov cmp jne cmpl je test jne push jmp xor push push push push push call xor cmp je cmp jne cmp jne push jmp cmp jne cmp jne push lea push push call add test jne movb jmp push lea push push call add test jne movb xor jmp movzwl mov imul mov shr shr lea imul lea sar movzwl xor mov movswl mov sub neg mov mov mov mov mov je test jns mov sub neg mov test je addl mov sar and je imul add mov mov mov cmp jb mov lea movsl movsl lea movsl decl mov xor mov mov mov mov movzwl mov xor mov and mov mov and and lea movzwl mov cmp jae cmp jae mov cmp ja mov cmp ja xor mov mov mov jmp xor cmp jne inc testl jne cmp jne cmp jne xor mov jmp cmp jne inc testl jne cmp jne cmp je and lea movl mov mov add mov test jle lea add mov mov mov movzwl mov movzwl mov imul andl lea cmp jb cmp jae movl cmpl mov je incw addl subl decl cmpl jg mov add incl decl cmpl jg add test jle testl jne mov mov shll mov add shr or mov mov shr add or add mov test jg test jg add test jns mov neg movzwl add testb je incl mov mov mov shrl shl shr or mov shl shr or dec mov mov jne cmp je orw mov cmp ja mov and cmp jne cmpl jne andl cmpl jne andl mov cmp jne mov inc jmp incw jmp incl jmp incl mov cmp jb xor xor cmp mov sete mov dec and add mov xor cmp jne mov shr mov mov cmp jb mov incl xor mov mov mov mov mov xor and and and lea mov movzwl cmp jae cmp jae mov cmp ja mov cmp ja xor mov mov jmp mov or mov mov mov mov mov mov jmp xor xor cmp sete dec and add mov jmp xor cmp jne inc testl jne cmp jne cmp jne mov jmp cmp jne inc testl jne cmp jne cmp je mov lea movl mov mov add mov test jle lea mov lea mov movzwl movzwl andl imul mov lea cmp jb cmp jae movl cmpl mov je incw subl add decl cmpl jg add incl decl cmpl jg add test jle mov test js mov mov shll mov add shr or mov shr lea or add mov test jg test jg add test jns mov neg movzwl add testb je incl mov mov mov shrl shl shr or mov shl shr or dec mov mov jne cmp je orw mov cmp ja mov and cmp jne cmpl jne andl cmpl jne andl mov cmp jne mov inc jmp incw jmp incl jmp incl mov cmp jb xor xor cmp mov sete mov dec and add mov jmp mov or mov mov mov mov mov mov jmp xor test sete andl dec and add andl mov testb mov mov mov mov je cwtl add test jg xor mov mov cmp movw setne dec and add mov movb jmp cmp jle push pop mov shr sub xor mov movl mov mov mov shll shr add or mov shr add or decl mov mov jne test jns neg and jle mov mov mov shrl shl shr or mov shl shr or dec mov mov test jg lea lea mov mov test jle mov mov lea lea movsl movsl movsl shll mov shll shr lea or mov mov shr add or mov lea shr lea mov shr or mov or lea cmp jb cmp jae lea xor cmp jb cmp jae xor inc mov test je inc mov lea mov cmp jb cmp jae inc add shr add or lea mov mov mov shr add add mov shr or mov inc decl cmpl mov movb jg mov sub cmp jge mov jmp cmpb jne movb dec cmp jae mov cmp jae inc incw incb sub sub movsbl mov movb mov mov pop pop xor pop call leave ret cmpb jne dec cmp jae mov cmp jae xor mov mov cmp movb setne dec and add mov movb movb jmp mov push mov push push mov push xor cmpl jne cmp jne fstcw movzwl and mov cmp jne cmp je stmxcsr mov and cmp je and push pushl push call add test je push push push push push call pop leave ret mov push mov mov xor test je push pop test je or test je or test je or test je or test je or push movzwl push mov mov and push mov mov je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or testl pop pop pop je or pop ret xor test je inc test je or test je or test je or test je or test je or mov mov and push mov je cmp je cmp je cmp jne or jmp or jmp or mov and je cmp jne or jmp or pop test je or ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or test je or pop ret xor test jns push pop push mov push push test je or test je or test je or test je or mov test je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or pop and sub pop pop je sub je sub jne or ret or ret or ret xor test je mov push push push mov test je or test je or test je or test je or mov test je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or mov pop and pop pop cmp je cmp je cmp jne or ret or ret or ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or test je or pop ret push call pop ret mov push mov push push push fstsw mov xor mov test je test je push pop test je or test je or test je or test je or test je or cmpl je stmxcsr mov xor test je test je push pop test je or test je or test je or test je or test je or or jmp mov pop leave ret mov push call mov fninit call push call pop test je mov testl je andl movl pop ret call xor test je test je push pop test je or test je or test je or test je or test je or mov ret mov push mov push stmxcsr andl ldmxcsr mov xor test je test je push pop test je or test je or test je or test je or test je or leave ret mov push mov push push andl stmxcsr mov xor test jns push pop push mov push push test je or test je or test je or test je or mov test je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or mov and sub je sub je sub jne or jmp or jmp or mov mov and not and or cmp je call push mov call pop stmxcsr mov xor test jns push pop test je or test je or test je or test je or mov test je or mov and je cmp je cmp je cmp jne or jmp or jmp or and sub je sub je sub jne or jmp or jmp or pop pop pop leave ret mov push mov mov test je fstsw mov xor test je test je push pop test je or test je or test je or test je or test je or mov push mov test je call mov pop pop ret mov push mov push push fnstsw fnclex cmpl je mov xor push mov test je test je push pop test je or test je or test je or test je or test je or stmxcsr andl ldmxcsr mov xor test je test je push pop test je or test je or test je or test je or test je or or pop leave ret mov xor test je test je push pop test je or test je or test je or test je or test je or leave ret mov push mov mov sub push push xor push mov cmp je fstcw mov test je push pop test je or test je or test je or test je or test je or movzwl mov mov and je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or movzwl test je or mov mov and not and or cmp je call movzwl mov fldcw fstcw mov xor test je push pop test je or test je or test je or test je or test je or movzwl mov and je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or test je or mov mov mov cmpl je xor cmp je and mov stmxcsr mov test jns push pop test je or test je or test je or test je or test je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or mov and sub je sub je sub jne or jmp or jmp or mov mov and not and or cmp jne mov jmp call push mov call pop stmxcsr mov xor test jns push pop test je or test je or test je or test je or mov test je or mov and je cmp je cmp je cmp jne or jmp or jmp or and sub je sub je sub jne or jmp or jmp or mov mov mov jmp mov mov pop xor pop inc pop leave ret mov push mov sub push push push fstcw mov xor test je push pop test je or test je or test je or test je or test je or movzwl mov mov and mov je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or movzwl test je or mov mov mov not and and or mov cmp je mov call movzwl mov fldcw fstcw mov xor test je push pop test je or test je or test je or test je or test je or movzwl mov and je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or test je or mov mov xor cmp je and mov stmxcsr mov test jns push pop test je or test je or test je or test je or test je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or mov and sub je sub je sub jne or jmp or jmp or mov mov and not and or cmp jne mov jmp call push mov call pop stmxcsr mov xor test jns push pop test je or test je or test je or test je or mov test je or mov and je cmp je cmp je cmp jne or jmp or jmp or and sub je sub je sub jne or jmp or jmp or mov mov xor or test je or pop pop pop leave ret mov push mov sub push push push mov and fstcw mov xor test je push pop test je or test je or test je or test je or test je or movzwl mov mov and je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or movzwl test je or mov not mov and and or mov cmp je mov call movzwl mov fldcw fstcw mov xor test je push pop test je or test je or test je or test je or test je or movzwl mov and je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or test je or mov mov xor cmp je and mov stmxcsr mov test jns push pop test je or test je or test je or test je or test je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or mov and sub je sub je sub jne or jmp or jmp or mov mov and not and or cmp jne mov jmp call push mov call pop stmxcsr mov xor test jns push pop test je or test je or test je or test je or mov test je or mov and je cmp je cmp je cmp jne or jmp or jmp or and sub je sub je sub jne or jmp or jmp or mov xor or test je or pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret mov push mov push mov push push call pop cmp je mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov jmp xor push call mov sar mov and shl pop movb test je push call pop or jmp xor pop pop pop ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je push call pop mov jmp call movl orl movl call mov call ret mov push call pop ret mov push mov push mov mov test je test je pushl call andl xor pop mov mov mov pop pop ret xor ret mov push mov mov push push test je mov test jne call push pop mov call mov jmp mov test jne movb jmp mov cmpb je inc dec jne test je sub mov mov inc test je dec jne test jne movb call push pop mov mov jmp xor pop pop pop ret mov push mov xor push xor inc cmp jl push push test je mov add cltd sub mov mov sar lea pushl mov pushl call pop pop test jne mov add mov jmp jns dec mov jmp lea cmp jle pop pop xor test sete pop mov pop ret orl call mov mov ret mov push mov push test je cmpb je push push call pop pop test je push push call pop pop test jne push lea push push pushl call test je mov leave ret push call pop mov jmp push lea push push pushl call test jne xor leave ret cmpl jne call leave ret mov push mov xor mov cmp je add cmp jb xor inc pop ret xor pop ret mov push xor jmp lea inc cmp ja add jmp lea cmp ja add movsbl add lea mov test jne mov pop ret xor mov inc cmp jl cmp jle sub cmp ja inc jmp ret mov push mov sub mov xor mov push push mov call mov mov call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop xor pop call leave ret mov push mov push push mov push lea push mov and push or push call test jne xor jmp cmp je cmpl je mov mov push mov call push mov call pop cmp pop je xor inc pop leave ret mov push mov sub mov xor mov push push push mov call mov lea call mov mov push lea push mov neg sbb and add push push call test jne andl xor inc jmp lea push pushl call pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne mov test je push lea push pushl call add test jne pushl orl mov call pop cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je push lea push mov neg sbb and add push push call test je lea push pushl call pop xor pop test jne orl mov cmp je or mov jmp cmp je pushl call pop cmp jne push push jmp cmp jne cmp je lea push pushl call pop pop test jne push push mov call pop pop test je orl cmp jne mov mov shr not and mov pop pop xor pop call leave ret mov push mov sub mov xor mov push push mov call mov lea call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push mov call pop pop test je orl mov mov mov shr not and mov pop xor pop call leave ret pushl call sub neg pop sbb push inc push mov call testb jne andl ret pushl call pushl sub neg sbb inc mov call sub neg sbb andl inc cmpl pop pop mov je push pop jmp mov call push push mov call mov test je test je test jne andl ret pushl call sub neg sbb inc pop mov je push pop jmp mov call push push mov call testb jne andl ret mov push mov push push push call lea mov test jne orl jmp mov add lea mov je cmpb je push push push call add mov andl test je cmpb je mov test je cmpb je mov call jmp mov call cmpl jne push push push call add test je mov test je cmpb je mov call jmp mov call jmp mov test je cmpb je push call sub neg pop sbb push inc push mov call testb jne andl jmp movl call mov mov cmpl je mov mov sub neg sbb and call mov mov test je cmp je cmp je movzwl push call test je push pushl call test je mov test je mov mov mov mov mov mov test je mov mov cmp jne push push push call add test je xor push push push push push call push push push pushl call test je push lea push push pushl call test je push push sub push pushl call add xor inc jmp xor pop pop pop pop ret test je xor test setg lea ret movzbl movzbl sub je xor test setg lea ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea ret xor ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea ret xor ret mov push push mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne add add sub cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne xor pop pop ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp nop cmc sub inc add cmp jle inc add xor add inc add sub add xor add inc add inc add xor out xor ret add sub xchg inc add inc add aaa inc add inc add cs add xor mov inc add sub jae inc add inc add ss add inc add sub inc add call in push push mov mov sub je dec je dec je dec je dec je mov mov push push pop jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne add add sub cmp jae add add cmp ja jmp mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test je mov jmp movzbl movzbl sub je xor test setg lea jmp xor test jne xor pop jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea test je mov jmp mov mov movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp mov mov movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg lea test jne movzbl movzbl jmp mov mov movzbl movzbl jmp xor pop pop pop ret mov dec inc inc add inc inc add dec inc add inc inc add inc add inc add dec inc add inc add inc inc add dec inc add inc inc add add dec inc add dec inc add inc inc add inc inc add dec inc add inc inc add inc inc add dec inc add aas inc add inc inc add dec inc add inc inc add inc inc add dec inc add push andl push mov test jne xor jmp push cmp jb lea test je mov mov mov add add test je cmp jne mov test je cmp jne mov test je cmp jne mov test je cmp jne addl cmp jb jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp mov mov mov jmp mov test je cmp jne inc inc inc cmp jb xor pop pop leave ret movzbl movzbl sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov sub mov push xor push push movl mov mov mov cmp jbe xor mov mov lea movsl movsl movsl mov lea shr lea or mov andl mov mov mov shr add or mov add shr or mov mov lea mov add shr or add mov mov mov cmp jb cmp jae movl cmpl mov je mov andl lea cmp jb cmp jae movl cmpl mov je inc mov mov andl lea cmp jb cmp jae movl cmpl mov je inc mov add andl mov add mov shr or shr add add or mov mov mov mov mov mov movsbl lea mov cmp jb cmp jae movl cmpl mov je lea xor cmp jb cmp jae xor inc mov mov test je mov inc mov mov decl mov incl cmpl mov mov ja xor cmp jne mov mov addl mov mov shr shl shr or shl mov mov cmp je mov mov test jne mov mov addl mov mov shr add shr add or add or mov mov mov test je mov pop pop mov pop leave ret mov push mov mov push mov push movzbl lea inc cmp ja add movzbl lea inc cmp ja add test je cmp je pop sub pop pop ret mov push mov sub push pushl lea call mov test jne call movl call cmp je mov andl mov jmp push mov test jne call movl call cmpb je mov andl mov jmp mov cmpl jne push push call pop pop jmp sub push movzbl lea push push call mov movzbl lea push push call add inc test je cmp je sub mov pop cmpb je mov andl pop pop leave ret mov push mov xor cmp jne cmp jne call movl call mov pop ret cmp je pop jmp push pushl pushl call add pop ret mov push mov sub cmpl push push push je pushl lea call mov test jne call movl call cmpb je mov andl mov jmp mov test je mov cmp jbe call movl call cmpb je mov andl mov jmp mov cmpl jne pushl push push call add cmpb je mov andl jmp sub movzbl lea push push call mov movzbl lea push push call add inc decl je test je cmp je sub mov jmp xor pop pop pop leave ret mov push mov xor cmp jne cmp jne call movl call mov pop ret cmp je cmpl ja pop jmp push pushl pushl pushl call add pop ret mov push mov push push mov xor cmp jne call push pop mov call mov jmp push cmp ja call push pop mov call mov jmp xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov cmp je xor inc movb lea neg mov xor divl cmp jbe add jmp add mov inc inc test je cmp jb cmp jb movb jmp movb dec mov mov mov dec mov inc cmp jb xor pop pop pop pop ret mov push mov cmpl mov jne test jns push push jmp push pushl pushl mov call pop ret mov push mov xor cmpl jne cmp jge inc mov push pushl mov pushl call pop ret mov push mov mov mov push pushl pushl call pop ret mov push mov sub xor push cmp jne call push pop mov call mov jmp cmp jbe xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov push mov mov mov cmp je neg adc movb lea movl neg mov mov pushl pushl push push call mov mov mov cmp jbe add jmp add mov mov inc inc mov test jne test je cmp jb mov pop cmp jb movb call push pop mov mov jmp movb dec mov mov mov mov dec mov inc mov cmp jb xor pop leave ret mov push mov xor cmpl jne cmp jg jl cmp jae xor inc push mov push pushl pushl pushl pushl call pop pop ret mov push mov push mov push pushl pushl pushl pushl call pop pop ret int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret mov push mov mov push mov lea push mov call movl mov pop pop ret jmp mov push mov mov push mov lea push mov call movl mov pop pop ret jmp mov push mov mov push mov lea push mov call movl mov pop pop ret jmp mov push mov mov push mov lea push mov call movl mov pop pop ret mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov push pushl mov call movl mov pop pop ret mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov push pushl mov call movl mov pop pop ret mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov mov push push test jne call mov call mov jmp mov mov test jne mov mov cmp ja mov mov xor inc jmp andl push call pop lea push push push call pop push pushl lea push push push push call test je cmpl je call movl or pop pop pop ret mov push call mov call mov mov pop ret mov push mov pop jmp mov push mov mov mov push mov and not and and or mov pop pop ret mov push mov mov mov not and pop ret mov push mov mov mov mov not and and or mov pop ret mov push mov cmpl jne mov jmp cmpl jne mov jmp cmpl jne mov jmp xor mov mov xor and xor pop ret mov push mov mov mov mov mov mov pop ret mov push mov mov mov mov mov mov pop ret mov push mov mov mov mov mov mov pop ret mov push mov mov mov mov mov mov mov mov pop ret mov push mov mov mov movl mov pop ret mov push mov mov mov movl mov pop ret mov push mov mov mov movl mov pop ret mov push mov mov mov mov mov movl mov pop ret mov push mov mov mov mov mov movl mov pop ret mov movl ret movl ret mov push mov xor cmp sete pop ret mov push mov testb push mov movl je push call pop mov pop pop ret mov ret mov ret mov push mov mov mov mov mov mov pop ret mov ret mov ret mov push mov mov mov cmp jne mov cmp jne xor inc jmp xor pop ret mov push mov mov mov mov mov pop ret mov push mov push push pushl mov pushl lea push call mov call leave ret mov push mov mov cmp jne mov cmp jne xor inc jmp xor pop ret mov movl movl ret mov ret movl ret mov movl movl ret mov ret movl ret mov movl movl movl ret mov ret mov push mov mov mov mov mov pop ret movl ret mov ret mov ret mov ret mov push mov testb push mov movl je push call pop mov pop pop ret mov push mov testb push mov movl je push call pop mov pop pop ret mov push mov testb push mov movl je push call pop mov pop pop ret mov push mov push pushl andl call pop mov push call mov leave ret mov push mov push andl cmpl jne push jmp pushl call pop push mov call mov leave ret mov push push push mov call mov test je mov push call pop mov test jne mov andl test je mov push call pop mov test jne andl pop pop ret mov push mov push push lea call mov movl mov mov test je cmp je mov inc mov cmp jb mov mov mov incb lea call leave ret mov push mov push mov cmpl jbe mov lea decb cmpb jg mov call mov test je mov call push call pop pop pop ret mov ret mov push mov mov mov mov pop ret mov push mov mov mov mov mov mov pop ret mov call test je mov push mov call ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push call pop test je mov mov mov mov jmp xor mov pop ret mov push mov mov mov test je call test je mov push mov call pop ret mov push mov push push lea call push call andl pop lea call leave ret mov ret mov push mov cmpb jne push movb call pop mov mov pop ret push mov call push lea call mov andl mov jmp mov dec lea cmpl je mov call test je mov push mov call test jne pushl call orl pop lea call call ret xor cmp sete ret mov test jne lea ret push mov call push lea call andl jmp mov mov mov mov call push call pop mov test jne orl lea call call ret push mov call push lea call andl jmp mov mov mov mov call push call pop mov test jne orl lea call call ret mov push mov mov mov test je push push call pop pop pop ret mov push mov push mov mov push mov cmp je test je push call pop andl test je cmpb mov je inc cmpb jne sub push lea push call pop mov test je push push push call add pop pop mov pop pop ret mov push mov push push call pop pop test jne mov push mov push lea call cmpl je pushl push call pop pop test jne mov push lea call pop pop ret mov push mov push pushl mov andl movb call mov pop pop ret mov push mov push mov mov xor mov lea movl movl mov mov mov push mov mov call mov pop pop ret push mov call mov mov movl push movl call mov pop test je push call pop andl movl call ret mov push mov push mov call testb je push call pop mov pop pop ret push mov call mov xor mov cmp jne push lea call mov mov mov cmp jne push call pop cmp je push mov call mov push mov call lea movl movl call mov mov call mov mov orl lea call mov call ret call mov ret mov push mov push andl call push call pop test je push mov call jmp xor mov mov mov leave ret mov push push mov call test jne push mov push call add pop cmp jl pop mov pop ret push call test jns push mov push call add pop cmp jl pop ret push call test jne push mov push call add pop cmp jl pop ret push call test jns push mov push call add pop cmp jl pop ret mov push mov andl push call pop mov pop ret mov push mov mov push mov mov cmp jge imul add push call pop mov pop pop ret mov cmp jge imul add push call pop ret push call pop ret mov push mov mov mov and mov imul add push call pop pop ret mov push mov mov mov imul add push call pop pop ret mov push mov mov and imul add push call pop pop ret mov push mov mov and imul add push call pop pop ret mov push push mov call push mov call pop pop mov pop ret mov push mov pushl call pushl call pop pop pop ret pushl call pop ret pushl call pop ret mov push mov push call mov push mov call pop pop pop ret mov push mov push mov pushl call pushl call pop pop pop pop ret mov push mov mov pushl call pop pop ret mov push mov mov pushl call pop pop ret jmp mov push mov sub push mov test jne call mov mov call jmp mov mov mov cmpl mov jne mov lea cmp ja add jmp push mov push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sarl call movzbl movzwl and jmp mov mov sarl mov and movswl shr and test je mov push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push pushl push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop leave ret mov push mov push call mov mov mov call push push mov call pop pop mov test je push call push pushl call add movl jmp call andl mov mov pop pop ret mov push mov sub push mov test jne call mov mov call jmp mov mov mov cmpl mov jne mov lea cmp ja sub jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sarl call movzbl movzwl and jmp mov mov sarl mov and movswl shr and test je mov push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push pushl push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop leave ret mov push mov mov mov and or mov pop ret mov push mov mov mov mov pop ret mov push mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov mov pop jmp mov push mov mov mov mov mov mov mov mov orl pop ret mov lea cmp jne mov push mov mov mov mov mov sub mov pop ret mov push mov cmpl push mov sete mov movb call mov test je lea mov mov lea mov mov mov mov mov mov andl mov pop pop ret mov push mov push mov call push pushl mov movl call mov pop pop ret mov push mov mov mov mov movl pop ret mov jmp movl ret mov ret xor inc ret xor inc ret mov push mov testb push mov movl je push call pop mov pop pop ret mov push mov pushl call pop cmp jne xor pop ret mov mov mov pop ret mov push mov movsbl pushl push call pop pop xor cmp setne pop ret mov push mov mov movzbl pushl push call pop pop xor cmp setne pop ret mov test je push call pop ret mov test je push call pop ret mov push mov cmpl je mov push call cmp je pushl call pop test jns or pop ret xor pop ret mov incl mov mov dec mov ret mov push mov mov mov andl andl mov mov mov mov mov pop ret mov ret mov mov ret mov push mov mov pop jmp mov push mov mov pop jmp ret mov push mov mov mov test je mov mov mov add cmp jae movzbl pop ret mov push mov call mov or cmp je mov push mov call mov pop pop ret mov push mov lea cmp je mov mov mov push mov add pop mov mov mov mov mov sub mov add mov pop ret mov push mov mov mov mov movl pop ret movl ret mov push mov mov mov mov mov mov push mov pop pop ret mov push mov mov mov mov mov mov push mov pop pop ret mov push mov mov mov push mov pop pop ret mov push mov mov sub cmp jae mov pop ret mov push mov testb push mov movl je push call pop mov pop pop ret mov push mov push mov push mov mov mov test je mov cmp jae cmp je movzbl cmp jne mov incl mov decl lea neg sbb and jmp mov test je cmp je cmpl jne push lea push mov call pop pop test je mov jmp mov lea cmp je mov mov call jmp or pop pop pop ret mov push mov push mov mov push mov mov call test je andl jmp mov mov call pop pop pop ret push mov call mov andl test je cmpl jne push call mov pop mov andl test je mov mov mov test je mov jmp add push lea call andl movl movl jmp xor orl testb mov je lea call push pop call ret mov push mov push mov mov xor cmp je cmp jne mov or jne push pop pushl push pushl push call add test jne push pushl mov call mov jmp xor pop pop ret push mov call push lea call mov andl mov mov call mov push call mov test jne test je mov jmp pushl lea push call pop pop cmp jne push lea call push lea push call mov mov mov call push call pop orl lea call mov call ret mov push mov push pushl mov call pop push mov call pop pop ret push mov call mov mov mov xor cmp je mov mov mov mov add cmp jae mov decl mov mov lea mov movzbl call ret cmp jne or jmp mov call cmp jne pushl lea push mov call pop pop test je movzbl jmp movl mov mov mov jmp push push lea call cmpl mov mov jae lea mov add mov mov lea push lea push lea push lea push push push lea push call xor cmp jl xor inc cmp jle cmp jne cmp jb cmpl mov jae lea push push push lea push call add jmp lea cmp mov jne cmpl jae lea mov sub push push lea call pushl call pop cmp jne or push push lea call mov jmp cmpl jae lea sub add mov jmp mov pushl dec movsbl push call pop pop cmp jg movzbl jmp push mov call mov xor cmp je cmp je mov push call cmp jne xor jmp push push lea movl mov mov call mov cmpl mov jae lea mov mov mov lea push mov add push push lea push call sub je dec je dec dec je xor push push lea call mov jmp mov jmp movb cmpl mov jae lea mov sub je cmpl mov jae lea pushl push push push call add cmp jne cmpb je test jne push push lea call jmp mov jmp mov call ret push mov call mov mov cmp jne xor call ret mov mov xor cmp je mov mov add cmp jae decl mov mov lea mov mov mov jmp cmp jne or jmp mov call cmp jne pushl push call pop pop test je jmp push push lea mov movl mov movb call mov cmpl mov jae lea mov add mov mov lea push push push lea push lea push lea push lea push call test js cmp jg cmpl mov jae lea mov sub je cmpl mov jae lea pushl push push push call add cmp jne lea movb cmp jne test jne cmpl jae push push lea call jmp mov jmp cmp jne pushl pushl call pop pop test jne or push push lea call mov jmp mov jmp mov push mov push push push mov mov push lea xor cmp jne cmpl jne cmp jne addl adcl cmp je mov call test je mov or jne cmpl je pushl pushl pushl pushl call add test jne lea push pushl call pop pop test jne mov call mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov pop pop leave ret mov push mov push push mov push mov push mov cmpl mov mov push mov mov je call test je lea push pushl call pop pop test jne mov or je push push push pushl call add test jne lea push pushl call pop pop test jne mov mov mov call mov mov andl andl mov mov mov mov jmp mov mov mov mov mov xor mov mov pop pop mov pop leave ret mov push push mov xor push mov cmp je call test jne xor pushl call pop test je xor mov mov mov call mov mov mov mov pop mov pop pop ret push mov call mov mov movl andl cmpl je call cmpb je mov call orl mov call call ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov sub mov xor mov push push lea push push pushl movb call lea push push call mov xor add call leave ret mov push mov push mov push push push push xor pop div xor lea mov mov mov mov test je mov cmp je mov test jne test jne push call mov pop test je mov push call pop mov test je mov push push pushl mov call cmp jne mov pop pop pop leave ret test je pushl call push call pop pop mov jmp push call pop xor jmp mov push push push mov push push call mov test je pushl mov call push call pop pop mov test jne add cmp jl pop pop pop ret push call neg sbb pop and ret mov push mov push push push mov test je cmpl je cmpb jne mov test je xor mov xor pop pop pop pop ret mov test jne call mov call jmp mov mov mov test jne mov test je movzbl mov xor inc jmp pushl call mov cmpl pop mov je mov push mov call pop cmp jle xor cmp setne push pushl push push push pushl call test je andl push call pop jmp andl call movl or jmp test jne call movzbl movzwl and jmp movzbl mov movzbl and test je push call pop cmp jae mov push mov pop jmp push call pop cmp jle xor cmp setne push pushl push call pop push push push pushl call test jne cmpb jne jmp xor cmp setne push pushl push push push pushl call test jne jmp mov push mov cmpl jne pop jmp pushl decl call mov mov pop ret jmp mov mov incl push call test je call cmpl jb ret mov push mov push mov push push pop cmp je push push call test jne call jmp cmp jne mov jmp push call cmp jne pop pop pop ret mov push mov pushl call pop ret mov push mov pushl call pop ret mov push mov pushl call pop ret mov push mov pushl call pop ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp mov push mov push push mov add mov mov mov mov mov mov mov mov jmp pop leave ret pop pop xchg jmp pop pop xchg jmp pop pop xchg jmp mov push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop leave ret push mov sub push push push cld mov xor push push push pushl pushl pushl pushl pushl call add mov pop pop pop mov mov pop ret push mov sub push push push cld mov xor push push push pushl pushl pushl pushl pushl call add mov pop pop pop mov mov pop ret push mov sub push push push cld mov xor push push push pushl pushl pushl pushl pushl call add mov pop pop pop mov mov pop ret mov push mov mov pushl pushl push pushl call add pop ret mov push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret mov push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop leave ret mov push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop leave ret mov push mov push push push push mov mov mov mov mov jmp cmp jne call mov dec mov imul add cmp jge cmp jle cmp jne decl mov mov cmpl jge mov inc mov mov mov cmp ja cmp jbe call mov imul add pop pop pop leave ret mov push mov mov push mov mov call mov mov call mov mov pop pop ret mov push mov call mov jmp mov cmp je mov test jne inc pop ret xor pop ret mov push mov push call mov cmp jne call mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne pop pop jmp mov mov jmp mov push mov sub mov andl lea xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov leave ret push pushl lea sub push push push mov mov mov xor push pushl movl lea mov ret push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov ret push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov ret push pushl lea sub push push push mov mov mov xor push mov mov pushl movl lea mov ret mov mov pop pop pop pop pop mov pop push ret mov xor call jmp mov xor call jmp mov push mov push mov test js call cmp jl call mov call mov pop pop ret mov push mov push push call mov xor cmp jne mov jmp push mov cmp jne push push call pop pop mov cmp jne mov pop pop pop pop ret pushl mov call push push push call add test jne mov jmp push push push push push call int3 mov push mov push push xor cmp jne call push pop mov call mov pop pop pop ret mov cmp jbe lea push pushl call pop push push pushl call add test je push push push push push call int3 mov push mov push lea push mov call movl mov pop pop ret movl jmp mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push push mov mov test je lea cmpb je mov mov cmp je add push push call pop pop test je xor jmp testb je testb je mov mov test je testb je test je testb je xor inc pop pop pop ret mov push mov mov mov mov cmp je cmp je cmp jne call andl jmp call cmpl jle call decl xor pop ret push push call mov mov cmpl jg movsbl jmp mov mov call incl andl cmp je cmp jle cmp jl call mov mov mov mov movl cmpl je mov push push mov pushl call andl jmp pushl call pop ret mov andl mov mov mov mov jmp movl call cmp je call mov call ret mov mov call cmpl jle call decl ret mov cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call xor inc mov mov ret xor ret push push call mov test je cmpl jne mov test je mov test je andl push pushl call movl call ret xor cmp setne ret mov call int3 mov push mov mov mov push mov add cmpl jl mov mov mov mov add add pop pop ret call xor cmp setne ret mov push mov mov push push mov test je mov test je cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call mov pushl push call pop pop call mov mov call mov mov call mov jmp orl orl call decl call cmpl pop pop jge call andl xor inc pop ret mov push mov mov test je mov cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call incl xor inc pop ret xor pop ret mov push mov push mov cmpl je push push push call cmpl pop mov mov jne call mov cmp jne call mov cmpl jne call mov cmp je call mov cmpl je call mov cmpl jne call mov pushl call pop test je push call pushl call pop pop call mov cmp jne call mov cmpl jne call mov cmp je call mov cmpl je call mov cmpl jne cmpl je call decl call mov mov call mov pop mov pop pop pop ret push pop ret push push call andl mov call jmp pushl call pop ret mov movl call ret push push call andl pushl call pop jmp pushl call pop ret mov movl call ret push push call andl pushl call jmp pushl call pop ret mov movl call ret push push call andl pushl pushl pushl pushl call jmp pushl call pop ret mov movl call ret mov push mov xor sub cmp jne call call mov mov cmp jle push mov push mov mov mov mov lea jmp mov pushl mov push mov add push call add test jne dec add test jg jmp movb incl mov addl cmp jl pop pop mov leave ret push mov call call cmpl je call andl call orl call call mov push push mov call int3 mov push push xor xor cmp jle mov mov push call test jne inc add cmp jl xor pop pop ret mov jmp mov push mov push mov push test jne call mov test jne call cmpl jne cmpl jne mov cmp je cmp je cmp je call mov mov mov lea jmp mov mov mov add push call push call pop pop test je dec add test jg xor pop pop pop ret xor inc jmp push push call mov mov mov mov andl mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl push pushl push call add mov andl jmp mov call ret mov call andl mov mov cmpl jg movsbl jmp mov mov andl mov cmp jae imul mov cmp jle cmp jg mov mov push push push push call add andl andl mov movl movl call mov call ret incl jmp mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne cmpl je pushl call pop test je pushl push call pop pop ret push push call xor mov mov mov cmp je cmp je mov cmp jne testl je mov mov test js lea mov xor inc push test je mov pushl call pop pop test je push push call pop pop test je mov mov mov add push push call pop pop mov jmp mov mov pushl test je call pop pop test je push push call pop pop test je pushl mov pushl push call add cmpl jne mov test je add push jmp cmp jne call pop pop test je push push call pop pop test je pushl add push mov pushl call pop pop push push call add jmp call pop pop test je push push call pop pop test je pushl call pop test je testb push pop setne inc mov jmp call movl mov jmp xor inc ret mov call xor call ret push push call mov testl je mov jmp mov mov lea andl mov push push pushl mov push call add dec je dec jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 mov push mov mov sub test jne leave ret push mov push mov push mov test je cmpb jne mov cmp je cmp je test je cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call cmpl je call mov mov mov or mov mov mov lea jmp mov pushl mov push lea push call add test jne dec add test jg jmp call incl cmpl je pushl lea push pushl push call add jmp cmp jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call cmpl jne xor jmp call incl xor inc pop pop pop leave ret mov push mov cmpl je pushl push push pushl call add cmpl pushl jne push jmp pushl call pushl pushl pushl push call mov push pushl inc pushl mov pushl mov push pushl call add test je push push call pop ret mov push mov sub push mov cmpl je push call cmpl je call lea call cmp je mov cmp je cmp je pushl pushl pushl pushl pushl pushl push call add test jne mov cmpl jne call mov lea push lea push push pushl push call mov add cmp jae add mov push lea cmp jl cmp jg mov shl add mov test je cmpb jne lea testb jne pushl mov pushl push pushl pushl pushl pushl call mov mov add incl mov add mov cmp jb pop pop pop leave ret mov push mov sub mov push mov mov push push movb cmp jg movsbl jmp mov mov cmp jl cmp jl call mov mov cmp jne cmpl mov jne mov cmp je cmp je cmp jne cmpl jne call cmpl je call mov mov call mov push push mov call pop pop test jne call cmp jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call call cmpl je call mov call pushl xor mov call pop test jne xor cmp jle mov mov push call test jne inc add cmp jl call push pushl call pop pop lea push lea movl call push lea push movl call mov mov cmp jne cmpl jne mov cmp je cmp je cmp jne mov cmpl jbe lea push lea push pushl pushl push call mov add cmp jae lea mov mov lea mov cmp jg cmp jg mov mov mov mov test jle mov mov lea mov mov test jle pushl mov push pushl mov call add test jne decl add cmp jg decl addl cmpl jg jmp pushl mov pushl mov pushl movb pushl pushl pushl push mov call mov mov add incl mov add mov cmp jb mov cmpb je push push call pop pop cmpb jne mov and cmp jb mov test je push call pop test jne call call call mov call cmpl mov mov push jne pushl jmp pushl call mov push push pushl pushl call add pushl call mov cmpl jbe cmpb jne pushl pushl pushl push pushl pushl pushl push call add call cmpl je call pop pop pop leave ret mov push mov push pushl mov call movl mov pop pop ret mov push mov push push push call cmpl mov mov mov mov mov jne mov cmp je cmp je mov and cmp jb testb jne testb je cmpl je cmpl jne push push pushl pushl call add jmp cmpl jne mov and cmp jb cmpl je cmp jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl pushl pushl push call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret push push call xor mov xor mov cmp setne cmp jne call movl call or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl call orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl call or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl call orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret mov push mov mov decl js mov movzbl inc mov pop ret push call pop pop ret push push call xor mov xor mov cmp setne cmp jne call movl call or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl call orl cmp jne decl js mov mov mov movzbl incl jmp push pushl call pop pop mov movl call mov call ret mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl call or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl call orl cmp jne decl js mov mov mov movzbl incl jmp push pushl call pop pop mov movl call mov call ret mov push call pop ret mov push mov push push mov push or testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb je call movl call mov pop pop pop pop ret mov cmp je mov test jne test jns test jne cmpl jne push call pop mov cmp jne cmpl jne inc mov decl testb mov je cmp je inc mov jmp mov mov incl and or mov mov and jmp push push call xor cmp setne test jne call movl call or jmp pushl call pop andl pushl pushl call pop pop mov movl call mov call ret pushl call pop ret push push call andl xor mov test setne test jne call movl call or jmp mov cmp je test je cmp jne test je cmp jne mov lea cmp jbe jmp mov and mov push call pop andl push call push call pop pop andl mov test je or lea push pop jmp mov test jne push call pop test jne incl orl jmp orl jmp or mov mov mov mov andl movl call mov call ret pushl call pop ret mov push mov push mov test jne xor jmp cmpl jne call push pop mov call mov jmp cmpl je cmp jb push pushl pushl call add jmp pushl push pushl call add cmpl je cmp jae call push pop mov mov jmp push pop pop pop ret mov push mov sub push push push mov test je cmpl je mov test jne call movl call xor pop pop pop leave ret mov test je or xor div cmp ja imul testl mov mov mov je mov mov jmp movl test je mov and je mov test je js mov cmp jb mov push pushl pushl call sub add add sub add jmp cmp jb test je push call pop test jne cmpl mov je xor mov divl sub push pushl push call pop push call add cmp je mov cmp ja mov add sub cmp jb mov jmp mov movsbl push push call pop pop cmp je incl mov dec mov test jg movl test jne mov jmp orl mov sub xor divl jmp orl mov jmp push push call xor cmp je cmp je xor cmp setne cmp jne call movl call xor call ret pushl call pop mov pushl pushl pushl pushl call add mov movl call mov jmp pushl call pop ret mov push mov cmpl jne call movl call or pop ret push mov test jne call movl call or jmp pushl call pop mov mov and or mov cmp je xor pop pop ret mov push mov push mov mov push test je mov test je cmp je cmp jne and mov cmp jne push call add pop adc xor push call mov pop test jns and mov jmp test je test je test jne movl push pushl pushl push call pop push call and add cmp je xor jmp call movl or pop pop pop ret push push call xor cmp setne test jne call movl call or jmp mov test je cmp je cmp jne pushl call pop andl push pushl pushl pushl call add mov movl call mov call ret pushl call pop ret mov push mov cmpl jne call movl call or pop ret mov test je push pushl pushl pushl call add pop ret int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call pop pop mov pop mov push mov cmp jne mov push call pop pop pop leave ret mov ret mov ret mov push mov xor inc cmpl jne xor pop ret mov push mov xor inc cmpl jne xor pop ret mov push mov xor inc cmpl jne xor pop ret mov push mov push mov test jne call movl call jmp mov test je test jne test je or mov jmp or mov test jne push call pop jmp mov mov pushl pushl push call pop push call add mov test je cmp je testb jne push call pop cmp je push call pop cmp je push push call sar push lea call and pop shl add pop pop jmp mov mov and cmp jne orl cmpl jne mov test je test jne movl mov decl movzbl inc mov jmp neg sbb and add or andl or pop pop ret mov push mov mov call mov xor mov push push mov push push call mov xor pop mov cmp jge mov push push push push call add mov mov mov test jg jl test jae or or jmp mov sar lea and mov mov shl add mov add sar testl mov jne mov mov cltd sub sbb mov mov jmp mov mov mov sub mov test je cmpb jne xor cmp je shr mov cmp jne mov mov jmp push pushl pushl pushl call mov mov mov add mov cmp jne cmp jne push lea push push lea push pushl call test je push pushl pushl pushl call add test jg jl test jb mov mov cmp ja lea test je lea dec cmp jae mov cmp jne lea cmp jae lea cmpb jne mov jmp movzbl movsbl add inc test jne lea sub xor add adc jmp testb je mov jmp cmpb jne incl inc cmp jb mov or jne mov jmp test js call movl jmp testb je mov test jne and jmp sub testb lea je push push push pushl call add cmp jne cmp jne mov lea jmp cmpb jne inc inc cmp jb testl jmp push pushl pushl pushl call add test jg jl test jb mov cmp ja mov test je mov test je mov mov mov testb je inc cmpb jne shr sub sbbl cmpb jne shrl mov xor add adc mov pop pop xor pop call leave ret push push call xor cmp setne test jne call movl call or mov jmp pushl call pop andl pushl call pop mov mov movl call mov mov call ret pushl call pop ret mov push mov sub mov push mov push pop mov mov cmp jne call andl call movl or jmp push xor cmp jl cmp jb call mov call movl call or jmp mov sar push and lea mov shl mov test jne call mov call movl jmp cmp ja mov cmp je test jne cmp je mov add sar mov movsbl dec push pop je dec jne mov not test je and mov mov mov jmp mov not test jne call mov call movl call jmp mov shr mov cmp jb mov pushl call mov pop mov test jne call movl call movl or jmp push push push pushl call mov mov add mov mov add testb mov je mov cmp je cmpl je decl cmpb mov mov lea movl movb je mov mov cmp je cmpl je mov mov inc decl cmpb movl movb jne mov mov cmp je cmpl je mov mov inc decl movl movb push lea push pushl push mov pushl call test je mov test js cmp ja mov add lea testb je cmpb je test je cmpb jne orb jmp andb mov mov add mov mov cmp jae mov mov cmp je cmp je mov inc inc mov jmp mov dec cmp jae lea cmpb jne add mov movb jmp mov jmp incl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpb je movb mov mov mov jmp cmp jne cmpb je push push push pushl call add cmpb je movb inc mov cmp jb jmp mov lea testb jne orb jmp mov mov inc mov sub cmpb mov jne test je dec mov test js inc jmp xor inc movzbl jmp cmp jg cmp jb dec movzbl inc cmpb je mov movzbl movsbl test jne call movl jmp inc cmp jne add jmp mov testb je inc mov cmp jl mov mov mov inc cmp jne mov mov mov inc sub jmp neg cltd push push push pushl call add mov sub shr push pushl push pushl push push call mov test jne call push call pop orl mov cmp je push call pop mov cmp jne mov jmp mov mov xor cmp setne add mov mov jmp test je cmpw jne orb jmp andb mov mov add mov mov cmp jae mov movzwl cmp je cmp je mov add add mov jmp mov add cmp jae lea cmpw jne add mov push jmp mov jmp addl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpw je push pop mov mov mov mov mov mov mov mov movb jmp cmp jne cmpw je push push push pushl call add cmpw je push pop mov add mov cmp jb jmp mov lea testb jne orb jmp mov mov add sub mov jmp call push pop cmp jne call movl call mov jmp cmp jne andl jmp xor pop pop pop leave ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je mov cmp sbb inc jne call andl call movl jmp push call pop andl mov testb je pushl pushl push call add mov jmp call movl call andl orl movl call mov call ret mov push call pop ret jmp int3 int3 int3 int3 int3 int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp movq movapd movapd movapd psrlq movd andpd psubd psrlq test jne cmp jl psllq cmp jg movq fldl ret ucomisd jnp mov sub mov mov add mov mov mov call add fldl ret movq psllq movapd cmpltpd cmp jl cmp jg andpd subsd movq fldl ret fldz ret cmpltpd orpd andpd movq fldl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je push mov sub and fstpl cvttsd2si leave ret cmpl je sub fnstcw pop and cmp je push mov sub and fld fsts fistpll fildll mov mov test je fsubrp test jns fstps mov xor add adc mov adc jmp fstps mov add sbb mov sbb jmp mov test jne fstps fstps leave ret int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret int3 int3 int3 int3 int3 int3 sub fstl call call add ret lea call push fstcw mov je cmpw je call test jne fsqrt cmpl jne mov lea jmp test jne test jne cmpl jne jmp call jmp test jne cmpl jne and je fstp fldt mov cmpl jne mov lea call pop ret int3 int3 int3 int3 int3 int3 cmp jae cmp jae shld shl ret mov xor and shl ret xor xor ret mov push mov cmpl jne andl pop ret pushl call mov movl pop ret mov push mov sub xor mov mov cmp je pushl call jmp mov mov mov push cmp jg je cmp jg je push pop sub je dec je sub je dec je sub je dec je sub jne movl movl mov fldl mov mov fstpl fldl lea fstpl push fldl fstpl call pop test jne call movl jmp movl mov fldl mov mov fstpl fldl lea fstpl push fldl movl fstpl call pop jmp movl movl jmp movl mov mov fldl mov fstpl fldl fstpl fldl jmp mov movl jmp movl jmp mov movl jmp movl jmp sub je dec je dec je dec je sub je sub jne movl jmp movl jmp movl mov fldl mov fstpl jmp movl jmp movl jmp fld1 mov fstpl jmp movl movl jmp add cmp ja jmp movl jmp movl jmp movl jmp movl jmp movl jmp movl jmp movl jmp movl jmp movl jmp movl mov fldl mov fmull fstl fldl mov fstpl fldl fstpl lea fstpl push movl call pop test jne call movl fldl fstpl pop leave ret nop push scas inc add inc add inc add add inc add scas inc add lods inc add lods inc add scas inc add call in mov neg sbb and mov pop ret push call mov xor ret mov push mov push push push push mov push pushl call fldl pop pop movzwl mov mov and push push fstpl cmp jne call pop pop test jle cmp jle cmp jne fldl push push push fstpl push call add jmp push push call fldl pop pop jmp fldl push faddl sub fstpl fldl fstpl push push jmp call fstpl fldl pop fldl pop fucompp fnstsw test jp push push call fldl pop pop jmp test jne fldl push sub fstpl fldl fstpl push push call add pop pop leave ret int3 int3 int3 int3 int3 int3 cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fwait mov shl sar rol mov and xlat movsbl and mov add add jmp cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fxch mov fxam fstsw fxch mov shl sar rol mov and xlat mov shl sar rol mov and xlat shl shl or movsbl and mov add add jmp call fxch fstp ret call jmp fstp fstp fldz ret fstp fstp fld1 ret fstpt fldt testb je movb ret movb faddl ret fxch fstpt fldt testb je movb jmp movb faddp ret fstpt fldt testb je fxch fstpt fldt testb je movb jmp movb faddp ret fstp fstp fldt cmpb jg movb or ret or je fchs ret int3 int3 int3 int3 int3 int3 push mov add mov mov mov mov mov jmp push mov add mov fstpl mov mov mov mov mov lea lea push push push call add fldl cmpw je fldcw leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fld frndint fsub fxch fchs f2xm1 fld1 faddp fscale fstp ret mov and or mov fldcw ret test je mov ret faddl mov ret mov and cmp je fldl ret mov sub or mov mov mov shld shl mov mov fldt add test mov ret mov and cmp je ret mov ret cmpw je fldcw pop ret mov cmp je and je fstsw and je mov call pop ret fldcw pop ret sub fstl mov add and jmp sub fstl mov add and je cmp je mov cmp je and jne fstsw and je mov cmp je call pop ret call pop ret fldcw pop ret fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jae fmull jmp fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jbe fmull jmp mov push mov push push fldl frndint fstpl fldl leave ret mov push mov push push and add push mov mov mov sub mov xor mov mov movzwl push mov mov dec push mov je dec je dec je dec je dec je dec dec je dec jne movl jmp movl jmp movl jmp movl jmp movl jmp movl push lea push pushl call add test jne mov cmp je cmp je cmp je andl jmp mov fldl and fstpl or mov push lea push push pushl lea push lea push call add push pushl call cmpl pop pop je cmpl jne push call pop test jne pushl call pop mov pop xor pop call mov pop mov pop ret int3 lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp mov jmp mov add jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp pushl call pop ret mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov xor call mov jmp lea jmp mov lea mov xor call mov xor call mov jmp lea jmp mov lea mov xor call mov xor call mov jmp mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov and je andl lea jmp ret mov lea mov xor call mov jmp int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call pop ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov and je andl mov jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov and je andl mov jmp ret lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov push mov push call add ret mov lea mov xor call mov jmp int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov add jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl lea jmp ret mov and je andl lea jmp ret mov and je andl lea jmp ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp mov lea mov xor call mov jmp mov and je andl mov add jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl mov add jmp ret mov jmp mov lea mov xor call mov jmp int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov and je andl lea jmp ret mov and je andl jmp ret jmp mov and je andl lea jmp ret mov and je andl jmp ret jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov and je andl mov jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp mov and je andl mov jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov and je andl mov jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp lea jmp lea jmp mov and je andl lea jmp ret mov and je andl lea jmp ret mov and je andl lea jmp ret lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp jmp jmp jmp jmp jmp jmp jmp jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov and je andl mov jmp ret mov lea mov xor call mov jmp int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and mov ret lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call add mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp mov and je andl lea jmp ret mov and je andl jmp ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp mov lea mov xor call mov xor call mov jmp int3 int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 lea jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 mov and mov ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov and mov ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp jmp jmp jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and mov ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov and mov ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov and mov ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov and mov ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and mov ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov and mov ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov and mov ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov and mov ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov and mov ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 mov and mov ret mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 mov and mov ret mov and mov ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov and mov ret mov and mov ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and mov ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and mov ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov mov pop ret int3 int3 int3 push mov push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov mov call pop ret int3 push mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov mov call pop ret int3 push mov mov call pop ret int3 push mov mov call pop ret int3 push mov mov call pop ret int3 push mov mov call pop ret int3 push mov mov call pop ret int3 push mov mov call pop ret int3 push mov mov call pop ret push call pop ret push call pop ret push call pop ret push call pop ret push call pop ret mov call push call pop ret mov call push call pop ret mov push push call mov mov lea call push push mov movl call push call pop pop pop ret push push push mov call push call pop ret mov jmp mov call push call pop ret push call pop ret int3 int3 int3 int3 push mov sub mov call mov pop ret movl mov jmp movl ret movl ret movl ret mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp sbb inc add add add aas inc push bound pop je jo imul add add sbb inc add add add aas inc push pop pop outsb outsl outsb pop jb je pop outsl bound arpl je inc inc add repz add add add aas inc push je jo pop imul add add add add add add add add dec add mov mov mov mov mov mov mov mov mov jg jg jg jg pusha dec add mov mov mov mov mov mov mov pusha dec add add add add add inc mov add add (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add sbb add add add add add add add add add add add or add or add or add or add or add pop add add add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add or add add add add add adc add push add add add add add add add add add or add insb add add add add add add add sbb add jb add or add push add add add add add add add add add add add add add xchg add add add add add add add add add cmpsl add add add add add add add add add add add add add add pop add or add or add or add mov inc add inc add add add add jg add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) out jg add add add adcb add add add add test inc add add add add add add add add add add add add add inc add add add inc add add add inc add incl push add add add add add inc add add add add add dec incl or add inc incl adc incl sbb add xor inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add incl and add add inc add add add inc add incb add add incb add add add add add add add add add add jne add jae add (bad) (bad) (bad) incl add add add add inc add add cld add clc add hlt add lock in add in inc add add aam inc add add mov add test inc add inc add inc add inc add inc add inc add add inc add inc add add add add inc add add inc add add sub inc add inc add add or inc add add cld add call add or add add add add add add int3 add les inc add inc add inc add inc add add inc add add inc add add and inc add add adc inc add add add inc add add lock call add fadds inc add add enter mov add cwtl add mov inc add add addb add add add inc add inc add inc add add adc inc add add hlt incl int3 incl mov add add add add arpl loopne dec add arpl loopne dec add arpl add add add add js dec add cmova jo inc add adc dec add dec add dec add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add cmpsb inc add cmpsb inc add cmpsb inc add cmpsb inc add cmpsb inc add cmpsb inc add cmpsb inc add cmpsb inc add cmpsb inc add cmpsb inc add add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add arpl addr16 insl outsb outsl jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add arpl addr16 insl outsb outsl jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add add movsb add add jns and add add add cmpsb fild add add add add add add add cmp add add mov add cmp add inc incb add add add mov add cmp add inc incb add add add mov in call add add add add mov add add push ficompl and pop fisubrl xor adc add xor incb add add sbb add add loopne pop add add add adc add add add add add add add add add inc add adc add add and add (bad) (bad) (bad) (bad) in adc add add cld (bad) pushl add add add incl add addb add add add add add add add add add add add add mov add add add add add add add add cli or add add add add or push ret cmovo add add add add adc add add add adcb add add add mov add add add leave sbb add ret inc and sahf mov sub inc rcrb and sbb addl xlat xchg inc push add inc stc mov adc mov decl js roll (bad) loopne jmp xchg test mov cmp inc mov popf sti jmp stos push inc mov repnz test pop stos clc scas adc (bad) inc jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov or addl cmpsl xchg cmp xor dec cmpsl in cmp sahf xchg pop lcall lock mov popa sar mov fsubs stos xchg clc repz mov subb fwait xchg and and add int3 int int3 int3 int3 int3 int3 int3 sti aas jno or mov mov cmp dec lea aas ret shrl mov icebp aas rorb and cmpsl out aas inc cmpsb mov insb scas add aas xor aad mov std std into popa test ja stos in das dec pop loope les aas xchg les jne int mov addr16 push mov xchg aas and (bad) loop mov jp popa push pop sarl jl mov das lea mov inc aas and movsl jmp jg sub jge mov inc rcr push arpl int3 and call cmp jp and cmp mov cmp std xlat cmp mov sbb add movb aaa fldt cmp jno shlb (bad) out dec nop pop cmp fisubl xor push lahf inc pop mov sub dec in ss push scas into imul faddp jge call mov xchg cmp push andl dec dec gs std orl in ficomp frstor add sbb inc add add add aas inc push imul pop popa jb jne outsb je jae fs inc add sbb inc add add add aas inc push insb outsb addr16 pop gs outsl jb jae fs inc add sbb inc add add add aas inc push outsl jne pop outsl pop jb outsb addr16 jae fs inc add sbb inc add add add aas inc push gs outsl jb arpl outsl jb inc jae fs inc add add sbb inc add add add aas inc push pop inc outsb gs arpl jb outsl jb arpl outsl jb inc jae fs inc add add repz add add add aas inc push pop dec outsl jae jb popa insl pop gs outsl jb arpl outsl jb inc jae fs inc add sbb inc add add add aas inc push pop push jns je insl pop gs outsl jb arpl outsl jb inc jae fs inc add add test inc add inc add and hlt and pushf and call add add repz add add add aas inc push pop dec outsl arpl jo insb outsl arpl gs jae fs inc add add (bad) (bad) (bad) incl add add add add add jg add jg add jg add add add add add add add jg add add xor add xor add add add jg add add add add add inc add add add nop cmp add jg add jg add add add add add add add jg add add xor repz add add add aas inc push aas and popa jae arpl imul push aas and push jb imul fs inc inc jae fs inc add add repz add add add aas inc push arpl arpl pop bound gs jae fs inc add sbb inc add add add aas inc push aas and outsl fs inc inc inc dec inc jae fs inc add add add add add add add jo jb addr16 sub xor cmp sub and and dec and popa jne gs and outsb jae and and imul popa jb sub dec je and dec and inc dec push push and push inc push push inc inc add sbb inc add add add aas inc push bound pop gs gs imul inc inc add and inc add and inc add inc add add inc add inc add inc add and add and add inc add and add inc add inc add inc add inc add inc add and aam inc add inc add inc add inc add inc add inc add add inc add inc add and in inc add and mov and add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jp addb test loopne mov jmp mov jecxz (bad) in push inc push pop aam fmuls dec mov sqrtps test stos loopne xor dec mov jl test jecxz xchg sbb fildll in xchg mov push ss adc sbb adc and data16 in xchg sbb and sarb cmp cmp gs inc inc inc inc enter mov leave and inc adc clc clc clc clc cmpsl es (bad) fsts or js fsubl fmull arpl pop aad lea imul inc stos ljmp arpl iret add fcmovb rol and mov pop push jp pusha pusha mov cmp add pop cmpsb pop pop or ficompl push push push push push daa sbb addr16 lock mov mov xor rcl sub pop (bad) lock mov (bad) xlat lret sub rol icebp icebp cmpsl lock hlt mov inc adc imul ret repnz xchg xchg loop out std loope aaa test fcmovnu fisttpl pop fmuls out out addr16 pop lods rep cs mov lret lret cmp (bad) mov sbb xor xor int3 mov mov jl adc xchg xchg xchg (bad) (bad) ja mov mov jno fistpll xor out or mov mov inc push fsubrp imul push sbb lahf fst rcrb cwtl mov jge aad mov std push aad popa inc dec hlt adc js pop movsl pop pop pop mov mov std jle mov or lret lret xchg cmp or adc mov jle pop iret (bad) mov push pop or lcall mov lret mov rclb add push fidivr pop shrb push test add add inc mov push sbb es sbb fistpl outsl gs daa sub in push push cmp push push push xor ss ss pop add xchg xchg mov xchg imul leave leave leave mov push cmp lret (bad) (bad) outsl fcmovnbe pop xchg sbb and dec sub push jne ja ja insb dec cs imul add dec and jge jg jle pop push pop jle das xor nop stos dec hlt int sub ds xchg imul sbb fsubrs clc lock (bad) jae xchg popf xchg mov mov outsb cld (bad) vpaddsw jns in cmc std aam (bad) aam stc cld hlt clc stos ret mov xlat xchg xchg xchg mov loope in xchg sub add push cmp fcmovu fcom rcr fcmovu or or mov aad aam (bad) (bad) (bad) les nopl push pop push aas (bad) or das sub add sahf aas cmp sub ds das sbb sbb xchg xchg aam xchg push adc inc inc dec stos stos stos mov out repnz jmp cli int3 push test pop jnp and dec dec dec adc fiaddl add loop push push inc inc inc or jg push push push in icebp lock mov loopne shlb fcmovu mov cmp dec dec mov mov mov inc inc inc ret ljmp pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound popf pushf pushf bound fstp fsubrl add push mov loop in movnti popa popa outsb fstps sub in push rcr fcmovbe outsl jle insb inc lret hlt jg (bad) mov inc enter push xchg xchg (bad) cmp add rcll push insl push test bound divb adc (bad) sti sti (bad) mov mov iret out fwait mov fldcw js sub (bad) sub gs dec jge push insl lods jmp pop pop outsb scas scas in and dec dec aam stc loope dec push xchg xorb fiaddl xchg sub fbstp push add jne jne into ljmp sbb jp (bad) ret xor nop nop xchg pushf insb xor push add jnp lock (bad) jo insl (bad) into into xchg iret or adc pop data16 inc inc inc adc xor stos mov ret and fcoms ss (bad) (bad) (bad) inc add cld adc mov popa popa loop push lods daa push adc insl arpl fcmovnu test mov (bad) (bad) lea div mov mov jbe adc mov cltd sbb test jge rcrb cmp inc psubq ret adc in fwait pushf sbb loopne xor dec dec sbb loop loop push out push (bad) shrb rol dec les fisubrl jp sbb imul inc jb mov cmp mov out xor arpl imul pop (bad) mov jbe push movsl loope jecxz and scas mov data16 ljmp and (bad) repz xchg sbb push nop addr16 pop mov mov loope mov stos cld add jnp adc test mov out or sub sub dec mov in ja das aaa mov aaa ss stos in in pop adc clc clc mov or sahf sahf es in xchg xchg adc in mov mov scas pushf inc into xchg outsl in mov ss pop sbb sub aad mov (bad) out insb in jbe mov mov or ret (bad) gs test fldenv fsts pusha stos adc lret mov test ljmp das ficom mov shrb mov mov inc (bad) std cli enter sub sub test loopne mov xor inc or or adc push mov xor cs imul add inc addl inc jge inc dec adc add add mov cmpsl cmpsb rol std stc pop cli decl ret mov jne aam outsb mov pop pop push lahf fidivl mov add adc xor fidivrl fdivr mov mov pushf je mov mov push sarl push pop adc push scas mov sbb xlat xchg xchg subl mov (bad) les fist data16 imul cli jmp mov (bad) pop dec or hlt jg cmp adc lea fsubl cmpsb out lcall pusha xor (bad) pop or rcrl daa push fstpl je mov inc mov xchg xor inc or vpsubq xor cli rcll scas rorb scas or enter in dec mov xchg aam push std jmp movntq out inc lret mov pop pop xlat xchg dec int add adc addr16 fistpl pop and xor adc aad or dec push cmpsb cmpsl loop aas stc shl and movsl (bad) xor mov jns,pn repnz xchg test arpl (bad) mov mov (bad) inc dec (bad) mov jnp,pt push jae add adc jg mov push mov push dec mov push fstl pop sbb add cmp mov lea (bad) popl and loope (bad) pop dec jne (bad) jo scas dec jno add jns movsb dec das cmpsb jmp jno add bound das daa push add in gs addr16 xchg std jo xor jne mov sub xchg out xchg xchg sbb or hlt popl sub mov int xchg nop addl add mov mov popa daa daa daa cmpsl fcomp fisubrl pop ljmp mov and test lcall push cwtl mov jecxz pusha push xlat and jp bound jae cmp bound adc and test adc jmp nop cwtl repnz push inc mov jb or mov or daa push arpl mov mov mov out sub xchg js incb inc rolb aaa iret mov (bad) orl mov mov mov lods mov pop fnstsw push icebp je rol aaa fmul dec xor (bad) loopne or jno cmp rol dec outsl addr16 and mov loope fs mov xchg fwait adc pop sbb addl subl xchg sti cld jno adc lret xor xorps orl and mov push roll pop push lock pushl aaa mov (bad) mov pop mov or jo sbb lods pop add pop jne sub mov negb push loop cmpsb xchg inc int js mov mov es sbb pop cli mov jnp push pop jge xor inc mov xor and xor cmp lret inc add mov add rcl push xchg xchg push (bad) jge or push rcl adc in insl sub sub scas lods xchg in iret sbb sub jl and ljmp mov ret rol roll xchg xchg cwtl loopne icebp scas lock inc and out and sub das xor and xor xor ret pop dec les addr16 sub (bad) push mov int3 xor (bad) out push dec mov sbb jbe jbe pushf loopne (bad) mov mov dec pop pop sub subl mov (bad) enter jnp outsl data16 cmp imul inc (bad) mov rorl sbb dec add mov push stos fisub xor je,pt fwait mov sub cmp push pop push push in and scas mov movsb daa pop push push movsb movsl ror fwait xchg mov add cli pop data16 dec adc lret lods lods add repz dec sbb shr and cmp rclb push ja jnp xchg hlt jle push xchg xlat xchg adc mov (bad) xor cmp lds sbb pusha mov pop dec movl test loop aad mov lods movsl push or rcr push outsl pop mov adc cmp add xchg fwait out lods lods in xlat fwait mov rcl pop adc inc lret rcl pop lcall mov js or push mov cmp lret or out push xchg inc mov lds or cmp lcall dec mov clc pop cmp jae lret aaa cmp sbb adc (bad) and addr16 dec test and test adc iret dec mov cmp sbb add dec (bad) fsubrs (bad) scas ljmp out cmp (bad) popa arpl adc hlt mov cltd adc mov xor jp add test and imul sbb not rcl xchg addr16 rcll (bad) fxch dec aaa dec dec xor stos stos stos stc scas pushf push add in mov test sub addr16 or jl pushf arpl sbb loope rcl pop fldlg2 in vmovq jae mov xchg xchg mov lock and push push stos push stos jmp fld dec pop push out mov xor test adc mov cli jns push adc fwait adc add fsubrp adc push sub test out clc in push jecxz mov xchg mov aam fistl orb inc dec std in loop pop pop xchg aaa mov mov lahf sub (bad) rorl jl lods arpl or in cmpsl es in lahf xchg lret and movsl movsb insl inc jno daa sbb sbb (bad) or fstps out sub mov mov add or push clc clc clc jl mov gs and ljmp push cmc repz add (bad) call push xor mov sahf mov mov jl dec cmp mov dec adc data16 lock cli cli jno cs nop lahf sbb fs pop and or adc pushf sbb cmpsl scas sub les nop xlat repz lret cmp add ljmp inc mov push push orb mov xor adc rclb das daa cs sbb cmc lock jo pop add fistl jbe mov xchg xchg out jnp or fsub sarb mov push adc mov xor into xor inc mov loope ficompl mov mov xor in in mov movsl movsl movsb jg (bad) pop push mov inc inc fucomp xor xor jno rol push push push insb push dec xchg xchg mov mov xchg mov mov cli sub sub sahf leave in call ds out or movsl mov test cmp cmp mov ss repnz int hlt jb ss pushf mov xchg test pop jns xchg and inc js xchg mov push push lret sbb sub sub fiaddl je addr16 loopne xchg push jmp adc mov mov mov adc mov sub mov and cmp cmp inc inc adc sahf lcall test xchg adc sbb inc leave (bad) lahf xchg (bad) xlat in adc cmpsl mov mov push add fmull add jo leave (bad) daa sub dec pop dec push je into into into out out arpl lret pop test jge sub ss aam aad jecxz out xchg mov pop pop cmp aam call xor mov cmp mov jg out mov aad daa mov das cmp cmp xchg test fstp loopne (bad) (bad) (bad) ja (bad) fstps mov mov and daa daa scas stos mov or ret fs test sbb fstpl dec roll out stos imul push dec or pusha pusha pusha popa popa ss sbb sbb icebp andl das push (bad) lret inc mov push in repz sub push sbb sbb pop call in out loope iret xlat sub dec pop xor xor mov add mov nop inc inc lret mov mov in in pop pop popf adc mov test add add jmp mov mov icebp and jno jecxz jbe or add push push or or js loope sub sub pop or addr16 push (bad) (bad) fs cltd pop jp mov int jle loope ror dec ja (bad) iret dec mov stos es cwtl cwtl cwtl fcmovnu sbb mov add in aad xlat (bad) jecxz fimul fwait scas out das aas inc cwtl sbb cltd xchg loopne imul sub aaa cmp cmp cmp dec or leave (bad) popa push pop jbe movl and push xchg push push push fcomps cmp arpl xor and test loop lea cwtl xchg rcl arpl fwait push sub xchg sbb rcl pop (bad) push fcmovnu mov orl inc vcmpps stc loope call rcrb sbb addb orl xor rolb fistpl xor stc jo inc addl sbb sbb pusha jmp sub mov in aam aam data16 mov mov jle fistp pop stc stc jmp jae cmp dec dec inc loope stc aad jno push push cmc lock push push sbb dec int push dec inc lret iret (bad) mul imulb jmp fildl (bad) incb mov jbe inc inc inc test xchg ret lock out xor adc scas lcall std cmp push and mov fwait xchg or int lcall leave mov aam push mov (bad) xlat shl imul pop sub gs or inc inc sbb xor push mov fcmovne clc push mov push fldl ds push decb mov mov int jns mov (bad) jl stos sub cli ja xor mov sahf movsl xchg sbb (bad) sbb jle dec lea fldcw adc aam lret les jmp adc movsb dec pop pop and test cmp movsl (bad) aaa hlt sahf jbe add lea das test sub ret rol mov cmpsl mov dec and lock cld clc test add and fs lcall cmp pop sbb dec mov xor (bad) insl insl out aad adc pop xchg out popa xor mov add push mov and mov call jg pop pop aaa push pusha push (bad) cmpsb test fnclex lahf xchg push adc sti mov push loope push ffreep dec rorb xchg sbb xchg rcr mov jl pusha inc inc aaa cmp xchg or outsb inc jg into mov add lret pushf mov inc addr16 sbb dec dec pusha fs jns mov addl (bad) (bad) pop adc mov mov mov (bad) enter cmp sbb ret div notb mov inc dec iret push (bad) ds dec into (bad) jbe repz sbb pop inc test cmp cmp sbb push cmpsl test sub cltd repz pop dec dec rol lret outsb sub pop pop adc cmpsl (bad) xlat mov fcoms call push pop adc push lea js,pn nop (bad) dec mov sub xor movsb in fsubs lret div jg pop or jae roll lods call adc adc es test enter or xchg xchg inc push pushf pop out insb xchg insb sbb iret adc or mov (bad) mov repnz lcall fcomps adc cwtl and add (bad) dec mov out mov xlat mov lret aad aad out xchg iret daa lcall adc and lods daa and (bad) aaa xchg push xchg outsl xchg cmc loopne in test adc jl pusha pop sub loop aad loop inc dec insb jg or mov outsl in cld mov sahf xchg jae mov adc dec dec movsl cmp stos movsb movsl das imul inc sbb addr16 xchg mov fdivr jmp add in cmp push xchg gs mov (bad) push pop xlat adc aam out scas inc inc je pop icebp test mov push pop adc push out jns mov pop cwtl dec or xor sub fs inc gs cmp insl jl jl ret and push mov jmp mov repz pop mov out gs mov jae xor inc cltd out out lahf dec ret fistpll test inc inc push xchg cs pop push pop mov andl push mov pop jmp dec imul inc xchg jge mov enter or jne mov pop dec mov push pop add pop dec jg test pop das fsubl fcompl cwtl pusha mov out ljmp (bad) mov out pop idivl xchg xchg xchg in pushl mov cmp pop jle ss mov xor xchg mov cmpsl movsb xchg xchg push xchg adc mov add add xchg and inc inc (bad) fmull pop xchg push push push das mov call add mov out ret push sbb pop pop mov rcl adc lret push push add adc inc jg daa gs sub xor dec mov jmp mov aad clc std std hlt mov mov xchg xchg or push lahf ret pop push adc or jle loope orl push add mul fildl xchg xchg mov mov addl cmpl int3 lret and out loope sbb mov lods loope push arpl icebp in outsl jg orb cvtdq2ps ds outsb outsb out dec mov cld repnz jae xor and loope jmp mov int enter and (bad) inc inc enter (bad) out (bad) mul in mov mov xchg adc loop cmpsl mov (bad) pop pop mov mov lret xchg fcoml clc test and in test inc push rcll enter std stc lea push inc dec fwait mov (bad) jo insl fs jnp rol ret rcr inc dec dec (bad) (bad) in aas xor rorb jl jl cld repnz jne adc mov fbld xor int mov (bad) in add ret dec mov jle,pn repz or cmpsb stos and jb dec mov stos cmpsb cmpsl cmpsl cmpsl cs daa mov mov cmp push es (bad) mov scas cli jmp sbb jns aas adc sbb xor mov fs stos sub pop sub stos out test sahf mov in test pop pop inc pop mov cs or test aas jp add mov mov cmp insl insb push push push jp adc gs and mov mov lock pop arpl jbe lds (bad) (bad) mov lods out out out cld loopne je addl xchg stos inc rcl iret lret aas and aas jg pop mov stc adc mov movb adc mov adc fdivp rcl (bad) xor insl inc pusha pusha and addb cltd (bad) mov and xor adc in sub out lods lods daa pusha js mov and lods lods lds rol fadd in sub bound js rol (bad) bound and and and and cmp jge pop out icebp inc aad test mull out xor cld mov test fcmovnu mov sbb inc inc inc push popf call dec subb aas xchg xchg pop pop (bad) or leave les jns cmc jl movsl lcall lods sub pop pop pop popf jmp or lret mov mov lock popf xchg sbb xor (bad) (bad) jmp xacquire sbb xchg mov sti mov sbb xor enter inc xchg push xor je dec ffree ret xchg (bad) rcl test mov outsb jp push pop pop test insb cs lds nop pop mov mov mov dec add out inc (bad) sbb inc test push inc jno cltd daa mov mov adc int3 or sub in in scas scas ljmp (bad) in mov outsb sub jns cmp jp fnop movsb pop invd dec dec ret cmpsb pop dec inc mov or vpsrlw lock scas subb mov outsl nop adc and mov adc cmp or les and adc adc pop sbb test pop pop add sub cwtl adc int3 mov cltd cltd pop pop mov std std cld jne pushf xchg xlat xlat pop inc cmpsb scas in in add add (bad) int3 int3 and mov xor push cmc gs cld loope xor push test xor hlt icebp std fsubr in add int lcall jmp mov enter mov hlt sbb sbb sbb es or and push fcmovnu lret fcmove out jp cmp (bad) mul loopne pop jp add inc scas pop mov fs mov out push (bad) mov push pop pop psubq out out rol add in repz lock xor daa daa pushf cwtl lcall jg ja aaa aaa xchg mov gs adc (bad) mov lea dec outsb jp jnp sahf lahf push ds push push sbb pop push aam pusha push push push dec les popf adc mov repnz pusha nop cltd xchg std add bnd sub sub mov ret ret ret ret movsl sub test or pop dec pop xor sbb jp sub and cli ja lcall mov hlt out ljmp jp and jecxz xchg sbb popf test imul ljmp pop jg test pusha mov je out inc popaw cmp daa and adc mov outsl inc push mov jle cmpsl fidivl ficomp incb cmpxchg jge mov adc sbb call xchg push adc jecxz clc push sbb sub add pusha jmp jp add pop push cmp imul xor lds pop sbb inc imul mov (bad) ss and sbb adc xor sub push pop push xor xchg xchg jnp pop cmpsl pop xor add mov clc std or cmp mov insl xchg adc xchg aaa das mov mov pop fcmovbe shll adc jo je cmp mov cmp add sbb sbb popf int sbb jl leave and sbb sbb enter add out femms push push scas xchg test int pop xor xor xor cld adc xor in add mov or fisubl cs cltd cltd cltd out mov (bad) movsb movsb movsb (bad) or nop insb jl pop in into cvtdq2ps jbe mov movsb pop movsb int3 push jle fcoml int3 inc mov dec lret mov push jmp or or out push (bad) pmaxsw push notb mov enter inc dec outsl addr16 in hlt cli and cmp xchg lahf mov in aad js repnz adc (bad) in cmp adc dec inc mov je dec ds dec pop sub cmp sbb add jge,pn into out out xchg jae jae jns,pn fwait lahf idivl cld std rcr xor push mov inc pop push or dec mov mov pop inc pop pop lock jns int into push inc lock cmpsb dec mov jbe jns push pushf lea push pop mov aas bound loope loopne mov push push push xchg mov andb subl (bad) enter mov xor pop addps scas mov and mov out push ret loop pop push ds aam sub push dec outsb jle jg nop xchg iret or mov data16 inc dec inc ret out out div push or mov popf sbb movsb mov jle and pop inc inc xchg xchg xchg pushf sbb push adc icebp inc mov jecxz mov int xchg xor fisubr sub insl pop cmp jns jle jbe cmp jge jl lock sub std hlt jmp push repnz mov aas push push popa sahf lods fs adc repz dec mov mov sti xchg lret out jp jbe into (bad) repnz (bad) aad fnsave loope popf loopne nop inc jno rclb popf lods mov dec jecxz insb jmp enter nop (bad) xchg mov adcb lock (bad) icebp icebp pusha out xchg int push dec pop mov aam pop (bad) or into (bad) cmp mov stos and sbb push loop rcl mov sbb jno sbb dec and and mov rcrl repz or sbb sbb hlt pop mov hlt hlt hlt movsb lods xchg stos ret cmpsl movsl out mov pop stc sbb fcomps sbb jo dec test xor jl imul ret loope xlat pop mov adc mov fcompl xchg std cld xchg pushf sahf sahf sahf adc cmc adc inc cmpsb (bad) scas stos ret mov rol fisub idiv (bad) ficompl ljmp push cmp xor sub (bad) jbe push fistp leave hlt movsb mov sbbl push (bad) mov out mov enter mov sub fisubl mov (bad) or push sbb inc mov repz xchg lea pop jecxz mov or js cmp mov mov fstpl mov test enter push aas outsl jge rcr cli ljmp enter sti (bad) sbb int3 ret hlt or aad add inc outsb movsl lods mov pusha fistp mov pop imul js push pop into ficoml (bad) incb and sub stos ss stc xchg push or mov int3 fwait adc cmpsl lods imul push cmp sahf mov ds sbb aaa dec dec (bad) int mov cmp sbb xor lcall xchg shrl dec dec dec adc movl push scas mov int rcrl (bad) sub ja pop rclb scas sub jne cwtl cwtl cwtl in rolb (bad) fdivs push add mov outsb xchg inc ret insb xchg xchg push icebp fwait lcall ret fisttp push or adc fcmovnu idiv add leave int inc scas test dec mov inc dec pop push inc jne cltd sbb inc or xor sbb fistpl pop inc inc inc sub (bad) cmc daa shlb and lods outsl mov push inc data16 xchg sti (bad) mov or data16 jp add add adc ficomp outsl outsl or ds ret fcoms loop or stc mov lods mov xor jbe dec cmp cmp and push push popf arpl mov add imul int3 lcall inc adc mov outsb pop pop (bad) (bad) test cwtl mov sbb add je fcomps adc cmp cmp in mov int3 or imul (bad) mov aam clc push or icebp imul aaa mov mov xchg xchg xchg (bad) incl or xchg inc mov lock aam mov xor adc dec adc out out jecxz fs jl jne cmpsl scas mov cmp dec sbb push out mov mov push cmp mov je push add add add repz push cld mov sbb (bad) or lods inc inc jecxz addr16 inc (bad) jmp ret rol stos sub adc pushf lods mov hlt or fs adc test daa pushl xor xchg pop xlat pop add in mov mov xchg fwait lcall jp sub inc dec cmp or mov imul cmp mov test add shrb mov lds push cwtl or sbb div cmpsl dec fistl adc je daa lods jmp sub adc rep repz ret xlat pop cmp cmp adc daa lods stc add sub nop xchg mov clc mov cwtl aam loop or lock dec xor (bad) pop aad mov jo (bad) or mov xor add mov test sub jbe xchg in popa push xor jle ret jmp push test ss pusha xchg xchg insb push adc icebp jae mov mov inc scas popf push shrl pop inc enter mov mov cs push adc shr es cmpsb dec dec inc jns jo cli or dec push push push dec or into mov pushw sbb sar (bad) ljmp mov out push cmp push mov and push sbb dec add rcll scas pusha push scas scas mov cmp or jl pop inc ror out and not (bad) (bad) pop lahf jbe jno push imul jge and movsl sbb jp sub mov cltd in and in imul or xchg cwtl sub and leave or sbb stc fnop ja pop mov sbb sbb mov mov loop jbe mov mov hlt sbb sbb pop pop sti js loope out pusha push or loope add out cmp push add push push fistl ret dec cmpl lods fsub pusha cltd lods (bad) push scas in insl pop cmpsl pop cmpsl daa ficom push orb jge jb test and cmp into ret mov mov test std adc std (bad) adc dec mov xchg push fcmovu (bad) out push jae or rolb (bad) mov imul push mov imull stos jno push pop subps addr16 das les in pop push mov (bad) cld iret adc dec fistl adc jl add push pop or and xor sbb mov pop call and fs out in ficomp fisttpll xor cmc cmc div scas scas in mov movsl lods movsl repnz mov jl mov hlt mov pop outsl jno imul push test push push (bad) shrb pop dec inc xor push jle scas inc js sub mov lods mov pop rcrl or mov xlat fldpi repz mov dec sbb int fbld jae push push mov mov iret ret (bad) rcl int into into fst (bad) (bad) xchg add dec push pop movsb test je data16 sbb lret lds xor pop ss mov movsl cltd into rcl shr adc jmp ja pop pop movsb fcmovb dec jbe jb mov test dec rcrl (bad) mov cld std push push mov sbb cld std nop loopne jne mov pusha or iret ficomp push es cmp push hlt aad and std inc mov aaa aas inc lret (bad) rorl push jb test and mov lock fxch inc cmp mov cwtl stos ljmp enter adc pop add cmp ror jb sbb in (bad) jge lock mov imul stc mov lds scas mov dec es in out sub aad sarb frstor arpl adc std and ret cmpsb data16 repz push mov sbb mov lcall test xor imul aam insl sti arpl pop addr16 int bswap (bad) sub int sbb ljmp cwtl enter cmp xor leave test sti enter fisttp dec lret lods es int3 dec (bad) fwait aam pop pop dec ss test cmp push inc fwait jno dec mov cltd inc cltd jno popa push lods lods xchg popf jecxz pop cltd cwtl mov lods mov je aaa fcmovu into iret and es push jle sub (bad) addr16 das and adc add mov sahf cmpsb xor adc adc sub adc scas mov in icebp sub pop push push bound jb cmpsl pushf or mov rcrl jmp fmulp into xchg lahf rcr dec xchg out push nop sahf adc ds outsb xlat xlat mov movsb mov mov pop pushw imul or (bad) lret (bad) xchg les dec (bad) xor jbe into iret nop mov in mov pusha pusha push inc test jbe (bad) inc orl outsl inc inc iret ffree loopne jne mov test cmp addl divl ds push fild fwait fwait fwait mov test add lods lods mov (bad) je jmp test imul rcl cmp pusha mov fcomip and cmpsl movsb (bad) out ja inc dec sbb int cld repnz sub addr16 pop pop sbb mov sahf mov orl mov hlt mov mov les pop daa sub int3 int3 mov inc outsl outsl (bad) pusha jno mov scas jb jb pushf popf xchg inc pop pop push sbb cmpsb stos lock sbb add outsb mov pop bound pop push shrb test mov cmp ret ror test cltd xchg mov loopne test aad sub cmp add in insl jno xchg popf xchg loop call push jne push shrb scas mov addb pop inc push test ret or pusha pop adc bound push pop aam jbe bnd clc ja mov jge loop push sbb mov cltd add stc std cld cld sbb add iret rcr iret xor jmp mov inc xor sbb push mov ljmp xchg sahf pop fdivr iret fistp mov aaa mov jnp xchg xchg adc fcompl cmpsl adc adc mov clc adc cmp xchg sbb adc movsl mov adc mov nop lcall cmpl leave (bad) xchg orl lock insl sub inc dec (bad) mov dec popa gs pop adc dec dec out pop or imul mov cli in push push sbb sti repnz xchg shlb jbe (bad) fmulp sub rcll imul cmpsl cmpsl int pop push mov (bad) sbb adc sti push dec gs mov xchg femms push sub cmpsl test push dec mov scas stos call faddl jle push jmp adc rcrl xchg pop pop pop push outsl fs jmp lods pop jle lahf mov or and dec or inc ret jo xor mov insl cmp out mov sbb mov xor (bad) jbe push push pop mulps lret inc push lahf mov lea sbb sbb adc or pop pop sub dec inc std iret iret (bad) and popa imul add out cld (bad) lret sub sti js mov es stos mov pop add out out mov cld sub sbb pop insl xchg cli cld cmp sbb xor add clc push or loope rcr sti js jo add es shrl add sub add ja pop sbb rol out (bad) (bad) hlt hlt hlt mov data16 xor ds (bad) popa popa popa jae or lar pop rcl into fimul stos (bad) lret mov push inc dec pop pusha ss ss or push or mov mov movsb in call xlat (bad) iret fnop adc mov dec push xor mov pop aam popf into std es (bad) repz cltd in mov loop xchg out (bad) not fwait out ficoml sbb (bad) sarl fsubl ss sbb shll mov lods push mov fs (bad) pushf div pop adc or mov jmp (bad) rcr lea jecxz xchg xchg loope fwait cltd lret xor mov inc sbb or sub out cmc lds sbbl cmp cmp (bad) (bad) call popf pop jle (bad) leave or and pop pop pop mov fstp rcll xor cmp bound es add sbb lock jecxz out xor xchg xchg sarl insb lods (bad) xor push add sti popf push jnp sti xchg xchg cwtl sbb sub mov jle xor push pop xor cmp outsl jno fmulp xchg loope mov cltd xchg (bad) sbb (bad) jb xor jmp divl (bad) cli hlt repnz cmp xor sub jmp pop push dec pop cmp ret mov mov ds lods cs pop pop daa (bad) dec jo jbe outsl std fmul aaa loopne dec pop lea or mov xlat (bad) sub test dec inc andl push add inc add das xor sub jb adc lahf xchg cmp adc cwtl orb mov pop or fwait pop push adc add xor aaa jg scas scas icebp cmc jno pop out mov mov cmp cmp and cld mov out (bad) push push outsl jle mov es cltd aad pop push pop pop mov cmp fs pop cmpsl rol mov or aad (bad) xor call mov dec movsb inc dec lahf xchg xchg cwtl xchg loopne shrb cmp in loop cmp std jmp sub (bad) cmc or jbe enter add test sahf pop stos pop mov sahf jnp mov xchg (bad) (bad) in and sub pop sub repz mov stos mov cmpsl rol jns inc push pop or add inc ss fdivrl pop dec dec jg jp cmp (bad) mov mov sub mov jp bound notl push je dec adc les orl mov jle and in or aam (bad) sub dec (bad) jne mov adc xor dec inc cli aad mov mov mov mov incb adc cs test imul xchg lcall add cmp cmpsb cmpsb test dec inc jne mov or cmpl jns cltd or hlt xor jae push lock xlat bnd pop pop xorl in dec inc xor add push inc adc cmpsl imul mov add jp rol shl lods test in loop sub pop push cmpsl mov cmpsb push bound or cmpsb jle rol dec mov xchg pushf xchg pop (bad) imul (bad) jne xor dec xchg fs dec mov mov pop mov das jp mov xchg scas pusha lahf pusha pop cltd xchg adc mov inc xor jo inc stos mov (bad) cmp ja lahf (bad) cmp sub mov insl test mov in mov dec jbe icebp call jecxz cmp or and std xlat int3 aam loop in adc mov sub dec movsl mov repnz push (bad) push cwtl mov fmul (bad) mov cmp add or and cld repnz jecxz incl in out out pop jo jo dec jnp cmpl nop mov push loop jbe jle mov and andl hlt jno repz jne ss lods jae and ror jbe jno jno adc ds cmp jnp jnp in (bad) lret mov pop pop gs inc (bad) lret push clc jl sti iret (bad) mov aas add insl lock vshufpd mov pop or insl lods and add jle cmp inc jne das call mov data16 mov shrb or dec into (bad) sub sbb sbb aad call add fmul fwait push push stos sti xchg nop sbb pop cmpsl (bad) fcom pop sbb lods mov (bad) fcmovb dec pop stos loope rcrb incb (bad) icebp inc xchg movsl sub xchg in lds mov into sub push fcomps mov fisubl outsb mov icebp stc lret pop add hlt pop stos add xlat fldenv dec mov mov cwtl (bad) lock and (bad) lret lret pop push loop push sbb repz test in rcl rol shr cmc clc adc adc je mov push push dec pop pop popf xchg idivl rcl mov mov and (bad) xor hlt (bad) aad out cli adc dec cmpsl xchg cltd mov inc pop or push push pop xchg stos (bad) fstpl ljmp jecxz cmp sub (bad) push pop js add mov jne fxch sub mov sahf adc jb xchg lods sub orl push pop rcll or adc sub inc add movl add sub pop push push pop mov fs inc push jle,pn sbb andb enter jae inc int3 andb test push adc push jno push push push pop pop push push or pop xor xchg clc loope mov movsb stos hlt rcr cld cmc cmc loopne or aaa daa push adc jmp pop cwtl in aam sub pop or (bad) xchg xchg sbb sub jge subl jecxz call jnp xchg jge jbe sbb std std fdivr hlt or out out ljmp xor xor cmpsl xchg test mov out (bad) lret lret (bad) fsubp cs sbb in rcrb imul cmpsl push ret cli xchg fs imul jp idivl dec jb leave or repz xchg insb mov mov into mov leave leave loope pushf mov or inc test jg rcrl cmp mov jnp xor mov sarl push xchg insb (bad) fmul lods rep sbb lock sbb mov dec push push push arpl ja jb sub pop push pop dec addr16 (bad) (bad) jge lods mov dec push xlat inc pop fs dec mov (bad) (bad) cltd lret push rep jge mov insb imul jecxz add mov sbb xchg adc sub sbb adc test mov sbb lret int3 frstor pop push xor adc add sub cwtl dec dec mov fs insl sub outsb xor sbb xlat mov push dec cmp jnp push sbb out jmp nop xchg mov bound dec inc inc rcl sbb inc data16 xchg jg fist mov cmp cmp loop jno xlat repnz mov imul pushf pushf nop xchg mov movsl cld mov lret dec movsb mov push mov (bad) mov mov inc push push cmc in xchg xchg arpl das push xor pop cwtl addr16 stos out out pop xor insl jnp sbb add jns ljmp jns inc inc (bad) lock sub dec lds and jl mov lea mov mov push push (bad) mov movsl movsl movsl sbb adc inc lds pop movsb stos (bad) loopne mov cmp dec pop inc adc (bad) fnop mov orl cmp rclb fs bound adc icebp in stc cmp je sub (bad) int (bad) repz cmp mov subl add or push push push fstp cli cli adc arpl and bound xchg sbb in iret inc iret into push dec sbb nop xchg rcl sub jl fnsave daa das and pop ds lcall cmpl pop jge inc fnop (bad) adc push push in in xchg imul mov push inc mov neg cmp xlat fcomps adc xor icebp xchg cmpsb jmp jno and test cld repnz ss cmc pop mov test sub adc add mov cmp ds push inc pop sbb or bnd and cmp insb test outsl jg inc jb rcl cmc dec mov cmp ds push mov dec imul mov lret js insb jno add in rcl scas stos cmc hlt repnz add ds outsl sub ret (bad) sti cli cld lock pop dec dec push push in cmc stos scas adc ljmp repz xor xor mov xchg cmp jae stc adc push adc jb add ret jne pop lcall enter insb fcomp mov dec and sub cmp and adc fimull jo mov pop pop rol test ds pop mov dec pop test and aas pop (bad) fdivs mov lea push push push push icebp js stc jo aad add pop add pop add pop add pop add push pop (bad) xchg push mov orl mov cmpsb push fild cld repnz and mov push add pop das and lock mov scas push inc sub mov (bad) loop pop sbb xchg cld stc xchg insb aas xlat xchg mov xchg test sbb sbb mov into out jecxz loop or (bad) (bad) jbe fs xor aaa pop jg insl addr16 cmp mov daa sub sub xor xor repz rcl sarb xor invlpg xor jg fwait mov test insb js jo jbe inc sbb loopne adc loope push movsl cwtl call sbb (bad) lcall and inc jnp fisubrl mov sub or or jmp dec dec dec push push jp mov jbe lcall mov call imul pop mov popf popf jns inc inc cmpsb hlt (bad) fsubrp out (bad) and or sti rcl xor dec dec jg push inc mov test mov sbbl add jmp pop stos push stos imul (bad) lret pop pop pop (bad) push mov popa xor bound mov jno xchg movsl add rcll cwtl mov sub adc outsl jne jge mov push xor inc cmp mov test pushl cmpsb mov jno lock scas inc jp (bad) or rcl rcrb (bad) adc sbb inc repz jmp das out push push adc pusha imul mov jbe jnp or (bad) (bad) je jno push or ljmp xlat ds cmp mov lret add mov push sahf clc jno dec pop scas ficoml mov jns sbb test jbe push dec aas jno loope addl pop add jae (bad) xchg (bad) call xchg shrl sub sub cmpsl icebp repnz xchg (bad) mov mov test inc cmp (bad) lock xchg shrb add (bad) daa and pop push xchg sbb pop aam pushf lahf ljmp std mov loope sub pop mov mov lahf sbb outsb cltd adc movsl scas test aam dec dec or (bad) fucomi sub sbb sbb call or sbb (bad) rcr mov add jne inc pop (bad) fidiv jb push fisub cmpsl fidivrl ret inc mov adc lahf sbb aad out push pop jmp mov cli icebp cmp pop adc xchg xchg rcrb mov xor dec inc xor cmp xor sahf mov or xor mov add loope imul pop lods xchg ret xor jmp dec cmp pop adc stos int dec fstpt fnstcw jns mov stos adc lret mov aam mov mov std repz scas lea popa aaa mov xor or cmp mov data16 fsubrp clc clc lea or out and fs les cmp cs or jne sub in (bad) call hlt ret out (bad) mov (bad) jmp sbb add jle mov sbb ret and cmp xchg into lret push push inc push and (bad) stos scas push inc xchg jno xor shr lret adc cld ret out pop jle stc in in arpl jns mov inc inc and dec dec mov ja (bad) (bad) xlat movsl cltd push repz jp pop pop pop mov lds lds jb fbld fisub mov dec les roll sub movsb inc dec pop sbb push movsl fs add lcall cs imul sbb scas fcmovu push or add mov push xor lea pushf loop outsb sub cs sti test mov inc int3 movntq bnd repz fcompl jnp xchg jne sub xchg inc out out mov in stos scas and mov xchg idivl push pop push rclb and jp int xrelease aaa enter dec out fldl fldenv sub dec inc sti movsl lret test mov lahf sahf pusha lahf pusha insl jg es cmp aaa lock (bad) jmp scas pop adc sbb insb pop add add je or push pop js push aas pop sub jmp cwtl pop cmpsb mov sub push or mov pop mov ljmp loopne sbb xor sbb mov data16 push jg ds or add mov mov cmp (bad) sti scas push lods push fcmovnb dec xor mov xchg add dec push je popl into aas or out lock sub mov loop mov pop bound xor add test mov cmc std icebp lret or push dec add test loopne pop adc int3 ret dec mov sbb orb cmp or sbb xchg (bad) cmc std lods mov pop push pushf (bad) fimul mov cmpl (bad) mov xlat test push push mov and icebp stc jp mov mov mov (bad) sti or popa jae jne ss xchg adc or ds pop adc shrb adc sub pop inc push incb dec add mov add pop out imul cmp stos out stc mov push sti int inc scas lods lahf pusha in insl jb std inc mov (bad) lds insb pusha insb pop jecxz loop and inc (bad) (bad) sahf movsl pop daa (bad) cs pop pop pop mov imul adc add into pop divps xlat fisttp lds dec cmp dec mov push mov mov iret mov xor sbb inc cmp sbb ds mov or push loope popf loopne sbb iret xor inc pop push push pop pop or push inc lods jge jp xchg mov cmp stos test pop push movntq (bad) cmp dec or mov push or jmp pop mov adc adc leave sub mov mov fs jns inc lods cmp (bad) hlt (bad) loope sbb js mov mov (bad) xchg fwait jae call fyl2xp1 mov jg das mov xchg xchg fld (bad) xlat lahf popl dec push fstps sub sbb test lret inc dec dec inc dec (bad) mov add popa push movsl mov test inc into xchg mov push inc mov aaa test sub loop or push inc pop and pop fwait lahf ja bound jnp add adc imul fidivrl push pusha fdivrp dec push inc mov fsubl pop mov ret aad lods test movsb stos movlps bound out iret or jge cmpsb cmpsb cmpsb cmpsb dec fcomp in lock mov loopne in call mov mov iret dec mov push push xchg shrb adc adc call mov push inc lods test push dec dec mov mov mov movsl pop das aaa pusha outsb dec pop dec cmp sub push xchg jge xchg xor push sbb enter icebp ret fstpt sarb stc icebp cmpsl dec dec dec icebp std mov rcr xor (bad) xlat scas xchg rcll jmp xchg lods loopne enter mov and adc lock push repz or das jmp mov cwtl dec mov les test into aas aas aas aas mov mov xchg insb outsb es ljmp scas es mov sub mov mov and adc sahf xchg iret aas mov std and rorb fstps out xchg sbb insl push rcrl insb push push out ficom mov push je (bad) in cmp inc ja and xchg bound xor test addl ret sub sub xlat mov adc pop adc pop pop rolb pop mov jle fstl lret iret mov test mov cmp add xchg sbb daa add mov cmpl mov mov dec xchg popf pop movsb cmpsb test enter add mov (bad) lea call test adc ret dec or sub xchg mov arpl mov lea unpckhps mov jle jle cmc push cwtl addr16 sarb push scas (bad) jns lahf xchg xchg ret mov inc fwait mov ss rcrl insb insb insb sbb clc cmp insb jge in movsb cmpsb push pop xor mov bswap (bad) divl aad sbb aas mov xchg xchg bound mov xacquire dec pop outsb loope mov pop jo adc add cmp out stos scas ljmp pop sbb sahf int xchg adc cmp enter dec mov or push jmp xchg xchg mov push pop mov mov stc negl jo test mov jmp negl or and cmp jmp and test ret pop pop push icebp icebp ret jae lahf mov gs add pop arpl jecxz call push mov fstpl pop and sbb lcall cmpl adc pop (bad) out out cli testb imul sub adc push adc ror mov sahf xchg pop sbb movsl test imul ret sub and les (bad) sti enter popf (bad) mov pop cltd cld enter cwtl out loop mov fwait adc adc nop in ficompl loopne xchg addl mov rolb push push pop out loope dec inc mov mov xor sarb loop call xor sbb pop or dec outsl addr16 in stc divl pusha dec gs sub outsl (bad) into rorb sbb lea dec mov scas mov (bad) (bad) mov and mov adc mov (bad) addb lret ret cmp jne (bad) ljmp jecxz mov (bad) mov imul popf pushf adc pop push popa mov ss adc inc pop fcoml rcr mov stos cmpsb mov mov outsb and xor inc (bad) enter out sbbl sub pop push test aaa shl repnz adc mov sbb das shlb mov fimul cmp inc popa sahf (bad) sbb sub shlb sbb loope iret dec mov cmp pop push pop (bad) push int3 sub arpl aas xor cmpsb in (bad) sbb add sub stos push imul dec insb jbe dec inc pusha jbe sub jb pop dec dec in rcl pop inc adc cld cld ror fstp mov popa jno shrb pop dec inc ja mov test test inc dec stos pushf and sub std jecxz xor dec inc pushf mov fcmovne (bad) fldln2 data16 pop daa je mov mov jns add and bound cmp lret xchg iret push lds pop or xor es into ret mov push js push inc inc gs outsb inc dec pop pop dec dec push sub push mov mov (bad) cwtl cltd xchg mov cmp push stos fstpl idiv mov mov inc add loope add add mov sub push push cmp je xchg xchg fistp rorb sbbb lcall lock and loope cs decb pop pop insb movsl cmpsb loop rcrb dec pop popl inc add pushf and leave or pop push (bad) pop or hlt rorb aas mov mov cltd xchg fwait stos cs cld arpl sbb adc mov lcall push js or cmpsb fwait push mov (bad) dec inc mov in xchg into and mov aas outsl nop inc dec out into movb sbb sub jmp loop sbb xchg test (bad) or inc xor pop push sbb call lret cli out out lcall mov adc aas and lret mov das push test push inc rorl sbb cmp sbb cwtl cwtl fs mov jle cmc sti or push bound sbb imul repnz xchg cwtl inc dec push lock pop sbb sub insl out mov into xor int3 sbb sub mov sub test pop clc jae pop test das cmp addr16 sub cltd xchg sbb sub sbb mov fld cld mov and test jle mov inc dec and pop dec jl inc les scas push mov xchg and lds xor push sbb movsb push pop push or repz ljmp pop stos mov xchg outsb pop mov out push cmp stos movsl and int3 and push sbb faddl sbb fsubl aaa pop pop mov nop outsl nop movl hlt jge hlt std aas aas push scas mov rclb mov cmp add add jge sub inc repnz hlt sahf lcall iret lret iret lret inc mov lcall ds mov popl jae jb leave in mov add test cmpsl inc push pop mov bound das jb add jae,pn dec or lock mov mov and loop jae js idivl adc and into rcl push push inc inc dec fxch xlat mov jecxz sub adc or ret hlt movsb into iret xor jge push inc sub (bad) outsb mov iret hlt aaa mov xchg cwtl cmp and addr16 adc cltd lods mov mov aas cmp xor rcl pop add sub mov je sbb cmpl ljmp sbb xchg mov xchg mov popf orl (bad) repnz cwtl repnz xchg xchg mov lea mov and fnstsw out cli mov xor or fcmovne leave clc clc loop je pop dec push mov mov mov add xor cmp cmp push insl or mov jno jno cli xchg rcl imul loopne (bad) mov jmp popf div cmpsb dec cmp xor push pop adc lret push inc cmp shll aad js inc dec popf jne push pop je je or cmpsl ljmp mov cmpsl pop sbb lds idiv mov xor test lahf xor sub fldl2t mov inc scas push and rorb mov ds es mov pop cmpsb sub inc add lcall out adc loopne (bad) out test mov add enter xchg ret add pop push lret imul adc gs cmpl inc mov es gs enter push dec (bad) movb lods insb bound jne arpl pop jae inc dec daa arpl add mov push jmp mov cmp inc inc sti fidivl ficomp inc stc adc fcmovnbe xlat push in int3 inc add fildll lret fsts push inc push dec inc or stos out lret (bad) or (bad) mov enter bound test imul push dec inc cli ret arpl add je fstps aam mov bound test test sbb cld mov xor addb dec push cld cld jbe push xor daa cmc sbb cltd (bad) in and push sub and cmpsb stos (bad) add inc pop arpl daa arpl jne jecxz movsb movsb arpl add and mov cmp ret sbb cmc daa cmp rorb mov push outsl aas aas dec inc ret add mov loopne fisub shlb add outsb pusha inc arpl ja popf leave (bad) cli fcomp jmp and inc xor fwait dec movsl loope (bad) sub icebp lock xor add iret movl (bad) (bad) (bad) lods jno jno inc cltd popf addl fsubr jmp mov cmp icebp mov imul sbb enter hlt sbb cwtd dec or pop add cmp dec test jmp or fcmovnu fildl inc pusha je mov jle cs push jle jns and sbb lds fcomps imul (bad) int3 adc jbe or jmp xchg sbb push mov repnz push pop jb pop add lcall xlat xchg mov dec pop and fnsave lods mov push jbe out lret mov idiv and cmp add ror mov aaa push and xor ret sbb mov pushf sbb mov (bad) (bad) mov and (bad) lcall (bad) or or sub stos mov (bad) (bad) cld fsts jecxz stc les jno fstp in rorb sub imul adc jl dec dec pop pop xor xchg test mov xchg cmp js add pop test adc jbe mov lret in mov jb jg scas inc insb sbb divb pop dec push femms cs sub and int jo shr add add pop in in arpl dec cmpsl cmpsl cmpsl mov xlat xchg mov lea addr16 xchg xchg sbbb fisttpll out aas das daa scas and xor das ss inc mov out (bad) or xchg xchg test add repnz int inc push push nop into std cmp jne lea popf lret inc mov push add lods popf mov xor xor add inc nop lahf sbb in in in add push stos push mov mov mov (bad) outsl inc dec xchg fcmovnb scas mov hlt hlt sbb test lock or mov cmp rcl xor fs fwait test fabs sti lods mov jg adc lock adc add inc pop or out sbb sbb cld or or cmp cmp dec pop or sub loop mov ret cmp xor ss mov mov stc (bad) jne arpl mov xchg jle cmpsw xchg lea ret cmp sub aas nop sub push pop out sub fs cmp mov xchg out mov addr16 mov and aam in mov xchg bound mov (bad) and (bad) les iret cmc out cmpsl scas xchg lds mov out adc and mov daa sub mov mov mov mov and arpl out loope add push add ror or lds and cmp cmp loopne mov pop aam je xor add sub stc adc jbe add xchg cltd pop mov aam sarl xlat fldt xchg int int movsb fwait sahf ror stos push add add lea mov cld cmp adc fsubrl cmp rcll mov sbb inc dec icebp fisttp push arpl test (bad) sub sbb cli nop (bad) fs xchg cmp sahf dec pop push outsb je dec inc cmc out out insb push push pop iret lidtl rcll mov repnz je cltd cltd sbb sub int3 mov pop push js cmp or iret (bad) enter xchg cmpsb stos xchg insl js cltd fcomp mov ror into fcmovnb rcl std std aad lret inc add shlb ja adc jecxz in in mov or nopl out stos ror cmpsb stos and orps mov pop bound jp sbb inc je aam in in pop fwait jae dec mov pop js pop inc popa ljmp jl adc add mov out adc arpl addr16 push test pop inc imul inc push pop ljmp xchg lcall je lret (bad) out stos push and sarl inc inc inc inc dec fld adc adc je sbb cli pop push xor bound rcr or push push mov enter outsb jo jo xorb jne push or mov test sbb add jl jecxz mov mov test ss es sub into xor sahf jbe call mov xchg cmpsl sub test insb dec bound inc sbb sti sti xor sbb int repz cmpsb rep fnsave mov js push xor push in movsl mov xchg cli jmp mov in divb into jmp and stc out (bad) sahf (bad) mov inc fcoms add pop out xchg push pop stos ljmp in dec jg push push pop enter cmp leave int lods mov es rcr lret cli out jmp arpl das and (bad) fwait fwait out stc push jge in jno sbb mov sub push add or aam cmovns dec dec fcomp fcomps out ljmp mov into (bad) jbe mul ljmp mov iret out fbstp (bad) lcall pop push jmp movsl xor cmp cmp mov sub test test sti aaa enter inc adc fdivrl dec call jo (bad) sub pop je dec test leave adc cmp adc jae bound out imul mov rcll push pop adc xor push dec mov into mov mov and iret mov lret xor mov repz imul test jg,pn mov fwait sbb shl shrb clc adc add mov xchg mov stos mov out div jle jl adc rol test mov mov cli lods fcomps mov dec int sub adc dec lea lret nop mov jge (bad) in mov sbb sbb cld cmpsb push pop int3 jae movsb mov int3 xchg enter inc inc ret (bad) sbb xchg popf int daa fistpll jle jo dec inc or mov push pop add ds test mov testb or in fbld fistp testl jo dec or lock sbb lds xchg (bad) mov fs mov mov jecxz rcll std add mov lods scas je jp push jae fwait sahf (bad) push or jnp push fisttpl add mov xor or xlat pop fisttpll lea xor mov (bad) incl jne test push ss cmp addr16 pop je sbb jno repnz aaa popa or or pop call push fcomps or (bad) aam movsl pushf jmp gs xchg (bad) leave int push or adc rclb push adc popf fcoms inc push incb (bad) dec dec pop push lahf rcr dec pop xchg xlat pop dec inc jnp jns in sub movsb and outsb das das cmpsb and loopne inc lds dec dec cmpsb daa sub or push dec push pushf stos stos lcall cmc in fs pop sbb mov (bad) or sbb faddl (bad) xor aas cmp push and add in popa and insl sub adc pop loopne divl test movl addl loope mov rcr int3 inc add cld adc pop sbb fisubl pop mov mov inc insl add pop xor ds pushf pushf pusha outsb ret out pusha inc cmpsb xchg stc std jo lods inc sub sahf jne push or or (bad) pusha popa push push mov mov xor andb push adc cld jmp mov stos jne fmulp fisubr jae iret addr16 pushf add popa cmpsb jecxz push pop sub push pusha mov hlt or push fadd xchg jl sub jmp add sahf lods lods enter add adc mov ds jp dec mov faddl leave test mov (bad) idiv xchg xchg sbb ds enter cmc xchg cwtl cwtl lahf test sub loop jnp int3 xor or bnd iret ret mov mov pushf mov mov insl imul sbb sub movsl mov jge xor ret mov push popf fcmovu xchg fimul mov xor dec jno add cmp inc out and into mov or push fstps in inc inc xor mov incl inc lds and jmp add xor bound push push xlat aas cmp arpl insl jno mov sub mov pop movsb pop add cmp xchg mov (bad) mov lea mov mov and test sbb push dec lds addr16 adc inc push pop pop cmp jae,pn xchg sbb xor sbb mov lret mov (bad) xor jg es push push inc jbe jle or jbe jo (bad) mov mov jno lock fucomip mov mov jle add aad and push sub (bad) dec sbb daa scas (bad) fwait pop shlb (bad) mov pop (bad) aas cmp icebp lods je mov jle (bad) push call loop jecxz or xchg lds jp das inc xchg xchg rcl adc aas notl and (bad) (bad) call sbb pop mov push push jl outsl pop and xchg outsb pop and cmp sub out enter inc int push ds (bad) (bad) sub outsb das das jg mov jmp or leave mov mov mov xchg cltd shrl scas or jmp push dec inc rclb dec addb jno sbb je je jge jns cld stos and ss jno cmp mov xchg int3 lret add hlt push bound add mov test sub outsl outsl in adc arpl push ficompl cmp cmp pop lahf iret lahf iret cwtl adc lds add adc mov testb xor and leave mov jne push dec mov dec mov and xchg push inc inc adc (bad) outsb mov int pop inc stos sbb sbb mov nop adc imul cwtl setb sbb fdivr xchg popf stc jo push pop lods xchg adc movsl mulb cmp pop cmpl loop lcall lahf fisttpll dec mov jmp mov mov jnp pushf pushf hlt add inc inc stos adc adc cld divb int3 xor fmulp fisubr das insl insl test das cmp fstps loopne add jl cmp rolb inc inc das iret (bad) fisttp inc jns add (bad) test aas mov xor xor inc jns ss cld leave mov repnz xchg insl mov rcll dec mov loope push mov shrb cmp ja mov add and imul push ret into xor inc or stc popf adc sbb out rorl test daa data16 in in and or sarb testb sub sub scas jecxz in push push jo jbe add dec lret outsl sbb add (bad) cmp cmp dec sbb cmp and adc jmp test in stos and out pop xlat xchg push test repnz lret fwait fs repnz pop pop (bad) aad sahf jecxz push fsubrl mov push xchg lahf lahf lret arpl add jg sub dec mov sahf femms push push xchg loopne mov outsl addr16 jnp xor dec mov ja std sarl jb jne xchg xchg xchg xchg sarl inc stos test inc lret adc dec dec outsl or ja loop and cmpsb cmc sbb stc test push sar sti sti sti lcall iret (bad) das lcall enter inc inc mov push push fsub sub mov sbb sbb je mov lret push add xlat xor es pop insl insl cmp inc test jae jae jg xchg jo xchg xchg pushf sbb fwait lods lods adc or adc or ljmp jp push loop outsb int int3 (bad) cmp insl test lahf adc xchg adc xor pop pop imul rcl aam aam xchg sbb adc adc sub sub push lods inc and pop loopne mov dec mov std cmp cmc or cmp cwtl cwtl adc or adc bound cmp inc inc adc popa fs and movsb mov dec mov (bad) cli mov mov or test mov sub (bad) testl mov push adc cwtl frstor lds xchg sahf sbb addb xor mov jnp lcall es fs sbb (bad) push add add adc mov mov pusha xchg outsb xchg adc repz inc inc push push inc dec pop outsb sbb xor mov inc mov mov mov loop insb xchg inc das das rolb stc into jbe jecxz sub inc into push pop or xchg or xor (bad) cmovle dec lret jecxz (bad) jle shll cmpsl data16 jle movsb stc add (bad) scas push dec dec (bad) mov jb sahf lods push xlat and dec pop inc inc adc fldenv mov test jp fcomp mov dec repz idivl dec xchg (bad) mov lret xchg lret fcoms sarb xchg push lods push add (bad) add add add notb repz stos and push lods push lods packsswb addl leave or fwait imul (bad) jb jb leave loope push xlat xor scas out out jmp mull lods repz push add push push out incb add xchg cwtl sbb push nop outsl nop outsl sbb lahf loop xchg push mov push insl enter sub sub inc ja and jnp das (bad) mov fnstenv cmp mov cmp fs fs mov arpl or adc mov lahf lahf pusha mov push cmpsl cmpsl movsb loop cmp pop popa pusha data16 xor (bad) mov sti mov and push sbb sbb dec std add adc out push jp jp add das push add or daa daa daa push cmp sub mov jnp pop call mov push add inc xchg xchg aam xchg sub lahf mov add dec inc adc ss data16 jle pop (bad) fisub js or repnz mov popf jne inc rcrl ret repz rcr and outsb xchg xlat mov mov mov xchg mov inc pop push cmp lock fcmovne call in pop or insb or addl (bad) jo sti dec dec add sub faddl std mov in dec pop sub stos push inc adc mov sbb mov mov fs jmp and xchg les call hlt hlt sbb je je sbb aam test jb out pop fwait ja xchg jae jae popa loope in mov icebp push test and or xor dec adc or push sbb jnp negl mov popf bound mov inc pop mov (bad) lock clc dec push aam jb pop movsb pop push repnz mov sub loopne or popf mov stc icebp aam jg add cld add out out repz fdivr lret (bad) (bad) (bad) shl clc clc clc cld into rcl rol cmc call fisttpl mov insb jne pop pop inc jmp ljmp fnstcw cwtl mov bound mul in in jo insl sub sbb or xor je jne dec inc rolb clc pop or mov cmp jns cltd in push cmpsl sti repz pop push testl or das insl stos mov xlat (bad) sarb cli lret out push and add jge std pop pop cmp (bad) mov cltd jno add add inc inc push jb (bad) mov fnsave and sub mov push (bad) fwait mov fidivl cmp mov shr mov adc pop movsb sub jno enter imul (bad) enter pop pop push rcr jl fs jae aaa enter mov dec fildll xlat sub sbb push scas pop pop outsl mov popa pusha je mov cmpsb pop or jnp push sub test mov cmp call mov mov inc popa insl test xchg insb bound jg sbb xchg imul jmp fiaddl test sub sbb xchg mov cmpsb dec dec jbe (bad) ss loope jp pop pop jae cmp sbb stc jp arpl dec dec movsb or jne rorb xor cmp rclb pop or cmpsb cs dec push pop or sbb ja fisubr or mov repz andl addr16 aam mov mov repnz div div negb lret pop pop mov add push adc inc leave sub mov mov pushf adc ljmp inc mov addb repz or (bad) out (bad) imul out mov inc bound pop pop gs cmp mov cmpsl jl push add jl jmp adc pop pop aaa aaa mov sti sub stc clc mov test push jne orl outsl in lods arpl push xchg pop inc addr16 mov enter stc xor mov pcmpgtw scas mov push pop aas xlat xchg cmp cmp adc (bad) mov sbb pop dec or jbe pop scas sub test push test dec inc (bad) int sbb mov push push add add dec xchg lret repz cs mull fldenv (bad) js ja sahf mov test push stos cld ja mov and imul add stc test rcr dec mov rcrb es ss jb fnop dec cmp loope push push movsb xor and ss pop dec mov rcl mov aam aam cs dec inc add je mov mov mov nop call dec dec sbb jae repz call dec xchg imul dec (bad) inc dec into (bad) ficompl mov inc adc std mov data16 fstpl dec sbb or in or loope nop movsl popf jge cmp call mov push cmp mov xor pop pop pop mov cmp lret xor mov mov movsl inc inc mov mov roll imul dec mov stos dec inc adc lcall je sub int3 cld add mov add mov sbb xor mov ja ss jne hlt or cmovp push scas (bad) fptan (bad) jae xor (bad) mov mov andb ficomp dec jbe (bad) add add fbld jae arpl xchg xor xor mov cmpsl add dec xchg xor inc in leave inc aas xor les stos push push adc incb pop jno jns roll js xchg xor xlat adc mov test cmc sbb cmp std out lock aad sbb xchg mov dec xchg (bad) xchg push insb jmp push push test fsub loop xchg outsb and stos push (bad) lock sub inc (bad) mov lcall mov jae div mov sbb push sbb addl xchg cmpsl lock mov xor clc test pop fcomps xor push (bad) cld lcall cli pushf pushf pushf je (bad) (bad) repz mov mov repz jmp inc inc jb mov cltd xchg ret leave sarl pushf mov cmpsb lret nop iret push lds push push push bound jecxz iret xor and jg push xor sub out cmovle fistl sub loopne ja add stos mov mov lret dec mov decl jnp enter sarl mov loope leave xchg enter jbe xor mov xor roll pop xor (bad) xchg fwait int3 inc add repz bound xor loopne add pop rcrb jae mov ret imul pop stos imul mov mov mov xor arpl add es jbe xlat pop sbb jp rcrl incl adc pusha pop aam orl cmc jle iret int3 or or adc cmp stc cmp jmp aas sub push xchg in adc xor mov in push push jns test out sbb sti icebp nop add jb scas rol test movsb arpl inc sbb dec icebp fnstcw cmp and pop add dec lret xor in cld mul out out cmpsl test test in cld repnz sahf scas (bad) out out cmp sbb push push add cwtl pop mov popf xchg push cli outsb imul add add ja mov lcall (bad) jp jbe pusha js xchg mov mov inc cmp mov loope mov neg mov inc bound inc inc sub dec outsl pop stos and push ficompl (bad) mov jg ss push fild push aaa xor fnop ficomp push cmp inc popa jno mov lock or das pop arpl pusha lahf mov out dec sbb and stos mov (bad) (bad) icebp adc push and sub insl ds pop add mov mov call icebp hlt xor and test jnp cld sti lods in outsl push or xor mov or and inc popa jno or cmp cmp aad orl and cltd adc dec imul push push insb test xchg popf sbb (bad) les movsl loope roll call jne jne push in out fsubl sbb xchg les mov cwtl mov xor push jns mov add cli mov jmp mov pop jg inc xor sarl jecxz inc mov (bad) mul push adc dec in test push adc cmp sbb movsb ds leave repz repnz cltd repz sub cmp shl lcall xchg inc into mov adc shrb add xor icebp test fwait test lret lret pushf mul mov xorw pop pop xor daa jmp frstor jne inc (bad) jge or jns xchg sbb jl pop mov lahf rcr mov mov dec dec and cmp or and lods push lods push dec inc dec insb or push push push into pop push cmp cmp xor adc push cld cld cld ja or sub pop or in adc dec jge nop xchg adc push inc pop mov fs fcmovne rcrb daa scas out adc jl jle cmp stc jp push jl divl cmp ljmp jle roll add sti out cmp pop dec push lods fxch bound or outsl bound pop mov andl movsb lret (bad) shrb test mov bound pop sub pop aam je ds jl dec dec je pop push fs arpl cwtl sbb and pop or and sbb fsubrs cmp (bad) out xchg mov sbb sbbl int pop dec inc sub mov pop int (bad) and push das inc pop shll push test push pop dec inc inc inc inc stc js cmpl (bad) fstps aam pushf je mov mov lret pop dec insb insb insb insb pushf scas outsl add xchg mov loope cmc loope jmp jae and mov lods lods inc daa shrb rcrb fnop rolb int3 call insb sbb adc lock (bad) fcmovbe cmp and test xchg inc sbb mov cwtl adc iret add incl adc and mov (bad) ds test dec mov add jno mov or sti push push (bad) shl jbe xchg nop sbb loope pop add or dec inc pop pusha jb sub jmp pop push cmp adc push ljmp and xor (bad) (bad) (bad) (bad) (bad) jecxz bound addr16 (bad) repnz aaa sbb adc dec test les sbb rorb aad (bad) or sarb sub js jns ds pop lods lods lods cs xlat pop das lret and in in add (bad) aas out loop outsb push mov cmp cmp push push mov pop dec arpl orl push adc mov int3 bound mov (bad) xchg xchg xorb add inc push fldcw (bad) in fs clc pop clc pop pop out out loope jl dec inc les dec inc dec pop push add mov cmp dec enter mov pop mov cld stos ret movsb pop dec sub xor and sbb jae (bad) lret push pop adc (bad) je add fnstenv xor xor dec int3 fcompl outsl sub sub pop aam mov stc sub pop pop or js (bad) out push jae pop pop pop mov pop clc pop push cmp xchg xchg jno mov xchg xchg xchg mov loope js rcrl outsb xor xor jbe in cwtl mov bound xchg sbb push mov inc push pop add or (bad) rolb icebp test lahf sbb aaa enter xchg (bad) repz fwait adc xor add push pop aam stc push add dec fwait sbb rep mov mov mov lods insl arpl adc lea pop pop cwtl cwtl add dec jecxz cmp sbb stc in mov or push fwait sahf push add push es sbb outsb jmp aam aam fcom shrb lock cld stos movsb into ret push ljmp jl push push aad int outsb jb pop jo enter xlat add out in scas mov jno sbb mov and movsb mov orl imul fs jo mov adc jp jb inc daa loopne dec pop pop rorl dec or push dec push inc sbb mov fcmovbe push mov xor jmp imul aam popf (bad) leave inc jg jno xor push cwtl cwtl push daa (bad) fmull dec or jmp std je int sbb adc dec in pop pop cmpsl shrb ror movsb mov mov cli in xor add sub pop sub xchg xchg xchg mov insl sub movsb sbb mov jbe lds jmp mov pop aaa outsl jp mov test pop int sbb dec es fsubrs pcmpeqw fbld fist (bad) jbe in and int3 enter test lds out fcmove inc cmp and jb xlat stos dec sub stos inc push push fldenv mov int3 rcrl mov aad loope inc mov fldenv fnstenv stos add push es stos and mov int3 push pop aad sub and sbb sbb or fs dec dec ret sti cli int adc mov xor xchg cmp cmp sahf add add test pop call in cld mov dec lret inc dec dec sbb repz mov clc xchg xchg les adc insb xchg jnp mov aas aaa (bad) sub cli mov insl out or in (bad) mov les and xor pop loope xchg adc clc jns test loop xor fnop adc and int mov lea jle jbe cmc call push sub icebp cmc add (bad) stos xchg mov ss cmc aad jmp fwait and (bad) pop adc out mov xchg outsb in xchg mov (bad) repz add mov inc or sub jge add sub mov shrl add (bad) (bad) push mov push pop dec pop bound aaa fistp hlt leave rol scas scas and push inc scas mov aam mov ljmp lock rorb daa fcomp mov aas fwait mov repz jmp push pop aam inc fcom (bad) lret ljmp pusha mov xchg nop mov inc insl (bad) lock mov lods popf pushf xchg and pop pop pop mov sub dec jl push mov fstpl aad pop pop xchg push xor rcl push and inc dec pop push add dec lds pop add xchg fbstp std xchg fcmovnu fcmovnbe adc add sbb pop insl insb add (bad) pop js and mov (bad) xchg icebp aad aam xor jbe add inc popa loope addr16 (bad) iret movl loope scas scas andl add push inc add psllw add inc stos gs popa sahf fucomp inc inc inc lods test (bad) push rcl or cmpsl mov movsl pop fsts (bad) pop push inc jae jns cmp (bad) loope or pop mov clc jae ds scas mov mov jge pop les sub stc sub jnp ret jge mov cmpsw pop inc leave lahf fwait pop loopne repz inc sub int hlt lock cmp add test cs aaa xchg outsb xchg sub hlt mov cmp into out ficomp lret and cld cld cld cmp mov ret ljmp call (bad) int3 cmp pop mov test out nopl adc ficompl insb mov pop sub push hlt hlt hlt hlt sti jle add add fcmovne sub cmp dec mov sbb push push rcr pop cltd xchg sbb cmc or (bad) mov cmp add jo adc pop dec das and xchg adc mov addl inc lret xchg roll call and dec hlt or sahf sahf adc xchg cld icebp test fldenv scas fiaddl sarl hlt stos push add aas aas or mov inc addb push sbb fcomi mov lock mov lret xor imul outsb sub sbbb fist pop dec mov jge mov dec dec cmpsl push pop adc and out push js repz xchg xchg movsl movsl add xchg jmp jle lods jmp imul cmpb pop sub adc mov push inc scas jne dec dec dec inc pop sbb popa adc adc test pop sbb into dec lea nop cwtl adc cmpsl xlat lret mov or outsb arpl cld mov mov pop call mov div idivl xlat pop push enter cld xlat shr or xchg xchg push adc push mov scas cmp push inc dec jge mov and adc adc jl inc add (bad) lahf mov push je nop shl xor jmp test dec test xor push inc xchg lods imul sbb and mov jle out inc cmp mov pop out sahf adc mov stc jb push push out fwait pop pop mov sub push mov in or (bad) insb insl push xchg bound out (bad) (bad) popl cmc jecxz pushf pop or insb cs jecxz (bad) enter or or xchg mov mov or lds repnz pop jb jno jmp icebp lock lods mov xor mov fcmovu and js sbb mov jecxz inc xor cmp sbb test mov mov jbe push xor aam nop test dec mov xor cs inc dec push loop pop fnstsw rorb pop leave lock inc xor mov repnz jno cli add mov jo arpl cbtw addr16 andl mov mov mov dec roll aas xlat mov pop mov mov cltd adc aaa jb ret mov out push stos push insb xor mov pop cmp or push sbb icebp mov sahf lahf std jmp fwait popf mov ljmp sub les add aaa push push jae dec mov daa (bad) xchg rcll xchg push (bad) mov fst xlat jno out div xor adc popa popa jmp mov add pushf (bad) (bad) (bad) xchg imul out sub stos out (bad) pushf pushf aad push pop cmp dec dec bound adc xchg fistl out pushf mov divl jl (bad) jmp or mov mov cltd sti out jmp and xchg mov rcr test jge cmovs (bad) idivb hlt jno push and add movsl lods mov push loopne cmp cmp std js mov seta ljmp arpl push (bad) or out push xchg xchg fwait xchg cmp test arpl stc hlt lret xchg stos stos push pop fs pushf loopne loopne mov mov stos (bad) sbb and das call add cs xchg std shrl xor or les sub push xor pop pop cmpl pop pop pop ds xchg popf movsb in mov mov jo ret movsl and lea cmpsl out out (bad) cmp out mov fst test xchg jns add jnp icebp icebp jmp pop push mov mov test rol orl add jnp sub test add mov imul and jb lret lcall imul ret mov test pop in mov mov movsb stos push aaa adc stos jae adc xchg sbb add push xor movsb pop scas mov pop jns jmp out repz lahf loope std lock movsb sub fnstcw pop pushf (bad) out xchg add mov lds jb mov xchg ljmp ljmp mov js iret into dec mov ds cmp mov dec arpl out xchg jae stc jl and ret (bad) xlat mov outsb push push adc push add sahf mov pop scas and in lock pop stos loop test inc inc aas cmp pop dec pop arpl mov mov dec dec dec inc pop out fsubr sub mov (bad) lea scas scas fidivrl sub hlt call cli mov adc pushf mov or mov test adc pop or rcrb lds push xor jge push lds les test (bad) mov pop jne loopne test aas ss push dec pop aas aas cmpsb cmpsl mov push fisub or lock cld in adc aaa icebp je or xacquire adc mov popf hlt xor inc mov fldcw xor bound addr16 sbb lret ret inc sub xor cmp pop dec push jp out adc loopne rol int3 lds mov sub push mov loope adc adc jg lcall loopne loope mov sbb mov mov out pusha mov mov inc jge aaa aaa ss mov mov es add sbb call pop push pop pop pop add cld dec cmp aaa ss xor push pop clc fcomip (bad) outsb out jbe mov loopne shll aaa inc lcall pop fcomps pusha js jge xor or repnz and icebp stc stc sbb or fs insb jns daa aaa or inc push fisubrl rcl cmp in loopne mov push test and div (bad) iret into mov sub sub stos insl movsb xchg sub stos push ficoml notl arpl mov pushf fstps mov xor dec mov adc sahf pop sbb mov xchg adc pop cmpsl sub sub or loopne sbb test xlat jg pop push pop mov lock shrb out sbb mov mov mov jge test adc adc fwait insb popf sbb lods mov mov and out iret adc inc aad insl gs ja out jge js cmc iret xor fcmovu push das in aaa adc icebp sbb (bad) mov and shlb icebp cli loopne dec dec sbb jns in int3 test mov sar pop inc nop sbb adc loop imul add rorb in inc popa enter orb lods sub sub or outsb out jmp aas jmp jge je lret mov fs loop mov mov aam clc fscale mov push inc scas bound test xchg adc mov mov icebp aaa jb mov js push (bad) ds gs (bad) lcall mov mov dec add lock popf pop push scas test fs test push sbb int xchg push jbe lret cmp sub sahf and inc dec mov scas and push pop std repz imul lds jge ret addb cmp (bad) int3 lods daa gs push push sub mov pop jae jbe sub lret lret notl fisubl cmp mov inc push arpl nop stos arpl es ror movsl (bad) xor int3 int (bad) out sub repnz and movb (bad) push sub dec jl jge inc cwtl xchg adc sbb jp jecxz push dec dec dec leave or (bad) cmp (bad) mov (bad) adcl test lret aam push (bad) in mov jb cmp imul stos arpl ret and test aaa xor bound lea cmp mov cs dec add loopne mov dec add pop mov or push pop jns aad je xchg ret xchg mov inc imul inc add push and mov and jae jle lcall maskmovq push add push out out or inc dec mov shrl cmp arpl mov daa jbe jo sgdtl sbb std dec push mov test dec inc or add add xchg push sub leave leave jmp pop movsl mov addr16 fs dec inc popf cmpsb push pop (bad) (bad) call jb mov add stos out es dec cmpsb (bad) jle xchg jecxz push mov das cmp (bad) adc rcr jno mov test (bad) lcall aam adc xor cmp lcall xchg and les sbb sbb popf mov and cmp or sub cmp adc std idivl addr16 push pop dec arpl and cli dec cmp jo xchg cmp jae adc mov test addr16 stc mov add mov repz mov cld clc mov dec sub nop sahf lcall sar lods lods inc popa xor aam scas sti cli cli adc data16 imul jo push push inc scas call mov insb sbb fisttp jecxz sub cmpsl icebp lock xchg dec rcrl (bad) ret adc dec sub adc and test push imul dec jg mov push lods fdivrs mov jl (bad) cmp add rcll pop mov fcom out out into into inc dec jo pop (bad) stos data16 cmp (bad) (bad) out pop push push pop and cs push push xlat or dec push in add jp xor ret dec or jge movsl idivb stos ret (bad) mov lret fsub cmpsb mov icebp ss pop ret out ljmp aas jns add in mov iret iret jecxz in push pop fstps sbb sub frstor ljmp ss or mov xor in leave (bad) stos aad sbb sub cmp inc cmp and sbb (bad) xchg mov stos mov push test in loop outsb das push or ror cmp popa pop ds xchg test push mov mov pushf pop add daa ret ret (bad) mov push inc in cmp push cmp xlat xlat xlat test in lea inc popf sbb imulb and cli sbb aas dec scas sub rclb (bad) (bad) mov pop push aad popa imul and sti repnz ja inc sbb mov jmp push (bad) stc ret inc xchg (bad) movl pop push push sbb sub imul mov xchg (bad) data16 gs sbb data16 cmpsl dec ret push test test sub or sbb pushf mov mov mov or xor mov add jmp in xchg fcomp push or lret sbb mov mov inc outsl in pop xlat xchg (bad) in (bad) mov iret (bad) cmp mov mov xchg outsb xchg outsb sbb repnz adc jle ret dec mov divb addr16 out sbb mov cmp dec push inc iret loope stc fcoml sbb jb jg imul popf cwtl mov (bad) mov push push inc push cmp jae mov addr16 mov repnz scas push scas push sbb sti jle inc push push ror add add xor sbbl sbb loopne mov add cli call push sub and sub and loopne cmp test sbb jnp and push sarl jp or mov out fcmovbe in add push add add or and imulb jns add xor cld insb xchg insb push movsb fcom pop cltd jno lods push lods and xchg jp lock pop fs movb xor sub lea test fs push pop sub cmp lds adc in (bad) js jo sub inc dec pop loopne gs int3 addl push (bad) push insl mov sub ss dec pop nop add add test rcl rcl cmpsl xchg push fildll xlat xlat (bad) fcompl push enter xor fwait lahf jno xchg (bad) in movsl call lea (bad) jnp pop pop pop pop rcrb cmpsb shl outsb jl dec dec daa daa mov sbb add cmpsb mov aaa mov xchg xchg push aad pop inc test mov movsl mov cmc jo dec inc leave rcl jmp into pop test cmp mov cmp int3 xchg ss ss scas mov push mov sub push test scas dec inc sub and jno enter xchg loop stc dec cmp std sbb adc add aaa fld leave xchg sti sti jbe (bad) and xchg xor mov cmpsl loop stos push idiv or xchg fwait adc (bad) cli pop mov div movsb stos inc fs xor mov loopne xlat mov es sub stos cmp mov bound icebp in mov hlt cmp push and cltd and dec lea pop fwait lahf lods icebp rclb adc mov sub xor sub daa mov inc sti enter das jle jle xor cld cmpsl (bad) or jle,pn push fist jg div jmp cmp (bad) jmp adc std icebp lock lods test cmp aaa xor sub bound xchg dec in notl mov mov ja and push pop fild xchg leave cmp test insl arpl push add sbb gs out rcr frstor ss mov (bad) push aas imul pop and jbe hlt cmp lret fcmovbe pop push cli stos fimull adc pop adc das jae mov sbb mov rcr scas mov add fcmovnu fistl xchg push fcoms jmp or ljmp ror sbb sub pop inc scas or cmpb or mov pop or cmp mov aas aaa outsl test gs lds (bad) dec cmp inc jp cmc rcr mov data16 add push pop inc adc sbb sub enter push push sub pop ljmp mov ret dec jecxz imul pop cmp shr sub repnz push jl dec sbbb xchg xchg pop push dec jns push pop dec jbe mov adc insl aad inc js scas jmp push pop imul inc dec hlt out mov xchg or jle fiadd aaa jl ficomp addr16 push lock into sarb xlat pusha jb dec dec mov notl inc pop push mov add push mov (bad) lea add cmc cmc push push inc inc jno mov movsb outsb into test mov fadd lret sarl aaa aas ss xor xor std movb dec dec mov sub xchg cwtl lods adcl icebp mov xlat pop sub cmp popf loope popa cmpsl dec push pop ret sbb mov mov enter (bad) pushl repnz js rclb push inc mov outsb adcl xchg or dec cwtl lret mov outsb jns in notb xor rorl movsb jb mov loope div xchg lahf mov lods inc cmp arpl repz fdivrs mov add call das pop jae mov xor adc push rcr xchg pushf pop (bad) (bad) inc add xor dec inc test sub ljmp cmp dec dec jno rcl movsb test cwtl hlt mov repz sbb data16 icebp or cmp pop xor fcomp lcall xchg cmp add cld sbb xlat ja mov sahf adc push out mov push stos push insl sbb mov outsl mov out adc shr movsl mov out insb test mov dec lea orb jno idiv icebp stc adc add fwait bound or cmp mov loop cltd sbb push pop adc rolb push adc cmpsb lock inc hlt or pop jg and aas ret cmp cmp aas xor xor iret ret (bad) mov mov hlt loopne js fwait mov sub movsb push fnstsw lahf leave sub mov call push push jmp sub (bad) mov ret inc dec dec inc push (bad) mov dec and mov cld mov xchg insb iret out mov scas loop lock mov ds cmp push mov je and xor fcomps jnp adc inc dec sbb adc mov lret iret xchg jbe mov push pop pop shrb xchg sub int sub aaa jecxz imul and das sbb outsl mov aam rcrb cli mov dec (bad) fsubp cmc add int3 mov ljmp mov or fcomi (bad) pop mov sbb lods mov mov call in jmp adc leave lret add adc adc cmp (bad) int3 cmp sub cwtl jo sbb sbb std std int ror inc (bad) int3 in cmc xchg jp scas mov xor xchg jo fsubl test inc mov push jne out and or adc adc jecxz pop push inc dec dec jb xor mov jo add stos js test (bad) popf or adc push dec mov or mov fcoml je test mov jmp jmp outsb jl test sub sub adc dec xor sub cmc ds mov (bad) test cmp jl mov test stos mov inc dec dec inc mov sub or cmp mov add mov mov push (bad) in in jne inc inc xor aam or add pop or shrb repnz dec cmpsl mov lods dec or (bad) aaa mov scas mov cmp out mov dec lret inc mov xchg jno dec mov xlat fnstenv aas aas pushf xchg in int icebp rcr adc lret mov sub addl inc inc dec pop jl lods dec imul pop or and scas movsl stos and and (bad) and lock inc into mov add sahf int3 hlt mov insb in fsts fcompl pop (bad) ja sub or lock pop and xchg andl mov nop xlat fdivrs test push mov pop lahf fimull or rclb test or inc mov sti cwtd data16 push out shrb mov jno mov in adcl loop xchg sarl js add and push adc call leave ss and pop mov sbb repz scas lods daa bound nop in xor fstp lret inc sub (bad) repz jp xlat fsts sbb cld je aad dec pop pop mov insb insb jle ja iret lahf ja mov jno jbe std lods push lods mov ds (bad) aad dec dec daa loop stos mov jl sub mov cmp push inc push pop xlat sbb xor out mov (bad) or aaa ss aaa xchg lcall pop add mov imull jp dec cwtl shlb or and aaa add std pop daa xor call insb ror test or fldl2t in sub mov dec inc add lods xor insl dec insb insl out lods icebp aad sbb xor aas mov daa pop pop popf sbb and int3 jo adc mov cmpsb sbb cmp dec sbb negb mov or mov (bad) xchg aas xor add mov push xchg cmpsl test loop mov fsubrs mov push test jb sub fcomip xchg rorl add and dec dec cmp push and xor scas mov daa iret roll mov lcall test sub sbb jnp neg fsubrl arpl gs cltd popf pushf arpl dec push cs mov sbb cmp cs lock sti sub loopne push cmpsb mov mov es xlat sub cmp outsb sbb adc popf jge xor stc mov lret lods (bad) add fs mov into (bad) (bad) out (bad) or mov mov call ror and lret jnp dec je pop sbb bound mov mul sub or xlat xchg push dec iret and sub es (bad) (bad) (bad) (bad) jge sbb mov pop out or cmp movsb cmpsl push or (bad) jge mov shrb daa movsb inc inc inc addb xor mov push sarb cmp mov pop nop sbb jp mov inc mov test call ficom fidivrl movsb ret clc mov orl dec mull out push sbb pushf pop bound and outsb sbb sbb and stos push and add pop pop fwait mov sbb outsb xchg in inc mov es add loopne repz jne leave sub push sub data16 (bad) repnz pusha add mov (bad) push loope orb rorb pop (bad) cmpl in leave adc push jmp jge arpl pop daa int3 and jne stos cld iret cmp rcrl mov cmp (bad) mov xlat sub cmc mov xor sbb pop or xor or movsl dec ret sbb inc mov into fwait int3 ljmp xor xor in call mov cmp push loope loope pop stc insb xchg insb test loop xchg jle push stc lea (bad) ret test jae sub push lock orl clc scas (bad) mov mov push push loope (bad) push std fmull in scas scas clc pop adc (bad) in add push jne movsl pop lea or xchg pushf and adc pop or loopne ljmp loope mov mov adc and xchg jg jo and ja loop mov out popa and pop push xchg xchg ret int sub adc fnsave std stos and cmp mov mov dec sbb mov bnd lcall scas and (bad) jmp (bad) lret lds gs pop scas loop sbb scas into push push lods mov (bad) cmp xchg addl movsl pop pop call mov xchg xchg les fdivrp add mov mov (bad) sub inc dec in int3 cltd jge jge jne push mov sub mov ret mov mov mov push pop pop push fistp out out enter sbb fisub jno mov cmc jle repnz fisubr push cmp mov mov or sbb cmp xor jns xor ret (bad) mov mov push pop jbe pop pop pop inc stos out adc adc cltd inc pop push fstpl rclb movsb hlt or jmp push sbb ret dec inc out icebp hlt rcl mov fisubr push lods repz aam das and fsubl sbb sub cli cmp mov outsl cmp jae bswap sub or jmp repz xchg push push push pop xor mov enter loop lods inc gs cld lods push sbb push inc sub xchg test stc cmp sti cmc cld mov or inc inc add fcmovnu sbb (bad) test cmp xchg xchg scas scas mov xor dec dec ss adc adc jno and stc mov pop mov mov add or push push mov mov subl sbb out pushf int3 int3 enter fs mov mov push xchg xchg mov aas push adc (bad) rolb mov mov or aad out sidtl add push add add ja ja inc push add xchg mov sti (bad) (bad) xor (bad) fwait loop (bad) lods scas mov inc dec jb push call add adc add ja sub sahf pop jbe mov dec dec gs div inc inc xor lret jbe std in in mov into (bad) leave enter jle mov xlat fistp cmp add jno jno jbe fmuls or push (bad) cli stos orl and inc jno jbe mov loopne aad xchg xchg cltd cltd (bad) enter enter movsb stos add adc xor jne mov nop lahf sbb pop leave mov add jmp (bad) arpl or aad and aad or xchg xchg xchg xchg sub push rol xor jnp je adc mov js add call jb xor mov xor and mov xchg (bad) push and xchg insl arpl xor mov mov jecxz popa mov mov mov pop xor mov mov sbb cwtl adc push inc sbb loopne bound or cmp das inc ss movsl lods clc cmp clc idiv mov mov xchg lahf cmc std stos stos cmpsb stos cli add mov mov adc sub arpl mov jno mov pushl cmpsl add xlat pop das mov jmp lret insl out jo mov adc in dec and inc inc test (bad) mov (bad) sbb mov addl sub cld fldl sbb sbb div es dec mov and imull ffreep mov push pop add xor jecxz mov bound rcrb push dec adc jbe into push and lret cmpsl mov addl mov ds dec inc mov popl data16 sbb int3 movsb test adc fcompl in stc and pusha push dec jnp (bad) stos push add sbb movhps cmpsl mov int std loop mov add and cmp daa push pop dec movsb adc mov call shl cld cld mov lea (bad) xchg ljmp daa cmp adc jne clc insl insb jae cmp sarl sbb push push lods in adc pop push mov es cwtl in sub out sahf pop adc scas in in xchg jg daa xor stos lods mov xor inc inc jle out loope adc mov loopne fadd mov cmc add xchg insb imul mov outsb push das sub aas inc aad cmpsb cmpsb aaa cmp gs jmp inc ljmp pop daa mov lds (bad) cvtps2pd jo mov arpl rclb cmp lgdtl mov jb ret leave inc adc ret (bad) repnz call xchg push xor mov pop pop popf fcoms sbb je xchg inc into mov jecxz or ret movsl bound lahf dec dec cs lods fwait addl xor ret insb xchg xchg inc inc scas stos mov push mov adc and xlat fcoms (bad) enter in (bad) fst aad ret in sti fisubr cld adcl push push add mov mov ds pushf pushf jg xchg ljmp mov jle arpl bound xor (bad) jg,pt imul jb popa outsl dec sbb sbb jne sbb or ret ret ret lret jg xchg imul inc push mov or roll xchg testb add call icebp loope pop insl nop outsl popa idiv fsub mov popa jb lidtl xlat sub nop cltd ud2 mov aaa add je mov adc dec dec sbb sbb fwait mov pop adc loope popf cltd fbld mov fnstenv lret icebp cmc or data16 popa in adc cmp rolb jecxz movsl ss mov lea sbb inc adc leave (bad) cmp cmp push mov loopne push out fmull mov sub push (bad) imul mov test mov scas ficompl add jp push sbb add sub xchg das dec mov and mov imul in in rcr xor test testl cmc mov in mov dec pop dec push outsl xchg movsb stos jp push aam jnp add mov pop push (bad) fwait lahf and lret inc push cmpsb xchg sahf xchg jp pop push lock out dec inc iret sub iret shrl arpl mov in (bad) adc sub cmpsl das jb popa in nop outsl dec sahf xchg xchg sti sbb xchg aad inc dec insl and rcr es cltd js mov and fisubr fisubrl ja popf adc cmp and cmpsl (bad) dec push icebp test imul pop xor xor xor or ret imul add aam push add (bad) jns cmc mov adc jl insb insb loope mov jmp pop sahf ret aaa enter bound jg popl ret sub outsb lcall fstp (bad) stc stc test sub lcall mov mov aaa jb fwait dec pop adc daa mov or sbb in (bad) mov in aam add xor or sbb add add ds lahf ret out adc iret fisttpll pop jle pop data16 out lods lods mov jmp in push jp,pn cmp jne fs sub sub mov notb aaa xor push pop push cs cmp and jmp fdivl adc add pop or ss mov xchg addb (bad) sub xor cmp push out add in fcmovnbe (bad) (bad) (bad) mov push je imul mov and push adc nop nop xor (bad) sahf xchg adc repnz incb aad fsubrs jmp mov mov mov (bad) into lret mov adc adc out insl arpl arpl (bad) jecxz dec pop xor mov rclb movsb loopne in push adc push xor repnz add loopne push bound pop add in add xlat lds sbb jl inc test sub rol (bad) xchg cld loop mov cmpsb and enter fistl push adc aad or loopne or xchg test repnz jle dec pop dec inc fs dec pop jmp hlt jo pop push dec inc sub (bad) sti (bad) ljmp lcall in lea jnp mov test mul xchg xchg in iret in mov inc cmpl enter sbb shrl cmp test inc sub push inc aaa aas mov sub jno mov mov je pusha add rcrl daa aad xchg lret mov into inc movntps lock xor jo into xor pop fs dec dec insl jl icebp add cmp ret jne pop push data16 out (bad) int3 loopne scas mov xchg loopne push clc fwait fwait mov test mov adc sub nop jo mov lcall daa lcall hlt andb adc (bad) lret fwait lret and mov adc or mov xchg rcr fyl2x lock cld ret cwtl lea cmpb push push pop push in out adc test cmc jns imul cmp cmp dec ret movsb sbb incb sti lods mov xor push (bad) pop (bad) cmc loope in xor mov cmp (bad) push shrb xchg insb sbb decl xchg cwtl mov in fcmovnbe sub pop roll push jnp outsb push xor jl or and sub pop pop xlat movsb mov or pop push pop mov addl pop pop rcll push pop dec into imul nop (bad) xchg mov cli mov cmp (bad) repnz shrl aad pusha vcmpss (bad) jae arpl fsubp and pop sti mov loope jno jnp hlt jg sub push lods std int add cwtl nop sub test add xor sarl add cmp cli mov sub fmuls sub inc inc aaa xor jbe or jge mov cli lock add dec loopne pop push dec dec jbe es push inc enter int3 xchg leave fcmovne (bad) pop mov dec inc sub js les cs lret les int leave leave xor xor int3 int enter cmp int3 leave leave cmp cmp les adc lret loopne cmpsl cmpsl idiv dec or stc cld in inc mov sub cmp mov gs scas fcmovnbe subb push adc lcall inc mov xlat daa ss bound dec push pop lret rcr xor scas mov shrb into (bad) scas mov mov icebp loope lods xchg mov repnz mov (bad) test aad jp sub add inc popf mov or and adc enter jbe sahf mov icebp push in mov sbb jo sub pop cli mov cmc orl dec inc test hlt or fcmovbe (bad) jno sbb mov mov leave fstps mov aas mov mov sub insl idivl (bad) (bad) in mov mov aam push xchg repz push add mov xchg sub sbb rolb in and mov pop pop dec sub inc adc (bad) push push sbb lretw add aas mov sbb pop fsubrl and loopne loopne sub push pop sbb mov xchg cltd mov cmp xor xchg enter dec in in dec inc pop pop inc inc pop pop outsl push jb jmp pop shr adc test sti fist (bad) fcomp fwait cli sub pop inc ja sub outsb or mov xor (bad) fucomip ljmp addr16 ljmp push rcl rcll pop jns and jbe mov fsubrp adc mov jo add cmc out das and mov pop inc addr16 cmpsl adc (bad) jbe dec xor or jae xor out push xor stos (bad) fucomip adc ja (bad) xchg mov repz (bad) cmp ja cld push or repz test adc ljmp idivl arpl addr16 rcr stos push inc mov imul stc in pop das aas insb xchg xchg das jg orl and cmpsb jecxz xchg rcr push adc jae and shlb (bad) scas mov inc jge leave lret inc xchg inc mov mov ret loope ljmp adc pop sbb leave mov mov jmp add test and adc mov rorb jo jo lods call sub pop (bad) lahf xchg std pushf or or mov fcompl pusha mov pop stos xchg cmpsb (bad) aam mov imul mov mov stc out andl sahf jbe lods push lods mov loopne add sbb shrb fwait cld out or push aam ret sarl dec inc inc lahf xchg addb jno and aam cmp stc out out jns outsb jl sbb mov loope jne mov int3 int3 outsl dec cmp inc jne jns lsl popa push push cmp inc arpl outsb xor pop pop adc push inc jno dec push daa sub aad stos push push push mov cmp inc inc mov pop pop pop pop fdivrs adc outsl jg divb je sahf push (bad) fsin fisttp inc dec cmpsb insb and and loop jp out out xor orl mov add pop push adc add sbb cmp inc dec ss mov div repz mov dec mov sbb orl fiaddl mov cs jb jmp inc mov cmc or or ret aad jns cld pop fstp mov mov fcompl mov sub in cli mov cmp arpl mov aaa and clc cld or inc add pushf test jmp lock sub fcompl rcll xchg out push lea cld sbb push pop dec imul jecxz (bad) iret iret mov shrl sub mov (bad) cmp pop add sahf adcl adc pop or pop addl inc push rclb pop fs sbb jbe jecxz adc adc push loope stc iret lret and mov mov or xor pop or push test data16 movsl loopne dec mov mov (bad) sub cltd (bad) pop sbb sub aas adc or sbb xchg cltd in leave mov xor add add sbb mov ljmp lock sub lcall or loope leave adc cmp pop scas cmpsb test insl sub mov jns pop into jnp lods fsin in add mov scas mov jecxz mov call and lret insb sbb rcl mov inc push sbb xchg sub (bad) cli xchg lods xor xlat icebp icebp lods mov xchg xchg ljmp add cmpl push test (bad) dec add ret or xchg sbb or pushf fnstenv mov idivl in popa xor mov (bad) jbe add rcr fcomp loope or jl stos sbb jge lock push sbbl inc inc adc dec ss ss push and leave inc aaa cmp add lahf ljmp mov adc pop fwait out jmp xchg popa mov xchg adc fwait out in in in std (bad) cmp cmp movsb xchg lock jle sbb lods test lds sbb inc data16 mov aas (bad) mov jmp or inc adc test ljmp or inc push inc dec sub out and ror lcall sub push insb js mov fwait scas stos and and fwait mov dec push mov ljmp fst inc or sti xor or and mov xchg sub in hlt fnop mov icebp (bad) popf xchg popf cwtl nop push xchg push push outsb pusha cwtl nop cwtl into es pop pop sbb cmp (bad) jo adc jno add add notb push or aas aas sub adc leave int fprem div add mov pop push loope ret fcmovnb lds cmpsb push sbb cmp or adc mov inc daa lods mov cmp mov popf nop lea mul xchg inc stos in xchg xchg bound ret dec cmp adc push pop sub mov push mov sub stos push mov decb mov mov cmp inc push or loope jno ss mov jnp or push add lret mov pop pushf push mov loop (bad) xchg xchg pop (bad) enter lock loope test pop inc cmp movsb push add cmp sbb and xor lea dec movsl stos mov (bad) mov scas push lods push push xchg loopne std fwait mov dec mov add ret fadd lret dec push push xchg pop (bad) xchg mov pop outsl dec pop sub add jbe popf or push inc push sbb gs loope fstp mov push jnp inc fs add out in ret xchg jecxz inc dec orl in jne pop add les pushf pushf xchg pushf insl dec dec ret add out push pop sar in imul sbb stos clc clc jg idiv popl imul and push push sbb popf cltd pusha pop add sbb push sbb lret push cwtl pop jecxz scas xor scas pmulhrw sbbl shrl xrelease cmp jg iret add push mov hlt mov dec inc stc icebp (bad) jp insb cli into lret je jg lcall xchg sbb imul dec sbb test inc add mov jl out stos push stos adc inc mov push push push fstpl test pop aam jp push pop icebp and sar mov cmp push adc sbb (bad) mov sub mov fcmovu cwtl fcoml jns jmp jmp (bad) mov mov rol lcall inc mov cmp jnp outsb push or push push jp je push push ret insb lods arpl jecxz imul test dec xchg in mov sahf arpl dec call (bad) push mov jl insl insl ljmp jmp push jae jecxz sub mov lods mov xor push push cmp sub pop push push outsb js jmp js add into push pop cld dec inc xor stos daa and sbb lea out addr16 sub sub aam rclb dec inc int fyl2x repz xchg movsl pop push or pop push fstps imul adc xor rcll test add jbe lock jle push mov iret (bad) xor subl bound lcall pushw sbb lods mov xorb adc mov std stc leave test adc movsl test hlt hlt in stc icebp icebp (bad) jecxz in inc dec dec pop dec pop push push mov aaa repz push fcmovnbe faddp enter addr16 ret fcmovbe inc dec inc dec dec ror scas mov loop xchg sub sub pop sub sub pop add xor pop das dec lret scas mov mov inc bound pop pop imul and and dec pop xor cltd nop test test cld andb or adc push pusha or icebp call mov (bad) xor or enter inc mov repnz push push pop push add js addb xchg adc and pop (bad) movsl cmpsb cmpsb cmpsb sub mov insl outsb divl fwait cmpsb subl xchg insl out orl mov ficom jae cmpsl push test leave inc xchg popf xor fmuls jp cmp push push (bad) add lods sub mov test popl into loop gs stc icebp push jp es in fisub idiv lret iret daa mov pushf pushf jmp xor mov pop pop jg es add cmpsl stos movsb and cmpsb cli call dec inc insb bound adc sbb pop sbb push and sub mov add mov mul movsl movsl sub inc cltd sar insb adc lods (bad) cmc shrl cmp cmp lds jns xor sarb (bad) fucomip icebp cmp das or or or jl outsw jns xchg nop xchg cltd cwtl mov inc inc push push rol xlat scas scas mov sbb xor or aaa outsb jle (bad) lea andb imul sldt mov dec dec jno jbe xchg cltd push sub or test sub adc (bad) cmp mov std ljmp lret and insl insl je pop outsb jle push ds aas ds fstpl pop ffreep into sbb dec roll jge jnp scas mov bound std call (bad) or nop addb lea xchg sbb je lds jbe add and dec push jne or mov add add add (bad) dec stc clc hlt hlt mov xor call stc stc in in pop xor iret mov stc fucom or fdivr aam fnop je xchg add push add mov fwait cmc jecxz idivl push cmp push out das cmp int3 dec mov jecxz push jae lret mov jb jb adc or jo mov addl (bad) sub dec push xchg mov adc outsb pusha gs outsb outsb xchg fwait xchg cmc sti (bad) mov dec pop jle pop xchg fdivr test xchg cli mov add pop fisubr not sahf lods test (bad) aam pop sbb lahf xchg shrb aas shl lds add jns xor xor and mov aaa enter out insl jecxz sarb enter dec call sbb mov mov int cmp mov adc mov dec data16 sbb push sub cs push inc lret add mov mov dec imul jnp jbe xor lret pop or (bad) enter js int3 leave inc cmp test mov std and xor sbb or push pop inc push push mov and pop iret lret pop xchg outsl outsb (bad) int and movsb inc int (bad) mulb imul mov gs (bad) inc push push pop (bad) add pop scas mov xor jg xchg pop mov pop inc les lea fmuls dec dec or cli jno iret lods loopne test push je int3 or cmpl sub loop das das stc fdiv xrelease mov mov adc je in sub iret dec cmp or aad int enter fxch in cltd jno test push and (bad) addl test pop bound das and dec and int3 enter out ljmp and leave lods dec push push mov adc cmp fiaddl xor stc divl xchg leave leave dec inc xchg mov rcrl rcr fnsave jg ja in add int3 xchg int3 les inc push inc jb cmp pop adc cmpsl xchg rorb sub cmp cmp jns add movsl sbb js cmp xor pop push fs addl lea jle jl mov pop insb cmp cld jmp (bad) arpl mov fisttp cmp push (bad) scas mov sbb into cmpsb scas mov lock mov ret stos mov push adc idiv lods sti add jg inc dec mov xchg xlat xor jne sbb pop jl cmp adc jg aad (bad) aaa sar addb xchg (bad) jmp out loopne pop pop jo push push add cld loope mov shll and pop inc inc xchg xchg lea aaa or push xchg imul lods mov cmp jl (bad) stc add or sub jg sub xchg loopne in or xchg sub gs cmpsb or dec leave in jecxz pusha push mov push iret movl syscall or cmp lcall (bad) pop pop pop pop mov lea cmp aaa mov or adc dec pop xor dec scas enter ret and add test xor push jae aas push fsubp xlat xor loop loop test je,pn cmp inc dec cmpb js xor jl push inc push adc dec je push mov and xchg mov (bad) jbe pop xor sahf test ljmp gs mov dec pop aas inc mov jae scas fnstcw mov lea inc lret xor (bad) insb pop mov lds lods (bad) arpl or xor mov lret dec inc test mov inc ret int int3 fmull movsl mov and hlt jns clc adc inc popa add sbb push pop es push popf sbb insb insb xchg pusha out loopne ljmp mov lock inc clc aad and push fstpl push or movsl lods mov jl (bad) lahf xchg les cli out scas lods lods lods std xchg pop dec push push jo nop test push dec sub inc push xor rcl pusha jo pop insb xchg insb sub push push data16 push fisttp push push mov add mov lods mov cmp mov in dec or xchg mov lods (bad) (bad) enter inc push push push push push mov cmpsb into xchg xchg xchg test adc aas sub and sbb xor aaa aaa push mov add mov and mov xchg pushf sbb push sahf fwait mov dec dec push adc lcall daa sub xchg sbb dec jo into into cwtl mov dec and popa outsl and js xor add cmp inc lret xor xor dec dec hlt cmc ret (bad) lods in lods out ljmp clc inc sub insl push pop xor push nop mov stos std repz jl mov das and aad lret notl jecxz jmp mov ret and mov pop int cmp imul fistp mov pop fisub sub ss (bad) js rcr or inc sub cmc shrl mov sub inc inc iret mov or jb cmp jg iret into icebp cmc js pop push inc clc mov movsb movsb movsb cmpsl and div mull pop (bad) xchg xchg ret and mov jbe jbe rcl cmc int sbb mov fistl rcr lret sbb cmpsl jecxz jecxz lock (bad) (bad) xchg call cmc sti movsb out ret xchg dec dec cmp push pop sub ret pop pop sub bound and cmp dec or or cmp insb cmp (bad) mov mov nop nop in lods imul daa notb dec enter sub ret sub lea gs pop dec popl xlat jmp ret mov test pop fdivrp jle bound xchg mov js push mov icebp jmp mov and in mov inc dec fcmovnbe (bad) loop jmp dec dec pop xor push sub inc bound mov (bad) data16 ss adc jl (bad) mov lret lds sub ja stos scas pushf inc inc cmp mov (bad) iret insl dec adc lahf adc xchg jne adc push add call rol (bad) ljmp bound (bad) mov ret stc out sahf adc push dec das rcr mov and out mov int3 mov push gs sub cmpsl loopne and xchg mov sahf (bad) call data16 outsb mov shrb insl lods bnd and inc inc cs push mov repnz sti cli imul out push dec (bad) int fisttpl mov cmpsl in hlt lock push adc daa mov xchg loopne (bad) xor pop mov dec dec es dec add pop xchg mov push adc dec mov jno pop dec mov in or stos movsl addl ljmp in in aam jecxz xlat sub adc mov or loope mov pop pop push mov pushf fdivr movsb stos (bad) lret mov imul (bad) push pop dec cmp repz sbb aas sub pop pop mov sbb sbb fsubrs mov fwait xchg jae jnp fcmovnu in mov aam loop xchg (bad) or jns jp pop cs scas pop pop dec cmp iret dec dec sti sti jmp sbb (bad) cmc test (bad) cld add loope dec inc insl pusha je push xor mov (bad) mov scas call in ljmp inc and cmp add pop push aad jecxz (bad) mov and inc bound lods inc dec and ffree jnp (bad) rol sub lea in addl add jb lahf mov mov fdiv inc and movsb lock std std mov and inc inc push add sbbb jae xchg xor jge dec pusha jmp mov mov cs sbb xor pushf cwtl cwtl pusha outsb lret (bad) test sbb add cld add je adc and enter xchg out jp or in ljmp (bad) fdivp push dec inc aad out dec ljmp push xor stc imull daa das mov sbb xacquire adc lret mov adc and das movsb jae jmp (bad) jp jno (bad) call pop test cmp and push aad pop mov repz jbe jle xor ss inc scas xchg mov push xchg mul ja gs inc insb jl je ja (bad) pop sbb push or cmp loopne jmp das das cmp stc into (bad) jne cmp mov loop push mov rolb sti in lret icebp jecxz bound push jmp stos rol cli out or push stos das jmp std repz call or or sbb mov pop add adc jg jne leave enter jno cmp dec inc in loop repz gs mov push xor jmp pusha and pop cmp insl jg std flds aaa fist push popl jle push xor mov adc or mov pop add sbb push mov loop add sub cmpsl jecxz cli adc pop pop and jne sub in (bad) jo jo shll sahf jp cmp sahf mov or xchg inc arpl lcall jae sbb sbb jae dec pop pushf (bad) out pop or mov in sub add fnstsw pop (bad) xchg mov adc mov jne xor inc int push pop mov nop js mov mov inc popa add ror leave nop mov cmpsl jecxz jecxz dec adc icebp pop adc jne in pusha inc gs pop mov es mov adc cmc js jmp jbe dec test inc jb dec dec jne xorl outsl popa lret repnz je jl mov ffreep xlat mov fxch rcrl push cs lcall lds mov jecxz xchg push insl sbb cmp out test fdivr pop and aas jle andl inc sbb data16 decl out popf popf popf pop pop sbb mov push mov adc lods movsl mov xchg cltd icebp std std cmc out push push pop pop jg iret iret cltd xchg (bad) nop pushf pop out pop jno xor hlt lock popf mov fst cmp push push or icebp sbb out loop xor cmp leave sbb pop out cmp jmp std lock sti repz pop jg negl lods cwtl popf popf popf les mov push dec or test xor adc push push (bad) cmc cmc test aad mov repz into ljmp mov ss dec leave hlt insb and push push mov sub push gs dec enter push jns and movsb arpl or jl add or loopne and push xchg sbb push mov jo fwait out jmp xchg cwtl xchg mov icebp jp sbb dec pop push xor daa daa jmp xor adc or xchg out out lods es xor testl jg pop add push inc adc and dec inc jge fldl mov outsb cltd loope and inc test in push or daa aam mov lds sbb xchg pushf lahf push test or in in adc mov mov aam inc add xchg push sub push fcmovnu push adc cltd (bad) push adc sarb cmp mov hlt div test fs sub stc loope arpl loopne (bad) pusha jne push ret lret sbb jne mov lods lods and das fistpll mov outsb outsb dec mov lock mov dec dec dec mov lock mov jp,pt adc jns pop xchg rcrb jp,pt sbb jns pop mov inc mov jp add jns jbe jp or aas mov mov mov inc inc mov in adc out (bad) or and lahf lahf jecxz pop pop (bad) xchg fwait lds repz rcr sub xor leave int add das and sbb add mov jnp xlat xlat repz push jmp mov out adc (bad) or rcrl jae (bad) mov daa fdivp arpl imul push push jle ljmp enter aaa mov (bad) (bad) stos mov inc imul mov sub popf jae repnz sub add jnp repz out jb xor pop pop fnstenv ja pop push (bad) cmpb bound mov ret ret pop mov sti sti push test call pop mov fwait fwait dec dec xchg dec or (bad) dec or les test dec or les test dec or les test icebp insl insb insl lcall loope out cmpsb scas scas out out repz pop pop inc inc lret mov movsb jecxz or add jp push jle lret arpl scas rcll pop aad pushf pushf je lret xor int mov dec outsl ja adc inc js fild (bad) popl lock mov mov xor mov scas in pop push push push outsl lahf in out mov jmp push adc push jnp jnp ds pop rcll dec sbb in mulb inc push push sub enter or or icebp je mov popa popa call clc adc pop push cmp jg xchg movsl cmp cmp scas (bad) shrb int3 in pop xor pop pop xchg push pop fldcw sub pop stos jle push fs jp cmp das out mov sbb (bad) ficomp jns icebp fcmovu ficompl rol dec inc stos push scas push scas idivb ficomp pop mov dec inc inc inc inc lret mov mov mov outsl nop in les push pop pushf imul mov out imul xchg call add (bad) lret and dec ret cli xchg les data16 cmc cmc jo dec cmp push push (bad) add jle mov or int3 roll push xlat lahf out lcall dec or jle or insl out cmpsb (bad) aam push pop pop mov xor mov aaa ja jb lahf aad dec (bad) mov incb add (bad) outsb jp and jne jne fldcw cmp cmp dec add and lret push inc enter inc lcall mov xchg jle fwait fwait lcall out cs stc fcom shrl (bad) lea jg add mov adc fidivr out sub cmpsb mov cmc movsb into iret inc sysret push push push fstps sti into into out jecxz xchg mov out pop fdivrl popa or std insl gs lds lds arpl stc jb xor push xlat mov mov nop nop push add cli jno dec dec dec pop jge cmc jo (bad) mov xchg inc test inc or adc inc jno ja (bad) into pushw in bound mov les pop rcll cltd aad cmc cld cmpsl mov push ficoml push xor mov (bad) test push and popa ljmp cli mov or loop repnz nop in add and jge inc mov notb cmc mov call les ss lock movsl cmc orl (bad) adc sahf jmp push add loop loopne lcall ljmp or call push gs fwait mov add add in fnop rol (bad) stos mov mov mov pop sarb cmp or xchg out out lods es xor testl (bad) sbb sbb sbb cmc enter sbb insl jnp jp push adc loopne lret ret sahf ja fwait fwait fwait ss mov lock mov lods (bad) cmpb mov xchg (bad) lea and mov int3 lea movsb mov mov insb imul cmp outsb outsb and pop sbb imul popa popa jns cmp imul int3 and (bad) sub (bad) xchg xchg aad lods test jmp (bad) rcll inc dec mov adc dec pop pop pop lods test sbb xor lret in movsl cmc repz aam sar xor mov add call mov iret arpl and xchg xlat xlat imul call gs lock jne bound dec mov mov cmc std cli mov in into xor daa (bad) (bad) out and call loope cmp sar inc inc inc and mov scas stos sub loopne xor sti stos inc cmpl (bad) push dec (bad) cmp jbe adcb mov int3 test int3 push pop pop pop adc sbb add mov lret or xor rcl rcrb push popa adc out pop inc imul bound xor stc sldt out and das cltd rol movsb test cmc idiv dec pop adc and or sub nop leave lret data16 es in out fsubrl scas pop push rcl rcrb adc pop pop sub popf cltd xchg and das popa popa imul xlat rolb adc and sub mov and adc (bad) movntps pop pop shll out jle imul fcoml pushf mov ds pop pop aaa ds syscall or pushf fwait xchg mov test adc and push (bad) enter (bad) xchg pop or jmp mov sti incl popa inc push pop push in mov ret pop push jb insb arpl mov xchg or cmp lods lods (bad) sti imul cmp icebp loope pop sub push and or inc repnz mov ror stc jmp push or dec push outsb mov push in scas int pop pop fwait lcall fstp dec pop sub test enter aam inc or (bad) mov cli test mov fnop data16 sub pop pop or sub daa daa daa adc scas faddp ret push inc pop push loop mov mov icebp std in pop add rcl aam cmp (bad) (bad) int3 ret jne ss leave fld int and pop lret lret lret imul mov fsubrs add jmp mov cwtl mov (bad) mov (bad) jbe sbb sti out mov xchg cmc cli dec cmp sub (bad) (bad) scas in jecxz and lds out into in out sub push hlt sti js add ret jno popa out aas aas aas shl ror (bad) popl sub out out cmp and jmp push mov mov cmp imul and push and clc dec ds bound (bad) std (bad) push mov mov push in loop and int sub (bad) lahf lahf mov or pop pop push sti repz jns add fld xchg jns adc (bad) repnz js subb fs pop ficoml mov dec sbb cmp adc cmp (bad) leave jg les mov subl subb xchg xor mov or xchg xchg js addr16 and test push pop in mov and rolb push arpl pop mov or pop pop push add sti je test fwait fwait fwait stos mov mov pop inc fs addl ret shll das cltd enter (bad) rcrb out (bad) and dec mov push or daa daa xchg pushf int push dec dec xor sbb cli cmc inc adc mov xchg xchg leave shl push or jmp rcl inc dec mov fldenv adc maskmovq mull lock mov xor ds aad and dec dec orl mov iret rol cmp push scas fidivl testl xlat fsubrs jecxz pop or mov stos fwait orb pop mov sub adc adc pop movsl mov sub rclb lcall js mov test mov mov cmp outsb jp cltd lret sbb sbb jmp fsubrs pop pop mov dec dec lock fmuls in mov cmp lret enter ret lods movsb jmp ljmp in in jmp jl dec lea adc pop cld in (bad) es pop and fcom popa cmp ds push pop jle out mov mov mov stc jbe sti mov imul (bad) addr16 push aas pop pop pop pop push pop jp ljmp es iret ficom fcompl sub push ljmp push je push sbb xor jp and cmp dec es shlb cltd fisttp dec jle cmp leave (bad) jo sub das aas ss jno je lahf bound jbe out sub icebp out loop and mov loop loop dec add lock int stos stos stos sub add repnz fwait mov (bad) inc shl test divl cmp jae pusha lea enter dec scas mov mov mov mov dec inc movsb stos sbb mov (bad) jbe pop iret loop add pop sbb jnp in (bad) nop outsb outsb outsb or dec push outsl and add inc dec imul ucomiss dec mov inc int3 shrb inc stos mov push test dec push outsb data16 xor jmp ret push jg cmpsb cmpsb cmpsb lret dec mov mov fwait xchg ffreep clc lock cmp sbb xor jge jbe (bad) jmp xor ss aas and push (bad) cli ffreep (bad) out test daa daa mov fwait std rcl aam scas (bad) push xor ljmp out mov cmp repnz popf xchg xchg mov sti xchg mov xchg cwtl pusha outsl fldcw ds or scas sbb dec inc push xchg idiv add push mov (bad) pop and dec dec cmp adc pop pop or and jg movsb pop movsb ret out mov push rcl test and out mov mov jl and aaa mov movsl movsl movsl dec bnd pop mov inc push mov or lret jmp enter xchg xchg rol addr16 and callw push adc addl cmpb mov push push push adc push dec xor jl sub or and add or xlat rorl sti cli jne nop stos cli adc (bad) (bad) pop inc ds (bad) ljmp inc and pushw pop ds in mov jp stc adc jle (bad) or clts dec push das daa popa out out out in in mov lock pop sbb rol mov and xchg test popf lret mov mov or inc aam aam scas mov stos scas scas (bad) not inc add ret out jmp ja mov xor xchg test jmp mov test pop mov lods lods lods outsl inc pop ss mov das (bad) (bad) dec leave test (bad) (bad) (bad) cli repz mov mov call out mov mulps (bad) (bad) fcom hlt jns aaa cmp mov push stc cmp imul mov or mov mov xrelease lods mov mov dec inc push inc push pop or lcall arpl addl push jno bound xchg xchg cwtl es xor cmp push push push mov aaa cs jmp mov int3 into and lea scas inc cmp inc push add or mov int3 shlb (bad) inc lret or dec push inc add and jge xor lret mov int3 fistpl jns imul (bad) les fcomi ljmp add push push cmp jecxz mov or lds xor push add pop push push or cmp jge xchg rcl adc inc inc lea insb insb xor sbb and jo (bad) mov push aad rcl push xchg into mov in mov repnz cwtl jo fmul add jl jl ret inc inc inc xor fucomip out push or std jmp sub fstl sub add cmpsb daa sbb sbb pop dec cmp stos xchg xchg (bad) (bad) push out out loope or cmp jge inc pop pop sbb pop push arpl cmp jnp jne or scas scas out out loope mov (bad) cmp iret or push outsb mov (bad) (bad) jp jl push xor rolb loop mov adc mov sbb movsl jbe fxch add mov test inc dec aaa sub inc inc inc inc into lock pop dec xchg jbe aaa popa or mov xor cmp nop cld repnz pop sbb add scas call ja cmp aam mov xor cmp inc push xchg je or jg clc aaa aaa mov ret imul adc jno xlat xchg xchg ss test ljmp pushf je jae (bad) or fisubr aad aad sbb lret add jno pop pop add push dec mov mov jmp sbb pop pop dec push xchg xchg xchg sbb hlt cli inc pop pop bound sbb jns jne sub (bad) sbb mov stc out lret loop loop icebp lock test aam xor push ja xchg gs dec pop push pop mov out cli test push inc xor mov into faddl aas mov daa nop fstpl int3 popf int cmpsl iret out jae xchg clc mov sbb push sbb add (bad) movntq push push mov cmp mov repnz jle in mov scas jp ljmp (bad) lock mov mov sbb sbb jne arpl push insb (bad) mov mov lods lods mov cld xchg iret dec sub int xor add pop jle adc adc adc aas and mov lea jne fnop xor (bad) mov pop or mov inc fwait test sbb sbb dec lret mov jp daa daa daa dec push mov mov loopne jg adc shrb sub imul push pusha mov (bad) ds lods push lods push imul sti mov xchg arpl popf test mov cmc or pushf out std (bad) xor xchg lret out xor adc repz sbb inc inc inc lret repz jns bound mov add mov add or mov jl inc pop incl jg mov js cmpsb mov lahf (bad) xchg xchg push jge push idivb push mov cmp xor or in xchg jno daa scas jmp cwtl fst push xchg lret inc pop sti movsl rcr sub and xchg shlb es (bad) jae ret sbb pop bound push lret imul fldenv cmp js cwtl pop mov ss mov mov mov inc dec xor push pop and ja jb push push push bound and es jb adc push push outsb jecxz push aad jmp xlat pop mov or xchg xchg xchg sub inc shlb sub and xchg push xchg es push add lret xor icebp popa xor inc xchg jecxz movsl loopne fistpl nop aad push ficom rcrb loop mov mov les rol fcmovbe pop adc in repnz inc (bad) movsb je dec dec sbb int3 out icebp jle cmc rolb mov inc inc out in hlt movl ljmp push sub int3 icebp mov mov sti adc sub cmp and jg (bad) or add pop adc popf jne jle jle andb fldcw ret repnz fcmovb ret in inc push push xchg push es (bad) mov adc jg xchg jno rcl (bad) push dec dec dec (bad) jb xchg mov jp (bad) mov sub hlt in cld cmp mov mov cmc repz lcall sti fstpt sub cmp inc (bad) mov pop push ds sbb push jo inc dec es xor ss cmp cs push es jo shrl pop in loope leave mov or repz xchg stos push fldl (bad) push xchg rcr jmp or inc mov dec dec and cwtl adc std xor add enter jne jo enter into subl push and repnz cmp xor lret sbb fiaddl mov daa lods fnstenv cmc sbb mov pop stos jae xor test add cmp decb fs int3 bnd clc mov ja je rol cmpsl mov pop dec lds jecxz stos dec dec dec sbb fwait (bad) cmp (bad) sub into lahf into popf lret clc push add jl xchg (bad) int das (bad) xor push fiadd mov sarl js jl xchg pop mov cmp leave scas xchg enter xor aad std mov icebp in call addr16 inc dec cld mov xchg test add or (bad) call es jl jbe fucomip mov adc pop mov bound mov mov push inc pop push add clc cs xchg stos (bad) pop fsubl subb mov cmpsl (bad) lock push lods sub pushf xchg jbe rcl test data16 lds hlt incb jne pop cmpsb jbe mov jl sub addl inc test inc inc inc mov inc mov or pop mov (bad) adc adc dec insl push mov sub into sti aas decb and (bad) fstp push mov sub add lcall enter sbb pop pop jo adcl cld fcmovnu and mov call sbb lcall into jmp out movb jno jns inc jno cwtl fnstsw mov iret or inc adc fcoml aas mov int or sub aam mov cmp data16 mov in ds adc xchg sbb rclb sahf sahf sahf fstpl popf (bad) xlat xlat xlat xchg sub sbb pop xlat xchg stc test push push ds sti rcrl push gs or dec (bad) jmp sarl and push pop pop pop pop iret jmp into lret adc pop jns fstp mov or icebp (bad) lds push test sub sub sub fsub call (bad) push pop pop mov repnz cmp dec mov mov inc mov stos mov mov jmp pushf lds das add mov xchg sbb icebp clc scas inc pop movsl pop movsl cld iret cmp test add cmp or xchg cltd mov mov xchg xchg xchg into out fs and dec dec dec out loopne imul ficomp add cmpps out ret mov pop pop and and xchg pushf xchg xchg scas cmpsl test or fcmovnbe (bad) xchg popf xchg xchg adc adc dec jbe lret insl insl sbb or jno xchg inc push sbb inc sub xchg xorl in fwait mov cmc sbb sbb dec dec or movntq inc xchg jecxz pop pop pushf loop or andb call sbb xor leave mov js sub ret push outsb cmp and dec outsl arpl jge ljmp push jo aad rcr xor or adc addr16 mov pop xchg pushf nop push add xchg cli adc mov loope enter jne divb dec or cmc and sahf xchg repnz stc push sarb cwtl xchg imul sub pop sbb jmp xor or lret ljmp mov dec sbb pop pop cld popf cwtl pushf pop pop pop data16 push pop pop (bad) xchg lahf lcall shll xor jb sbb xor dec cmc mov xor aaa and push push out jge jge push push cli (bad) push inc inc push push and dec dec cmpsl out repnz rcr xor cli sbb lret scas das ror mov lret cmp insl jmp mov das std stc (bad) lds xchg push push push xchg xchg xchg (bad) int bnd ret fcomps jns mov ja pop pushf fdivl xor or popf ret pushf pop push orl aad xlat or jae push icebp test cli ret (bad) push push adc sub movsl and enter cli out mov or jg cli xor mov sbb dec addr16 leave (bad) jno push pop jno mov pop pop pop cltd mov enter ja jb xchg loopne rclb les aad cmp pop push ds into scas xlat mov aas pushl adc (bad) or xchg push push push sub sub out clc testb femms push out (bad) repnz insl pusha je jecxz aam insb jb xlat ret sti xchg xchg jge enter clc test ret iret in cmp adc nop jecxz pushf jb xacquire mov jne loopne lock aad in xchg jno adc adc scas cmpsl cmpsl or int3 and push push push nop mov or negb js cmp mov aam pop sbb add dec dec mov shrb and std sub int das decb jmp xlat xor and pop pop pop dec mov in push cmp outsb xchg test xchg popf jne cmpsb into fidiv lock xchg nop adc cmp adc push (bad) mov lahf lods insb xchg and pusha adc jmp or pop enter mov jns ret fxtract hlt hlt mov ret sub hlt shr (bad) xchg (bad) fiaddl jnp xchg sub pop outsb outsl pop dec mov out mov add sub adc cmc clc lock ret cmp xor adc inc inc inc aaa sub lods dec lods mov in lcall xchg add mov mov shll xor dec sbb and mov pop out push pop pop aam lods imul cmp fldcw jp mov cld mov scas cmpsb dec test aad mov inc push push inc dec xchg pushf xchg test inc add sub inc dec mov pop movsb sub pop and inc push push jb test cmp int3 fsubl test (bad) mov lods push fistpl xchg jl cmp adc dec xor mov gs lret mov mov push shlb fsubs sbb nop jne lret inc mov cld xchg jl (bad) popa test adc mov sub dec dec pop push test mov push lods xchg stos push stos cltd inc add xchg stc icebp sbb (bad) fst adc sub enter out sub cs xlat sarl es (bad) in popa jbe jbe jbe ja push pop mov mov dec es es xor cmp xor pop fsubp leave cmp paddw std stos inc das sbb (bad) sbb mov loope div mov orl negl enter inc inc (bad) mov fbstp or ljmp fs push fnsave sbb aaa jne inc add into or mov mov pop adc lock les cld cwtl cmp add fsts out mov femms add and pop dec sbb cltd (bad) ficom sub idiv int stc lods xchg ret dec dec int lret or mov sbb in mov idivl xor adc fcoml push inc inc and xor scas out jmp (bad) pop sbb adc sarl mov sbb (bad) lret out repz adc mov mov lcall orl aam dec dec lds pop (bad) addr16 jbe inc inc xor insl adc in test sbb jg movl pop pop into rcll mov jecxz fistpl jmp mov xchg (bad) xlat push outsl or adc xchg lock aad mov xchg pop outsb push das pop dec rclb dec dec push pop insl arpl sbb fbld mov cmpb sti in and pop inc int3 andb (bad) mov les dec or dec rclb stos or cmp lds out adc jecxz mov (bad) lret ret jne jne mov jbe (bad) cld cld cld mov cmpsb and lock or (bad) bswap je arpl popa outsl pushf xchg xchg sub cmp mov or lds or out out adc data16 sbb jmp sbb mov roll daa lods mov xor mov mov test nop mov mov xor push clc fdivrl xor aaa aaa jb push bound aaa aaa xor cmpsb mov mov xor aaa mov dec ds push div hlt hlt mov dec cmp inc add lea aaa push out pop nop lahf sub adc scas mov iret pop push push dec pop xor inc test jno int3 xchg cwtl fistl adc xchg insl sbb lcall int inc add push cmp div lds dec mov rorb jne pop or add mov into popf jne mov sbb aas ds push data16 imul and addl das aas mov cmp imul lret int in in (bad) jmp ljmp in push push enter inc lcall out cld cmp popa outsl adc and mov pop rcll pop dec es cmpl fcmovb xlat pop mov out add sbb outsl in mov jle out push enter mov bswap inc int3 in mov shl jne,pn (bad) mov bound stos movsl ljmp sbb sbb sets adc jbe jb in xchg (bad) decl lea push insb dec movsb push idiv mov xchg push mov xchg loopne faddp (bad) movsl (bad) xor cmp pop fisubr pop inc adc xor cmp rcr ror cwtl jo fbld fild xchg test mov sbb inc es rcl rcl cmp ja lock sbb and and stos imul pop mov stos jmp inc inc dec enter pop or stos stos xchg into xor mov cmp imul xlat mov std shll bound cmpsb mov jp add pop inc inc scas push push jnp divl and imul test pop imul je and stos nop outsb out xchg out bound ret lret or jno mov cmp mov loopne cmp and inc test or insl xchg jp xchg mov cmpl pushf (bad) enter rclb inc mov xchg sahf sbb push push ficomp or mov mov mov cli lods cld adc out loopne xor lcall sub sub (bad) stos inc inc dec into add add mov push pushf xchg push fnop push xchg test cli out pop push out (bad) pusha pusha push adc mov mov aam sbb mov pop scas push pop sbb mov push push pop xchg push daa (bad) mov xchg icebp sbb add lods sub hlt mov mov and gs cmpsb sarb mov les pmaxub les jle sbb int inc xor push (bad) hlt lock je pop ret dec leave xor xor xlat xchg cwtl adc (bad) (bad) rol cld ja pop popa call shll and and test mov test in xlat push pusha xchg rclb cwtl sbb pop sbb mov ror or mov mov mov jg cli test mov mov mov out pop gs dec xor jle cltd addr16 addr16 rcrl jmp dec movsl mov sahf sahf push xchg (bad) ljmp cmc or jbe (bad) push pop push imul aas pusha or push or jno jp lock inc sub out cmp das hlt sti jg cmp cmp aas dec and cmpsb test aas xor rcll ljmp pop fcomps pop xchg outsb outsl dec pop sub or bound ja mov pushf int3 and loop dec js ss or sbb in out loopne imul mov mov aam aad pop inc xor das sub adc cli lret fcmovnbe je aas jge dec mov ret leave inc push dec pop cmp out cmpsb dec movsl mov clc fsubl outsb out out mov inc pop cmp outsb adc mov inc int push pop or jmp jne add lea xchg ret fwait pop pop pop cmp in fdivl les mov adc adc (bad) cmp fcmovbe subl andl cmp repnz push mov fstl outsb fs pop jge push push push push inc push inc inc jae jb pop xlat mov es and into into mov outsl outsl outsl push xchg in (bad) stos fild aaa pop adc add fistp lock ud1 mov jle xor das movsb and and sbb leave addb mov xor stos sub mov movsb rcll pop pop jne mov mov pop orl jne loop inc inc push pop mov mov mov (bad) ret dec lock jp pop fs pushf pushf call stc aad scas call mov inc stos cmpsl mov adc out pusha call nop sbb loop popf movsb mov (bad) scas inc stos inc mov mov (bad) pop sbb pop adc (bad) repz cmpsl in cltd push push out es sub mov loope xchg rcl xchg movsb lods cli add pop cwtl in out mov (bad) sub sub and sbb in mov mov ret lret and pop add jns mov dec inc inc push dec mov jbe xchg xchg nop xchg (bad) test test push or xor mov push (bad) adc xchg xlat lds pop arpl gs add sub and mov push dec pop mull out mov sub jbe jge ret mov inc sbb sti negl and and mov movsb loop out inc cmp and xchg lcall pop adc cmp mov scas jl std mov movsb lods inc sub cld repnz (bad) rclb jns popf adc psubd in cltd jge xchg cwtl test in cltd mov loopne imul sbb inc scas addl pop cltd pop ljmp dec dec jle pushf sbb cmp mov aad in in test cwtl rol popf hlt in popf xchg push push push jb jnp xchg adcl add jl push or pop dec sub or xor dec test add sti add out out stos mov (bad) fsubrl push stos ffreep cmp push scas fcmovne xor stos (bad) sub push scas js ds aas aas mov or lea fcoms fistp jbe or std cli jno xor push pop mov ds inc bound dec inc les mov cmp jp (bad) mov mov and jecxz dec cmp in mov je icebp test in mov pushf notb and sub aad xchg sbb push outsb outsb push push push out mov lret popa cmpsb cmpsb push cmpsb cmpsb dec pop or lahf jnp jnp sbb cmpsl pusha pusha mov and mov jle fnclex mov sahf leave ss mov (bad) nop addb aaa sub jg fs out jp push inc dec test push std bnd lret lret lret mov addl icebp lock dec movb cli and sub fcomps scas dec jb divb push push jbe jae (bad) jnp popa cltd mov pop xchg push es ljmp insb sub mov or mov cmp mov mov sbb adc and mov inc jbe add sbb or es cltd lods mov mov rcll cwtl lret (bad) (bad) add stc sbb rcll cmp fsubs push stos inc fsubs pop inc lret scas dec inc popf nop mov cmp (bad) das hlt rcr in out iret (bad) cmp dec (bad) into ljmp push fist or add lcall std add jne push mov lahf stc js or std cwtl fs in in loop jp or sbb popa mov dec dec or push mov mov cmc mov sbb pusha adc fsubl jo sbb inc scas (bad) jl xchg xchg jle dec iret (bad) pop sbb in cltd fsubrl es js rorb xlat (bad) stos stc lret loope loopne pushf pop imul fwait in negl push jbe sbb push fucomp mov daa push cmp mov cmp dec (bad) out gs cmp dec cmp ja icebp lret push fadd sub pop dec (bad) iret inc mov sahf nop mov xchg into (bad) aam add pop loopne das push adc pop pushf xchg (bad) (bad) cwtl xchg orb sub popf orl xchg inc ret (bad) cmp jle rcl rcl push es inc add jl enter out lret arpl or sbb xchg xchg push or loopne scas out adc push repz in adc adc mov fnstenv subl pop lahf jmp fcompl mov push lods mov imul xor fadd ss ss sbb lret sbb shlb cwtd repz xchg fcmovnu xchg xchg sub lret jno outsb sub les pop (bad) ud2 loop xchg push adc add rorl (bad) (bad) ljmp sbb pop mov or xor jp insl das das xchg icebp mov ret addl in inc or xchg leave cltd jno pusha outsb (bad) (bad) lret mov mov or sub xchg (bad) mov cmp movsl dec mov out pop push pop mov mov dec dec rorl and out lcall dec inc test xlat in mov inc pop fwait jae pop sbb outsl jbe mov xor and out or fucompp sub jp mov rclb out adc sbb xchg pop aad out out lcall sbbb jecxz (bad) sub les test hlt cmp lock and ret pop in cmpsl movsl dec (bad) enter fs xchg imul mov xorb mov div mov push mov int3 rcl imul imul xor xor cmp sbb imul popa fcompl neg push (bad) cli (bad) idivl ja popf or sub inc leave inc dec aaa adc sahf clc je pop cmp cmp push pop and xor cmpsb and and xchg adc mov rcl rcl pop out jle pusha js les jo aaa outsl sub mov cmc or or add (bad) ljmp push push ret sub out stc lds jle fstp mov pop dec cmpsl pop cmpsl (bad) int shll fwait pop xor inc pusha push scas fs loopne cmc in jg,pn cmpsl sti (bad) (bad) in nop mov push dec or jle aas mov push stos mov inc inc adc xchg fs xchg xlat mov sub pop or jbe pop push adc xchg ret push scas mov aaa or or popa pop mov hlt dec pop pop pop pop or scas inc mov dec iret (bad) jbe adc and out in inc push pop shrb xchg push push fstps sbb in inc movsb in out icebp (bad) negl jp orl add int3 ret lock pusha fs iret mov add mov aad mov xchg js inc xchg out push rclb adc mov lret loopne jns shll mov enter sti repz daa cs ljmp test dec push sti lcall add pop inc add and in in cld loope ret add sub jno inc inc inc sub xor daa iret int3 or outsl arpl iret ja xlat xlat pop mov popa adc (bad) popl inc bound stos mov ficom pop movsb xchg (bad) cmp cmp cmp xchg jge xor data16 adc xchg cld ljmp sysret jb or pop push mov and push pop pop add adc lcall xchg test mov jne and cmp into iret enter rcl xlat mov sub or imul cld repnz inc add pop lcall test push xchg cwtl mov add fwait int xor mov pop push mov stc jb jmp jmp xchg sbb test xor jmp out and jecxz adc push imul xchg push mov (bad) jno mov and test adc rcl and push pop push pop inc dec jns stc adc fwait xchg (bad) add sti hlt jo iret rorl adc fcoms mov inc dec leave (bad) idiv fstl xchg les std sti mov gs cmpsl jo sub xchg lods leave lock clc jae dec push push dec dec push jae xor outsb scas mov fildl sbb and xchg xchg push fldenv ds (bad) out jecxz test (bad) push push inc dec pop cmp and (bad) lret pop dec pop pop (bad) std cmc (bad) imul call rcrb pop pop fcmovu lret ret int bound arpl orl shrl and test mov pop xchg (bad) mov sti add add cltd hlt out ljmp iret lret inc cs xlat jg or jl push mov idivl inc adc pushf pop sub cmpl xor jge xor rcll out pop lahf iret daa inc jbe inc orps and enter jo xor jns sub dec push adc push add int3 (bad) xchg pop sub stos mov stc push out je je dec jne add stc inc dec and jle xchg cmc subb inc adc or adc mov inc xor jo xor jne fimul dec jp xlat push imul addb out out lcall jns nop sahf jno pop cmp aas xor sbb arpl or pushf pop pop pop test mov xchg dec mov ret (bad) inc pop xlat enter add leave ret cmp adc fisubl xchg lock (bad) dec test je mov bound test in cmp xchg push pop and sbb fwait (bad) into dec or add sahf pop push scas adc inc push push jo xchg daa add push idiv out and cmpsb je or inc dec jg mov (bad) inc adc stos fwait mov ljmp std mov push push stos out loop imul mov stos fsubrp outsl adc out fwait xor cwtl arpl addb fmul int3 mov mov fdiv addb pushf sarb fcmovu mov push cmpsl mov jbe cmp push fstpl lret mov xor sbb in pop js dec dec cmp out test inc inc enter in sub inc dec fnop jne fs fsts fs cmp cmp addl mov nop adc mov (bad) call ret je (bad) arpl in das add es xlat ficoml fstl mov lods inc dec mov addr16 dec or repnz sahf ja dec arpl sub pop cltd fwait fwait mov mov int3 cld mov icebp test fcmovnb mov mov mull jo es (bad) outsb in scas scas clc stos and stos sub sub mov es je sbb inc pop aam insl sbb xchg out nop lds mov or pop aam pop mov mov sbb into (bad) jmp jmp sub sbb push sbb sbb sahf jns div std movb inc adc stc sbb mov (bad) and and lods mov sahf (bad) jne xchg adc daa adc pushf (bad) in sub cmp mov xchg jb xor (bad) jne lcall dec and jnp and loop rol mov andl mov pop inc inc lods test out (bad) jl test xchg pop cmp and ljmp std mov push jae addl das and stos clc sub xchg rcll dec mov jmp xchg ret loopne fstp push pop insl jae fs xor ljmp xchg xchg sbb pop dec movsb lock cmp add jecxz fwait mov and lahf pop daa aaa hlt pop inc jl stos stos movsl test outsb jl pop push pop xor ds sbb push push jae mov js lds mov lock scas mov les jl ret or push xchg lcall (bad) lcall xchg and and push adc xchg rorb hlt (bad) xchg lods (bad) out out pop scas dec inc mov out xor scas cmpsl in insl pop xor jp idivl js js mov mov iret lds cli mov cmp popf push fsubp insl pusha loopne stos stos sub ljmp mov jmp sub enter pop or mov (bad) out sub jbe jle jle mov out out dec sbb pushf cwtl jo push ror dec mov mov addl mov add scas aas cmp sbb jbe xor add dec mov das imul pushf ja cli push sti scas mov push fistp xchg pop fldenv fisubr fldt cmp sbbl les dec mov ss movsb push push pop fcomp push push insb xor mov clc cld xchg xor cmp mov cld lods inc push dec dec dec adc inc inc dec or aaa jb rcll repz into mov das mov sub push push sbb adc enter les push pop adc (bad) and cltd adc cltd outsb mov insl out cs lock cwtl mov lret xor mov int (bad) adc aaa mov jge lea cmc push pop sbb rol lds sysret push mov imul push or ret inc inc mov xchg jno lcall les cs cmpsb scas outsb test push test outsb lea dec sbb sbbl insb push nop sbb test arpl inc cmp pop push sbb popa mov add mov rcr shr or dec adc gs leave dec sbb test adc pop sbb aaa dec mov ljmp in rcll push lcall push xchg test enter test test andl xor inc dec test add lcall lea jbe sahf mov insb jb adc mov icebp (bad) int3 int3 daa in int3 fmul push sbb test and outsb popa dec inc pop push and fwait aad jae repz (bad) (bad) jo sti divb (bad) int ljmp push pop pop in adc mov mov cmp rcrl and int3 int vpsubq mov adc sti imul jg mov cmc add into andl or repz pushl inc ds adc xchg lret pusha or lcall sti push adc or jl out jmp push pop sbb xchg lods call mov loop cmp push pop sbb ljmp sbb adc call mov pop pop popa icebp cmpsb sub push (bad) repz (bad) (bad) fsubs hlt mov cmp (bad) mov cmc int (bad) (bad) stos jbe pop pop push adc in in in (bad) xlat mov (bad) in or sbb add xor jae mov dec xchg fwait fwait xor lret dec push adc loopne aaa in aad jmp sub sbb stc or xor scas jb jp loope pushf adc lcall dec push mov nop mov ror repz test (bad) mov mov pop push mov in xor cmc jmp mov sahf xchg shrl push pop or int icebp and mov sub or cmc jl test test nop lahf rcl in or dec mov jmp jns std and scas xchg xchg lahf fcmovne enter xchg (bad) cli repnz mov and pop jno mov rorb movsb test push mov mov dec dec dec pop das jp,pt fsubrl ljmp dec dec dec jmp pop inc inc dec inc jg inc xchg pop (bad) cmovg mov sbb xlat cmp and sbb jae das scas push push push inc inc ss mov loopne adc je fs add or scas stc jb cmpsl (bad) push xchg imul scas stos movsb jle js cmc mov cs xchg fwait shlb rcll xchg je in gs dec sbb insb cmp dec pop jmp (bad) push or jae (bad) cmp jb or inc sub lds xchg inc mov daa cmpsl aam inc mov cmp jae push jbe xchg (bad) sub push ja mov cwtl subl imul pop push scas cmpsb rcl aam test fcoms add push (bad) sarb xchg push push pop in fldl fisttpl xor shlb test dec ret sahf push loopne popa pop inc sbb xchg sbb jle sub outsl xor aam mov inc dec jl sub je lds or in popw adc pop push and pushf addr16 stc cld dec and mov imul ret jae add test in int3 std push or lret aaa aaa orl (bad) (bad) cli (bad) mov arpl movsb lods mov inc lret pop jb xchg xchg cwtl push pop jns lock jmp adc ds movsb lods and orl inc lret mov daa imul mov jno addb sbb mov jle or pop inc xchg jle mov test ss arpl popf adc mov mov pop insl popl xchg icebp mov rol or (bad) dec or pop sldt xlat xchg sti jmp scas mov in loope mov lret inc jne add sub imul or cmp imul cmp pop push push add (bad) iret (bad) lret ret inc in dec sahf xchg mov sub mov push sub xchg icebp cmc or sbb stos rcr and xor or jno mov and daa daa idiv add jnp lahf cmp inc mov xchg mov dec sbb and imul (bad) enter sbb sbb xchg (bad) lret or scas mov cmp pop out mov mov pop push adc shlb push popa loop xor (bad) frstor pop push jo and into xchg movsl test imul cmpsb data16 cmc jbe lahf xchg mov loopne div ret data16 sub adc add dec or insl stos rol lods mov in dec pop fnstsw mov aad pop dec pop ds shl or and adc test incl mov dec in lods test pop push add lods mov jmp sub cs stos and mov ljmp int jnp (bad) pushf adc nop adc fistl cmc push out movl cwtl lock or mov into mov std pusha outsb aam ss in xchg xchg scas push fisttpll add in int dec or pop fsts jno jle orl out jnp pop clc pop clc aas jg jae jl cmc movsl mov add icebp (bad) (bad) (bad) sti cli xchg mov mov lahf arpl lods push push pop and jg mov std mov idivb stc popf add je int3 inc stc or mov inc mov xor jns xor repnz (bad) into mov notl (bad) xor ret xchg fwait adc shrl lds lret fisttpl addr16 xchg popf push shr mov repnz into rorl je add mov cltd shr sbb mov mov xchg xchg xchg cmpsb cmpsl test push mov jnp sti rol rorl cmp (bad) mov testl and sbb incl mov dec sub pop mov in and lock pop jb fist pop lahf jg dec dec dec aam inc lcall or sbb sbb fcmove loope arpl xchg sbb fcomps and (bad) jg sub rcrl das shll daa jp add in xor stos lock mov hlt in xor mov cli jnp movsl out out xor or das js mov imul int3 lret iret mov dec cmp inc lret sbb mov int push add pop pop mov inc ret inc div jg mov pop fsub test push fcmovnbe pop push pop jmp add sbb shrl sar repz rol adc xchg or pop add (bad) or xor mov jae cmp mov scas icebp pop inc mov mov pop sti rorl cmp inc push test daa cmp test cmpsb mov ss xor loopne mov mov pop xor dec inc lret test dec inc xor and leave mov test shrb imul sub mov xor das and mov adcb test or mov adc push pop pop xchg mov in ljmp repnz lcall xchg (bad) xor stc jnp jo lds insl lods mov or int or cmp lds roll xchg jge mov mov push rcll lock inc jne push mov sbb and mov out sbb (bad) rorb push (bad) frstor sub mov aaa mov dec xchg out adc pop push adc pushl inc gs pushf jmp lods movsl movsl mov outsb push (bad) decl xor cltd test lahf lahf xchg sbbl scas fcmovne orb cmpsb mov mov repz hlt mov mov and mov ljmp cmpsb mov jl out sahf popa call stos arpl mov and dec dec clc lock dec arpl ds cmpsl mov jb mov inc mov adc loopne in insl pop inc mov add into in and dec adc push negb roll mov pop pop aad hlt mov add pop cmp stos movsl and mov dec ja xor sub mov xchg push loop adc das fmuls (bad) fbstp adc or cltd addr16 add rcr sti lock mov cmp pop jns sahf xchg sbb (bad) fldenv sbb dec insb fs mov loop pushf adc lods es (bad) (bad) leave dec rol into lahf pop pop push pop aam stos and push pop roll inc or loope sbb mov mov (bad) fwait adc or cs aas jnp pop push inc dec dec cmp mov add pusha imul mov inc dec inc jg inc dec jl mov jno bnd es mov loope xchg out adc movsb jb fs mov gs ret aaa mov leave sub sub mov add sub insl sbb pushf mov push fstl and addl jo push lcall and test and pop push sti js nop out orl mov mov xor cwtl addl and ljmp cmc jmp fcomps inc sub into ret fwait lsl inc mov ds mov mov addr16 in rcl aam adc push dec dec dec pop pop push mov pop lret ss (bad) xor pop fisttp test daa lods fs push push jno and jmp daa adc fstpt inc sbb jp ret dec pop (bad) dec dec ds sbb push scas hlt add stos mov ds lahf sahf cs push (bad) enter aam inc test or or out out push push mov pop movsb pop rcrb sub je (bad) cmpsb xchg inc mov jp xor call sub cmpb adc icebp push rolb cmp cwtl mov mov test add roll fsubl ret ret in cmpsl and in outsb mov test cmpsl test out mov (bad) sub popl jnp js add mov xor xchg mov inc aas pop pop mov (bad) mov ljmp or push cmp lret adc fildl cmp xchg fsubp fisubrl stos call adc cmc out sbb sbb jmp cwtl mov or cs in dec mov push pop inc lret mov fisubr and jl cwtl in loopne push inc xor test aam loopne sbbb pushw rclb sti cmc or fwait push sbb push jb and stos pop sub dec pop pop ljmp (bad) rcr pop push or sub jmp mov dec inc imul sub xchg pusha imul pushf mov popf xchg mov mov loopne or aas xor mov or stos lea inc mov jl xor int pop mov pusha lahf pusha xor stos pop cmpsb test xchg rcll mov sub sub insb sub imul ret lret mov lret mov or mov xchg mov lret clc loope mov (bad) hlt push pop push insl out cmc out sbb movsl dec leave cmp jle in nop je push add mov sbb loop into xor es jge dec daa lods mov jno (bad) int ret sub dec pop fstp fstp xor adc std stc adc in stos sub daa mov pop data16 ss mov dec mov and mov imul (bad) xchg mov mov rol fisub frstor lret mov loopne or orb xchg cmp es pop push xchg mov mov push repz in in mov ret mov pop stos mov fs ljmp dec mov lea xor pop mov mov loopne fs lods insl sub ror mov aas pushw popf pop mov inc and adc or call mov xor scas (bad) mov and and sbb pop call sbb xor rorl or dec ja ret and and mov out adc xchg cmp dec mov bswap int3 dec mov rorl aam lods (bad) mov push xchg xor inc roll mov in ficom jno mov cmp lock div (bad) push outsl in nop xchg pop push jecxz mov mov or jb adc pop (bad) xchg lcall mov dec inc jl idiv jne and dec inc ret (bad) inc push xchg adc fimul adc and cs cwtl je das jns cmp dec pop outsl sub loope je push aaa xor in leave fistpll jnp inc dec xor sub ljmp dec gs je lds js enter test fbstp imul pop lahf lods mov fistp das aas xor lods test pop adc and pop jnp fsubl movsb out inc inc rolb sub movsb out xor sub inc pop xchg sar lods fxch inc mov and push jno cli cmp or lock pushl cmp je and movsl cwtd lods test outsl outsl xchg in int in dec dec dec xor pop push (bad) mov lcall mov mov sti stc mov aaa testb pop lcall pop pop or sub pusha push push mov popa (bad) (bad) pop pop pop jnp lock jl hlt push enter sbb lcall push add lret push jnp inc pop mov fidivr xchg and lods mov leave addr16 pop pop cmpsb cmpsl mov call mov jmp sbb xchg out jecxz pop add fs ss fcmove xchg cmpl aas cmp stc xor lods mov rcr sbb mov (bad) jle push push jp repz ja icebp or jnp jmp les aam sbb add jg mov lahf push pop mov jecxz inc push lods movsl sar jne sub and mov addl push adc or cwtl aad pop push dec or int aam outsb mov (bad) push imul movl inc sbb call pop iret dec xor fistl push xchg xchg push push dec js loope lock loope stos cmp or mov pop inc dec dec pop insl xchg xchg xor sub sub pop lcall push outsb dec fwait lahf cmp fimul push icebp (bad) vpsubsw sub lock mov inc mov aas rcrb add adc leave fstpl mov imul lcall (bad) nop clc lods inc (bad) inc jns sbb mov pop mov adc and and inc push ficomp sbb sub orb arpl lret mov add xor dec inc das daa xor push dec push jns inc cmp cmp or xor push or pop pop scas insl test push push fwait push fwait enter push xor sub sbb out out (bad) mov xor das or addr16 lret stos adc add or jmp cwtl xchg pop jmp xchg fs pop test ds pop dec (bad) int3 inc or std mov stos mov inc dec mov push pop or addr16 pop xlat (bad) fcompl sbb fstps fwait dec push movsb in out out cmc imul cld hlt jg aas or sub sbb adc xchg sti jecxz fwait mov bound jns xor dec pop or ds mov mov rcl neg push jns imul adc jge repz cmp adc rcl xchg xchg pop mov insl jo pop int or les ljmp dec les cld aas sub xor add jmp adc lock cmp and adc dec clc nop aaa push adc inc stos outsl jne jne je push adc mov (bad) int3 sahf iret (bad) push jecxz xor push push xchg cltd cltd mov jno dec jne cld (bad) fadd aam hlt jno xor imul pusha lahf fmuls add or add jmp pop push and pop jae,pn sbb and test loopne adc adc lods call and dec or inc je prefetch xchg aam pop cld repnz movsb in adc sbb insb xor cwtl lds inc push sar cld ja dec push jl jg xchg ljmp sti cmp push jno rolb xor insb das inc pop sub adc bound pushf mov lods cmpsl loope mov mov sbb inc inc xor bound hlt pop sbb enter lods mov sbb xor xlat add rcl ss div ret loop in dec dec mov imul push out insl lods mov jb inc jp cmp add pop or shlb addr16 sti repnz sti sti adc (bad) jmp scas mov add je rolb (bad) incb lods xchg adc mov or lds xor mov ja mov inc data16 mov xchg cmc mov or pop dec push add daa cmp call aam iret mov (bad) (bad) adc iret xchg popl cld ret iret fistp scas xor pop cmp mov test push hlt jp jle sub ja,pn mov out into out or inc gs clc push jl jmp imul jmp test add mov adc dec outsb mov mov lock gs decb sar (bad) aad pop mov or cmp (bad) fcmove enter or dec mov pop outsl nop stos push and outsl sbb mov push xchg adc aaa add leave mov lods mov push xchg (bad) shll (bad) cli push incb add (bad) enter nop adc iret cmp std or pop movsl repnz cmp xchg mov xor inc pop aam sbb call fist and xchg cwtl mov lahf sub cmp idivb (bad) lock into cs or lcall push xor dec mov in lcall xor adc jl inc scas movsb lods das jmp lea inc adc fdiv push dec int3 mov pop fwait xchg jmp (bad) (bad) fcom out push add fldenv xor lock loopne pushf adc out (bad) fistl xor sub sbb stos out mov aas out mov or psraw into imull add fsubs inc bound jne add jb push pop fbstp stos xchg pop call adc mov lds jne (bad) int sub int3 dec xchg out add cmp add adc js cltd mov outsl outsl ja scas mov (bad) pushf xchg xchg cltd nop jg repz hlt sbb cli hlt adc fiadd in movsb xchg (bad) into (bad) lret and lds out in jecxz iret shrl outsb push adc jl xor mov gs xchg cwtl push xor jl mov sbb hlt das and dec dec inc add daa xor rol in pushf adc inc test out lods enter out out pop push scas scas stos push (bad) in inc lahf mov lods push push mov mov xchg nop nop nop sahf add maxps pop call leave int3 (bad) int3 shrb insl gs jge lods test test push fs imul mov inc dec cmp repz aaa aas aaa pop idiv sti repz xlat aas cmp aas movntq test (bad) test fcmovnu (bad) faddp sub (bad) into (bad) (bad) push div cli (bad) lret dec dec rol xchg dec cmpsl imul adc push mov dec cmpsl adc adc lods add sysret push mov inc test xor xor adc adc pushf adc pop pop jae sbb cwtl out jmp (bad) adc sbb fs out out jnp sbb sbb (bad) rcr shrl lahf sub das cmp mov call das and lods mov in out push pusha pusha inc inc dec call xchg popf xchg and movntq out repz notb jle nop xchg sahf nop xor adc add nop mov test dec stos scas movsl movsl or insb insl xchg xchg mov cmp mov cmp xchg xchg les and test xchg xor sub xor vaddps inc adc popa pusha jb sub dec movb push push pop mov int3 rol dec or and xchg fwait mov jecxz (bad) jbe and cmp cs mov sti jmp jnp fs pop dec inc pusha pop pop sahf xchg addl aas cmp and xchg nop (bad) xchg jle ds in lods test test sarl mov inc neg shr adc mov ficom mov fisubrl or dec sysexit (bad) fsubs inc pop mov lret sbbl pop push pop push test and or push dec push cs out in push pop fistpl sbb mov or lds add lret shl and sub mov sti aas pop inc in mov or jmp mov pop sub and aaa pop jl loop sub shrb add sbb cli cli decb (bad) out cmp shr mov aam pop inc lods addr16 mov dec adc inc cmp xlat pop lcall mov jns inc mov inc push pop js aas dec dec mov call push push ffree incb sahf jmp outsl sub dec sbb enter cmp clc pop (bad) xchg jns push je pop pop faddp pop or out jmp adc psadbw jb loop imul pop or jne jne push xor jno or push dec cmp ja arpl ja xchg and daa (bad) cmc xor cmp or aad dec add xchg xlat je dec lcall adc push mov dec add inc cmp push sub repz es gs pop sbb aaa mov mov test jbe mov adc roll fstl push ret inc mov sbb cmc jmp ret rcr insb jge cmp mov xchg push call aad cmpsl mov ja bound push imul inc mov inc (bad) addl aam push xchg cmpsb data16 pop pop pop pop push out push scas push imul jbe (bad) pushw mov (bad) push idiv pop imull mulb data16 lret or mov sbb decb out mov xchg shlb aad call xor cmp lods cmp add inc xchg lahf into ret fldt inc in sub iret inc add xchg mov mov jo push adc jo iret loopne lret mov mov imul xchg fmull mov adc fidivrl mov adc mov adc push fsts fnstcw aaa xor out daa sub mov cmpsl mov mov dec dec dec pop inc dec pop add or in iret shrl insb int insb cs nop sahf mov lcall add add or sysret adc in in jo push push mov rol mov test cmp repnz xlat ds mov xchg xchg scas imul push ljmp fsts xor push dec pop dec push or jo mov cmp jle adc mov ret movsb mov xor xchg aad lods and and sbb rol ret cmc js push data16 fcompl int3 fmul popf jne xor push mov call jle shl loop push adc push pop js mov pop jne push out out imul xlat xchg and push add sti in imul cmpsl (bad) lds sahf sbb inc mov inc les adc cmc mov add call and dec inc inc push pop lret cld mov fisttpll or (bad) jp ret fsubl push pop cmp mov sbb jg cmp mov int3 les inc xchg out xchg pop sub sub inc dec inc pop mov rol or into fisubrl jge,pn mov xchg outsb xchg js xor mov cwtl xchg mov sbb insb pusha inc int js xor jne inc adc xchg test or jnp jp in jecxz lcall or jns fcoms add addr16 inc sub rcl sub inc dec in stc in adc daa inc cltd cltd lods mov addr16 iret shrl pop mov shrl rcll adc push pop pop pop movsb movsl cmc in int3 pushf je rcl rol aad cmp jns sbb or lock aaa rcr xlat outsl nop outsl popa pop sub pop inc lret out cld repnz ljmp scas (bad) aas ret (bad) mov jecxz loope jnp lods sub pop or xchg mov jg pop lcall (bad) fwait arpl in xchg lods mov mov test or adc jnp or ljmp imul imul dec sbb and rorb adc stc cwtl into fisubr jle addl mov ja xor jns and and add stos scas cmpsl mov mov arpl ret cmp inc mov jbe sbb cmp in cmp lret mov cmc jmp hlt movsb dec push pop inc outsb cwtd in adc aas mov (bad) (bad) (bad) ds xor cs sub or jle or sbb ja xchg fucomp daa pop inc (bad) aas cmp ss push idiv and in call imul fisubl stos insl jg addl pop pop push inc dec pop xlat lcall add bound arpl data16 push dec inc inc sbb jo lods mov cwtl xchg out rorl adc xchg jmp adc ds test stos scas and fs cwtl sbb (bad) cmp les lods std std movsb mov leave rol mov xchg mov ficoml adc mov xchg fmul ficoml in addr16 out popf test push push psllw jo mov outsl adc jp or insl insl test add inc popa sub jle dec mov loop or xor cmp and ret inc lds jle jl adc push adc jnp jl dec cmp dec int (bad) call outsl push imul jle jge cmp (bad) iret iret push (bad) dec iret lea fs imul pop push pop sti outsl outsb jle lcall adc or sbb add jne aam enter cs insb stos scas (bad) push adc sbb fcompl push bound arpl adc adc dec inc mov orb push lods push lods push inc adc sti mov mov xchg int3 cmpsb cmpsb mov (bad) mov xchg adc js inc ret loop xacquire (bad) sti mov (bad) (bad) sbb rcr (bad) (bad) jo inc add (bad) mov insl pop push fistpll and push inc test lods inc scas inc mov loop cmp inc enter push adc popa insl test push sbb adc lcall jnp inc aas add xor pushf cwtl cld out fcoml pop push je outsb je add (bad) mov dec outsb inc mov movsb mov rcrl sbb fwait sub rol shrb outsl jae ja orb jmp shlb adc jo sbb dec js fcoml into xchg test mov lods mov mov lea (bad) daa jl ds rcr ficoml cmp dec inc into lea arpl imul cmp sub add js insb jl xor fcomps test adc mov fsubp ja jne mov jg lods test jge jno mov mov popf push (bad) div pop clc pop cmp xchg orb sub mov push mov xor fwait popl int3 dec pop pop push pop push add push jbe cmp cmp lcall mov test dec orb and sub imul out sbb push xchg gs not (bad) dec test es pop popa xor adc and inc dec cmp jge adc es mov fdivrp bnd mov into inc popl pop test (bad) dec mov pop pop or pop push pop push jae jmp inc inc xor mov jae arpl (bad) sub fisubr lcall cmp add pop mov das (bad) push aam rcr pop sbb or sub push jnp inc repz in sub pop push pop clc repnz jno cmp daa or push mov xor xchg sbb cmp icebp or outsb sub xchg mov add aas jle mov xor adc pop jae jp mul ljmp adc mov add sub xchg data16 lock arpl pushf mov popf mov (bad) lock icebp loope pop fistpll mov push cmc stc clc dec dec xchg adc add in ret in outsl (bad) jg cmp test enter enter push (bad) inc inc sbb dec inc int inc addr16 cmp loope clc xchg sahf sbb push mov cmp or pop pop add cmp out inc add cmp pushf je or fnop cmc mov pusha call aaa add sub hlt or gs data16 pop or rcl data16 xchg adc mov int3 xor inc inc dec (bad) mov sbb pushf pop (bad) mov inc orl sbb sub xor push xchg mov (bad) (bad) fwait xchg xchg outsb push dec (bad) idiv ljmp fisubrl fldcw inc dec syscall add enter mov push stos movsl mov stc in cltd xchg push imul enter push imulb aad adc lods cmp ret push push push push push sub hlt sbb icebp xor add outsb xchg insb xchg sbb cmp repnz (bad) adc fcmovnu fcmovnbe bound fnstsw add jg test or in pusha fwait mov (bad) dec push adc fcmove dec mov ret cmp xor lock scas mov sbb dec cmp repnz test jbe sti (bad) mov (bad) fistp pop dec inc inc inc inc stos mov or fsubs xor (bad) sub jmp scas fcmovnu jecxz into lret out pop jg push push push push test adcl mov lsl jp or or and (bad) mov addl add in loop xchg loopne pusha mov push inc xor test mov push push imul and fcmove lret pop push dec add icebp decl test bnd or movsl jae,pn subb gs xchg push add and int3 mov fnsave add mov mov and in sar jno and sahf inc mov call or mov mov dec ret xchg lea bound imul js repz cmp adc mov mov pushf popa ljmp xchg movsl xchg mov sbb dec sbb mov divb xor invd pusha adc add out mov sbb sbb sbb (bad) or mov mov jno push xlat lcall and mov pop xchg fcmovnu push ja cltd adc inc dec (bad) stc ficompl sahf sbb je dec stos (bad) fdivrl add mov mov aas cmp pop fdivl push mov int mov push add sub repz nop outsl xor jp cli cli cli cli cli ja aaa aaa add dec or es es je leave lret lret and test imul and push movsl out jns stos std jbe je xchg fiaddl mov mov mov jp or je jnp xchg push push push push (bad) mov lcall cltd cwtl in in (bad) mov push dec adc loope test lcall stos fdivrp jge in or and or mov inc jge ljmp push movmskps fsubrs lock icebp stos imul push test push in or sub sub aaa mov lahf xchg out inc inc pop cmpsl push imul in clc js mov cmpsb jne pop xlat adc mov jb xorl and cmp clc push push dec dec mov jae mov add sbb pop sbb div stc frstor jge sbb (bad) lds in movsl bound mov push or stos das cs push rcll pop aam cmpsl pop cmpsl pop mov mov inc cmp repz (bad) sub and fist fist inc push popf fscale in cs inc enter aas jnp dec jl pop test sti jo adc sbb stos and (bad) xchg mov sub dec inc xchg js jb dec cwtl inc dec (bad) testl mov lret rcrl sbb outsl cwtl jle lods fnop jmp fwait mov hlt xchg mov test inc test movsb das push in sub jmp mov clc std cmc and mov push test inc mov repz sti mov mov and jne inc int clc clc clc clc jno clc aas jp push stos stos rol jle incb stc mov popf fcom pop pop sbb dec movb or push (bad) jmp idiv jmp stos and dec mov add (bad) xchg (bad) xchg imul xor call or push jo mov xchg shrb mov jb lea pop xchg jge cwtl addr16 repnz pop sub (bad) (bad) sub pop mov imul popa popa pusha pop pop add fninit mov dec inc data16 mov pop rcl out mov fnstcw jbe mov adc push sbb sti sbb in sub scas jmp mov rcrl icebp jp pop xchg shll mov xlat das das scas aas and daa inc loop xor test and inc sub data16 test sub outsb jle mov mov fsts push jae sub ss out and (bad) out dec cwtl rcrl dec mov rcl jb jmp lret cli repnz fwait mov fist (bad) pop outsb data16 fs mov mov or push push pop jg daa inc xor and inc (bad) push dec movsl leave and and jbe jne popa bound ja adc sbb or xchg xchg cmp add xor pop push lods (bad) cs push mov cs cmp dec and dec inc test repz mov and (bad) into lods mov push jno outsb pop popf (bad) push jns js mov cmpsb stos or pop hlt fstps pop cs mov ret aas jno cmp xchg addl out lahf lcall mov pop rorl mov sti out test xchg mov scas pop sub (bad) (bad) (bad) mov inc add mov jnp push add pop mov xchg push js,pt xchg push mov mov mov test fmul aam pop push (bad) in mov jbe xor jo addl scas scas mov out fildll add inc inc int inc add dec pop pop cmp popl mov icebp jp cmp inc xor sahf ja push lods push push jg xor jp add pop push ss cmp mov adc loop and movsl loopne push add int add push nop aad jle mov loopne and (bad) cmovp push push push test int and jle in out movsl insb scas arpl mulb pop sbb std mov fs mov cld in mov cld or push jne jne mov mov add mov das (bad) xor cmp inc xchg stos pop pop inc inc mov push inc xor jbe mov mov leave iret inc dec (bad) lret or dec jnp mov adc jmp push mov out jnp clc loope nop jmp in data16 mov iret pop pop adc mov inc pop adc adc push push mov cmp mov in out (bad) sub mov cmp push pop or sahf movsb mov push pop sbb adc xchg jmp pop cmp inc add fisubrl test add push loop insl adc sbb sbb mov and test sbb cmovb orl inc pop pop sbb aaa nop mov ss lahf lahf pusha adc and xor (bad) xor mov jmp loope test adc mov mov rcr orl (bad) cmp lahf (bad) xlat (bad) add add sbb (bad) fistl jmp mov gs mov repz (bad) jo in lods cli sti cli ljmp xchg xchg addb adc cmp sbb sbb push pop cs mov rol or in out fstpl sub push pop mov or scas adc jmp adc bound jb orl xchg ja movsl pop movsl pop shrl push and in lret xor jge mov cmp enter jge fcomps xchg xchg sbb xchg xchg mov or push out sbb out lcall in xor insl gs (bad) aam popa xlat sub push nop pushf scas je xor sbb dec sbb pop leave int3 or or lret repnz aaa xor mov rorl pop aad xchg fisub dec pusha movsl pop cmp (bad) mov (bad) add xchg out loope cltd cltd (bad) sub and ret mov adc inc adc mov std mov mov fdivrp xchg xchg mov scas cs ficoml and add jo lods loope fs jmp adc enter add call jnp push (bad) fmuls cmc or mov sub repz inc test mov (bad) daa push mov lret xor lret scas sub (bad) pop pushf loope sbb addl fwait push imul loop lods cld lods lahf pop push dec dec (bad) mov jbe mov dec and adc call in mov push add mov push add sub pop outsb jbe mov adc mov add les les cmp mov sarl and lock je popa mov hlt div test jne jne popf je cld add inc push cs xor add xchg aam test mov sub lock adc or ss mov or mov popf dec movb mov add in out (bad) repnz js sbb xchg shll lods jmp lods insl test rolb mov imul xor icebp lds popa outsb scas inc inc lds add xchg dec mov mov stc divb out and (bad) jge insb xchg js lock adc push jl int3 or jp test enter cmp inc into enter sbb or mov inc (bad) mov outsl outsl pusha hlt xor addl mov xor mov mov insb outsb outsb outsb dec inc enter sub jmp lcall inc inc rcrl dec mov insl lcall andb xchg out fstpl fwait nop push and ret vmovd xor es (bad) nop fwait pop das sub cmp insb outsl outsl outsl test mov inc int test cmc jge xchg insl gs in icebp mov sbb test and int3 cltd insl stos out pop pop pop sbb fwait out repnz dec sbb sbb adc out cmp jmp jmp in ds xor lods test cwtl xchg and xchg cmc ss sbb xchg nop sbb movsl or lds or xchg insl insl in push fcoml (bad) mov mov nop js push lods push xor add ja lret lea lock out fwait sahf push out aam adc and xchg pop sbb icebp stc jns mov mov and sarb ja xchg xchg imul dec mov sarl and sub aas aaa das scas xchg xchg loop imul cmpsb clc mov lret adc and and lret sahf (bad) in sbb movsl je add inc xor xor sbb mov lcall sub arpl xor sbb daa out (bad) fimul (bad) (bad) (bad) (bad) lock cmp hlt jge fcoms sbb mov cmp xchg sub out adcb fstp clc cld (bad) xor sub or or arpl imul mov cld cmp cmp mov and pusha int pop dec les in imul jnp lock and dec xchg cmpsl lods mov pop jns pop (bad) mov scas (bad) fisttpll or inc cmp sub jle pop jb push xchg adc pop cmpsb lret and out out xlat adc push shr lds int3 lret es (bad) push adc pop fbld data16 pusha lahf pop pop outsl sub rol mov rol sti jo pop pop (bad) lock fcompl sbb mov jmp sub mov mov cmpsl fcmovnu push or mov cli jno pop ja jno fprem cmp lcall lock inc adc adc or loop and sub pop in mov mov lods (bad) fist std inc push jns cmp mov push (bad) int3 rorb or orb hlt and (bad) ror inc xor push aad fimul ret enter sbb (bad) (bad) jae inc stos mov add into daa mov dec (bad) xchg test add cwtl adc (bad) (bad) cs pop cmpsl pop aad fldcw test in test sub mov pop inc cmc std jecxz push push data16 divl cmpl (bad) in test shr sbb jmp sub popf fs mov mov fistl ret test mov das ljmp sbb out out sub lock sbb mov outsb outsb stos jae inc test jno aad sbb mov cmp test movsb (bad) icebp push jnp inc sub adc jne xor inc mov mov mov adc daa sbb pop cmpsl pop mov out div out arpl push shr pop pop pop cld or push lds clc nop nop nop xchg xchg mov inc test enter jae adc push add es (bad) pop dec push push rorl cmp bound push mov jae inc sbb cmp push push stos movsl scas movsl rcl scas stos cwtl pop sbb adc loope jmp inc push pop pop call xchg adc cmpsl mov jb outsb (bad) xlat rol into (bad) xlat iret lret pop (bad) dec movsl stos or aas clc stc and jno cwtl pop sub sub pop rol leave cmp and push movsb loopne int3 int mov insl xchg lret inc xchg sbb push dec pop xchg call or lods movsl and mov and sbb scas mov repz xlat jmp fwait test andl rcl fsubrl out insb (bad) (bad) mov in cli mov out out xor pop xlat xlat pop pop popa sub and mov xchg repnz pop cmpl add in or aam (bad) les je push out pusha (bad) or repz pop ss push sub orl xor push sbb fisubl hlt idivl mov pop imull xor shrb cs out out pushf cmpsl rcl test inc subl inc inc enter inc iret (bad) ja loop pusha pushf popf popf popf popf push arpl add lcall cli mov and push sub das sbb js xchg jle and lods orl xchg js jp push push xchg lret addr16 popf xchg jge mov scas cmpsl sub mov jns addl pushf pop pop xchg scas mov adc addr16 ficom fisttp xor add push rcr mov sub sarl xchg sbb cli cmp scas (bad) mov mov push mov jbe sub std jbe sub xor ds pop pop lahf mov xchg jne fs mov and shl out in mov push jg fbstp jae mov cwtl adc add jbe adc js mov out loope pushw mov lret dec mov into es jmp jmp adc loop stc stc aas jp test test lods mov fistl sbb (bad) sub push gs stos push xchg jb (bad) mov jg adc pop add mov or push addl ja xor mov pop lret and cmpsl pop pop cmpsb jecxz nop aad push adc (bad) fsts jmp xor mov add add mov pop pop pop leave leave mov call ss push psllq fsubr jle inc dec inc push push fsts jl mov aam aam jb ss (bad) (bad) mov shrl jle repz out addr16 pop cmp hlt jg les aam pop inc enter icebp cmpsl push pop dec inc push fcomps fdivrl ja icebp add pop inc xchg jle movsl stos stos daa and lock pop push out jmp ffree enter xchg xchg mov outsb out movsb mov dec mov jnp xor mov jno call leave ljmp test pop mov fmuls add enter adc (bad) lock jge pop push stos stos in pop sbb aam lcall mov iret ret mov cmpsb ds orl rcll scas and jl and cmpsb or cmc cwtl xchg test bound in mov aas push and rcl fisubrl (bad) sbb sbb and subl jl sub insl sbb sub out pop xchg mov icebp and lret adc sub lds sub pop (bad) jmp or mov mov leave add push push and ret push dec mov (bad) adc inc insl call (bad) fwait jae mov push sbb dec push push out mov mov push fmull mov addl mov clc clc clc jae xor ret dec dec mov mov addr16 cltd xchg adc test and push mov fs push dec mov dec adc das das das jl ret je test push cmp test idiv jae pushf push push dec dec xor cs fisubrl adc aam ja aas pop dec pop dec aad aad sub jge daa iret inc and js push mov mov ret mov dec popl leave shll jbe arpl data16 pop dec dec imul clc popf cwtl adc int xchg test mov cli mov mov inc inc xchg xchg lcall jns pop pop dec inc aad pop add or loope cli outsl outsl jg mov mov out or or adc fcompl push or adc fwait xchg sbb adc sub cmp mov lret inc adc lret adc cmp shrl pop push fsubl mov adc outsb sbb inc inc leave popl cmc push das imul aas pop mov mov inc push dec dec fld (bad) xchg jl icebp cmc sbb or adc push sbb jg sbb xchg mov push push jmp xor cmpsl (bad) cli add pop mov dec cmp bnd and push mov add insb xchg out mov jmp vpaddusw adc ja addr16 fs fprem1 fstpl in jmp in add addr16 sti fisttp jg rol (bad) aam adc adc inc lods pop rclb pop (bad) std mov xor (bad) dec mov jae add stos xchg push mov fldcw cmp pusha mov sub imul in xchg xchg loop cvtpi2ps jl mov sbb mov push pop inc mov es int mov lret (bad) mov sbb push adc pusha jmp mov push push push xchg sbb and pushf lcall mov movsb (bad) repz pop (bad) fdivrs and or jge popf es fadd mov sub repnz out sub jae add xchg adc rcrl sbb sahf xchg nop xchg ret cld sbb enter dec mov lds sti xchg sbb stos lret adc and fsubs pushf xchg fwait push aaa push (bad) lea outsb nop nop fwait incb dec inc ret rcl push xor cmp mov ss int3 int3 ret inc addl inc add or jge mov das push xchg outsl addr16 push jp or or (bad) clc (bad) mov (bad) mov in in xchg pop movsl pop mov xchg dec mov xchg popf sbb data16 sub mov test mov std jecxz in sahf pop pop jb sbb orl fidivl aaa insl add sbb loopne xor aas inc mov stc xchg xchg rcrl fstl sbb sahf fcmovnbe xor arpl call popf (bad) push pop ret xchg push adc xlat inc dec dec sub jbe jle insl (bad) out (bad) cld std std cwtl cltd or enter (bad) (bad) (bad) jae rolb adc mulb mov enter mov xchg mov ss pop mov pop mov mov jns cs dec and test xor xchg jae rorl fwait lcall hlt call mov mov cld test pop adc jg mov mov rclb loop jno in fwait and ret xchg loope and xchg in push imul jg xlat sub lds push inc stos (bad) or aam in cmc jne adc pusha push add mov imul stc push push loop icebp aam aam xor dec inc dec into push push inc jne push xchg insb arpl jbe jbe and dec mov out mov js outsl cmp cmp decb mov fldenv mov sarl inc (bad) loop lret cs mov imul mov repnz sbb and push jae rcr xlat push dec inc cmpsb scas ret out lfs popf dec mov mov xchg aam loop jecxz mov lret fdiv mov mov dec sub sub faddp xchg sbb mov out fnstenv rcr fwait orl sub outsb jnp popa jle and xchg mov sub les div ja adc xchg in sbb js repnz popa popa popa xchg (bad) (bad) mov jecxz cmp push mov or or jecxz jbe sub clc inc mov pop or lock pop pop fldenv ret lods hlt ja adc addr16 icebp mov movsl mov loopne cmp lods push jb aam (bad) jo and mov icebp decl inc push jmp mov sub push push dec dec movsb sbb (bad) mov pop fcmovnb ret (bad) (bad) cmp mov sbb push add leave sarb call lret adc out aas pusha ds xor cmp mov cmp cmp insl test in in loope jae mov cmc jle pushf cmp inc jbe xor fcompl pop pop aad pushf popa xchg cmp inc push (bad) repnz imul (bad) adc sbb sub jg push push push push jb,pn add push loope xchg (bad) or mov mov mov push (bad) push xor ds push xchg (bad) es enter (bad) (bad) mov imul out xchg cmpl dec and jg mov stos cltd (bad) (bad) mov pop mov add out fwait jno ret pop xchg mov push jo lcall sub or stc std jl outsl leave int (bad) or push sub (bad) or aaa pop xor aam jo (bad) mov in mov add sbb inc xchg mov cli jno pop fcmovnu fcmovnu loop mov sbb mov (bad) rcrb xchg addr16 sub push pop sub jg or rcrl inc test adc sub mov xor test jecxz mov push (bad) std adc rol std cmpsb mov pop es ret add (bad) jg addl add leave enter adc ret fcmovne pushf lret imul lock cmpsb dec lcall sub hlt cmp cmp xor mov or repz xchg rcr push push adc push pop cmp sub mov push rcll add (bad) stc ljmp xor push push in jb repnz pop dec jno xlat fsts pop jns mov out negl rcll adc add add sbb sbb ficoml insb mov or jnp mov daa out adc lret addl adc dec cmp sbb cmp jl push scas sahf movl cmpsb sub cli sub rol xchg into rcr je jp loop enter fstps mov lds mov call mov push rcrb push ljmp sbb decl (bad) repnz push fst leave cmp sub pusha popa jb data16 adcb jp mov fadd or pop outsl nop mov or jmp inc mov lahf inc (bad) push push xchg (bad) mul push sbb jecxz fcmovnbe adc ds (bad) fcom enter aas adc lret divl xchg mov outsl lods mov lcall xchg js mov imul mov jg ja dec xchg lahf inc xor (bad) hlt fsubrs dec outsl jae xor ror repnz push popa imul pop sub outsb inc add dec jns mov jmp xchg mov inc cwtl outsl mov out out gs and jl cs stos in xchg fwait (bad) lahf ret add mov and dec inc pusha lahf pusha xchg push push test mov inc bound cs jge push test and cld pop sbb popf pop add add outsl pop sub lret pop pop rcl ds push push insl jno (bad) faddl fwait or adc mov les out push sub out mov sub adc push stos lret xor nop sahf mov inc inc jno cmpsl lcall push loope mov ret pop sahf sarl mov cli jae ficom pop adc xor dec int (bad) out daa (bad) xlat push lods lods insb xchg insb cmp aas dec insl pop test jbe push dec int ss mov add jnp out out mov add jmp xor sub and and lcall cmpsb cmpsl sub je adc repnz into rcl rcll test mov clc xor nop sbb jno (bad) fcomi cmp dec rorb icebp icebp call je pop mov lret sub lds mov bound into cmp insb push sbb mov in fstpl movsl movsl and pop mov dec arpl aas mov jnp adc and pop sub scas sahf cmpsl rcr test mov out add or lcall jnp inc arpl xor (bad) mov int3 test pop push fcmovne inc or mov pushf xchg pop push stos sub push int or add xor xchg lret inc cmp dec mov les lods out out lods xchg (bad) push roll add and sub sub enter inc inc inc outsb sub push and jl cmp sub pop out lret aad jo inc push fdivr or and push sahf dec stos insl sub hlt hlt hlt hlt fisttpll (bad) mov pop (bad) lods sahf adc repz mov inc jne mov dec mov cld jg or xor jge and lcall sysenter in nop sbb mov dec iret stos ds xchg pop (bad) cli jg (bad) aaa mov aam rcll popf (bad) out and stos dec ret mov call sarb sbb popf dec fs lahf xor cltd movsl mov jbe add shl push push je out daa push dec push pop call xchg xchg mov sub scas xlat or mov loopne inc pop rcr push sub sub aam stos ja clc stc dec ds pcmpgtw (bad) xlat ds inc ret (bad) mov and and scas outsl add dec dec mov add mov mov pop sbb xchg mov push push push repz imul loopne gs bound push adc ret and lds sbb jg lods inc leave test xchg (bad) repnz repz mov inc xchg nop cwtl stos imul push mov jo imul das das scas movsb jge sti imul push pop add addr16 fisubr out push fild sti js mov sbb aas aas adc scas stos fs xchg add mov inc mov int3 int3 push xor fisubl cwtl popf arpl and (bad) fsubrs xlat shrb imul jecxz mov inc sbb pop movb xchg insb sub sbb mov push jnp mov push push jae into mov int3 int3 mov sbb or test test loopne lahf ficompl nop pushf fucompp and inc pusha aaa mov jnp scas and daa scas repz rorb (bad) mov sahf ret jae cmpsl xor mov je je sub push pop add addr16 inc dec mov repnz hlt hlt jg cmp (bad) fisubr out rcr lods test lods inc lods pop das movsl cmpsl in lahf xchg fwait sbb xor xor ljmp addr16 aas mov push push cmovne sbb cwtl (bad) lcall sti (bad) cmpsl dec mov into rcrl rol dec ret int mov jns and mov dec movsl pop test insl insl pop add imul das pop lock lahf lahf iret lret mov hlt subb adc mov cmpsl (bad) mov pushf adc and and jp cli rcl rcl mov cmc (bad) pop outsb xchg outsb xchg adc rcll or add dec jge aad bnd frstor fucom and scas leave enter test js js test fucom fsubs out popf xchg push clc (bad) mov pop rcl nop stos imul add pop sub stos lret sbb or sub aaa enter or bound enter pushf (bad) xlat (bad) fsubrs mov out imul xchg jg pop loopne xchg fsubs scas loop pop xchg mov lds leave sbb cmp add xor arpl mov push sub sub add fistp xlat mov mov jge mov incl out fisttp mov add je cmp (bad) jae (bad) dec add insb ficom pop jp rcrb mov cmp cmp adc outsl fldt mov int jbe into xor or jg aad aad addr16 outsb fs scas push scas inc cli jae cmpsb xchg pop mov xchg stos aam lahf push pop push in sbb mov add jb lods (bad) xor frstor and test jns cltd movsl pushf xchg sbb cmpsw mov jg sub test push scas jmp adc stos stos fildll and test lea adc jmp addr16 enter dec jae cmpsb fcmovnu cs mov cmp mov mov pop jno sub lds movsl movsl movsl cwtl sub cmp int3 inc mov mov mov repnz adc and es push mov call or test jnp repnz xchg and pop lods call out inc inc ret add mov stc mov aaa mov rol stos imul sub xchg push sub jmp jp mov test cltd in pop aad xor lahf xchg push push popf scas outsb out adc push xchg rorb test idivb je cwtl dec pop pusha jno ja (bad) popl ds mov incl jecxz out xchg adc pop loop push aad cmp pop mov push xchg or or cmp fs (bad) sbb inc into mov cwtl in loop sbb fsubrs pusha mov dec dec jge shr cmp sub lahf xchg push loope xchg xchg loop leave ret xor cmp xor mov lret ljmp popf xor arpl outsb cmpsl and jns mov fwait push pop push xchg adc fistl mov or imul enter cmpsb test in pusha jl dec xchg in fiaddl or add rcl pop add mov (bad) jb repz ds mov xchg in jo lfs (bad) dec shrb (bad) lret lds mov mov push lods shr push pop xchg jl (bad) pop rcrl add xchg inc inc mov dec (bad) mov jl pusha test (bad) mov pop xchg inc sahf loope dec enter adc cmp mov outsl pusha xlat es mov and xor ljmp insl mov inc xchg push mov jp cwtl push sbb enter add popf call int3 adcl sbb out outsl mov (bad) (bad) push div ja jbe xor mov or push es addr16 inc mov cwtl fldl add mov aas jp dec dec mov and ret cmp mov cltd pushl mov dec mov dec xchg push push xchg push push popl popf loopne (bad) dec xchg lea stos arpl sub stos push sub lds mov pop pop push sarl push pop jmp pop roll sahf mov xor cmp adc pop push inc inc clc stc (bad) aam cs fmul and scas cmp pop sbb loope add push scas and fst xchg pop jns lcall xchg pop mov sti jb and leave push jo ret jnp outsb das das and inc inc aam cmp loope push push sbb repnz cmp mov xchg xlat xlat cmp rcl xor mov fdivs cltd pop jne lods lock mov nop in sbb fisttp dec inc dec insb movsb and out stos and sbb inc xchg adc sbb test adc sbb inc add fistp pop mov lds ficomp pop test lret sbb mov cwtl adc fldcw pop sahf roll xor je mov not mov out sbb addr16 lahf mov ret sbb xchg mov repz push movl sbb mov cmc xor jb div ret add es mov adc adc into test insb insl insl sbb data16 sub sbb jbe insl das das les fcomps cmpsl cmpsl cmpsl adc pushf arpl sub add xor mov add mov jmp (bad) push mov and daa adc les and jns dec mov lret into and mov loopne push inc outsb mov addl mov mov or dec xchg cli xor outsb outsb outsb scas inc dec movl mov xchg adc lods insl xchg test pushf adc cmpsb daa int3 movsb push mov loop mov xor cmp (bad) mov and push mov leave dec mov xchg lea shr xor inc jle mov aad adc jmp cmpsl test push aam leave lea push sahf clc jns inc rorb ljmp adc loope push cmpsb cmp mov insb xchg jo (bad) (bad) not add ficom stos and pop pop scas daa bound pop popa pop mov add gs out out mov xor enter adc andl and test test fisubrl jno ror (bad) js aad stos outsb cs out xlat mov shll push scas (bad) jne mov xor inc shrl imul cli push xchg loop jmp inc inc inc into mov into mov nop aad nop jge iret lcall push mov enter in cmp xchg fwait adc pusha xor (bad) ja dec stc jmp pop jecxz inc xchg push jae jecxz pop dec jbe repz int3 ds dec (bad) enter jb jo loopne push stos and mov ss fstps fwait cltd sub stos adc in test repz inc leave mov ja cli clc jge (bad) dec into cmp les sbb mov inc mov add pop push scas and mov mov mov mov xor jmp pop jmp aaa iret dec mov dec pop sbb test out mov arpl (bad) push cmpsl cmpsl pop jle divps iret dec movsb movsb dec dec sbb ret add sti sub lret sbb pop inc mov or cmp int3 dec mov cmp cltd xchg in (bad) (bad) mov rcll mov inc ret mov rcl and inc iret cmp cli cli jp rcr mov sbb mov cmpsl push xor icebp mov loope or stos int adc jp fistl in cmp enter xor cltd jae test adc clc sbb popf xchg stos mov cmp int3 int3 inc or out aad call mov sub (bad) in (bad) out loope sub daa mov cwtl inc mov and mov adc scas and or mov inc and jmp cli adc mov add divb push inc jp ffreep test mov lock fcomps adc sub or ret xor test adc hlt icebp enter xchg pop jb ficom loop loopne dec adc sbb aaa inc out cmp pop inc push pop fnstsw jb mov in leave pop gs pop add xchg sub push push lahf movl pop stc lods std jmp call and cmc xchg test cs test stc xlat xchg mov inc dec xchg int jno push push push pop xchg lock xor (bad) mov jno dec lds cmc sub scas ljmp pop dec push push push mov in movsl mov test aam push dec dec dec jl mov rol dec paddw push push movsl (bad) xor lea inc popa loopne loopne in repz bound push add jg ficom push xor imul inc add lock mov mov adc mov mov mov add sbb adc mov push iret into adcl roll ret dec lret dec dec inc xchg fsubrs fs mov adc dec mov lret xchg stos out mov mov sbb xchg jnp mov adc mov jns push pop mov ret and rcrb hlt xor or orl je sub mov fsubl and and (bad) mov leave movsb dec lea mov jno lahf sub xor fsubrl das sbb icebp mov pop sub pushf pop rorl adc in bound or std sbb out dec out ds mov sbb cmp int dec dec inc lea push mov push xchg push mov mov sbb fist cli or jge or add xor (bad) cld iret sbb jae push inc int3 mov fsubr roll adc clc mov mov xchg stos and cmp cmpsb out div add call or repz xor xorl adc mov jne rorl aas or repnz imul call divb inc mov rcll lcall rcl sub add mov sbb sahf lahf fwait fwait adc sti inc dec dec mov mov xor ja cmp fldt test mov jbe pop rolb sbb cmpsl movsl arpl xchg aam sarl shll cmpsl into mov stos (bad) sahf push push lahf fwait insl scas stos stos mov nop xchg cltd xchg test mov mov mov mov lock or or or loopne or or or dec xor and or dec cmp es sub int ror enter sub das das movsb outsl cs movb inc imul and jmp mov mov mov add or ds pop dec insl dec push cmpsb fs aas imul cmc (bad) cmp sub cmp cmp push or pop pop femms add add push push stc cmp movsl mov ss aaa aaa inc inc dec lea int3 jb aam sub jp rcl daa push pop arpl pop (bad) mov (bad) (bad) fild or or push or jl or cmp lahf nop popf xchg sub or push or lret lret or pop add push int push stos mov push cmp jae bound movsb (bad) (bad) ucomiss arpl sub ficomp xor lret add cmpsb mov or dec mov pusha popa (bad) out test mov add ds mov das and sbb sbb es pop aaa ss push and das imul arpl pop lock and jno gs lcall bound popl push dec inc push cmp sbb movsl stc not movsl sub dec pop test int fcoml out adc (bad) divb inc popa push pushw jae dec dec in loop jmp dec hlt cld in insl xchg xchg xchg xor pop aad or mov push sbb push and mov fadd ror inc mov scas mov lcall or inc and mov fnsave (bad) xchg pop pop ds xchg (bad) push push cwtl lcall mov jle mov mov ret lods (bad) ficom and ja cltd in movl add jl xor push outsl mov scas and xchg and lret (bad) repnz imul xor mov pusha and add sub and and or push push fmuls sub je cmpsl jne orb dec mov ret jl mov sbb ficomp pop pop add iret xlat pushl cmp fst sbb stc clc mov mov js mov js mov xchg push sar or sbb pop jl (bad) daa daa aas and into mov mov in clc repz int adc sahf sahf push pop cltd cwtl nop xchg push push pop adc cltd pop rcrb sbb std (bad) div xchg cmc rcl rcll push or pop sub xor or imull mov jno cmp or add add iret mov jns jns loop xor inc or and sub fist jl in cmc and out fs mov incl hlt sbb xchg dec mov jg ja xchg xchg xchg inc dec cltd adc ss xchg xchg push push pop sub adc fwait pushf pop push repnz rcr cli leave adc jbe adc pop inc push stc in pop sbb mov inc inc aaa xor mov xor mull in sub jecxz xorb inc lret loop push pop push xchg mov mov cwtl dec mov cmc movsl lods xor lret fsts (bad) ficoml shrb js aam insl jl mov push test in inc ds pop imul mov add sub xchg xchg adc cmp das cmpsb out ljmp pushl sub sub xchg mov inc test xor loop jns inc mov xchg push sti mov pop dec mov test pop sar jl sub imul movsb stos mov addb icebp sbb mov ret mov jge pop pop fstl aaa mov jbe fwait (bad) ds rcrl fnstsw mov adc aas mov push cmp add mov sub and mov test cmp mov or mov and and nop xchg mov adc fnsave adc add popa jnp jae pushf xchg test cmp jno xor xchg cmp jg jge aas (bad) cmp mov out out cld cld mov cmpsl cmpsl jg push sub loope ret add (bad) int (bad) or adc lret imul (bad) sti out cli popf arpl bound mov arpl mov jns outsb jno xor pop pop push push stc clc repnz xor xor aaa ss cmp aaa jne pushf rol lret inc inc push pop sbb lret push add dec dec xor cmp xor xchg push sbb sbb int push test cmp and adc loope rcr rclb stos lret lret out cmpsb pop aam insl test jno jo inc inc push push mov ja cld cmp xlat lcall cld cmp movl ja ja jg test insl daa daa fsubs lahf jae addr16 loope or push xor mov sbb pop xchg insb xchg insb cmp push inc mov add add (bad) jge inc jmp (bad) jno bound dec xor mov push pop push ljmp bound and sbb xor sbb xchg xchg mov jne call (bad) jns imul cli sti loopne pop pop inc inc jae add push hlt movsb dec es xor repz pop mov aaa adc jmp into into (bad) (bad) repnz push (bad) mov lods (bad) vpsllw (bad) mov jecxz movsb and sub fsubs vpavgb xchg xchg sahf mov mov add clc loopne psllw int mov sahf lcall push push mov inc or mul loope dec pop push sbb sbb loopne pop xchg jnp data16 jp cmp pop jecxz outsb inc insb fs das jg mov pop pop push pop inc adc out out iret mov cwtl jno ss sar std mov adc in insl jne xor push pop sub adc mov xor add and or or jae xchg mov push mov hlt rcll bound mov scas push mov cmc popa pusha imul cmp lahf sahf xchg xchg mov enter jbe aas or pop pop outsb push add imul jb lret and mov hlt sbb negb or adc test mov adc add and or out lcall dec mov loope lret push mov adc cmpsl mov or add mov sbb inc bound dec xor jnp lock out arpl and sub push push pop pop in andl add adc xchg iret dec bound leave jmp outsb jmp mov in call (bad) fdecstp cli (bad) imul mov hlt insb dec inc test cmp adc ss iret fcmovnu cmp cs jle ret push ljmp and add das cmp sub xorl adc xor test cmp and jne cmpsb out scas scas scas (bad) mul insb (bad) sub ja (bad) (bad) fcomps xchg fisttpl out ljmp sbb cmp mov les inc inc pop sbb stos inc mov push dec cmpsb fcomp (bad) sti inc stos stos mov mov imul mov gs loopne or jg jae xor int in jle xor and les push out mov stos scas push out (bad) sbb inc inc push push xlat (bad) (bad) les and and mov inc inc push fistpl movsb movsl and pop pop dec dec repnz sbb movsb movsl mov mov ss or push mov jmp mov add jne fs jns cmp push push inc push sbb cmp loop mov ret rcll or jo push push aaa xor lods inc lods jg pop push loopne pop (bad) repz aas outsl xchg jp xchg nop sub xchg movsl movsb leave int scas mov sti aaa and cmp and data16 xchg out lods sbb popf cwtl mov loop clc inc mov lock rcr cmp xchg xchg mov rdpmc xor cs clc in mov stos cltd xchg sbb or daa xor xchg rcl fs jp cmc or dec xor sbb mov lcall mov and xor mov adc lahf sahf ja ss out mov add and dec dec insb dec cmp mov cld std movsl movsl loopne mov lret and insb gs int call leave jno cmp sbb sub adc cmp leave (bad) rol fsubr in push mov mov out ljmp mov jmp loope (bad) adc lcall scas addl jp jnp mov out push push mov cmp dec sbb pop pop (bad) lock push sbb pop pop pop outsb outsl xchg nop testl jae jb push daa xchg sbb loop and sub pusha rol icebp fwait sub sub adc scas scas inc cmp ret test loopne ja jp cmp pop pop ja (bad) mov xor js dec mov icebp aad mov ss (bad) pop cld jno aas mov adc jmp icebp dec mov icebp push mov cmpsb out cmovs or mov sarl into dec insl push mov jle xor cwtl xor jmp xchg xchg jg insl xchg insl xor repnz pop cmp mov mov repz cmp dec dec movsb pop xchg insb xchg sti mov daa daa iret xor push push jns inc mov test popa push push jno dec dec mov dec test jmp hlt cs or xchg xor jbe lahf cmp cmp sub in in dec lret leave and jb fnop mov push inc inc nop xchg xchg xchg xchg test pop push or jecxz je xlat sub pop push cmp mov push and xor mov add jne adc adc push ja pop dec inc jno jo stc push lea fisubr jle xchg cmc cmc imul cmp pop push add (bad) sub mov sbb or pop fwait repz cmp push loope div repnz das inc (bad) (bad) call rclb adc add fprem div fwait push push inc inc pop pop dec dec xchg push push jecxz hlt test pop movsl pop cltd and xchg aam cmp daa add mov rol xlat adc scas out out sub add pop mov mov inc xlat movsb pop movsl sti cmp vshufps sahf pusha lahf iret ja nop rcl cmp jo jno into iret test fcmovu mov jno sub test pop add (bad) notl push push adc dec dec jo into cmc std call add aas imul test not loopne subb xchg arpl mov call cli in stc and aas sub in in (bad) (bad) rol sti std outsl outsl xchg inc jae fdivrs xchg jg daa fldenv dec pop pop dec dec hlt std jmp repz cmp das das xor and (bad) xchg sbb fdivl xor (bad) mov xor adc jle (bad) lds js xchg out push push add sbb mov lcall loopne fildl aaa push sbb pop insb imul pop js jno or inc (bad) ud2 clc mov add inc dec dec pop dec dec add or jp pop push push push xchg loopne mov imul test enter sbb in int3 lds and dec and and push push and adc dec dec or movsl mov cmp mov and sbb xchg xchg push adc loopne jecxz xor test xor int3 and sti add dec mov xchg leave fbstp inc dec jge pop jns dec dec jo push push and add jp inc addr16 movsl mov movsb jne shl fdivrl cmp sbb loop add xor ja nop nop push ja jle lods fsubs fldenv dec outsl in cld xchg incb jmp cltd cmp jle int repnz xchg rclb mov xor imul fsubs dec inc leave cmp (bad) (bad) leave jmp insl das das mov push jnp outsl sub push rcl insb int3 frstor int3 mov mov push out push mov rorl cmp adc cmpsl and push xchg xchg dec out lods lods mov (bad) pop sbb push outsl js (bad) fistpl notb adc fcmovne leave push or inc add mov mov lret inc mov mov cwtl lcall cmp xchg sbb fisttp not outsb pusha mov dec add stc adc out mov mov test and mov bound pop add add and xchg lret xchg xchg lret lds ret ret mov mov stos adc in mov adc push adc push pop inc inc je push push push xchg ret aaa std add inc xor jne jp aas aas push cmovnp cltd in in add or lahf sub sub mov mov adc aas mov mov cmp (bad) or push jecxz jecxz mov movsb int3 call pop shrl sarb hlt cmc (bad) inc ret std jne je mov lea mov daa int3 lcall dec mov mov push push scas push push stos push add sbb mov inc inc push jg dec inc jb sub push lock rcr sbb jmp mov mov fs lods mov xor push push insl test ret sub in test insl test mov fnstenv add xor fdivl out cltd nop mov (bad) cs mov idiv pop cmp push or mov and pop pop outsl push add ret pop pop push sti mov add icebp ror (bad) cmp cmp mov cmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov fucom loop sbb and xor or sbb pop sbb jno dec dec dec sub imul jnp cmp jns adc dec dec inc add ret adc (bad) (bad) add add and and insb insb or xor pop sbb and adc sub push xor xor push sbb push and and out in in add lret leave leave jge inc inc fucom loope imul sub inc inc push jp jae insb bound aas aas aas dec jbe je mov pop ljmp cmp ret rol xchg lahf mov les xor push add sbb and or xor add ds inc inc sbb and push insb outsb outsb loopne fcmovu jl inc inc lock xor xor fcmovu fdivrs push push lock cmc div loope fcmovu hlt int iret mov (bad) mov cmp cmp sub sub pop pop pop xchg imul jge jg addr16 imul or or inc inc leave repz icebp pop arpl cmpsl popf lahf lahf inc jge jg mov popa popa jne dec dec mov xchg rcll (bad) (bad) fstpl iret iret xor pushf (bad) fildl inc inc inc xchg rol cs mov cmp ds prefetchw js aas aas add daa and push rol sbb pop xchg rcl shlb adc out out push gs clc clc fs push push (bad) div hlt mov ljmp test xchg xorl jno inc inc fwait lods scas scas arpl push in fcmovnu fnstenv inc inc shl out out rcl push addr16 and jns sbb sbb addr16 imul imul pop insl outsl outsl fwait scas lods lods inc jno jae xchg nop nop pop outsl insl insl aad loop dec jns jnp rcl rcrb imul (bad) mov addl xchg xchg xchg mov xchg mov test bound cwtl lcall xchg xchg xchg xor push xchg mov ljmp inc inc inc ficompl pop pop sub insb or push push push push sbb pop pop outsb sub sub jb pusha and and fs (bad) fnsave je jbe jecxz loope data16 xchg xchg xchg aaa je jbe movsl cmpsl cmpsl fstps into into sahf stos test xchg cmpsb movsb movsb mov xchg xchg xchg mov mov xor mov mov xor aas aas xor insb dec dec ficompl jp lret out xor jno test mov nop rcl (bad) divl in pop pop pop mov div sub jmp jmp cmp jno mov and (bad) fst ljmp imul (bad) sti stc stc (bad) mov mov inc inc inc adc pop pop outsl push push push jg inc inc add cmp pop and and inc inc stc (bad) cmpl rorl jecxz loope movsb cmpsb cmpsb mov sub sub cmp cmp cli clc clc push and sub out aad mov ljmp (bad) shll push pop int hlt hlt hlt (bad) xchg xchg xchg xchg lahf xchg xchg (bad) les in out mov div or mov jbe and adc adc cltd cltd les dec dec lret inc ficoml push push loopne push lods addr16 mov sbb nop rcl xchg or jmp imul (bad) (bad) cmp mov pop nop rcl rcrb xchg xchg into add xor mov mov push rcll (bad) and popa and jb std std imul mov pusha and jae std std jnp cmc cmc xor mov sub mov mull hlt hlt and mov pop (bad) int3 int3 mulb data16 mov mov pop mov push dec dec mov mov test stos adc cmp rcl rcl mov adc push mov ret shrb adc push push mov sub xor mov dec or test adc sahf popf (bad) sub jge out movsl mov nop (bad) xchg out test mov mov mov mov (bad) (bad) iret lea xchg les clc hlt div div stc lods loopne loope or js jle cmp pop cmp pusha adc add add dec or sub aaa jae jae jae jae push xor and cmp bound xor pop inc adc add and gs fs sub or push adc je push cmp dec aas aas aas push and pop cmp adc push adc sbb adc adc add adc or adc xor adc cmp adc and adc sub adc push adc adc pop adc adc inc adc adc dec adc adc jno jb jge jle jns jp gs adc insl adc adc adc pop das inc xor adc jle sub sub sub sub jl jl cmp sub syscall add push push ss inc dec push push adc push dec pop sbb dec jge inc dec punpcklwd push and daa push mov es das pop jl jo jno xor pop imul pop adc inc sub or cs xor xor add xchg in (bad) mov xlat movsl shlb mov mov mov mov lahf cld mov mov xchg cltd jmp mov (bad) in stc fnstenv jmp loop std clc jp push push in call pop push insl inc pusha and mov fcoml (bad) cmp sbb and push jno arpl jne jp outsl dec sub inc sub arpl jle or scas (bad) mov mov lahf fwait xchg (bad) cld xchg sti lahf sahf outsl push ss gs inc xor jae sub inc insb rol cmpsb xchg mov int3 mov sub push fs jae jne insl dec and data16 or outsl add shr loope cld xchg stc pushf clc fdiv fistpll mov shrl adc (bad) movsl sarl clc in mov mov cltd lock add (bad) ja and adc and inc and pop xor pop xor out jecxz std cld cld int hlt leave stc stc nop cmpl ljmp (bad) in (bad) mov mov push enter popf pushf (bad) xlat ja (bad) packssdw inc jo dec imul insb sub sbb adc add add (bad) (bad) div mov sbb fs popa fld clc clc into lods xchg xchg pushf out fwait call cltd mov lahf mov (bad) mov out lods test (bad) mov adc pcmpgtd cmp sub jle pushf cltd scas scas xchg xchg mov inc dec and pop cmp push or and push cmp data16 addr16 jb add and in mov stc (bad) in repnz not mov rcl mov lods mov clc cltd xchg sahf sahf xchg mov xor push xor push and scas iret sub jb imul mov lahf in sub out not mov sti xchg mov scas fldt fisubl aam pop push add add pop push add dec sub pop sub inc and xor cmp xor or add pop jo add sub mov nop lcall dec mov arpl dec daa inc ss sub push ja dec dec stos mov (bad) add je mov mov repz out ljmp cwtl push mov iret iret mov test test sti ror outsl outsl es lret out lods fidiv les inc sub sbb insb das inc xor das inc and pop xor xor jbe mov mov out in int ficompl fcoml hlt jo cmp push cmp cmp mov cmp adc enter push push push inc add addb addl jnp jnp mov inc inc inc jno mov mov es mov add cmp jmp mov mov scas mov fcmovnu in aam mov xchg xchg xchg cltd xchg gs in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in push sbb or or div or or ja mov or jle icebp js jne push push repnz cld add add pop pop sub xchg mov clc mov mov xchg popf mov mov mov cld mov cli sahf mov fidivl data16 jnp ja jns bound bound adc pop imul dec pop push add arpl dec push jnp imul push cmp dec and out scas fisubr mov mov stos in mov cltd in (bad) push rcl mov (bad) fistp std movsl movsb lock mov mov jmp (bad) (bad) inc out out movsb lds cwtl ljmp xchg sti (bad) hlt in fsubrs mov in and out mov lret test test mov mov xchg lods lods pushf popf mov nop xchg mov aad mov mov test mov mov movsl lret mov aam loopne iret scas (bad) mov adc inc and dec inc pop push push jb ds loop into ficompl movsb xchg xchg fldcw shrl mov (bad) mov push sbb and inc xor and call mov fstpt pushf mov (bad) popf movsb test xchg popf xchg clc mov fwait xchg cmp pop push jb add negl cmpsb mov ret (bad) out icebp nop std xchg not int adc jb add jmp dec (bad) (bad) (bad) std in repnz lcall and scas mov add outsl outsl or jle pop jbe bound jb jg jns imul inc add and add arpl je popf mov nop lock repnz cmc out idiv (bad) in mov jo or inc push push das repz sub popa insb dec pop jnp sbb dec inc nopl and inc xor and jbe adc or dec sub je or or bound clc or xor popa popa add cmp aas pop xor pop push cmp or adc lcall xor rcr cltd movl dec and sbb rcr (bad) mov je sbb xlat cld loope or jle lret scas cmpsb (bad) mov iret (bad) popf xchg hlt (bad) jb sbb mov sbb adc imul arpl inc inc and xor lahf stos dec aam aam mov mov div not in in in shr rcl out shr in enter (bad) out lret neg loope loope lret mov mov repz leave (bad) mov cld cld cld aam std std rcl rcl out rcl shr in in in rcl xchg popf popf popf popf xchg mov leave leave in lock (bad) (bad) (bad) std cld lock cmc jmp (bad) (bad) (bad) out out jecxz int int rcrb insl fstps or xor or sub js inc inc jp inc inc insl xor push adc (bad) int int (bad) mov mov mov mov push jge jge jge jns cmp push je xchg stc cwtl jmp xchg fwait lahf rcrb adc jae jno dec dec sub aas ss adc sbb daa and outsb jp jp loop pop pop adc stos stos xchg insl sub sbb cmpsb cmpsb (bad) jns cmp fistpl sub rcll sarl repnz xorl and xchg cltd bound (bad) addl out cmpsl inc mov lahf lahf psubsw lret pop in movsb je iret iret add mov lret pmaddwd add mov mov in movsb or mov adc test or mov das aad xchg or mov and cwtl cwtl or mov aas lds xor mov iret xor mov ret cmp or mov fbld mov shrl push mov adc mov jecxz pop pop or mov incl mov repz or mov (bad) jne xor (bad) mov and xchg aam insb insb cmpb loopne pop pop loopne pop pop sarb js stc mov pop pusha cltd fcomp int3 xor xor pop in adc push fldenv pusha pusha adc test jo aam xchg sarl js les sbb cld mov or add mov and cli or mov push sub mov add mov jbe aaa push mov adc andl repnz stos ret cmpsl rolb ret loopne (bad) mov movsl dec jge xor bound sub sub insb or jne adc inc sub aas outsl add jne jne push pop dec mov negb mov cmpsl shlb in repnz xchg lret lret mov je movsb and xor or inc and and jp popa xor daa daa daa insl or and and jge dec jae,pt imul cmp imul jl push and add xor xor push xor pop jnp js jp or data16 insb fs jbe jg mov rcl test dec lahf mov call fs pop pop pop pop pop pop pop pop push push cmpsb out in loop loope out cmpsl in cmpsb ljmp cmpsb repnz icebp cmpsb (bad) cmpsl std pushf (bad) popf stc pushf cli popf cmc pushf negb in pushf out popf jmp pushf out out out out out out xchg xchg pushf fcmovnu fbld xchg insb xchg lods cwtl popf fst jmp in rcr in addl mov xchg adcb cltd addb or sub or or and or or rcl sarl push sub arpl sub jnp es jnp mov div xchg xchg (bad) dec int jmp lods leave leave out (bad) (bad) cli cli lahf lahf lahf (bad) int into into scas scas (bad) mov mov fdivs mov int scas scas lret (bad) out decb ljmp out rcl icebp icebp icebp xchg xchg (bad) decl mov mov decb testl cmc call repz xchg xchg xchg cmc hlt dec pusha add adc adc pop arpl outsb sub (bad) divl sahf stos mov mov std loopne repnz mov fwait lret ret mov rolb test aas adc std cld call pushf (bad) shrb inc inc inc sub pop pop sub pop pop aaa xor mov jecxz cmpsl cmpsb aam movsb mov stos stos iret iret mov in in dec fs pop pop jnp inc dec outsl outsb outsl pop inc inc inc inc add add inc inc inc inc or pop ds xor jge pop aaa push ds and out xchg decb (bad) mov shrb inc imul cmp inc jp gs adc pop aaa inc es xor pusha add enter ret mov (bad) std imul push push adc addr16 jl jl pop stc stc pushf mov mov iret iret iret shlb and imul lcall mov out ljmp outsl imul jg pop pop cmp push pop push push push push loopne mov xchg cmc cmc addl pop push jb xor mov fcomp mov movsb xchg lcall pushf pushf clc fnsave les xchg ljmp jne pop jecxz xchg nop (bad) out out xchg sub adc aas adc adc (bad) in in mov (bad) addl dec dec arpl cmp cmp stc fldcw mov je jl and push es inc sub sub ss inc xor inc gs xchg lcall xchg xchg aam lods lods (bad) mov (bad) clc loopne xchg into into (bad) (bad) jmp sahf sahf lock xor add mov repz mov (bad) jmp test lret lret loope jge push jbe (bad) stc jmp nop adc mov adc xor cmp sub or push lods lods lods lods fcmovnu sub mov add or fs push adc push push gs push adc and dec jns cmp cmp jle dec jae inc inc jne pop pop pusha pusha push push outsl outsl push push jp jp pop pop sub scas scas loop loop aaa das jae pop pop add jno lret jecxz xlat out (bad) (bad) in mov mov (bad) (bad) mov into jecxz rcl loopne rcl fadd cld cld mov mov (bad) mov xchg mov repz addb out (bad) mov mov mov ficomp std pop xchg fwait mov test mov and ds push xor dec sbb sub outsl dec stos stos enter nop mov fisttpll icebp mov (bad) (bad) (bad) mul loop lcall lcall ja push push inc aas aas or cmp imul add repz popf pushf popf fdivr cli shlb and pop pop cmp pop push pop dec and imul xor outsl arpl arpl push idiv pushf call add inc inc cs mov mov mov into sar div aam movsb shll stos mov call out icebp icebp lods lahf sub cmp jge,pn (bad) not (bad) addb repz andl loop mov aam mov out (bad) gs dec dec jecxz cmp or sub daa out out mov in mov lock jecxz stos stos loop movsl movsl jecxz cmpsb cmpsb icebp icebp cmpsl cmpsl repnz cmpsb cmc cmc cmpsl cmpsl div mov mov (bad) incb sbb pop xor pop pop push push or test mov pusha dec sub loopne push pop pop xor stc cltd cwtl data16 out mov hlt clc clc clc pushf xchg mov dec pop push or jle imul xor add (bad) lret fldt movsb test (bad) mov mov mov repz pop and and inc inc cmp adc pop pop insb jno sahf add push mov jbe or and and inc push add inc inc and jb jae loop adc jb xor (bad) repnz cld mov (bad) fcomip icebp fwait fwait jmp mov mov cs push mov lods jmp dec dec das das inc push pop pop aas sub ret fcmovnu popf arpl mov rolb sbb cmp xor xor add jne or push push cmp aas sahf mov fcmovnu mov cmp out xchg rcll cltd cld xchg out out (bad) icebp into lock jecxz (bad) (bad) lret ja jo ret loopne cwtl cmc push (bad) cld scas fidivl fidivl in add bound bound sub cmp jo ror (bad) jae mov stos dec test cmp adc push push pop pop cmp aad aad (bad) call icebp (bad) repnz incl in addb lahf cmp xor es pop je arpl xor push mov pushf jmp aad fnstcw lods leave mov decl aad cli jle cmp and add pop ds cmp popa pusha icebp cld mov jecxz test mov cmpsl aam into rclb mov icebp pop jae fucomi lods leave mov fildll test popa popa jae stc aad decb fstpt push push dec pop push xor aaa aaa jae jnp sub or ss movsl mov into cmpsl leave enter fsubp test mov (bad) mov mov xchg nop xchg repnz sbb inc inc dec push adc das xor mov mov jg data16 pop pop das and cs int push pop push push sbb sbb sbb sbb cmc std std loope in lahf lahf cld cld xchg xchg icebp icebp xchg xchg loopne mov in in in mov dec inc dec inc inc and fsubrp mov loop mov movsl div xchg pop popa loopne dec push push add jbe gs push sbb jbe inc adc int3 (bad) in movsl add (bad) sahf sahf rcl addl (bad) lock sbb (bad) out sbb (bad) (bad) (bad) add (bad) mov sbb insb cld divb dec dec dec inc arpl push cltd xchg cltd lret repnz sub out out xchg xchg fcmovnu popf popf leave leave sahf fwait pop dec or push push push sti jae adc (bad) mov mov fbstp and mov mov jmp cli repnz sbb jb jns inc xor js jl je pop ss cmp xor jb jbe push popf mov xchg aaa daa jo imul ja jae dec or (bad) sbb pop cmp xor add push and pop sbb stos cmpsl stos les mov mov mov fcmovu call xor xor cmp push push ss pop jle jle inc inc sbb pushf nop xchg lahf xchg in out or arpl pop inc inc ret (bad) lock mov push pop cli divl (bad) mov out in aad int cld cld int3 int3 cld icebp movsl movsl jecxz repz hlt and sub push cmp adc pop jns sub fs push xor cmp (bad) adc dec inc inc dec aad enter sbb sbb sahf lahf sahf addw pop pop pop pop push inc push pop push add packuswb rorb aad leave adcl ds ret iret cwtl hlt xchg sti cli inc push addl sti cmc inc dec push xchg pop inc push xor push daa daa and sbb aas sbb push xor cmp jle adc cmp or jae jae aas sub mov xchg xchg mov lock sbb and and hlt cli mov cmp jbe fcmovnb xchg fwait lcall test cltd xchg inc dec dec and cld idiv or or add sbb push push nopl pop aas aas pop fstpt mov ret add push push dec or pop imul push pop mov cmp (bad) push lea inc dec mov int3 enter pop out loope mov push mov fwait jge inc push pop or xor cmp cmp aad in std mov ss div mov mov sti in sub test mov add jnp out into mov in loop xlat movsl (bad) mov mov lcall (bad) mov lret aas daa gs add mov xchg in in std in aam cmpsb call out loope (bad) jle push sbb pop sub xor and insl jnp jmp xchg enter rcll fisttpll or add lcall aas inc add (bad) roll mov cwtl std xchg loopne loope in sbb fnsave jns pop add or insl pop bound insb add outsb inc xor (bad) (bad) lcall gs imul int3 sbb dec dec test movsb enter out cli sti repz mov pop out loop mov lock mov idiv out out into (bad) lock lods (bad) mov mov cmpsb (bad) mov int3 lods mov mov mov (bad) rclb add mov aaa aaa sbb inc cmp repnz (bad) dec lret or sbb dec dec lcall and and (bad) bndstx (bad) sbb into iret into loopne aam xchg xchg xchg xchg (bad) xor or sub gs adcl sbb cmp cmp cmp scas xchg (bad) leave inc push adc mov cld cld shr ljmp aad daa imul mov hlt adc data16 jo jno fs and insb mov push jne and adc push cli sti fist lret lret stos rclb xchg into rcrl mov scas mov mov inc pop pop iret rcrb mov scas mov test (bad) lret xchg xchg adcl dec pusha pop pop pop pop dec dec xor xor adc ja xor and and and mov mov and mov clc (bad) out out out out incb pop adc add sti mov adc and and xor shlb and popa pop inc add inc pop push push jae jno pop addr16 jmp test addr16 cmpsb cmpsl addl mov dec repnz in in call or inc jne movsl mov shr xor cs cmp push push pop inc jo mov mov fild arpl es or jge mov es inc inc push outsb outsl outsl sub gs mov push push aad aam dec dec dec and out fwait pop pop pop ficomp dec dec out sub sub icebp xor xor pop pop pop mov ja jno mov lods push xchg xchg fstps xchg js mov stos pop cwtl cltd cltd mov dec push xchg xchg xchg rcll mov xor xor pop pop pop mov dec movsl pusha popa popa popf pop pop pop imul daa inc xchg leave addr16 jb mov mov jb popa cmpsb cmpsl cmpsl addb push rcl shrb add or stc ds aas xor clc clc fcoms adc pop nop xchg xchg cld xor xor ficoml adc leave add add es daa xor sti sti lret add add xchg xchg in sub mov jl leave add add sbb ds rcl orb lret add sub and xor xor pop push push push aas jp inc inc inc shrb or clc clc clc push add fs fstps aam aam popf mov mov rol sarl addr16 mov mov loopne out (bad) aam rcl push dec insb je xor jne xor imul or adc (bad) leave addl mov int fdivr cld cld and mov rol lock jno jl push dec inc inc xchg scas xchg into into lock aam pop imul fstp fnstenv adc out xchg rdtsc jno jne mov movsb movsb mov push or adc push inc out rcll and dec or jg jg out dec pop pop pop sbb dec pop xor adc outsl outsl imul and add dec or sub aaa aaa push push repz cltd mov loop mov xchg mov cmpsb nop mov mov insl lods lods int3 enter mov sub (bad) pop push je jb jp sub int3 imul jmp pop mov mov mov push dec push cmpsl scas mov hlt divl dec push adc mov (bad) mov xchg (bad) mov sahf sahf inc sub ret into (bad) and sub loop mov (bad) ja addr16 pushf rcl rcl stos stos lea stos stos stos xchg mov cwtl cwtl ror loop jp sub sub push jle mov cltd test push psubq push pop pop cmp cmp sub mov mov sarl icebp in ffree test loope into into lret les pop sub jl mov ljmp adc add adc jbe pop pop pop sbb cwtl nop mov jne lea mov push jnp jg daa daa inc pop add push jbe imul stc stc std sbb inc inc inc cld loope mov mov mov dec dec push clc clc jmp add bound dec mov xchg lea aam (bad) (bad) xchg std leave mov clc dec xor push push inc dec gs mov ds or pusha insl loope lahf pop sbb scas and adc in in shrb or cmpsl cmpsb outsb outsb push insb pop pop pop cltd xchg mov inc out xchg mov inc inc mov call xchg jmp xlat rcl push aas push push pop cwtl mov adc in lods popf fdiv icebp stc xlat (bad) (bad) shlb fidivr call mov ja jp dec inc dec dec ja out out daa daa pop icebp icebp loopne loopne fmull mov mov fcmovnbe loop pop adc daa push movsl movsl movsl or daa mov cmp xor add add add push mov fcomp fcoms mov (bad) cmc (bad) flds xchg mov jg jg sub rol add pop pop dec mov cld sbb pop pushf aad icebp cmc sti jae adc push push and addr16 jg sbb and and dec dec adc (bad) fildll jecxz dec iret ret inc inc fwait loope fstp dec inc jle in aad jno push push dec push cmp cmp js dec lods lods stc xorl push mov enter or push outsb outsb push cmpsb (bad) repz divb dec fs dec dec mov fistpl sarb jge,pt dec dec (bad) shl xchg xchg xchg iret ret pushf xchg lods lods rcr loopne ret (bad) jge dec dec fst fcomp inc (bad) lret scas scas or inc add pusha hlt mov lret jo dec repz jmp outsl mov stc stc stc sub adc enter xchg cltd movsl movsb push push pop je repnz or movsb mov rcl mov movsb movsb mov add add sub enter xchg pop jo cld ret into repnz outsl (bad) mov (bad) jecxz mov mov neg fiaddl pop jae stc stc std jbe neg fisttp fldl jno in in test out out out pop push outsb outsb xlat (bad) loop jmp in test gs fcmovnu fstpt xor pop mov ja and and aam mov or iret out push sti sti or dec dec push sahf xchg jg pop push pusha inc or pusha push xchg xchg rcr scas scas cld icebp int mov lcall add iret mov (bad) (bad) push pop push push fcmovnbe ljmp or xchg cmp add testl or add dec dec dec xchg cwtl mov gs pop pop stos cmpsb mov adc sub call pusha dec stc mov push push add iret mov mov add rcrl or gs push (bad) in adc rcl rcl cltd cmpsl cmpsb cmpsb stos xor or xchg xchg xchg xchg nop nop xchg (bad) rcrb push push push push push dec data16 nop xchg int3 loopne mov gs insl out xchg xchg add pushf (bad) cli cli jmp jmp fistpll pop js and sahf mov mov adc cmp mov sahf sahf dec push jg addr16 or mov and pop dec dec jb leave dec pop cmpsl ss jae (bad) xor or push dec lods aas jle xchg push inc push mov jl (bad) stos stos mov inc inc inc cmpsb cmpsl mov jnp jp loop out mov and addb sbb dec inc out fwait cmovle test adc push inc push mov gs inc addl stc std push (bad) iret mov js adc sub mov xchg mov popf lea pop add daa divl sbb mov (bad) pusha imul cltd jns js movhps and inc and rol mov dec dec xlat aaa ss in in jle cmp cmp fstp fld clc fsubrs push test dec push inc push sub push mov xchg xchg adc pop or call xor movsb inc inc inc fcmovb mov sub mov mov stos xchg mov movsl std push pop pop mov push push lcall pop mov pop dec push jns jnp lods lods lods fld mov fwait or fidivl add repz mov popa popa jae dec dec gs pop pop arpl pop rdtsc xor dec prefetchw jnp cmp jns cmp pop push push push dec prefetchw mov push push push cmpl fcomp pop arpl adc cs jne ja push sbb pop popa arpl insb outsb outsb dec jae jno pop pop pop pop arpl xchg lods scas scas inc jns jnp mov add pop adc push cmp ret subb ficom outsl outsl lret div hlt inc jge jg xchg nop nop push imul add mov fmulp int3 ret clc in (bad) hlt int3 into into clc rol cmpb fisubr and cmpb ss int3 into into push es sar cli or ss or sbb xor xor dec dec sbb and inc jle jl (bad) dec jo jb aad xlat addr16 pop pop lcall inc scas xchg xchg xchg xchg stos test andl xchg xchg int cmc cmc cmpl popf popf pop popa arpl addl popf mov jnp sub insl sub add add addr16 xor int mov std mov cmp rolb pop pop test ret repz icebp xchg rcl rolb mov (bad) xchg xchg xchg js ds mov cs jmp daa adc adc push add cwtl scas lods lods cmp inc inc inc and push inc ja jne js jp imul inc jne ja mov push push lahf test and mov sbb sub fwait in fcmovnu fnstenv in out cltd fwait fwait mov lea mov addr16 push push mov outsb insb insb cmpsb xchg xchg xchg sub push mov xchg mov and and jg sub push pop imul dec jnp jns pop pop pop mov dec dec dec test sahf sahf push fs out out pop push cli cli push pop pop and push push push push cld mov pusha pusha out mov nop hlt mov mov scas lods lods loopne cmpsb cmpsb xchg (bad) aam enter pushf fcomp fcmovu lcall lret mov sbb sub imul jp dec dec dec xor and and inc inc jle dec dec push push push dec jp js pop pop das adc sbb lcall adc pop fdivr outsb das sub into jle outsl pop add (bad) jne aaa aaa xchg xlat aad adc or dec outsl sub cs jge add outsl outsl mov cmc cmc xor jno mov cltd imul add cmp or das sub mov sbb sbb push push fwait cmpsl movsl movsl icebp int iret xchg mov lahf mov fcmovnu inc rol mov daa daa arpl pop or xor outsl push push push cmp add jg inc inc inc jl jle leave lret lret imul loopne (bad) and sbb inc mov push xor addl sub cmp (bad) (bad) in movsb movsb mov in out (bad) xchg (bad) (bad) fcomps fidivr xchg jmp lock daa jg (bad) mov (bad) mov (bad) (bad) jnp xor jp push add sub aas imul or pop inc inc (bad) bound dec xor sbb inc and cmpsb inc inc push arpl pop cmp js js gs scas out xlat mov fcompl sti sti sti dec pop sbb inc inc cmp push or dec cmp pop sub inc inc push inc or pop jb or je outsl outsl (bad) ljmp scas stos cmpsl mov cmp cmc mov call mov xchg mov dec and push push repz cmpsl (bad) mov sub cld popf stc stc stc xlat roll cli jecxz nop hlt lock (bad) scas fistpl aam fistpll sti (bad) (bad) int3 int3 (bad) movsl jns dec dec dec or outsl jle cmp std dec dec pop push adc pop push push push (bad) (bad) jmp or xor mov leave sbb aas imul or aas add and xor xor sub add or push movsb and pop sbb push push xchg orb jns pop pop outsb jle push and and xor cmovl sbb in movl iret stc in xor cmpsl cmpsl rol mov mov mov lods mov mov ja jo daa inc dec inc ss sub push push loope mov mov and mov mov cli hlt mov sar (bad) ljmp sub xchg (bad) xchg xchg repnz scas xlat fisub sub xor jae outsl add jae or push cmp add push lods (bad) mov icebp addl xchg (bad) pop (bad) loope out mov cld mov scas out into into bound mov mov (bad) out out sahf lods lahf int3 mov (bad) mov mov push xchg xchg adc pop (bad) (bad) hlt es push sbb add inc add adc mov stc out std (bad) bnd jbe jg or add pop pop adcl xchg jecxz cmpsl mov jnp sub dec jle push dec dec pop push push push sub lahf sahf nop cwtl iret iret adc inc dec sbb push pop pop pop mov and mov je insb or cmp bound sub in call or inc and push push push mov cmp xchg sarb inc dec sub out jb jns push lret into ret or or call stc aad (bad) mov out in fcmovnb dec js addl ljmp jnp xchg ds cmp and push push mov test xchg ret cmp stc add add add cltd mov add inc xor jo jl jbe push cmp jnp dec and push xor jle arpl in loopne rcr int3 fwait fwait fwait mov adc xchg push insl adc cltd mov lcall dec cmp inc adc sub daa add cmp or and outsl add insb add or pop sub dec cmp mov cmpsb lret pop pop or add or push push inc push push push adc inc jbe fs les lds clc (bad) push push dec enter xchg decb add insb pop mov pushl inc pop imul imul sub inc xlat fcmovbe rolb addr16 daa sub (bad) xchg pop ds push es pop adc inc jb pop fcomp fidivl jmp dec dec jg adc cmp mov sub dec push pop inc dec jp imul and xor cmpsl int3 lea mov test in jecxz cmp cmp sbb out out (bad) (bad) xchg (bad) cli lods lods (bad) jmp fcomip xchg stc xchg xchg xchg mov mov xchg hlt xchg rcl (bad) aad shll movb leave leave (bad) incl mov or jge das dec das inc pop bound pop pop dec dec push jo fstp rcrl push aas sub sub lcall lcall std xchg out testb add hlt mulb xchg (bad) mov stos leave lods loop stc nop negb xchg je and movsl mov or pop sub xor cmp add inc add cmp jns (bad) (bad) call je inc popa inc inc adc sub daa lcall out stos call sub ja,pn jle leave shll in jl push pop sbb and test dec dec es push jne outsb push push push insl insb pop data16 jb sti out out mov add cmpsb xchg popf mov inc adc out loop int aam outsb bound insl outsl push mov mov lret aam shl int3 mov aam (bad) mov addl adc or cmp add sbb add jne sub dec sub je js push pusha push push pop pop pop pop add pop sub and pop jp jnp iret into dec push push pop sbb mov lcall jg out mov int out xchg cltd cmc nop notl (bad) mov out mov in cli cli mov mov xchg xchg bound mov fsubl xor pop push inc push cmp cmp cmp mov cltd in test push rol pop xlat xlat and adc inc or add dec mov lret (bad) fcomp gs push adc pop or add gs add pop cmovl dec sub sub push ss cmp arpl jp jp mov roll sub test ljmp icebp lea mov mov (bad) fnstcw shll int in clc mov scas clc clc lret lret dec inc gs addb lods lods mov scas test cmpsb (bad) cmpsl cmpsb test repz loop aad mov jl push or sbb cmp inc xor jae ret (bad) inc add sbb dec sub and loope sti mov test mov enter cmp pop pop ds and sub out repz insb insb stos mov negl pop pop test xchg repnz (bad) jmp pop push mov dec inc push push add push pop or mov out cmp sbb stos cwtl mov jne push out stos mov mov lret push jne jae jae jbe popa xor in in sub adc es and stc lds xlat mov out loope loopne mov mov dec xchg movsl icebp sahf fildll jmp inc adc sub imul insb aas ja jle pop dec dec jno cltd push push adc pusha sub and inc add pop sub push (bad) in clc clc xor jge jo insb gs push push inc inc add dec push sbb jnp jge (bad) mov adc sti (bad) aam clc lods ret stos mov xor adc out div cltd cmc nop popf adc push push pop or pop pop in in mov mov push pop pop push popa push dec dec sbb or adc push arpl mov nop nop lock in out icebp mov std lods in fsubrs xor dec ret ret mov fst out jae jnp fs inc cmp xor scas scas mov ljmp jge dec dec cmpsl stos jg (bad) fdivr int3 enter xchg gs or (bad) lods mov mov adc jg bound push andb ljmp or xor push outsb cmpxchg mov js sahf sahf fcom popf xchg xor mulb mov fdivrs fnsave lret xlat cmpsl xlat mov mov mov mov xchg mov sub jo sub out out mov movsb movsb in lret lahf xchg (bad) enter fmuls (bad) (bad) rclb repnz movsl idivb jl (bad) pop adc out test stos cmpsl in out mov lea pop out scas scas fcmovnbe insl gs lods cmpsl scas out out int fdivl fisub addr16 pop dec call repz lock jmp mov xchg pop pop add sub jp dec push jb gs fsubs cltd cmp sbb sbb das and push sbb leave rol add scas pushf xchg xchg lahf xchg xchg mov pusha push bound lock fadd shlb outsb pusha in loope jmp xor mov inc pop jbe jae sbb xor dec sub sub enter jmp rcrb or dec xor sub xor and into fimul ror mov stc rol (bad) mov push mov std icebp mov mov aas cmp cld hlt mov or cmp fs pusha sub inc dec sbb fisttpll loop or pop push ffreep cmpsl test jg push push fcmovne iret vpcmpgtw push xchg rol cli mov mov (bad) xor insb outsl or fisubr push add sub cltd fstp lcall lret (bad) out test aas cmp or jp jle sbb push sub int (bad) sub aaa or cmp out cmpsb aad hlt xchg jecxz jecxz hlt ljmp mov int3 pop pop (bad) pop inc sub xor add int3 int or dec or cs rcl js cmp xor mov push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push stos stos stos push push push ss aaa and mov add jne dec inc mov lcall nop xchg xchg scas lahf lahf mov mov repz cli mov (bad) incl or pop push xchg xchg jecxz loop repnz xchg xchg cwtl loopne shlb jne mov jne jbe xchg cwtl inc inc add (bad) cmc or or cmc cmc or or or imul or or (bad) or add lock (bad) rol ret (bad) iret imul or mov repz idiv idiv jnp add stc repz mov push cld (bad) (bad) (bad) ds inc in imul adc cmp xor je jno les outsb outsb das and sub push mov scas dec jmp mov shrl pop pop pop pop or mov jbe repz inc push ret mov xchg push lds (bad) xchg pushf cmpsb mov pushf pushf (bad) hlt mov stos mov xor lods lods lods add das sub jns aad int jle out push push mov lods lods cmp jg div (bad) fbstp and loop pushf popf popf adc cmp xor jp jp out add dec dec and test (bad) lahf inc push negb in add push pop (bad) mov jns cmp sub sub in mov stos arpl ds adc dec dec dec dec les ja and mov mov or test mov divb cwtl jo xor clc andb cld test pop mov xchg (bad) mov stos or into sub sub mov mov lret iret (bad) or enter adc xchg push (bad) xlat femms (bad) jno add push sahf orl popf orb pop sbb sbb (bad) (bad) push push pop in in pushf lea push inc push inc dec pop pop dec pop arpl jp push arpl arpl push inc inc jnp arpl pushf popf popf arpl arpl out out icebp icebp mov pop icebp rclb pop js xchg sbb xor cmp jle jecxz ja jnp ds out out jbe jg std cld loopne xchg aam rcl mov mov fdivrp addr16 ret (bad) outsb outsl imul repz aaa ss (bad) hlt hlt cmpsb stos cmp movsb inc push movq ds sbb pop xor xor pop pop pop cmp push xlat cwtl cltd xor ret (bad) movsl movsb adc cltd cltd cltd pushf xchg xchg push sbb repz jo push push rcr mov add sub sub mov xchg xchg aaa cmp in loopne lock inc inc inc loop sub add (bad) (bad) repz in leave (bad) aad (bad) (bad) inc inc inc pop adc mov mov pop lods aad test jmp and xchg xchg sub fcomps popf xor test cmp lea xor test int jns or mov insl or adc or mov pop or add or mov dec or jo xor cld mov cmp test xor fcompl js test (bad) les jo mov shll xor pop xchg pusha and jmp insb sub and sbb adc or push push adc xor ret (bad) out cmp push pop sysret daa and jg out out mov clc test scas mov insl cmp fcmovnu xchg lds xchg adc sub or pop or or xor xor cmp andl lcall mov insb lahf ficomp mov rcl sarl aam call ja add or dec dec dec sti sti sti sti sub sub fcmovu aam adc movsb out mov neg rcl adc sub leave fstps mov lock cmp scas sub sub test jecxz xchg xchg jb push pop inc inc stc div inc dec xchg sahf mov cltd mov shll sub mov repz mov in out add inc dec inc data16 pop pop pop jge divl push inc rcll rcl jo cmpsl xor dec inc roll xor cmp rcr mov int insl das (bad) push push push call sbb push xor sbb dec outsb push cmp out leave mov jmp dec dec dec or add mov out mov add cmp sub sub div (bad) or adc add mov in repz sti ret ret ret ret ljmp loopne (bad) out int3 int3 and sbb adc inc mov imul ret xchg mov rcl repnz arpl xchg (bad) cmpsb mov sahf decl inc add sbb add or mov inc push inc inc adc add rcl fstp addl jmp lcall (bad) aad (bad) in out lock jge mov enter adc scas in rcl push push imul les aad pop push int sbb (bad) icebp jo popf xchg xor sti rcrb sbb mov icebp cmc movsl data16 pop jp or xlat mov jmp addl pop xor dec sbb push scas lods pop fcomps or adc add push stos mov leave leave lahf adc inc dec ja daa daa sub (bad) pop popf jmp inc addl bound ss addl lods mov cmpsb stos sub xor mov mov movsb sub icebp push push icebp push push push int enter addr16 repz popf bound dec inc push inc push inc mov lret sub outsl in das fcompl pop pop aad xchg fsub les pop pop sbb push jno xor pop lods xchg mov loop (bad) loop sar ffree leave int aas pop pop sbb out mov dec dec rorl fsubrl repz mov inc add cmp test mov pop inc dec pop jns insl sbb inc loope clc jno add pop add outsb data16 adc cld div imulb mov cmp xor adc mov aam mov (bad) int3 in icebp inc inc dec push sbb pop movsl nop (bad) fisubrl xchg xchg pushf popf adc adc lret into ljmp xor cs shr adc rcl (bad) orl mov jmp out sahf sahf mov lock stc insl insl push cli add repz cmp add dec inc add cmpsb cmpsl mov and iret cltd icebp pop pop pop inc mov inc dec pop pop adc xchg outsb outsl xchg xchg imul jo cwtl lea pop cld lods and rolb jae jae and mov add cltd sbb jb fistp pop addl cmpsb rcl and das cmpsb cmpsb (bad) aaa mov inc inc into mov ret idivl fist repz (bad) ss fdivrl mov or fdivs arpl out aad xchg sbb lods sub jge adc test enter mov push mov rcl mov adc mov sub or inc data16 clc xchg popa imul hlt lock jno (bad) mov or sbb dec dec dec dec pop sub push pop dec or cmp add out cli cli out mov (bad) xchg xchg pushw mov mov das das js test inc mov push xchg aam pop jge adc add or dec outsb outsb pop call loope in mov sahf (bad) bound test fcmovnu add jmp adc fwait scas xchg (bad) cmp test nop pushf cltd popa jmp dec mov mov in mov mov sub and pop insl xchg insl js outsb outsb ss faddl xchg aam leave leave les jmp xchg movsl push cmp jle jg repz in aam mov mov mov lret pop aas popa cmp lock popa loop push push popf loopne jmp and cmp and fist out aaa lock push ja aaa xor mov data16 sbb adc sbb in dec mov push icebp ja push push and daa jg jnp xchg xchg xchg stos stos scas xchg sub sbb push aam rorb test mov ljmp stos stos scas int leave popf enter mov cwtl xchg xchg lahf ja ds repnz daa and repz iret pushf pushf rol stos (bad) lock pop sbb dec push call jmp lcall add add add adc push xor add mov in nop cmp dec and sub inc sub add push pop arpl jp or and push inc sub add xchg lret loop ret (bad) les loopne cmpsb lret push sbb adc push rorl mov idiv mov pusha add and jae aaa pop pop push push xchg push sbb cmp jmp sahf icebp out imul ljmp fild movsl aad cld clc fdivrp inc mov adc xor inc inc sbb push cmp pop pop adc pop cmp sbb mov push push adc movsl xchg icebp xchg pop leave fsubs es repz addr16 inc inc daa pop adc pushf cwtl mov adc mov jge,pn repz rcl xor loop lds ret int inc inc aas xor pop pop pop xor mul jmp pop lahf pushf lock ss adc sbb push adc js inc and cmp iret stc jmp sti xlat cmc fwait mov icebp mov mov lret out (bad) out push push adc daa push inc cmp (bad) jmp xchg icebp cmc mov jp mov fdivrs cmp or sbb (bad) (bad) lret loope call scas mov sub or sbb pop adc sbb add or daa sub fcmovb (bad) push xor xchg push inc inc cli mov loopne (bad) aaa adc adc jnp mov push dec dec push push lods lods lcall xchg in (bad) mov push push popa (bad) mov repnz es inc (bad) cmpsb ljmp pop add decl out sub xor or jl imul pop dec pop dec or push push push outsl loope jmp mov in in stos out in in jg inc inc popf jmp add sbb sbb scas mov sbb mov imul (bad) int3 (bad) cmc in in in insl dec dec dec imul push push adc arpl lcall mov out loope aad xchg xchg ret fstp mov xchg fisttp mov xchg xchg cwtl cwtl mov adc (bad) into test enter rcr iret lret iret int3 jmp mov jnp pop or or or and or sub and sub stos vpor jno add daa inc push push pop jge xor daa es add scas into (bad) mov xchg (bad) popl punpckhbw push outsb outsb pop pop decl out mov repz int3 int3 mov inc popa or dec inc popa imul xchg mov sti out xchg xlat xlat cmc xchg or and or inc inc data16 cmp push es or xorps pop push xor or dec dec pop or and xor loopne stos stos lret scas pop cmpsb (bad) and ss pop push or js push aas xchg ret ret aad cmpsl sub mov loop lods lods fwait fwait mov (bad) mov dec dec jg outsl pop pop push push imul pop jbe sbb enter inc inc fldt stos stos ds xchg xchg and aaa add sub lock xchg mov push ja sbb adc and or lahf fwait inc ja sbb sub adc adc push pop sub jp cs test cltd cltd lds push ss aas aas inc sub cs and jb xchg xchg int3 addr16 loopne pop push jecxz mov loopne data16 jo mov cli loop aam dec mov jecxz sarb add mov mov or scas scas scas mov mov movsb movsb stos test leave out mov call mov and cmc mov mov pop addr16 cmp pop movsl jmp ljmp pop xor sub out rolb icebp mov push mov sbb fcoms sbb rcr sub popa ror iret gs sbb xor xor sub and xor movsl gs imul nop pushf pushf xchg imul ret sub xor xor std std frstor push xor xor addr16 add add data16 fs out out out js pop push push jle addl sahf (bad) mov test lret addl mov je mov push push cmp or add cmp nopl cmp or test fstp lahf rcl sti lret imul and jne adc inc inc push push inc inc add cs xchg add add mov (bad) fcmovu (bad) inc dec dec or dec or arpl push jl in call jno dec lret imul dec push es add add push push inc inc add cs cmc stos stos movsb sbb jmp sub xchg enter push ret mov mov jb dec imul inc inc daa cmpsb stos sbb cs jns,pn pop pop add clts push pop mov and push or jbe or or dec cmpsl icebp hlt in push popa jns sbb or or aaa fwait lahf xchg repnz (bad) in jmp out loope pusha or addr16 push push popa hlt fmul iret fisttpl cmpsl out out ds push mov (bad) aaa xor sti sti int push movsb mov jno ret negb data16 push pop jae adc and mov addb adc add sub pop pop push mov mov js jl ja add push mov insb push out xor cmp data16 sbb pop pop push pop pop mov or and xor sbb or in pushf je sbb insb pop adc add adc push push push mov into xchg dec adc push xor mov mov cmp cmp cmp in cld cmp fnop push push push and daa inc sbb sbb pop int movsb scas scas (bad) sub cs inc xor xor stos (bad) clc pusha push push inc jg (bad) jge or push repz aam in cmpsl cmpsl mov mov cmpsl xchg mov pusha jbe jp jge jmp add or pop dec inc pusha jno jae or jg mov (bad) repnz (bad) mov push mov nopl repz or (bad) cmp leave sti stc mov and cmp and jns cld cld js je jae mov rol mov nop adc inc adc adc inc push sbb test push or lahf lahf rol or push adc fildll jecxz icebp (bad) (bad) lcall xlat lcall loopne aam add xchg (bad) cltd orl das sub addl xchg cmp aas aas cmp bound cmpsl cmpl cwtl pop inc inc inc and and outsl imul dec pop pop pop dec sbbb (bad) repnz mov pop mov (bad) mov add or (bad) in test imul mov jmp (bad) cs and aas adc xor dec dec outsb pop pop test in les dec lea popf mov cmp xor inc jb (bad) mov push xchg fsubs bound mov (bad) fildl inc inc push mov mov (bad) out out adc sbb jmp mov mov fidivl aaa stos mov mov movsb mov jne ja xor adc cmp aad xchg xchg into out out sar imul push push mov lea jb inc sbb sub adc sub sub jp mov insb jl movsl movsl mov mov enter (bad) hlt inc dec pop inc sub pop pop push cmp sti add and (bad) (bad) dec ja inc dec pop cmp addr16 ds push jo inc push dec mov sbb vpshaw dec dec push push pop push pop dec dec je outsl out inc dec js dec inc repz shl loop fnclex jecxz loop (bad) mov stos stos mov (bad) (bad) call aad repz xchg sahf xchg sahf lcall into ds aas xor out movsl stos mov cmp daa xor xchg xchg rol push jle jecxz jecxz xchg aad xchg (bad) cmpsb stos mov loop rclb xor jo ja ja jnp cmp cmp outsl jge aad sbb adc sbb mov mov xor xor inc gs and inc add sub sbb sbb push cmp addr16 adc push cmp shl neg mov xchg mov shll mov xchg mov xchg fmull aaa push push and (bad) (bad) clc popf in mov jmp jmp lock or jmp rol js jmp (bad) aad cs mov (bad) (bad) faddp sub jl push lock scas mov leave aad (bad) lahf out std mov sarb popf pop pop les push fs jns lahf adc or sti pause std cltd mov push jnp dec adc sbb pop pop pop pop dec test icebp lock and inc dec inc push stos ror (bad) adc xchg icebp ljmp inc das das pop pop push push push inc xchg push mul in mov out cld adc jge adc in movsb rol mov fwait fwait ljmp test pushf out out loope add jnp mov int in in in mov loop xchg icebp clc icebp jecxz gs fidivr push push pop loopne xchg jno das inc push fnop inc inc xor movsl stos jp pusha enter or stos iret iret stos scas out or outsb outsb or jmp mov stos mov jbe jle cmp pop push es inc sub imul push jg div adcl in in orb xor push push aas xor int or push bound cmp xor in jmp mov ret ret int dec dec xchg fwait and arpl dec dec and dec dec and pop pop es inc xor push push aas aas push push arpl push bound push arpl (bad) pushl mov mov je lret popa pusha sbb sub jp push cmp xor (bad) cmovge push and das sbb arpl popa pusha hlt cmc fstp (bad) and fistpll mov xchg sbb arpl jmp pop lahf inc dec out push mov in add xor inc hlt std inc cmp repz fldenv pop or sti or cltd repz pop mov dec cmpsl inc sahf repz jne and push cld xchg xrelease out add scas and cli xchg nop pause lods mov and (bad) (bad) mov jecxz loopne and push mov and fwait add mov xor jb xor xor cmp mov jl mov cmp nop fs icebp rclb movsl repz inc mov add sub test xchg push jbe xchg and pop stos repz inc and fdiv xchg and pop sub repz outsl mov and testb push mov xchg mov dec dec xor aad dec push lret sahf xchg stc xchg or mov jmp loop out repz jle mov xlat and dec jmp into dec sbb shlb mov mov fldenv adc repz inc or and sub xchg cwtl jp icebp and adcl repz pop mov aam mulb jo (bad) repz pop mull lahf jmp faddp (bad) rep loopne inc mov clc and xchg (bad) aam jecxz clc inc shl and cmp icebp outsb mov and lret repz sub bsf fs sahf xor and gs imul xor push and lret mov sbb pushf mov aaa cmp mov int lret xor out or jp jo pop pop and fistpll fwait imul js dec mov (bad) mov shll dec and (bad) test or aad inc and sub jge mov mov and adc sub and mov sub and dec push pop repz pusha fs jecxz pop repz cld int or test sub push sub and add dec repz pop pop jl jne and idiv inc repz cmp and pop xchg inc repz aas adc mov xor outsl int3 cmpsb rcr dec daa and and sbb jbe push fs and shrl (bad) mov mov ret push repz stos ja sub cs xor add or cmp lcall mov ret cltd xchg sbb or cmp add ds and and mov nop pop xor sti sub cmpsl and outsb lods pop sbb inc bound repz jne and cmpsb cld sub xchg sahf inc add lret jbe fs xchg sub mov mov jbe inc cmpl ret push jecxz push mov and out jmp push pop mov jno movsb sbb aaa repz ljmp adc repz or and cltd fs add xor addr16 add and fnstenv mov into cld nop mov out fldl inc ja push dec push inc into out mov test push dec pop pushf lock ljmp lret jo push and outsb and sub jns arpl jle jle imul outsl das outsl cmp dec dec je mov mov cmp push inc pop dec push inc pop dec or push inc or dec add dec add dec or imul into mov and push js dec inc pop push add lcall pop pop push sbb add dec dec push imul jge js jmp shrl sti ret ret fistl lret cwtl xchg rcl jecxz dec ds push push push pop push imul sti div lcall (bad) (bad) cs xor sar push push push adc xchg mov adc add adc adc (bad) decb xor lahf mov ror mov inc inc jb jae mov insb lods lea hlt or push xlat nop pushf sbb mov jbe mov iret loope fcomp jl jg pop pop pop nop xchg mov imul mov xor jecxz (bad) bnd jl jnp jnp out inc dec inc push push ljmp jg es pop leave rclb ret (bad) int sbb lds xor leave xchg imul add movsb jae movsl stos scas and movsl cmp cmp cmpsl sub push test in adc cmp sub test rorl cmc data16 (bad) xor sbb pushf jl inc (bad) and pop jns (bad) shll adc sub or arpl xor xchg sarl lahf dec mov jne das push ret add fwait cmp push and sub scas loop clc sbb sub sub cmpsl adc movsb stc les pop addr16 jb mov out iret cvtdq2ps jb and or bnd pop ds add or js xchg ficoml mov aas mov in inc adc adc adc adc adc adc adc cmpb mov pop push out rorl leave pop xor mov push xor leave xchg xchg loopne cs icebp rclb or and insl push adc adc mov movl sub sub xchg adc add fdecstp mov aaa mov mov and insl sub lock aam inc lcall sbb (bad) (bad) leave in into or push in xlat out or dec sub in sub pop lods repz sbb ficoml out jge in push push insl dec jbe cmp cmpsb subl js cmp psrld imul call stos push imul dec or dec les mov (bad) fcmovbe leave js jae push push imul push jae lahf mov mov dec and mov (bad) xchg dec out insb lret out or xor pop push mov test loope scas and fstps movl sbb loop or mov mov enter jp push repnz sahf push (bad) dec dec xchg xor out out out ja xor xor xor cmp mov test pushf popf popf arpl pushf popf popf arpl nop xchg xchg xchg xchg mov (bad) fcmovu (bad) clc imul icebp icebp icebp mov or insb insb insb in hlt hlt hlt hlt mov sub daa pop femms push (bad) (bad) (bad) setg mov mov dec dec push push xchg iret xlat xlat xlat cmovne pop pop pop lods lods test add sbb cmp sub sub and insl insl insl dec dec dec dec or sbb jb jbe xchg fwait (bad) lcall xor cmp incl mov jmp mov cld mov scas out movsb movsb jmp movsl movsl xchg xchg mov mov xchg nop add add sbb pop pop pop pop dec inc dec dec addr16 pop xor leave jecxz daa and sub icebp repz cld xor shrl lock (bad) scas jmp es lods pop mov sub daa fsubs fdivrs xchg xchg xchg clc push sbb jg aaa cmc or test or sbb xchg imul push sbb into lret mov sbb xchg rcl addl and scas mov mov and sub cmpsb lcall sbb pusha (bad) jge mov lods call addr16 pop call xchg cmc das shlb aam popf rcll push data16 cwtl bound xor mov xor mov sbb out cmp sbb jns pop dec dec push repnz jmp xchg dec mov test inc inc dec je hlt cld repnz jg sub xor add add (bad) (bad) out ljmp rorl or pop xor into iret lret fistpll sbb pop add xchg scas mov xor xor pop push and sbb push pop inc cmp leave int mov test pop call das cs rdtsc jno jns fnstenv add mov pop mov cmc hlt clc loopne and cmp popf jnp dec je xor push subb pop js sbb aad mov aam in dec inc jae pop sub pop sbb repz mov insb xchg leave das sarb or cmp jecxz (bad) mov bound mov sbb jl push gs cmp jne sbb mov mov dec dec sbb pop pop pop push inc inc inc or pop popa cmp xor js jno jno and and push push push sbb push push push add pop pop add aam xchg rcl jbe add add mov rcl test sahf enter (bad) les test (bad) lahf sbb (bad) mov push push in jmp rol jb jae jle imul and hlt cmc (bad) div lahf lahf icebp icebp xchg xchg rcl mov mov stc xchg xchg icebp icebp sahf sahf sahf sahf sub or adc and sbb mov sahf sahf lahf lahf (bad) mov (bad) scas scas iret iret mov xchg div lcall inc xor pop pop jg xor pop pop cmp dec dec and das pop pop sub dec dec and push push jg pop pop cmp push push jns dec pop add sbb sbb mov int3 leave icebp fnstenv mov fnsave xchg fcmovnu mov lods test mov xchg xchg rol mov aam mov (bad) cli test mov (bad) rcrl add jae inc inc dec push movhps and push push and pop rcl loopne aam aad aam test xor (bad) (bad) out out (bad) lahf jns cmp adc inc inc inc inc or insb insb or inc popa and pop pop and test out out mov add and adc and adc es mov addb (bad) mov mov rcr (bad) enter mov call in (bad) not (bad) cltd xchg adc pop mov out out sbb out lea cmp push push sub shr mov sub cmp daa mov add cmp sahf lret dec dec adc (bad) (bad) frndint hlt in add lea push push jae push pop jbe outsl outsl add and in call jb or jle es daa dec cmp and add addr16 push cmp pop cmp add pop sub sub dec and daa push and popa adc jp gs jp push push inc or cwtl cld cltd testl loop mov mov mov mov mov loope notb scas cld mov mov xchg loopne test mov mov int3 in lcall addl inc xor pop sub inc pop jne jle arpl adc dec insb adc sbb sbb jg jp push aaa dec sbb jnp sub cmp or or or or (bad) or adc bound mov mov lcall mov ret sub sbb and sub xchg js pop jl sub inc daa inc xor pop push xor xor ss imul push pop sub xor push xor and scas cmpsl cmpsb in (bad) (bad) clc mov ret stos out cmc nop cld fdivl call stos les iret cmpsb out movsl mov mov xchg not ljmp adc jp push adc pop pop inc pop imul add sbb dec or dec adc dec inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor add add call or lea sti repz ljmp xchg mov xlat ror adcl dec inc cmp xor jnp cmp sti bound mov add cld shl mov ret jne xor (bad) jge inc and dec jae xchg subl mov ds cmp pop add cwtl pop rorl lahf mov sub xor pop popa das lea test (bad) cmp arpl stos sub sbb out mov mull pop jne add cmp js inc adc loop std cld sarb sub es mov iret cmp leave mov jns repnz lahf mov imul push in push add js cmp into add mov in cmp and cmp push lahf clc add mov and (bad) pop push xor data16 xchg cmp push mov mov add sarb lods lods xor cld add sub xchg jl ss jne sub cmpsb xor in in sbb pushf das sbb pop lods inc insb fucomip cld or xor xchg int xlat mov je (bad) lcall and mov (bad) movsl fcmovnbe scas and sub xchg incb imul mov (bad) sub pop xor les mov mov fwait ret mov fs ljmp aaa out dec imull xor jmp and xchg add jecxz cvtpi2ps hlt jg xchg mov bound jbe imul dec (bad) xor mov jb mov sbb imul pushf ja in fcom add outsl ret test add mov call fcmovnbe loop (bad) outsl cs out push jecxz pop loope ljmp add or repz add add add aas inc push gs gs imul inc inc add repz add add add aas inc push bound pop popa insb insb outsl arpl je inc inc add add add repz add add add aas inc push aas and popa jae arpl insb je je imul inc push aas and push jb imul fs inc push aas and insb insb outsl arpl outsl jb inc inc xor imul je inc add add sbb inc add add add aas inc push aas and popa jb gs bound inc push aas and popa jae arpl je gs insl bound inc inc push aas and push jb imul fs inc inc jae fs inc inc inc fs imul inc inc add add repz add add add aas inc push aas and jne jo outsb arpl inc jae fs inc add add add sbb inc add add add aas inc push aas and jne pop jo je inc push aas and jae jb popa insl bound pop imul inc inc push aas and push jb imul fs inc inc jae fs inc inc jae fs inc add add repz add add add aas inc push aas and je jo inc inc inc jae fs inc add repz add add add aas inc push arpl gs bound gs jae fs inc add add sbb inc add add add aas inc push popaw arpl inc insb outsl arpl gs jae fs inc add sbb inc add add add aas inc push aas and popa jae arpl je imul popa insl inc inc push aas and push jb imul fs inc push aas and insb insb outsl arpl outsl jb inc inc xor jae fs inc add repz add add add aas inc push aas and popa jae arpl je imul inc push aas and push jb imul fs inc push aas and insb insb outsl arpl outsl jb inc inc xor jae fs inc add add sbb inc add add add aas inc push aas and popa jae arpl outsl jae jb popa insl inc inc push aas and push jb imul fs inc inc jae fs inc add sbb inc add add add aas inc push aas and popa jae arpl jae jb popa insl inc inc push aas and push jb imul fs inc inc jae fs inc add add repz add add add aas inc push aas and popa jae arpl je gs insl bound inc inc push aas and push jb imul fs inc inc jae fs inc add repz add add add aas inc push jae pop arpl outsb je fs bound gs fs imul inc inc add sbb inc add add add aas inc push aas and jo arpl outsb je fs imul inc push inc push aas and popa jae arpl insb je je imul inc push aas and push jb imul fs inc push aas and insb insb outsl arpl outsl jb inc inc xor imul je inc push dec outsl pop dec jo aas and popa jae arpl popa insb je je imul popa insl inc inc push aas and push jb imul fs inc push aas and insb insb outsl arpl outsl jb inc inc xor xor inc inc fs imul inc inc add repz add add add aas inc push aas and dec outsl jae inc dec inc jae fs inc add repz add add add aas inc push imul gs jae fs inc add sbb inc add add add aas inc push aas and popa jae arpl outsl jae inc push aas and push jb imul fs inc inc jae fs inc add add repz add add add aas inc push aas and popa jae arpl jae jb popa insl inc inc push aas and push jb imul fs inc inc jae fs inc add add add add repz add add add aas inc push aas and popa jae pop data16 insl pop insl gs bound inc push aas and push pop jo jb push aas and popa jae arpl insb je je imul inc push aas and push jb imul fs inc push aas and insb insb outsl arpl outsl jb inc inc xor imul je inc inc bound jae inc inc and inc inc inc bound jae inc inc add add add sbb inc add add add aas inc push aas and popa jae arpl popa insb je je imul popa insl inc inc push aas and push jb imul fs inc push aas and insb insb outsl arpl outsl jb inc inc xor imul je inc add add sbb inc add add add aas inc push jb outsb je insl gs gs outsl jb jae fs inc add repz add add add aas inc push popaw imul jae bound gs jae fs inc add sbb inc add add add aas inc push jae jae gs pop gs outsl jb jae fs inc add sbb inc add add add aas inc push bound pop arpl je jae fs inc add aam inc add repz add add add aas inc push gs gs imul jae inc inc add add repz add add add aas inc push arpl gs bound gs gs gs imul popa imul inc inc add repz add add add aas inc push aas and insb outsl outsb gs imul and jb outsl jb imul push arpl inc push bound pop outsw jb popa je jae jb outsb addr16 imul je inc inc gs gs imul popa imul inc inc inc gs gs imul popa imul inc inc add repz add add add aas inc push aas and jb outsl jb imul push arpl inc push bound pop outsw jb popa je jae jb outsb addr16 imul je inc inc gs gs imul popa imul inc inc add add sbb inc add add add aas inc push bound pop outsw jb popa je jae jb outsb addr16 imul je inc add add sbb inc add add add aas inc push outsw jb popa je gs outsl jb imul je inc add repz add add add aas inc push bound pop insb gs arpl pop arpl je bound jae inc inc add add cld sub sbb inc add add add dec add sbb inc add add add aas inc push aas and popa jae arpl je imul and push jb imul fs inc push aas and insb insb outsl arpl outsl jb inc inc xor jae fs inc add add repz add add add push inc inc add add sbb inc add add add dec add sbb inc add add add dec add add add sbb inc add add add aas inc push aas and insb outsl outsb gs imul and jb outsl jb imul push arpl inc push bound pop insb gs arpl pop arpl je bound jae inc inc inc gs gs imul popa imul inc inc inc gs gs imul popa imul inc inc add add add repz add add add aas inc push aas and jb outsl jb imul push arpl inc push bound pop insb gs arpl pop arpl je bound jae inc inc inc gs gs imul popa imul inc inc add add sbb inc add add add pop dec add add add repz add add add aas inc push aas and jne bound inc push aas and jo pop fs insb outsl popa je and inc inc inc dec pop inc bound imul jae insl jne je jo arpl imul jae inc inc and xor jne je jo arpl imul jae inc inc add repz add add add dec add sbb inc add add add dec add sbb inc add add add aas inc push aas and insb outsl outsb gs imul and jb outsl jb imul push arpl inc push outsl insl popa imul jb jae fs inc inc gs gs imul popa imul inc inc inc gs gs imul popa imul inc inc add add repz add add add aas inc push aas and jb outsl jb imul push arpl inc push outsl insl popa imul jb jae fs inc inc gs gs imul popa imul inc inc add sbb inc add add add aas inc push outsl insl popa imul jb jae fs inc add sbb inc add add add aas inc push insb outsl imul jb jae fs inc add add add add add repz add add add aas inc push aas and insb outsl outsb gs imul and jb outsl jb imul push arpl inc push je outsl pop data16 popa jb jae imul je inc inc gs gs imul popa imul inc inc inc gs gs imul popa imul inc inc add add add sbb inc add add add aas inc push aas and jb outsl jb imul push arpl inc push je outsl pop data16 popa jb jae imul je inc inc gs gs imul popa imul inc inc add repz add add add aas inc push je outsl pop data16 popa jb jae imul je inc add repz add add add aas inc push aas and insb outsl outsb gs imul and jb outsl jb imul push arpl inc push outsl jbe jb insb outsl ja gs outsl jb jae fs inc inc gs gs imul popa imul inc inc inc gs gs imul popa imul inc inc add repz add add add aas inc push aas and jb outsl jb imul push arpl inc push outsl jbe jb insb outsl ja gs outsl jb jae fs inc inc gs gs imul popa imul inc inc add add sbb inc add add add aas inc push outsl jbe jb insb outsl ja gs outsl jb jae fs inc add add sbb inc add add add aas inc push aas and insb outsl outsb gs imul and jb outsl jb imul push arpl inc push je outsl pop insl popa outsb jns popa jb jae imul je inc inc gs gs imul popa imul inc inc inc gs gs imul popa imul inc inc add add add repz add add add aas inc push aas and jb outsl jb imul push arpl inc push je outsl pop insl popa outsb jns popa jb jae imul je inc inc gs gs imul popa imul inc inc add add sbb inc add add add aas inc push je outsl pop insl popa outsb jns popa jb jae imul je inc add add fs inc add add add repz add add add aas inc push aas and insb outsl outsb gs imul and jb outsl jb imul push arpl inc push gs insb jne je outsl outsb pop gs outsl jb insl popa je inc bound jae inc inc inc gs gs imul popa imul inc inc inc gs gs imul popa imul inc inc sbb inc add add add aas inc push aas and jb outsl jb imul push arpl inc push gs insb jne je outsl outsb pop gs outsl jb insl popa je inc bound jae inc inc inc gs gs imul popa imul inc inc add add repz add add add aas inc push gs insb jne je outsl outsb pop gs outsl jb insl popa je inc bound jae inc inc add add repz add add add aas inc push dec outsl pop dec jo aas and popa jae arpl popa insb je je imul popa insl inc inc push aas and push jb imul fs inc push aas and insb insb outsl arpl outsl jb inc inc xor imul je inc add fadds add repz add add add aas inc push aas and insb outsl outsb gs imul and jb outsl jb imul push arpl inc push jb jne imul outsl jb insl popa je inc bound jae inc inc inc gs gs imul popa imul inc inc inc gs gs imul popa imul inc inc add sbb inc add add add aas inc push aas and jb outsl jb imul push arpl inc push jb jne imul outsl jb insl popa je inc bound jae inc inc inc gs gs imul popa imul inc inc add repz add add add aas inc push jb jne imul outsl jb insl popa je inc bound jae inc inc add repz add add add aas inc push aas and insb outsl outsb gs imul and jb outsl jb imul push arpl inc push jb outsb je insl gs gs outsl jb jae fs inc inc gs gs imul popa imul inc inc inc gs gs imul popa imul inc inc add sbb inc add add add aas inc push aas and jb outsl jb imul push arpl inc push jb outsb je insl gs gs outsl jb jae fs inc inc gs gs imul popa imul inc inc add repz add add add aas inc push push outsb arpl arpl fs jns gs jb popa jns imul jo jns inc add repz add add add aas inc push inc jns gs jb popa jns outsl jne arpl jae popa jo jns inc add add sbb inc add add add aas inc push push imul jo jns inc add add repz add add add aas inc push push outsl jne arpl jae popa jo jns inc add jb aas pop 