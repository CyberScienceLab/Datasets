mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push outsl (bad) testl pop dec outsb je addr16 and rcrb xor add jns insb daa push outsl jb add jns incl imul add or push je sub in push lcall pop push xor ds repz fs test push dec bound arpl pop sbb mov shl jae insl sbb and sbb jb popa arpl add lcall pushf int3 pop inc add inc and clc jmp out std nop arpl cwtl lods int3 int3 inc mov mov gs loopne jno add push adc or mov push push or or fs adc pop xchg loopne loope jmp xadd dec dec mov dec dec dec mov lods test dec dec dec movsb mov dec dec xchg nop mov test cmpb dec js in dec dec dec dec je clc hlt dec dec dec dec lock push dec pusha push add mov std fistp jo sub je movzwl mov ss pop ret (bad) in in pop pop push push in in dec dec inc inc lahf int jge mov add push add (bad) mov mov test jne xor pop enter mov mov ret (bad) incl rorb mov mov inc cmp jne mov mov mov push nop mov inc add scas mov mov xchg insb test xchg mov mov mov (bad) or mov mov adc add imulb or cmp pop lock or push mov mov mov mov add rol (bad) fistpl cmp push or push or ret and mov mov push or inc add adc insb fistpl jne aaa sub jne (bad) mov sbbl add pop pop pop push jg push je sti mov xchg cmp jb (bad) fucomi (bad) mov add call ja and mov inc (bad) mov dec ret jmp add mov add pop repnz sub jl mov jnp push sub mov or mov aam or or mov or jmp sbb sti jne sbb aaa mov mov mov push add orb add mov add add and push jg mov mov pushl sarl dec add mov push and push out jae lds rol push lahf sub xlat mov jne icebp push sbb outsb fsts pushf cmpl in pop xchg sub fucomip mov (bad) jo add or lret and mov faddl lds mov push xlat lock in es ja mov add cmp in mov divb cmp jp sub sbb xor loopne xlat push or add loopne jecxz fild sbb cmpsl mov adc jno mov mov or sub cmp adc pop sar hlt outsl mov mov and sbb ret decl loop,pt mov or rcr lds pop cmp jno jge add and mov cmp or or jbe scas adc sti push push cmpl jmp ss pop or jae and shlb je jb inc add aad mov xor jmp sahf nop enter out sub or push or sbb jae mov cmp jae std add jae dec or inc addl and (bad) add dec dec loopne (bad) dec ja clc mov (bad) aas cmpsl inc (bad) or add repnz (bad) xor idivb inc cmpsl jg cmpsl xlat mov push movsb in je mov aas or xor stos scas jl push (bad) pop add jne scas imul and push inc in pop setnp or cli jl add je out ret je cmp inc jle or mov sub push stos mov or pop xor lea adc mov pop fcoms or push out arpl xor data16 ja or imul jne mov cmp mov xchg inc cmpl sub inc popf ss mov loope rorl fdivs cwtl aaa jecxz add cld ss testl sub mov cmp pop push adc pop push test popf adc je imul jo (bad) out or adc jmp push vmread jecxz jl hlt pop sbb or or add push push cld pop pushl mov push cmp arpl adc or fldcw adc push mov sub mov push mov jle hlt inc cmp in mov ret add rcrb (bad) or pop pop pop push adc sub mov ret mov mov jo xchg pop xchg test shlb xchg sbb roll and xor arpl cs or mov imul add mov je bound pusha cmpb mov sbb add fistpl push cmp mov or jg rolb pop test jns add jo,pn add stc add fcmovne or sub hlt mov add sbbb cmp inc inc or fadd jb add or add std push mov cmp (bad) (bad) ljmp sbb add sbb cmp jl (bad) fcomps repnz jb sahf es mov or mov and add jecxz mov sub test cld dec adc adc dec fist je insb or push or push sar fist or xchg or ret incb in push push (bad) xor adc je add cmpsb ret jne sub inc aas mov testb je mov sub cmp dec mov cmp (bad) or push push (bad) mov xor add in jmp ja add add and repz bound inc or andl mov pop xor jmp adc add dec xor dec (bad) mov cmp (bad) add push lea sub cld jg aad sub (bad) sub cmp jge mov lret mov out insb jmp daa xlat add lea and in mov dec push fucomp aad (bad) lds stos clc add std jae lea (bad) xor cmp mov xchg (bad) jp push iret mov add sub cs (bad) aaa adc pop mov enter mov sbb pop mov sbb cmp adc push pop add sub cmp negb jl mov pop mov pop sbb adc (bad) jle adc or inc mov sub adc sbb or pop mov hlt push adc lock mov inc mov pop push jo mov fist mov es push mov cmp pusha decb xchg lods sub add adc repz sbb sbb sub sub xorl cmpl mov mov cld adc or mov (bad) mov sbb fadds pusha pop pop or adc int3 (bad) ljmp or cmpsl fwait or xor sar cmp push jg adc jne fcoms stos sbb ljmp sbb insb lea sbb mov jbe push js lods jg,pn pop mov pop fnsave pop je pop jmp sub push sub sbb pop insb fisttpl jle fistpll jne movsb sub cmpl mov es hlt inc add xor dec (bad) loope sub cmp sub pop daa xchg inc mov and jmp (bad) xchg leave jmp repnz jne jmp inc enter xor pop xlat test orb fwait pop movsb lock repz or je sti clc stos jle aas lock push addr16 push push shrl ret pop or sti mov pop pop imul inc sub shl mov movb pop inc scas (bad) jne clc outsl addl jmp mov fdivl inc (bad) pushf or push push add or pop or jo push or jbe jmp jo xor mov sbb sarl sub mov add arpl sbb pop das jmp inc (bad) arpl ss sbb and popa aam pop pop push push sbb jp adc mov test (bad) jo xor in or ss das lock test jne test ja (bad) or movnti add push add loope push or jb inc xor (bad) jge inc mov or cmp clc rclb out mov mov cmp stos loopne xchg paddsw push jl sbb dec mov adc ret sbb cli xlat call orl jmp mov cmpl cmp (bad) mov push adc or adc sbb and mov mov jg sbbl mov mov icebp add loope add push or lock adc lret adc sbbl notb jl loop cli add mov sub add negl add push in loopne mov push pop ret or mov ficomp fcomp push fmuls ja or mov outsb pop jecxz cmpl iret adc jmp daa add inc lahf add add dec or icebp inc addl dec add sbb sbb cmp and push pop mov pop pop fistpll or js push xchg mov sbb cmp xchg ret push cs jmp add ret subb or and inc jnp pusha push sub incl popa jp cmc adc push lods lcall mov adc add mov out adc xchg ret (bad) mov sub test bound les aam adc mov add adc decb popa lock cmpsb test jle call mov mov xor mov cmp lret inc je fisubrl lock xor sbb enter movsl mov sbb push (bad) mov xor add aaa cmp imul arpl push mov dec hlt cmpl scas pop shrl inc or rol add push cmpsb push push inc sbb pop or xor jg mov adc inc jle movsb fdiv popf jecxz cmp lods mov cmp lahf cwtl add notl fist cmp ja mov mov (bad) aas ds pop mov adc push enter mov push push push xor xchg mov pop jne xor pop mov ret xchg iret call mov lock mov sub sbb ret (bad) fcomip sbb rolb jl cmp jg add mov inc rep jmp mov outsl pop in leave jmp mov jl pop cmp xchg pop adc mov sbb (bad) mov cmp fldln2 dec clc divl je dec js rep xchg mov fwait mov xor lea xor std xor clc mov ds inc mov fldcw movnti pop push sub fist fwait pop testb or fsts dec or es rcr insb or scas fldcw pop inc jbe dec ret aam push int3 adc pop sub dec jle cld add (bad) push fdivl mov fimull sub (bad) (bad) fwait scas adc sbb je mov in xor add mov xchg adc xlat clc or sbb sbb pushl mov cmp mov ja and idivb jb push sbb lock adc push sbb sahf jmp cmp data16 xor mov cmp mov lret mov inc inc and xchg xor mov mov inc inc xchg ja add push shr je mov cmpsb pop push inc dec aam dec fcompl sbb aaa in aaa or jne jmp adc add adc (bad) loop je mov cmp jne push adc add adc outsl pop loopne add jne add cmp cmp jne cltd xlat icebp or jmp add push mov shr or int3 in dec pop cmp shl mov mov out mov cmp jne dec dec inc sarl dec and pushf mov cmpb fcomp fdivrl adc mov (bad) pop aaa in popa adc stos pop daa push shrb cvttps2pi mov push inc test je mov out jae or je or je and je push imul xor dec and clc (bad) pop je,pn jmp or or cmp ja lea mov add push outsb out int or jge jmp inc shr decl mov js pop sub jmp inc inc jmp mov mov (bad) popa jb xchg and mov ja add scas leave pushf add call (bad) cwtl pop xor mov jge mov inc mov mov pop (bad) fistpl inc mov dec jne pop cmp push decb xor fpatan cmpsb mov fwait icebp sti add je adc lea mov adc lea fldt inc into out pop and add je das inc cs adc inc xlat jmp pop xchg xchg push xchg jge mov xor call jmp fstp fldt pusha xor adc out mov jl in inc je adc mov inc sahf enter inc pushf or and and adc xchg (bad) jl mov out sbb xchg sti lock and inc mov mov lock mov stc (bad) xchg sub sub pop jecxz (bad) stc xchg pop add leave sbb mov cmp ficomp call mov bound cmpb (bad) pop mov xlat fadds outsb xor xchg push or push push pushl mov ret inc mov push pop test enter mov (bad) jg push inc push and daa (bad) lret into pop inc test xchg clc js aas sbbl (bad) (bad) (bad) incl (bad) mov addr16 leave repnz bound and cld gs sahf mov sub (bad) popf imul pop js inc mov stos mov cmp or mov xchg test stos pop out sub imul (bad) divl jl xor cmp call (bad) jg inc mov sti jmp stos push inc mov push sbb sarb repnz (bad) (bad) (bad) incl nop fildl daa movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov pop pushf mov (bad) (bad) (bad) jmp repz loope jp iret inc bound ds push cmpsb scas mov (bad) (bad) (bad) call or addl cmp xor in cmp sahf xchg pop cmpsb lock lcall mov mov popa movsb mov and addr16 repz mov addb xchg and and outsb bound xor jmp scas cmpsl xor repz rolb or pop jne push pop and add lods mov and mov bsf movzwl decb cld push push push pushf (bad) mov dec xor push push in (bad) xor movl xor hlt push data16 add mov gs test jg adc out mov jmp push clc pop dec xchg aas or adc (bad) (bad) decl push push inc push inc pop inc outsl jb popa outsb fs inc gs jo imul push dec popa adc and jae push popa insb jne fninit fwait jne jg aad mov adc lcall lods lret xlat mov xor mov inc ljmp or add mov or dec cld jne dec mov xor out cmp repnz mov inc inc fmull shrl mov jle and sbb adc aaa and mov add outsl test or out fsubp add sub movups repnz hlt ret xor and outsb loopne mov or push cld cld incl jl mov xor push shr dec rep pop out inc jnp stc mov mov sub pop mov pop test pop add sbb in cmp je pop mov add jae daa push mov mov push sbb cmp ljmp lods (bad) mov mov mov pop adc cmp xchg aad pop cmp (bad) jb (bad) or and jmp rcrb sub adc roll adc inc fcompl scas push mov and push scas jo cld mov imul mov shll push adc mov inc adc adc clc mov leave push mov jmp add pop (bad) rclb mov mov dec setne call dec mov sub out mov stos pusha js sarb aaa dec icebp in cmp jne jb cmp fmull or jne push dec (bad) xor or inc inc fsubl popa sbb or mov and aaa xor es call mov mov cmp je mov leave jne mov add jle jmp lret loopne pop sbb push add repnz je pop in negb sub vaddsd shrb mov pop cs xchg test aam pop ljmp cs jecxz divb pop jne das mov sbb xchg mov les cmpl inc pop int jno push in or data16 bound stos pop push pop fwait mov in popa lock xor inc ds xchg adc mov dec push cmp sbb add dec jne icebp fucomi sbb sar jmp add sbb jecxz dec cmp jns pop cmp lahf push popf enter xor sbb lcall pop jmp push xor call je push pop add mov jl push hlt xor test outsl add mov mov movl pop xor or and dec mov or dec dec mov (bad) sub adc push clc (bad) sbb xor (bad) sub add and pop xor pop push cmpb jmp in (bad) in push call jns inc mov push pusha push push cmp repnz xor or add sub mov add or jae jnp push lea xlat pop push push and (bad) scas fcompl mov cmpb je or jne movsbl inc inc jmp sbb pop addr16 pop and nop flds push aas loop pusha fsub pop fdivrl adc rorb (bad) push testl dec jne fiadd push mov negl outsb xchg and adc aam adc icebp (bad) sub out push sbb rorb cmp lods xor clc cli out push je or sub mov and push dec mov push insb jb add stos imul enter adc js push jne push (bad) ljmp jns je orl out mov sub adc mov push push mov call jnp rorb cwtl movl loope add test jle aas aaa mov mov and mov mov cmp xchg dec or add mov pop cwtl push mov or add lea mov add aas ret pop repnz addb cmp jne sti sbb sub mov (bad) or mov sbb pushl push dec jne mov (bad) xor or ja inc jmp sbb inc mov lds xchg adc adc mov add cmp and cmp mov cld jmp push cmp setge jl aas sbb cmpsb movl or mov call inc jg add fcomps cwtl test cwtl pop push push push push push mov adc stc es cmp mov mov cmp mov or cmp andl (bad) or cld mov rorb imul lea cmp mov push loope sbb insl insb jmp ret xor mov push xor xchg ret sub divb add (bad) jg je cmp push sub mov cmp pusha add sub jb je jmp cmp outsl lods (bad) sub adc jmp sub (bad) (bad) fisttp je jmp mov jmp mov jmp mov jmp mov jmp push sbb (bad) call mov jmp mov jmp mov jmp mov jmp mov push mov push or or pop (bad) sbb mov jecxz (bad) push jge push xchg lods push insl outsl jp inc cmp inc pop test mov je rolb or mov out push inc sti and inc pusha add cmpsb push sub fdivs xor scas rolb pop xchg movsb fmul cld mov xchg sti (bad) shlb xor scas or sbb cmp cmpsb add or stc pushl add and xlat imul or jg add mov mov jle dec (bad) notb mov add call and push rorl jecxz adc js loopne rorb insb mov sbb dec mov ret xchg js mov repz mov mov add (bad) sbb jg mov movl jecxz lret push fnstsw inc mov aaa mov cmp movb fildll sub jp cmp test push (bad) sbb das loopne fadds dec dec mov dec jne pop push push nop ficompl inc pop sbb std add out add mov loop ret movsb xchg or mov add push mov mov pop cltd idiv add rol mov pop add mov jbe mov mov jne rorb mov push push xchg out out jbe lahf xor sbb inc movsl ljmp adc ja add mov mov sbb pop push cmpsb dec mov cli (bad) inc push cmpw jl cmpl add popl xor stos jmp xchg mov cmc hlt add pop adc daa in cmp xor in stos loopne pop adc cmp or (bad) xor orl add mov sub aas adc xor (bad) ror pop mov call mov jne dec and xchg sub aas mov (bad) loopne push jne cld mov and mov sub add pop jecxz imul push js scas xor or cmp je es mov inc popa mov mov ficoml push jne fldl loopne cmpsl adc xor add lock ret pop push lahf inc das loopne mov mov inc sub inc mov jne movsb pushf mov dec clc dec jl popa mov or push lea push scas sbb push push les push sbb in jb movl ficomp stos dec jne cs and inc jg mov orb sub sbb ret dec mov fldcw jmp jbe xchg adc test or aaa jl (bad) jle push add loopne push fnsave (bad) pop movw and adc mov sub insl cs loopne daa cwtl mov mov das stc pop sub (bad) mov loopne ds cmp or pop fdivr arpl or adc pushf imul loopne (bad) in xchg add xor popa clc fdivrs mov ljmp (bad) jmp lea cmp push or pop sub into mov sbb js jl sbb (bad) mov and fistpl addr16 push jl movsb fadds sbb add cmp call loop or mov jg and or jle andb add xor aas das neg call pop sub jmp push push je fisubl pusha and pop pop or or addr16 in add sarb mov or out shlb push dec repnz mov mov das sti pop add pop pop xor jnp jbe push and pop cld ret fnstcw inc shrb or (bad) xchg sar or pop add aas js ret lahf push je mov pop shrl cld add cmp pop and jp iret fimull mov sub push out popa cmpl (bad) (bad) cmp je cmp mov mov xor scas rorl add hlt movl dec mov cli dec and std lds push sbb mov clc mov mov jmp insb mov decl imul cmp mov ret jmp dec sub add cmp fs fdivrs mov cld push paddd jge and aaa add dec jmp and lahf push mov mov ss add pop cmp xchg dec jne mov or add aas dec jo scas and lea jmp xchg inc ret mov add push orb cmpsl sub (bad) imul cs mov lcall pop mov inc stos xchg or lcall loope jo stos and push pop rcr sbb or sub clc inc das lods hlt stos shr pop add add lahf cmp xor cmc mov adc pop adc dec adc movsb inc es mov aaa pop inc cwtl cmp and ds mov es jl cmp jge sub inc xchg sbb adc (bad) adc shr in jmp and sbbl pop hlt jae lret jl sub lock outsl mov mov add stc add lea pop or movsb push push cli mov repz lahf cltd mov jg mov inc dec jge cmp adc imul xchg gs cmp mov mov lea add or clc mov in add xchg xor mov push mov dec js mov inc jb adc adc sub in pop push faddl xchg fsubl and cmpl aaa pushf dec out and sbb push or or loopne clc pop push jecxz or and (bad) lods jmp xor sbb (bad) arpl cli pop ret aad icebp (bad) pop icebp or adc ret push push test add adc pop imul das loopne mov jbe sub and cmpsl push cmp call jmp adc push pop in aas test push jno xor mov jle shrb ss ffree lock or aaa sbbb ret ss ljmp subl push das int3 mov pop pushl mov and pusha sub add fimull outsl add add sahf inc pop fwait pop xor add jns push je mov adc in xor insl mov cmpsb add pushaw and push cvtps2pd or xchg pop adc out stc jle loopne push inc movsb cmp jge or adc pushf push ret std call cmp push lods add add dec or add and je jle cltd xor adc stos add lods sahf std mov leave xchg fstpl mov dec sbb adc sbb adc aaa hlt scas mov out sahf mov xchg mov xor or or pop std (bad) cmp je cmp je cmp je cmp into cmp je mov shlb dec mov inc adc or adc cmpsb out mov aad push or push mov dec cs adc cmp pop jmp cmp inc scas cmpsb cmp push push mov push lahf cmp arpl or aad cmp call call adcl sahf out push (bad) and cmp pop or push mov and mov or insb jmp lret cmp daa add sti aaa ja xor push dec and pop mov pop lret and (bad) cmp fucomp sub sbb jo data16 ds jmp ret dec sub adc mov cmp push adc clc pop addl or in cs pop outsl cld sbb clc push push add sarl push mov stc into pusha or push mov cmp xor (bad) pusha or pop dec or arpl pusha or mov cmp pusha adc and (bad) call xor inc push fistl jmp and inc in cmp mov push ret jne dec add inc dec cwtl div jle or or jmp aas add sarl jb cmp xor mov fcoml ds adc popa and loopne mov adc pop rorb jo or iret mov cmpsl or insb and mov in inc in test xchg rorl sbb lds dec jne sub testl sub loop (bad) mov adc les lock xor add es ja sti add add (bad) push ljmp adc jo add je cmp call lret or and (bad) xor adc in pop mov push mov push inc ja test cmp sbbl jnp cmp mov jge and (bad) jae or rcrl pop pop ret jo std outsl js push dec aas pushl sbb ja (bad) cwtl mov (bad) push xchg insl pop jno mov add mov mov test jg mov mov jne loope pushf ss lods js add push les dec lock popf sub cmp push push mov inc add (bad) pop push jl call push sbb add pop test jle mov imull dec in in cmp je xchg mov and pop (bad) fnop cmp jne mov cmp jge mov pop lods pusha imul sub test iret add inc loopne push in mov addl jnp fcomps in jge or pop in test in push add in sbb (bad) pusha push add dec shr (bad) ret add movl or adc or (bad) jg fadds ret cmpsl cmpl jle cwtl or xchg inc mov jl inc or jae ficoml mov push dec jne enter cmp adc in cmp add dec test cmp xor lock jne dec std les stos push xor pushf inc xchg xchg pop addb adc dec mov inc rol imul push push push mov incl out and cld pop pop mov push (bad) in sbb pusha cmp stc enter add jne mov jne sbb jl add mov pop jnp jne push push ret test les add or push inc adc or add jbe pop (bad) mov mov or clc inc (bad) jne or ret adc jecxz jmp sbb pop fild out sahf nop mov fnsave cmp popa xchg pop mov jmp push mov movsb or pop test and cmp rcll sub les jbe inc mov cmp js pop push loope sub sbb test lods and cmpb testl out in hlt lods sar jne movb fisubr pushf lea (bad) fdivs popf jno rolb imul roll cli dec jg lret push les xchg and cmp lahf insb (bad) and je xor loop cwtl lea neg cmpsb add cmp test mov fdiv sub dec push push mov push int inc lret test mov mov inc imul gs xor cs insb pop inc gs outsl outsb addr16 popa je stc ret dec popa insl gs daa outsl loopne jg ja sbb fstp pop movb adc addr16 push sbb mov cmp push xor repnz js ret sahf icebp push xor test mov jns aas sub out xchg into pusha addl shrl iret pop cmp push ret push repnz push inc jno dec popa pop sti lcall push lods repz loope jmp js push xor cmpb dec (bad) fdivrs call shrl xor (bad) jnp sbb add sti int3 hlt dec cmpb stos pop cmp jne adc and inc cmpb rcr or int3 sbb add insb xlat nop sbb fs ret inc xor xchg jecxz insb cmc add (bad) mov outsl data16 popa jb pop or popa insb gs aaa add cmp push ja mov mov nop dec add sbb mov sbb xor push inc sbb pop mov inc mov sbb lds jp mov mov sbb icebp mov mov aad scas rorb fstps jge mov push pop fadd mulb push sbb sub or nop inc dec add or mov daa sub xchg mov (bad) ja mov xor or mov fsub mov ja aam call cmp test in jmp mov das enter push cld jne pop fs mov ljmp dec pop mov or or scas out sub data16 cmp or inc js push inc add je sbb jbe notb mov test pop xchg pop sbb or fidiv sbb sbbl lock inc pop adcl mov jle ja xor fadd or jge mov pop add ret xor xchg mov sbb daa dec js adc (bad) mov (bad) or addr16 jno push xlat sub mov pop imul mov addr16 jp std ret decl call inc cmp ja mov inc jmp cmp pop add jnp mov push fcmovb jmp or mov adc sbb mov pop xor and lret add xchg mov jmp pusha add dec pusha rcr xor inc add dec or cmp jb or adc movb and sbb mov dec jbe pop add inc rcrl push rol mov dec test lock std mov lea imul fcmovb push dec andl ja jbe insl fdiv cli (bad) js jg or inc test je or jae cmpl cs adc add pushf out inc cmp jne cwtl and mov loope or mov pop lea jmp dec dec cld mov adc pop pusha mov inc lcall scas sbb or movl and inc inc mov ret mov sbbl sbb fmull jnp xorb sbb or jb inc arpl mov pop inc xchg out scas mov sbb cmp (bad) mov xchg in das cmp mov pop adc testb mov adc adc xchg fnstcw rcr pop xor inc push and sbb pusha inc aam mov dec outsl push sbb (bad) enter jo stc xchg add mov push popf pusha mov imul pop pop iret add add fadds bound and sub and mov outsl inc lods inc xor push ss cmp in pop cmp test jb add xchg mov mov cmc mov cmp jge push pushf (bad) leave mov sub hlt pop push inc std add push out loopne,pt or (bad) xor push out pop mov push lock push lea push push into cltd pushf lock fimull xor mov or xchg je xchg ret mov bound enter jnp daa mov xor mov and and sbb in jae or mov sub push cmp movb stc (bad) jo and dec mov pop inc adc cmp lods data16 xlat adc call mov dec add sub inc jge lods add cmp jbe xchg push add and or sub mov outsb and in mov and (bad) rorb in push push dec test inc mov test loope aas inc cmpl ret loop dec pushf inc or out call push mov sub mov in test jne mov in push jns push mov sti mov lock mov ret mov hlt movsl lret mov (bad) dec jl fs mov test cmp mov sqrtps mov leave jecxz dec push (bad) sarb xor or out mov add and adc (bad) aam add jbe push fnstcw add add push or cltd in out and or sub jo add xor cmp or in in ljmpw gs jb jns pop (bad) popa bound inc push idivl jne inc gs jne je dec outsl je imul jbe outsb popa mov gs outsl inc arpl or imull ret or jb xor (bad) (bad) (bad) mov insl bound outsl js imul ja nop in lock (bad) (bad) push andps outsb dec inc xor je jbe arpl add sbb (bad) xor in and jb adc or in jbe jb add lahf clc setae leave leave hlt lock aas call in fnop xchg xchg xchg xchg aam int3 enter xchg (bad) sarb mov test xchg xchg xchg movsb mov xchg xchg xchg nop mov test xchg xchg je insb push fs pop pop xchg xchg xchg xchg push push dec dec xchg xchg xchg xchg inc inc cmp xchg xchg xchg xchg xor sub xchg (bad) orl leave leave leave enter pop push leave leave leave leave push dec dec inc leave leave leave leave inc cmp xor leave leave leave xor and leave leave leave and adc leave leave leave adc add fs add cmp in in lock call in fnop aam in in int3 enter in sarb mov test in in mov in in mov in jl je in in insb push in pop pop push in in push dec dec inc repnz in cmp in jb jb loopne int3 enter jb rcl jb jb fdivrl jb lods test jb jb mov jb jb mov jb jl je jb jb insb push jb pop pop push jb jb push dec dec inc jb jb inc cmp xor jb jb sub and jb jb sbb adc jb jb or add sbb add test hlt cmp cmp lock call cmp fnop aam jb cmp int3 mov jb sarb mov test dec dec outsb pop mov in dec dec nop mov test in je insb push fs pop pop in in push push dec dec in in inc inc cmp in in xor sub in in and sbb in in adc or xor in add cld test jb jb hlt lock call in fnop jb jb aam int3 enter jb sarb mov test jb jb mov jb xchg nop mov test jb je insb movzwl les rol loop or inc dec adc fisttp inc dec xor push out cmp adc jo push mov pusha nop xor jmp outsl insb mov scas push mov movswl add inc and inc pop dec lods test pop and dec push jge push sub lods mov lods cmovle rcrb int3 out add jle mov rorl adc sbb and sti add pop pop xor (bad) (bad) and hlt mov xchg pop ret or push mov scas cmpsl add and out push add mov pushf or push shrb pop push sbb push push sbb ret cmpsb imul cld ss xorb repnz xorl xchg inc (bad) push popa add rorb add gs xlat (bad) out mov push dec inc inc dec add outsl inc pop push clc jge addr16 dec push inc push dec pop and out mov push push pop sub push inc dec pop dec dec dec xchg mov push dec cs adc leave sbbb js xchg cs js lock dec dec cmp icebp repnz dec dec dec dec cmc div clc dec dec dec dec stc cli sti cld dec dec dec dec std (bad) jmp dec dec dec dec loope jecxz dec dec dec dec in out dec dec dec dec jmp dec dec dec in out out rorb dec dec rcl rcl dec dec dec dec aad xlat fmuls dec dec (bad) fcmovnu dec dec dec dec fstp ffreep dec dec dec dec rol les dec dec (bad) enter dec leave lret dec dec dec dec int iret mov dec dec dec mov mov dec dec dec dec mov mov dec dec dec dec mov dec dec dec mov dec dec dec mov dec dec dec movsl cmpsb cmpsl test je dec test nop sbb dec jl insl ret mov add (bad) (bad) pop daa ret add xchg and add add inc js gs imul inc mov fs adc inc dec gs jo nop je call leave je or dec jne dec dec gs lock outsl jb shrb das adc sub mov dec outsb mov sub ds and scas lret add add inc (bad) scas add test xlat or mov mov ret loope push sbb jo ds outsl pop insl sti lahf or imul nop nop scas nop in push and popa outsb addr16 push adc dec jbe and outsb adc out jno inc inc or xchg dec pop mov pop int3 gs pushf scas pushf adc inc sahf clc jo jbe pop in ja imul pop pop sbb insl jle inc pusha mov dec jb ds cmp loopne (bad) rcl popa add mov cmp mov cld scas ds ret adc (bad) movsbl notb outsl imul pop je or ja jge nop or popa jae fidiv mov inc inc dec dec and ljmp jo and add lock push adc push and in jbe mov sub fs inc ficoml inc sbb arpl dec and andl insb call aam inc (bad) jl push fsubs or push popa sbb fdivs fmuls mov popa fsubl and mov jbe mov push bound inc dec out xchg mov popf sub or jo fsubs mov loope loopne or stos pusha mov repnz dec ja pop test cmp mulb pusha jle add aaa xor pop (bad) inc loopne dec invd jbe inc nop int3 (bad) shrb inc cmp inc and mov inc xchg icebp outsl cmpsb push mov push jg xchg add jne int3 add jb mov test sub aaa and scas adc repz cmp scas cmp inc xor iret adc and xchg mov jnp sbb push loopne sbb mov push insb push add xor xchg adc push and dec cmpsb imul and xchg push fadd rorl push lods outsb arpl cmp fdivs inc test shr jbe lock repz mov add cld cmp fmuls lret mov mov or mov mov pop add mov adc inc andb pop mov push (bad) out scas xor adc or mov mov mov cwtl dec call fucomi mov xchg mov adc pop xlat in adc sub jns add cli sti test inc pop sbb mov adc push cmp ja xor incl sub mov inc inc dec loopne jg repz ja pop add icebp fimull or psubsb addr16 cmp jbe push leave repz je movzbl push push decl mov repnz pop sarb pop mov pop bnd pop lods fldl inc inc ds mov xchg and or in mov (bad) (bad) out and sti je loopne jmp pop imul pop out sbb pop lcall ret push (bad) jo cltd adc xor adc adc scas xor mov cmp push rorb gs arpl push adc test ds push cli push inc sbb mov out add mov adcl pushf insl jo jnp push adc xor mov mov mov inc cmp jl aaa push aam cmpb jbe adc sbb insl cmp sahf notb dec sub clc push sub inc nop lock clc jno js lock sti call icebp fmull sbb sub je rorb mov (bad) jae cmp jl inc mov cli mov rolb push dec imul stc pop or (bad) jae ret sar inc dec jne cmp pop sbb divl mov inc dec cs mov (bad) div dec mov cli cmp ret push push jg (bad) jg pop pop sub sub jbe add mov sub jmp mov dec jne push mov add cmp in adc leave push outsb cltd nop mov pop mov xor (bad) xor adc mov loopne sbb subl inc pop je pop insl xor xchg sub aad sahf cmpsb mov (bad) mov and sub mov (bad) inc mov andl push and fistp mov jmp ret add add sub add rorl (bad) fdivr mov or sbb xor aam lods jg lods push sub rcrl loope dec lock dec pop ffree ffree ffree ffree pop aad addl movsl out add and and sahf jbe jecxz and lods loop das cmp add push mov sbb push xlat and sub (bad) fsubs pop js add roll mov fimull mov lock outsb mov or repz (bad) lcall add mov nop cmpsl mov xchg outsl mov inc push sahf jno sub rolb jbe ja in (bad) popa ds dec mov lods mov xchg pop mov movsb sbb icebp loope enter pop jo add clc and mov inc call and ret lds mov lods imul lcall mov push adcb out adc xchg fimull pop pop pop orl loopne sbb xchg add dec outsb mov btr lcall pop outsl sbb addr16 dec imul inc mov dec ret fldt or pop sbb cltd das sahf icebp bound add inc push mov and adc jmp and rcl and xchg cmp data16 or out cli sbb out cmp ja jo loop orb (bad) (bad) inc ja or push add inc push push sub test add dec mov mov (bad) in jle sbb dec xor mov rolb (bad) jo movsl xchg scas lock push pop pop jmp push dec test (bad) out addb cltd pop leave or adc or xchg push lds xchg push push stos lret shrb add cld loope jmp sbb je aaa mov pop aas test xchg ss lods xor add fild into xor cmpsl jmp addr16 fisttp or call ds sarl mov push dec add jg pop cmp std pop cli pushf sarl (bad) lock xor xor pushf mov loope jo aas pop cmp cmpsl lock xor (bad) mov cmpb pop pop jne,pn push jg (bad) jmp dec in dec out xchg (bad) or cs fidivrl pop cmpsl push mov push scas pop mov enter cmpsb push sbb call loop xor xchg mov clc cld push jnp das cld xor loopne insl clc out inc call hlt sub hlt adc call daa dec sub dec or xor xchg jb adc inc mov nop enter xor imulb mov mov ret das lea push pop mov or xlat mov rorb notl pop sbbb pop pop ret ja fadds cmpsl push xchg mov mov push rolb pop add lret popa and mov fnstenv pop addr16 inc cmp sub push loop adc pushf out in dec and ds pop iret sahf imul call outsb mov xlat xor repz mov mov mov loope addb cli ljmp rolb xorb inc mov mov xchg in (bad) test jmp jl ret inc sub jne scas in add fisubrl xchg mulb addl cs mov pop sub jbe sbb cld popa lds mov mov push add mov jne add or mov mov push rorl roll cmp lds inc xchg or inc mov jne push shll dec iret ja imull add daa fcomps cmc or jbe mov lahf ljmp jne les push test fiaddl cmp inc and and jo lcall minps and sub scas rclb cmp sbb (bad) mov rorb add xlat lea mov cli into (bad) (bad) add in ds jge adc jp cmc mov out or jne out add jns sub xchg sbb jmp mov cmp sub lcall cmp jne cs and mov jmp sarb dec jp cmp mov fsubs ja pop mov mov jge xchg or lret ror movsb xchg rcr popa pop mov rep sbb cmpl add jne pop pop mov insl scas pushf jmp sub cmp clc das icebp ja imul mov add and push pop dec inc xchg ljmp inc cld or repnz clts aaa je ret je xchg ret and mov xchg cmpsb cltd xchg push pop pop jne xchg fimul jmp push mov daa mov push push iret scas mov leave repz xchg ljmp push mov mov or adc dec fsubrs (bad) xor sub fisub and xchg (bad) addb xor jmp cmc xchg fwait out imul movsl fldcw adc mov cmpsl pop outsb adc cmp aas imul jg jb and cmp jne adc cmpl jbe mov xor sbb lock xor inc inc add xchg jmp mov mov in add and cmp call pop js mov pop mov mov ss inc in dec fdivl or jmp rep out and dec mov cwtl pop ds cmp dec leave or out mov add int scas nop bound aas mov or je mov inc std imul dec je dec jl mov mov ret jbe cmp jbe mov in clc adc xchg adc fdivrl movb and test loopne mov inc iret dec jnp cmpsl aaa mov mov xchg ret xor and dec int3 lahf ds add jne add daa (bad) and loope push fadds mov fdivrp jbe lock fdivl addr16 jg xchg inc push (bad) sbb test in ss dec sub ror jp mov pop lcall jp in adc add sbb (bad) clc dec cld lea test fucom jmp dec ffreep xchg add xor xchg pop insl mov insb loopne movlps lea cmp mov lea lock xchg ja push xor dec dec loopne stos or orb jge mov neg jmp or enter xchg and jbe push mov mov xchg xchg mov inc dec mov or jg dec mov stos cmp jne pop pop sbb add dec fild xchg lcall mov cs mov repnz (bad) (bad) addr16 in mov sub cwtl add jge aas into mov mov cs jg cmp adc jb (bad) (bad) mov cmp jge movzwl cmp je sbb jl lea mov sub sub adc (bad) (bad) lods push add ja movswl mov add or lea mov dec repnz cld pushf jmp addl jo dec dec inc dec inc dec lods or xor or (bad) add ret std ret mov aam adc jg cmp jl pop sbb stos je,pt mov stos imul fildll stos jmp inc inc mov loop enclu mov inc stos pop pop inc clc dec ja adc push mov push mov imull jno push dec sbb sub das clc add inc mov mov test insl cmp cli adc mov mov sub or or repz inc sub test jne sbb insb in stos cmpsl or call loope testl dec je inc jne pop mov ret mov bswap xchg repnz or repnz inc cmp icebp rolb fwait test and jle inc je push push cmp (bad) fmuls ja mov sbb jb movsl mov sub inc loop push mov test add inc add and and fucomp idivb and sub inc sub sub cltd cmp push sbb and into mov sub or ds push xor sub xor flds loopne add dec je pop das (bad) jg orb jle mov or movsb cmp idiv lret sub inc push ret or (bad) add movb jg push call je imul or dec fdivrs out pop jo inc fabs push adc pop frndint push pop jge fldt fstsw fwait mov testb je fidivl xor pop fbstp lea mov inc sub ret ja shr and add add shrb jns and jg jge inc cmp pushf or cmpb jb xabort jnp sub dec js decb and pop data16 ja mov jmp mov fcmove push jo je notb cmp ljmp push out xor jge pop push adc mov iret adc test mov fadds test incl ljmp mov cmpsl sbb jae dec add aaa sub mov fildll cli clc xchg push dec or mov sub mov sbb or pushf and jne dec dec dec hlt pop sub cmp and mov inc ljmp enter or push into cmpb divl pop jmp xor je mov iret cmpsl lock pop das add in dec and push setle xor mov f2xm1 fwait cmpb pop das push fldz cmpsb or ds lods or jne inc leave sbb sbb in aam pusha jne inc sbb dec and (bad) cmc fdivrp cmp jne inc push sub pop add jg jne mov xor add ja push mov adc aas jmp in xchg outsb (bad) fstpt xor test xor lods add add mov int cmp mov test or fimull pop (bad) fiaddl jmp aaa mov div lahf inc imul imul add add cli hlt nop jb aaa add cmc sbb sub xor pop aam (bad) push je test test push sub adc fistp sub enter in test scas addr16 mov sub xchg sbb pop lcall aam fldt fstpl fcoms (bad) test mov out xor adc mov ret or (bad) out xchg mov divl cmp adc adc jo test (bad) clc out mov mov jae or cmp xor push and dec dec insb sahf jae in data16 add imul adc fxch dec sarl adc mov and xchg push fstpl fwait (bad) or aad out in outsb lret movsb push popa inc mov lcall cmp hlt mov sbb mov push adc mov push mov cmp push iret int3 jmp iret and mulb aas or enter loopne jp xchg and fldcw xor div lods lret lods dec rclb mov or xor pusha arpl loop sti lcall subl lea lea fmull jge add (bad) xchg fwait orl (bad) jb or jb sti mov push sti insb cli (bad) cmp ja adc fisttp lds pop dec incb jne sub roll cltd idiv imul loope rcll mov stc add pusha ret or add rol std std pop inc xchg addl int3 insb shr in test jg dec cmp push clc adc or inc pop test ds inc out dec mov add cmp jl addl es ret inc and movhps inc lods mov in scas add decw cmpl fs negb add push sub ficompl loopne cmp add sub sub inc pop mov mov mov scas ret (bad) adc cli js mov loopne insb pusha loop cmp jb fnstsw xchg sbb inc jmp fiadd fisub hlt and hlt mov cltd jbe push daa mov mov (bad) xchg test pop popf mov cmp int cld mov icebp add push pop rclb rorb adc mov lock mov inc sbb xchg and idivb cltd out cwtl xor ja mov or fcomps sbb orl jb cltd push movsl sbb (bad) push mov int dec add pop arpl sbb mov pop loopne xor mov mov mov dec sti je fdivrs addb push cmpb and loopne jne pop add add mov lea or xchg repnz jl movb rorb add jecxz lahf lret in push in jge call cmpl nop xchg sbb adc and sbb fidiv cwtl jmp jo inc xchg addr16 push out add xchg push lock mov cmp js xchg push or lret mov jnp jge xchg push mov pop pop dec leave mov fcompl je,pn or mov add lods mov pop insl pop cmpl sub xchg mov cli adc add xor xor adc adcl sbb ret xor sbb test test imul fsub add jmp push in dec ds in ret jbe xchg bswap test lock cltd aaa mov jecxz push inc cmpb and xchg jne push or (bad) cmp lock jns pop add xchg push outsb cmp pusha inc stos js add fimull xchg (bad) sarl push lock pop mov pop lcall and dec push jecxz mov js inc nop in (bad) scas fimul call or jae ljmp inc or lods cmp fs jns add fisttpl mov call or cmp jne mov jecxz lcall cmp xchg mov addb mov loop or fisttp in jbe jle add add or or or mov jns dec fwait push js or lcall in sub jo (bad) jo mov pop or pop jo push and sub test xchg std pop bound das popf dec push cmp pusha out xchg out adc mov hlt dec push mov rcll jmp sbb add mov add movsb pop movsl jbe notb (bad) xor dec add jmp out orb aad push stc xchg call mov mov dec and xchg cld daa mov das in pop lods loope lcall bound mov push jbe jl push add jge mov mov add push jmp dec outsl jg or je or je jmp cmpb dec mov pushf xchg mov pop dec ja mov mov je jne rolb jmp cmp xor jne fnsave add gs pop mov ljmp sub loopne or fimull or or jle mov mov push lea repz inc call nop out add and repnz in xchg gs or jne mov adc ljmp jg cmp adcl push fs xlat jns add sbb xchg ja jns adc or inc jmp and add cltd mov lea adc add lock lret add inc jne ret (bad) repz adc out adc mov out into jge push push loopne sbb popf add and and push imul xchg je inc xchg jmp pop aad popa sbb push test fucomi add xlat mov fnstcw aam jae inc icebp mov (bad) mov or adc jnp inc and inc mov into pusha fsubrs jl into xchg cli cmp inc dec das push dec xchg or xchg cmc jbe adc and dec pop or adc into popf push test push jne or mov xor adc mov inc cmpsl or dec ljmp push adc pop lods dec adc cwtl outsl cmp daa sub je mov (bad) daa mov je dec add mov (bad) cltd (bad) jbe mov out xor jmp mov add pop or ljmp nop data16 add sub jae lock xchg jle push pusha or dec sub js add cli mov fiadd not or sbb mov mov nop inc ret daa push or push dec js mov mov sub and push mov push sub and cld mov inc pop mov (bad) sbb incl jl pop in (bad) cmp jne call push pop lahf mov mov jmp sub call dec je sub sub je jmp mov jmp aaa xchg mov es push inc mov push adc clc jle fadd pop pop bound add aad (bad) mov test add jg mov or pop js mov out call sub bound or lea sub sub cmc cltd jp and test addb jmp xor jo xor aaa sahf test cmp call jne cmp jg mov incl pop cltd xor sub add sahf out jg jg stc imul add cmpl jle adc call and out cld gs lcall fadds loopne stos xor push jmp cmpsl and movl sbb test xchg dec ret popf xchg cmp inc imulb push mov ds loope jne pop xchg mov mov inc sti fadds (bad) fisubrl rorl fwait imul rcl loope neg sbb adc sti in jbe sbb or idiv cmc (bad) xchg lods xchg in test jo dec aaa xor mov sbb ljmp in pop jmp jo bound mov test jmp mov and in call mov mov sahf lret leave (bad) aaa repnz sbb aaa xchg or lock pop push movsb out xchg and push (bad) adc jge add fild fsubrs (bad) push fstps addr16 mov lock mov divb jbe cmpb jle and fs jne mov add or push inc sub ja,pt mov inc sbb ss ja scas xor xor ficoml out cs pop mov shrl jmp (bad) outsb adc cmpb (bad) mov adc fdivr mov mov fsubrl and loop sub fcomps das xor inc repnz out sbb push jl subl sti cmpsb cmpsl xchg or dec lods and push iret fs push hlt aad add repnz fildl stos mov sbbb push repnz lods test je out jmp push pushf mov add shr or pop ficompl je push lahf and ds inc add xor or inc outsb dec cmpsb xchg lret pop xor mov or and inc or add jns add fs test lahf sub and in or ja jne add add add dec lock or and push popf loopne push pop sub pusha jb pop sub mov push les pop aas testb js repnz cltd js and into call xchg les scas ret ficoml in adc mov jno roll dec mov sbbb outsl push cmp ret jne dec pop pop and loopne daa fst fcomps mov fsubrl or fs loopne jle (bad) fstp push je lods cmp push imul aaa add mov sub jb lret inc cmp or xchg pop jno in sbb outsb lea inc test enter mov add (bad) in jmp pop mov xchg repz and push aas push sbb xor les stc dec call jp lods xor movsl cmp rol les pushf or inc rcll loope dec push add lods xlat xchg mov sbb push mov cmp or mov imul cmp mov lods inc lock cmp movl ljmp push mov and pop add shrb testb je (bad) xor in insb xchg int dec call aam inc xor or cmc push or les lods add outsb jge push jl je dec add fcoms add add into or adc and movsb aaa mov lods xchg pop pushf cmpsl jb push ja bound push mov mov inc lods jl add jmp (bad) in out xor xchg cmpsl mov lock ret fwait mov xor dec jbe lock std adcl push push fbstp dec notl xor repnz or in hlt push push fcoms les lea jecxz xor cmovno enter scas pop dec or mov clc loopne (bad) and cmp clc test add jb sub cld imul cmpsb adc aad pop pusha lock je sub je scas ret mov sbb inc lcall cltd jle lahf stos int3 mov sbb sbb lea sub pop lock rcrl jge pop cld jg mov pop call cmovp jo add jle hlt dec add jmp jae add add jmp mov shll sbb add popa nop mov push xor jmp in xchg shlb in jle cld push shrl popa dec xor push sbb push pusha xlat add sub (bad) fildl mov inc add sub imul sti sub test out dec mov and sbb cwtl dec (bad) jne iret out idivb jno aam cmp and inc out add adc jmp sub sbb dec mov xor dec mov inc push repz (bad) or (bad) jo aaa insl mov or clc push shrb sub xchg fsubs icebp dec xor adc xor testb mov iret les cmp and push loopne xchg out mov or and sbb std movb mov aas xchg jbe push xor mov cmpsl jl mov mov imul jne push lea cmp or rorb jae push fcoml add push or cmp xor movl pop inc mov lods and mov rolb dec mov js dec add dec push or inc xor cwtl mov test push sarl popa pop (bad) pusha les push dec enter ljmp inc add dec fdivs sub push sub xchg push sbb fimull mov add test dec adc (bad) pusha nop ja lcall jnp xor adc test in (bad) out mov clc loope pop adc ja incl pop and push cmp cmp out add icebp popf jb clc dec xor mov jl or sti push jg cmp sbb icebp lret jp outsb mov iret push push mov ja or js jo pop pop mov push movsb frstor add test sar lret adc ljmp adc sub jnp rorb cwtl and add inc or mov or mov adc pop loope lret test loopne cld adc sbb add dec sub cmp push add in or rorw jge clc push in repnz outsl push loopne sub dec loopne mov out or mov dec and shrb mov mov rorl and jns push movsl xor adc or add movsl mov pop into int3 in (bad) mov imul pop cmp in push cmp je jmp xor jb je jmp xor cmpsb imul and add push lcall or push push push daa (bad) and loop cld push mov add nop outsb adc mov mov dec dec (bad) pop push mov jnp mov xchg adc sub xchg or cltd inc xchg jae (bad) (bad) adc or repnz cmpsl dec pop adc cwtl sub push loopne xchg mov pop test adc jno insb lar gs cs add mov jae scas pop (bad) or enter rorb add lods aam sbb jno pusha xchg mov mul and outsb les pop sub cwtl mov mov jb xchg add nop pusha nop daa and jb sub adc dec jl rclb adc mov stos std rolb or add push aad and cmp hlt ds xor dec (bad) hlt add mov repnz sahf xor loopne push xchg ret cmp push jp sbb add jecxz lea mov mov outsb nop xchg int mov mov dec xchg and sbb sub xchg dec cmpb sub mov pushf pushf gs jb pop pop mov adc and jl mov mov ds pusha mov shufps adc lods pop inc cwtl cwtl loopne and out pusha push adc push mov and adc xchg ret sbb adc push insb dec and movsb lcall loop and push mov pop sbb add enter push popa sub add popf dec testl sbb add mov mov or int3 mov jl mov jne cmp add xor call pop cmp in hlt test adc jnp les pop sbb ljmp jecxz into mov and push jb fisubr movsb xchg sahf and and pop roll dec xor mov outsb loop xchg inc rorb sub test mov xor rorb mov cmpb mov push pop or add mov (bad) dec jmp dec xorb or and mov sub and lock adc add inc subl add cmp add loopne in and lret jge stos mov (bad) xor cmp daa jge into (bad) xor ja lock inc mov adc clc push inc leave ljmp inc in push (bad) pop jg mov scas das adc sub fildll jl mov and cld lea inc inc jge inc push xchg pop leave dec scas pushf popa mov adc add and xchg cmp mov movsl test jge in fucom jl jne sbb loope cmp push fs scas sub bound mov (bad) and sarb fildll push xchg mov lock cmp cmp or jg xchg or cmp cld or mov test movl inc iret es shrb mov mov rorb push push enter cmp daa push daa outsl or and addr16 cmp fwait add dec sbb inc scas xchg mov mov jae push leave and xchg mov push fstl cmc add lds fild inc jg fcoms push sub insl insl or inc popf xor aad shll aas pop cmp jl xorl xchg mov aas adc pop mov lock stos push mov mov adcb and inc sahf jge dec cld add sbb imul sbb cwtl push ljmp je sub cmpb out loope or cmp adc inc daa shrb mov lods pop mov or je scas push push push in test sub aaa repnz inc fadd ret ret and sub loope orl cmp jbe jp lds outsl aas dec fstl jl mov inc into adc lock daa loopne hlt pop ja and xchg mov xchg push or mov push add xor adc dec push xchg cs sbb sahf hlt sbb stc add stos and hlt xor pop sahf inc test in fdiv pop (bad) hlt mov les jge loope adc jns mov pop or mov div aaa push mov sub jb inc in jb lds stos (bad) sbb pop adc lret jne and cmc sub mov pop jne pop popa repz push clc pop ja pop or xchg sub push sub dec adc (bad) pop adc xor dec mov enter es add push ja cwtl shr mov pop xor xchg mov or testb test adc add sbb or sub subb mov fsubrl or sbb pop loope outsl popa mov data16 cld mov inc inc cmp test inc and inc push loopne sti lock movsl clc imul leave mov or pop jle push dec jne jmp push push (bad) mov es cmp and insl push sub add imul in jle dec jne push lock cltd pushf xchg jbe add je pop jg icebp mov dec lcall cmp (bad) repnz xchg or in jmp hlt cwtl mov testb call sbb in ret (bad) aam sub (bad) fwait adc push push in mov in xchg mov mov sub fsubr insb pop fmul int xchg js popf cld loopne mov and and mov repnz fcomp mov push fldenv mov xchg sarb sub shlb jns mov sub xchg pop int3 mov add and enter add and dec sbb sbbb leave xchg rolb bswap mov fsubr sub cmpsb cld push mov bound sbb leave test cs add out test test sarb cmp movsb insl das fs rcrb out scas insl add fs sarl sbb pop jo pop jmp xchg push push mov and pop iret cmpsb dec call int3 pop inc jecxz xchg push cmp ss popf pop ret in adc and (bad) lock (bad) dec mov lock cmp push enter mov push lcall add or cmp sub mov mov sbb iret sub in mov adc movsl int mov (bad) ss pop mov sbb sbb and pusha mov cmpsb inc repz test xlat jg xor mov (bad) adc sbb iret sub cmp jmp push sbb les loopne xor cmpsl mov or or jb jecxz and les jb gs jo inc pop add inc js stos xchg lock mov jne pop dec ret xchg add out adcb fistpll or (bad) mov mov push or mov outsl sbb inc cmp jne mov and and ss ljmp pop pop push adcl sbbl inc jmp mov sub fnstcw (bad) icebp dec and jmp fsubr enter mov push lods mov sbb mov mov addr16 rolb and sub mov jecxz,pn clc orb or lcall leave pusha cmpsl fild loope adcl lea shll insl test mov sbb or push add into mov movl imul scas sub mov dec sbb cmpsb pop mov xor adc xchg (bad) xlat or cmovae lret lds les mov fsts adc mov cmp push dec mov and imul adc sbb inc or notb pop adc clc sub mov mov jnp ja je push mov push ret xor mov xor seta mov lea call aam sbb mov adc sub shrb add shl mov aam pop lcall ficom dec movsl push cld sete incl xor mov jb out add dec sbb jnp mov sbb incb in mov pop cld add mov js lret pop mull sbb inc incl scas add loopne add inc (bad) cmp pushf cmp or rolb insl cmpsl enter das pushl dec mov xlat inc lock ja dec or dec sbb and inc xor int pop lock mov cmp sbb adc inc push cmp push leave cwtl pop pop in (bad) add shrb aam adcl adc sbb adc lods dec cmp inc les lods add loope mov inc iret jne cld push jne adc insl ret cmp inc repnz (bad) mov xadd jnp aaa xchg cs jge and int3 subl out mov inc jl jmp jecxz xor jbe movsl out mov je sbb adc push push movsb pop cmp imul fdivp mov fsubrl rcl dec iret sarl int3 push loopne (bad) fdivrs and push pusha lods push push movsb popa push pushf fs pop mov mov test cmp cs out jns divl insb js push jo lahf out pop adcb iret repz cmp xor sahf shrb pop fisubr and jmp mov dec add push fnop addr16 pop adc pusha adc pop in cmp or or mov xchg out cmp mov cld push fsubrp popf xor clc push nop inc hlt cs jae dec lock hlt in in cmp in cmpsl loopne jns (bad) or ja pop fsub daa iret leave cmp out add clc int3 (bad) leave cmp aam inc inc les add mov lock leave mov pop pop lods out sub jns iret test movsb push add pop cmp (bad) and daa out in xchg out fcoml in cmp mov iret enter les cmp (bad) movl dec add cmc dec mov sarb lahf or pushf scas sub loopne and sbb push add sub notl fs sbb jnp pop push ja jge sub fdivs lods in test cmp fadds cwtl in inc push nop mov aam (bad) xor nop ret sub xchg xchg xor clc subl jae mov add adc cmp xor jl scas or xor stos inc push jb push js mov decl dec xor lret leave sub or aas cmc push push jge push je mov mov les adc mov loope faddp and ret dec insb leave sub cwtl or (bad) enter dec or and js mul mov xchg add dec sbb adc mov and in cld pop sarl adc jbe xlat dec roll add sarl test push test and cltd in jb repnz sub mov add inc push clc xchg out (bad) or daa stc jl lea outsl pop cmpb cmc sbb movsb repnz je mov pop adc clc les jno pop ret xor loopne adcb jb sbb lea add pop adc fcomps (bad) jb xor mov xchg inc fnop add and and notl mov leave pop std dec fdivl inc lea outsl hlt sub imul xchg fsts cld xchg clc ljmp rcrl (bad) rorb jns push push mov add mov mov add ret push and xor jle add pop mov xchg dec es xchg lret insb in lods xchg dec es hlt mov and pushf fs fnstcw or adc dec xor and les leave and enter xor js rolb aam dec xor repz pop rcrl xor enter aam in leave jl mov xor and pushf in repz nop lods lock ret lea leave mov jp pop jne pop pop add sub inc push addr16 jo daa dec add outsl je mov stc inc fs jne aas adc cmovns insb ja das outsl fs outsb dec jb fnstsw repnz jb inc insl jo inc jb insl push je xor inc repnz push cmp data16 and dec and aas inc jae push imul pop dec add (bad) pop pop pusha rolb cmp inc clc ja fnstenv jne test mov mov xchg lods inc sbb (bad) mov fdivrp and pop icebp inc adc (bad) sbb ja dec jecxz ficoml imul push add and jo (bad) pop add repz add call in mov xchg sub dec pusha clc jnp push xor push fadds adc dec in in mov dec inc cmp cmp hlt and outsb sub je inc pusha mov jnp cld aaa xor inc mov add dec mov mov (bad) fcoms or push es (bad) ds fwait or jmp mov mov pop push inc jb lret add (bad) dec or ds and xlat jge popa adc push push or (bad) int3 xchg push and dec dec ret hlt dec outsl nop mov xor or insb ds xchg or loopne jb sbb pushf or jb adc cmp adc insb movl pop ds inc xor mov outsb sti cmp push divb int (bad) mov outsl inc pop xor jo arpl es xchg pop jg loopne cmp and aam pop dec int3 inc cld ds push mov and xor dec (bad) pop pmulhuw mov aad in add in (bad) lret add das cmpl jb pusha or call jb or es call test loopne jns add in add push loope rcrl fildll sbb cmp in dec xchg test in enter push loop jb push mov fnsave or in loop movl in cmp or jg and dec ret add call clc sub out iret test shl sub dec je sbb or xor movsl mov nop es shll std add loopne aam pcmpgtb mov das dec pop rcl clc mov sbb clc pop dec hlt mov jl hlt sbb lock inc fidiv lock sub inc stc xchg jl xchg in dec push fsubrp mov jns call nop subl ficoml repnz mulb push inc loopne fbstp movsb test dec roll fcmove int3 or lcall adc fdivl js inc shlb into shrb sbb shrb mov or push test mov adc es sub sub inc insb push je clc ret negb (bad) xor adc add dec (bad) iret mul loopne cmpb sbb in ffree add xlat xchg cmpsw leave jp (bad) pop outsl add add mov add outsb loopne mov push setg dec push and dec adc jecxz lahf xchg fsts repnz jge insb jnp mov add xchg and mov and (bad) jp lods xchg or mov mov dec cwtl aad loope pop xchg dec fistpll xlat test xor out adc or inc add cs add iret aam push adc push (bad) nop fisubr jne xor xchg std les adc dec xchg jle mov clc jmp and mov add idivl lock (bad) push cld imul lea or lea push jno cmp js (bad) js lea or xchg inc sub inc pop imul or mov mov (bad) in jle jge repz dec jnp adc mov out test cltd mov fsts inc or xchg divb push cld ret mov fsubs xchg (bad) adc or xchg jge add xchg jbe out xor ja sub or lahf fs js xor testl and pushf jmp mov icebp xor push (bad) mov addr16 sti pop jb mov pop andl sbb and jp xlat loopne (bad) leave test lea test add mov or inc out mov jmp sbb cs loopne or xchg sub loopne call insl push mov or jo fadds into jecxz rol jae jnp pop sub adc jl xlat mov push movsb test mov push ret outsl mov mov inc call (bad) push data16 jmp push fistpl or out fidivrl push add xchg inc and int cmpsl dec decl push adc (bad) jmp add or jne hlt sbb push and mov aaa cmpb xor push loope push inc (bad) adc in cmpsl (bad) inc fdivrs sub jne mov fcomps sub or pop clc loopne xchg out cmp je pop jne inc les push sbb or dec loop xor or notl adc or xor aaa inc fs xor jo mov sbb mov outsl test or (bad) out mov sarl nop in popf push mov loopne or aaa ja dec je and inc cli adc adc stc into imul jmp inc lock movsl xor mov xchg jb add arpl nop mov call jno xchg jp or aad ja cmp or popa mov cmp (bad) mov inc lea out dec or pop jg aaa xor or call enter enter (bad) cmp fbld jbe dec lahf xchg push cmp imul sarl ds test xchg cmp add fucomp popa in sbb dec loopne pop fucomi enter loope,pn inc shrb jge push and fstl or inc mov and sub mov rep cmpl imul or inc sti and sbb mov cmp ja mov mov lods out ds enter and leave divl pop inc lock mov ss out mov test sbb dec sub loop cmpb pushf hlt or sbb mov (bad) xchg out mov dec lods scas movswl insb fdivl movl add or pop push xor jmp sub fnstsw lock xchg in test or clc fildl cmp rclb cmp mov push push or loopne xchg mov jl in push fsubl (bad) fsubl inc lock movsbl fmul xor xor or aam sbb dec shlb sbb outsb add insl enter enter lds sti int sar (bad) cltd fdivl (bad) int3 jg adc pop dec je jmp int or sbb rolb and je xor (bad) mov mulb in test or dec sub mov mov inc fistl mov clc sarl adc sbb xchg add es in in pop flds mov pop fnsave pusha outsl shrb cmp mov pusha cmp andb lea and movsb xor or xorl mov call mov xor cwtl arpl stos xchg jno jmp sbb ss dec sbb jmp pushf mov sub bound mov adc mov sbb xrelease and cld cmp loopne or pushf sub (bad) xor mov je mov in out in repnz (bad) mov stos or jmp jecxz dec lock and cmp adc xor sub hlt in inc hlt adc cmp loopne xor in push aad cmc in imul hlt jne add xchg inc enter out hlt in push dec and cmc loopne dec mov push dec leave arpl push push data16 xor dec movsb mov iret repz or sub push arpl in lcall daa loop repz (bad) cld pop push xor and push jmp inc insb push test insb stos or push lea mov cwtl mov push inc es sets je push cwtl jo lods cmp in or and in loopne test cmpsb aaa loopne insb or (bad) xor (bad) fsubrs les aaa enter aam aaa rclb adc ror jno imul int sarb inc ret insb jecxz enter adc cmp dec xor les lcall stc pop sub inc jge out bound addr16 cmpsb inc notl movsb pop adc lock xor mov rolb pusha inc pusha xlat aaa mov insb in mov add inc ja cwtl xor out mov sbb cmp aaa rolb orl movsb aaa dec daa and movsb aad mov cmp cmp cmp cwtl jno lods or add mov dec mov (bad) nop popf nop ja in clc dec aaa in mov popa shl add mov test ret jmp and sbb data16 int3 loopne dec xor dec test push mov dec add outsl add mov sbb mov jmp movw ja idivl xor add movsb movups mov enter adcl fcoms or adc xlat movsb pop sub pop or pop daa pop push add js shrb mov push (bad) inc mov jo add push out pop add outsl or pop cmpl jb mov ds jne sub mov xlat cmpsl lcall je mov jne int3 cmp and popa and fisubl stc push adc xor inc push dec jle dec ds add inc outsl jne or aam xchg jb outsb arpl and lea dec pop and or cvttps2pi fwait aas sbb push outsb imul inc arpl fwait (bad) xchg cmpsl and inc iret push inc je inc add or xchg or pusha daa adc or add push add or clc lock les loope std dec incb sti and dec ja test sub test push inc xchg or pop dec mov jbe das add je (bad) movsl push jmp lea dec fiadd lea imul pop jmp push cmp sbb add xor dec and insl lock dec aaa adc jl add inc out mov push and xor scas in test xchg (bad) jl nop testl adc movsb adc pushw push xor and jle adc mov sahf sar sub dec ja xor fiaddl and lods aam and and dec dec xor arpl sub push mov repz outsl fmuls xor mov pop hlt cwtl cmp mov and pushl dec jb add jl and out push or or jle popa push and pop add adc push mov xlat sbb adc sbb xchg dec icebp test lcall je outsb (bad) adc add xchg pop mov inc pop pop pop xchg jecxz mov jg (bad) call call fdivrp loopne ret mov (bad) adcl mov inc mov jae sub push or adc ret xorl jle outsl mov cs inc xor std mov (bad) daa fisttp fcoms popa mov sbb out push nop popf and mov jo jmp xchg jle and ror or push ja mov pop pop rorl adc lods add add and bound cmp paddq push test in mov mov inc and shrb push push add scas push dec jb or jbe mov stc imul cld sub inc inc ret xchg cmp cmp (bad) jmp setg (bad) ret fbld inc mov test ds push fnstenv in movsb leave loope add bound ret daa lock lock mov adc cmp dec leave inc pop cmc pop dec loop jmp incl mov (bad) cmp sbb sbb and mov mov or cmpsl andl or cmp inc dec in mov aam aaa loopne xchg mov cmpsb jne arpl or pop fmul inc mov bound incb lret xchg nop adc clc ds stos xlat test fiadd pushf mov ds lret sub out lods mov adc aam adc or mov insl pop xor lods out and repnz shr nop dec in in in les cmc lods inc dec pusha or lods dec adc and sub stos lods shrd scas nop xchg xchg daa daa daa daa xchg xchg xchg xchg daa daa daa daa xchg cwtl cltd lcall popf sahf daa daa daa daa lahf addb addl xchg pop add cmp xor in xor cmp inc mov push add ds add or imul js rolb adc cwtl ret jle push xchg ss pushl pushl sbb test jne push rolb mov cs dec xor cmp jle sub cmp ret push in outsb sbb cmc cwtl cmpl cmp lods xlat rcrl cmp mov sub lods aam ja add jmp scas shl ja movsb mov (bad) lea mov sub roll call pop outsb sbb mov add push or fwait insb or add lret je mov sbb sbb and sbb inc add jbe lock (bad) jmp jle in je jmp cmp insb adc insb sbb test out jne or ljmp mov mov cmpb je cli (bad) loopne push lar decb ja add aas add shr sbb aaa fwait mov cmp cld ret std push add add adc add mov ficoml (bad) jle xchg (bad) call into sti or aaa mov in ds decl push adc mov mov stc (bad) decl cmpb ja jb add add call (bad) mov enter mov mov or sbb inc scas mov push (bad) in fwait cmp push mov add call dec mov xlat or xchg (bad) idiv test jb into inc mov lods cmp lcall stos mov imull jecxz adc mov in hlt ret (bad) mov shrb xlat (bad) jge daa aaa clc outsb sub dec sub sbb sahf lcall jne test xlat lcall hlt pop push ret xchg jns mov sbb xchg or push ja or adc pop jmp pop or hlt (bad) adc or mov sub stos jecxz pop or lret addb xor mov clc enter mov mov fiadd xchg aad stos hlt addr16 cmp dec push ja loopne xchg add mov les or mov mov xchg cmp data16 cld push xor iret lods pop add inc dec movsb je or aad imul sbb push cmp add rcrb xlat inc mov jne aam xchg sub jns out xor push popa fldt fstps fwait jp in fdivrp mov fucomp add mov add pushw or in (bad) push fistpll pop fmuls mov mov cmp mov pop pop jge dec mov adc xchg xchg mov or xor fdivp out add sbb (bad) fist sbb fwait push out sub fstl push inc add cmp jg sbb sub jb cmp inc push push imul (bad) push jmp pop jmp sbb sbb push jmp adc push or int inc sbb and fidivrl rclb fidivr cmpsb outsl subb jno pushl jge add call js inc (bad) mov xor lea insl xchg pshufw ja jae jne cmp adc clc dec or or icebp jbe add out jb leave mov mov fiadd jmp cmp ja (bad) ljmp or add mov lret rclb rcrb outsl icebp jae sub mov sub push outsl es test pop dec jb sub inc inc iret scas jge jmp and clc ljmp add push inc insb imul lret fxch notl ja dec gs push sbb xlat or dec push gs inc insb popa out stos inc divb loopne gs sub add mov dec or inc imul stc in add bound sbbl mov sbb sbb adc dec outsl add pusha punpckhwd sub (bad) dec outsb insb jns (bad) js ja jno jbe lods fstpl ss push fistpll push or jb or cmpsl or dec imul rol repnz test or xor mov test push dec hlt xchg and cmp add nop add out aaa (bad) mov out cld or popa fstpt cmc dec gs sbb jae movsb jnp mov inc jne sbb or or adc ficom pop sbb or push lea add push mov add or xor mov shrb and test push movb inc inc pop and jae mov xchg pushf aam cs inc cmp stos push lods outsb mov pusha mov xor scas ds mov mov mov call mov in in inc mov pop rclb addr16 adc (bad) pop push inc and inc fldenv nop cwtl mov mov add cmpsl push mov in jge hlt mov fimul imul scas pop leave lods mov movsb movsb add mov pop add les xchg outsl rdpmc or (bad) push mov pusha mov inc ss jle sub mov cwtl nop jb or mov or sbbl pop jle adc orl icebp imul pop aaa push mov add cmpb (bad) sub mov mov scas and cmp pop scas dec enter push pop pop cmp stos (bad) notl inc push add enter test mov push loopne push add (bad) call lret push add jne sbb pop js push or mov aaa je or add in xor int3 jge mov xchg in adc sbb add cs push pop push or das scas pop ds loopne cwtl (bad) fsubs or fildll inc push jmp adc adc mov imul adc dec leave jae fs jo ret mov pushf jae push rclb sahf cmpsb add scas cmp add or mov push jo mov lcall cmp fadds adc in pop jmp inc setl lahf out jl nop dec les mov dec idivl inc es push inc pop imulb out inc mov jl aaa xor jge mov loopne xor push push js rclb mov inc mov and shrb ljmp inc push or lock pop aaa cmp loope fadd aas loopne (bad) xor in repnz mov push popf loope insb push sbb and xchg push shrl cmpsl push lock mov or dec pop dec push sub xchg xor push mov jnp mov push sbb insb (bad) sub add add adc and movsb push jne jmp (bad) sbb insb sbb xchg dec rolb push mov adc push enter pop in daa push push push pop (bad) inc leave inc cmp data16 cmp cmpsl in fisttp pop push sbb pop int3 fild push or mov jnp sbb pop and cmp mov xor out in (bad) out sbb xlat das movnti mov pop inc push pop nop adc adc xor sbb ds es pop fisub je test pop rclb testl repz movsb test sbb jo sub push mov dec pcmpgtb cmpsl in or cmp adc cmp add nop and push pop es push add xor jo in in push repz testl sbb idivl fucomip sti or pop push and xor sub push insb outsl mov adc push xor ret loop mov pop sbb xor out jl sahf mov jp out cmp push push mov pushf sub or adc leave je push inc push adc xchg pop cmp shrl in pop mov pop pop rcl pop push lahf jle (bad) out pop in mov mov out mov (bad) lods gs into push push out shrl push xor mov mov sbb dec clc push nop jbe nop jo hlt mov gs or rorl out xor pop inc unpcklps jo (bad) aaa and and inc sarb push mov mov stos mov adc add mov inc xchg fmuls fdivs nop fsubrs mov cmp int3 gs cmp jae jge xchg lahf inc pop sbb pop mov int dec (bad) inc push in stos cs jns out cmpsb aas mov and lock mov push add scas xchg xchg les hlt push xor bnd les push testb or push dec xchg jbe push adc jnp pop push adcb xchg mov mov cld (bad) sti fwait icebp lcall cli (bad) stc (bad) clc push push push push push push loop lcall push cmpsb cld push add repz out and xor into hlt icebp fidivr adc push add lock or nop xlat pop and nop mov adc jge xor inc inc pop (bad) fstl add cmp or pop add test push popa addr16 lock ljmp lcall and in pop lock in adc imul xchg cmp xor das fidivr push addb mov pop and pushf fwait out fldl pushf (bad) push xchg dec (bad) fimul in out dec push or pusha adc pop push aaa pop sub push or and jecxz aad addr16 fs xchg orl aas add (bad) push push or add in dec dec sarl pushf imul nop mov lahf dec loopne cmp jne orl je mov repnz mov orb loopne jo or addr16 jb jne (bad) or scas movsb cmp sub cmp xchg mov iret pusha test xor push mov dec sbb data16 and bound or mov je cmpsb or test ljmp lret mov outsl xchg jo test cmp add add sbb sub test fcomp or ss dec inc ja xor sbb outsb jmp mov (bad) add imul test stc mov push shrb fmuls push adc add in sbb fsubs or mov (bad) stc pop jl add ret addb xchg cmp add and movsb push or daa cmp add and sbb lcall mov pop cwtl cmp lods insb or dec sub scas adc push and in sarl lcall push cmp dec or inc mov pop or push inc andl or (bad) (bad) mov lods dec jne pop add insb xchg mov mov jbe cmp pop sbb xor test lret lea pop jne lea push pop jo shrb mov xchg mov sbb dec loopne pop adc imul addl insl outsl mov loopne popf xchg push sbb cmp push add cmovae jl fcoms pop inc cmp ret and cwtl sbb mov ds adc adc or daa and add test pusha add fs push add jbe lods push or xchg sub or data16 add adc stos mov sbb and sbb imul pop pop icebp pop or inc adc sbb cmpsl mov clc push movl inc ds out add loopew fisub cmp inc adc mov lds xor (bad) push lea dec inc subl cmpsl pop aaa mov push dec arpl inc dec jne (bad) mov cmpsl adc test dec mov lds inc roll sbb jg push pop sbb inc rcr push jb adcl iret hlt mov rorb andl xchg sbb (bad) inc dec jbe leave dec ljmp in xor cmc push pop sahf and movsb addr16 or hlt cmp pop sub jno sub (bad) popa cs push dec call add rol and aam jl lock or fildll js pushf les and adc inc cs pusha mov inc mov call es in add cmp cmpl fcoml imul icebp cmp push push call jl jecxz (bad) (bad) dec call (bad) xor dec (bad) clc sbb adc dec add pop loopne and pop clc lret out mov and jge dec dec enter mov pop shr jge (bad) in int shlb or outsl dec nop push mov cmc xor xor push add repz xchg mov sub sub pusha or popa xor call jmp out js add test shlb mov adc jbe int3 and jbe,pn enter roll lds faddl xchg je xchg and enter andl dec mov cmp sbb jecxz pop ljmp inc or inc xlat lahf scas cmpsl fcoml or imul sbb pop or dec and jns pop mov cmpsl ret or add or add xchg xchg lahf mov inc sti cmp aad movsb xlat mov or push push jo nop popa lock das (bad) shrl repz es jae enter push xchg jbe sbb xchg das inc push scas repz inc in xor sub ret pop jns in xor sbb lock cmp xchg insb cmp mov shll sub xchg inc push sbb cltd jno add inc xchg mov xchg inc push cmp mov in cmpsl mov sub xlat mov (bad) in mov enter aam imul jbe add aas pusha sub add pop mov je or addl dec add inc dec dec rorl or or xor or pop test jo outsb and sub adc xchg popa mov (bad) or cmp mov pop jg mov mov or repz outsb dec mov js mov ret mov shlb test xor lea add inc sub push sub cld mov jmp ret add jne loope in inc pop clc insl ror sbbl dec mov jne sbb sbb add or or sub es out pusha jb add fcoml daa mov jbe adc mov add mov in je shrb js and in dec clc cmp je pop mov pop cmp faddl (bad) call jb int ds pushf aaa mov adc add scas das or push mov jecxz mov sbb pop icebp mov jge dec push xor pop sbb sbb push fldcw mov xor sbb adc dec xor (bad) arpl inc sub add cmpsb xor cmpsl dec and test fisubr cmp sahf outsb rorb jl aas shlb xlat arpl hlt mov jl insb mov out roll push xor inc call leave ret fbstp cs jnp adc (bad) adc arpl inc cmpsb sahf outsl loop mov stos (bad) dec std in xor into je loope,pt das mov jo je mov clc ret test add pop movsb or fsubs adc pop ftst or or add in les dec es jns push jge dec fst or push ret cmpsb ss sbb and mov inc idivb inc sub xchg aas add mov xchg cltd push dec adc mov fstl cmp cmp sub fcomi idivl add lock das push add imul push or ret inc adc test push sbb incl or leave or insb xchg in int outsb pop aam cwtl das xchg test add push add ljmp rorb popf inc std inc decl jg sbb jnp dec enter loop adc or notl add dec or and cmp js inc movsl test je loop sub or adc jb add mov jae push nop jb fcomi xchg mov pop leave loope adc mov inc outsb inc ret or int sbb fmuls loopne mov or in adc jmp and ret adc cmp add scas add mov aad dec or sub add dec or adc cmp jne sbb leave rcll movsb in stc std jle jo mov or inc sbb pop sbb dec jg jecxz add ss in mov cmp and and call mov ja call enter jb pop rcll pop mov inc out xor adc sub loop or pushf and and pop jle loopne test lock lods sub (bad) inc mov push bound popf and dec mov sub jg dec fwait cmp inc cs push repnz outsl mov sbbl gs pop inc inc test cs ret test in roll cmp adcl rorb pop js inc rorl push sub push inc inc jmp loopne sbb mov cmpb push enter xchg inc js mov jmp dec add cs fldt or inc lahf pop push ljmp adc mov mov add in and and adcl push jle cmp adc cmp cs cmp mov fcomip insl call jbe aaa push xor mov push dec mov add dec loope pcmpgtd sub shl out je or lcall mov push jp push push and mov xor push fcoms cmp mov pop (bad) (bad) cmp jae dec or pop add (bad) je stos adc btr push add mov xchg push jle int3 push push inc adc mov fcmovb push jae mov xor pusha add stos jnp dec inc mov jge jp cld mov jl mov xor outsl push and cmpsb jb pop ja dec mov jg xlat jb cmpsl add sbb and (bad) mov jmp inc cmp jne inc decl jne les adc adc stc arpl rolb mov sub push add mov and es sbb notl test pop rorl movb or xchg sbb pop add inc in add cld jo or xchg (bad) mov adc or jb cli jns cmp sbb loope mov adc pop and xor mov lret or cmpsb pushl js push loop jge and push addr16 in rorb aaa loopne mov push js or mov (bad) and xchg adc push lcall add aas or inc and stos lea sbbb xor add call les dec push jp push arpl or jmp inc pop or jg mov dec adc popl pop lods popf ja jl and sub fcomp xchg adc int dec mov test lahf cmp lret daa or jp and jbe scas sarl xor inc add pushf sub sbb mov clc icebp lock ret cmp push or xorl enter jnp pop xor (bad) jecxz (bad) lcall jo jno inc test test mov inc add pop (bad) sbb arpl fisub inc mov mov dec jae int xor pop pop push push pop pop lcall inc adc or inc xchg (bad) xor lds ret ret xor mov out push cwtl pop adc sub jmp (bad) (bad) ja daa (bad) dec clc rorl fstps subb jmp and xchg xor hlt xchg add push movsl push push sbb push adc (bad) push inc negl push (bad) push xor cmp dec shll popa xchg mov sub in addr16 (bad) mov xor ret cmp popa pop cmp jge xlat dec push in sbb fs inc rol mov sub or popa test or add and push inc and pop adc pushf inc and push jl xor inc mov stos cmpsl lock sbb test mov hlt popa loope xchg adc rclb fstpt aad (bad) sbb inc lcall and std lock pop movsb and (bad) xchg mov inc (bad) cmpsb sbb out jne dec lret in push push adc pop add loopne xor ret adc stos lock mov jne xor sbb adc loopne or push and call cmpsl and push xchg das dec popa xor insl in fwait pop call stos lcall outsb mov push add in xchg fs cmc pop and push inc loopne add adc dec jno or (bad) enter sub clc hlt pop mov (bad) mov adc loopne add jl and fmull add fwait inc add ret cmp push loopne int3 fucomip insl and ds dec fisubl adc push (bad) and jno loop stos ds in dec add add push dec mov lret scas in (bad) ds into aas sub js roll call shll jne xchg jb fs xchg dec les adc lods (bad) cmp nop (bad) aaa rorl adc cmp insb out or pop push mov dec adc mov or scas mov in sbb cmp dec inc xlat sub das out rclb dec pop add mov clc add insl add dec mov repnz pop push sbb incl lock xlat std ret push xchg or out scas nop (bad) jne mov pop sub xlat inc mov inc aas pop andl in imul bound dec push add jns pop imul shld push test and movsl sub mov adc loop das fbstp xor les enter push data16 inc dec mov sbbl push lahf and add (bad) inc sbb faddp dec dec jns mov int scas jae rolb sub das push outsb xor push jb lret sub je daa sbb loopne push mov pop fldcw dec mov (bad) dec (bad) mov or ss sub jbe adc xor out leave inc lock daa cmpsl rcl (bad) frstor mov in or pop scas adc aam dec dec std push (bad) dec dec (bad) pop gs inc jmp fdivrs adc inc sbb pop or je or push or lret sub int3 xchg and cmpb jne or add int dec outsl dec lds cmp jp dec gs adc (bad) ret sub adc jg enter ret in cmc dec jecxz add lds incb int iret testb cmp pop fistpll int3 add push testb sbbb test into (bad) je mov and movaps xor aad in jecxz (bad) jle adc inc or enter push adc or inc adc push adc pop dec clc cltd andb pop (bad) sub mov push pop sub pop add mov adc xchg aam cli leave push bound iret addr16 mov mov data16 (bad) fcom pop xor ror and and cmpsl movsl cmp sub sbb lds push dec xchg test aam adc inc or push sub sub dec cmpsb or (bad) adc jl add test ja sbb inc stos mov inc dec cmp outsb adc or rcrl imul fldl sbb jnp movsb xchg negb in inc inc mov xlat pop cld lock dec (bad) jne cmc or mov jle arpl xchg pop add add mov lock cltd aas popa std adc adc jl je pusha outsl outsl push jg mov (bad) jmp mov gs aam (bad) in mov ret jge lea rorl xorl pop push or push add add in jge sar mov sbb dec jnp out dec outsl and ret daa sbb mov ret aas aam pusha mov dec push sbb dec pop or repnz rol add (bad) mov mov pop rcrl mov aaa sbb sbb and test inc fs das int leave mov pushf pop push sbb mov adc fwait sub aas (bad) xchg add (bad) (bad) std jg inc or or and and loopne sbb out xchg (bad) jl xor and xchg mov dec nop cmp movsl cmp in jl and pop js adc jne add cwtl icebp inc hlt shr out in push mov insb or and and dec (bad) jg jl lahf into pop xor xchg cmp jne mov sub cmp jne mov mov xor jecxz jle jge pop and mov jl cld add lods arpl add or or addr16 je inc or cltd nop rolb jnp and add xchg rorl inc loope addr16 sti pop mov stos enter inc sub sbb js xchg inc push nop sbb jge or jle add xor push add out xchg mov adc test jo push mov xor inc test mov je ljmp xchg ljmp inc push incl or pop and iret jmp (bad) jno dec sub mov call (bad) in les das mov xchg loope sub jge pop aam incb jl and mov mov and pop mov jo push sub mov jecxz es fsubs sub mov xlat add js in xor in sbb mov lea ret cmp mov mov orb xchg lods inc rcll jno mov sbb cmp fprem inc js or jne cltd enter or and ja cltd push push mov pop sbb adc clc jecxz subb test sbb push ficompl nop add pushf sub and inc jb ret repnz pusha daa inc adc enter outsl adc test fmuls sbb add inc lods xchg push imul mov lds push add es (bad) jbe push or in sub daa or dec rcr aad adc mov cmp add jp jge in xchg loop jmp push (bad) stc inc mov jno pusha insl cltd sub push mov cmp add bound dec cmpsl inc leave push xchg loop movsb cmp loope add sub mov js dec movsl push clc jo inc das pop dec into outsb aam pop sub pop clc sbb lods add stc dec xor fistpll cmovo inc jecxz les inc nop popa pop lock or ja cmp sbb cltd xchg dec out pop lea jo mov das jg pop push mov or inc jecxz sub add mov or or stc dec test dec mov dec xlat out fsubl add in pop xor mov sbb xor mov (bad) into jo xor xor dec jl jnp lock mov jb cmp and popf inc int3 add (bad) adcb or adc sahf movb ret xor arpl repnz jge and loopne and pop nop or mov mov mov shll cmp push mov leave add jno mov dec or xchg movb les or not mov cmp movsb icebp or stos or into iret jae imul addr16 pop int3 add je dec or adc sbb push add sbb and or dec pushf and dec in xlat add or lock push mov inc mov push scas ficom cmp push std cs mov mov fisubl adc add fs cmpsb std aam idivl pushw js pop adc xor les or adc or test pop (bad) or test mov jl xchg cmp ret fidiv jne push aam ja aad inc adc mov xchg rcll int3 insb add lods dec daa or mov pusha inc xchg or xor cmp adc pop push or cmp sti int push sub (bad) jl cmp jle or lds in xlat test adc jne mov and push mov jno xchg add mov pop jecxz in push pop sti inc test imul enter inc push enter inc push dec adc pop fnsave icebp inc lods mov mov (bad) cld or ds and nop adc insl loope jb cwtl push loopne add jg add pop shr adc pop popf ret movsb js in or lods mov pop fimull outsb in dec or ret mulb sbb jmp jg push mov or adc or push dec sbb fs dec push pop daa (bad) sbb daa mov add insl push inc cmp bts push push jb jo imul add fs out loopne pop aaa and fcoml out mov sahf ret nop push mov and inc and sbb sub inc cwtl adc (bad) xor lea jnp adc inc nop and sbbl fidiv jmp insl mov jne,pn fs jmp sub mov lea xor push and inc adc cmc adc mov cmp loop ret nop ja popa lods inc rclb fsubs add faddl xlat add push aaa add add test push ficom cld mov push popa sbb pop leave inc les and add lret cli push cmp jmp mov dec inc push jae or outsb scas inc xchg mov mov addl xchg mull jle sub mov push leave sbb jp popa ret or xorl pop dec jmp (bad) fmul rorl and sarl and fmuls sbb mov loop cld xchg arpl jge xorb loope mov sub mov enter out cmpl jle mov (bad) and inc cmp mov and fs adc jno lods ss movaps inc push mov sub xorl push and arpl dec and pop fwait cli (bad) (bad) in syscall jmp aaa push and cmp jl addb popa or cmp sbb jmp stos leave (bad) dec and push andw rcr and pop pop into arpl in arpl push cmpl jp fistpll cmp sub fs lea pop inc out pop bound (bad) lock test mov mov insb push mov push adc adc movl push push add sub add imul inc jb sub inc or inc enter lret sub push aad insb pusha das push inc cmpsb decl sbb or adc add xchg mov add or iret orl data16 jns lock add jl adc fnsave fsubs adc jne ret and xchg push jo sub inc int out add push or inc adc push fidivl pop adc mov jb pusha cmc out mov push std adc push ljmp cmp push movb adc xchg mov add lock pop cmp xorl dec hlt aaa cmp and test enter addr16 adcb sbb mov test xchg and or push pop adc cld push inc lret std or pop call xor orl rclb sub push add arpl les adc andl sbb insb js cmc and jnp cmpsb mov movsb cmp ret inc (bad) cmp mov push flds or sub xchg push add push push or jne add mov add enter ja dec in rolb inc imul subl imul mov add fmull or pop test or or cltd sbb dec sbb movb mov adc push inc or sbb inc sbb xor pop loopne cld xor movsl inc call xchg repnz xchg sub ret xchg inc sahf imul loopne inc pushf and sahf rolb mov sub push xlat movsl dec enter jne and ja imul imul jmp xchg push fcomp push enter mov js or imul add mov cmp xor loopne nop xchg add adc cmp test push cmpsl mov sbb mov sbb cmpsb test rorl sub ret mov nop push jecxz push lret push fs lods pop (bad) pop push lret mov js jbe jne add ja mov jg sbb flds pop outsl push fsts lret ret xor cmp dec test push cld movsl or jne pop xor bound (bad) jge mov sub dec xchg sbb xchg adc inc adc and xor and or bound iretw imul xchg cltd dec jle push mov sub inc inc or lods test outsl test ret sbb dec je in dec or lods adc fs inc loope sti add cmp (bad) jnp xchg inc jmp addr16 xor cltd test mov xor insb mov (bad) xor add and pop mov jae dec insb insl outsl adc and add mov sbb sbb jae or sbb testb inc mov hlt add and sub jp mov pop push pop push rorb cld cld push cmpsl lea mov out mov pop jmp (bad) mov add jge mov test mov or notb pop xor xor not and pop mov ret dec jmp adc xchg out or lock add in add pushf inc mov xchg cmpsb clc pop dec xor lahf xchg and pop test mov xor popf xorl loopne lock sub rorb sbb cltd int retw int3 lret xor adc dec ret and mov sub lock int fsincos loope xchg jo imul push xor push into pusha add in out pop iret push pop mov dec sbb adc addl dec cmp inc or test or jo jmp mov in mov push and in iret cmp je addb or push sub mull mov dec in fsts dec lock in aam adc xchg (bad) inc mov or jne in inc dec inc sub jo xchg cmp enter add xor imul (bad) in sub inc sub aam mov daa fadds lock pop jb int movb inc dec and add sub adc lods sub fcoml sbb fsubrs jle sub popf cmpl div arpl sbb nop pop jmp dec fmull ss cmp push dec push inc sbb jno or (bad) cltd pop adc mov mov ja sub mov or xor das add loop add rcrb mov in adc fwait add iret and mov adc pusha sbb inc jae mov mov xor mov xlat call jmp inc pop aaa inc in add sbb sbb and or shr popa nop aaa or xor fsubrl sbb add fsubs out pusha pop push popa (bad) hlt in mov cmpsl fst (bad) mov cltd mov sbb xor cmp add test loopne pop xor leave mov in ja dec xlat pop out or xlat or test nop pop daa mov test sbb xchg cmpsb pop loope (bad) ret lcall sub jae mov imul sbb out out movsb add xor js ret (bad) hlt xchg add clc sub inc in push add mov cmp push xor mov or outsb adc insb push mov dec js or (bad) cmp lahf out or sbb add dec cs mov adc mov pop xchg adc popf push push sbb sub inc xor sbb (bad) fstpl fldl mov cmp sahf mov xchg add pusha or and mov sbb iret repz insb jp add and jo testl insl pop fs pushf jb xchg and enter or pop jne or cmp dec iret xchg sub adc add and sbb push ss enter fidivr mov push mov xchg mov push and adc and daa cmp ret inc xchg in insl sqrtps fwait out push mov adc mov sbb aas mov (bad) div outsl mov jne mov push adcl push mov jno xchg fldl2e mov ja cs sbb sarb pop adc dec add insl sub in jne lods dec jmp daa shlb loopne dec (bad) jb xlat lret in adc inc leave cwtl test mov inc ljmp popa xor stos enter hlt movsl dec aad lret mov inc and out mul add inc push stc mov es jno inc cmp mov hlt inc xor sbb imul hlt (bad) movsb fildll mov sbb icebp xor lcall inc imul and push ljmp dec push data16 jecxz xchg std pop es mov cmpb lock out orb adc pop lea loope loop inc (bad) push add iret and iret imul hlt aam mov scas lock js add xchg dec lds shl jo pop push pcmpgtd pop rcl mov ret xor cmpb fstpt shlb xchg test jns lret inc xchg mov insb cld incl and cmp popf (bad) call add sbb punpckhwd add and mov jns push lock sbb mov jle popf pop xchg xor (bad) jg daa and jp inc pop jbe pop pop jnp in pop and xor sti aam fnstcw stos jp xlat test inc sbb out bound cmp jne sbb push out push xchg adcb repz (bad) sbb sbb fs pop xor adc nop cmp pusha loop xchg xchg call pop mov mov add (bad) faddp and icebp inc daa push imull fst fisubl sar xor jbe jg jne mov mov test add add mov mov movsb sti xor out ljmp iret in jns daa or adc pop xor inc roll mov add ret jns mov imul retw fcmovne xor xor aaa movsb lea aaa cmpsb in js sahf add test xchg (bad) jb xchg mov enter adc repnz sbb clc fnop fdiv dec sub hlt arpl in mov add dec dec mov mov xchg push add mov cmc enter je push sbb ret push lods jge adc iret sbb test movsl cld adc mov sbb dec aam cmp sbb dec call je jb movsl (bad) daa push fist jno lcall dec jmp push pop adc fs faddl push bound push (bad) pop push fadd sbb out ret pop notb (bad) hlt jmp inc push jge mov mov adc into push sarl int3 jecxz aaa mov mov cld lea addr16 dec roll xlat rcl add fcomp scas adc inc fcompp repz xor rorl sub pusha dec xchg test out jne mov sti and push lods sub xchg mov out adc js push sub add mov pop mov fsubr call mov sbb lret test daa jmp sub mov mov je outsb add aam sbb mov (bad) insb push movsb inc add adc xchg pushw imul and je cmp push mov adc (bad) pop mov jecxz lods mov xchg sub dec pop lds add xor push das xchg push xchg cmp xor sub add and pusha push fstl or aam push add jae fistp dec je dec sub in jecxz popa inc test lock push lret dec testl mov pop or push adc mov bnd mov push lds adc (bad) in or xor sbbl pop or jne lea cmp hlt sub sub xchg icebp mov loopne stos ret add fcmovnb movsl sarb mov jno nop sbb and or add mov pop stc pop ret inc mov movsl sbb or (bad) int notl sysenter mov push test mov jecxz or and adc pop mov xor movsb in push cld fld xchg ret es aam push jb cmp aam fwait int sbb push jg sub test push or and loopne repz movb and pop push inc or femms aaa cmpb leave dec sbbl push dec xchg xorl jo cltd adc push adc lahf mov inc or ja aam sub mov adc sub lock dec add outsl add jg outsb add mov add ja adc add je (bad) fisttpl and scas xor les shlb das pusha repz jo or mov test pop xchg ds sub pop xchg dec dec pusha push insb push jle mov mov pop les rcr repz repz push and and cs mov sbb mov mov add cwtl lods sub (bad) mov pop jne pop xchg jmp das pop imul push (bad) test inc mov xchg add mov sbb or stos xchg cmp popa xchg pop dec pop mov test adc cld xor adc hlt mov dec mov sub dec push je lcall (bad) repnz hlt adc mov xor out jmp push mov addl push mov sbb inc mov add push aad daa mov or xchg (bad) es inc inc and inc dec push push lea (bad) lea inc push call cmp jge ss sahf gs push sub loop mov xor inc or push (bad) dec call lret in (bad) fimull popl lcall or cld stos fmul cmp inc call jmp in (bad) movsl mov or mov ss cmpsb cmp dec push sbb push inc sbb and xchg lret push pusha or orb push adc mov jmp add mov cltd lods jle xor mov push cmp shrb sahf pop push sub adc dec andb jne inc mov call add popa mov pusha or xchg pop cld pop xchg addb xchg cli cmp mov inc bound loope jl inc push mov adc adc rcrb rolb mov hlt pop jnp mov mov negb dec lock (bad) repnz sbb mov or or loop test inc add push mov push mov mov jbe hlt dec add mov fwait cmp stc dec call shrb add int3 mov add ljmp outsl mov sub aas sbb xor mov mov rorb sbb mov jnp dec outsb push xchg pop mov movsl push rcr jbe insl in lea insb pop divl sarl fs adc push rolb or cs ss in gs movsbl das adcb cs xor cmp mov ljmp cmp jbe sbb mov sbb clc xor insl mov imul cs push mov jmp daa jmp mov ljmp jp pop lea fidivrl loop push lods jmp cmp (bad) or mov (bad) (bad) dec or dec sub das jmp int (bad) mov lret push sub inc adc cmp rorw pop or or (bad) jo or and mov add ret mov paddw inc dec iret jle jl or sbb cmp jge pusha iret xor cmpl and and lret mov mov dec cmpsb push add add fsubrl pusha leave add imull sub add iret fnop fcoml xor leave push in push xlat add mov xchg push test outsb psubsb dec (bad) add (bad) xchg dec mov aaa or (bad) push lea (bad) daa mov (bad) cmp subl rorb (bad) nop (bad) push mov pop aad ds push popa imulb nop je sub mov or cltd (bad) add inc inc mov mov lock push out add andb sub dec mov jnp mov add daa lret push cld dec mov add mov xchg std cmc xorb mov xor leave pop loopne dec ficom mov (bad) aaa jo cmp sub cmp cmpsb das cmp cwtl loopne pop arpl dec add sbb and xchg subb xor and faddl mull mov mov jl pop movsl adc outsl or imul (bad) pop xor xchg lahf push push mov in arpl hlt pop and xor lock and mov jae in andl popa jne inc into xor add sub arpl xchg mov in mov xor cmp mov mov jle fisttp int3 push xchg outsl xor andl mov mov cmp fdivl in xchg push mov aas jnp cmp je addl adc fisttp adc adc sbb sti (bad) mov orw dec xchg cmc rol data16 push sbb mov sbb nop scas push sbb adc dec ja adc adc fimull sub push rorb or pop adc xlat or dec (bad) pop lds xchg sub sub and jnp jnp (bad) testb mov and pop inc mov push scas in jl xchg dec adc icebp bound fidiv cmpsl mov jmp pop clc aam add mov mov push (bad) jae adc sbb movsl cld jmp jl cmpb (bad) pop adc mov xor scas adc (bad) sub dec or inc push les xchg inc or inc xchg adc or adc add jnp stos xor cltd mov scas cwtl js,pn or sahf or inc fs sbb mov jp dec xlat adc les fcomps rorb fisubl aad and lock addb cld push push cmp shll fisubr setne test fcoml sub popf enter add in ret add lret cmpsl je mov dec ss outsl jo in sub cmpsl fist popa add int3 lea pop and inc ja sub notl arpl jbe lret dec pop bound rolb xchg lret xorb jne ffree or sti push mov cmp jne daa call cs jne hlt jp jns dec push mov sbb mov push add sub nop inc xchg mov mov (bad) xchg es pop dec jnp (bad) ret aas lds cmpl imull push push sub xor sbb pushf inc aad imul loopne arpl inc dec jne in mov add ret push imul fsubrs dec push sub test xor loopne cmpsl cmp add mov pop cmpsb sbb jmp sbb nop stos and rcr and loope mov (bad) daa adc add add popl cmp out sbb pop addr16 cmp pop sbb leave aas jo nop mov push xor jp push sahf jge mov dec or (bad) jg push dec cmp mov xlat xor gs ret sub mov xlat call inc mov pop mov or sbb andb clc es sbb add scas push fcompl inc icebp and xor popf loop ret sbb (bad) rorl or add sub les idiv and dec cld lods or out mov jmp test or ffreep test scas add in push sbb inc sarb dec xor dec cmp and and dec les outsl sub jnp jmp push mov je iret xchg jge jne es push fstpt jne pop pop jno mov push mov xor pop add jle lods mov insb and or mov scas aas or shll pop add sbb push pop out jmp nop (bad) or loop test inc mov in mov cmp lock int jl test insb lret sub or add rolb add rorb insb mov clc sub sbb xlat dec js jp jmp dec sarb jl aas sbb push pop out inc push and dec pop (bad) sub cld cltd ror jns test xor cmp fistpl pop push or push arpl jne ljmp popa inc fimull dec loopne into cmp rorb inc je mov push out sbb sbb mov dec repnz inc and stc and cmpsl bound or int3 add rclb push mov xor call mov jne pop adc cwtl pusha scas frstor wrmsr and (bad) push pop mov stos and inc (bad) and mov mov shlb mov inc adc cs jle push and adcl inc addb iret daa inc xor pop xchg xor fdivr mov jne xor dec adc inc dec mov or or test sbb sbb sahf adc add iret cmpsb sub int3 xlat pop ds scas lahf ss mov add loopne add add adc ss aad or sub retw add inc add mov xlat pop sti add xchg adc (bad) (bad) dec adc push adc jo imul cmpsb lds sbb sub iret mov inc cmp or add rorb and in imul adc aaa icebp inc mov (bad) movsb fwait mov aad arpl jg lret fisttpl pop mov jge jne jle add cmp iret xchg orl add mov rcrl push repz call inc dec lret fdivl push pop or lcall fcompl (bad) aam add push and sbb push rclb sub sub sbb call (bad) movsb popf aam ja (bad) cld ja sbb fucom mov fdivr decb shlb push sbb loopne aaa jo in call xor push dec mov adc (bad) mov arpl sbb push mov mov jo ficompl mov jmp sub pop mov lods popl push movl or sub sub sbb xor mov inc jae sub jb or pop mov cwtl iret or cwtl insb insb jecxz daa leave addl pop sub addl shlb and and sub and xor add sbb fisubr inc add adc iret mov sub into or mov aaa mov sub push rorl outsl xchg aad pop dec outsb mov insb xchg addb mov sub push mov (bad) movsl inc push xchg je inc inc pop or add jge imull and or (bad) lea je fisttpl out and pop mov pop jo or push or jge in xor stos adc push mov mov push push and aaa call add mov inc insb cltd push sbb inc cmp pusha push mov push cmp pop pop test lods pop inc pop inc push lods lock push dec cli add mov rcrb or mov or adc and jl cld push test and js mov rcpps sti xor and mov pop lock or mov add adc cmpsb fwait inc xchg pusha arpl addr16 fildll orl xor push aas mov push test inc pusha mov mov push cmp ret movsb in pop pop aaa pop push movsl subl jae and lret push pop mov mov mov call lock adc fdivrl rcrb mov pop and cmp movsl xor lods and xor mov xor mov xor jb je xor xor jbe js xor xor jp jl xor xor jle pusha popa xor xor bound xor xor addr16 xor xor insb insl xor xor outsb outsl push push xor xor push push push push xor xor push push pop pop xor xor pop pop pop pop xor xor pop pop inc inc xor xor inc inc inc inc xor xor inc inc dec dec xor xor dec dec dec dec xor xor dec dec xor xor xor xor xor xor xor ss cmp xor xor cmp cmp xor xor ds and in inc dec test mov test add push sbbl dec enterw and popa ds mov sub add push arpl mov xor mov insl and pop adc test push xor mov or jo push popa dec ret fwait (bad) xchg cmp adc out fwait inc fwait jae mov mov push add inc loopne loopne gs aam ds mov push je insb pop fmul lock xor data16 enter je or adc outsb and adc gs (bad) adc cmc inc add insb or jae xchg cs testl outsb int sbb jle push fiaddl jo outsl sbb push inc popa jae add imulb lret sbb or push inc jl (bad) pusha add jae outsb or inc cli (bad) testl sahf add xchg subb cmpsb push push fwait idivb push je into insl dec outsl jo je push inc jns mov jnp adc adc and add sbb adc xor out in jnp adc loopne mov pop adc mov add jne pop jns rorl cmp bound loop mov add dec jl jp mov pop lods or push cmp or jmp inc inc xor pop inc sbb outsl jae es inc je lods mov sbb pop jo idivl std incl test inc jmp outsl mov add push adc dec ss lods pop ficom insl pop pop lcall and pop or pop insl repnz fmuls or mulb xchg iret repz and stos push (bad) xlat dec loope cwtl (bad) (bad) push mov jnp and lret add jmp pop adc insb fcoms adc test leave push push dec inc incl aas push test call lds add jmp mov ss bound push push dec gs fidivr mov (bad) in cld add cmp dec lds int3 aam jmp int3 push cmp pusha xor add push daa in or add push jno cmp outsl lea lahf push cs pop pusha sbb addr16 xchg mov mov and out jne pop sbb lds or adc mov cld lock add inc scas pop xchg add add sbb roll adc fstl ds lsl push lods push push inc je push scas ljmp js mov pusha sbb out xchg mov push cmp jmp pop sbb add test (bad) cwtl int int mov movsl mov (bad) in dec enter xchg mov iret lds cmp xor cmpsl popf nop push mov movsb (bad) push nop lcall inc popa sbb scas or mov sbb push movsl xor sub scas fs aam mov or and pop lds scas test push int3 push or mov lods test add push push aam (bad) inc lds into cmpsb loopne add lock addr16 jae out sbb cwtl (bad) aas fdivrl or mov addb dec jl jne loopne fisubr adc inc outsb adc and mov mov jge aaa and rcr or or inc arpl pusha sahf inc loopne or fs dec outsl ja scas jmp out adc push cld push xchg add xor repz push push add imul rcr les in scas lods push xchg ret sbb push movsb sbb pop xchg fmul lcall aas ret ret mov es sbb dec pusha mov repnz imul je mov push add pop insb push icebp sahf fsub push sub push subb ljmp jmp pop cld in mov fwait pop orb call imul pop jo test ret pop or mov sbb pop and popa inc nop addr16 in cmp paddusb push cmp add mov das push cmp mov inc cs loope xor xchg or ficomp push clc push sub out push or nop mull pop add push push adc divb sbb fucomip adcl add jb out pop mov sub je and sub js dec js pop cld xor or push je push dec fwait adc dec push aam pop leave push js mov sub clc ds push or gs dec in dec add nop xor mov mov cwtl xor cltd pushf xchg clc (bad) clc pop stc inc aaa (bad) imull call cli jg push sti (bad) jb sar pop incl add dec push movsb add ds repz incb add or dec jg dec imul push pop and mov jg mov je mov imul push or ret jle mov fadd mov loope stc stos jg adc push mov jo jg adc jg sbb jo push mov cmp clc sbb ss enterw daa inc sub jle in sbb pop sub push push or jle push mov sbb mov bound pop mov pop push or test fsubrs sarl or outsl outsb pop mov xchg pop sbb xchg inc aaa leave inc sub push pop aam aaa loopne xchg sub jnp out push orb das in hlt push pop pushf xchg clc sub sbb sahf cmpsl push xor add enter sbb push cmp daa mov (bad) push pop mov ds or mov inc (bad) dec popa outsb nop fisubr test decl shlb add jne cmpsl test pcmpgtd pop cmp push push mov mov fstpt or mov push mov pop pop cli add and test and test jle sbb loopne or insl mov jmp jnp movsl fdivs push insb rcrl inc cmp and pop mov test dec pusha fldenv xor or xchg cmp in sub push jbe sbb mov sahf (bad) decl mov pop mov jno fwait mov add cmp (bad) mov out decl lock xchg lock mov es sub cmp pop add leave ficom sub outsl and sub cmpl rclb pusha and or inc mov les or je add and std xlat cmp sub mov (bad) (bad) jmp lods pop adc incl dec or jl roll pop and fs mov (bad) int sbb or repz fist cmpl or enter inc dec push imul or add insl mov enter addr16 (bad) fs popf or adc mov fs push jg mov fmull adc int3 insl cmp push pop cld cs cmpsl cmp push mov in or scas sbb shr cmc aam and arpl adc rcrb or outsl mov push and jae jp insb outsb pop dec insb push pop add stc out push xchg jbe add add (bad) insb xchg gs insb pop pop sti pusha push ss imul gs insl in mov mov addr16 push outsl ja fcompl lods iret lahf jne or arpl rorl jae popa inc jno popa mov ja or shlb adc add in ret ja insl inc enter dec data16 push add adc dec xchg cltd inc data16 das lsl cmc inc popa pop pop jo inc nop fidivl pop imul lods dec mov jb mov adc inc je inc push xchg cltd sbb insb je or dec add cmp pop outsb sub cmp je or sub push pop test lds imul dec mov or push xorl adc xor lret insb or adc pusha adc adc xlat pop or outsw inc push add outsb jne sub sbb xchg daa fadds bswap or (bad) xor ficompl cmp add icebp xor shrl test sbb dec data16 or mov pop pusha or or push push call ret push mov in pop bound add movsb ret iret or js test pop repz addr16 popa testl dec inc push push inc push add mov incb inc push dec push xor inc dec dec cmpl inc inc push pop cmp adc inc push dec dec push mov push inc fiaddl xchg inc dec dec and dec enter inc inc xor xor adc or in and inc inc dec inc xor xchg inc push inc inc dec notl inc inc rcll dec mov mov (bad) mov push (bad) das sbb mov data16 inc das mov push xor push aaa jg xchg adc push push push dec push (bad) nop cmpsl xchg dec inc dec push mov fidivrl nopl mov mov sbb push pop adc add into push dec sbb rorb mov pop pop loopne and dec or sbbb cmp sbb ss push or or lea push mov adc or dec push ss sbb or jmp addl adc repz add mov dec pusha xchg shlb jbe mov or or jo mov sub mov push and lds dec adc stos (bad) arpl pop or mov in lods movsl das or rolb push loope dec std test mov pop push mov fwait in add lds das js xchg sbb dec mov (bad) shlb sbb rorb and mov test sbb cmp inc mov cmp and loope scas sub inc jo cmp push cli dec push and cwtl add movsl leave jb adc aam rorb clc and push sbb popa inc xchg or imul nop outsl popa mov jno inc adc or xor sbb dec dec test inc or ljmp xchg out or enter inc sbb je sbb jmp adc mov add mov sbb xchg xchg lret add or mov adc lea add loopne lods sbb mov je dec cmpsl sbb mov jg (bad) mov jae jmp jo fiaddl imul add fsubs jecxz push cmpsb es mov push sub dec mov or mov popa js xor push adc add inc xor out jns xchg test js mov push dec and xlat rep loop jp aam insl and adc xorb push mov or push or ret inc mov mov pushl aam sbb jo lea push mov fwait nop inc mov fldcw pop (bad) pushf push xchg jle lea xor lea outsl xor push pop aaa fcomi das fdivp ficoml jp mov and mov ja pop xor pop imul mov sbb outsb outsb inc sbb dec aam lock xchg pop add loope (bad) pop sbb push mov adcb movb xor add adc scas add inc xorl nop inc cs lret adc jl and add in lret roll jns adc lret lret push add lock sarb adc add push jne fistpll outsb lret jne mov incl mov sbb mov inc mov addr16 add in das movsb jns xchg scas clc dec in cwtl jne inc lods in or push cmp add inc push das sbb mov adc mov or push scas mov cwtl sub or imul xchg int3 rcll add jno leave sub fcmove add nop and sub pop mov jb scas imul es int out mov push mov inc ds xor mov lahf and jne cwtl or xor nop mov xlat lock inc mov mov pusha mov push loopne fs and push orb ss sbb repz stos sub out out bound or adc lock je js add push adc int mov popa gs lock dec test loopne xor push push aas mov sbb and roll dec pop sarb (bad) nop xchg and inc mov cmp loope (bad) ljmp mov movl in loopne insb inc sbb mov dec adc nopl and (bad) fsubs (bad) xor mov sbb dec test push out (bad) sbb orb clc jb push and inc cmp fs mov jno xor nop dec jge (bad) js mov loopne nop rolb (bad) mov sbb and push or push add rcr or sub or or in outsb scas imul sub push push nop mov js popf popa loope jae xor inc sub imul and inc sbb ja inc rcrl pop dec inc mov xchg iret ss dec arpl cmp sub mov and stos dec fstl enter pop mov sub dec scas inc gs dec (bad) shrl push mov mov adc enter sub inc rol rclb push and ja rolb jns dec repnz jge push cwtl ret mov bound cmp test sbb lea dec xchg mov sub mov push sbb mov mov cmpsl xchg aam fmuls and (bad) cmp and and sahf adc xor xchg loopne fdivs ss push mov pusha iret dec cmpsb inc xchg push pop emms pusha movsb test rolb pop or inc adc adc push mov push add ret pusha mov test outsl cmp mull lahf mov push xor dec sbb jnp ds cmp mov aaa aam jne mov fnstcw sbb pusha leave dec (bad) or or sbb adc mov xchg aam and inc les or enter add daa sbb and ret adc aam cmp insb dec ja aad sbb push inc rcrl pop jge mov (bad) ds pop inc jae dec mov and out push test mov cmp je mov or out aad mov insb mov push out test pop push sbb inc inc mov mov mov rorl movd arpl (bad) and orb (bad) mov push mov inc cld fild or shll sbb mov fimul cmp je fs push add xchg lods sub bound adc js aam add adc push (bad) dec xor loopne (bad) adc mov mov xchg xor push xor rolb mov mov sub mov or pop repnz mov cmpsl mov test dec (bad) (bad) mov sbb andl or sbb or push movsl and sub add (bad) dec je xor sti pop pop es (bad) lret aad jno or cwtl fnop shrb fsubrs das jl adc xor pop scas xchg enter stos or das xor daa jns fadds pop adc push insl call inc or and shlb pop sub test xor inc push hlt fs cwtl cli es adc jge adc lea mov sbb and shr enter andl mov (bad) repz fsts xchg push pop adc jge inc jmp adc cmp add and add sbb ds mov imul test flds and fwait or imul inc lock movsl push mov repz push and dec sahf jbe sbb in push jp aam jle push out lea js or in (bad) jle or adc inc push mov adc idivb test add add je or mov fistpll dec pop or divl (bad) not and mov pop adc pop sar add pop (bad) scas add mov cmovo in mov pop imul xchg push movb sub leave cmp outsl push fabs push test stc mov mov xor push sub cmpb mov sub (bad) push and sub packssdw rcrl sarb fadd adc dec cmp in loopne fstl jge ja mov daa mov adc sbb and fdivl push sub dec jmp jns ds sub push rorb pop xchg inc xlat sbb pop js adc sbb sub inc inc das inc insb aad cmp push pop test add in (bad) sub stos xchg jns pop dec out adc sbb or pop call sti xor mov rorl and sub (bad) mov cmp push mov mov cmp imul mov add add mov movb pop popa or sub adc aas dec mov outsl sub adc adc xor outsb add mov pop pop pop rolb outsl push add jne mov js divl (bad) jge adc adc adc sbb push inc add cmp and inc pop das or add aam jns pop (bad) mov stos stos jo movsb dec js and and pop fistp insb mov enter push dec jns jmp imull outsb js mov mov sub shl mov mov popa push sub popf mov jmp test add adc or xchg cld push mov pop fcomi xchg or loopne jge push jno testl jnp xor push or fcompp lods inc push rolb jne ds add xchg dec out fisttp mov lea inc fcmovu pop push cmp cs and fwait imul push addr16 data16 ret sbb (bad) (bad) lock (bad) icebp pop nop das pop pop push sub mov roll ret in sarb push loopne mov inc movsb clc sarb loopne cs aaa das add mov dec mov and or xor (bad) and fimull add push dec loope push dec pop pusha xor pop push push dec clc gs or cmp not int aas push xor adc dec mov push xchg pop add lret push sbb ror movups add imul dec add and and mov es mov out outsb adc (bad) fnstenv push push icebp sub and (bad) cmc mov add dec das sub mov ret xor cmpsl lahf in fmuls or loope test sub push mov inc and mov das lods push or dec adc loop mov shrb lock adcl jne push add (bad) movsb jo pop and pusha cli loope mov (bad) hlt or mov cmp sub inc shrb sub mov adc pop pushf lods das or stos shrl push xchg outsl mov rcrb and insb pop cld push xchg cmp push push mov mov xchg inc add mov jb cmp (bad) dec test cmp movb sbb (bad) or lods outsl pop pop mov enter cvttps2pi (bad) decl sub movzbl sbb lea jo shl mov (bad) cmp jg test jle cmp jl mov aaa enter jg adc pop clc jle gs xor sbb xchg and mov or imul inc ja inc mov add dec gs push pop lds or jne push adc cmp push add pop sbb xor dec inc dec pop out pop mov fsubrs mov test xchg mov imul mov and or in pusha mov or lods mov xchg insb sub es add adc shlb adc inc lcall mov adc inc ret push jg sahf sbb fimul loopne es cmp dec mov into gs in lods call jbe dec jne cmp push add sarb mov pop mov cli sbb sbb and rcll add sub add fcoml mov test loop test hlt xchg rorl mov (bad) and insl imul inc jbe nop pop cwtl rcr push mov insl mov push mov loope sub add xchg push cs xor jnp sti mov repz push mov mov push adc aas push arpl push push mov mov or or cmp shlb repnz rclb pop into mov pop pop or lret mov ljmp xor inc hlt pop pop sbb sarb jmp xor cmpsb scas xchg movb sarb fcmovb sarb ret sbb push push test fisttpll jmp sbb sbb sub mov lea (bad) fadd addr16 jmp inc mov movl or add addr16 loopne imul je dec or jle lock jmp jb mov jmp bswap pop mov and sbb pop push adc insb outsb (bad) push push cmp xor inc and jae xor push imul sub and and inc adc push push adc push mov pop cltd sbb orl in pushf int3 (bad) xor cmpsl out adc push add mov pop xor cmpsb dec sub icebp sub mov test jne mov push add addb int3 xlat hlt add mov fbld push fs lea (bad) call ret push clc pop int3 mov add mov inc decl xchg call repnz jmp adc mov xchg in or jecxz add fdivs mov mov pop out sbb adc xlat push dec jg dec add add mov pop push push in hlt xchg scas ret ror inc call nop out add dec fimull call mov cmpsl fsubr dec mov mov fcoml sbbb pusha inc add add leave sbb add or mov cltd addr16 add or xor mov and push add push lods or mov data16 mov insb ret out mov lods cmpsl mov mov xor push xor fisttp mov mov cmpsb insl inc inc call push loopne in in cmpsb repnz and in ljmp sti fcoml jmp int3 adcl xchg jno pop dec pop out mov inc and (bad) pusha nop outsb scas adc lods das add dec jmp mov jno pop mov sub mov sbb rcrl pop (bad) fistp push adc shlb mov das dec xor mov scas xchg cmp and inc push sub or jmp push addr16 imul adc loop icebp mov push adc inc or add cmp or and mov mov je imul fsubr inc int3 and jmp outsl bound inc dec jo dec gs into hlt rorb pop pop xchg mov pop push aaa cli cmp or int pop jne cmp cmp pop sti xor pop roll mov repnz (bad) sbb mov ret xchg pop frstor inc dec in sbb pop sbb mulb or mov push push and jo adc jo adc out cmpsl pop ret daa xchg xlat adc pop and cmp adc mov (bad) xor or pop (bad) icebp (bad) imul add outsb mov jl add jge mov aam adc jae mov rorl out push movsb push dec in ljmp push les out into xchg scas push inc add sbb and repnz mov mov xchg jl mov sub lock inc lock sub movsl rorl mov adc pop movb outsl bound push and inc sub mov mov cmp inc dec jne and mov dec sbbl mov je js add inc adc or lods xchg mov outsl pop add add fcoms enter stos lock sub lahf (bad) dec and test icebp cmp xchg adc int test inc xchg lret jp sub cmc (bad) cmp pop popa cmp or pop nop sbb ds and jp adc scas imul xchg sub inc and cwtl pusha mov mov add sbb add add aaa outsb sbb mov and sbb cmp sarl adc rol or (bad) cmpsb sbb jne pop mov add icebp dec daa cmpl mov ficomp enter cmp icebp loope mov call mov aam insl and push (bad) pop push test or out adc test (bad) lods jg xlat pop jne mov and xchg mov dec ret insb or pop test and and lcall sbb cmp dec adc xor or push je dec jnp loop imul cmp adc sti xchg out push mov sbb nop pop (bad) and add ret jg adc and sbb mov pop mov (bad) xor and mov push push je out out in mov (bad) aaa loop outsl sbb jmp add push aaa or daa lods and and sbb adc or or and or adc mov mov xchg insl mov repnz movsb dec mov xchg mov ss xor es mov inc xchg loop xchg mov add lds mov divl sbb push (bad) scas idivb push shl adc dec je fcompl push mov pop mov add xor cmp xor mov insb (bad) cmp inc and es mov loopne or cmp or adc mov lods sbb sbb (bad) repz dec in pop mov sub mov cmpsb dec xchg add jmp pop adc clc inc inc ds dec xor push or inc and ret in leave adc cmpsl das and les jg test inc rorb mov inc sub push and and add gs sub xchg push adc inc (bad) inc push mov insb inc sub incl mov adc dec movsl sub sub (bad) es lock sub adc mov (bad) es fs and mov adc loopne mov inc js jmp xor clc rol je sub or push push fisubl xchg sbb stos clc jnp push inc (bad) aam stos andl adc adc test arpl sbb icebp cmp (bad) enter adc pushf pop lcall pop sub sbb pop jmp movsl (bad) scas nop jmp push cmp mov push stos cmp push adc call jg (bad) jmp push int adc mov cmp std imul je or push mov js inc pop xchg sbb push jb mov sub out and add data16 xorl add pusha mov adc fistp dec push nop out or add mov xor in sub sbb cmp sub aaa clc mov loopne jg adc popa xchg pop shrb xchg ss xor pop or jno ret or jmp orl xor add and and jno lcall insb movsl jns dec test add movl xor loopne sbb push int3 sub ja (bad) (bad) movsl sub adc insb sub enter cmp cmp add cmp loop cmpsb cmp dec loop sub out adc adc xor push loopne fsubs or adc push xor jecxz cmpsl or mov xlat int lcall inc adc lret subl push dec dec or clc hlt imul lret icebp mov sub imul push or inc sbb pusha aam or xchg roll fiadd push in ret cmp out into dec ja xchg cmp (bad) sub add fimull jl inc test test push fs pop mov sbb in adcl cmp sbb xor pop (bad) sarb add mov xchg xchg inc inc sti sub adc enter sbb mov mov movb mov rorl dec mov call mov cltd sub jo and imul scas je cmpb sbb and dec bound jns lods daa pushf push inc js ficoml add push mov pop repz cwtl mov int3 mov inc decl aaa test loope mov cmp je daa icebp sbb int sbb jecxz sbb or xor or push cltd nop sbbl andl cmp fidivrl cmp jle sub js movsb test xchg mov jns adc sbb sbb adc jno mov fist mov lahf jmp mov inc andl test cmp adc pop adc adc js hlt sti mov sbb sbb push add mov jo,pn adc (bad) sbb pop iret cmpsb jle insl cmpsl add inc jmp aam cmpb fcom add push or or add in adc sub sub xchg mov pop popf jo dec pop adc xchg jl push or fcmovnb add pusha jl jmp add call addr16 je in les addb dec mov mov fwait jbe cwtl or pop leave jmp push lea pop jl movsb xchg addl ljmp bnd sub insb mov mov mov sbbb pop sub mov and jae std cmp nop popa cmp add fadds aas repnz out sub mov or sub mov or mov inc in inc out lods adc xor lcall mov les (bad) mov sub fnop enter pop or bound call lret out pop push les push jmp add xchg iret adc (bad) int3 scas mov enter inc jl cs inc mov push movl adc add jecxz pusha movsb mov cmp add out clc dec cmp pop and jmp inc ret loopne insl ret shrb or fnstenv les adc dec icebp jne ss sbb daa ja push imul xlat aam lea es add data16 push sub punpckhwd xor outsl push add std sub add lds add jns mov xor push sbb bound sbb mov adc fiadd aam adc int xor or xor mov adc lahf xchg mov mov push mov pop jns pusha fcoml pop sarb pop or add lcall xchg test (bad) mov or dec jo orps jp lock mov adc xor lret dec int3 push adc adc sub sbb push loope push dec push xor bound leave jo fistpll sbb dec jecxz dec dec add pop ss push push add andl mulb es lea xchg sbb lahf cmpsl mov fbld push mov mov add data16 push fistl (bad) xor repz mov push sti pop les in xor aad or xchg sarb mov lahf sarb sub cmpl imul lock jecxz lea cwtl push add inc rorl inc and xlat jb icebp add not add adc and adc jae mov push adc movl mov inc loopne dec pop sbbb and out xchg xchg adc or subl (bad) mov adc in jo cmp sbb and sbb sbb jl mov sbb add sub sbb js xor inc imul sbb sbb or and mov push mov in mov pushl jae and or inc adc sbb or add (bad) or pop scas dec (bad) out or dec ret inc ds xchg aas adc ss push inc mov (bad) mov faddl xchg or cwtl add outsb sbb mov adc and (bad) (bad) mov lahf add sbb ja push add pop es push fmull (bad) lock fstl sbb push push and lods jge mov sbb sub lods or push sub imul add xchg cld xrelease xor cmpsl hlt cmp pusha and pop in mov mov nop add je scas mov mov sbb jmp pop loop sahf jns insl inc dec rcrb sbb jmp call cmp je mov js (bad) scas pop daa sub push adc cmp inc mov dec loopne pop in jne dec add push xchg inc push mov test adc dec dec cmp jne mov rorb xchg or add cvtpi2ps or xor repz dec cmp mov pop rcrb sub xor rcrl jg xor test imul or and sub xor iret sbb add test jnp sub dec insb fisubrl xor fsub aad pop pusha pop adc mov xor xchg aam ss call jecxz xor and cmp addr16 push mov repnz xor push fimul ret sbb (bad) inc fs and aaa mov loope rclb inc enter xor add loopne inc dec and fdivrs or call push xor or add xor (bad) bound fisubrl shrb push jecxz mov sub or and push test dec shl and add inc dec or (bad) lock mov aas and lcall sub cs cli inc add add lret sbb into push add icebp xchg lods add pop (bad) jl or inc sbb out sub dec (bad) rcl cmp imul arpl adc and iret mov mov loopne sahf test inc clc aam aas in out or addr16 xor nop add xchg insb mov adc fiaddl add test add add push inc add psubsb rorl outsb lahf fist add push lret rcl dec ret cmpsb lock adc mov ror testl iret mov sbb pop out xor popa push adc loop sub mov fdivr sbb jno aas or inc cmp pop lahf sbb sbb mov cmpb or mov xor and popl or js sub loope rclb fildll push and mov mov xchg test insb adc ss pusha mov xor (bad) sub mov imul and cmp inc xchg aam into and sbb or ja xchg pop jae or ja xor rcr lods and sub or aam into jno movsb mov mov fistpl aad call or hlt in out adc fisub (bad) push add movsb lock pop sahf ficomp test push xor ss pusha roll xchg dec clc xor cld adc lahf push add pop dec or inc add push mov pop movb leave hlt lods xchg cmp out popf inc cmp push (bad) and jp inc call push or rcrb mov fdivl (bad) lret scas push dec fs push test or sub push sbb ret lea js ret aas inc in adc movsb adc and sbb sub xchg and lods push sbb push imul (bad) jg movzwl push add add sub scas rcr adc mov fucomp fisubrl add push cmp push sub lock or bound push insl inc imul mov sub cmpsb cwtl loopne pop leave xor aam (bad) xor pusha leave out hlt in fsts add call and int3 sub push popa xor dec inc or inc leave xlat test xchg testb pop and loopne and mov mov or mov (bad) sbb inc (bad) andl ret roll cmp push xchg mov dec lds cmp jmp sub push aad pop int3 rol fcomip adc add jo jnp xorb push mov dec mov add or pop mov inc and push xchg stos sub (bad) adc nop daa mov push add es jnp add clc sbb lds add divb add sbbl add shr mov mov (bad) ss pop mov pusha aaa cmp add shl push xchg xchg js and push adc pop sbb dec pop or scas add jmp loopne fnstsw push pmulhuw cmp (bad) das jmp inc xlat sbb test enter inc add pop xchg mov shll ss in fwait (bad) mov mov and add stos or pop inc shrb pop inc xchg xor mov jb and xor movsb gs pop cmp or fist les mov gs sbb inc cli fisubrl movl mov rorb or movsb es cwtl and adc insb scas pop fs adc push ja jae repnz jmp aas out add cmpsl js outsb adc aaa add xchg mov loope fs insb cmc inc push dec pop or push lock mov sbb ja ss xchg xchg dec sahf inc cwtl mov sub test jmp mov push xor xor dec xchg bound outsb jno cmp mov das dec rcrb adc or dec movb push xor pop mov sub add push jge adc adc mov sbb leave and call xchg xor xor mov test lret cmp sub jne push push leave adc push push sub ljmp adc xor add mov mov sbb adc movb push sbb adcl mov test scas lea daa push dec pop mov test pop cltd sub roll loopne mov add inc and or (bad) jns dec ds ret lea test jo sbb jb pusha xchg test adc or dec add arpl lea stos mov dec (bad) mov jo pop ret adc into rcrb dec push adc lea mov adc sbb ja (bad) enter sbb mov sbb enter sbb adc push or outsl movsl jo xchg dec out rcll push nop sbb (bad) push dec sbb loopne ljmp or ffreep fild cmc pop pop adc loopne loopne (bad) data16 add inc jmp sarl (bad) or ljmp lds sbb mov pop mov fldt lods inc (bad) shlb ret mov or (bad) or ficom mov rolb push xchg cmp jecxz xchg push rcrb in enter jo xchg je lock enter inc dec mov test add pop sbb ja lret push loopne mov mov mov daa (bad) je and inc outsb or adc fisubrl inc adc mov or test add inc in or add sbb sub decb insl popf aad inc push cmp sbb pop dec pop push in adc int mov je inc cli dec mov pop mov mov movzbl inc dec add fsubrs sbb jbe imul xchg adcb in push sub out divb call (bad) and mov and call mov pop sub pop cmp pop and jecxz faddp test lea pop mov mov sub xor sub roll in es rcl add std (bad) cli loopne sbb or add and sbb fs xchg xorps and dec dec repnz in imul dec test adc jb lcall add clc stc cmp sub pusha inc in pusha cwtl insb sarb and and cmp ret aas in das shl out or pop lds dec (bad) jbe adc adc dec and sbb fs vrcpss and sbb sbb or out pushf and and mov xchg fildl andb call orb aaa test xchg inc fisttpl sub bound stos fs push push adc add push push or xchg mov inc push push sbb jae mov jp sub cmp stos stc scas pop dec push int or mov dec adc sbb sbb cmpsl ret fmull xchg xchg (bad) xchg and pop fsubs inc es enter and and lods lods (bad) pop icebp pop mov push ret clc test bound or sub imul movsb (bad) push dec add jo je jg pop rolb or inc add mov inc or jge adc (bad) frstor sbb outsl adc adc push jo subl xchg int xchg adc mov lea dec push fwait cmpsl jge jns ja or and ja or out xchg inc pop test jmp (bad) lock sub inc adc add pushf xor lea mov fmuls icebp and icebp and repnz je jmp lock ja push and ss adc rol sub or add sbb shl add and jle or adc decl xlat adc lahf pop adc dec pushf inc (bad) lods adc adc arpl stc xchg push and mov iret lret xchg pop daa popf ljmp push test cmp (bad) (bad) pop inc lea lock addb dec xor inc and sarl xor inc cmp cmp mov inc test add xor nop mov mov popa cmpsl repz cmp leave push out sbb sbb loope xchg mov (bad) sbb orb mov mov jb and xchg adc push lds add cmp jb sbb lock pop insb or jmp adc leave stos jmp outsb sub loope aad inc jbe sbb push push imul cmpb lock mov pushf ja,pt push sbb cwtl call add lcall pop cld sub insb in sahf sub adc or sub movsl sub fmuls mov imul mov add arpl sbbl fnop or mov xor push data16 cmpsb sub adc ret fldl adc addl test cmpsl adc rorl sbb test ror push je and push push dec cmp js and sbb jbe xor push push mov and inc in or incb aaa inc js subl push (bad) jbe mov pop pop jmp inc push xor aas inc fidivrl testb je ss (bad) xor int3 popa mov mov sub push rolb pop or mov add push adc cmp or fcomps or pusha jo push incb push pand jl scas (bad) xlat push dec or (bad) sub ljmp enter sbb test adc test sbb mov sbb adc decl subl sub and lea mov mov and pop xor xchg lea lods popf push stc add cmp or mov dec or add stc sbb test call es adc cmp cli add lahf add sub xchg repnz frstor imul mull into js adc jecxz (bad) pop xchg adc mov and clc sub pop ret aam sub lahf add cmp mov jmp mov movsb mov inc mov adc lods adc inc cmp outsl sub mov lods jg,pt jbe cmp test pop inc subl xor aas sbb push cmp dec push inc divb lret insb mov pop cs fadd xchg inc mov les mov pop and mov add scas inc loope mov jnp (bad) adc mov stos pop lret add stos jno lret xchg mov adc jbe cmpsl notl cltd mov jo add addr16 mov enter adc subl rcl addr16 loope sbbl fidiv ret mov mov std (bad) in cmpsl aaa sub sub or sbb (bad) std cmpsl mov push and daa push pop stos pop test sub mov xchg addl loopne dec fdivrs punpckhbw iret enter inc adc jo mov fstps push adc pop and movb sub mov dec addr16 jg or push into inc mull cvtps2pd aaa into and (bad) sub jne mov and jo enter mov mov (bad) jb (bad) outsl adcl bound dec xchg jp aas and mov dec mov insb and push test inc cmpsl inc or stos sub adc and mov sub lods and call xor adc pop or push and sbb mov or push jno mov pop and and push bound or out leave fcoml lock adc cld dec pop adc add or mov dec mov xor or popa mov xor cmp movsl mov clc or adc add xchg rclb roll xor xor and mov inc idivb or inc cmp popa add xor addr16 cld data16 lret add push nop xorb pop clc adc hlt jg pop lcall hlt pop xor arpl and mov es inc js mov test and cld sub clc cli xor and push out fcmovb movups pop sub sub nop mov dec xor xchg jne stc mov xchg cmp pop inc push cmp adc loopne loopne pop xlat fst dec add push inc push adc mov mov inc inc ficom mov imul sbb js sbb ret push in fwait sbb lret rcrl dec js xchg (bad) out push and mov pushf or call dec jg shlb mov push dec mov mov add or adc ret cmp and xchg and mov stos sahf and mov xor mov cld xor jl or es xchg test push cmp jg (bad) inc sahf ret ret ss mov nop ss add loopne push push test xlat adc stc dec xchg and inc or mov push aaa test ds mov mov pop inc mov push faddl or xor fs movsb xchg mov push adc inc rcrb push push imull push inc cmp lcall daa lret adc and mov pop jne mov and sub push jp adc das dec push and adc (bad) aaa cltd sbb insl and das lock shl rorb dec mov sub mov mov in add xchg pop test outsl inc cmp inc insl ljmp ror and dec dec outsb punpckhbw enter pop push cwtl leave in movsb sti out jo aaa push push cmovl leave leave leave dec inc inc cmp leave leave leave cmp sub leave leave leave sub sbb in lret sbb cmp leave add add or in shrl ds div sub xlat int3 cmpb cmp or dec push xor mull add sub jg je push sub aas xor or dec mov pop inc imul mov je movb out movb push into mov sub invd outsl nop lock jo je jb mov pop and xchg das and mov jle pop push jmp inc adc adc cmc adc jae adc rcll sbb arpl add rorl jae pop adc jle inc jmp adc or repnz nopl ja mov or push sbb or mov inc aas rorl jle or push popa cmp jle push mov mov pop dec jle mov sbb mov xor sub add or aam pop and mov mov inc cmc imul dec jmp jmp adc loope push push add push push mov xchg data16 icebp sbb clc fdivl push adc daa scas and adc dec adc and cs jmp push xor out and daa movsl popa push sub es add lock mov jl inc or inc fsubs xchg adc rolb jns push inc xchg lock and or cmp xor outsb cmp pop sbb jge cmpl jb add xor dec sahf ret lds or pmuludq pop adc push lea lea call inc inc and ds jb push sub movsl or dec adc mov daa push daa push shr dec push push dec inc pop cmpsl and xchg aas or or add or aas xor stos iret cmpsl es dec in in push adc xor leave adc rcrl push aam jne dec movsl repnz daa cs rolb rcrl adcb and add test das flds or xchg gs push xchg jo add clc push mov je fcomps sbb notb push sub add jne gs mov lods scas jmp ds add adc sub ja cmp andl cli adc data16 popa jns jo sbb mov rolb cs movl cld push cmp mov jp shlb call bnd adc aas and jg adc ret push push inc push nop xor mov (bad) mov repnz inc cmp xchg sub enter std jg add mov jle prefetchw or lcall js outsl jae xchg cld mov pop rcll mov or inc aaa movsl test lods xlat dec outsl nop out or inc imul jnp push andb test mov imul pusha in or pushf js fs daa mov lcall adc xchg imul sahf (bad) add cmp sbb xchg inc fs add push add jo push out inc test sbb dec repnz sbb pop daa cs mov xor inc popf fdivrl les enter mov fcoms cwtl in rorl lods dec aam xchg (bad) test cmp ds sbb inc aaa or repz lods arpl insl inc dec push cmpsl cmp repz mov cmp repz xchg lahf mov inc (bad) (bad) cs iret lds sub fdivl sbb push add add insb rolb loope insb push inc fild adc adc push and and and and aas cmovp cmc jo das cmp out pop jp inc pop ss pop imul adc aaa pop push dec or xor jo sub and mov mov adc mov xor fs sbb mov push fild jp das inc les enter fcompl sbb movl pop jg push jge jmp scas add dec iret rolb inc sbb jno mov into sub sbb xor adcb jmp (bad) or add and mov es hlt sbb and cs (bad) push test ret sbb stos mov data16 push xor inc xchg adc test int3 add cltd xchg xchg jg pop (bad) xor cmp xchg prefetcht1 insl mov cmpsb jo push sbb xchg push call ljmp cmp pop les jb dec out add loope,pn xchg add adc cwtl cmp mov lock push jbe sub in sbb jp inc or inc hlt pop loope sub popa loope push sbb jns into jmp cmp hlt jne jnp fisttp adc mov mov adc sbb mov enter xchg add pop mov add je and jmp mov push mov sbb and cmp pop arpl jne jge pop or out aas loopne pop js sbb aas inc dec sbb cli or pop inc ljmp mov and scas jbe ret and inc push cmp mov sub inc lea adc add cmpsb je bound (bad) das and sarb xor add mov movsl popf dec or arpl std rcll cmp inc movsb es xor and mov pop daa xor cmp add or sahf pop fsubl int3 les sbb les or sbb imul jmp scas push mov push add or das fadds dec cmp inc jmp cmp xor cmpl inc sbb in dec pushf in sbb fadd jo xchg cmp movl lea jbe ljmp pop sti in mov loopne mov inc fnop jmp xchg fisubrl dec and mov js movsb movsb add ja xchg pop adc in fldenv aad outsl sub or rorl jno add inc adc jne mov push xor inc xor fadds cmp dec roll in lock jecxz adc xor nop idivb inc call xchg lcall cmpsb mov fs mov lock cmp inc cmp xchg fldcw mov mov or pop enter or pop sub push test xchg mov out xor sbb add or stos push ret fisttpll clc cmp mov pop sarb sbb pop inc sub cmp push or push xchg imul add sbb or cmpsb jecxz movsl mov loope mov das inc xchg and dec je or sbb xchg scas icebp and loopne and cmp sbb jmp push inc dec mov (bad) daa cmp xor insb or lahf mov inc iret aas lods sbb leave inc push adc or xchg jno cmp jne sbb add push adc sbb orl test ja pop pop movsb out cmpl test arpl inc push jg xchg jne jmp je cmp sarb subl data16 jb sub push mov cmp add out cmovno or and test push scas or mov pop daa push xor dec xor (bad) outsb sahf mov sbb rcll movsb xor and and inc cmpb je repnz lahf xor mov test outsb sub hlt sub mov add insb inc or data16 mov ret pop mov addr16 and adc arpl dec pslld xchg inc gs movb arpl pop (bad) xor pop lcall or ja dec adc push inc lock add dec push pop and jae inc add mov (bad) sahf lods mov aam ret dec pop add adc adc add sarb mov ljmp test or stc or (bad) aam les add inc ds cmp xor out sbb or mov add xor xchg cmpsb push orl fstl or sub lock push aas inc mov pop add or mov sti and das cmp jle mov mov jmp pop mov imul mov scas dec inc push cmovae xchg pop pop stos jnp dec pop push and out out enter or xlat repnz and enter es dec aam iret and hlt sub pop scas or pop mov hlt dec cmp jbe iret dec sbb fcmovnb lahf cmp je notb sar mov gs jmp clc pop lret (bad) mov push fnop loope (bad) sahf (bad) add sbb sub push and or cmp in ret pop pop outsb inc jo rcll repnz and and cwtl mov or inc sbb push ficom imul es shll test add orb push lods pop add add mull dec dec mov adc ja imul loope push stc out pop rclb sub aam aam fimul inc imul inc movsl hlt daa subb pop push repnz push cmpsl cmpsl testl lods movsb dec or popa rorb push pop add (bad) arpl xor hlt pop cmpsb (bad) das cltd add mov dec sub xor add test mov dec pushl cld adc cmp mov mov rorb inc in pop or and xchg ret test outsb movsl fnstsw test push int3 push inc sub lret cmp insb xchg cltd ljmp pop testb sbbl and and adc add add pop sbb pop jl mov dec mov cmp bound add pop mov pop inc add push push out sub mov inc push cmp (bad) loope dec loopne cmp daa outsb dec iret xchg rsqrtps sub pop fnop gs dec inc push fmul ret xchg (bad) pop inc cmp fistpll lea es mov scas mov sahf mov add mov dec clc pop and sbb add pusha les sub (bad) sub hlt (bad) cmp inc call xchg mov (bad) movb call dec lds in shlb jne mov ds imul dec adc loopne cmp ja jmp push pop ret pop popa shr pop mov jne out (bad) faddl or mov inc into push adc push fiadd mov dec xchg mov pop fcmovu ret movsb sub push or and scas adcl xor sub sbb cmp lods jno subb or shlb dec dec fadd out cmp aas test xchg inc sub in mov pop sub xor sbb add mov stos cmp je xchg pop (bad) jnp sbb cmp in inc mov cmp roll fildl jbe sub loope shr xor incl xor imul push or dec lds mov sbb loopne or rolb loope mov xchg dec das inc clc nop arpl pop xor in and push lock adcb add pop mov push leave adc les imul out sbb lea mov sbb jo or pop push ja dec sbb and push mov push ret das adc movsb stos in lea fndisi(8087 or cmpl add push inc int3 mov (bad) aam push cmp pop cmp cmp push inc pop xlat push cmp push insl adc call add fcomps ror repnz dec insb and (bad) pop scas push out xor cmp sbb shrb pop or push xor dec jo fs add xchg push mov xor mov fistpl mov in sub xor inc movsb dec push movsb repnz fs mov inc int3 dec aam push sbb push aam call push in push cld push sbb inc pop in lret mov bound clc (bad) jo pop arpl arpl cwtl inc scas dec out or es addb enter push sub pop cmp push xchg mov js fsubrl push inc outsb mov mov int and sub inc das adc pop outsl jae push jg fistpll in inc daa push bound jb das pop bound movsb ret mov mov add jnp,pt add (bad) cmp dec dec or push push push mov popf nop sbb (bad) and sbb dec ss insb bound fidiv inc jb push imul push dec lret add mov and adc dec int or cmpsb dec dec imul pop dec dec adc adc pop lcall nop inc scas jmp fs add jp pop ret push les gs xor or movsl sbb adc insb out (bad) pop mov cmovnp sbb jns xor jb addb nop xchg cwtl xor xor pushf mov xor lods mov mov mov xor xor rcl fdivs xor xor loopne call in lock clc xor xor add or xor xor adc xor xor sbb and fst xor sub cmp push int3 iret cmp pop mov push lea pop test push jge and sub loopw add nop lret rolb test dec push mov add movsb xor xchg nop sbb cwtl inc pushf add nop pop mov inc sub or test rolb movsb xor mov mov lock movsb jb adc sbb nop lret xor inc sub push inc rclb dec gs fdivs xchg add test adcb in push sbb aam inc sub lock hlt xchg lods or cld clc or cld repnz dec sub and gs sub add or test pop movsb xor xchg adc lret push sbb mov gs sub sub insl dec add sub xor mov inc cmc xchg inc pushl imul ss je gs gs adcb rcrb inc insb outsl jae and pop push ret dec mov cwtl or mov movb add xchg (bad) mov push adc outsb int pop daa test je add mov addr16 xchg mov jae addr16 fs fildll scas pop dec arpl jae xchg popa push xor xchg fsubrs jbe daa lea or jbe or jns jp jae sbb int (bad) addr16 jnp xchg xchg pop pop (bad) pop xor pop dec mov mov push icebp push add inc lds adc or pop mov pop dec xor movsb mov iret shrl dec sub xor inc or dec outsb add and mov popa add mov and xchg fisubl (bad) cs push adc pop in sbb push (bad) pop xchg pop pop xor das cwtl mov xchg or push mov (bad) pop mov addr16 fwait movsl jbe jne insl outsb das pop fs jecxz sbb outsb rcll pop xchg mov rolb xorb icebp mov inc outsl arpl (bad) jg pop adc xchg pop outsl xor xchg repz insb inc or outsb adc cmp dec enter iret hlt movsb outsb (bad) out insl xor and mov jg daa cmp xchg xlat aad insl mov mov mov fcomip nop push mov insl and add outsb fs push enter dec sbb push dec cltd push inc mov push xchg add xor add push or add xchg add outsl pop dec push in inc pop dec inc js fdivrl xlat scas addr16 and mov xchg add sbb scas sbb pop push js xlat add lods pop iret enter inc and insb push pop sti push and push mov es pop add neg add push es push test jge jp jne orb push add xchg outsb dec pop mov popf lret and cmpsb gs pop mov fadds push pop or cmp cmp imul fsubl in cmpb or inc push push lods push dec or fs inc test faddl ret mov les int3 push inc push ja adc and push pop sbb add pop xor mov mov xor scas aas inc aaa fistl mov das pop int3 add cltd (bad) mull sbb fmull loopne sbb insb mov sub and pop adc rcr shrb jne aaa push out jns mov adc lea add inc adc clc push inc cmp mov xchg cmc sbb outsb rolb inc mov lea push xor add add add mov (bad) adc add stos cmc bound and pop cmp jb (bad) out cwtl insb and dec arpl mov or (bad) xlat (bad) sub inc push movb push push mov dec mov jmp add sub adc adc pop insb sbb test or loope pop cmp into push mov or mov mov mov scas out lret push dec and es push cmpsl lea je shlb popa add ret sbb rolb rolb or and adc add and push out push pop test push cmp loopne pop sbb daa out push outsb inc out adc loopne add push pcmpeqb (bad) adc jo jne lahf or in dec lahf push pop add pop adc fcoml or inc push cwtl pop or sub mov addr16 adc mov xor cmp mov and lods fwait rorb or daa push push push mov xchg or lea sbb push lea or aaa dec push and mov mov cmovs xchg repnz testl push aam fimull sbbl nop jbe xchg mov ret sub mov out cmpsb xchg mov das inc add xor arpl in dec jne shr sub dec jo or sub clc nop xchg fadds repz mov mov mov push arpl or add (bad) adc or jo dec shll mov cmpl pop inc test insl ret popa xchg add ja inc add mov and mov arpl sbb imul movsl add mov push sbb push jle jno push inc (bad) out push adc dec sbb mov mov xor sahf aam xor or and cmp call std popf push loopne (bad) xchg xchg jmp adc push jp adc mov pop push pop pop and add outsl add adc push inc mull push cmpsb xor add push cmp inc pop dec outsb push cmp mov add addr16 movl push xchg jmp das cmc pop les adc push rorb push mov test shrb cwtl sbb add and test xor addb xor sub and mov in std insl fs addr16 push push pop xor (bad) mov jnp add arpl and pop loop push xchg xchg outsl in repnz dec pusha mov pop test repnz sahf xchg popa andb add fimul dec je,pn pop dec fmulp lea inc insb jl,pn iret enter enter pop xor cmp sub js jbe test mov jp in or pushf cmp cmpsl jle mov cmp dec and xor sbb mov or dec sub xor clc mov ja xchg and pushf adc jecxz inc mov or push clc lock loope cmp jmp in xor jae sarb je jno mov sub adc cmpsl xor int3 xor inc stos imul arpl add ljmp loop mov pop xor mov je (bad) jb aaa (bad) inc jecxz lds xchg mov mov pop movb push sub push xchg movsl inc scas inc lahf ss mov pop hlt (bad) lock rol movsb int shrl inc insb mov mov ds rorl xchg mov push sub in insl ds mov mov ret lods sub sbb cmpsl push adc xor inc sub xchg data16 sbb jmp popa imul scas jae fidivl insb and sub pop mov jo insb mov (bad) cmpsl std xor popa imul shrl lods mov enter cli cmpsb test or inc scas fwait movb fcoms jp aas hlt aad sub sub imul dec fwait pop mov stos out out dec dec xor pop inc pop pusha insb inc push movsb (bad) adc mov push cmp push mov daa xchg mov pop jno pop lock ds adcb dec dec loopne nop jo mov lcall push cmc into push pop fmull ss (bad) add inc imul cmp dec enter add ror cltd test push jnp pop dec pop mov push in push mov pop push imul adc (bad) mov pop add sbb mov push outsl jo jo (bad) aam push push insl out mov push push addl loopne add nop cmpsl dec lock arpl or test or dec push sub mov xchg jl adc add sbb add xchg ja hlt dec fcomp add in push or xchg sbb xchg loopne fistp fmuls jo sbbb xchg loopne inc cmp jmp nop cmpsl insl jae bound adc add sbb (bad) mov cmpsl mov xchg adc stos jmp andb nop sub cwtl cltd inc (bad) sbb cmp add inc push xchg (bad) nop cli rclb mov movl sub or pop or push (bad) je sub or movsb push inc xchg add and xor test adc rcll jp and arpl inc inc test enter inc adc adc sbb pop inc ds sbb insb cmpsl inc add mov (bad) push push ret mov out cmpsl fidivr push addl jo cmp sbb outsl inc js sub or xor rcrl outsb inc jnp push lods or mov push xchg or cmp or mov add data16 pop xor cltd add (bad) fwait mov and dec and and orb es sahf xchg jo mov in add pop push pop sub xlat push in js mov sarb push inc (bad) push bound dec push lcall pop pop rcrb push imul rolb sbb push add loopne push outsb scas roll mov or xor aad xor in cmp xor out test imull adc mov push jl (bad) push jno cmp ljmp (bad) hlt test or jp in das loopne inc hlt push lcall pop test mov data16 and push and xchg inc adc cmp inc xlat insb repz dec sbb adc insb mov insb push clc in push loopne push adc nop out insl pmaxub xchg dec cs push insb sbb or sub adc fistpll mov mov mov std pushl cmp cmp es push pusha rcr adc push inc bound call xorl jl dec inc add ja adcl mov dec inc leave xchg testb push or popa sbb push pop and cs jno shrb cltd and or inc mov and cwtl mov pop add ds lods mov mov push inc popf lods xchg xor mov fsubrp repz adc inc add cmp xchg sbb scas pop mov adc scas xor sahf into movsl add push (bad) adc and adc push jb adc les dec pop repnz add fistpl nop add pop xor ror xchg popf fisub or adc push add add xor pop sbb dec push xchg dec adc sbb scas mov fidivrl sbb ja pop mov dec repnz jno push in cmp mov and imul xor int test push jb or add xchg ret and pushf hlt insb je inc cmp ljmp cmpl add inc push je mov and es daa jae jb pop sub inc cmp leave sub rorb cwtl nop shrb inc adc inc inc sub les or subb or add icebp rcrl mov popa insb dec movsb cs mov lods fidivl pop or or out jb sbb mov pop dec gs xor cmp dec and mov gs add test fdivr xor jb ds imul push jo popa mov adc xchg and das (bad) je fsubs cmpsl lcall mull push pop mov push les call call (bad) mov mov push fsubrl js loopne dec inc jle jo imul nop inc scas in xor push pop push dec push add sbb or cwtl je imull jo insl push push xor gs fcoms and inc mov xor es shlb jmp sbb pusha mov pop xor outsb inc push dec jp aaa and adc adc popf test daa inc add xchg jle jge in mov adc ficomp into mov in scas xor jmp adc sub sub lahf adcb test push or or mov mov cltd adc arpl xchg jno sti mov pop (bad) str xor xor cmp outsl xor nop adc or enter xchg faddl test dec lahf cmp pusha in xchg jg fimull mov mov jmp lock mov mov mov xor inc sbb sub inc (bad) rclb (bad) push dec dec cmp jle inc add xchg jo mov insl test je or je jne jp pushl xlat out and sar push aad movsl jnp rol call or and add inc or mov mov inc xor mov push push dec adc jo rolb inc pushf pusha inc mov arpl xor mov pop and push cmp xor mov lret (bad) in rclb leave loop adc jo adc in inc and (bad) and jmp jne xchg sbb cmp mov dec jmp sbb and call addl cvtps2pd cmp mov (bad) add mov adc inc (bad) pop jl cmp jg cmp mov mov jbe jb inc pop or adc cld pop fdivr imul fdivrp fstl cmp (bad) and jge mov faddl sbb idivb push addr16 lea or fmull mov xor bnd xchg adc out jmp and sbb xchg jb call xor (bad) mov (bad) sub jmp or ss or xlat call push pop movsb dec es cwtl icebp inc mov or mov sbb dec inc dec push orl stc lea jns pop sahf rclb movb in xchg fisttp ljmp sbbb adc fsubl int ret hlt js sbb xchg in mov test fwait add sbb xor jns mov sbb jne push cmpb imul push aas cwtl fisubl jmp push add jl jg cmpb outsb test aam cmpb pop inc fidivr mov inc inc or push inc ret mov mov push mov out cltd pop cmpsl pop lcall test jmp sub fs mov xchg mov or mov mov mov cs mov mov ja push jge push cmp test mov dec pop push gs js inc dec fiaddl jnp imul imul ret xor sbb fisubrl cmp push dec inc mov sub xchg dec or test dec pop and jne and ret or mov mov cmp pushf rol daa add inc sub jg nop je leave sub push add outsb cmp push adc jl mov flds dec or jmp not and xchg inc and (bad) ret pop inc imul popa mov aaa jmp dec testb sbb ret jbe pop ds pop dec neg jmp push add sub jae push mov xor push pop lock andl inc add call push and xchg xchg or pop add jle inc fcomps xchg mov mov in mov mov and (bad) xor add adc shlb mov xor sbb sti push in sbbl ret sbb and bound js dec jae push push add roll add xor icebp fimull or sub jmp clc sub fcomp popa inc mov sub lds cmp or or lods xchg add xor mov pop jmp and inc imul inc scas es (bad) and sbb push sbb inc mov lods std rcrb dec flds and push daa shlb jns add pop push (bad) fnstenv jns and pop je and data16 adc mov clc mov sahf push mov popa or je mov cmp pop pop sub push mov xor jmp mov bound dec jp enter add (bad) sbb mov dec add and insb in and or les pop out add sbb js nop cmp scas add movsb fistpll mov add mov dec cmp std push std pop sahf jmp imul push or pop pop enter int3 jl test repz mov gs xchg or (bad) push fisttp iret lea stc cmp inc xor mov cmpb test and sub imul inc lcall add adcb nop mov ja add clc add add sbbb xor lods aaa stos in sub pop aas xchg movl movsl add mov stos mov icebp push push add add jmp sbb mov adc inc pop xchg icebp add rclb push sbb (bad) xor ret push mov and fs scas rcll and fs enter movl roll mov or inc sti aad test test shll sahf mov inc mov cli test rolb inc add push cmp pop mov (bad) pop pushf loopne mov xchg lds outsl xor pop push jo imull or inc data16 lods dec inc (bad) hlt enter mov add cmp adc fdivs mov or data16 add push lea ret leave sub mov jbe add sbb inc shr xchg outsl aaa stos imul adc and dec jge sbb aad cmp pop mov mov ja,pt popf pusha sbb movsl mov jmp imul sub das cmp gs and sbb add scas fisubr lahf movb jp and insl cmpsl jmp icebp mov enter lea dec add dec (bad) cmp and xchg (bad) mov xor jge mov adc jle pop lock icebp sbb imul test inc loope mov jmp jge rcrb jge push stos inc jge leave rcrl add int3 adc aas cmp je adc sub (bad) mov mov pop cwtl push arpl in inc vmptrst pop out adc jecxz out sub pop test sub or sub imul add and pop (bad) sbb cmc xor lock push mov roll push inc inc and push add xchg pop imul adc dec cmp add sub dec fsin inc mov and sbb push push push pop push (bad) mov (bad) inc dec (bad) jnp cmpsl sub jo loopne sbb iret and (bad) mov mov push lcall pop (bad) xchg push mov pusha movl test and add out mov sbb sbb loopne adc outsb inc lahf add cmpb mov mov cwtl and frstor addl pusha add icebp and ss adc stos cltd lods cmpsl shr mov or jno addl movsb push imul adc pop rorl pop cltd mov dec or sbb dec xchg les mov lock imul mov jecxz and xchg mov add sti dec insb sub cmc test cmp and test push inc sahf xlat and inc pop pushf push push and dec mov xchg push decl or add pushf mov sub dec add test std loopne (bad) test jl mov push aad dec shlb inc (bad) cmp stos pushf pop lcall and adc fiadd sbb add lret nop cmp xor adc or sub adc je pop lea pop lds mov je lods ret or xchg pusha pop push lcall and dec das dec roll pop icebp ret jmp scas insl fs ja inc loopne xor out dec addl and xchg add mov or mov mov out xor cmpsl lahf mov sub dec and in add jmp sbb pop push test pusha mov push sbb call rol mulb leave mov sub xor (bad) add sbb pop sub fisub adc jl out std mov mov mov xor lcall (bad) ret adc mov inc mov or pop jecxz mov nop and mov imul push cmp insb jg xchg cmc pop add pop xchg pop mov lods mov xchg mov movsl mov mov daa mov dec decb loop xchg cmpsl decb cmpsl rcrb sbb mov (bad) (bad) jne or cmp jp clc repnz stos sbb repz cmpl das pop aaa cmp rorl sub cmpb mov add xlat lods das pop fimul enter fmull pusha lret add push mov mov mov lods dec loopne popa and dec dec push (bad) push ds popf sbb js inc mov xchg test mov rorl cwtl pop (bad) out cmpsl pop pushf cmp inc xor mov (bad) in pop mov stos inc iret push nop xor cmp or push pop push sub and jnp movsb loop or das and add addb sub inc lret add push (bad) mov scas (bad) in in xchg stos push mov inc (bad) dec adc or xlat jge lcall int in push and lods mov inc adc xchg dec scas dec inc call xor jecxz js jo mov dec cmpb adc xor mov add add icebp inc mov mov ret fcompl mov pushf jl xchg inc jae mov pop (bad) cs lods iret repz cmp adc mov pusha or pop lea push sub aas dec push or lods pop mov cmp jle push jmp and or dec or pop cli pop bound arpl add lock add and in pushf inc or and push std xchg in testb je mov lods jo inc mov pop insl stos mov and jns pop xchg dec (bad) icebp xor push inc lcall add daa mov (bad) jg or mov jp pop jnp mov mov adc xlat popa in sbb sbb cmp mov (bad) mov add and fld pop add or pop mov jbe aas inc dec mov test cmpl addr16 mov jns ret je fstl jns inc push mov addr16 addr16 movaps leave leave leave sub sub leave leave leave sub leave leave leave adc adc leave leave leave adc leave leave leave sbb sbb leave leave leave sbb leave leave leave add add leave leave leave add leave leave leave or or leave leave leave or out in icebp repnz add mov mov imul clc pop dec lock out sahf inc call jns out sub and sbb jns out adc jl add cwtl cmp repz nop loopne fdiv cmp repz enter cmp shrb mov cmp repz push mov iret repz nop cmp iret subb and cmp repz adc pop pop inc iret repz xchg push iret repz lock call iret repz sub and repz repz adc iret mov test scas mov lock call in mov adc popf inc or mov jae mov loopne mov dec mov inc out jns repnz js cmc fisubl pop roll les addb cld xor mov test pop (bad) jnp fwait aam mov aaa pop push sbb cmp mov mov pop add add popa jns adc inc mov insb inc insb jns add fsubrs inc or (bad) mov push pop or pop or int outsl mov xchg jae mov and std adc cmp pop test add mov cwtl in or and rcrb sub andl push mov inc mov rorb (bad) ja add adc clc mov cmp in int3 sahf or sahf idivb and sbb neg repz and inc pusha push dec push mov or and fs (bad) inc imul pop mov mov pop enter aam inc addl push popa adc mov cmp or rolb das mov fildll mov mov mov mov (bad) fcos xlat call jmp cmp loope clc aad (bad) push dec mov sahf cmpsl pop fs hlt fdivrs int or clc roll rcrb cmp out lock or nop ja aas or daa add sbb sbb inc cmp pushf les int3 movsb push or push and adc add mov fsubr jmp cmp mov imul jo inc sbb pusha addb push push cmp push inc shlb imul popa mov push add jb dec adc sbb les aad add adc jecxz (bad) (bad) repz pop add in mov jae push sbb sub or jns insb pop sbb mov (bad) cmp inc fadd mov or pop sbb inc sbb (bad) cmp dec push add pop xchg add pop jns lcall add aam mov enter and xchg or sub rorb outsb mov scas pop nop mov test mov xchg ror mov xchg push aam inc cmp enter fwait int push mov rcrb lock or nop add pop imul and js mov enter test pop ja,pt push cmpsb ret es subb ds cmp mov dec mov add xor sbb into and adc faddl leave mov pusha dec push add mov push add bound xor or add cwtl cs cwtl (bad) inc sbb insl or rclb push xor stos push push add jmp flds movsb incl imul ds adc mov mov add adc gs cmp les enter cmp push xor mov push add sbb roll cmp xor jo gs and jl or add or jmp arpl and test rcrb or clc push push add fmul test (bad) hlt movl and pusha mov pop clc rol inc xchg or inc cmp rorl ret sub imul pushf mov mov fisttp jp fldt push pop mov mov lret cmp push lock cli popf mov sti and inc mov add or pop or push lods insb test add (bad) jo or inc or fistpll (bad) jne rcl aam test inc mov sub test cwtl idivl inc mov or pop jg fincstp sbb dec adcl lock xchg mov xlat sub pusha xchg and mov pop mov ror scas jl fs insb clc cmp je or add xor aam unpcklps push (bad) or push adc cmp or mov int3 pop mov push or jo fdiv pop pop (bad) (bad) sti call and test lock or je xchg cmp push jno mov popa mov lar das sbb das ftst inc es stos or inc out xor push pop imul jb and or cs inc loopne ret call sbbb test adc jge mov cmp jl add movsl mov das or xchg scas iret jbe out scas stos fsubrl xchg je jae pop or push mov lods add out movsb dec xor pop pop rorb cmp cmp test dec add popf or push lods inc mov lahf and xchg into mov fmuls mov cmp inc mov xor in sbb roll cmp xorl add mov (bad) sbb lahf call xlat jne sub inc adc push mov gs lcall dec in mov dec mov push adc lds add push add repnz inc pop loop add adc push xor addb adc dec add or pop adc pcmpgtb stc stc in adc jo (bad) aaa leave clc jmp loop cmpsl aaa and cmp push dec or mov bound lods arpl jmp jbe andb add sub pop pop test mov negl or adc adc scas sub sub clc or dec and cmp lea mov xchg loopne roll dec push bound ljmp add sub aas jo dec sbb mov (bad) xor rcll cmp push fsubl js xorl add in adc mov lret cld (bad) aaa xchg cmp jmp mov jmp mov push mov mov iret add movhlps js push mov fisubrl jne jg or pop adc fs sub adc sti add sahf xorb std pop or fdivs test lret or (bad) (bad) (bad) sub aad (bad) or sub push sbb push jge pop sbb xchg mov and test in cltd or shll enter sub inc adc mov cld adcl jge xor cmp test push (bad) mov pop cwtl aam (bad) push cmpsb out push clc lea sbb movsb pop push or and cmp push icebp fistl sub insb call inc push je and push dec fist pop imul and pop push ret (bad) jbe mov or es loopne (bad) jne mov fadds jo push imul sbb cmpsl mov push fsubr sub gs test push and inc cld add shrb push in jmp sub cmp pusha and rorb test lock ss sbb xchg imul dec repz scas cltd xchg (bad) call (bad) add mov rcr jbe jmp pop (bad) mov and aam sbb aam sub and (bad) (bad) out rol dec sub sahf out inc loop cmp adc ror sbb movsl adc fidivr jmp adc fcoml lea jbe mov dec mov push add mov das sbb sub adc sub fisubrl dec in adc dec in in dec faddl (bad) lock add add add adc loope in cmp iret mov add add les jmp sub das lret arpl scas sbb and ret and test xchg cmp or inc cmp pop adc mov ss push adc divl jl das loope or push (bad) mov in mov shrb cwtl adc mov sbb xor add subb lods inc sub push or imul mov dec (bad) fdivl outsl inc mov out xor push sarb (bad) push sbb jp adc xchg out and popa andb inc mov mov xchg subl fidivr sub scas aas lds adc aaa sub inc cmp iret or sbb mov pop and movl sbb dec jmp pop push (bad) and cld int3 pop or clc jae sbb hlt (bad) mov jns xchg adc sbb jae mov push xchg inc add mov shll add cmp bound adc dec aaa rolb xor xchg cmp (bad) dec adc (bad) xchg push fldcw cmpb mov jle int mov and fsubrp pop adc push cmpsl dec les sub in pop cmp scas add rep fist loop add add les imul lock sub ss push sbb push (bad) jle jo mov push add test jbe out mov cmp test xor fsubs testb mov test roll jge daa jmp aaa inc mov adc aam mov test jne mov ret or test adc imul movsl lods out jmp mov add push (bad) mov (bad) or cmpsl ret add dec add jl roll mov add inc fdivrs inc out dec dec mov cmp cmpsl mull test or imul mov adc or push sub push roll dec sti push mov dec adc setb fimul xchg add sub add and fcomps bound inc mov push xchg pop das sbb aas pop or sub adc dec dec aaa imulb lcall jecxz cmpsb sbb sub imul add jno add dec mov xor pop lret bound jp sbb mov repnz mov lea adc (bad) pop inc xchg out adc adc push gs out jno jmp pop sbb push outsb loope fimull movsl mov sub sub gs add and cmp mov pop bound mov push inc cmpb std popa adc addr16 decb add or shlb dec push sbb push mov popa je xchg mov testb push cmp mov xor inc pop jg rcr inc mov insb adc mov (bad) incb xor lock dec je jb sbb sbb or sbb mov popa cmp push mull sbbb jge jo push inc xor int3 sub in stc or sub mov (bad) pop inc cmp je lock push mov out adc sub not (bad) imul mov add mov xchg sbb or push hlt test jae jmp cmp aas pop inc pop mov cmp je outsl jl in xchg incl nop scas shr stos add sbb pop rcrb adc xor cli daa data16 and shld test pop pop jne test push push sahf add pop loope popa aas jo sbb movntq pushf fmul adc sbbl das je roll cmp fimul jae lock xchg ss mov loopne jo mov aaa ss jnp aas je xor ja adc dec add outsl call aad inc push mov sbb jmp sbb sarl dec mov dec sub mov or ljmp dec xlat adc mov lods je lods icebp adc cwtl sbb pop jne rcr je jp mov adc cwtl insl xor mov das pop push sub test xchg fadds rclb inc jnp inc mov add movsb lods xor mov cmpl movb cmpsb cmp (bad) mov test outsb mov pop inc out fadds mov mov cmp movsl add bsr jecxz push lret xchg xchg inc js and aam rcrl minps sahf pusha movsb fsubrp and inc push adc mov in push xor add shr out cs mov cmp adc fisttpl add imul inc jecxz repnz out adc jb rolb add and sbb sub bound pop mov scas popa dec adc push maskmovq notl lret jp mov lret pop add adc rolb outsb aam mov sbbb sti cmovp push inc xchg sub mov dec xor xchg (bad) add sub inc pop pop mov xorb jle push aam cwtl or add pusha pop mov rolb or or mov or outsl add xchg fbstp push fs sahf xchg pop sub sub data16 cmp shlb popa das sbb in jns sbb pusha adc cwtl mov xor xchg loope pop mov (bad) lods add mov mov shlb mov dec outsb outsb dec mov repnz adc add scas jb lods (bad) mov fildl push pop mov pop fstpt iret leave enter les and daa mov dec pop in outsb or loop loopne jo jl pextrw dec or mov xchg mov enter jne xchg dec int3 adc xchg in adc sarb roll fmul scas jge push adc fcoms inc js fcomp faddl popl in push adc or or es push insb hlt jle adc push and jl or cmp or je xor lcall mov pop fstl fisubl int3 sub or je xchg mov mov push mov adc sub fmull loopne imul or js adc test push cmp inc push push (bad) outsl lock ret jo,pt pushf push scas movsb loopne ds sarl loope push push push push adc gs jae clc popf movzwl sub insl pusha (bad) pop stos and xor xor dec imul out push (bad) pop mov add arpl insb push or out mov outsl pop js bound fnstsw jnp es jb jb popa or jge scas add popa dec es insb bound jbe xlat xchg jbe es gs pop jo jnp repz addr16 jb addr16 imul out add mov arpl insb daa sti outsb inc pop push jg sub fnsave je cmpsl sbb mov xchg pop jbe mov loopne mov fdivp mov pop jb arpl mov outsl dec pushw das in jnp mov imul popf mov lock mov push lret add bsf int3 mov int cmp lcall lret fxch xchg jp mov adc dec xor scas subl cmpl adc sbb test mov xor adc ds or notl inc addl jl or inc push test or test or adc je or outsb mov sbb mov adc sbb jmp mov lea pop add adc adc mov push mov out addr16 mov xchg aam inc push or jmp repnz and mov pusha inc insl xchg (bad) pop popa add leave orl xchg je lock push and jb ja arpl jecxz adc enter or cmpsb stos adc dec or fs jg adc adc or sete push and (bad) sysexit test ret fldt sar jb or jb jmp jo jecxz sbb or and adc das sbb mov aas sbb dec in push pop xor pmulhw sbb dec sbb test fimul rolb fcoml push dec adc mov adc sbb adc or adc das (bad) adc adc jb or xor push es or dec jmp (bad) xor sbb or movsb push add add xor push and push mov jle pop push loop (bad) xor jl cmc in pop in add add xor add or or cmp repz or or or repz repz adc push iret repz pop sbb sbb sbb imul sbb and and push call out sbb repz cmp insl repz repz mov cmp shl cmc push out sahf out sahf sub dec pop insb jge sahf out mov jge out out cld or testb or jns inc or mov fcoms add xchg add add movsb jb in push push adc adc push sub or lret dec or jb in push or mov adc adc adc adc dec in lret adc jb inc pop dec push cs push xchg dec sub jmp pop sbb aaa pusha ja push popa imul bound and dec gs arpl and sbb push push test and pusha xchg mov jo mov mov add cld xor pop and fcomp imul ds adc sahf js lock adc popa or sbb incb push push clc push adc loop gs xchg add adc mov test (bad) adc int3 mov ds push lock sub sbb jl loopne mov decb test push loopne dec int3 mov push sar push add add add push cmc mov push jb das out les dec push xchg push pop xor inc push (bad) mov ljmp imul mov dec jbe push cmp test add ficomp adc loopne inc pop inc push dec jl inc inc adc push inc pop adc push jbe add repnz (bad) repz push pop je inc icebp xchg push cmpb (bad) addr16 sub cmp je push lods cmp leave (bad) xor data16 add jne pop or pop sti (bad) out and test mov or enter test outsl cld sub inc pop mov inc jo outsl mov cmovb inc daa test movsb sbb add insb push and pop add push repz mov (bad) (bad) mov loope lahf out sbb mov jne fnsave insb popw pop pop lds subl mov or js scas out pop popa jno popf or call mov mov psubw add subl push js loopne nop or pop mov and ljmp out adc lahf pop inc popa pusha loop push aaa and jo pop adc and adc stos adc push jb adc and and cwtl jb add rcrb iret or and xchg lahf add (bad) pop sbb sbb sub adc stos sbb dec push sbb inc pop xchg mov lods in ret rolb push les pusha jo push push outsb xchg stos test cmp and and pop enter test push or add push fdivs dec cs and shrb add or test addr16 inc cs sub dec push inc sub inc xchg pop lahf cs inc pusha xor js nop or js dec gs jbe and adc pop xor and xor repz pusha dec loopne ss fadds inc sbb cmp push adc pop pushf push adc nop repz cmpsl lods and fcomp xor sub cmp pop add inc mov ficom xor fs popa jae in or outsb sub mov add mov mov add test dec icebp adc push test mov sbb lods je add sub jle sbb fisttp jl ja push mov mov out dec cmp mov pop test sahf push or andb or daa test inc nop sbb dec pop adc xchg add cmp add loopne inc jmp aam and out push push push xchg sbbl mov mov dec xchg js pop push sub mov cmp cld ss and in fnstcw inc repnz cwtl and and pop or adc loope bound mov mov fcomip push aad and je sbb call icebp push popa sbb sbb mov test shrb leave pop adc ret cmp dec pop lods inc inc nop or sti xchg (bad) aas adc enter dec pop inc pop frstor add ja xchg add scas mov sub adc stos mov pusha and push leave push cmp sbb and sbb inc jb sbb inc cmp and or and inc xchg sub cmpsb xchg test cmp int3 fcomp sub mov ja and loope pop sub dec xchg subl shll pop dec push jo add add sub cs xlat sub push xor std xchg push loop adc add lahf scas shlb adc out mov cmpsb push shrb lret push (bad) sbb and stos js sub adcb les and add and jg movsb sbb add inc push cmp mov push dec xchg fucomp sbb ret xchg pop jo scas adc push xor and adc push sbb push inc leave push xor and mov and adcb nop stos add cs in xor xor jge push inc xor cld add add imul xor loope in sti std test bound fs adc jae pop or or divb jne insb adc dec lods fsts mov add push lcall ja mov aaa push cmp test adc or sub pop cmp hlt xor (bad) adc enter jns add movsl push and dec pop addr16 in js,pn mov add pop decb pop loop setb jge sub pop sub cmp push add cld ss cmpl xor mov imul out insb int imul adc mov pushf cmp inc xchg sbb adc add add adc mov mov pushl sti push jmp mov scas ljmp push clc cmp sub fcoms fistpll pop cs adc or xor push sahf notl lds xor sbb outsb mov lods jle fildl sub or fcoml push add inc push add xor jae int3 cmc fmulp sub adc push inc fdivrl daa adc or jo imul mov inc jnp (bad) aaa insb int xchg sub lret or or jmp in push or shll hlt add xor mov or (bad) jnp cwtl push mov adc xchg das scas pop orl push and (bad) mov lea adc push mov xchg clc xor hlt pusha inc test push mov scas xor dec pop and scas int inc add and pusha mov jb gs lock test inc mov movsb inc inc fs adc fwait dec rcrl pop or rorl ficoml fistl dec inc fisttpll inc ficom cwtl dec popa js adc mov cmp sub xor inc cmpsl xadd sbb or push and sbb sbb adc xor or add add sbbb mov int and bound mov repz xchg and lret and add or lods push jecxz or sbb xchg pop and leave daa sub leave inc xor push sub sub jnp cs les and nop test addr16 lock in sbb pop add or push dec xchg stos push in (bad) or inc lock push (bad) test push push aaa enter aam inc sbb inc les dec nop jo push sub fs or inc mov xlat (bad) dec ss lock jae or imul les ja mov es cwtl mov xor lahf mov ret imul pop adc or leave rorb mov (bad) fnstsw rclb les jge and arpl and lods dec adc aas dec aas lods xlat loopne arpl ss push in out push push out in loope adc inc cwtl or cli cvtps2pd cmpl imul lods mov jne mov test adc and pushf inc pop je (bad) xor pushf push hlt sbb test or daa cmc daa sbb lock fistl adc (bad) bnd pop aaa test fistp mov repz push fcmovnbe shll push pop rcrb movsl loopne hlt repz push lahf sbb sbb mov push repz imul mov mov add movsb ret movsl loope movsb add pushf sub dec xor adc jbe mov jecxz mov mov aas outsl leave fiaddl test xchg fabs fdiv dec mov add push add adc xchg pop (bad) outsl jecxz rol jecxz add fildl or cwtl mov or into sbb stos and lock mov mov test mov ret imul mov sbb sti cmpsb push stos scas sar inc jmp xchg lea aaa insb mov test add out jo push nop push cwtl or js popf je xchg inc push je out bound add or cwtl push push and jge movsb pop push mov xchg adc (bad) es jns fdivs push inc ret pusha adc pop sub cli add mov outsl std dec mov test and loope adc mov adc fimul in ljmp aaa out inc movsb sub dec iret pop insb push sub sbb xchg push pop xor inc adc xchg xchg in lds cmp jl sub mov popf sbb push adc add inc dec pop lea xor add cmp insb hlt test or mov cmp jne andps jno add test andl stos add test inc andb test lods fldl es nop adc sar sarb cld xchg outsl mulb fs roll movl or sub aaa shlb sbb inc inc mov mov (bad) ja addr16 inc fcomps mov aas xor add add adc push sub pop out inc daa insb or (bad) jne clc movzwl insb outsb pop fmull loope inc dec jmp mov or movb add loop push mov sub pusha mov out cs xchg and and mov pop cltd cmp add in mov sbb mov cmp cmpsl add adc sub xchg loopne in les xchg or mov adc jbe mov or scas jns pop inc js mov lahf and inc leave pop testb cmp outsb loopne nop inc dec fdivrs repnz adc clc je or xchg test adc mov insb fwait rolb lret mov adc imulb push inc mov inc adc pop ret mov scas arpl jmp add cmpsl inc and mov inc sbb sbb mov mov jb cmp ffree ss xchg outsl cmp mov push iret push cmp adc push and (bad) add repz fwait mov adc mov cmp das lods loopne cmp les jns dec jns pop or cmp dec pop jo jno inc mov mov sbb adc (bad) in in fldl and mov or fsubrs push inc mov sbb fbld sbb repz dec push dec inc xor cli shrl gs cmp mov setb popa inc rol and add stc push (bad) sbb sbb arpl or and fs add or push add dec test cs mov aad adc adc push imul out in mov dec sbb fwait mov sbb mov icebp jmp testl adc (bad) int3 or jmp pslld cmp add sub test push pop fwait daa add out test inc inc das jne jecxz mov or or aad and std (bad) mov ror aas shrb and nop es mov mov iret in test mov mov or lock mov add inc notl push cmovle decb out mov adc and mov fwait pushf cltd sub jne aas test (bad) or cmpsb mov jae dec out test add push (bad) scas xchg fimull sub sub and push hlt loop inc out add subl and cmp je clc mov cmp dec shrl adc test nop lcall pop pop push inc xchg cld (bad) (bad) cmovs int3 in mov loopne mov inc sbb inc push push push dec dec fidivrl (bad) inc push lods movsb push mov mov es xor or pop jae inc adc sbb test dec mov or adc fidiv (bad) jne jmp (bad) rorb stos mov jne out lea xchg aad mov jg sarb jle into fdiv inc loopne lock jnp int3 pop jmp mov cmp sahf push dec xchg loopne cmpsl push and pop jo adc and (bad) lahf mov mov orl sbb jno add jb push (bad) adc add data16 mov cs push loop and xorl sub mov pop cld sahf lds dec mov in insb jmp adc lds sub xchg xor mov and fistl push dec jne push das ret icebp cmp fidiv mov mov xadd mov inc icebp popf xchg (bad) jne push push lock push xchg lock sahf fs xor xor mov cmpsb repnz jb loope push cmpsl xlat xor and es adc pop cmp js adc out nop mov lret nop mov addr16 mov pop inc sub mov seta pop and inc mov cmc mov push adc mov subps push or mov sub adc adc or or and inc mov mov cmp inc dec shlb inc inc mov push cmovbe pusha std rcl lods xor add imul lods add jne cld cmpsb adc xchg cmc clc fisub inc inc xor in dec pop pop xchg sub add xchg mov cwtl pop cmp xlat cmp pusha lods xor cmp arpl jnp rcrl inc (bad) lahf (bad) jmp mov das sbb xchg sbb test dec or push popa test pop lahf jg fmull ret adc or mov bound in and daa mov jp pop inc stos dec les xlat dec sarb sub imul push data16 add jno sub xorb push mov or imul lea insl into (bad) jge inc add dec mov push or jnp jge jge or cs xor lock mov pop sbb in inc sub jo mov lea push inc aaa dec sub sbb push insl mov scas out xor adc outsl stc ficomp mov push mov sub jb jbe popa xchg push jae xchg xor pop test or mov inc sbb xlat pop mov mov xlat popa push addr16 daa inc test pop cmp lods xlat jmp inc clc sbb pop fdivs iret inc rcrl mov addl mov test cmpsl hlt add movsl ret xor repnz sbb lods bound inc movsb sub cmpsb nop orb or es mov mov test icebp ljmp jne mov neg leave dec sub mov push mov movb xchg jo xchg lea mov movsl and pop mov test jecxz ljmp jecxz push and dec or iret mov sbb push or inc les adc in idivb xor mov pop popa mov inc sbb sub pop cld imul cmp movl or dec popa mov loopne jne jmp js xchg test and loop mov add stos inc lea cmpsl sbb push inc out cs push mov and loopne and cmp iret xor loope or sbb and scas push add or nop or lahf push movsb sbb cmp dec aad mov lods or fs mov inc test inc add inc push sub jge add scas popf push mov imul xor fs or insb pushf xchg and dec icebp jmp sub xchg (bad) (bad) adc inc movsb jg mov and jecxz or je mov aas inc es dec mov pushf das and ret push dec adc test pminsw mov xor (bad) les bound lret je sbb sub jns call sbb in push pop shl jo and sarl aad pop lret test fldl ss rclb sti nop ja or sbb inc loopne (bad) mov pop sbb imull popa movsl scas push sub (bad) or jge inc cmpl cmp fstpt sub fdivrp inc sbb js jb call jp xchg or mov je mov add (bad) mov pop mov add and sbb dec lahf popf xchg das and push sub rcrl (bad) ss xchg push ret mov xor xchg sbb je and in sahf jmp jecxz add xchg scas cmp (bad) xor (bad) or shrb fs out mov aam xchg daa and cmp lods push sub (bad) cwtl lds mov sub or xor inc rcrb psubsb jne cmpb xchg xchg sub enter movsb nop fdiv xchg adc ret data16 pop rolb adc iret push mov loope mov push test push jnp ret sarb cmp (bad) jns sub and jle pushf xor mov adc cmp mov xor xor es adc addr16 pop inc dec and cltd in sbb (bad) mov add pop ja xor sub data16 mov imul mov inc add cmp push inc inc loopne ret fs adc adc xchg pusha or (bad) jno jecxz jne adc jecxz add add mov fild adc push mov pop jp push aas push leave test pop and test and iret in ljmp dec adc lods addr16 fbld mov sub adc and or aam push fmull mov sbb mov inc mov rolb es xchg inc and pop sbb call or cs push push or and lahf mov dec lret or pop jg pop add int mov (bad) sub sub mov (bad) lcall lods jmp sub mov dec sub es mov ret xchg fimull (bad) aam jle xchg xlat loopne or mov loopne mov inc sbb setb stos cmc xchg ret xchg push or or ljmp sub sub or jo dec (bad) jbe adc in pop or push movsb cmp mov popa push or mov stos pop adc loope cltd jne andl dec or sbb jp cmp sbb icebp enter and pop dec dec push push inc dec pop cmc sub dec cmp sbbb (bad) mov std push adc pusha add sub or cmp push pop jo mov push xchg es mov aam out xor aas and lret inc dec (bad) sub fsts sbb push and cmp xchg in stos or pop repz or jmp iret jmp xchg sub and orl rclb (bad) sbb mov (bad) ds adc aaa push test test aam in jnp repnz sbb jg aam and (bad) clc or or in push mov jecxz stc (bad) les shlb out out pusha adc adc bound in push inc dec mov add or mov or aam jle adc clc gs push and and mov add jmp sti push stc into xchg movsb jne mov cwtl pop dec push sub ja or or jmp inc popf pusha inc and rcl dec and addl (bad) sbb cld (bad) sub ds and test pop mov adc sub add inc mov scas xchg aad mov int3 fmull push fsubrs and nop xchg loopne sub xchg lcall repz lods and pop adc or dec idivb jge es (bad) jle popf cmp jge and imul test jbe adc mov loop inc mov pop shll add divb mov mov xchg jbe loopne jge frstor mov jne inc std or mov and sarb mov jmp pop jmp fldl ljmp addr16 and add dec mov arpl fs add rcrb sub jno mov adc push mov add lods and adc in lret test ret test xchg das sbb movsl lods push push ljmp dec adcl push and or push xor jb mov mov test cmp xorl add mov icebp mov mov adc adc fst push sub cld cmp xchg sub cmp dec scas cmp pop pop out pop jo or adc loope out ficompl mov jp outsl and (bad) pop mov aam push arpl and xorb xchg (bad) jl test das mov adc push or dec push dec adc dec sbb aad xchg xor mov mov cmpsb insb loopne rclb xchg inc sub fmul inc sbb pop pop xor popa or out loopne leave xor add or push rol adc add xchg addl decl mov je xchg (bad) adc pop push and dec push cwtl adc push pop jmp inc push add nop mov sub rclb pop cwtl jmp xor xorb dec adc movb je das sti je jg dec cmp fdivrl int sub fwait (bad) mov inc arpl add jg mov (bad) movsb or add sbb or daa (bad) cmp loopne add loope mov int3 inc aas add add das clc loop rolb popf dec loop movsb cmp insl push aas mov and fdivr sbb inc bound out jne dec aaa xor push imul aam clts test fstl push mov fcomps mov lock pushl push aam push adc fcompl aam and rorl insb rclb rclb ret pop lods mov sbb roll or fwait dec es mov bound xor mov pop jmp xor xchg add cmp mov add jbe dec add sub cmpsl push mov push jo gs adc dec jg popa dec ss and fs cmp lock lock jo and mov pop or popa (bad) push les xchg nop bound (bad) inc jb arpl xchg je sub ret cs push lea push push pop jl jno (bad) aaa mov daa adcb pop mov call xchg jne mov sbb adc cmp cmp mov int mov cwtl xlat push lahf lret and jo add popa add fbstp fdivrs dec add or jne add aad int push jmp pop in add inc inc push mov cmp outsb arpl cwtl push pusha sbb and adc mov adc mov lock insb mov les jae loopne out sub sbb mov xor (bad) add in aas fs sbb shrb cmpsl cwtl mov adc nop xchg push xchg cmpl adc or add sub fsts inc mov dec mov rcll inc enter inc push in cmpl cld jge or push mov or inc movb ljmp outsb shl mov or out mov cwtl negb mov jne movsl and and cmp jecxz inc (bad) loopne lods xchg mov mov or xor mov add insl je push inc jg mov clc js fwait mov (bad) adc push movsl sti mov sbb nop or bound sbb push sti sub addr16 pusha sub sub cs mov mov xor rcl push int xor mov cs xchg leave pusha jmp cmp push dec pop xor pop insl inc loop mov imull movzbl push cmp add jmp dec and sub inc dec sbb out pop jno or dec (bad) push add jne inc loope sbb (bad) mov adc inc fdiv repz inc xor push jle jle lea push andl or cmp jb xor movhps out cmp mov pop push jns add dec inc hlt adc dec sub (bad) mov and testl aam cwtl sub mov addr16 mov mov popf shlb push jge call sub pop xchg jae jl cwtl jnp or or pop subl pop and inc test jns jo add outsb jae push sub pop xchg mov jae cmpsl or add movb adc pop iret mov cmp xchg clc nop dec xor cmc into push jne (bad) loopne inc adc inc nop and inc dec clc inc or cmp cmp enter mov leave jo inc inc cmove xchg cmovp loopne cwtl ds hlt inc lods int3 adc int jns out aad in cmc jns mov or push mov lds loope xor and aaa cmp mov pop push js sbb ss loope or mov lcall or or inc inc dec sub (bad) dec std (bad) (bad) xor and sub into add loopne lret inc fs sbb push lahf add loope cmpl int mov and and clc push cld mov dec xor or xor push or push sub push (bad) nop in add pop xchg les or jp jnp fstpt mov repnz iret or jge cmp xor cmpsl movsl aaa lock or movsb rcll adc ret xchg sub jp or or fprem1 push dec inc ss movsb arpl dec cmp les leave (bad) lock lods inc scas xchg test dec push inc mov sub insl mov cmp inc dec adc dec cmp out inc and add inc aad (bad) fadds pop inc or jo inc fs fmull (bad) add add jb xor mov inc jg push inc inc pop addr16 dec push mov mov es add inc pushf movsb loop or js xchg aad inc sbb mov cmp in ret pop fs add inc adc inc loopne mov xor add adc rcll movsl movl add data16 aaa dec inc sub sub and sub xchg in in notb pop sbb cmp sub sub and xor sub loopne push outsl into ret movb add je sbb (bad) adc rcll inc lcall mov inc pop in push mov test (bad) xlat adc repz popa and insl xchg mov add repnz mov add mov (bad) jns mov out push vpackssdw mov outsl add or sub pop push repz fldl stc stc jle lea jno out loop mov dec inc call push lods inc cmpsl or mov lcall out xchg dec adc jbe inc mov xchg push shll jmp pop mov aaa call imul aam (bad) mov jae ds (bad) sarl push movsl decl add or aaa push inc sbb addl adc pop lahf out sbb repz and adc or pop cmp and sbb cmc orl fdivl push dec inc movsb lods inc push lock dec insl or adc pop ret test scas repz add sbb fildl push lock push inc sbb les and mov lea gs and je fsubs or mov xor sbb add jg pop push dec dec dec inc dec push add push adc or or and xor aaa or cmpsb push xor push or add push mov and fwait cmpsl sub push push inc jmp mov add clc incl inc sub pop adc sub jne (bad) in shr push adc push setne or jecxz das adc pop stos popa push mov adc mov jnp add sub mov insb aaa xchg les les (bad) add enter push inc jns mov inc mov add sbb push (bad) adc mov daa lock push pusha leave gs cs jne loope ljmp lods add rcll or inc dec adc (bad) push aad pop je pop mov mov cmovnp loopne inc sub dec pop mov jbe cmpsb or orl test inc mov adc clc adc and daa fcmovnbe sbb icebp pop ret movsl inc addr16 mov sub add mov push fiadd jns rcrb fild xor (bad) mov rcrb shlb jbe leave add nop fdivl pop push mov add ds add mov test lods push xchg add xchg sbb sbb push add mov not jo inc jb outsb adc dec imul cwtl pop inc mov je js xor inc xchg mov push jl sahf negl push mov test pop pop lahf negl faddl in push xchg and mov and ds inc aaa push mov (bad) cmp inc push sahf cmp jl rolb js movsb es push push shl push movsb gs sbb fiadd cmp enter and mov add ds fwait pop and xchg add sbb xchg sbb and mov adc or pop mov mov push sub inc repnz js sbb pop jo,pt or sbb rolb dec mov cmpsb in add out out push and push push (bad) outsl (bad) xor out pop shll xorb xchg pop add pop and pop pop mov (bad) ss sbbl xchg pop pusha add ljmp insb clc push nop inc pop cs push sbb nop movl pusha push add jns aaa sbb cwtl ds in add leave inc leave pushf sahf test mov inc fimul dec in xchg nop inc or or divl cmp xchg ja sbb or pop shrb push push fnsave cmp pop inc lock ret pop test jmp in or xchg add add or mov insl popa in arpl sub jbe sbb repz loopne xor xor pop (bad) pusha rorl pop fcomps shr adc js psubw je push imul nop lods add pop sub (bad) shr mov push and aam push mov sbb cmpsl mov or jmp add push add cwtl test pop push outsl div pop or xor add and in and insl jg cwtl add iret lds les lods and dec inc insl daa mov inc dec jae rorl push loope insl xor aaa dec movl cmp xor adc sub push cld xchg xor roll or pop rcrb xor dec xor inc pop (bad) fnstcw mov notb dec cmpsb lea mulps loopne or jbe pusha sahf or nop jl adc roll shr dec imul add push fcmovne pop mov lods or add xor aaa addl xchg fldt testl insl sub jecxz cwtl inc add faddl jno stos adc or xchg incb mov and mov ja orl pusha or pop popf sbb cli xor mov lods push pop adc pop lock cmp push nop insb bound push and pop cmc (bad) lds bound rorl daa pop or inc pop (bad) notl outsl popf (bad) adc mov add dec push mov cmp cmpsb je xor inc jo pop mov jns aad pop leave pop orl push pop push movsb iret out bound fcomps shrb outsb mov movsl mov enter js adc add les add adc shrb aam prefetch add idivl sbb push pop xchg loop mov sarb or fisttp insb jne inc subb jmp push push adc add add das mov add or out lea pop sbb add push sbb adc popl push in push inc jp sub xchg sbb cmpl sub fimull sub and xchg add frstor dec sbb movsl jns lods data16 gs jge leave or or lods mov xchg lret jae sub sysenter addr16 lock xchg push push jo lods pusha and test add loope jmp out sub orl (bad) rorb xor fcoms les repnz mov pop movsb add or mov mov das add and push ja cmp xchg dec movsb incb add add add add cli jg or add add add or or mov mov mov mov mov or sbb cmp inc mov cmpsl in xchg mov (bad) (bad) in push ljmp jmp jmp jmp jmp jmp jmp jmp jmp (bad) (bad) fdivrp (bad) fdivr (bad) fisubrl fdivrs add aam adc sar sub (bad) iret stos into dec dec dec ljmp sbbl dec mov push enter mov xor out enter or andb sbb pop or xor imul jo push sbb sarl aam pushf push mov ds jns jae in clc js pushf call in mov mov (bad) sbb imul adc test jl repz xchg mov (bad) outsb in ja push push pop mov jge (bad) ss shll out jge in lock dec cwtl lret movsb inc movsl outsb cmpsl (bad) testl push ret ds test ficompl push cmp push int3 sbb or nop pop pop sbb fwait adc out daa or cmp addl enter cmp jns add ja in push add dec cmp sbb push cmpsl or aas incl lods roll pop xchg pop dec xor push push or cs mov sub orl mov jmp (bad) loopne pop dec rorb sbb pop insb pop xor mov push xor adc jg push push adc jle add add adc pmuludq or jle dec insl xor or imul pop adc ja xchg lods push push decb xor inc xor adc inc push fdivrl cmove or dec popa je xchg inc push push addr16 dec cmpsl dec fldt adc xchg aam dec dec push xchg insl mov test ret rcll andl inc cmp lods insl jl jbe mov sarb or push popa daa adc dec pushf adc xlat mov xchg clc (bad) mov xchg hlt gs popf fs inc or or les inc push inc cmp push or fsubrl jae jns push outsb mov roll imul sub or imul sbb add cwtl mov cltd aam mov es mulb dec xchg sub xchg fwait mov fwait or outsl cmpsl clc push adc pop adc adc jp push jns (bad) out test idivl mov js push mov fnop xchg pop imul pop push or insl cwtl pusha incl cmp sub push ss mov add js add add bound mov lcall add add (bad) inc or add mov mov adc decl mov inc adc sbb or es mov mov mov (bad) mov push mov xor cmp pushl (bad) mov ret inc lea and inc sahf add into std (bad) mov (bad) mov aaa adc mov mov mov cmpsl jne (bad) call push repz sbb inc mov out lods xor hlt inc (bad) js jns repz inc dec push cld sbb divl dec rclb push add xor lods and loopne push xchg in cmpsl flds js pushf test mov xlat add mov sub repz jbe cmpsb push aam in dec repz push mov xor lock mov sbb mov dec addb push pushf idivb push clc xor shrl or xor adc push mov adc insb out sbb (bad) fisub fadds pop cmpsb aam sub and mov insb cmp fs add pusha lock add add push xchg push and cmpsl jge mov push sub flds test cmpsb (bad) repz sti ds pop into push jbe sbb adc ds xchg into inc pop and cvttps2pi push or loopne mov mov push push push push sbb int add mov inc xlat pop aad cmp sub adc sub adc rcrb movl cmp scas sub adc pop loopne pusha cs push out mov sub add dec loopne ss mov popa push sbbl js mov inc cmp les cmp or xor mov mull cmp sbb dec add mov or push sub mov push fidivrl das mov es test pop add inc daa movsl add push adc rcrl pop and leave adc add inc (bad) jae pop pop dec jl jns mov push add push ja pop sbb add addr16 sbb adc and pop adc or cmp xchg or push (bad) pop pop adc push imul pop push or push sbb rorb pusha imul adc mov inc std add pop jbe mov add or mov sub pop pop cld pop call lcall xchg xchg shrb add into dec jl dec add xor pop call sub or sub cmp or cwtl sbb push frstor inc cvttps2pi pusha cmp push dec rolb or inc into inc out xor push pop enter pushf or les daa ds add add addr16 je negb ja jmp pmulhuw mov mov mov or fs push fs and les xchg inc push mov imul std jns iret repz or cmp sbb repz arpl es aaa sbb scas (bad) cmp push xor js,pt imul pop (bad) jp cmp inc push jo int push cld push adc fdivl in rol jbe or ds xor popf fmuls addb nop adc cmpsl sbb pushf push sahf mov add xchg sub pusha pop unpcklps pushf imul movq xor pop xchg fild jle mov add leave enter sbb dec sbb add xor dec loopne mov or adc cmovge lods addb lods ljmp mov add mov push mov fistpl lock js push push and lods insb (bad) lret sbb push lea add and sbb pop sbb add inc movl inc inc xchg cmp ja add mov jl push sbb mov cmpsl insb cld pop inc push aaa sbb adc (bad) cltd (bad) leave add jne xchg mov insb xor (bad) (bad) inc cmp adc stos mov outsl lods mov pop negl negl push cmp dec jmp push or add leave nop loop and (bad) jb daa inc jb add push ja fldcw xchg adc or fsubrl iret loopne shlb or leave pop cmp push push inc push inc mov pop dec daa push jo daa or outsb adc dec and popa (bad) and dec outsl xchg inc nop xchg daa dec or daa push xchg (bad) ja mov xchg out pop mov movl fidivl add xorb lods and adc and outsl daa adcb dec push scas pop movsb icebp adcl jb icebp fistp jmp xor mov pop fisttp sbb lea and sub inc xchg push jo sub lcall add enter add es int3 sbb inc push and cmpsl loopne pop test aam adc dec imul fstl mov subb add outsb rcrb xchg sub out pop outsb inc add push mov mov ja push rorb mov sub adc sbb pusha lret aaa mov xchg inc adc push mov pop hlt push xchg mov or adc fildl or push or add cmp or or pop shlb mov call push xchg mov pop pop (bad) xor mov and push add je pop add icebp ret js pop jo (bad) jne mov movsl lret push push add cmpsb stos imul or addl add push mov (bad) (bad) jne addl mov jmp jge push or enter and out outsl add push or push pop mov dec add popa add mov lds inc pop lods dec (bad) xor or adc adc dec (bad) xor sbb and (bad) xor shll sub sub inc rolb mov inc add push cmp ja pop sbb frstor pop dec add mov mov aas push ficompl pushf add mov fdivl (bad) addl test inc or lds into jbe sub je mov jbe xor mov add bound dec nop adc add jle andb adc mov xor lods (bad) adc mov mov xor xchg (bad) mov stos push add add xor xchg xchg adc (bad) cwtl insb outsl and mov (bad) jmp or call sub iret sub inc or or pusha pop push pop push add xchg pop adc je cmc nop movsb adc ret xor add sub mov push dec mov and inc pop insl add xchg pop mov push out cmpsl pushf (bad) sbb std push lods xor dec fist dec addr16 popa lds or lea mov pop sbb or sub ljmp enter ja adc inc xor pusha adc test or ja rcrb bound clc xchg jbe mov ljmp pop push insb insb fsubp pop mov lea cmc push pop bt xchg pop inc inc inc lahf lds addr16 add bound pop and dec iret add cltd sub sbb pushf xor stos cmpsb imul imul dec add or sub fnstcw imulb mov sub add xchg in or adc or imul push mov inc push xchg addb daa (bad) jae mov daa fisubl pop nop iret cmpsl xorb out (bad) dec add pop xchg mov cmp pop fcoms mov insl mov ja add pop ds outsl fistpll sarl jb sbb inc and adc xor push loop push sub (bad) (bad) push dec out jnp popa dec add maskmovq negl in push rcll adc test loop sti js xor inc call out jecxz sub shll inc call stos test call das orb inc inc push fistl icebp movsl in sub jnp lods mov sub or int pushf clc lods push leave sti or cmpb cld push cwtl xor push ljmp (bad) aaa sbb mov loopne push icebp js pusha les adc inc in sub jmp loopne add and cmpb (bad) je pop out xor fildl and xor cld add shll cs lock and pop add lea js ffree cmp jge mull iret cmpl mov lea jle test ror or push xor pop xchg jmp jmp jnp outsl inc (bad) std dec std jl or iret sub and lock adc pusha inc push xchg jp jno int and (bad) push cmp lock xchg pusha mov hlt sarb inc jo jl add xchg push daa (bad) push imul fmuls dec in mov sub dec jne sbb cltd or cmp loopne mov pop sar and mov unpckhps popf pop ret xchg push (bad) cmp pop inc jne and (bad) cmp and (bad) mov and test dec subb test (bad) lods notb jo in sbb loop or les fwait add push push and sbb push fildll xchg sbb push scas inc lahf adc pop cmp adc rolb dec pop jmp xor cmp popa sbb push (bad) jnp pop jbe mov mov aam and xchg leave sub jmp jmp enter jne add test jecxz icebp sub lods or sbb rcrb xor jmp sbb push pushf pop jne xchg push pop or enter push inc jo jl mov out mov adc repz pop enter adc aas or add je out flds and (bad) repnz push nop dec mov hlt add push or pop repz pop adc sbb fildll sbb pop insl mull jge mov sub loop sub add loopne mov insb cmp mov daa mov jnp xchg jo inc (bad) ja cs aad xor into and lea inc mov sbb mov xchg add xor sti movsb imul pop add dec jmp xchg in or jl out cmp subb adc mov push add inc cmp adc insl mov lock or add mov lds imul (bad) sbb adc pop add cmpsb mov mov xchg sbb cmovae xor push inc and inc push and icebp sbb jne loopne sbb mov inc jmp in ret cmp stc and lea aam mov mov das mov and test fistp sub inc jo push push push cmp jae jns (bad) clc fimul pop and lea rol and adc add lahf xor push push repz mov mov push addb subl mov adc inc pop loop fdivrl das or adc addr16 (bad) jae inc mov adc (bad) popa aam gs aad sub fidivl adc mov jne cmp adc inc test push dec pop les sub jo mov add mov ljmp cmp pop and add add out and in aad ss jle dec jns sub imul mov push xorb push insl pop sub rclb (bad) add jmp pop xchg dec scas dec adc or pop sub push jns or jne cmpsb call test and loopne pop xchg add cmpsl inc lock adc push lods gs fmull lret xor or mov (bad) mov adc xchg push lret mov gs jl sbb arpl cmp dec xor cmp lea js loopne cmp pop and adc les xor movsl (bad) repz pop xor sub adc push iret push lret mov or dec jmp into test nop mov jae sahf inc insb push call push fdivrs js add mov add pop jno movsb xor gs push sbb or dec ja shll test cwtl movsb adc dec add xor adc mov into push push cmp mov jne mov sbb jnp call lahf scas push or aas push fimull push clc mov idivl sub xchg icebp (bad) fcmovnb or add sbb cmpsl sub cltd cmp das cmp inc xor adc mov push cmp test and push xor jo mov inc insb cmc sub and inc xlat cmp push and mov or cli jmp jno mov and push pop je cwtl adc or insb mov popa adc in cwtl dec loopne cltd (bad) arpl ss cs push pop outsl je test lret push adc cmp jo or mov inc sub add push pop and or sbb gs xlat mov cmp lock pop pop pop mov add jne mov sub fmuls ljmp sub push adc jb addr16 cmp xchg aaa addr16 push addl pop jb and insb push arpl dec js stos (bad) push and inc mov adc jae dec lss mov adc enter mov sarl dec cmp gs jecxz fwait pop movsl sub daa sub adc xor lds or adc ja (bad) or in adc mov dec lcall enter mov movsl sbb loop bound cmp jge ret enter jne mov je adc add dec js mov (bad) mov orl (bad) push or (bad) mov cmc inc fiadd out lock int3 push out insb inc imul jmp sarb sbb aas jnp xor mov push fs loopne or dec inc cs fldcw adc xor (bad) dec jnp dec es adc push adc push pushf inc and loopne imul cwtl std addr16 push mov and mov testl loopne stc fisubr lret shr imulb pop gs sbb ds jl mov push push sbb pop lea pop add xchg inc adc jge lock pop add dec daa inc cld lsl add ds lret cmp hlt insb mov sub cltd insb cmp cmova bswap jbe mov push iret adc add mov orl push jg and pop out add xchg cmpb mov adc dec rorl adc pop or pop dec add js and dec sub outsl mov out pop jmp cmp or or adc or ret cmp push or xorb aaa dec mov pop cmp cmp insb pop je cmp or inc (bad) popa cmpsb scas sbb sarb sbb cmpsb sbb in dec jmp dec in test shlb jbe add dec or fisttp pop clc (bad) push jl cmp lods test dec mov mov jle,pn fstl push in mov es mov xchg pop add lods daa pusha or mov push arpl pop and push das cmc xchg ret push addr16 (bad) and and xchg rorl fs test push lcall (bad) jno mov jecxz push popa imul addr16 shrb sbbb outsl push and and cmp stc mov or add sbb adc add faddl xchg push inc pop es test movb xchg sbb imul jp push (bad) roll mov inc popa loope loopne jg andl imul xorl cmp dec je sbb xchg jne movsl or js xchg sbb pop dec scas cmp push sbb push add lret add pop (bad) aas or mov push xlat sub mov dec sub pop or mov mov push jmp push imul dec sub mov push rolb sbb mov je je sbb (bad) mov mov movb push pop daa or repz pop or (bad) idivb pusha push pop add jp jmp add imul add shrl sbb psubb dec mov (bad) mov xchg mov and cmp sub mov popf aam add adc mov leave and inc insb fcmovbe insb and adc je push fs jg push dec push (bad) cmp aad or mov fadds ret adc mov and mov sub pop push fisttpl mov push insb xlat loope (bad) cmp inc mov int3 nop pop cmp and adc adc popa imul dec ret xchg aaa push cmpsb cli (bad) enter fwait pop ret out insb js inc push movups fdivrs in adc or test inc xor mov fcomps mov outsl adc cltd clc es orl dec cmp lods incl cmp clc cmp push mov inc or push add cmp xor mov mull add test loope (bad) mov push xor sbb and rcrl ret dec xchg cli adc xchg hlt inc pusha sbb ret imul dec push (bad) jle int3 or push mov arpl pop insl inc add or mov pop repnz and jb cmp ret dec or jecxz and jle js jmp jne inc mov lods sbb cmp or xchg enter loopne push imul xchg cmp mov (bad) fimul aas xor adc push lods pop (bad) push add xchg cmp or dec scas xor xor out adc ret insl fnsave cs and push mov je aaa test add dec out jecxz mov inc jmp inc (bad) or test xchg xor pushf mov xchg lock jne push adc xor push or and jbe push push push movsl pushf js inc mov popf jns mov or aas movsb cmpsb addr16 inc add dec add ja and dec test dec imul jle pusha jge aam call adc decb cmpb cmp fnstsw sahf nop es test ljmp mov dec cs movsb xor adc test sub jns dec push dec mov dec jo mov out imul and pop mov cli push and (bad) xchg add inc (bad) aam xorb cmp outsb and push pop push sbb mov cmp das pop dec xor or das les inc loopne mov roll sbbl inc push inc dec add add dec add push and inc or test loopne je jmp jge xchg cwtl mov add adc jo dec addr16 cmp dec jnp js sbb ds addl push sub aam push dec push stos adc mov in outsl cmp fidivr fdivr clc dec and mov push dec xchg push ja mov lds mov inc (bad) cli push or sub mov aaa pop repnz push dec inc and daa pusha mov insl popa cmpsb ss push (bad) sub imul loopne xchg lock add mov or xchg xchg or scas popl xchg cmp push mov pop fbld sub mov or outsb dec add add fidivrl adc mov inc sub push mov add lds int or xor pop mov lahf cmp xchg lea inc inc lods pop rcrb add xor pop (bad) xor or pop es loopne mov or (bad) (bad) in adcb fdiv pop lret stos xchg inc pop mov cmpsl xchg sbb or ret int mov pop inc jo jo cld sub add mov xchg mov mov add mov std out add push sub test adcl rorl xchg mov xorl pusha int inc dec imul jmpw mov mov pop (bad) and pusha leave test jge divl (bad) lret mov inc pop insb xchg jno cmp pop mov aaa mov add or test pop mov jg mov mov adc xor mov mov pop call pusha outsb inc xor inc mov lahf sub sbb xor hlt push push outsl lret push and sub xchg addr16 addb and stc jle add pop ret lcall sahf or test sbb insl pusha inc sub or test sbb mov (bad) or pop (bad) jecxz xor and and cmpb and loope add pop push mov mov cli rolb push cmp or out dec pop je mov ret mov pop ret fstps mov (bad) scas and or mov xor insb push addb adc rorl cmp and (bad) adc mov xor addb scas ret ds lods fadds les popf inc enter cmp cli stos dec xor xor or cwtl mov repnz sahf cmp pusha (bad) insb or testl aad inc cltd inc inc cld pop aam pop xchg paddb pop push je pushf int push fwait push popa push xor mov adc aas dec scas jo adc je mov push mov loopne fbld nop pop push add xchg push and fdivr popa inc lcall rol (bad) jo and lock xor add and push call idivb add aas icebp mov enter stos call mov pop and scas movsb outsb or mov adc mov xor or int3 out in outsb xchg jl jnp je mov movb ja xchg mov or push add jmp cmp (bad) xor sub mov push cs stos and push (bad) adc or (bad) dec sbb aas mov xor cmp pop je mov or or mov nop cltd lret mov (bad) ja in mov dec and je mov fwait and cmp xor pusha add pop or cs pop pop test inc pusha pusha sbb data16 xchg (bad) pmaxsw add jb cmp sbb adc sub mov jo mov xor xchg xor adc into pop nop lock cmp insb mov adc or xchg push push xor mov pop mov aaa testl sti in jne inc rorl (bad) push rol sbb mov or cmp rclb ret pop mov mov ret xchg push out push jp addl dec sti xor sbb and or (bad) push push jb mov rcll pop inc les enter dec dec sub loope in inc lcall xlat adc sub out pop push xor das sahf movsb xor jne stos or mov mov and mov fisttp imul rorb aas call cli rcll and or stos push pop aas pop jne push adcb xorb inc popa cmp mov jo sbb push ja or sbbb scas stos add and lea jg jmp incb inc pop push es out ljmp cs inc lahf pop test (bad) insl add sbb loope ret add pop jne sub rdmsr mov xchg xor or dec hlt jns inc idivl je addb add push popa shlb adc or inc into out xchg adc out push jmp dec fsts jecxz mov inc mulb smsw and adc (bad) xor pop pop das adc je mov mov jb ret cld or mov inc in xor out sbbl movsl (bad) mov sahf mov sarb outsl push cltd or lcall dec pushf push and sarb popa or cwtl sti add ficom xchg les mov add jle mov push into jne movsb add out iret add and push add dec mov repnz sbb mov adc (bad) xor push jle and aam fs lock in stos pop imul or fnstsw xor call xchg movsl imul mov cmpsb je pop adc sbb sbb sbb xchg push test les pop xor test mov cltd jne inc jle sbb in call aad jl fmull fildl fsubp data16 pop mov ret popf adc lea fisttpll sbb lahf sbb push fucomp icebp call mov add mov lea loop (bad) aas dec sub inc xor (bad) push nop add je cwtl sti jge push aad push push push insb push mov mov push cmp fwait ret psadbw dec inc movsb sbb mov or sbb lret add add inc xchg lret test in sub pop into push aaa movsl daa and movb mov sbb mul pop fisubl roll sub jne add push add shl sbb inc sub mov sahf jge je neg pop lea sub je cltd shr jnp mov sub mov xchg jmp xchg mov outsl test test hlt push inc add push cmp gs jg clc cs ds or xchg sbb (bad) inc inc mov mov jbe jl xchg xchg pop cmpsb nop dec dec dec cwtl je or add mov outsl push inc pop enter loopne addr16 inc ljmp add pop lock imul dec mov inc mov cmp sbb jle loopne (bad) sub test push cmpsl mov push mov sahf pop fisubrl (bad) aaa call ds sub in or or push xor and mov jbe sbb ret inc icebp test add leave or imul mov sbb jae mov in outsl or sbb jle nop lahf adc aaa mov mov fldl jo roll rolb sbb sub jb je loop bound sbb mov pushf inc repz test loop add inc and scas push mov mov cmp mov add xor lret data16 inc mov int3 push xchg mov mov add cmp sbb push in xchg xor dec cltd adc add push or addr16 lock push faddl and inc cmp mov inc sbb das pop pop (bad) aas ret (bad) xor push stos fxch push pop clc cli lret sarb lea sbb test jmp fldcw ret popa sbb sub cmpl shr push mov sbbl add bound incl mov mov js or inc loope inc movsb push adc stos jle stos pop adc js jne pop mov adc push imul aam and lds mov inc rol insb add xchg xlat push loopne pop or stos popa add iret js out das pop lret push or adc and test pop out adc or int3 and or pop add xor (bad) adc mov push iret mov or add push cmpsl or push imul add in popa inc iret stos pop and adc xor ljmp pop push cmp push push pop inc mov xchg jb repnz add fild bound or xchg inc xor ds mov inc or popa adc push mov pop mov lret or cs cmp cltd int3 enter daa xchg outsl jne mov cmp sub push cmpsb inc jg jecxz outsl pop add xor pop cmp sbb add xchg add mov pop leave mov lock sub mov (bad) jbe insb cmp adc daa adc in sti popa out jmp sub sub leave in or or js xchg pop adc sbb arpl jl add jne jl and popl jmp push pushf cmpsb and sub jge lret push jns roll or or imul adc jge or daa ds pop pop jg orl sbbl dec push xchg icebp test ficompl push inc push dec mov xchg cmp inc cmpb (bad) mov mov xchg or fimull stc inc jmp add (bad) push or sub inc push inc jne shrb sbb sub dec movsb icebp or jmp int jmp cmc ss fild adc mov push (bad) sbb xchg mov loope in and ljmp mov jb add xchg andb loopne lahf (bad) outsb jg jb adc or popa inc es xorb add out dec ljmp dec mov cld sub bound outsb fidivl aaa pop jmp ret adc out stos enter (bad) test (bad) in sub dec dec fdivrp notb jle push (bad) jmp xchg shrb pushf insb adc or adc inc sbb push add dec inc sub mov and adc inc hlt popl push or pop xchg push adc and test push pusha mov sbb inc jl hlt aas in nop lods or push mov in dec test add jmp jle push lds aam push xchg add outsb inc push jae or jo dec pushl ja call (bad) dec and and push iret jp push mov push sbb adc xchg lds xor pop push pop jo scas lock ja and and je adc cmp roll push lds out repz adc mov mov add inc push xchg jle add and addr16 and movsl in bound (bad) adc cmp sbbl cmpsl push push cmp test xchg inc adc ss in fsubrs lds jmp popf push arpl dec repnz inc sub sub sub mov xchg push dec sbbb mov xchg sbb jge std rolb sarl lahf das js dec and inc push xor jg mov push or jg adc push adc push mov dec in adc cmp inc stos enter xchg mov movswl push or adc rorl mov (bad) les insb or mov xchg orb (bad) jecxz (bad) sbb mov imul notl enter jl mov loop mov mov pop and addr16 pop pop jbe xor pop sarl mov test dec subl dec cmp jne and dec addl and mov lcall je ret pop pop pop or push fwait roll mov mov out jno in dec scas fs inc les add dec lahf push or fcmovbe enter push movl in jne iret dec fs cmpl sub or popa bound add pop rorl ret pop aam push shlb das lods insl push dec or mov loop loopne cmpsb mov and xlat movsb enter dec call pop dec lock mov dec push sbb sar push adc jnp inc lods push xchg jnp or or inc lahf mov in pop adc add addr16 and (bad) adc outsl sub and ss mov ret add push es lsl dec mov in add add dec sub pushf push (bad) outsb sbb inc sbbb mov xor pop ret test popf mov outsl mov jb xchg add jle je push dec or xchg lock or es xchg xchg jbe jle adc or sbb es (bad) xor je mov shlb add sbb inc sbb in js xor mov ret sbb mov je push xor clc xchg je int3 pop push inc loop and leave xorb pcmpeqw sub out pop insb and lods dec jb adc jo or or fistp and pop leave mov pop push jo cmp sub popa test mov push mov loop mov mov pop and push fmull inc mov icebp sub or adc cmpsl or adc cmp lcall mov inc bound xchg shr dec push sbb in and nop rorl jbe dec push pop movl outsl (bad) insb ret xchg orl sahf test out pop mov testb pop dec mov insb adc (bad) fmuls or leave lret ss jge cmp les sub fwait jo sbbl fwait mov mov add insl js mov sub pop inc push xor mov or es dec lock je arpl rorb inc cwtl loopne push dec dec push mov movl add ds enter loopne mov push add push adc push push jbe jmp sbb add add jo sbb adc push or mov sbb mov pop in dec arpl movl je dec dec dec or movsb cmc lods pop push clc fstl fldcw cmp and sub stos mov bound and inc fs push enter or pop push pop push jl mov push rcrb xchg test adc out dec pop ret data16 pop inc dec cmp in adc dec or nop or nop sbb imul es cmp mov xchg and nop mov and sub xchg mov and inc faddp dec cs or (bad) mov push (bad) mov sbb jb aad push imul arpl add or cmp xor outsl xor mov xchg lock imul mov mov (bad) ss xor push mov negl shl dec jb daa scas and loopne xchg sub or add fcompl sub lret (bad) insl adc inc and jne xor adc fcomi xorb dec add mov outsl dec jg mov add in inc jg add push nop jns mov jg add insl cmp push add gs ss sarb dec or pop xchg adc cmp adc jl xor or repz fwait outsb pop inc mov sub or je mov push jmp bnd inc (bad) arpl add push cmp jmp sbb rcr pop dec jl cmp ja mov adcb imul push push dec push cwtl call loopne xor and sbb adc or add add mov fwait mov adc mov mov hlt or mov jo out xlat add shlb outsb cmp xor js pop mov aaa aam adc loopne or ret js fcmovb push pop sub xor xchg data16 inc les mov adc cmp and subl xchg xchg inc pop or les (bad) sbb adcb jg es mov sti add loope xor insb xor (bad) or popa cmp imul (bad) fs sbb push insb mov dec insb or mov loop lock movl sbb xchg lods push mov cmp sbb sarb nop rclb xor and inc je xlat les mov dec fbstp push adc imul je fsubp cmp bound xchg add adc inc jmp aam test stos adc push subl push mov clc nop mov out adc cwtl push or sub xchg or mov roll lods jbe jnp jge mov bound and lret fmull push push adc xlat xor insl repz mov xlat aam gs (bad) repz inc movb jmp lea dec orl dec aam cmpl add test mov outsl rorb dec (bad) frstor gs mov xor xchg lods push pusha and aad mov push and pushf adc jns dec adc hlt es and or stc mov stos sub jbe xor pop nop dec lret jmp jl cmp pop rcl enter outsb push mov mov add adc out xchg ret or inc (bad) aas loop cs jno mov mov mov xchg nop lahf xchg jno imulb enter mov cmp imul cmp (bad) aam loopne out jno lods pop pop push mov or jmp push pushl out jns or cmp ja jg mov lahf shr inc add ficompl dec inc add cmp setle cmp imul test popa add lods sub mov rcl out rcl xchg or imul dec inc sti lods cmp ljmp or and adcl push adc inc sbb in dec stos js dec push std sbb and enter ficoml daa lods sub aaa pop xor add mov mov push cmp adc (bad) out pop cmp flds sub add loopne ror jmp aaa into into xor xorl out or add adc cld or sbb xchg mov ret xchg test add in add popa leave call and push ficompl lock aaa inc sub pop sub jne icebp add jns mov sub aaa mov mov jl push ret add int3 push icebp xchg dec xchg pop or cmp pusha or lock cwtl jl add pop add jne in orl cmp push ja xchg frstor out push push adc cmp daa push mov jns add mov xor push or or mov xor add jmp sbb mov push xor xchg xchg dec rcl lret lods push push adc rol rclb sub lods or cmp (bad) out setne cs addb xchg repz movsb push and dec pop subl xor xor inc push daa insb out fcmovnbe adc mov or pop and add test movsb push xlat or hlt mov and jae lahf (bad) xchg add pop sbb subl and sbb cmp jne loope lret lock imul mov or outsb jmp adc dec add cmpb push mov xchg adc sahf cmc les dec or dec push cmp insb je fiadd inc out outsl subl daa sbb dec (bad) lret inc adc or cmp fs xchg xor (bad) clc lock (bad) xor rclb testl jg decb lret cmpsl jne cmp mov mov rolb sbb call sbbl in and sbb cmp cmp jne mov xlat (bad) adc adc popf mov dec lock sub add add lds aas push pmulhw cmp sub add add movsl pop xchg push ljmp pop fstl push xlat into nop pop inc push sbb fldenv push mov daa inc mov loope,pt xchg outsb and outsl dec in adc or iret and das shr fnsave aas insl cmpsb fbld sbb jb add test jecxz adc mov xlat gs clc cmp call lahf incw xchg xor popa std jne and jb and xor adc pop sbb in mov inc xor inc jl adc pop sub scas mov sub inc push and xor lret dec sub sbb lods (bad) (bad) sub pusha shrl mov add pusha movsb in pop in loop and (bad) cmpsl cmpsl sub or push inc xor sub jecxz or (bad) imul cs cli rcrl aas add inc dec jne cmpb mov dec and push dec mov (bad) cmpb mov xchg push adc sbb mov and xor mov fimul inc pop xor mov sub lret into jg add mov xchg in add jne push pushf jle sub or adc xor push xor ljmp add add push inc mov xchg sub sbb mov fdivs jo cmp adc jo jo xchg popa xor sbb imul jp cmp stos jne push inc inc lcall xchg jl adc loopne adc lods jno test pusha sbb adc dec ss add mov aas (bad) jmp adc jmp lds or adc (bad) fildll xorl test (bad) arpl jno scas and fsts pop cmp jle push movsb jno xor psrlq cmp jns movsb std outsl es add push or pushf ret dec xchg jg sub dec mov inc fwait daa xchg call addl into loop sbb mov pop sbb add or add jmp shll lea mov pop push les xchg loop push pop sbb or dec sti cmpsb mov push dec and ret mov and pop push ret test inc pop adc push orl mov test sbb divb iret adc inc adc addr16 add (bad) sub incl xchg into xchg jmp fwait mov add inc xchg mov and or lock js imul or mov push sub adc pop mov or dec imul dec lock sahf (bad) dec sbb and or fisttpll mov nop je add push push and lcall lfs cmp inc xor mov stos lea rolb adc dec and incl xor ljmp cwtl xor into xchg nop aam testb imul and jmp adc nop jmp and mov or and out add lea or mov movsl jns leave jo sbb mov xlat inc test sub mov mov fidivr and mov movl lahf add cmp mov jl jmp xchg xor out fadd aam pop inc push push add lcall add fdecstp sahf nopl repz and fldenv adc jo lret xchg loopne pop sub iret dec js push inc out insl loope pop dec fsubrs (bad) aas jbe lds in fwait push iret rcrl and or adc cmp sbb push and adc mov (bad) dec js test and (bad) sbb in and lea test loop cmpsl mov push pop lcall sbb dec jl or inc and cmp fadd js sub jnp jmp or lea mov test sub adc fild push test loop or pop pop lea clc cmpb mov popa jne andl xlat lea or sbb jmp jg movsb mov ja mov xchg and lea jmp jmp dec and mov es and (bad) sbb mov dec in dec jne adc add jmp sub adc inc clc enter das mov imul pusha push outsl test xchg pop add and rcrb jmp shll sbb andl xchg stc outsl or mov or ficom jecxz fiadd rclb fdiv cli loopne cmp mov jno addr16 idivl push shrb cld push or jnp push popf or lods lods andl mov mov adc pop fimul out insl in mov sbb jp lock in inc lock les xor sbb mov in xchg sub nop cmpl pop xor imul shlb jne pop jo int3 adc sub arpl xchg shlb ucomiss out or push or dec add xor cmp daa lds sub outsb mov imul (bad) je add imulb mov (bad) insb in and inc lock test cmpsb xor adc inc push mov mov push js jmp je sub popa and mov pop scas pusha and nop aas rolb rol data16 sub mov inc je aad sti xor dec faddl cmp fld scas adc mov jl and xor cmp jmp cmpsb popf or mov and inc daa aas sub mov cltd sub ja inc inc mov pop mov ret out andl xor inc test mov push adc call clc iret push add push inc adc dec cmc sub mov lods add jo add add fmulp xlat int3 add rcll or jnp jne push sarb and dec xor sbb adc enter subl sub jecxz xor or das push xlat add push xor inc adc mov test pop mov push shll dec loope dec and dec into stos loop add (bad) xor sub popa daa insl cwtl ljmp pop sbb scas xor cs lret adc (bad) pop xor clc xchg xchg rcrb out inc or outsl loop pusha inc add mov and inc int inc pop call push roll add insl or push mov cmpb pop adc dec or dec je push pop ljmp mov jb inc adc sbb popl add insb mulb sub jg push inc and pop (bad) jmp outsb cmp andl and in or (bad) xor pop shrb out test xor lcall push sbb icebp adc call jmp sbb enter sbb add and mov sbb arpl jecxz cmp push and push xchg mov js outsl push or in push rcll into jp pop outsb jle jb add jmp clc mov inc bound add hlt lret inc mov subb mov mov add xor xor sub cmp pop insb test pop fmull dec pop or pop loop fisub clc or sbb popf add dec xchg lcall fisubl adc mov int3 inc mov mov les popa mov xchg mov popfw push fdiv push test sbb mov cmpl cwtl add fcmovbe dec mov or xchg test je push cld and cmp inc xchg mov jae dec mov sub push test ret inc push adc (bad) inc icebp rcl icebp push loopne add pop mov scas adc mov or sub xor pushf adc sahf popa pop mov and test jmp movl je stos adc loopne ljmp pop adc mov (bad) out xor ja sub andb (bad) fbld pop xchg lds fisttp fs sahf test inc mov or mov and add add (bad) mov adc push dec mov mov rolb mov push enter js fiadd enter jle mov loope jbe nop mov xchg fldl stos push xchg xsavec addr16 cmpsl fsubs adc mov inc imul add in pusha xrelease inc test movsb stos aad shrb js mov sbb fldenv mov sbb fwait and sbb or unpcklps mov jns mov jne ss test xor les leave pop add int arpl push xchg cmpb iret jmp (bad) decl cmp ret cld and nop cmp mov lods insb cmp inc xchg daa (bad) popa test mov (bad) cmp mov jmp or popf in pop loopne js ds mov das leave pop sub sbb mov or xchg cmp push xor xor inc fcomps fcomps sbb nop scas lock mov or sub pop jl xor cmpsl xchg sub arpl jge add push sbb inc or dec orl loop pop in cmp fsubp or xchg fisubrl sub movsb mov sbb push push jmp nop push sar push pop dec sbb int3 lods nop inc jle movsb mov cld scas add inc mov sar pop pop pusha jo mov and mov ljmp out cmp inc aas xor mov ret inc cmp inc cld cld mov jo in outsl sbb xchg fxch sarl cmp xor mov jbe sbb mov inc ljmp and sbb mov dec (bad) inc test push mov dec imul es or movsb pop daa add pusha popl inc nop inc mov test cmp mov push rolb daa push and int3 adc ret shr push shrb and cld cmp jne ss or sub push push sub and (bad) pop icebp cltd (bad) push push movsl cmp les (bad) adc pop lea push leave enter je fdivrl push push test mov add jmp adc imulb mov or loope mov stos sbb ror mov adc or pop daa mov cmp daa inc adc add adc push adc push lods add push orl push pop outsb cmp push sbb adc adc popf add or fs dec repz aas cmp cltd dec lea or mov bound iret jno add bnd mov inc pushw dec and inc mov push lea mov stos xor popf lea (bad) js sub clc lret je movswl loop arpl jmp cmpw lods imul xchg inc add outsl js push inc int3 push sar mov xor adc lock daa icebp (bad) movb scas xor in xor or add lock cmpl ret xor out add jns repz fldenv jle pop das ss popf je cltd jo rcrb xchg test adc sub (bad) cmp xlat sbb cmp stos push jno jno xchg xchg adc cwtl sub stc ret (bad) add push and push add inc xor xor adc ret xchg test xor dec dec movsb in add dec adc xor in (bad) mov call aaa dec in addr16 lret xorb cmp movl push mov or mov add or roll pop and add push push jmp xchg push jp adc sub inc test mov xor loopne or ds push adcl repnz add xor loop (bad) jnp jmp popf and push sarb sbb or push aad xor outsl lods (bad) xor jge or lock lds mov (bad) or cli xchg addr16 popf or test clc clc xlat mov dec mov push xchg xor ds jecxz shrb and pop sbb scas aam je aaa cs stos vlddqu es xchg fild ss sbb nop adcl and push (bad) int test lret daa adc or sbbb ss out mov adc xchg jne push or test ja dec andl pop add lahf adc faddl cmp pcmpeqw jle jne jle and pop and pop loope cmp mov mov or rolb dec xor (bad) pusha stos adc adc xchg ficomp inc les imul les arpl leave mov call shrl scas push inc ja add mov leave push adc sar ss push pop push lock inc inc in add rclb lods push jecxz inc ret enter mov movl inc test pop cmc push mov add ds (bad) ja adc mov or push xlat lea loop dec adc mov inc jecxz or xchg cmp jb ja out adcb js loopne scas test je add mov jg push enter fcomps cltd test add add cmp push rclb push mov mov ror inc insl test or inc (bad) sbb cmpeqps xor sub test imul xlat lock ja xor in inc jb in clc nop xchg mov or pop and push push in push loop loopne push inc mov stc pop sub dec cmp aam loope sbb aaa pop adc or adc and inc icebp movsb mov pop dec loopne bound arpl push subb je lea push jecxz push xchg fsubrs and scas or not dec adc mov pop loopne adc push std rolb movsb pop push (bad) sbb xchg dec insb cli adcl adc sbb or pop mov or int in and sub push adcl adc cmp pusha cmp or jbe pop push in lea or or loop sbb mov push xchg pop cmp es push or xchg (bad) and out adc mov mov ret push push loopne pop ret mov jecxz pop xor xchg addr16 jb mov mov sub mov mov mov and or xor sarb std and js mov or inc pushl (bad) lods in rol enter jo (bad) xor aas xchg add add or mov cmc (bad) in outsl mov sub imul rol cmpsl pop push das push xchg mov nop jo int3 lds movsb cmp loope push fsubr and cmp inc sbb cmp ret rclb xchg xchg addb mov shll leave loop icebp mov popf dec and aad push mov push mov inc repz mov loope icebp mov mov inc loopne mov push inc loop (bad) push sbb sub jecxz ret scas inc mov out xor cmpsl lret fstpt cwtl add mov push xor and xor sbb fadd pop xchg jae xchg mov sbb push or dec sub or fs push mov mov xchg mov mov pop pop outsl inc xlat lock es xor repnz xchg es push add sub xor pop pop add push xchg push xor push adc or jge pop mov adc pop dec pop xor loop dec or jg pop pop test movhps jnp add add inc push std daa test cmp jmp lods jl add pop in sbb sbb dec inc or stos jne lods inc xor dec movsl jg and (bad) in mov adc push xchg ljmp int3 je je and adc call inc and mov xlat add icebp cmp mov dec xchg inc (bad) sahf jl dec sbb rcl ret push add push xorl pusha rcr out add xchg push push addl jae cwtl (bad) mov push xor fistl movsb lods fsubrs hlt dec add jae,pn call (bad) js clc sbb shrb je mov jmp mov mull add adc cmp gs add and push ret inc inc push mov add adc daa mov adc sbb gs add xchg or (bad) sub les pop (bad) dec daa push sub jmp add jne pop iret adc add xor pop ret sub pop add sbb mov sti shrb dec lahf (bad) and mov out pop and sbb (bad) repz iret aaa inc sbb dec aad add daa inc jne push imul jge sbbb rclb clc cmp inc aam jmp xchg push les jne bound mov xchg inc push or dec and xchg cmpsb addr16 insl push popa cmp icebp and sbb and xchg shll ss push xor push add pop mov arpl mov xorb push push cmp mov sbb jae sbb or xchg cmp movntq out arpl sbb imul clc in je out je cmpsb cmpl js fwait xor mov shl mov inc or fcoml xor mov or jmp lret jne inc ret or popf lods add push inc sub mov jp int lods xor rclb and or xchg rcl push rol jno dec lods adc mov sub (bad) inc cwtl pop shrl loopne cmp push inc sub test fist cmp lret cmp xchg xchg pop negl adc cmp cmp dec bound dec test add lods sbb daa mov jbe xchg icebp in pop popf jmp test and subl rclb push sub sbb (bad) mov mov sbb ljmp (bad) and add cld xchg mov nop mov add inc push ret mov dec je push daa pop imul sub add adc loopne ja loope push (bad) jg pop pusha dec xor roll dec and sbb add pop mov and movzwl push jo je or sbb mov and out dec mov push sbb jno fistpll mov out aaa pop or or xchg add sbb adc push int nop (bad) (bad) push push or es nop inc cli mov push dec fisttpl call cmpsl outsl xor nop fnop out and add xor nop ret jmp push inc mov dec or pop dec push lds push push and xchg test cmpsb fidivrl aaa clc js and or sarb and cmpsb pop or dec inc scas push sub sarb (bad) mov xchg jmp sbb push push dec (bad) or or sub in or adc dec pop in popf or es lahf dec add add push adc stos lock jge loopne (bad) adc ret leave ret xor sub pop push movsb pop pop mov xorl mov ds push fimul movb mov pop push inc loopne add push inc push push notl iret mov xchg adc cmp test mov mov stos arpl test divl and and cmp xchg adc add xor sbb jo ja xlat scas pop lret add mov repz je test xor cmp movsb (bad) jno insl xchg dec mov lret sub gs lret and test or mov sub add shrl pop jns push das mov jg jecxz insl mov and out adcl xor jno ret add fadd hlt out and (bad) jbe aam (bad) loopne repnz std leave push cmp xor or xor andl clc sub adc push dec adc scas mov sub dec adc out in dec sbb test pop push rdtsc incl (bad) adc outsl cmp cmp and gs mov (bad) jle jbe jne jmp cmpsl in add xor sti lods push xor add push jbe add int3 adc and xlat sbb mov pushl fcompl inc or jle ds xor loope inc (bad) dec ret or push and (bad) xchg lods sub add mov (bad) xor insl call divb dec lahf add push imul or in hlt jg add lcall into pop add xchg cmp add icebp cli dec dec pop das lcall in insb fisub and data16 rcrb and in movsb lea adc push add or (bad) push xor call loop push dec adc mov xor mov loopne mov mov addr16 test mov insb and pop pop addb out push lea loop mov xchg pop imul adc rcr rorb adc or sbb or iret rclb cmp or adc xchg and imul mov fstpl ljmp mov adc roll lret stos sub push shlb scas sub sub cmp adc daa and sub rcr mov or daa xchg out in or call dec shlb inc sub push sarl or int3 xchg push test je rcl out dec (bad) shr sahf inc jno (bad) in inc lcall push mov push mov fcoml pop inc xchg xor add pop pop jmp adc jmp movb lds dec cmp add xchg out mov cmpsl mov dec ljmp inc je sub shrb sbb mov inc jmp pop insb int mov mov rcll mov and dec mov enter inc call mov push repnz push dec or movsb imul mov sub inc (bad) mov dec mov mov dec push adc inc and sbb sub sbb dec dec or loopne test pop int jl outsl das cs std sub aam adc and jle (bad) in adc or add add dec lock push mov iret dec dec sbb mov cmp fmul adc pop movsl or mov ret into adc into inc dec add popa push push insb add (bad) mov add mov shlb jle sbb in lcall inc lcall sbb movsb imul clc sbb mov aam les inc pop fsubs sbb enter fsts pop enter add ret add movsb add push jg adc inc dec jmp lcall fmuls mov pop sub lcall fimull inc xchg jge bound cmpsl dec pop enter inc rcll rolb or pop add into mov mov mov sbb insl xchg cmp sbb lahf mov or push (bad) in mov add adc sbb dec outsb add out push add pusha sub jmp or sub andb imul sbb jmp pop sbb pop pop (bad) xor cmpsb flds ret loope and les add (bad) pop dec inc dec or mov xchg mov mov push adc push push clc xchg lcall in dec aam movsb push imul dec push push mov clc add mov mov aad lahf loop mov stc cmp lcall leave fisubrl pop jmp inc test sbb dec lods mov push push jmp (bad) gs and call xchg sbbb pop sbb insl adc (bad) mov xor inc insl mov push icebp fwait push push dec adc inc lcall fs cmp div imul adc pop into int3 stos mov or insb add adc and sbb pop dec mov ret mov push sub scas jl or aam aam adc xchg fmuls fwait cmp dec mov xchg cmc test hlt ret jne mov add inc xor mov inc push insl pusha cmp aam inc sub xchg push xor mov add jno fs inc outsb push mov jnp pop aam add in jg iret add test daa push adc cmp test dec or adc sub xor mov adc push pop and xor enter loop sbb rorl pop popa fucom and mov adc movsb loope nop je and test mov cmpsl enter sub cs lods push dec lea jecxz jg dec scas mov cvtps2pi xchg lock fild push add cmp inc add daa nop jno scas test jnp or sub jne (bad) sarb (bad) in or jle add loopne or or add adc cmp cmpsl stc test add mov rorb cmp mov cmpl mov mov inc push es das das jmp arpl dec and inc ds mov xchg int mov or adc add leave mov xchg push mov dec and outsl cmp ret mov adc xchg jnp add mov push add sub test mov mov inc xchg sub and xlat les (bad) adc mov mov add xor aas fimul lock or loop push sub subb (bad) addr16 push fistl pop inc pop xchg mov dec xlat loopne xchg test xchg addb adc imul jno or sub adc loopne jmp sbb adc mov jmp inc aas adc xchg sub push inc sub ljmp in xchg jle mov clc xor mov mov push hlt add adcl sahf add add rclb or push stos ret in fldl mov adc add xchg movl pop jbe and lea mov cltd inc mov push add cmpl push adc pop sub or inc js into loopne mov mov or or nop push pusha lds xor mov ret das add xchg sub adc mov or arpl rclb inc addl aam pop call out bnd insb pop fnstcw xor add test pop xor jmp add mov mov add push cld jnp dec clc and daa sub lcall call pusha dec call adc jle pop sub add adc fmul or cmp cmp push adc sbb sbb clc jo cli out pushf jmp cmp jge cmpl roll jne enter inc xor das sbb or dec mov adc cmpsb or lods pop mov subb cmp out xchg xorl inc lock pop mov addl addr16 or and push cmp leave mov lock pusha mov push inc inc test mov cmp dec (bad) sbb jo scas add call add test jns mulb dec mov or mov psllw sti or daa cmp or ds add mov aam sbb push inc stos das sbb sub pop pusha pop or cmp cmpl sub adc (bad) adc sub mov (bad) adc adc push in je lock jb lret and and test sbb add pop add pop je push in int ss mov ja or push mov loop add fsubl loopne inc and xor cmp in out dec out and xchg inc fistpll jae mov mov mov add jo add (bad) mov test cmp adc cmpsb push cmp dec xchg add and cmp adc dec or and pop jnp out pop or pop cmp sbb jbe sbb js and or xor add pop push pop jmp push adc inc inc add jg nop ja ret cmp je pop and out lock xchg sub roll popl mov iret test xor out and (bad) out test adc push rclb mov or adc (bad) aam (bad) ror decl das imul lahf and pushf das shlb fmull mov push out enter (bad) push insl loope mov sub incl incl daa jbe loopne lret insl mov or hlt sbb add ja (bad) cli into (bad) (bad) pop aas andb push int push sbb rorb inc cmp and cs push dec and jno and outsb (bad) xchg pop es mov lret push or or sti popf sahf add jp (bad) sbb inc fs cltd mov (bad) add iret sbb movsb lock inc sub sub out jge adc add or sub faddl imul jg add mov iret sar jmp mov push lahf dec movsl mov push inc add or mov pusha inc out dec cmp add stc out insl addr16 gs push add sub std and xor jmp imul (bad) mov pop (bad) cmp (bad) cmc sti popa repz iret xchg cmp pop dec lea push loope push ds jmp push push loope arpl mov xor sub movsb xor psubw (bad) mov jle cwtl pop fs push mov dec mov mov jne addr16 push in pop rolb into inc inc ret inc test add add jmp roll mov adc inc pop xchg or outsb lock jmp aam ljmp adc fs movsb push or popa pop test pusha mov and mov mov xor xor inc mov adc adc mov (bad) jmp scas in mov sbbb pop popf adc pop add or jg or (bad) aaa pop popf sbb lods addl inc addr16 (bad) daa or sub add aaa adc xchg jno cltd clc sub sub outsl adc int xchg (bad) mov jae xchg loop sub mov xor rclb out mov nop enter xchg xlat aaa adc inc cmp or dec cmp hlt mov fs or fmull or pop push and mov fdivl cmpsb adc sub fnop and cmp mov mov dec push add jecxz sbb jp push test mov adc sub fdivrs lock cli lea loope add mov hlt test pop sbb pop flds out in add jne push jnp cmp pushw and imul add inc adc push xchg push push clc add gs fs shll xor lods loopne loopne xchg mov jl jae sbb mov pop loopne and sbb sub jl sbb fisubrl mov and push addr16 add and and inc stos jp jecxz xorl mov pop or and pop push xor inc or sbb mov aaa pop arpl and ficoml adc (bad) mov clc (bad) adc cmc in sahf push insb idiv scas xor rol cmp or dec leave pop (bad) fistp loopne dec sbb insb or add iret mov add and sbb dec lods mov cmp inc addr16 fdivrs sbb xor xor idivl ret pushl ret jo sub loopne and hlt jne dec xchg lea gs sub add push jle or sub out test daa xchg mov leave cmc xor repz aam (bad) fisttpll xor cmp cmp mov sbb cmp cmp mov (bad) ror mov sarb xchg or jle rcr ficomp inc mov push stos ret adc shrb (bad) aaa test addl or inc insb push dec insb jecxz or outsb jg push in fs adc add push or add pushf mov or test pop mov clc pop aaa or lods inc xor xchg or fs addl shrb lea out call call xor dec and mov inc mov push fs out sub and push cmpsl inc cmpb ja insl mov jg in (bad) mov mov inc cwtl sub lock cmp mov xorl cmp add xchg or and rolb adc in cwtl cmp inc mov xchg and es dec out dec mov mov inc adc jge jo cmp ret (bad) inc movsl fs inc pop inc jp adc add and in rolb lret or xor mov adc xor and jns lret xor adc push cs clc add pop ret icebp aaa outsb sub jne iret ret adc lds mov jle inc jl sub lahf data16 sbb jne mov ret mov dec sub push mov aaa mov sti jecxz dec pop mov jmp push add rcll dec or sbb test push into push fcomp xor into stos mov cmp adc xchg sti add mov sub cmp imul pusha mov xor icebp test inc jo imul or pop sub test jmp xchg inc daa or negb push inc movl sub mov or rolb add jle mov cwtl fcoms adc jmp xor sbb inc cs nop in lea pop push jb xor movsl sbb inc dec inc jo xchg ja push lds xor pusha loop or sbb (bad) mov out or or sbb popf or or pop adc push mov or flds sbb pop mov daa sbb or in mov cmpsl pop jne,pn daa (bad) push adc pop adc or push jne sbb sub pop mov push xor push inc mov jmp sub xchg add adc xchg sub sbb and loopne fmull sbb fcompl gs enter lods ret adc lahf add clc sub cld (bad) shlb pop ffreep add fldcw lock aaa popa cltd pop mov in jne add add ret xor or xchg cmp push clc out mov ds mov jg jg add add cmp xor push cmp push sbbb pop add inc xor daa mov jl add sub aas adc ja xor sbb add xchg jg ror sbb pop pop (bad) pop pop push jg cmp inc or inc add fadds sti jmp cmc js and jne sbb mov push push sbb movsl mov dec cmp xchg pushf or jo or (bad) loope (bad) fcoms addr16 hlt xor shl dec xor add pop test add add or add cmpsl sub add cwtl sbb mov sub test push sbb mov xchg or push sbb push shl movb push dec cmpsl jno xchg pop jo mov push and sub push push (bad) xor sub (bad) xchg push sub mov adc loope and js scas imul leave inc cmpsl pop cmp daa rclb dec clc repnz pop loop xor sbb repz push in inc mov pop xor rcrb jge add fisttp inc pop adc xchg int3 or imul xchg mov xor inc sub inc cmp lock jnp jne sub movsb loopne gs or stos inc clc dec add ds push add int3 lock jae mov and insl pop sbb xor imul pop lods add inc cmp and jmp sbb lret mov inc sub or push xor push jno ss in (bad) jo call sub movsl imul inc inc pop test ljmp movsl sbb enter clc cmp pop adc xorb push dec in cmpsb add popf xor iret add add or pop insb sub pop (bad) scas push addl xchg or popa mov (bad) jne pusha sbb dec add pop adcb in enter lret dec and dec cmc inc mov cmp add inc mov inc jo sbb sbb fcompl ja add inc add xor dec imul and adc inc je push jmp pop or popa push cltd sub inc mov mov faddl pop dec cmp cltd and mov dec dec or add add or push lods push lods push xchg cld xor or mov pop std adc les clc dec (bad) ret subb mov scas jo sbb ss add mov test adc or lock clc in inc movsl imul call push int3 mov lret and in dec lock les lock in or push fwait adc (bad) pop rolb lcall or outsb dec sbb es push add dec int cltd mov sbb cwtl inc add pusha push or sbb and inc bound test pop nop and sbb jmp jne or sub push push mov sahf or or lods jo xchg dec das fadds or das test adc add push lock bound rcrl outsb xor stos leave movsb or or mov cmp or jp fsubrs es push jne add shrb hlt add shl push and das sbb pop push lahf pop sbb mov sub (bad) mov aas mov icebp or add popf push pop push dec icebp or iret adc or lds or sbb mov mov mov xor mov cmp enter push out jecxz xchg ror pop add pop dec push test cmp mov rclb and xchg out dec pop sub dec xchg arpl loopne adc je hlt hlt lock push cmp hlt push add pusha movsb dec pop inc dec or or add jmp popa inc adc mov (bad) es fdivrl dec clc xchg sub push popf mov dec (bad) mov and xchg or adc push mov loopne inc adc das lret bndldx adc mov cmp push mov loope cmp jb arpl jecxz test adcl jge dec addr16 push nop enter int mov push pop xor pop das out into push into jecxz imul nop or int3 sbb xchg fwait jmp pop sub or mov sbb sub inc aaa nop or sahf xchg push shrb inc push das or push test adc in inc ret nop lock mov dec mov jl pop jno jle add mov mov sbb das adc pop push scas adc add fisttp jo pop add xchg pop mov (bad) adc sbb std std in and inc push adc xor jecxz xchg cmp xchg xor iret push push inc ret pop fldt cmp dec ficomp jnp dec inc icebp push push pop xchg movsb add push jg je imul imul push mov cli stos jle icebp jo les das sbb pop add inc xor out cltd adc fwait sbb and or or imul jo rcrb fwait cmp ja inc sub inc add call lea xor and sbb pop in in adcl jo xorb lock xor xchg mov adc xchg or sub inc rcrl or mov rcr pop cmp or xor cmpxchg in inc loopne inc push inc sbb js mov in nop out loope in aaa push lock mov test mov inc repnz or mov sbb data16 push sbb pop jne mov mov andb dec jae cmp jne pop cs jp fucom adc imul and xchg push sub fiadd and push lret imul mov inc test and test and push pop (bad) cmpsl add xor adc fcomip dec and pusha fs sbb and call adc pop push push xor jle mov adc clc mov pop out xchg lods mov sahf mov sbbb bound jp sub push push add xchg imul arpl and and test pusha scas add cmp dec nop or mov data16 and adc ss pusha ds cmpsl cmp mov cmc (bad) or test sub mov cmp xchg popl mov lea push ret insl xchg cli adc repz add push dec inc jae push adc and fwait mov lret mov lock dec push mov arpl lods add mull in add (bad) pop popa pop roll adc mov sub clc sub mov ret add push jns mov dec mov je sub add or add or rol cmc sbb sbb fnstcw stos add clc push mov mov les jle push fs mov mov fildl test in and jge jnp mov push xor out fnstsw dec lock ss add mov mov push lahf test lret mov (bad) scas mov xor icebp push lock nop (bad) xchg (bad) sbb dec mov pop outsb cmp cwtl cmpsl call ret sub and inc inc mov pop (bad) popa xlat aad and jo aas jecxz sub pop adc test hlt add sub xchg fsubs cltd jbe mov pop insb inc jo (bad) cmp sub add sub cmp (bad) mov cmp lds (bad) and nop insl add jmp sbb aaa adc inc pop das lcall jl js cmp inc or sbb scas and mov and push shlb pop jmp inc pushf cmc push stos aaa mov popa adc mov rcr mov rclb mov pop dec inc mov test ret and pop lahf dec fadds mov nop or add xchg pop ss sti push mov cmp cmp jl or pop repz mov pop mov sub jg test add dec sbb push xor adc xor das stc nop popa inc es sbb jg sub xlat ds and and add sub inc (bad) dec dec pop in pop inc cld mov sub nop pop fstps add jne (bad) fdivs cmpl pop mov pushf jns jnp sub outsb pop aas xor or aad dec push sbb xor ror pop xor dec dec and push test or and fisubrl mov pop imul stos rclb inc mov addr16 outsb push icebp popf hlt xchg sbb outsl mov jne mov test mov cmp sub in push cmp pop (bad) pop add jecxz dec ja and popa mov nop jb arpl cmp xchg cmp xorl dec dec and mov push push jo adc out test sbb das add ja lea lock sbb call push out lret push xchg mov test xor xor or add sub es or aas sbb add divl les clc adc mov fadds adc test and inc xor push xor (bad) cmpsb outsl lret inc mov xchg (bad) mov fistp call stc cltd repnz jne out jecxz nop cmp sub loopne inc movsl into xor in gs (bad) imul dec xchg mov jae add js jne jmp scas add adc sub mov scas popa cmpb xchg popa mov cmpsl add sbb es sahf rol adc or mov inc cmp daa jg adc lods xchg das dec fsubl jge add ret sbb push out pop nop lods adc xchg adc rcrl (bad) xchg icebp and add adc lds and mov loopne push and push cmp inc sbb cwtl inc and fisub push imul lea (bad) std pop pop jo and and cmpb mov inc cmp fdivrp push jmp punpckhwd push subl aam (bad) mov nop ret dec push pop or lahf jge je jmp popa je jnp clc sbb mov ret cmp nop pusha cs sub mov inc shr ljmp add push xor daa adc inc dec mov aam and stc jl fs sub push hlt in push dec ret cmp test clc fmull cwtl test add fwait mov adc push jnp sub lret cs xor pop push mov js in sub nop xchg or les movsb jb mov mov and or or sahf inc and push dec push mov dec dec inc add insl add push inc gs jbe loope push gs cmp add test sti sub adc jae push popa das dec sub imul inc xchg das inc in inc add arpl das (bad) ss sub nop pop fidivl jno jp gs cmc sbb push inc push es cmp mov fbld (bad) inc testl mov fsubrl insb sbb mov jl (bad) leave ret or pop push sbb rcl or add mov xchg ja and jo hlt ljmp or (bad) xor xor dec mov push add mov cmp xor loopne and xchg pop cmp sub sub loope jbe inc pop mov push jnp insb or and cs inc adc and or push cmc sub popa inc shr push leave and cmp pop insl inc es fstpt lods rorl sbb and repnz xor dec adc dec sbb movsb pop xor lea sbb sub dec pushf cmpsb lock add mov add sub push pushf jno mov sbb ret mov das mov mov push and xor cmpsb and lods dec mov or xchg inc push push fs pop repz or int jle rol fstpt js test out rorb xchg pop jp iret mov aaa ja outsb pop and pop clc add (bad) mov loopne test inc test mov inc jmp sbb cmpsb lock sbb mov and fstp push mov pop xorl mov enter subl lss sbb xchg add xchg xchg jns into xor (bad) leave adc push jge out nop mov sub pop cli fwait push fsubp and inc sbb inc insl lods inc push aas sub adc fistpll cwtl add sbb clc (bad) out sti lods xchg hlt fidivr scas int3 push adc push repnz jmp das xchg xor nop bound and add lcall cs out mov xchg insl jl addr16 xor xchg mov inc sub sub dec aaa or loopne mov es xchg adc or mov dec xchg ret shrb jne jo adc cmp pop or sub add pop inc test ficom xchg ss push hlt out and mov jne mov rolb xor mov sbb rolb int sbb dec roll in pop xchg mov test add cmp sbbb shrl jo mov mov mov shrl pop and clc or cmp cmp pop push pusha inc xor push jle mov rclb lods sbb push and dec inc inc adc nop or test subb mov pop js arpl frstor inc rcll jne fstl outsb bound ret outsb imull pop or inc push in sbb nop (bad) loopne inc or inc cmp loopne movl xlat xor inc dec add pop xor cmp mov push js pop push fs inc mov or scas xchg fcmovnb mull jl aad push mov les sbb push lahf pop sub inc and popf push and or ljmp mov xchg push xchg xchg into imul ja test cwtl adc aad aam call pop and cmp sahf out sahf inc dec dec push push pop push popf out pop pusha fs outsb imul xor or gs add adc add fcoms xor pusha lods inc mov add popa aaa js xchg mov xor xchg or psrld push bound imull popa pushf (bad) stc dec ret pop mov inc inc xor xlat dec sbb push aam push lea inc cmp add inc push inc add repnz sbb push cltd sbb es rorl xchg (bad) dec ret pop or js ret repz les xor int mov push (bad) sti loope and les dec mov pop insb lea lock and sbb xchg pop shll xchg fbstp sbb jg push rolb (bad) (bad) add adc or ss lcall xor cmp and gs or addb or and rcl xchg loopne or arpl sub aad add mov xlat leave out mov aas pop xor sarl dec (bad) or pop pushf jl (bad) xor mov adc hlt loope or cmp jne xchg lea jle cs popa stc sub jle xchg push (bad) cmp arpl jne mov xchg add js js vunpcklps shlb pop inc jo rorb mov test mov xchg andb push jl rorb call mov mov arpl or xchg inc (bad) in mov or sbb fistpl out stc push and sbb xchg xchg pop (bad) (bad) sub cmp add stos test sbb push or jle sbb or or xor loopne pop imulb mov push lock insl neg push jb adc pop aas push xor sbb push xchg pop xchg jmp add and mov or rorb xchg cmp inc cmpsb and sbbb cmp push pop inc ret xchg sbb imul outsl push adc inc sub mov push xchg nop mov iret daa adc fsubs daa adc mov xchg mov mov mov push sub bound (bad) push das xchg add mov dec mov inc adc xchg dec pushf in or xchg jecxz add push out lods dec push push dec xchg jecxz lods ret sar adc push push je adc jne movsb mov data16 and push lret outsl jae add and mov (bad) xor jnp inc dec or cmp xchg sahf or xchg pop or lods or (bad) leave in rclb daa push into add lock outsb loope lahf push push dec out fmull pop pop sub das outsb inc aas js (bad) or out push xchg adc inc sbb in imul fstl sub dec es call mov mov cwtl dec jne test or jle out add jl xor pop dec fs jbe mov pop inc movsl pop jnp mov inc cld je add adc pop jl call xor out ret rol cmp jne dec adc psllw push pop jns inc fldl loopne push pop mov cmp lock incb mov push add xchg mov cs ljmp pushf dec lods xor lods adc test add into js int jmp add (bad) cmp je pop push push loop pop mov je aas jl sbb and rorl outsl or inc jne or insb jns js les mov cmpsb cltd imul out or mov jg pop adc pop mov push sub js lock push rcl xor dec xchg inc jae rorl push xchg lds pop push cmp add icebp add or minps adc push inc addb adc add and orl pusha pop dec dec rcrb jno mov lods jge cmc sub sbb or add hlt and or sub inc pop or aam insb (bad) pop clc xchg outsb lock mov push or js cmpsl jmp pop ds jecxz nop into xchg popf mov sub ss (bad) mov push adc sbb pop sbb imul pushf add jne nop sub jl mov adc dec push and (bad) add ficom jbe aaa addb sub lcall clc lcall adc dec xchg int3 es add imul sub (bad) lret jnp push add mov imul jb jb jg mov mov outsl fmuls cwtl add add pop push mov ss mov pop sbbl xchg xchg push adc out push cmp add ljmp adc push push aaa add sbb sub push cmp movsl sub aas and add outsb loope aam lret divb pop adc inc scas mov subl pop inc xor dec imul push mov scas das outsl mov dec leave cmpsb (bad) mov adc xor add xor inc mov xor inc inc sbb rorb fistpl das jne sbb and sbb xchg add addl pop inc xor pop or lea push xor mov nop or cld mov inc cmp movb add mov sbb inc sbb dec dec gs or orl push pop mov jo xadd cmp mov movsb (bad) imull mov bound pop adc mov push adc jne rclb inc nop imul movsl call call mov lock icebp stos and subl clc in push sbb out shl jnp sbb push shrb ss ret xor xor ret mov std cmp mov xor push popa divb loope pop jnp inc pushf mov xchg xchg push sbb jno outsl and cmpsl xlat je mov xlat xor and mov movsb movsw nop (bad) mov ds adc adc mov inc xchg and sub cmpl and or je sub xlat or andb dec sub addl mov cli js add adc inc add out dec cmpsl fstpt mov popf jecxz insl test pusha jbe jno outsb leave xor jnp mov xchg lock or jae stos push pop popf dec xchg mov add or insb push cmpsb in inc (bad) test jae icebp hlt inc mov pushf arpl cmp nop cmp iret inc nop dec xlat xchg dec lock mov js insl cwtl movsb or rorb push pop ret sub dec arpl or or dec pop cwtl jmp add hlt cmc dec push mov xchg (bad) iret jno mov mov jge jno aam push pusha notl ret ret cmc pop enter iret mov xchg push ror adc ja rcrb inc jbe jo in ljmp pop add fistp xor cmp leave mov lods stos daa push inc test sbb insl sbb sbb xchg hlt add push sbb adc out push sbb hlt adc push mov in mov push dec or mov cmp cwtl movups add int3 popa and (bad) hlt call or push (bad) mov lods dec nop jge sbb out imul jns push dec sub jl cld add inc add inc movsb rorb sub test pusha inc jg or sbb sbb int into movsb jmp sbb mov sbb jg cs fildl push test and pop negb pushf arpl icebp lock mov setl cmpsl push (bad) popf and (bad) stos cld push or movsb jmp push loop add adc inc mov ret push pop xchg jbe pop lahf adc xor scas mov or loope xor mov mov (bad) mov lahf sub or aaa inc lcall fisub add push movsb (bad) jne inc adc pusha mov or add cwtl clc or inc pop jns das inc fldenv pop sub xchg aas pop popa fidiv xor inc popf pop and mov das lahf cmpsb (bad) xor cs mov adc loopne or les mov sarb lcall bound dec push sub add mov add mov add xchg jo xor (bad) pusha add inc fbstp sbb add in mov jae notb jns fs call fwait dec mov add xchg fwait inc push jb (bad) cmp inc pop xchg or xor inc add cmovb pop movsb sti jle shlb addr16 xchg inc test xorb (bad) iret add mov or mov mov inc inc ret mov dec jecxz or jmp sub sub inc adcb mov add jg or mov (bad) outsl and (bad) aaa sub push lods cmpsl and adc outsl arpl and inc xchg out xor daa mov sarb xor inc jl pop sub xchg test xchg invd dec and push add or or push sub xor jl pop popf or insl pop fsubs in push and jg ret movsb inc and sbb xchg cmp mov test clc jmp xchg enter (bad) cs es inc (bad) dec ja and ja dec mov inc dec dec jns mov out adc mov aaa pop dec ret sbb movsb push inc cmp inc adc stos add sti iret or scas (bad) cmp cld or fdivs lods adc and adc and add jo in lods xchg mov orl (bad) hlt mov inc adc mov xchg xchg or and les pop pop test jl xor dec cmp int3 pop adc add lahf rol pop push and add dec jge cmp add insb xchg inc adc sub mulb scas rclb fnstsw add fdivs gs cmpsl clc xchg cmpsl xor (bad) daa loopne xor push push push andl xor inc sbb aam aam in push (bad) push fcoml xor movsb loopne sbb mov inc mov dec xor mov dec call (bad) xor dec add xorl sarb es imul or adc inc clc (bad) lret lds adc mov or fnop mov arpl inc pop dec clc sub dec inc mov push lds fadd test loopne loop in (bad) lock call xchg xchg in stos and clc lods in add push or sub ret hlt mov and loopne inc test adc mov cwtl xlat inc inc cmp xchg mov adc or sub pop sub out mov pop push aaa lock repnz mov dec cmp adc test mov or xchg shll movsl pop dec movsb ret jbe repz lock sbbl cmp imul mov fsubs pusha dec push pop jge add test inc dec push popa and scas lods pop mov lods cmpl jecxz arpl das test or pushl xor cmp and pop ret es popf or xchg adc dec inc add cwtl jg mov pop outsb sbb subl xor push and mov push push rorl jo fs (bad) fcoml dec les fdivr cmp push arpl jae sub adc insb pop lods popf mov jmp outsl rorl push scas sub imul pusha mov add sbb rcrb cli pop adc mov push mov add dec pop cmpb or or shrl sbb xor jns (bad) xor xor push xchg cmp cmp mov mov add rol add or cmp jae (bad) fwait jg adc sbb fstl mov push dec sahf pop or or popa jb sbb ds or mov sarb push sar xchg scas add push bound insb fidiv js and pushf scas adc in dec (bad) mov and inc add movups (bad) jbe xchg int push into test dec aad jnp push inc fs arpl pusha or fcomi and (bad) and and int and imul mov sub fistpl lds inc (bad) nop fiadd adc xor pop leave or addr16 ficom mov or fldcw push sub es pop mov add lret dec fimul les mov jb mov push mov pushf mov mov jnp cmpb push call xor outsb mov dec push mov out cmp pushf mov stc sarl push mov sahf pop jl sahf pmullw and (bad) jns pop (bad) scas lods xchg fldt fdivrl xchg mov cmp push sbb push test enter mov xor lock xlat inc sub (bad) xchg lods pop lahf loop shrl sbb insb aam stos dec ja je (bad) lcall inc cmpsl pop sbb push test mov or pop mov or add pop shl xor or cmp cmp sbb in push inc mov imul dec cmp nop push movsb sub adc xor jmp js or sbb (bad) mov cmp scas or rolb push lock dec add lock jl xor cmp rcl inc push inc pusha push or add sbb pushf fisttpll cmp popa jne cmpsl mov cmp mov xchg or mov inc cmp adc cmp push inc aas sbb pusha sub pop (bad) out cs dec pop xor add push sbb ret adc pcmpgtd int3 jle (bad) not push cmp arpl fiaddl xor adc sbb shrl nop jo jns (bad) ds mov nop jmp pop mov mov push adc pop adc cmp lcall test pop lods push and je insb pop sbb mov dec mov test scas mov xchg cmpsb pop push enter jl movsb out cmp inc lock mov shrb out das cmp jmp jp pop es faddl (bad) jmp rcll adc jge add test and xor add add cmp fild loopne out mov adc (bad) hlt imul rolb and sbb dec inc lods mov scas add imul jmp dec adcb in add pop mov push add icebp or int stos add lret call imul (bad) mov or rorb dec scas das pop iret inc enter pusha es cmpl ret or fwait pop adc mov mov out andps mov adc popa add or adc jo fstps loopne adc sbb lahf mov fsincos xor je imul scas mov xchg out js fdivs add fnstcw sbb sbb jo out or and xchg int mov enter mov enter pusha js test adc (bad) enter cld push rorb pop imul push nop pop pop and fsts or adc mov and out cmp imul inc dec xor and mov test fisttp insl or imul or nop pop and roll ja dec or or ret and jo jo test cmc xor xchg (bad) test out aam xchg sbb imul push xlat cmp cwtl or xor insb push ds jecxz fist shlb xor xor xor inc mov inc dec dec dec dec dec dec dec dec mov push push push push push pop pop pop out cs dec xchg movsl fistpl adc rcl rcrb push push lods das add mov js movsb push fwait dec and jg cmpsl nop lea xor aas addb and std in adc and add es inc add fisttp repz and xor add mov push xor mov sbb mov test mov lods mov adc clc sub clc aam in adc push mov sub pop mov aas push and jge shll dec jnp sub pop mov in sarb stos pop cli add movsb imul and xchg push (bad) jmp das int push adc push lock push mov subl in and imul xchg add xor push inc inc ret and inc inc dec pusha sub cmc call lock push dec mov mov sbb or clc leave add or test dec outsl (bad) out sti inc push pop inc pop and enter sub sbb sub inc add lock inc or mov push leave cvtps2pd mov cmp outsl test push bswap or mov ljmp subl mov shrl pop xchg scas test lea pop add pop sbb loopne mov push das xchg or xor sub jmp lea pop mov sub mov push fwait pop repz xchg (bad) or jmp inc (bad) sti push add pusha or dec adc data16 dec aaa pop mov insb or in fadd push (bad) mov and lock dec lock xor cwtl push inc bound or adcb aas (bad) fistpll (bad) cmp ja sbb xor pusha cmc es je mov add lahf popa jo add mov ret adc (bad) daa call push fstps ret (bad) imul add and ficompl pop jp push ljmp pusha adc xor or arpl es sub test mov pusha mov sub lock ja fistp mov mov ljmp je fimull hlt xor pop (bad) jne adcl dec jp cmp sbbb push xor jb (bad) je adc push push cmp imul push lret push aas dec insl fcoml test repz and and hlt add ret add adc into inc cmp pusha push mov dec leave add mov ficomp inc or dec sbb imul cmpb fldcw sbb aad fmuls fnop gs mov cmc inc inc je test or pushw lods mov inc and lods dec dec or adc mov pop (bad) cmp dec add fdivs rcl outsb aas ret dec scas xchg pop aas pushf (bad) xor mov pusha mov rolb cmp enter jo inc aas movsb aas inc push popf xchg push les push fwait data16 dec mov in dec push sbb cmp jnp cmp cmp aas mov pop rolb pop cmp inc inc mov add mov inc (bad) movsb mov (bad) mov sub sbb enter sbb or add dec jg cmpl cmp test js cmp ret jns xchg mov imul inc (bad) add push mov sbb inc dec cmp mov dec scas (bad) xor addb (bad) rolb push dec mov adcl lock lcall das xor outsl jle adc dec lock pop pusha jle sbb add pushf fs test or add jne lods mov pop cbtw inc add dec dec sarb (bad) push (bad) out iret xchg sbb sub or rclb adc jle and push rcll dec push dec stos lods add out addr16 xor adc les sbbb data16 lahf adc mov or or mov jl je mov idivl ljmp repnz jo cmp lcall xlat or (bad) nop sbb lock fsubs (bad) push daa push pusha lret fwait push test cmp sti cmp xchg adc lock (bad) mov mov (bad) push or push in sbb add push adcl xor dec and add loopne cmpsl test dec sub popl test movsb sahf (bad) xchg inc sbb pop pop jecxz push movsb fcmovnb cltd je aas or xor xor rorb pop and pop or mov jl mov lahf xor call inc inc push jae add add mov mov pop sbb inc add dec lods mov sbb aas add std sub mov sbb mov mov mov aam insl scas pop pop (bad) pop push push adc fist mov movsl es dec dec (bad) jg testb test loopne inc jl add test scas xchg insb out pop and call or sahf mov push add push inc pusha iret insb loope test xor push pusha mov jg lcall jge mov sub iret pop popf push inc pusha shll xor mov xchg mov cmp xlat dec insb xor flds movsl test sub test adc aad cmp jae shrl mov lcall in jbe sbb dec (bad) rolb inc mov pusha dec mov shlb popf outsb add lock or test in data16 dec test xchg test or or ds mov movsb pop ljmp dec adc and inc or jmp enter jl inc dec xor adc call inc sbb mov pop mov ret mov push and add add jg imul movl cltd pop add hlt lret sti rcrb xchg fisubr cmp mov fcmovne lock inc outsb xor inc mov cmp arpl test or shrb cmp mov fldl fwait mov movsb les or mov jne ljmp sbb mov inc stos rclb mov push mov subl mov push nop sbb int3 push mov adcl sbb mov inc dec adc sbb setb inc dec fcomip or xchg mov push ret push mov pop xor fs jo pop jge lds cmp and sub imulb hlt adc fadd mov cmp scas and enter mov shll xlat or pop rsqrtps adc jns stos inc cmpl inc iret fwait test xchg dec cmp pop adc inc leave dec sub lret pop lahf lods inc iret dec pop das loopne jl dec xor sbb hlt or js call xchg push cmp jne push inc adc outsl int inc inc mov cmp inc cltd pop inc icebp fldl out jle sbb shrb sub les push sbb dec mov jo ss ret add mov dec gs or mov fstpl and cs les imul or sub push push pop push xor push push dec ret sub cld jno xor int3 sahf jns subl or mov dec lea imul cmp jo lock adc (bad) jbe lods xlat dec adc xchg rcrl dec push mov push int3 jo aaa pop push push inc adc sti jge lret dec icebp push fsubrs cwtl xorl xlat pop pop mov mov das rcrl inc add clc imul es xchg dec cltd add popf mov adc or or sub in aaa test fstl (bad) inc push cmpl lea sbb or pop inc ret insb fs out and lea movsb daa ss pop test push movsb pop daa test xor xchg andl mov jne pop add (bad) push hlt hlt pop xchg adc inc xor and ret and movsb inc push add repz clc or pop jns lret inc push xor insl sbb sub add xor leave lock rorl add sar and sti or in (bad) pop fildll push sbb sub sbb mov inc or adc lea add sub jo mov push insb or outsb aaa fistpll mov push and sub jns loope jmp push sbb add rcrb xchg jne mov add test leave jne loopne ret call dec iret push inc cwtl or or mov rcl fwait sbb je icebp xor adc andl loopne test mov bound rolb add xchg pushf or push loopne aaa sub hlt sti sahf jno xchg xchg adc test sub inc pop add sbb add jbe add test adc and mov adc dec xchg inc mov call or call add (bad) add or xlat lds psubb mov leave adc push jns call in adc xor les and inc clc xor inc mov lret clc sub inc ds xor adc sbb repnz inc pop mov test push push lret dec movsl roll xor clc arpl rclb test push stc mov clc lock adc inc sbb dec (bad) inc nop push call adc adc mov or movsb leave into add and sbb jns cmp pop push out sub inc cmp ret mov pop and mov nop pop and insb adc sbb sarb add adc popa test test addl sti pop popa loopne mov inc fimul add enter push je or in push sbb (bad) mov sbb jle (bad) (bad) xor mov xchg (bad) or cmp sub xor je pop sub mov pop cmp push pusha inc push sbbl and adc xchg fildll mov pop fistpll sub push cmp mov xor jl dec aam cmp pop jl or mov adc pop dec xlat (bad) or or add mov sub dec adc test stc sbb dec addr16 add pop fcompl inc addr16 push arpl mov xor lret or loop push pushf pop mov rol hlt adc xor push cmp dec cld (bad) incl lds lock inc call add jbe lret repz (bad) xor sbb add ret xchg jmp dec aaa dec fs dec movb (bad) jp dec pop xor xchg out sbb int jl mov and cmp or popa roll xchg leave test clc shrl pop pusha aad stos xor in ja dec sbb fdivrl adc int arpl mov or pop mov movsb cs (bad) test adc cs push and push add dec test jb and sub aas lock aad and ds (bad) cld sbb in add pusha mov inc cltd insb aaa hlt pusha sub movl lods mov fdiv push push mov inc inc sbb push dec and dec cmc testb aaa xor lea sbb imull lods inc ret dec iret and cmp xchg ret add mov ret adc adc pop jp aas pop push add fcom fstps imul cltd cmp mov xor adc xchg mov jne popa fistl ds clc or push dec sub inc and insb inc xchg outsb dec stos outsl cmpsl orb repz pop mov add xor adc push das or adc adc mov or push mov (bad) fucomip aas je (bad) aas xchg cmp movsb mov push divb andl je sbb cmp outsl test xor out add aas sbbl push scas pop xchg lods mov mov outsb fmulp pop nop dec ds inc push inc inc rcll lds sbb leave outsb (bad) or ret ds lret mov rol fdivrs lock cwtl pusha pusha sub je cld mov out mov dec mov ljmp call pop pop lock jno,pt aaa pop cmp xor jmp fs and lods adc cs push pop movb int fcmovu mov xchg es arpl push (bad) lds bound popa push js xchg lea mov mov cmpps jmp inc imul aas jbe and add xchg dec inc adc dec aas int dec cmpsb push pusha sbb popa cmpsl test sbb or sti js or or push xchg inc sub lea dec out mov or push jg pop daa xor mov or in mov out jmp test clc addb push pop test sahf scas dec jecxz jbe and sbb xchg jne xor scas dec cmp xchg and mov and inc inc dec jnp shrb lock or inc inc push adc push add push and test nop cmp mov mov mov or cs inc popa xor mov imul mov mov shr gs js cmpsl xor xor xchg jmp or fdivs adc adc sbbb pop add pop stos ret jno pop sub call jae movsl mov dec mov mov push fsubl push mov jmp mov out lret enter inc inc or mov cmpsl addr16 adc ljmp ja (bad) lea mov mov cld and lods out scas out cmpl add jo iret int jge xor xchg and enter adc or cmp dec xor cmp ss sub xlat xchg inc lret jle fistpll push cmp cmp js hlt adc add movsl les xchg mov (bad) or xchg xchg into and adc (bad) daa lock jl or dec daa push mov lret push ja mov sbb (bad) push pop pop cmp pop dec mov inc pop inc shlb ja movsl aas insb mov pop inc inc xchg jne sub xor dec jmp data16 fstpt lcall insb lret fisttpl dec push fwait lock pop gs movsb hlt xlat pop cmp xchg xlat lahf and mov and inc and sub xchg mov cmp cmp and adc icebp stos xchg mov enter push push pop imul insb add mov mov cs xor or popf dec out ss hlt jmp imul cwtl jmp mov adc push jb nop rolb or js adc or rolb mov into pusha lock fs in jl add pusha (bad) and cmp xchg inc mov xchg dec (bad) leave (bad) cmp inc or clc es xchg imul add sub fnsave (bad) adc lcallw xor mov insb sub sbb xor rorb in sar call sbb call add sub aaa mov repz mov and cmp mov dec lods adc add mov out in and cwtl sti jle mov xchg test mov mov inc or pusha or daa inc push lock push sti mov out sbb and sbb push sub push in idivb sbb aaa pushl dec inc add adc int movsb mov std push or xor adcl imul popa cmpsl sub and inc add mov mov in int3 add call shrl movb out xchg or jecxz lock sbb test or fldl mov (bad) mov dec jbe fld loopne xchg scas in pusha cmpsb xor test clc xchg iret aam leave rolb enter sbb mov pusha sub and and jle in les daa test rclb adc les repz xchg jne dec push pop outsb aam cwtl dec cltd loopne fs mov push aam je push sbb mov push mov cs repz nop fdivs push out out mov rcrb push shrl (bad) enter xor jno lea xor xchg inc lcall push stos lds adc sbb push jo dec dec and or xchg ret rorl dec adc mov jmp push (bad) daa add js sbb (bad) sbb dec mov jns mov dec leave idivb xchg sbb cmp jmp rol lahf push mov or push fwait divl push arpl movsl cmp ds push (bad) rolb loope (bad) xor popa shrb cmp aad (bad) mov stc into or or dec pop xlat (bad) dec pop out insl xchg pop cmp adc push mov or sub loope mov add mov leave push push mov xor sbb pop outsb dec je popa ret clc (bad) or into add and jne mov sub aas lea jp xor xchg mov cmpsb (bad) test popa es and aaa cmp aad mov sbb (bad) iret xor pop repnz adc jae fsubrs ds dec push dec pop int3 scas push xlat out call pop add mov nop sub cmp cmovae push xchg jo xchg and add dec add or add xor mov mov popa (bad) ja sti jl inc sbb xor int3 arpl inc movb or sarb inc mov pop inc cmpl cmpb movb lea inc test test sbb add negb aad pop mov add jle aaa xchg and jbe mov dec inc jne mov push les cmp inc cmp mov jnp adc lock cli or iret and adc pop push cmp add xchg mov rorb or mov xchg mov rcrb add pop jo loopne lds inc clc out inc xor insb in or push and fdivrs inc cmp in pusha shrb inc sbb mov xor inc xchg inc mov mov dec and faddp mov xor in out stc daa pop lods ja cmp out mov mov xchg push push lahf insl sbb or lea ret outsl dec loop je sub daa sbb xor push pusha xchg push (bad) jne hlt xchg mov cmp add and je push inc ret mov sub inc pop out (bad) (bad) push daa dec pop hlt add adc mov fcmovnb xlat (bad) and ret ljmp mov daa add lea loope xor pop sahf xchg and aad fadd jmp into inc shlb cmp js pushf xchg insb add mov or add fnop push hlt add mov cltd test jle mov adc cwtl or out xor adc aad or dec jo outsl mov aas shlb inc mov cmp pop adc adc ret dec jne cmp cmp ret pushf (bad) mov sub das mov (bad) and adc insb stos add rclb mov xor shlb add add xchg (bad) jle sub mov ja aam xchg add insb pop mov mov pop sub push add xchg jbe cmp push repz sarl cli lock cmp fcoml in mov add lock mov mov (bad) adc jecxz or xor sbb loopne pop push movsl rorb adc cmp jp mov jmp and sub dec cmpsl outsl or push sub sbb sbb lcall push stos push enter aas add imul loop push cli data16 cli sub add cmc add (bad) mov and sbb testb je orb and outsl pop in cmp xor push cwtl ret mov mov mov outsb sbbb cld xchg inc mov inc jbe nop xchg movsb push mov dec cmp sbb fdiv add leave adc lds test popa insl loope gs rorl inc stos add popl mov xorb mov adc jnp ds sub xor cwtl push push and (bad) and and sub sbb inc cmp je xor jmp inc lcall rol mov int3 mov mov jge cmp addl xchg dec ffreep pusha push jne outsl loopne jecxz cwtl hlt xchg sbbb adc xor jmp cs and lret nop test ds jecxz mov push push lahf rcr mov pop movb inc push add imul inc cmp cld mov jb pop loopne add test or add test (bad) sbb imul sbb out in adcl mov pop cmpl jl add dec push adc xchg faddp cmp into add adc aas cs inc fwait jg cmpsl inc sub xor arpl pop dec in or mov jbe mov out sahf inc pop sbb sub sbb pop (bad) dec pop cwtl dec rcrb das mov mov inc or xchg sbb push pop xchg fiadd sbb cli test icebp cmpb inc jmp (bad) repnz and icebp lods or ds mov add cmp shrb mov adc xchg hlt adc and out les test push dec aas pop nop pop push mov dec inc cmp orl fisubrl ja push add ret or in test pop or ret sbb test or mov xchg or or jmp xor enterw cmp cmp cmovl pusha sbb inc xor sub add ds pop add xchg (bad) jmp fiadd push fsubr sub and shlb sbbb push daa fnstsw jecxz sub test test mov loope mull rcrl jp loop pop adc inc xor add jo xchg xor jge icebp push test sub and add loope push cmpsb call and aam cmpsb fimul orl loop lret sub aas mov or sub ss loopne inc outsb faddl mov movsb sarb (bad) (bad) cmc jnp hlt jmp sbb out xor rcll lods adc rorb int3 xorb (bad) jl adc xor jne push je pushf dec xor pushf xor sarl fmull or pop nop mov or push into or cmpsl dec ficom jl pusha rclb in ror sbb pop pop icebp (bad) push lcall popl fcoms (bad) push ss dec push clc pushf lods xchg lcall loope aam xchg push orl pusha cmp dec or inc (bad) jbe mov (bad) pop jb push pop ret movsl test sbb inc fistpll outsb lock and xor inc hlt add in add adc add xchg cli inc add inc pop adc (bad) add inc das push imul cs mov sbb mov lcall inc dec hlt ret aas cmp ret xor push push lea imul dec sub dec push add push lock in add arpl inc cmp mov or inc in xchg icebp mov mov loopne or daa test add in enter nop ss orb dec xor or das loopne sub xchg jo cmp add aaa push pop inc push lock ret inc add cmc inc adc mov push repnz pop test inc push pop sub call fsubrl ds lcall sub sub or out or pop add sub ja jge es sbbl fldenv jmp je and imul and sbbb daa xchg loop testb add jne out mov test cmp jne pop push movzwl adc pop inc add sbb mov sahf jbe xlat mov sti outsl insl inc jl hlt outsl and test add mov loopne stc test (bad) add xor shrb (bad) mov addl mov sub enter add inc xor sbb add xchg inc ficoml dec jge or adc hlt fcmovnbe int3 mov outsb mov into ss mov stos mov sub or mov fsubrl fdiv mov xor or nop xchg dec fdivrl jae dec push xor or mov in notl adc ds fdivrl and inc xchg stc call adc sbb dec icebp cmp cs inc mov sbb add int lea inc and pushf pop mov aam pop shl fmul and mov (bad) cmc cli leave xorl and add cli push push or test jmp cli sbb fcom dec pop cmp dec sub dec cmp xor inc dec pop mov or sahf andb inc push xchg jns cli in loope mov inc arpl mov mov lret push lods push jne inc test (bad) push dec mov or mov xchg or pinsrw stos ljmp popf add sbb (bad) jmp push lds xchg cmc jecxz pop xor and adc xchg adc inc sarb sbb adc mov mov add adcb jl (bad) xorb daa and cld adc fadd inc pop xor ret inc mov mov xchg mov stos cmp rolb inc inc cmp inc popa add jmp dec in (bad) mov inc cmpsl add js subb jb sub subl ret add ret cmpsb jo xor or lods pushl stos orl jl je std mov jge xor repz xchg jns pushf add cwtl call or fistl pop or jecxz xchg or pop jb sbb xor cmp aas lcall adc ret mov divl aas pop fwait mov cmp inc xor adc mov test jp gs xchg add jo add mov fidivl sub (bad) out jle fsubrs or in pop imul loope adc (bad) dec fs movsb mov or lds xchg inc mov sbb sbb mov dec jae sbb inc and dec fsub pop pop xchg inc sbb jmp cmp scas and dec stc fadd lods push testb and or and or inc scas sbb or ja push sbb fs push je add mov sbb sbb pop jecxz sub sti mov jmp paddsb dec and push pop and pop aaa push insb dec lock mov clc out push cmp jne icebp ss xchg outsb xor and test sub scas enter sub adc imul or push sbb pop shrl dec fildl inc test sub push outsl lock pop or sti jl sub mov pop adcl and and ljmp jl inc sbb xchg sub ret stos mov adc xchg leave jmp outsb pop sbb xchg add movsl movsb test les ret adc test jmp mov fdivp push push and or cmp repz sbb popa sbb push mov jnp repz sub ds or idivl cwtl add add push cld pop out sahf ja push clc in mov cwtl hlt dec in push or pop pop push inc pop scas cmc or lock cmp pop cmpsb mov and mov jmp dec xchg and dec jmp jae mov and movsl test rol popa xor mov xchg xchg lahf shll mov loopne sub js sub add outsl std push adc test or bound dec pop add adcb jne adc nop enter adc test jne dec or in bts shr xor xorb insb ss adc (bad) jae je lds data16 jo dec add jl xlat push and dec pop and dec xor pop xor dec mov add cld xorl test add or movsb addb imul fstpl decb push pop push inc jl push and or or push inc push sbb dec ficomp enter jb cli add or ret mov call inc scas adc in lcall dec enter add push fcompl insl outsl fs es sub loop (bad) mov add rcrb mov or push loopne pop sbb ret arpl nopl cs iret mov add push adcl xor mov outsl adc fs imul in inc mov pop or pop and pop xchg and push push sbb ss push les inc dec pop add add mov mov add or test and jo and ss ja mov mov push pop and pop push in xor nop pop adc (bad) insb add sbb ljmp add or jne jnp or jp pusha cs dec or or jno or dec pushf idivb add mov pop mov mov (bad) or daa or (bad) jnp popa or xor and ljmp or push outsl mov xchg (bad) jae pop (bad) add decb xor rorb or and std (bad) (bad) inc dec movsl sbb out mov das mov popa mov pop xor pusha or cmpsb sub js mov push sbb and int mov pop add nop pop out cmpsl pop adc sbb adc jne lcall or lock adc adc mov xchg and out cmpsb mov outsb jne sbb outsb jb int lret push adc xchg jb xor sahf push or jp xchg jae xchg nop dec add push or fild jo addr16 adc (bad) adc adc (bad) and adc inc add xchg and push gs shr inc jge int3 loopne loopne xor movsb cmp mov data16 imul (bad) mov xchg pavgb or adc insl mov push jb clc jns inc and cwtl adc addr16 mov scas push outsb (bad) aaa dec cmp lahf xor push adc addb pop ds add clc cmp fcoml outsl aad inc jl cmp xchg or imul test iret enter add rol flds rcr in fiadd xchg adc jo mov mov xchg xchg push popa loopne pop les mov push mov adcl push push adc adc fisubr cltd add ja dec xor push (bad) or inc adc sbb mov or jns dec pop xchg and pusha sub sbb pop push add xor daa and (bad) fistl enter mov jl and rol out or sbb push mov inc sub and pop add xchg inc inc in into ds sub out adc inc inc adc inc testb cmp inc test inc inc mov jl insb mov inc dec mov in addr16 inc mov adc fimul pop pop inc cmpl pop in inc fsubs in lcall int3 insb push or jge jg inc cmp jp popa jl push ja neg cmp repz push push sub push push pop fs inc adc (bad) cmpsl out push add add add add ljmp add add adc mov adc push xchg ljmp or xor push push mov inc mov mov jp xchg test mov or and rorb std ljmp rclb in and stos jb push mov push mov dec pop push nop and ds roll lods out ds repz or sbb ds or int lcall push sub out cmp (bad) push mov data16 mov push faddl jae clc push xor jl into cmpsl cmp es push cmp stc mov mov xchg add xchg fdivrl fadds insb push xor mov fs orl xchg mov mov js ret enter or sbb xchg test pop and loope jp mov and nop xor dec xor pop adc cmp sysret in mov sbb push xlat outsl pop sbb or adc mov push xchg test xor sbb mov push inc andl leave mov push cmovo cmpsb dec sbb mov push and jns inc shrb push dec loope push mov mov adc scas pop in adc adc or aaa pop adc inc fist inc insl jo adc mov test sub sub push rolb ljmp sub add add or cli and sbb cmp pop sub inc xchg xor gs movsl sbb scas mov xor inc inc inc sbb xlat and pop jmp jns imul das mov fmull shll jb fistp call fcompl movsl lds in push enter repnz add mov pop push ret das add das cmpsl stos in sbb add aad lock push jae xor jae xor mov push and sub out inc ss dec test add add and mov sub or xor scas scas mov sub int3 cmp sbb pop pop or adc jno adc xlat incl push sub subl or into jmp and add jne pop jnp adc sub (bad) fdivr fwait sub jle inc or jbe ja fwait nop iret test xchg outsb push add movsb pop (bad) xor dec insb fs pop dec lds mov jno repnz push ret mov push or int sub pop push lcall shrb js jae data16 fldl test adc xchg lcall dec xchg cmp arpl xor fdivrl pop inc xor sub xchg (bad) xor jecxz int (bad) pop int loop ss aad or mov leave aaa outsb in mov es cmp or (bad) inc jne gs je sbb (bad) sti (bad) rcr push (bad) lock rorl sub rcrb sub push cmp aad pop pop push cltd loopne cmp adc orl sbb pop les adc xchg test push shlb and les dec popa dec ds pop les inc adc aas and adcl mov inc cwtl cwtl je mov ss insl sbb enter mov dec adc mov (bad) xchg addl xlat push repnz sarb mov roll nop ret (bad) fcomps dec bnd adc clc jns mov push loopne popa cmc add inc jl arpl fwait add fiadd (bad) aam in sub dec xor mov mul dec sbb (bad) xchg (bad) dec dec xchg stos dec dec (bad) dec adc loopne sbb rcrb xorl push test loope dec dec cmp push jbe jecxz mov test xchg dec add inc pop dec or pop orl mov std inc push ret xchg std dec push sbb push adcb push mov add adc xor push add dec push pop mov data16 cmp adc inc cmp addr16 nop cmpsl dec inc inc push rorb aam add push dec adc or pop push push hlt das adc and mov test inc clc rolb pop lret pop and cmp popf rolb pop in or test in and pop or pop fs lock and add pop or sbb adc pop enter adc mov inc sbb xchg rcrb add dec add or out push sub xchg push rcrb in cmpsl fldcw mov fsubrs std or sbb sub inc adc loop pop jo or add lret push pop or out nop lds push pop bound iret pop scas push mov test popa xlat or and cmp lods sub sbb dec aam or inc fnsave rorl xchg nop fsubrl or pop pop push or push loopne scas fcomps lcall dec inc inc pop pop push or mov push add add sub xor adc (bad) mov xcrypt-cfb cmpsl movsl mov add in cmp test sub push out pop mov or je adc dec push inc loope lret xchg push out and mov (bad) mov xchg xor xor sub dec xor mov rolb shlb je test je adc mov fcompl adc push adc mov mov fmull adc test and sarb and jmp adc push xor fwait mov sbb and sub and and (bad) xchg sub call cli sub ficomp xor insb pop into or sbb loope ret dec ret or lea dec sbb cwtl jp push cmpsl cmp ss pop and cmpsb js aam cs mov mov fadds adc mov lahf pop aam fild repnz dec and adc jbe ret mov test (bad) rclb push sbb cmp aas xor mov adc sbb xchg (bad) push inc and out std (bad) mov loopne add and (bad) pop push jp iret call jle cmp sub mov xchg sbb and lds je lods fidivl inc inc push andl (bad) jae addr16 loopne cmpsl sbb adc lock xchg inc xchg cli (bad) sub or jns iret in or or inc sbb (bad) adc or xor sbb sbb into insl fisubl or xchg mov xchg push ja xor jbe testb sbb cs mov adc fidiv add xchg add jns aas push and mov mov ret popa mov mov pop push aam test dec (bad) scas or add jnp dec dec adc insb jl inc xchg add lock sub and rolb pop mov hlt movsl test xchg or push shlb mov mov or mov or push inc or add or insb dec sub or inc insb fistl ds push inc add mov fisttp and mov dec ret inc rorb push and cld or lods inc inc and rorb lahf in into add loopne mov pop and add mov push xchg sub fxch pop das fist pop fildll jecxz sub sbb inc sub add sub es and mov xor push sub or push inc add push fadds gs (bad) in int3 and xor push hlt xlat push loope fiadd pop dec cmp xor lods mov dec sub xor xchg inc push dec mov add sub xor rol je aaa cmp xchg jge lahf cmpb push cmp popa jp fcompl adc push dec (bad) sbb push fsubrl jb in add adc testb mov or push add ret bound dec sbb and lock or lahf and add stos mov push xor inc pop and repnz jge push mov pusha adc cmp or xchg jb or lea jnp jmp fucomi arpl mov enter imul inc pusha lock test test test sahf sub adc push mov int pop stos or pushf sbb jmp adc sbb xchg mov mov sbb mov sarb shlb push ljmp add sub movswl push mov or in xor and rorb jne mov pop out jecxz (bad) js dec cmpsb adc (bad) push sti pop adc jae (bad) lcall fs inc imul push test cmp adc pop cmp jmp inc inc or rorb mov cs adc inc daa add ret mov sub mov push ret rclb movsl loopne sbb and or ss sub (bad) xor push jmp mov and sub adc add dec sub (bad) lcall rorl push sub or je ss jmp scas add test inc xchg or (bad) and repz lock pop push dec imul and daa xchg std pop inc inc outsb aaa add pop mov in cmp movsb inc pop in mov mov jo adc inc addl pop sahf les in push push and sbb (bad) jno mov movl lea fdivrs push and xchg icebp sbb pop cmpsb or sbb arpl pop cmp and inc (bad) mov xor mov dec push (bad) adc jns inc push nop mov subb das add outsb or (bad) js jne outsl pushf packuswb repnz sbb imul test lcall insl fidivl or dec pop das js (bad) pop sub rorl add lret pop jecxz (bad) mov adc or add mov lods (bad) (bad) push and lea sbb push rol mov cmp repz and xchg push add xor ds test inc orl xchg push das mov sub loop pusha test jge and sub (bad) xor sbb jnp push add cmp test insb pusha mov mov cld cltd lea xchg jl jp pop sbb xchg iret dec push jb lock pop dec dec pop pop add mov and sub xor inc enter cmp test cmp xor enter cld imul int sub addb add andl (bad) ror shlb push mov test cmp lock lock pop stos das leave push (bad) and push push mov push mov clc sbb push mov mov and bound loop and fs xchg (bad) dec sub ljmp fwait dec mov xor aas or notb adc mov pop adc int push or mov sub int3 js or pusha push mov lods stos add add cmp mov sbb or (bad) cmp outsl xchg push les xchg adc shlb inc pop mov (bad) mov mov sub push and nop jmp and or test daa push push je mov and aam fstl inc shrb cwtl scas daa and rclb pop push sbb adc inc ja lcall jo stc cwtl xor cwtl out mov push inc jecxz and mov sub pop jmp pusha sub shlb or push gs add int3 ss pop pop notl loopne sub adc imul lahf mov lock xor adc sbb cmpl dec js movsb adc ja mov sub emms (bad) ss loopne test and imull leave aaa or or add or push pop xor push inc (bad) lret push inc adc in pushf and loope (bad) or mov pop xor mov lods mov pop dec outsl or push in or or popa les sbb (bad) pop dec xor and jnp inc or lea dec loopne cld (bad) insl leave sbb xor pop pop gs (bad) lret lock add (bad) dec mov or sbb sbb add scas call adc push push lea push sub mov aaa ds push or sbb loopne addl outsl or lds sbb out sbb pop mov fstpl jno push jle mov xor add or imulb xor sbb and jae push ret sbb mov and arpl dec xchg jge adc mov pop and std adc jle sbb lcall fcompl cmp cmp and jmp ret adc in add rol add in push pusha (bad) and jne adc repnz out ret lea sbb add jno mov pop dec je cmpsb inc mov pop fs xchg pusha mov dec pop imul stos mov push sbb pop add in jge add or pop popa dec add xor xchg cli mov ret adc mov ds cmp or sbb in fadd inc lods pop jb or clc ret aas out add xchg dec push mov movsl int or and in adc neg sub fcomp (bad) mov in inc or lea daa cmp mov pusha pop dec cmp or nop nop pop jne mov aas push jb lods loop xchg clc add adc mov add (bad) cmpsb adc add fld inc ss inc loopne mov je aaa (bad) xor sbb or or xchg push lret sbb (bad) xchg ja stos orb mov inc out and addps dec adc in out dec cmp push add xchg xor sbb das jns hlt (bad) cmp cmpb fyl2xp1 aam imul outsl in add arpl dec nop shlb sbb mov mov jp insb icebp mov fsub testb adc mov dec (bad) dec add nop out pop sbb in adc inc adc call lock dec cmp insb mov inc sbb in sbb push das mov push daa orl push (bad) das xor push insb add bound pop inc inc ret cmp lods pop dec add xchg out cmpsl or sbb add lock movsb pop and fild xchg jne idivb les sub ret ss dec arpl sub add in pop and pusha or and ficom push pusha sbb or (bad) dec aas popa call jmp lcall movl enter xchg hlt cmp push arpl pop orl out cmp xchg (bad) cmc cs dec xchg ret inc lods aad fildll cmp cmp in and in push push inc sub out pop cmc cmp xchg xchg inc xlat orb mov test dec test adc aam cmpsb add dec lret push addr16 les ret or outsl loopne sub inc cmp jnp fiaddl lret xchg push (bad) lods adc pop cmp add and in push test lar xchg (bad) stos inc mov mov and mov test ds ja das or sub lea xchg (bad) or mov testb data16 in subl jle jne jp push adc fs add push rclb scas xchg push bound push lds xchg jo sub enter pop xchg loopne lcall push mov sbb xchg and movsl xchg or xchg xchg adc inc cmpsl pop push outsb adc mov pusha mov gs lea xchg leave or mov mov or rcrl adc sub pop lods das daa push insl inc test pop in jo (bad) sub mov ret sbb mov push or repz hlt adc cmpsb mov cmp and fs add and sbb arpl push adc and or and insb and push aaa test aaa test xchg inc jecxz xchg dec imul sub xor lds cwtl aaa and loopne dec decl sub xchg and lahf dec ljmp push cs dec inc js adc fcoml push pop xor mov aaa or sbb jl sbb sub (bad) sub sti das add and adc repnz mov notl add enter sbb ss inc add pop subl leave test sub aas cmpsl insl das cli in xor addr16 inc push xor sub mov jae push xor shlb xlat lahf cltd aam (bad) pop sbb xor add sbb pop (bad) pop scas out pusha or push andb or das ret fnstsw cmpb cmp push mov mov (bad) inc sbb add pop pop fcmovb cmc xor cwtl xchg cmpb sbb insb mov imul inc push sbb out inc jecxz dec sub dec mov or xchg xlat ret xchg xchg add nop add aas mov sub int3 cmp sbb aas int3 enter mov frstor and sarl fsubs add cmp lock imul dec jnp pushf or dec or push push mov dec adc xor inc or cmp mov xor clc daa push mov push scas or leave icebp jl stc lret add aad xor adc das dec fsubr push lret ret jmp dec sub pop cltd (bad) dec fs jo adc imul inc jmp pop das rorl int3 test and movsl jns imul lods add call in or inc (bad) outsl and push and divl add (bad) and mov push push sbb pop movb fcompl mov or mov (bad) ljmp ret mov pop inc scas testb add fmulp jmp andb cmp push test inc push nop rolb aam cmp pushf ret fwait (bad) into xor fnstcw call add adc cld test arpl and mov add fldenv das sub in jl mov pop les adc orl imul mov add inc jg sbb or jl ret jb or jmp or test loop cmp mov mov mov jmp cmpb push cmp jne mov add xor test or (bad) push inc inc in mov xchg sbb and pop fnsave xchg push test dec mov repnz and inc out cmp lret inc cmp test and mov daa mov mov imul sbb dec pop rcll jecxz and sub push test pop mov sbb inc or lods jecxz aam inc push imulb insl or sub sub inc ja bound nop fs dec fldl cmp mov cmp jle inc inc hlt pop dec inc xor clc cmp adc mov enter hlt in in pusha mov xor dec test andl sub push cmp or bndldx ds nop add inc push out arpl xchg sbb mov mov sub add daa inc xor clc mov mov mov adc adc dec dec adc pop push lock lds cwtl jp inc jmp dec jp call and or nop xor leave or and icebp or shrb mov lahf ss mov mov addb sbb jg mov mov xor cli add jno fnstenv jne mov popf jo aad push lret nop add jg mov andb ss lret xor inc loope push inc shlb cmp pop leave clc xchg jne pop lods dec sbb mov addb xchg aam and rcl loopne popf ds pushf cmpsb test push inc shll mov insl rorl add ja push dec jb adc dec shr add add es ret add sbb pop mov adc mov dec pop inc xchg xor lcall or mov neg xchg movsb neg in sbb out loopne sbb test sbb xchg add fisttp dec push or in arpl rcl insl inc jmp add dec das add ret decb repnz sub push adc push test push push testl and sub mov lods (bad) daa push jo les int3 or push dec (bad) decl and xchg fistpll push add les add and lahf pusha movsl sub test push das xor in aaa mov inc (bad) daa movl leave das jne add or js fwait or insb (bad) fldenv adc (bad) xchg and jo or pop imul mov mov or xorb xor add insb xchg gs test mov mov mov lea loope loop enter lret nop inc xor (bad) cmpsl icebp rcl lock pop mov loope lods pop adc adc testl icebp xchg pop mov bound cmp add and bound mov push fildll sbb lcall movsl and push rcrl pop sub push add inc scas loope sub aas aaa cmp movsb leave sbb add sub xchg jno movl mov xchg mov inc xchg xor (bad) or mov xchg stos jne das adc pusha sbb es push jmp dec mov or adc (bad) and mov add and mov cmp fcompl subb shrb adc test fldt adc or out jge xorb loopne sub mov adc adc inc jb pop and je repz add inc scas jae or xlat movsb movsl push pop inc setae imul lods cmpxchg je loopne pop mov xor icebp inc pushf mov mov add sbb adc pop mov in mov jne dec mov (bad) ss push inc sahf jecxz mov pop adc sahf int dec xchg ss aam sahf dec subb jne rclb cs mov or fsubrl setbe test fmull or inc cmp les ret cli mov lds inc es sub xchg push lods jo imul mov fld popf cmp insb inc daa inc ljmp xchg inc mov jno adc xchg adc rcrb fist or inc adc shll mov cmp push and leave push iret and mov std or pop push dec je bound adc in jno ret clc je cmp mov aam popa mov mov pusha jmp int mov mov jmp aaa (bad) inc pop enter lahf push add inc dec out inc inc rorb lock push rcll cmpsl push test inc push stos and adc (bad) (bad) pop loope hlt push add cmp dec loopne adc shlb pop jne xor incl jnp push into sbb xchg (bad) push add push adc decb xor add or scas add pop jp ja insb ljmp cwtl and je inc jo daa push mov xchg mov pop mov cmp or fisubr inc loop sub test (bad) imull mov push xchg pop mov and mov sbb and add lods sub adc aas lret cmc xor divl sar mov and imul inc cmp sbb (bad) cs mov movsb inc ja add outsb mov jo cs push mov push cmp sbb xor push jbe dec fidivr addb inc adc jae add cmp push outsb shrl jbe jge sbbb sbb inc sti push push inc jo mov adc jp sbb push ffreep inc imul push sub push push add push cmp and or add negb aaa popa xor cmp sub sti add imul add sub push cli jo sbb lds xchg push cli sub rcl inc push sub in xor mov sbb pop mov inc mov inc push mov add adc sti mov mov push push lret cmp js adc imul adc pusha mov adc sbb push and xorb jne cmpl push mov sbb data16 cld mov cmc xchg jp fbstp dec push mov sub or insb lea cmp xor cmpb and jnp push add clc dec adc fidiv lods sti pop adc cmp enter pop pop adc mov rcrb sbb rclb jo add jg cmp daa test decb mov or lods lea mov aam xchg fchs push mov adc mov fsubs inc sbb cld outsb jnp out add xchg fs inc xor add lock imul add pushf add and rclb and adc adc daa out or add mov or add sbb mov or sub or add add and add adc (bad) mov insb das sub or jl rolb gs stos das repz aas scas sti outsb dec xchg cmp incl xchg mov dec fwait pop es loop push lods lcall divl mov ret (bad) sbb push push and dec xlat pop cld in and cmp idivb mov push xor mov add ret add pop lcall adcl or dec dec inc dec push aas loope mov push aad nop adc test push or or sbb test sub lods sub enter mov push cs int3 fcoml pop lcall or adc adc sbb fist mov xor lret data16 and sti or hlt add test sbb pop mov push cli mov pop push test in add decl sub jecxz cmc out push jae pusha jo out cld stos push mov cld pop add or and cmp and hlt fistl sub fisttpll mov movsb pop inc cmpl jne xor push jae pop fsubrs cmp sahf cmp dec in cli stos xor add cmp mov lods mov cli inc cmp je lock or in adcb inc popa mov mov sbb aam adc push jo mov adc add mov (bad) sbb aaa andb xor xor mov push mov cs jb mov cs xor cmpxchg incl push cmp lock cmp adc cltd adc or icebp ja fs mov or pop sbb xchg (bad) mov xchg fcmovnb dec jge jno jp cltd nop dec dec jmp and int add pop push cli leave aam adc jg push or aad je stos and add cltd js push pop pusha sbb js mov stos xchg rol add out imul dec add dec push setl lds adc adc pop jmp and movsb mov adc sbb loopne mov mov mov ficom dec repz pop push lea xchg or dec sbb xor jg mov mov xchg lods sbb add shl test adc mov mov mov cmp push ja jl adc xlat sub daa add adc std not and pop mov add aam add xor and and adc mov xchg push mov outsb inc test addr16 daa lock insl arpl sbb sub dec push decl or fsubl das sub add fdivs cmpl pop mov addl jne rorb pop flds jne ret inc loope xor mov cmp push and or jmp sbb aas rol ficompl (bad) push adc lea push mov mov mov fistpll mov cmpl inc inc je out xor cmpb je xor jecxz cmpsl xchg push or add pop out mov and cmpsb xchg dec cmc pop lahf add adc aam shrb fild call sub ficom movsl xchg (bad) outsl mov test or push cmp sub push inc mov lods push dec push xchg push mov xchg in sub pop movsb cmpsl xor pop pop es mov outsb mov push mov or dec das cmp push sbb xchg push in inc cmp enter lahf cltd add sub (bad) jno lods dec push movsl (bad) mov fistpl pop cmpsb aaa lret adc add xchg fstpt fcmovbe enter mov add ss or inc lock test and lock pop mov mov pop sub add dec jne fs add sbb sbb mov xchg shlb mov jne pushw push dec popa jbe movsb xchg inc sub add xor imulb xor cmp inc daa gs push test imul mov pop ret outsb popl xor add adc inc adc sarl or inc arpl test imul push push loop add lock sar imul nop out cmp add sub push sbb and push xchg les icebp es push mov test xchg sbb dec enter fadds cmp insb sub dec adc outsl mov add dec mov mov (bad) jb (bad) xor xchg addr16 inc adc add xchg (bad) ja fdivl jecxz pop stos fwait add cs push (bad) push rcrb sbb imull arpl and push scas stos cmp rorb mov mov inc mov loopne sbb sbb add loopne pop add (bad) mov inc test ss fadds ret pop fldenv sbb xlat sahf nop decb test sub roll pop inc cmp sbb push push in loope mov add adcl mov mov pop rolb call out add inc add inc and loopne add mov std test and push scas xchg sbb add nop cs cmpsl sub mov cmp dec aad insb sbb adc or cmp pop push arpl scas jo sub push push mov mov sbb sub movsl inc add dec sub sbb pop les jo cmp inc (bad) enter lds mov and or je scas ret adc adc cmpb jae push jmp insb dec or fmuls cmpps jmp mov adc push xor movsl scas fwait inc cmp xor jo mov adc mov fdivrl mov in jno cli mov or in pop adc dec mulb pop or xchg outsb mov dec jmp pop into movb fldenv xor xchg adc jmp sub add cmpsl sbb dec sub lcall popa lods xor rorb pusha xchg xlat stc cmp cmp inc aaa add rorb or jge sbb mov or (bad) and test pop ret sbb dec push add leave neg lds dec ds push mov mov inc out inc outsb or sub stos and ss mov mov inc lods push add sarl dec mov sub sub sub add into or add (bad) cmc xorb xchg push aad aam push xchg jg xor jno pop gs out arpl or test stc in xchg ficompl popf mov xor lods and maskmovq idivl enter cmpsb sbb das fcompl pop insl loopne xchg insb and cmpb dec jmp pop fist push push pop ss or jl cltd test scas (bad) testb sub in add add and mov fucomip sub test pusha jmp push sub movsl push or dec rcrl dec or inc add or lcall pop mov inc je dec test adc les adc sbb add and add mov inc and and sbb cmpsb xor cmp inc xchg adc push movsl jecxz pcmpeqw add sub movsb mov rolb icebp mov mov fcoml cmpb inc adc adc inc add in adc mov sbb push and push sti mov test cmp loopne dec (bad) xor lock gs and pop inc inc dec out lods ror add or and and push (bad) or (bad) jmp sbb jl bnd xchg test or jbe xor addr16 jl jno scas pop sub loope push mov push mov out xor push adc or je pop or pop mov mov std push stc sbb add cmp mov cmpsb and cmp enter stos lods leave dec or jmp mov jo pop pushf add sub je pop test or mov dec and push insb or jge pop jae pop pop imul test sar xchg sbb sbb roll aaa pushf and enter addr16 sbb fidivl imul lods imul bound rcrb lcall ret sbb (bad) movsl jbe aam fs aaa inc inc cli shl ds jo jmp cmp sbb out xchg movsl push push loope pop add ja dec add insb pusha add add ljmp das cmp inc popf inc and enter xor mov cmpb lret ss sbb and insl loop lods pop jmp subl and inc gs cmp mov add icebp inc inc pusha pop push jb adc mov push jb pop aaa lock jge push pusha rep in or test or pop and adc lahf loope pop push (bad) orl push lret (bad) icebp push loopne dec add jnp cltd mov pop ret adc out jo cmp movsb cmp js add or loope mov insb rorl test mov pop ds call pop adc add inc stos mov ficomp mov subl jle mov imul add inc inc out lcall jno repnz xlat stc shr cmpsb mov adc jl stos popf rclb cmpsl dec add shlb insl js scas aam and sub ret jbe cmpsb dec aam push sti cmp int xchg lods jmp dec lret (bad) cmp icebp sti inc jmp sbb jne and dec add fs dec mov fisttp addr16 inc cs sbb arpl sbb shlb lcall jecxz add and or xchg adc or ret ret scas adc mov fcomi fcoml por cmp sub cwtl adc xor xchg movsb loope pop inc aaa ror mov ret adc xchg pop jl add push and bound push mov iret push and cmpsl cwtl push lahf and and inc add dec jg roll int or (bad) and and inc bound inc dec push jns mov pop aaa nop jge mov sbb or and xchg psubsb jg fbld pop or push in outsb push ds cli jge sbb fs pop out and pop int callw (bad) xor adc lods push push inc mov or scas shrb insb jle add cmpsl push xchg loope (bad) (bad) lahf sub ds loopne pop aam cmpb adc adc sbb shrl daa repnz imul xchg xor or dec or jne pop jae cmpsl enter push sar adc sub jnp or inc rcr mov push lret (bad) pop jl mov mov inc mov lock or sbb xchg xor cmp mov adc jb lcall into ss dec mov jecxz lods push or lock adc and adc fistpll loopne xchg sbb outsl pop pop pop lcall pop add mov cltd pop dec test mov inc movsl cmc dec test mov stos add push (bad) sub cmp subb or (bad) ja movsb nop das jne xchg push loop (bad) sbb mov and nop das xor add or jo pop adc adc rol jo pop mov insl adc mov fsubrp loop xor lcall je push (bad) mov push rcll test jnp insl dec ljmp cltd and lock mov jno andl pop lock rclb cwtl lcall cmp cmp scas inc (bad) dec sub mov sbbl push adc cs mov icebp aam cwtl xor faddl push push push out mov pop inc or mov sbb pop push xchg test cli adc sbb sahf xor pop fsubl push (bad) xor jp mov or and add inc sub sbb and pop cli mov add fildll ljmp dec loopne inc mov lea fmuls loopne mov pushf insb je testl orps cmpl pop or call ljmp dec stos call jmp and test push jne (bad) xor mov bswap dec imul es leave mov jl nop in mov dec call call sbb xlat je lcall or and xchg cmpsb push ret pop dec mov add or adc cmc xor shll and rcl or imul pusha dec adc xchg test enter mov adc push fdivs jmp inc add pop add push sbb out mov push dec xor subl inc ficoml and add push pop repnz ret push lcall pusha mov xlat repnz stos jno ljmp mov pop fs xor adcl rcrl int3 inc ret dec fisttpll sub adc or adc sti clc adc bound sub scas test jge je add mov pop fnstcw inc imul adc popa into ds add and add movsl push shrb inc add pop or pop and leave cli xchg push jnp cmp adcb adc sbb outsb push les orb sbb sbb scas test loop fs sbb push cld je addr16 cld dec push xor push cld cld cld sub or movb pop test add mov mov lea std call xor mov xchg int3 and jno add pop dec jmp or push mov seta push push cmpsl pop push das or lahf push jnp fs fcmovb and aam mov xor adc movsl jne and jmp jle pop adc push add mov and sub mov mov mov and sbb pop jge inc pusha les xor and push push or sahf pop jl push je inc push cmp es sbb push orb cmp mull mov mov loopne das dec mov nop mov addl mov sbbb mov push (bad) dec xor jl sub or and cmpsl andl ret jle test fsubrs pushf or jle (bad) pop jnp or push (bad) mov ret (bad) pop dec dec andb dec dec and xchg (bad) ficomp pop rol pop (bad) jne push push mov pop xor push (bad) dec dec ss push push sbb pop mov or add xchg lcall fs xchg sbb pop iret fmuls lcall xor mov insl outsl sbb dec ret pop lds and repz sbb push lret pop sub xor cmp add mov (bad) aas sti fwait rolb inc pusha mov test test jl or jle es mov lock mov (bad) cmc xchg js push xchg xchg mov pushl out daa sub (bad) pop cmp scas xchg push imul jmp rolb push adc xor or fisub dec inc loop sub push insb add mov push sbb jo pusha or ja cmpsl mov dec cltd outsb rcrl xorl sub cmp cmp jp roll push scas pop lock cmpsl out push aam lahf shlb jbe sbb sarl push mov cmp sbb sbb mov mov dec or (bad) nop push push mov or sbb in cmpsb fdivrl movsl cwtl scas loopne ret pop into dec cmp lea enter adc gs fwait cmp mov aaa out cmp push out jno (bad) inc add shrl pop mov push sarb pop negb mov inc sbb sub addb cmp adc ffree xchg push lea lds sub pop lods gs adc pop jl dec and (bad) inc jae test outsb insb sbb cmc lcall xor icebp adc aas data16 vmread int3 jne cmpl (bad) std mov pop mov pop cs push push cld xchg and leave insb sbb dec pop pop xchg aad outsb or add add cmc push es adc inc or orb xor jae cmpsb mov sbb inc divb imul dec pop sub shrb dec js call jbe popf and mov aam lds nop jp and das mov inc push xchg incl sbb in fcmovne insb imul push lods xchg mov cs pop nop lea sub add pop push mov cmp pop aaa sbb cmp (bad) ja add imul sub test adc es nop imul inc jbe inc mov and lods cmp mov out jbe mov lods sbb nop divb andl xchg add mov (bad) or fdivrp callw xchg xchg mov or push testb inc add sahf cmc outsb inc popa and dec sbb jns testb and jmp mov cmp das pushf and xchg sbb or adc xor cmp es movsb xor xor sub mov data16 xchg xchg pop dec jae das and (bad) je cmpsb aad add jl dec push daa ret push push es sbb sbb clc cmpsb inc test hlt push pop mov pop movsl add mov and push and cmp pusha in or fidivr sbb jns pusha fbstp pop sbb pushf cmpl jo and into push mov arpl push add sub sub add push (bad) mulb mov cmp je sbb add lds lock loop push sbb xchg out dec push mov (bad) or sub inc and dec lock jmp sub inc sub pop mov jmp sbb lds lock imul (bad) repz hlt rcll mov lods xchg sub pop push imul and mov stos pusha adc adc in ds pop lahf test les sbb nop inc mov or inc mov jnp add push cmpsl dec mov rolb je pusha mov out sbb mov mov (bad) push xlat cmp (bad) aaa test inc adc subl fmuls pusha and xor pop insl fild lahf mov rorl mov adc mov adc cltd sbb mov or xchg enter xor (bad) pop aaa lock jbe sbb pusha loopne jb xchg addr16 fisubrl stc cmp xchg xchg inc add add fs inc add cmc popf jle pusha xlat and xlat push fcoms shl (bad) cli sbb cmp addb xor in in jae sbb mull xchg mov out xchg cmp in mov or mov pusha and push mov mov or jmp mov test or addl add adc inc cltd mov ljmp xchg push xor (bad) xor shrb sbb add imul (bad) xlat movsl out adc mov adc sub dec cmp cmp sub cmp int3 jmp lods push mov or fnstsw jmp ret lret add push clc and mov into test xor xchg jns dec push jmp mov (bad) push aas movsl (bad) (bad) cli loop popf pop (bad) adc push jbe inc cltd rcr push inc movb sbb mov mov repnz in push nop inc cmp xchg leave je pop push pusha cmp fbld mov dec enter inc sub push and int3 sbb clc push sahf mov test push movsl adc pop leave or jecxz and dec pusha fisubl pop cmp hlt xchg imul mov daa xor jo pop in sbb rcrl sbbl push imul roll test pop insl mov fidiv pop jmp xor jle pop xor and and test xchg arpl (bad) sub inc pop sbb js mov jae jb ja je or sahf addr16 or add mov add adc add cmp cwtl push dec inc pop mov push rolb adc popf inc mov dec (bad) mov mov daa or int3 test call stc mov daa cmp dec jo,pn jl in add mov sti cwtl lea and stc mov movsb pop loope (bad) lock xchg adc pop enter jge adc fisttp ljmp inc cld dec inc dec dec dec inc lcall cmp xor add fiaddl push pop cltd cld stc mov or or pop pop sbb lods leave inc sbb jo fmull push xchg out add add xchg inc scas pop jmp mov push lahf (bad) lock lods pop movb mov mov in xor lahf mov or js clc pop jb sbb fldt jge nop je les lock mov lock xor repnz lahf daa nop (bad) fsubrs xor push int3 je inc inc xchg outsb add sub adc xor xor push cmp cmp xchg add add mov sub dec test and cmp mov lret loopne pop sub nop enter into or add xorb mov xchg shrb sbb xchg cwtl push movsb add xchg adc push or add xchg inc scas aam mov rolb xchg push aad fistpl (bad) ljmp sbb cltd add jae sbb sbb insb shrb je js je mov pop adcl test mov adc cpuid lock cmp das js cltd adc dec push fiaddl or lret sub adc or std pop dec mov aad xchg cmpl sub xchg push aaa (bad) push xchg mov and mov push sub rolb push mov lods pusha je cs orb pop fs and pop xor jno mov add outsl add das mov aad add lahf cmp or mov xor insl mov or push mov ret add mov mov jo cld or sub or loopne push mov jne test sub mov fsubrs test in and xor adc xor pop sub add push jl sbb dec movaps dec fadds or jno imulb adc test pusha mov mov xchg loopne push push xor mov adc ret cmp adc dec lahf inc and lock adc fcmovb rcrb rorb or in or add push push test ljmp clc mov add mov fwait xor dec sbb mov andl and jmp test xor cmp popa add sbb ljmp mov popa aaa sbb jg adc ret mov movsb pop and sbb mov pop outsb cmpsb aas xchg jle daa push (bad) dec mov bnd sbb rclb inc idivb cwtl (bad) shrb aaa stos sub mov add jmp cmp jae mov ja bound (bad) or and js add inc insb stos out add mov push add dec xchg inc mov icebp add push and mov das pop adc je sub mov icebp lcall push popa pop pop push and pop xor inc cmpsl sbb mov (bad) cmpsb das xor or xchg and and pop jg movl cmp cld js cmp rcrb ret mov sbb adc add sti adc into push test repnz lods xchg mov adc in add (bad) mov test inc bound mov jbe push add sub push ljmp mov repnz ficom push popf inc xor add pop rorb add pop mov xor lock push push inc push fidivr add lea ficomp or mov dec jns inc mov push out mov or cmpl fs sti xor sarl insl mov (bad) mov clc imul jge rcll push mov insl push jg mov mov dec or push in loope rolb sbb mov sti inc pop es movsb jnp dec add sub addb cs mov add xchg xchg arpl xorl push and mov jbe pop push cmp roll sahf or scas lods leave adc dec or dec inc aaa dec mov (bad) stos fcmovnb cmp pop pop add sti sub pop ja cmpsl xchg and add movsb nop test jne int (bad) cmpsb mov inc lahf push das lods jno (bad) or out mov mov je fildll (bad) ja in mov pusha inc jl jl xor jmp out and test jo adc sbbb add rcll adc mov gs jbe insb je lods mov xchg xor and jb pusha movsl add hlt sarl aas rorl arpl fisubl mov mov fwait out mov add inc mov lods xchg dec adc das or idivb inc push inc push dec sbb pop dec sbb mov xchg fcoml leave pop mov or inc mov dec clc pop nop mov test cltd sub pop icebp call cltd add pop insl xor adcb adc sti inc mov mov cmp mov inc pop jnp push or or adcl in pop jns test push std adc jge xor adc test pop and adc cmp test hlt (bad) or push imul pop add jmp and mov loopne cld (bad) mov jae jne sub mov adcb inc push sti movsl adc imul and xchg lahf cld and mov (bad) pop mov or jns mov orl inc pop sbb test pop ret mov push into or repz dec arpl in jecxz push cmpsl add add pop pop fldcw push adc movsb or jne pop test cmp pop pop push pop jbe fisubr test ret add mov sahf add add es js aas int3 mov add sub jl ds mov iret shrb outsb adc aad movsl lret add ljmp jns je test push mov jne aaa or or mov add aaa ja xchg fdivrs out (bad) jae movb and movsl mov aas mov mov push pop or pop and mov outsb pop xchg addl push jnp xchg sbb mov xor mov push leave mov push cmp jle xor mov dec lea mov into hlt movsb xchg mov inc nop ja lret shrl xor adc dec stos cmp arpl adc popf or (bad) jne cmp mov dec scas push mov mov in inc sbb adc xchg lret sbb das dec (bad) mov aam hlt enter ret mov and push mov call inc xchg ret shrl movl xor pushf (bad) aas ds mov mov out inc cld mov test and jge push cwtl adc or dec in mov cmp add mov mov imul fwait int3 jne jecxz jecxz sub jmp xchg push inc and push pop pop cmp and addb test lods inc cmpsb stos test sub mov cmp enter test and push mov xchg and pop xor je outsl lods or je xor popa hlt mov or in add call jmp pusha movl fstps and xchg js (bad) xor or xor mov jb sub sar add push inc popf cmpsb push sti rcr adc sti add add fs or popf dec jae fs hlt add pop sbb nop adc inc bound push cmp clc loope loopne mov and mov lods nop or dec dec out hlt in and add dec xchg or pop jg adc inc dec fisubr loop adc je xchg pop aam (bad) jno out in adc lods sbb adc orl sub sbb xor push arpl and test pushf jl test xchg xor mov cmp pop cmp cmp clc add push push xchg dec out pusha add or jp rcll jl ss push call adc push (bad) repz sub xchg test fmull sub es mov xchg add into dec mov jle lret shrl or popfw add inc push adc push add xchg gs inc insb mov and test inc push rorb cmp mov mov stos pusha imul pop (bad) dec enter das sbbl push hlt push nop outsb xor inc jnp cmp cmp dec push jns cmpsl mov mov or andb scas push inc adc add lret out cmp mov dec fisttpl jge cmp scas (bad) mov out dec push add push xchg lods sbb loop iret nop adcl ret icebp xor lcall adc sub (bad) lret and call or imul jmp push les movhps out sbbl inc pusha movsl lret cmp ret sbb lock les cltd mov push dec or fsubs mov inc adc mov dec je icebp fbld or push cmp jne fstpt test inc dec pop xor in pop inc dec adc js and and idiv cmp lock and mov fwait or movsl mov ret shll popa enter nop (bad) aam add xchg in push rclb mov mov inc add sti aas add dec fsubrs lcall loope je add xor js and and lret shll add pop xor adc inc or dec pusha stos ljmp push jp icebp std in dec (bad) and mov pop inc push push sub sahf jbe pop cmp aad sbbl inc add movsb cmp leave push cmpsl mov push dec inc mov jmp mov movsb pop hlt aas call imul rcl pop inc xor sbb imul hlt push jl ja lock sub stos (bad) xlat dec insb nop pop pop and push sub or test push xor push push inc js inc xchg pop or stos or sbb push inc sub out flds les iret aas mov mov mov jge pop mov lahf mov cmpsl daa rorl and push xor loopne fcoml sahf mov (bad) sub dec mov repnz loopne push adc pop xchg in xor inc adc test mov ret bound fcomps adc xor mov add and loope cmp inc roll outsl add test dec adc test push sbbb push (bad) mov adc dec and push lods mov mov push add sub in jmp inc loope xchg dec mov xor inc mov and lock nop lock mov fildl cmp out mov rclb xor sub mov in inc mov jle push cmp scas xlat (bad) outsl dec lret cmc xor mov daa lahf mov roll (bad) mov dec cmp mov je shrb mov mov or xor dec push lret sahf xchg and sub push dec movl mov and push add into xor pushf les test insl push inc inc pop mov and (bad) xchg xor add and out pop sar mov lret add clc jge,pn mov sub adc sub sarl addb push pop aam shrb add insb stos insl lcall loopne sbb pop stos inc aam (bad) add pop adcb scas pop xchg out in je rcr faddp cmpsl sub ja pop mov jbe fildll je testl leave adc sub lods jo loop pop xchg mov mov or rcr mov jmp and pop adc add fmuls lock sub dec (bad) lret sub sbb or inc and jnp sub inc add movsb jle,pt push and test movsb add aaa and imulb int3 and dec inc dec into or popa test mov les in and add stc or out hlt dec les mov into add and xchg push adc add (bad) inc or or mov push ja loopne xor mov andb or pop mov xchg sub daa and movsb lock sub aas jmp jo,pn jb or add (bad) fwait insl xchg fs scas dec push xchg test sub push sahf adc int xchg lods mov adc xchg mov fsubl mov xor or inc inc stos mov (bad) sub and cmpsl bound sbb and adc jecxz jge mov push adc (bad) cmpsb mov xchg xor repz push pop pop mov jmp mov xchg push pop dec sbb pop dec je sti rcrb adc loopne repz rol cwtl add rcr sbb cmpsb dec (bad) fdivs cmp inc test pop pop xor test adc loopne,pt fdiv inc pop and shrb scas mov insb adc jl dec or insb jo sbb test in (bad) lret shrb nop popa sub pushf rcrb loopne add push stos lods cmp sub aam bound dec pop cmp aad jge (bad) shr (bad) xor scas movsl cmp fiaddl aam lcall dec add jge push xchg adc xor push pop xchg push adc aas das inc outsl lahf xor rorb push dec rolb dec cld outsb inc cmp je test aaa lds mov sbb sub jmp movsb fwait sbb adc in mov xor imul mov cmp cmp popa test loopne jb int3 enter inc sbbb add rcrb insb and dec sub sbb daa mov add inc je bound pop adc push dec aas cmp lods popa movb popa adc test mov lret popf or add push iret aas jg jne icebp sbb sub add push sarb and data16 les out cmp and xchg xchg add mov les mov add (bad) popl ficom cwtl mov std fs sub or cmp pop sbb bound pushf nop pop leave inc push test or cwtl fs mov push dec add shll repnz push aaa add mov (bad) jmp mov sub jp sti mov scas mov lcall inc dec pop faddl pop fistpl test fisubl push nop cli fidivr push sbb xchg es js fwait push pop and dec lcall push pop mov or pop inc adc les pop push or fnstcw or add or inc decl xchg pop jmp pop or or push insb repnz mov mov push dec sahf imulb xor sbb adc outsb mov xchg adc arpl repz movsb jb fsubl bound add iret sbb adc insl ret nop or push adc ficoml or sbb jb jnp sub xor sbb push rolb xor test (bad) push sbb in pop add dec and mov xor adc sub jmp xchg jp xchg xchg cmpsl test lods popa lock sub mov mov rorb je sub pop lock sub pop add insl pop in test add jp loop pop and pop cwtl cmp xor xor mov (bad) mov das sub arpl push pop test dec sub ror pusha inc scas subb call pop sub lcall sub xor enter pop cmp mov push cwtl pusha dec xor dec adc cmp cmp and cltd aas xor dec mov pop cli cmp xor lods outsl shll xchg fs ss sub popa mov pop mov mov aaa pop js test push push inc movsb add pusha enter jo arpl inc dec cs sub add xchg cmp lret dec lret pop push cmp icebp test aas mov inc inc nop stos sub lret js hlt inc xchg pop and push pusha out inc or inc dec push inc push inc dec and add mov rorb fwait (bad) sbb inc cmp loope cwtl lahf push sbbl lds sub shrl mov lret adc push cltd add xor sub add mov mov mov rclb or add ret das inc mov sahf inc xlat sbb mov mov int3 push mov add xor sbb adc aam cli aad icebp push add push push push imul and lret lea adc add (bad) cmp in mov dec cli add sub iret add arpl adc and push lock jns push pop and push jp xor xor sbb daa pop enter pop icebp nop add jecxz movsb mov mov aam loopne or es xor dec add das mov fwait inc push xor dec inc xchg pop dec ds pop ret les add mov cmp loope shrb add or mov and xor add int3 fdivrl mov jae les fdivrl inc movsl fstpl jne pusha int3 pop fs or dec cmp (bad) daa movsl push negl cwtl inc push jno mov or faddl adc and adc sub add aam cltd lock ds sbb mov iret nop inc add mov jmp pop mov packuswb push pop push repz cmpb sbb (bad) or jo ljmp push hlt dec jecxz or sub sub cmp jge add sub (bad) mov mov jge jbe jbe andl ss pop sub dec push xchg nop mov jge data16 add mov and or jmp sub mov fs inc and sub mov aas (bad) repnz cmp (bad) add loope mov push sub push or fsubl dec fcom stos add (bad) jno push inc and loope out out jmp mov fstps mov push ds push or adc push add pop or popa xlat adc adc mov xor sub add push les inc int3 les lret shr pop and sbb jb dec dec getsec adc enter pop bswap aam jno xchg loopne dec lock (bad) jmp cmp jne sbbb hlt jmp out mov pop push or pop push iret adc mov pop add (bad) testl push push xchg push daa mov mov (bad) insl sub xorl ja mov xor rorb add or dec aam push sbb mov mov popa mov mov push insl outsl imul push pop dec (bad) xchg or add mov xor inc mov dec rcl stos xlat xor rcll fcoms jmp pop dec rcl pop es mov inc clc cmovno movsb movsb jmp jo cmp mov sub inc or xorps pop jo adc mov inc xchg clc imul pusha mov and xor xor mov fisubr lods mov jge push push test addl or lock or add aam js cmp mov xor lret add mov subl xor pop mov push and dec sub sub sub mov imul xchg mov push dec push adc cmp imul enter dec push jmp stos pop and cmpb add andl adc leave aaa out lods jne pop push out mov jg lock xlat js lock lret sbb outsl mov lods clc std push faddl and enter pop adc cmc jg pop (bad) dec mov wrmsr shlb les add fistpl clc inc mov fbld test popa lods insl inc (bad) out mov scas ret xchg ds mov aaa popa push sbb ret rcll loope push mov insb fildl rcrl adc cmp call iret mov or push (bad) shrl sti test pop dec loope mov or cmp mov mull xchg test jg stos jno adc rcrb sbb nop sbb sbb adc js imul leave (bad) push cmp or xchg inc inc clc add sub add sbb pusha add inc xor inc insl or and testb insl jno add add sbb and lahf or or fimul lret fidiv or add insl push add adc loopne in sbb add mov imul xor dec xor xor and pusha inc mov and add loopne jecxz xchg xor (bad) mov int3 dec aam ret insb sub jg cmovne adc xor pop cmp mov in mov ja jg xor lcall add and add mov es nop jns jno and mov pop adc adc xor (bad) jae mov in mov jnp ret mov xorb sbb fsubrs sbb adc rorl bound sub fs lea inc push jne,pt in xchg or enter sbb fildl fwait ss cmp jo outsb (bad) (bad) out lahf rcrb add (bad) clc push cmp mov xchg ljmp in out push add mov je pushf mov js sti popf push nop cwtl pushf mov aam dec sub sub cli mov push aam movl repz mov push sbbl cmp mov push xchg and xchg pop mov add mov daa aas inc cld mov mov (bad) mov push mov push pop jmp sub mov ds adc outsb jmp pusha out push dec jle mov sub or jl mov loopne xchg insl lea dec call or xor cwtl sub cmp lock push inc lock inc leave inc push jae arpl out (bad) loope push mov push xor inc aaa (bad) xor (bad) fcomp sahf dec fidivl (bad) xchg test test cld mov mov cmp (bad) lret icebp outsb or push into push mov rorb sub cmp jg shlb stc inc jne addr16 jl mov mov xchg (bad) mov jg adc mov pop fiadd push mov (bad) aas push loopne (bad) jl push and pusha add fistp push jmp xor add inc or aaa inc out out add sti jg out fwait sti aaa inc push test adc repz cmp lcall fidivrl dec push xor dec in push lcall xorb pop fstp lret pop int3 outsl subl (bad) mov jp ljmp push jecxz (bad) iret int3 je fisubr (bad) ljmp aas inc movsl mov mov pop mov sbb std mov mov mov pop call jle cmp data16 mov ss cmp inc fsubrp push xor xorl mov dec (bad) dec scas cs push pushf loope (bad) pop gs loope inc dec lock das pop loopne aad (bad) rclb loop fcomp std lds les je cwtl in adc pusha in out out (bad) pushf push push mov outsl push cli push enter (bad) stc lret sbb nop mov and in jmp imul jle jl int dec inc cmp clc cmpsl ljmp mov cwtl xor sub and (bad) repz ss call stos scas test push sub inc and in push xchg loop jl pop mov jbe (bad) (bad) or testb sbb lods aaa jle jg and push mov push dec in add mov movsb xlat addr16 mov or aam dec pop or aaa rcll cmc adc cld inc mov mov jb fstpt jl push mov xchg (bad) dec push sub inc push mov pop push push cmp pop scas fimull in add lds cmp push rcll cmpsb inc (bad) out mov push aam ret (bad) es xchg adc sub divb fistp in shll test inc mov add adc (bad) xor mov jp push mov adc adc cmpsb and dec pop stos pop js jnp dec push imul icebp (bad) or or or or push (bad) mov xchg in sti lods push orl in fcoms push add dec mov inc push push push in test mov fcomps inc jle or aaa jp in pop mov push inc mov stos loop and xor cmpsb imul inc aaa hlt cmpsb popl (bad) cmpsb aaa insb push sar out out (bad) pop jmp repnz mov repnz mov dec stc push scas ret lcall mov loopne shrb push and push faddp mov aad jo mov inc out sti sti cmp roll shrl push inc mov aas jge xchg jns add xchg in jnp push pushf test xchg lods popf inc aas js insb push in mov iret aam rorb shr dec outsl aaa cmp lock mov pop (bad) or xor cmp aam cmp mov sbb push mov add add inc out adc push popf std je insb in lds pop (bad) (bad) mov (bad) push adc push ja (bad) or cmpsl gs loop (bad) fistp sub pop dec roll pushf xor sub icebp test dec mov adc pusha sbb cld shr outsb pop push (bad) inc xor ret or int3 mov add ss je out jle cmp testb cwtl or push scas inc lds mov and ss adc xorb in pop fidiv cwtl lods xchg pop fcmovne mov inc pop xchg imull mov or bound sbb pop mov xor mov in xor call into loope (bad) xor adc sahf leave aam jl add (bad) adc push fidivr mov fwait std aam and pop rcl in adc jg call mov (bad) xchg push jecxz xchg in inc inc ljmp in jo jmp xchg or loope mov ja dec jmp cmp stos ret mov aad fwait xor test test popf mov in out inc xchg jmp dec dec popa pop orl pop sub add (bad) rolb pop pop out mov dec insb fisub mov addr16 add js movsl call out jecxz repnz jo in (bad) sbb scas mov dec scas cld mov fcoml in fcmovnbe lcall ret mov enter dec lock xchg ss les enter daa cmp fbstp loope int3 nop mov es push push pushf sbb pop inc ja lea inc add push dec adc jl inc clc jmp adc push rclb cmp stos sbb dec jl push gs scas repz clc data16 adc lock outsb or (bad) fimul out fcom fisttpl rorl add int3 js cmc lds aam je push xchg add push cmp in push sbb jp sub ss mov push sbbl sahf repnz push cwtl xor xor mov js out or les inc fstpl adc and in mov in jne lds lcall insl test shrl pop aas outsb jo xor sub decb cld test out aas inc mov (bad) cwtl push (bad) jne (bad) in jae mov mov jns push cmp fcmove js xor cmpsl stc and xlat js js fistp in pusha add popa sub int3 ret pop aas jns jnp,pt jmp stc (bad) shr pop cmpsl stos push mov test (bad) aaa (bad) js mov out mov lds cmp inc jmp push inc mov jbe pop push data16 cmpsl cli cmp cltd and (bad) int3 xchg orb jb mov fdivs lcall mov pop push call dec rcl (bad) cmpsb mov out out scas dec ja cmp add les fstps add icebp push iret daa cwtl mov fcmovu aaa xchg dec or (bad) or rorl aaa (bad) jmp rcr xchg xlat in add ss mov cmp fwait mov inc push std or into fdivrs xor insb stos push xlat fcomip test nop insb aam mov outsl negl mov push test xorl push das loopne test mov popf (bad) sub aam jne outsl rol cmpb rep call hlt push jg mov push sbb push jmp or aam repz call scas add gs xchg outsb mov cmp out push pop xchg ss aas flds sbb xlat or (bad) jne insb mov adc mov cmpsl jno adc je ds fidivrl push push mov push test out sbb push dec dec push push arpl add or jne mov mov pop shll cmp jp mov aaa jmp adc jle (bad) in jae dec js push mov loope mov mov lods push shll lods cmpsb inc mov push mov imul mov xchg push sti mov mov jbe in push lea xchg call imul xchg lods cmp jmp fldenv leave andl jmp inc jg pop cmp enter or in shr push push jle xlat mov jecxz or jp push imul mov xor ret sub dec clc and (bad) xlat inc sbb rcrb pop and into insb ljmp stos pop mov mov ret mov mov fs lcall push push repz stc push inc lock aad push je (bad) into pop xchg pop mov cmc je dec cmp stos add inc push shll cld or ja (bad) rorb out xor (bad) mov enter mov push gs mov fdivrl sbb idivl pop and fisubrl dec mov imul mov mov xchg mov ljmp mov sbb sbb hlt cmp xchg dec mov mov cmp pop dec or xor rcl add in and insl sub pop and aam je,pt cmp std rol clc push xor lods xor xor aaa decl clc rorl loopne dec mov sbb iret (bad) (bad) mov lods xchg mov push mov mov cmp and inc cmp inc cld push dec inc jmp fisubl mov cvtpi2ps in cmpsb dec push dec dec adc and inc mov push in and nop dec lahf enter xchg add cmp cli jmp mov and aas pop xchg sub aaa fs outsb inc cmp rcll (bad) cs loope push pop inc pusha cwtl xchg negl shll dec push mov call movb clc jle mov fisttpl pop jbe aas inc outsb xor adc fs sbb in add (bad) fisttp mov cmp mov fbstp mov (bad) lret add xchg mov add jg mov fiaddl push loope insb dec push pop xchg outsl inc addr16 and and and lods push mov push shrb dec mov push mov ljmp fcoms aam mov aam mov repz cmp push fwait sub sub push movsl mov cmp sbb xchg push add lock jnp xor sub mov frstor movsb call push bswap test lahf xchg mov (bad) mov js outsb cmc sbb mov aaa jb ret test mov scas and cmp insb outsb mov add jmp jl gs cwtl (bad) push insl mov pop in jbe lcall sarb pop incb push sbb fsubr (bad) loopne (bad) fcoms ss and jae cmp pop xorl fisub mov cmp or dec roll pop xor push push pop popf inc mov rcll cmp mov out in mov roll movsb push xor rcrl inc leave ljmp jecxz push call popa pop cmp inc inc lret lret mov jmp push out leave mov stos or leave fsubrp das shll int3 dec lret ret test push sti fwait sub shlb lcall sahf call pop push hlt xchg push lahf sbbl mov scas xlat adc inc xchg push bound xchg stc or dec dec enter or mov push push stc add push into nop enter scas and in jmp and arpl ja add jmp sub pop (bad) mov out (bad) mov push mov insl jae mov mov inc test stos test aas bound mov (bad) ficompl mov or lock jg aaa cld movsb xor ret arpl insl js push int3 test jo mov sub lret dec je xor psrad mov arpl cs dec insb jne sti add mov jae icebp out mov push sub fdivl rcll loopne mov cli sahf and pop popa pop cmc (bad) pushl jb arpl aas jp (bad) xor test push mov adc loope mov stc inc hlt mov loop mov or push or arpl loop ror push sub (bad) cli je (bad) lods push lock sbbl fwait push imull or cmp outsb or lahf push pushf arpl xor inc fs mov and (bad) lcall pusha dec jbe pop sbbl xlat call mov fbld repnz in pop jge std or push fwait stos test inc push sub (bad) adc add dec clc adc mov fidivl sti cli and and cmc xchg push pop adc aad mov data16 push mov rolb xchg mov test dec xchg fidiv push cmp (bad) mov add jne cmp cmp adc out fadd push mov js stos cmp mov inc lret lahf test aas fsub fidivrl push pop icebp out in cmpsb (bad) fsubr scas call cs aam push sbb subb andnps aad push jl xchg push std sub xchg xor push (bad) sbb mov pop (bad) imul sub push test loop mov add pop cmp inc xor (bad) jmp mov cmp pop shrd push pusha cmp inc lods mov push cs loop scas push fimull ret and dec push xor icebp adc push mov push fs in pop nop push push jmp test mov out sbb (bad) mov popa pop mov popa mov loope in lahf fsubrs push mov aas mov pop adc push test insb cmp pop shrl push jmp cmp int or push mov xor push mov lcall cmp test aas jl testb scas fwait (bad) fucomp cld jmp shr mov gs pop jo and pop cs cli xchg mov loope pop mov loope dec cmp inc out ss cld or (bad) lock or add fdivrs dec leave jmp bound jp call divl (bad) test sub cmp mov ds mov jg inc jecxz (bad) test pop mov or aam xor jmp pop lock cs lret orb push movsb cltd dec lar push jmp mov movsl sbb push inc aaa dec (bad) addr16 and mov aas mov out add pop mov mov test out pop repz aam rolb pop cli ret and int test ljmp clc mov sbb push or loop xlat std test push push cmpsb pop (bad) (bad) (bad) fadds cmpsl mov or adc inc push cmp in les aaa (bad) loopne add ret pop test and cmc (bad) out lret pop cmp (bad) std in jp test scas (bad) mov call mov sbb lock and test mov cmp pop cld hlt lcall cmp adc jge cmp xor pop (bad) mov in out ret lcall test mov or jle or push push pushf ljmp sbb cmp aam push xchg orb movsl cmc pop sbb push push lds jbe dec cltd test shrb in rorl push inc mov add and mov or in (bad) cld adc mov xchg xor push add mov lods sbb push mov fist cli jmp cld stos jl pop dec sti enter jge inc xchg jo mov loopne push xchg inc dec pop ds jp mov aad mov dec push inc pop cs (bad) loope xor push (bad) cmp dec inc or mov mov pop pop gs rorb mov or imul xor mov jp lret mov sub ljmp out addl out jmp aaa arpl (bad) into mov fist loopne roll nop imul pop rcll bound xchg pushf sbb rcll pop cmc add movsb jl test and xlat lock aas inc mov aaa hlt mov and je stc push xor es push mov jo push push (bad) mov add or sarw icebp inc add scas sbb jb mov jl push std push pop push fwait sbb fisttp into mov jg fwait jecxz outsl mov and cmp xchg cmp mov push and aam jle stc jne dec sbb sbb push rorb lahf push cmc aaa outsl and fisttp negb xor mov das push dec bound pop cld je and add mov adc outsb dec popf push push scas (bad) sbb ja jns pop das xor mov jge lods xlat jno mov mov shl dec test js jl repnz outsb push adc fisubrl pop push mov xchg dec imul add mov icebp ss into mov mov mov mov mov adc mov rorb (bad) lret ds inc bound mov cs push stc js mov xchg into cmpsl insl cli cmp cmpsl or jmp sbb push jg stos shl push mov push jg xchg ret out mov movsl dec jge jnp mov add add lock jg lods insb push in loop cmc (bad) aas cmp lods mov push out dec cltd sarb pop movsb jle xor or jl mov xchg je xor cwtl hlt jmp and daa cmp xlat mov pop push test xchg (bad) pusha lds jns xchg add stos cmp sub jmp xchg ret inc or (bad) lret or or das sbb loopne ljmp sub loope loopne pop inc lret (bad) out and cld test roll xchg nop sub or lahf add cmp js lret andl dec ret fsts cmc adcl mov out shl add or jne mov add xchg outsb push push fnstenv xchg hlt push out sahf jbe or add jl sti imul aad pop mov in jnp inc add and push pop mov in mov jb sar pop sub rcll lods adc jno cmp loopne andb inc mov add inc lods push or push push and push loopne imul xchg inc mov stos mov lcall xor mov imul pop ja xor push decl push add and jp mov inc sub jnp pop push stos jno cmpsl cmp jp or push jno in or insb cld mov sub int rcll xchg and push cmpsl shrl adcb pusha and aam cmp adc repnz inc xchg cmp push lock or cmpsb movsb mov and hlt jae aad adc movb inc push fs pop add push sub aaa cmp jo inc or data16 dec cwtl mov dec push scas dec cmp mov mov inc and and mov shr (bad) adc clc inc adcl daa loope fs lahf inc push mov mov inc xchg (bad) push xchg push push xor cs aam jo cmc jmp push imul popa imul nop or jno insb adcl inc xchg push xor inc daa dec sub (bad) fdivs mov sti (bad) xacquire xor mov sub xchg jle jo mov inc mov adc inc test fisubrl jno scas add mov js insb insb xor pusha inc sbb jp call cwtl ljmp fistpll lea push lret arpl pusha data16 lods jbe add data16 add adc das int3 mov scas cwtl mov aas stc inc xchg in xor add movsb loop mov dec inc push mov adc jge cmp aaa push shll push call popa aad inc jne cmp and testb es mov shl insb ljmp shrb ljmp sub arpl aam mov loopne repz jecxz xchg loop pushf xor sahf faddl scas bound xlat push pop add lods push and in daa lds mov push (bad) sub mov mov ja loopne lods xor push scas push in xchg loope in pop inc scas adc mov xor mov movsb shlb push push pop push or add aam lea push int scas inc sbb aaa or inc out outsl sbb imul loopne inc mov icebp stc test into push cmp shrb mov inc mov adc dec (bad) aam dec cltd subl rolb sbb ss mov mov (bad) movsl cmp add lret into push inc mov in mov stos int out test mov (bad) mov outsb add int xchg jecxz cwtl insl adc lods mov shll outsb pop sub push sub out ret cmp sub xor dec pop pop push jmp and sub jg stos fs mov fnstsw test pop dec dec or adc (bad) mov loopne pop jmp loop mov add push lcall fdivr (bad) roll mov (bad) xchg (bad) cmp es sub notb cmp ljmp inc inc pop mov loop in je lods (bad) aam cmpsb push cwtl sbb or push cmp push fisubr sbb mov jb pop sbb repnz cli in in movsb popf cmp cwtl jmp pushf jmp sub mov lret and ljmp push push fiadd (bad) addl adc mov jns dec pop pop sbb pop push shr add jp push test fcomi push shrb or pusha bound mov mov daa pop push cs jne scas inc ss fidivrl (bad) loopne fidivl add daa loopne ret in push push out mov sbb mov sub roll sbb icebp ds insb lcall repz (bad) xchg push push adc rcrl mov cmpsl enter fsubrs (bad) push xchg mov (bad) xor aaa inc pop bound aas inc mov js cmp cmpsl or repz or push and push or das xor mov fs xchg xchg or push ja push iret stc dec mov push ret push (bad) cltd (bad) shll dec push adc test insl outsl stos clc pop inc int3 pusha dec sbbl jl into les loopne jle int cwtl push imul in (bad) sub adc jl sbb pop rorb loopne ficomp pop fimul in mov clc and push jae dec cld int3 mov push mov add pop dec pop adc and test cwtl cmpl aas stc jb lret add jo mov mov sbb mov repz sahf rcl jl dec mov rcll mov dec or popl enter push cmp pop inc push fldl pop fs shrb popa call jno iret mov add (bad) sub (bad) push xchg pop mov es xchg mov add ffreep cli push loope icebp mov dec cmp scas mov lret xchg fisubl aad fiaddl loop xor imul jg mov loope sub mov adc jo sub xor test sub xor clc mov popa mov cmp lcall into xor xor inc sti fiaddl dec add test add mov stos sahf cli mov aaa xor and sahf sarl push mov loop sbb (bad) lea inc jmp loop pop (bad) xorl push aas nop (bad) repnz xchg cmp hlt sub and cltd xor daa int3 ja add jb jo sbb pop int stc cmp (bad) aas iret cmp aaa popa rcl or inc xchg push aas push pop insb fsubrl les or jg push iret xor bound sub pop mov (bad) mov imul cli xorl das xor or out adc popa inc inc pop mov orl and andb cld inc sbb add test aam mov clc push cmp scas inc adc push adc popf insb mov mov mov (bad) mov pop movsb movsl mov mov (bad) (bad) ss aam xor movsb in xor cwtl hlt jb in pop stos and jno mov push ds jl cmp addr16 xor push in push rorb adc mov loopne and xchg dec cmpb push out push test pop shl sbb xor xchg (bad) popf jmp clc mov cmpsl jno stc lods inc loopne ret mov insb paddq xorl sub jae push cmc push cmpsb mov mov adc daa xchg jo mov pop adc or or push inc sub stos push (bad) sbb divl push mov insl addb mov sbb xlat dec adc lock dec push dec sbb and mov aad mov mov js rcrl movsl fs mov iret xor xchg inc mov push dec test pop jns (bad) dec xchg pop mov pop outsb aas pop test inc xchg imul ljmp pop scas mov mov inc mov (bad) and je jg scas or xchg add inc (bad) fildl add aam cmp outsb loopne test ret cs ret clc dec in shlb mov out call pusha push outsb pushf lcall lods inc ficomp xlat pop add cmp push pusha inc jb jl inc ljmp push xchg icebp scas mov (bad) les arpl push fstl fiadd sbb pop lret mov push js xchg ljmpw cmp xor jno lds push mov cmp push shlb (bad) fmuls fsubrl cmp cli mov movsb jecxz and pop leave je icebp icebp adc mov or ljmp jnp push push inc jnp mov pop lods movsl pop nop xor test pop sub ret xor push cmpsb lods (bad) (bad) arpl rcll mov leave iret fxch push iret inc pop jne leave sahf inc xchg scas dec in xchg add cmpl lods popa adc jmp outsb sbb xor and and sub pop mov xorb imul lret fs icebp shll (bad) aad fstl dec inc bound add aaa jae cmpsb dec mov movsl mov leave or jmp push pop lcall mov lea mov aaa jle mov push or cmc scas pop lahf std add gs gs dec aas (bad) xor pop js fnsetpm(287 (bad) mov js mov out mov adc mov fisubl aaa repz lods adc mov cmp jl pop fnstsw push push adcb pop inc aad adc mov add jge mov icebp xor jp push adc push dec je add shr jecxz dec mov hlt or mov pop pusha jp mov sbb insb es js cmp fwait (bad) cld add (bad) bound jmp mov dec fs push jmp fimul movsb push scas shr enter in rcrl jae test out jle push fstpl enter cmp xchg in pop xor rol or jecxz push test (bad) popa aaa jmp int cmp push movsb xlat push jmp pop lods (bad) fnsave lret jp mov or xlat add or in aam push mov popf jb ljmp jl lock lods aaa imul adc dec call mov pusha adc insl jg hlt stos aad cmp rcl shll call sbb push pusha call cmp or test jge pop add lock lcall out cmp movsl leave mov mov loopne xchg mov adc enter adc in arpl add jns loopne subl push add loop inc out imul (bad) in add adc imul imul add add xor jns jle jp popf mov repz enter sub out sti sbb and push mull mov jle aas inc mov cltd icebp test cmp inc scas jb mov mov and add mov loopne,pt cmp icebp icebp jecxz (bad) jg push (bad) out cmp xor cmpsl inc cmc loopne dec iret push or mov loop out aaa cld inc mov sbbl lods fmuls (bad) addr16 add enter dec inc loope xchg push mov adc out cwtl mov repnz decl hlt xlat inc outsb sbb push inc stos xor test roll or movsl insb sbb and call leave jnp mov xchg pop sbb push xor or in adc mov cwtl imul adc mov adc sbb adcl fs xchg inc pusha (bad) push imul xor pop push ret jae mov dec adc cld lcall push adcb and adc jbe push cmp hlt inc orl dec pusha in push mov test stos pop inc rcll dec xor or mov leave lods cli cmp insl test (bad) jae push inc push and inc add push dec lret push dec pop ljmp out and sbb icebp pusha test int rcl dec fiaddl loopne je repnz xlat push loop inc mov or ficom popa nop or sub je shr mov mov jge mov push or sti mov test scas rorl (bad) nop sub cmp sti popa icebp ret movsb and andb or ss jl jne pusha cmc mov movsb jle xlat push jbe bound aas out add hlt xchg push arpl xchg imul call ret cmp mov dec out pop add mov xor cmc test add mov adc fmul orb inc imul cld (bad) jb pop dec cld out mov mov lds pop clc addb push js xchg insl mov adc movsb mov mov je lock cmc jle int sarl jmp test aas subb push jns push xor add or loope aaa push inc push adc dec aad icebp cmp jnp call movsl cmp (bad) jbe add test jl push sbb pop jge cmovo inc roll sub fcoml pushf popf or das pop dec dec lea jnp and jae jecxz xor out pop jle js cli adc (bad) cmpsb out sub mov repnz inc add hlt aas push in xchg xor cmp dec fistp xchg push adc hlt pop dec cpuid rorl or icebp jecxz and jp (bad) test mov sbb fbstp rcll es lea push mov movsb xchg insb test or or lock cmp push inc mov cmp sbb push xchg sbb add fmulp cli or imul jmp nop push pop pop sub aaa test push jl and ja pop dec gs mov xchg ret sub out loopne popf or bound cmp dec scas cmp aam push push cli xlat mov (bad) ljmp call dec faddp pop inc sarb fisubr (bad) or mov ljmp mov (bad) pop push jge pushf (bad) mov rcl xchg or subl cs or add fsubrp add adc call mov dec mov (bad) sub dec pop fist or pop jl cld fs je xchg or jl outsl xor xchg xchg repnz outsl jle pop pop and jne cwtl mov divb mov adc dec pop adc lods ret add iret mov mov mov push push and and jmp data16 or test mov sbb jb bound push add jp add ret repnz out (bad) xchg adc mov cmp add enter rorl pop ja mov fisubl mov insb mov xor adc imul inc clc push popf mov xchg jl int3 cmpb pusha sbb xchg js push ja dec sbb dec out pop fmuls incl in jp push push mov cmp pusha scas incl aaa mul push repz push cli sbb jp ss imul and stos push mov (bad) mov xchg arpl push xor xor cmp add jmp icebp cmp in mov enter jne clc push mov push jbe xchg imul inc xchg sbb cmp adc push fstl ret ljmp rcl loop rclb lret fs or fcoml inc sbb add inc add fcoms mov sub xor imul cmp push push jp mov sbb dec je push movsl fldl int3 inc lods lock mov rorb rorb or adc jecxz je sub inc pop mov pop dec add popa jne inc movsl dec sbb push push call in jmp (bad) int3 (bad) hlt dec jle xchg ficomp xchg push stos or lock sahf out subb push cld movb mov rclb pop push push add sbb test repnz imull dec sbb or jbe fiadd shr test sbb jg jns mov ss pop js movsb test mov movsl adc bndldx out inc add jo jns sub mov inc add add or xchg push scas ds mov iret xor dec jp data16 sbb and sbb adc and dec push cmp (bad) fdivs mov push push test inc mov outsb jl or mov inc xor dec xorb fmuls jo in or ret xchg fs subb adc test adc xchg sub add pusha (bad) adc mov sub test xchg xchg lock mov jo or movsl push mov fmul xor cmp mov fstl jle sub hlt dec aas lock sub push lods pop jbe in xor push push mov loopne ficompl dec sbb pop (bad) sub in adc in push mov mov fildll sub add shr sbb pushf (bad) jno lea inc or cwtl sbb loop mov lahf dec inc dec fsubrp or cmpsb fwait pop xor cwtl hlt mov or push popa mov adc sbb jns add sub mov xchg aam fdivs clc leave lods push fild inc loope jns jge (bad) leave scas add out xor and and mov sbb pop pop call mov ja push mov or rcrb adc mov movsb pop or ficompl jmp push gs sbb outsb ss cmp mov add ljmp pop add cmp sbb pop out jg jge std insb fldpi cmp and cwtl cmpl gs pop out add xor xchg adc push fwait sahf jno mov loop shrl jno inc xchg cli in jbe clc mov (bad) xlat idivl inc xor or mov movsb hlt lock xor mov (bad) loope,pt jnp in add xchg add lods dec outsl int or dec jle in cld xorb cmp sbb sub inc xchg imul lods (bad) and jp push sub orb pop jns sbb outsb insb dec (bad) xor add mov sub dec jl scas int3 into scas xor adc jo (bad) insb into lret cmp pushf push fs and fs rclb hlt push fs test scas outsb add push add pop sub cmp mov push mov pop and sbb push push inc mov in in fisubr leave mov add dec inc dec or gs inc sub mov dec push mov jb cld jne popf or lock iret pusha mov xchg inc (bad) fbstp inc sbb mov inc jae cmp mov and add stos jo cmc xchg adc push scas push jo mov out jno lods andl or xchg dec loope jl outsl xchg enter clc mov push mov imul rclb repnz loop loopne sub jbe inc out add inc or or mov dec test pop push add pusha push mov jnp mov xor jmp push pop adc cwtl in push std test in mov inc (bad) pusha sbb ss imul xchg push stc or rolb gs push pop sbb jl push pop xchg sbb jae or cld xchg mov xor dec push or ss xor fs sub das daa xchg lds push sarb icebp inc (bad) std (bad) sahf jle arpl mov jb (bad) sahf aaa shlb pop xor pop stos sub add add ffreep test lods sbb pop imul sbb xor rolb mov inc in mov dec repnz insb push or xchg cmp push sub cmpl mov add dec pop lahf push (bad) or ret or aas bound (bad) mov (bad) ret or xor aam inc push jb pop mov inc iret inc push jno leave jbe mov push in push in js inc rorb mov sub stos adc daa popf clc xor jb insb or in mov and pop and dec push (bad) or add movsb adc aas inc push xlat mov push sub lea pushf push push sbb (bad) je aas call inc push push mov and xchg jmp je add push call out mov sbb add jae and xchg pusha arpl push dec out adc rorb call or outsl sbb in fwait dec ret pusha or adc xor pop jp cmp inc xlat adc in cld das mov push add push out adc mov popf or push jb (bad) fist inc mov in jp sub cmp push adc xor or push test push jp (bad) aam sbb inc xor push inc std mov dec adc or or push inc xor pop mov jns jecxz movsl sarb dec sub mov or sbb sbb outsb xchg jp out mov loope xor addr16 jnp add and rclb cmc fs xchg in and pop jne insb cltd push popf icebp jmp leave push (bad) ficoml cmp hlt adc cwtl xchg xor mov in pop cmp mov adcl (bad) or insb pushf testb outsb lods xor xchg adc ret pushf test orb inc adc sbb xor mov imul nop add sahf cmpsb or scas outsl gs push mov cli sub mov cmp mov jecxz add shl or test bound push loop add ljmp loopne jbe lret mov push mov cmp or and or xor pushf lahf cltd int movsl add dec jo inc pop pop mov adc sahf jge lock fiaddl std ds lahf (bad) cli jge adc test cmc outsl dec in sub aaa les int3 test xor dec adc loop add push dec push pop pop pop cli pusha push adc mov sahf pop xchg enter push fwait jecxz xchg push or ret lods scas inc imul mov cld mov hlt popa inc (bad) jecxz push les pop cmp push jle pop mov fninit or (bad) fisubrl xor dec jp inc lods adc ret ret fmull xor (bad) (bad) and cmpsb rcrl and and icebp mov test stos pop movsl (bad) enter aam mov int push add add (bad) rcll push popf (bad) inc push xor jmp cli outsb jecxz pusha jne pop sbb (bad) or inc lds mov add (bad) pop cmp das bound push ds sahf lea mov push pop pop dec add inc lods (bad) mov fdivrl xchg mov push lahf mov push xor push in rolb adc aas arpl shr es add (bad) or adcl scas sti nop and aas pop mov test mov pop dec xchg dec push rep add jo bound mov push imul inc cltd sbb push faddl lret popf mov stos or fildl repnz pop into dec hlt push inc scas mov push xlat mov nop mov and (bad) pop inc add mov jp loopne sbb imul jno (bad) je adc addr16 in clc clc dec jecxz sub fwait cli call jae mov cmp dec pop add lret dec push sub add mov lods adc cmpsl push je hlt pop fwait out cmp rolb dec mov repnz mov add push movsl and jbe aam add out jge push jl xchg aaa fbld pushaw push sbb sub in cmp sbb test inc mov cmp xchg push pusha inc xchg mov add loop dec add test mov popf jbe les inc loope adc shrd jecxz icebp jns push adc sub sub fiaddl mov push jb lcall inc std sbb ljmp or addr16 jg mov xchg loope addb inc cmp fsubrl jo lods cmc inc sar push mov es dec ljmp inc add mov call mov daa and ja call popf sub lock xadd dec and rolb fisubl faddl or in sbb je cmp inc mov sub xor adc (bad) (bad) push rclb pop jae nop dec mov xor add lcall ljmp push loope jne ja roll outsb push push or adc sub mov arpl jmp insb jecxz xchg push imul mov adc lock push clc jnp and add mov mov mov aaa in cli call jbe inc mov mov mov jmp ds push ss jne dec std fdivs data16 mov and hlt sub das or js les shrb adc xchg sub mov addl xchg out pop rol or adc aas pop ja and ret inc ja mov or call xchg adc jo loope xchg lcall add idivl outsl jo jbe jbe dec (bad) (bad) incl dec outsb gs dec push dec imul arpl js push xor xor xor popa ret fidivrl xor lods xchg subl inc adc (bad) adc insl out fld jge push outsl jp jae xor or sbb push add and sbb push lods pop pop xor jle mov adc push in dec sbb mov iret ds pop insl push sub nop rcll ror xlat ds fxch movsb add sub push out cmp enter sarl sbb dec cmp lcall enter cmp out rcrl pop test push pop xor inc mov neg fwait inc into push or fdivr fstps push push arpl insl out fild adc in fsubrl je cmp ds fimull push mov pop sub inc xchg dec push pop out cmp push inc pop or cmpsl stc cmp lods jp and mov iret sti (bad) xchg xor push cld out insl cs mov push inc push fs mov repz push mov enter xchg lock sub clc push test push add xorb push push or push nop sub fsave ljmp or sahf out jg pusha jl mov pop (bad) into push mov inc push push sbb pop outsb mov in fdivl cmp pop mov cmp inc sub mov popa fdivrl sub das dec xor rolb sub jbe leave stos add pusha rolb add xor mov ds pop jnp dec call clc and lret int3 enter enter fcomp fxch (bad) (bad) loopne jecxz in pop xchg mov fcmovne xchg movsb mov and aaa jns pop and popa je xor xor loope jns or xor pusha or push adc test fcomps outsl imul xchg (bad) popf adcb aaa stos pop test mov push loope add xchg jmp sbb scas push add and iret sarl push or sbb repz repz cmp dec iret repz push pop fs je cmp repz mov rep mov (bad) int3 iret repz aam in hlt cld repz mov adc and in roll add add xor gs into xor nop call pushf jno dec jb xchg xchg and jae je mov xchg fldenv bts add add pop xor add rcrl and xchg jl cmpb inc or adc cmpsb or lcall ss lock adc sahf out and dec pop push jl pushf lods mov int3 fsubr cld or and sahf cmp call into repz cwtl sub push push inc xor mov jb push (bad) pop fsubrs movl push and push cltd cwtl or popaw fnsave mov sbb push adc out adc and add pop xor aas push push out cmpb aas adc imul mov push cwtl jg lods aas add push sarb push loopne fdiv lock lock mov mov dec sahf push or push add repz repz mov mov adc adc adc imul push sbb jae and sbb push adc cmp repz mov movsb iret repz or sahf cmpsl stc cmp adc pop and jns out cmp dec sbb out je fistp mov and repz push les fadds in or cmp repz lahf orb cwtl add dec enter out ds clc (bad) adc xchg sahf out sahf mov pop mov jns mov sahf out int3 aam in sbb inc scas out ja mov mov add add jbe (bad) cmp loopne negl xor push punpckldq cmp loop pop mov pop (bad) jbe sbb sbbb push fnstcw aad or add add in add iret repz sahf push js xchg movsb mov iret repz shl hlt out lcall or and out sahf sub cmp adc fadd xchg adcb and pop orb lods add jmp pushl divl xchg das out jmp xchg add xchg add jb adc or out prefetch jb push or adc jb sbb add mov shrb adc daa daa add sahf ja pop inc fs jl je sahf mov test (bad) notl scas adc into fadds xor inc mov sarb fcoml and lods and dec sub jns xor jl movsb mov jns out aam clc or iret repz sbb xor push push je pushf movsb mov enter jbe loopne sub push ja dec xor mov pop mov insl xor push fucomip lods push in xchg inc shll leave insb test lods add add or nop pop jo sahf ja ret jb push std xchg jns out cld movsb cli mov out sahf out clc fdiv lock repz testb sbb sub iret repz cmp push icebp repz repz mov repz out mov daa iret repz aam call cmp xchg bound or add mov sbb xor cmp mov (bad) outsl and inc or or add add in out imul adc push stos inc adc nop add lcall or mov rcl ja daa or outsl lods pusha ljmp cwtl push inc mov test imul aad and add pop mov pop adc fcos mov add mov xchg xchg pop add outsl xchg stc mov out mov jns out (bad) incb add idivb test add add loop add lcall das mov test sahf push jl add icebp addr16 add jo mov mov es push adc movsb add cmc pop inc or lock outsb lods push test xchg xchg movsl scas test js test mov in data16 xchg movsl (bad) int3 ja lcall orl test fimul movsb ss aam fs out lods out pop push mov inc pop pushf imul ss push (bad) sarl push hlt faddl cwtl out js test sahf je (bad) pop dec sarb lods and repz lods pop or out cmp push fs enter pushf inc insb pop mov hlt adc stc fidivr mov cs mov push (bad) push mov out cld push hlt push push (bad) add cs bsr push ss mov cmp push je mov ficompl add into mov ret nop andb push es cld push or mov lock (bad) data16 jl push pop jnp xchg pop push push lock loop js xor mov push push mulb fidiv mov movsl lock cmp nop fcoml and mov jp mov ss jl pop cmpl jle push jo push push out cmp cmpsl push pop and ss push sbb push iret repz test fcoml mov jae xchg fmulp pop pushf out sbb adc (bad) xchg fmull xchg cmpsb neg jnp es in xor and mov mov xorl ss ds movsb imul pusha data16 (bad) push mov jns ret js outsb or clc push je iret jnp inc or lock lods and (bad) mov xchg pushf xlat push loopne in jo cmpsb sub es mov addr16 outsb mov push push adc inc fs data16 (bad) mov sbb dec out out push in sbb pop insb push pop out cmp in aas outsb les (bad) xor inc fidivr out mov adc pop and or or or mov add jae push pushf push push shl loopne mov mov or mov out pop add push dec jge jbe add pop dec add pop inc fidivr jns sbb inc and dec pop push and mov dec aaa push pop dec add sub and adc dec xchg ja dec pop push loop push inc mov jnp pop push mov push xchg dec xor or inc push fisub cs and inc push cs fidivr push and xor dec cmp scas fnstsw testb push rsqrtps mov or dec push dec push cmpsb ss mov add sub inc add xchg sti flds rclb dec addr16 and incb add lahf jge je pop sub rolb sbb sbb add sbb mov (bad) faddl cld jg clc dec sahf das pop aas push pop jmp rol dec pop jns add pop or push aas pusha sbb jg add xchg jl xor add test or pop jo inc dec add ror ds add psubb notb outsl add push out (bad) repz fwait neg out (bad) cmp and cmpsl mov add pop mov clc pop push (bad) aas pop popa fcmovnbe fisubr aas pop xchg addr16 xor sub std cmp push fnstsw add cmp hlt insb jl (bad) push data16 lds sbbb add jnp sub jo iret rolb push and (bad) mov lock push lcall adc cltd movsb fucom jl (bad) xor jg jnp inc push add (bad) cmp call mov iret mov jl add add and lods ffree gs add sarl dec pop outsb daa (bad) xor aaa pop std inc ss iret clc lock aas rcrb fcmovnu push push inc pop cwtl scas insl (bad) popl adc add mov in jmp sbb dec test in out mov ds jle lds add fwait add pop in les test jnp bound aas nopl ljmp push les mov addr16 cld mov push cmp fadd push inc mov aaa pop push data16 lock inc sbb inc cs mov (bad) and or push insb ss int or push sub inc add (bad) shll xor sbb push push sbb cmp sbb aas jne data16 (bad) push xor divb fwait insl (bad) adc fcompl jl sbb push sbb or insl fldt pop ss push shl cmp fstpt data16 jns leave mov push push add cmp add rolb and add or add sbb sbb cmp fnstenv cwtl mov daa sbb mov repz and daa and xchg mov lahf and daa and out push adc cmp clc dec push ficomp mov push jb jge push daa lret xor daa xchg in mov sbb sbb fidivr inc daa out cmp aaa mov (bad) ja push into jne jne clc push (bad) cmc sbb pop push or cmp cmpsl lahf adc add xor cmp inc and mov xor and cltd outsl or jnp mov movsl daa dec sub aas push es popf cmp xor mov dec sub fidivrl jns dec and fidiv inc and jbe,pn out push and and cmp out jno sbb push dec pop push insb nop cltd push (bad) cmp push fcmovnu mov cmpsl daa push ret divb and push mov or (bad) push (bad) (bad) cmp (bad) push nop inc push clc repz xchg addr16 mov add testl xchg inc inc inc or pop xor scas dec push pop es stc jnp daa (bad) daa inc aad repnz push push dec dec pop daa mov nop lret outsl dec out in cmpsb and repnz incb jbe add add clc daa add ret jecxz add mov jbe pop repz or ret fstpl push insb sbb fdivrs ds shll cmp cmp out clc shl jb sbbl (bad) xchg lahf cmp (bad) sbb fs cmp gs mov push fbld in fidiv jae push aas daa dec lret out mov dec inc inc es iret adc dec add adc daa xor in repz sub jecxz test (bad) push push pop (bad) sub in inc xchg out jns or xor push stos movsb sub cmp or repz daa xor insl in mov daa aas das es pop mov mov daa clc out insb stc push inc sub push daa xor flds sub loopne insb pop outsb data16 inc push xor cmp (bad) je push inc mov mov daa je stos inc aas call inc js fsubrs or test sub adc dec push pop xor dec fs mov xchg daa mov cltd stos xor ja mov push lahf jmp mov jne adc cmove cmp test cmp sbb xchg push xchg sbb dec sbb xor cmp (bad) daa addr16 fs jl and clc or in bound sbb xchg fcoms daa fldcw mov xor dec daa mov fdivl daa dec daa clc dec rcr jae je dec sarb dec jl and rorl (bad) out and daa (bad) xor xorl cltd cltd call cmp xchg cltd cltd and stos gs test repz bound movsb aaa mov orl les mov mov cmpsl out push cwtl (bad) in adc fistpl push ja inc dec mov inc sbb lahf stos pop dec push adc scas pushl inc pusha and cmp cmp pusha pop pop xor (bad) (bad) jmp cmp addb push enter pushf mov (bad) pop rcr daa aaa int3 shrl into aaa daa and rol cwtl and cwtl stos xchg sbb sub in sub insl mov in jbe lds push fmull loop and push test stc fnsave push div clc daa and mov xchg add and mov xchg and pushf aas lahf push pusha (bad) stos aas adc cmp add mov push push andb movups jmp cltd xor cld lret sub lret xor pop mov lock fsts dec add (bad) xor or (bad) fnsave repz pop lret or sub out decl inc push in push xchg dec pop pop or lock jnp cmp ja pop (bad) (bad) (bad) (bad) (bad) sbb pop lods sbb pop or push cli cltd je jns (bad) push loopne inc sub std (bad) (bad) incl inc cld or data16 pop add popf push aas cwtl push mov cmp and and test jmp mov into movsb and popf fbld inc inc jmp push jge inc (bad) cld repz ja pop sbb jmp js dec movsb and negl movsb push jmp int lods movsb pop add (bad) out out pop sarb sub sub jg jg mov xchg scas and test xchg and fsub fnsave push movsl push or hlt adc js out add jb adc cmc pop pop das sub daa push lods rcrb test adc mov sbb mov (bad) in sub imul cmp mov dec lock add push outsl adc aas push inc cmp sti mov ds xchg xor in cmpsl insl aas mov xor aam push dec or ds (bad) cmp ljmp sub xchg push rorb xor xor rcrl push mov or mov repz push mov jecxz sub and (bad) sbb pop mov (bad) cld jg inc jg cs xor and test int (bad) fisttp adc push jp mov test call lods cli add lcall shrl cmp or decl push and push hlt pop mov or jns add pop or xchg daa rcrb stc push xchg int pop aad sub push sbb mov adc outsl inc adc mov push (bad) add leave cmp jb mov jnp outsl (bad) xrelease lea jecxz push sub mov aas lock sub sarl xchg lcall sub jmp cld stos decb jg jl and fdivp iret sub push xor mov inc idivb std dec fdivs push sbb pop sbb add xor mov fsubs adc pop rclb (bad) mov sbbl in outsl mov test and out fucomip sbb and rcl adc dec push (bad) pop jl out sbb mov dec push cs sub inc (bad) (bad) std je loopne and push (bad) inc test lods push js cwtl (bad) jmp (bad) pushl jle or cld inc popa fs pop (bad) push sub xchg sti rorl inc mov (bad) mov mov (bad) insl aad (bad) lret xlat sbb sar scas cmp pop adc sub ja xchg arpl mov adc inc shrl (bad) out pop loopne test add sbb stc sub push pop jb adc sub mov inc push sarb inc dec or adc sub rcll scas jae push sti ret mov jnp ljmp bound xchg pop xor pop jg inc jns inc push out out (bad) ljmp lret sbb (bad) repnz lret and or out mov test pop mov mov pop adc dec fistl pop stc mov xlat jp repz into jp push (bad) lcall (bad) ss (bad) mov inc xchg xchg es cs mov (bad) ljmp sub jb cmp adc xor ret jb mov mov pop and (bad) (bad) mov dec les mov pop (bad) sbb dec or pop rcrb loopne add les rolb and idivl mov dec mov ja es mov (bad) (bad) jmp jge scas (bad) jge sub nop xchg sub xchg inc ja rorb jo adc add movsl push imul not hlt jne das mov popa int movsb xchg lahf cmp push popl push scas (bad) mov int dec or lock sub cs lcall popf aas jle mov cmp sbb and mov pop fistl mov daa mov dec ffreep lahf sub fwait cld mov lret mov xchg imull mov mov mov dec or movsb (bad) push rclb data16 lods insl jnp fsubr scas stc mov ja jmp (bad) mov cmpsl mov insl jne push test aad cmp adc pop inc and xor rcrb mov pop ja mov inc ljmp int3 mov (bad) dec or loope add in rcl fldl ljmp shrb shl sbb addl js nop sbb cmp cld roll mov pop xchg mov inc xor pushf mov jnp out pop rcrl cld stos pushf clc in cmp xorl mov in mov outsl push sbb (bad) cmp addl push add jnp jg es movhlps xor call pusha (bad) jge sahf mov (bad) jb pop fmul test lock mov (bad) out cmp movsb inc xchg test (bad) or bnd xchg xor mov in mov aas sti out cli or inc adc cld pop int cltd mov std movsb out and sub lds scas add repnz xchg je (bad) lock mov push or mov mov mov mov xor ja (bad) mov (bad) pushl sbb sarl push in fstps mov mov mov clc jg cmp pop or int sub test jg push (bad) mov shrb (bad) pop fwait (bad) jg test jmp xchg sbb push in lock iret adcl add or mov lods and inc lock xchg fwait int3 mov (bad) adc (bad) mov nop jnp jg cld pop cld jp (bad) idivl xor pop mov aaa pop or out adc pop es ss outsb or ret jnp mov push int je add jg mov xchg adc cmp stos rorb into (bad) inc inc clc (bad) mov subb cli data16 (bad) std adc psubb dec ja mov sbb jecxz clc jmp (bad) jbe repnz lret repnz insl pop push lock stos (bad) mov data16 (bad) sbb ja rcll push cs movsl jnp (bad) sub testb mov adc inc fild addb jg lret cmpsl mov pop and xor mov stos pop incl cs icebp dec cltd fcoml adc cmp jg fxch (bad) (bad) push mov stos (bad) (bad) sar aam pop (bad) stc mov shlb lods int outsl out int pop add movsl sub push jnp ja (bad) lods aad jbe or and fld push gs push cld int imul dec nop lcall aad clc or leave cmp xchg push mov (bad) stos jp xchg lret xchg pop pushf mov (bad) std inc mov push xchg jo outsl ja mov pop xchg stos scas xor lret cmp jle xchg decl fnop clc cli and cmp cld lcall or ret ja ss outsl mov mov adc sub cli pusha rcr lcall xchg shll fcmovnb mov xchg inc jg cld mov sbb pop jg test pop (bad) incl inc les xchg and adc pop and or dec lods and mov adc push in loop movsb sub ja adc lcall shrb push xchg in popa pop cmpsb jecxz std cld leave test sub and mov jg,pt xchg xchg lock mov pop adc add addr16 movsl movsb pop xchg jnp fstp ljmp test stos js daa mov ljmp in insl sub stos sbb es or sbb pop add orl movsb sbb sti scas ret stos out mov ja ret clc rorb mov pop cs (bad) fisubrl sub mov clc adc ljmp loope or push mov lahf jmp push push test or loope sub sub sbb std ficomp imul stos adcl and scas (bad) sti incl and mov out ja push test jb dec ljmp fsubs ds cmp push sub adc lock int leave sbb mov mov test (bad) (bad) ljmp cltd push mov add mov inc neg ffree subl cmp enter push sub jecxz fildll lret jns inc loop sbb daa dec scas daa (bad) fist push push push lock sbb mov mov push or mov stos das jecxz pop add gs mov pop repz lcall cld pushl inc mov sub and pop jg and push inc xor sub int or xchg mov push cli inc sub lods sar jle (bad) shrl sbb scas dec mov sub xchg in stos bound clc push mov push lret sahf mov fcmovne aam rorb mov push or jg ljmp sub lret xchg mov (bad) mov lcall cmp xor pop bound ljmp adc decb aas cltd adc lods (bad) xor push mov jge inc xchg ljmp lret xchg (bad) repz and decl xor sbb dec sbb ja sbb outsl cmp and fwait addl add push and sti jmp outsl mov or (bad) repnz std mov mov inc test mov stos xchg fs pop pop nop push das (bad) rcll cli cltd jnp mov adc sub sbb cltd or push jmp and ffreep fstps idivb pushf (bad) mov mov inc shrb adc mov and das sbb andl sbb adc out xchg lock push sbb push lds pop fucomi mov (bad) jne mov or dec jbe lret (bad) into pop scas lcall es cmpsl mov (bad) aam fmulp fsts roll out rorb push cmp mov xchg pop movsb mov out adc rorl push sbb idivb pop insl cli sub (bad) scas jmp cmp fdivrs jmp push (bad) sbb mov xor and sti arpl ja cmp jg adc or mov adc sub lret shl pop js fdiv (bad) push cmp cmpb imul xor push mov enter jbe out adc add pop or cmp sbb out out (bad) push test push and aas or (bad) (bad) out and pop xchg sbb shrb push pusha stos nop fcoml lock jge sarb mov (bad) shrb jp cmpsl bound pop call xchg shrb cmp fdivr incl dec lods and ss jg ret add ds pop repnz imul inc or sub (bad) (bad) lcall mov xchg mov shrl and xchg jp add loop ja ljmp jbe push js mov movsl insl jl ljmp loopne cli cmpsb jp icebp movsb testb sub xor lcall stos repnz adc cmp ret in adc mov outsb bound mov and jp fnop jmp (bad) jnp aam pusha ret incl in pop in lods test cmc aad push rcrb out mov push pop (bad) push xor jbe insl ja xchg jno cld int3 clc icebp push or lods popa scas push (bad) push jecxz mov inc push push pop clc (bad) jle fcoms and push mov in imul mov sbb lods cmpsl mov sub scas sarb sbb pop es push mov scas sbb rcll push mov pop cli fmul scas sti mov sub mov (bad) lcall cmp std cmpsb mov clc dec mov aam repnz mov mov stc (bad) faddl adc lret es repz and mov lea (bad) (bad) mov or xor call inc or and push sub jge outsl pop push mov into pop aad aaa push adc pop lahf mull imul movsb and scas das push pop movsb (bad) ljmp in and jge jb ficom rorl inc incb pop cmpsb outsl repz fisttpll or jbe pop call rep jnp lret xchg xchg xchg mov adc add std pop clc cltd and add lret inc add aad jg aas std inc mov sarl mov mov aaa sub mov mov mov js movl loope pop (bad) jmp or pop repz jecxz mov gs clc repnz shl incl ja xor dec insl push jbe ljmp push inc es je pop mov call insl aad (bad) mov (bad) mov cmp lret or loope scas mov int (bad) std lds inc adc sub sar pop ljmp sbb sub push ret aaa push pop xor jg mov mov inc (bad) gs loope cmp xor mov and es lods push inc pop iret arpl sahf add fnstsw (bad) fist adc mov jbe jns pop jecxz push (bad) jge pop clc jne psubb inc mov in sbbl clc es cwtl push and loop push bound cmp mov mov add pop (bad) jns (bad) iret out jp hlt push outsl clc sahf ljmp call call cmpsl or (bad) sahf sahf stos cmpsl push outsb mov jl or hlt xchg pop jg outsb or jb inc xchg scas adc mov sub xor or mov xchg pop and out inc cmp and je insl (bad) idiv sub push out mov push mov or mov and (bad) or cmp out fcomip mov pshufw jecxz ret js and loop jecxz xor call mov pop push loopne mov pop sbb fidivl ljmp xor push flds mov mov sbb lods push push sub mov (bad) mov jl lcall mov xlat jg daa repz leave inc add nop xor mov testb test (bad) push mov fxch xchg movsl cmpsl jp sub pop lods ret lock xor or mov ss adc dec inc mov ljmp sub movsl cltd aam nop pop std ja pushf (bad) dec cld pop ss xchg (bad) fdivp mov (bad) cli mov mov pop ffree mov push pop test clc cmc pop (bad) push mov cmpl pop ret lahf add sub fdivl push loop leave mov fistp (bad) scas out add adc mov push icebp mov les xchg inc cmpsl dec in mov adc clc mov jl cmpsl jle inc fs mov pop cli rcll out ret push pop mov test test xor cmp xchg add adc mov pop pop push aam lock fwait mov jl xchg adc cli jnp mov inc lahf jge inc or mov repnz mov mov rorb pop scas push (bad) aad (bad) aaa add std push out mov sub inc iret xor pushf lret (bad) test push repnz es fmuls cs push pop inc cmc std cltd xchg mov sub dec and loope test cmp cltd mov cmp sub outsb xchg test xchg dec mov fidiv outsl xchg (bad) fidivrl test int pop xor jo loop cmc ja mov loope sbb (bad) push call mov pop adc push lock push (bad) out ret jae sbb pop mov xchg int movd cmp push das inc xchg ja mov mov adc stc cmc adc push int3 in cld xchg inc cwtl or in loopne stos ret mov inc dec movsb mov leave adc call xchg sahf mov and nop clc xlat lret adc push stos xlat int3 mov jbe test inc pop call dec jge insb test icebp dec sbb and xchg fisttpl fs enter nop inc inc cld mov mov pop std (bad) decl hlt ret jge fadd outsb add push test push (bad) outsb rep int3 test pusha xlat cmp enter push ret fsubrl or jecxz mov cld jmp xchg jnp mov add imul mov cs clc xchg push sub push ja lret int ss out popf mov push faddp aas js lret cmp push xchg push loope outsb add adc or in mov jns xchg stos icebp jg ja adc int inc mov mov cli (bad) (bad) pushl mov repz fcoms (bad) loopne pop sub dec mov std or pinsrw call (bad) (bad) ljmp pop sub jae sbb jge and or sub jno aad add call add loope stos mov add aaa ljmp sarb xchg out in js mov jmp add pop cs and and add sbb pop loopne (bad) (bad) negb jb push adc clc rorb mov push (bad) sub cltd sbb pop ret pop sbb mov push cmpsl mov sarb in mov pop repz insb cli insb adc mov sbb mov idiv pop js fdivrs or pop push lea mov int3 push pop in or popf or add pop add sub jge sub xchg icebp pop push scas out sbb push push rcrb aas ret and jg lds shrb cmpl sbb jg xorb or sub push push inc sarl imul add fnstcw mov (bad) ljmp lock ja mov xchg push popf jb add jg and jb pop lods ja clc or in push xchg incl jg mov mov pop pop jl (bad) and out push scas adc mov sub pusha cmp lahf add mov addr16 adc cmpsl pop mov push in adc push xchg lock or xor ret loope ljmp nop loopne push cld and scas repnz sbb cli xor sbb rcrb pushf cmp jg sar lods mov inc ror mov mov inc mov imul clc out add xchg sub lock mov and cltd sbb mov add addl xchg xor test les aas (bad) jle fisub or adc pop pop (bad) (bad) jnp mov xchg fimull in mov loopne sbb add mov dec mov dec or mov xchg pop sbb fwait push sbb cmp jns sbb testl fisubr (bad) hlt fbld cld mov (bad) ss xor sar sbb and rcll push aam incl enter fwait cs cbtw lds decl push (bad) psrad mov jb sub push ljmp sub push pop cmp fistpll stos inc mov or cmpsb jg jmp int test rol inc (bad) jmp xor xor mov jmp add adc jmp imul jo std push add les or xor xchg adc mov xor in sub ds lods jg jmp lods sub adc xor xchg push push pushf or xchg (bad) mov outsl enter out mov mov jmp fistpl call xchg push inc les pop out and mov sahf pop int fstpt clc dec lds xlat xchg mov outsb stc mov decb sti pusha fnstsw sub (bad) jns jnp (bad) (bad) pushl fimul es mov push imul push sbb popa inc xchg sbb push test in (bad) incl les push inc fldenv jge in push mov push sbb cld pushl adc (bad) (bad) clc push sarb cmp stos mov or jo pop ficom test inc lea dec cld cltd jmp xor pop or (bad) out and loope pop mov pop cli pop imull and lcall push cld jg lods push daa xchg jp or push pop pop ret stc or jecxz fwait pushf aad add decl (bad) (bad) imul push fnstsw clc sub sbb movlps in test push jg in out ja icebp push fdiv pushl outsb (bad) aaa mov pusha or push xchg fdivrl push jg fdivp mov fldt sbb (bad) in sub std clc pop pop jmp (bad) pop enter notb clc mov push jp pusha cli aas js (bad) and pop test adc dec repz (bad) jnp imul pop js add call data16 (bad) (bad) jg movsl inc sub bound test lcall test jnp sbb push jge incl (bad) mov jecxz jmp push insl pop dec xor mov (bad) sbb push aaa (bad) (bad) ljmp mov inc hlt jae adc aam movsb or jmp cwtl loopne fildll jl pop push lret ficom (bad) ja cld inc add lcall arpl push idivb mov movsb negb imul dec add jge mov notl sarl inc pusha and xchg (bad) insb ja (bad) mov (bad) in rol int3 sub push add into mov lahf daa js mov jns jmp push test or outsl and test aad push push repz jmp mov aam imul rclb pop pop xor push lret pop les imul sbb pop fdivrp int notb pop (bad) jo cmp sahf lahf cli ds iret cmpl std popf pop ds (bad) (bad) jnp ja gs inc pusha mov fsubrl jmp out pop adc das hlt shlb xchg dec pushf dec mov lahf cli lret jl mov mov mov fildll add ret dec (bad) push test fmuls xchg mov repz push int and sti scas enter imull lret rclb lods cmpsl mov nop aad fwait xlat xchg jl cmp rorl sub rclb sti push ds movb or cmp jae push mov in negb mov imul out out repnz movsb dec mov unpckhps inc into repnz push (bad) out push mov repnz (bad) ds in popa push jo adc out test scas mov xor sbb aas mov jg mov mov fildl pop mov in xor (bad) cmp inc cmp stos insl push lcall pop scas push push rol sbb jne adc insb addr16 jns bsf adc jg mov test ret outsb or aas shr pop loopne mov push add ja ds loopne insl mov jno fwait lret rcrl and or push mov out ja jb sub clc xchg mov daa push daa inc cmp ds in gs pop push add (bad) adc insl aas sbbb test mov ds cmp mov fcoms int (bad) xchg pop inc insb xchg (bad) testb je push in nop mov mov fildll ja or popa in int3 mov js (bad) out test adc mov pusha lret outsl xchg (bad) lock adc es std loope aas mov fucomip es aaa lcall (bad) aas stos push (bad) mov xlat (bad) xor pop mov repnz push into nop mov xlat xchg clc scas daa outsl mov call pop cmp test pop je dec push cmc ficomp (bad) (bad) jl in add add imul out popa jl rcl pop jge sub ja shrl or mov fldl std and pop in bound icebp add mov jle scas pop jmp jl add cmc icebp insl pop and test (bad) call (bad) and xchg shll jmp adc pop add jae jno pop push testb sbb in pop (bad) jecxz loopne sub movl (bad) mov push or xor int adc or rolb (bad) jg (bad) pop test es sbb mov mov rolb push outsl adc (bad) (bad) (bad) jg scas pop shr lock movsl movsl pop pop cmp (bad) jmp mov jle (bad) (bad) aas icebp imul or adc dec stc inc mov fcomip movsb push hlt and sbb ret add mov decl pop decb (bad) (bad) gs mov or jnp cmpsl (bad) in movsb mov lret xchg int or inc enterw mov in lea je sar sar insl stos adc mov adc cmp inc sbb (bad) incl aas cmp jl fwait repnz jb mov out mov loop mov jmp push les mov push adc gs adc dec lods test mov pusha jg mov dec sarb push incl clc push addr16 jp es xchg xchg xchg xchg out mov inc cmpsb and mulb dec inc jbe push sar pop add notl std jp stos xchg loop and (bad) lcall sbb aam iret xor pop mov sub mov loopne std push inc pop mov jg jge call jmp mov jmp mov xchg hlt sub scas cli sti inc jo cli fwait imul in add das subl int3 mov xor movl std and mov scas aam mov stos and psllw pop sbb cltd xchg int3 xor iret lock pop clc (bad) incl xchg mov pop cli ret xchg dec pop pop stos lahf das pop cmc int outsl movsb xor clc push aaa xchg mov add or pop cltd dec mov jp sub je lret scas sti jl cltd fcmovnbe insl test fdivs push sbb pop pop test cmp (bad) jmp dec xor out es mov ja jnp int3 hlt mov roll mov add iret (bad) mov sti fnstsw (bad) les sub out push push mov and arpl fwait add mov faddp fnstenv add jo and mov sbb hlt scas mov add mov add outsb std cmovae inc push test (bad) cmpsb (bad) (bad) idivl rorb mov sub mov cmpsl cli iret pop out popa bound fldcw push jg (bad) pushl fsubs cmp stc sarl mov stos jmp fdivr jmp fcompl sbb out mov pop iret (bad) lcall jg cmpsl fsubs inc lcall adc out xor jg lcall sbb call push inc adc aam jecxz movsl lods inc (bad) aas jecxz sbb xchg dec orl shrb (bad) (bad) (bad) pushl nopl shrl push jns jae in test insb and (bad) fbld dec or adc inc mov ds ja inc fwait (bad) (bad) (bad) mov cmpsl and (bad) sbb jne push fstps in or push adc das stos lock inc ret fist rcll in mov sbb ljmp data16 xchg call out out xchg jae movsb mov call rcrb xchg xlat or xor lcall inc xor and sub (bad) incl mov lret cmp cltd or cmpsl pop push fldenv out xchg or (bad) (bad) mov cmpsl test fld xor lret push mov sub int3 sbb jg sbb inc mov fs jp popa push insl pop cmp jecxz fildl add gs cmp test in (bad) pop js xchg cmp fisub aaa cmp cli lahf add mov inc inc lods sbb icebp test stos testl push nop data16 (bad) mov test sub pop addr16 ja test xchg hlt adc cmc je (bad) jo outsl xchg in into in inc mov dec test test and mov movd (bad) jg mov fsubs push (bad) jecxz stos jns test sar pushl inc xor pop sahf jne das or push popf inc ljmp test test in fimul (bad) out push pop pop xor cmpb pop fldl int sub pop and lret sub cli icebp imul jl push adc mov imul cmp js mov cmp loope or jp sahf or xor inc (bad) leave jl push lahf mov or leave push imul arpl and jg fbld repnz aad (bad) mov pop mov pop add (bad) jmp xchg mov mov jl sub ljmp ret (bad) jg lcall jnp xchg int3 lods les (bad) inc (bad) mov cs pop je lcall or push cmp fistp add icebp push cmp push or dec fsts loopne popa aaa mov push out stc push inc clc dec les jne jo cmpsb adc sahf lcall inc int push pop das push or and loopne pop scas or neg clc test les repnz adc fdivrp (bad) jg mov pop dec stos int3 push and (bad) or or out pop inc sub adc cltd push loopne shll pop xchg jl push ret mov (bad) loopne (bad) mov adc push inc sbb cmpsb (bad) cmp int3 repz les (bad) iret pusha cld mulb (bad) (bad) cld push or (bad) mov add push push cld inc push stc mov jle adc pop mov loopne sbb in test stos enter sub pop fisubl mov mov ret cmpsl push mov pop mov divl push inc mov lea fcoms mov sbb cmp call or (bad) jg ja es sbb xor sbb mov in lock out pop or cwtl clc inc inc rcl pop or add pop movsl daa addr16 ret (bad) scas pop cli inc mulb (bad) cmp add and sbb (bad) mov mov (bad) jg lcall ret cmp jecxz sbb pop sarb clc sub loopne (bad) cmp mov adc outsb jnp push ljmp jge push adc jbe movsl mov out cmp mov arpl xlat bound imulb pop arpl xchg mov cmc inc hlt (bad) iret push mov mov insb (bad) (bad) jne shll inc mov in push hlt lock cmp mov scas push adc aaa out inc sbb inc pushf add icebp inc ljmp cmp aad ja ficomp jmp lods adcl pusha jae sarb xchg mov jns pop pop adc outsl clc fbstp add test lock push xlat push incl pop in pop mov xchg stc cmp (bad) (bad) xor xchg pop out leave popa orl hlt xor je dec push test jg mov jg test push iret stc sbb add pusha mov decl (bad) hlt mov in in push inc pop jecxz pop (bad) pop sbb outsl pushl jmp lods mov test add addl cli fcomip sti fwait adc (bad) sbb push es add mov mov addr16 dec js lds sbb sub out hlt cmpsb push shr rolb push dec xlat ljmp insl repz int3 inc pop mov stc mov std sar pop dec lds pop inc cmp insl fmull stos push cmp pop cld jmp lds je fwait ret ljmp pop outsl clc pop std pop push js (bad) xor mov movsl sbb je cmp into inc pop mov (bad) or sbb fwait lea pop and sar arpl mov dec ja rol arpl push repz cli ja loope cmpsl adc scas fistpll dec aaa cld adc pop or cmp dec out cmp ja jbe pushf call jae (bad) (bad) mov test pop data16 mov push mov test push fcoms adc loop jmp sbb ja sbb (bad) loope ss (bad) jno out or stos cltd xchg mov sbb pop out push incl dec lcall notl incl cmpsl mov inc movsb xchg push std fbstp mov mov or hlt xchg cli xor ja cmc and cmovs xchg inc cmp jno popf pop inc mov fidivl sqrtps clc (bad) cli pop sbb jbe mov mov xor inc (bad) lock repz repz icebp xlat stc addr16 iret xlat pushl pop cmp adc and mov push (bad) mov shll inc idiv in pop jbe je outsb jo leave stos mov add add in pushf les fistp ret or pop cmc bound stos push pop (bad) (bad) ja inc dec ja pop cs xchg jns push ja (bad) lds inc sub mov movsb popf je ljmp rcll jge sub scas fxrstor sub data16 stc jae ret aaa fdivrs jns cmpsl pop shlb sub mov test ret push mov jp inc mov adc pop xor (bad) movsb fcmovb loop out jp pop jbe jp jmp test mov sub mov (bad) jne pop std inc mov fsubrl push push inc inc jl int out jno (bad) icebp or jnp sbb ret xchg rolb jle decb cmp stos lock pop pop mov loop ljmp lahf ficoml dec mov mov xor test lret sbb bound sub xchg mov sbbb inc sub adc in sub aas adc (bad) pop icebp imul mov aaa or outsl mov pop jl jp push daa lahf loop cli mov lret dec test faddp icebp fidivr enter lahf inc adc in pop das daa loope pop lock jbe mov or lahf mov lret das into scas test pop in test jp or sbb mov cmpsb cmp sbb pop mov adc add add adc pushf xlat jge xchg stos bound pusha sbb jp sbb xor hlt mov cmp pop xor push frstor ret mov mov jl inc jae fbstp aas (bad) mov out jmp inc fwait test les out imul xchg in and (bad) pop pop adc test int out aam cs les addr16 lods push jle or cs xlat insl lcall popa roll mov inc mov loope rolb mov je outsb hlt push lea ljmp xor sbb outsb jg clc mov mov imul xchg test pop jecxz insl daa add dec add lock jmp mov bound inc adc sub decl dec (bad) cmp sub lret test (bad) pop std sar outsb out aas loopne mov sti push (bad) jo rcl ja cmp mov inc ljmp jp (bad) push imul inc jl pusha pop (bad) push in inc and ret mov jp lea (bad) jmp add sbb (bad) mov (bad) pop pop loopne std adc mov add inc hlt das adc pop or push inc jl clc aaa jb pop fdivrp flds push cli hlt gs push or sti lahf (bad) repz inc pop js mov popf aad sbb inc fstpt in repz test std lods pop nop lock leave inc into fsts pop lock pusha (bad) or (bad) fnstcw std inc cmp rcr test es adc adcb sub scas icebp stc sbb lock mov scas jg stc mov loop jg add xor in (bad) mov adc pop adc inc dec gs insl push loope pop bnd mov sbb and jns (bad) xor lret ret movl arpl add out out inc repnz popl idivl push xor mov (bad) mov sbb stos loop adc sub inc xchg cwtl cmp inc cmpl (bad) cmp jl jmp notl les out (bad) push jle and imul ljmp mov faddl cmp inc push popa adc fsubl (bad) out adc lret test or sahf mov xchg pop (bad) int3 scas pop cli and jns loop jg das shlb (bad) cmpsb push xor addr16 mov jp cmc (bad) mov dec shrl cmp mov (bad) das adc imul mov es adc mov pop call xor shrb jno xor add orl lods push scas pop push jl int cltd hlt xchg lock outsb cmpsl mov rcll adc mov sub iret inc or lret movsb (bad) fwait adcb iret pusha push fldenv cmp call movsl std inc jbe stos add fwait in mov jne push icebp inc mov pop xor and fstps out add movb dec adc clc cs lahf mov pop lret sub push adc jl shl jmp cwtl sbb sbb ret jp ret mov dec fbld sbb pop (bad) and jns adc mulb add xchg rolb cli and cld fistpll xor pop leave inc lods fcmovb xor hlt sbb pop rclb mov (bad) jmp mov pop cli fwait les pop test clc std push sti add fdiv inc ljmp sub pushf outsl shrb or sub cli int pop mov pushf sub into nop inc clc cli ljmp (bad) repnz outsb js push pop sub cld jp imul fiadd cmp (bad) push add imul call cld (bad) adc or call shrl mov inc and add arpl jle inc rep cmpsb sti xor sbb movsb dec idiv js hlt push push mov sar outsl aam add push or and lock ret adc push das shrb pop lds mov cmpsb inc or stos ja cli mov mov sbbl sub stos scas clc sbb cmpsb in inc mov inc pop into dec pop lcall xchg scas scas sub shrb add outsb jge (bad) movsl clc xchg aaa (bad) mov pop mov (bad) idiv loope js push xchg outsl outsb pop push xorl adc aas insl xor repnz incl pusha mov inc lahf pop pop mov lock loopne es bound pop clc (bad) lcall adc sub inc aaa jnp (bad) lods or into pop adc rcrl mov cmpsb cmp cmp sar jl add ret xor add jg cld mov ljmp sbb push pusha or sub add pop add sar xor test dec cmpl addr16 pop mov pop mov mov ficomp push pop loopne orb sub dec xchg clc sbb or pop adc fbld mov push fnop add test dec pop cmc lahf mov pop (bad) test jp lcall cmpsb push (bad) fbstp lock or mov repz or ret imul push (bad) cli pop cltd fildl shlb leave popf mov scas (bad) add fiaddl jp loope hlt fistpll cltd add adc rorb sbb and mov imul jl mov int stc lea stos pop jmp dec inc fdivs jmp cld lahf int (bad) pop inc sbb sti ljmp sbb es insl pop pop inc (bad) (bad) lahf push loopne pop dec jmp xor ja call mov stos ja (bad) (bad) decl jg mov or add xor cltd leave imul jno push decl and mov jmp (bad) insb inc and outsl sub cld incl sbb add loop xchg clc lcall std jl mov xchg in cmp xor cs out and mov inc push pop mov ja popf mov leave adc in jecxz mov fcmove rorl and ret lds adc scas push ret mov lds or sbb dec add jo jne pop push jae pop std mov sbbl or fldcw popa fld cs mov pop sub je dec call sub out dec lea clc dec (bad) incl mov (bad) adc cmc fistl into pop mov mov fs rcrb adc out insl in pushl cmp jg and decb dec mov add sbb sbb stos int3 push das inc std mov out outsb push mov push mov mov cli mov dec inc std in incb shlb loope jbe sub out out shrl clc pop rcrl push out stos (bad) loopne dec push add add rcll mov fadds push sub xchg clc xor sub loope xchg sbb mov xor adc sub icebp sti push fdivs fchs repnz dec mov mov (bad) cld sub push hlt lret or sbb je mov mov and mov enter addr16 push xchg clc sti jns mov aad (bad) sti cmp clc ss shr sbb stos mov jp (bad) outsb pop (bad) (bad) jb scas ret data16 ja mov cs mov push ja xchg inc adc fcmove loop jo mov pop xchg data16 aad adc add je test cmp scas rcl xchg jo jae jns add aam add jmp adc and sbb xor (bad) lcall sbb mov sbb pop add add dec mov mov enter ljmp sbb jno js sbb test xchg cmpl ja pop int push jns jp pusha sub jns cli rorl mov sbb dec mov xor inc xor or or (bad) push in or loopne std je adc add aaa std dec jmp lcall and pop mov (bad) inc xchg and mov fwait xor mov xor add loopne (bad) (bad) sub pusha dec movl inc loope out cmp inc add (bad) inc pop (bad) sbb popa out xchg jle sub adcb dec lock push out test (bad) mov into inc dec or mov stos dec daa or mov call stc arpl jl mov pop xor test das jl cld and (bad) incl cmc mov cmp mov arpl mov (bad) push inc cmp lcall xor inc sub sarl lods mov es push icebp cld jmp pushf push std sub push rep out out sub and jno in std xchg push (bad) jmp ret (bad) pushf dec push push pop loopne test jge inc outsb rolb mov rorb ret inc jg fidiv pop push je jg jnp (bad) (bad) pop mov push and rcr ja loope decb (bad) fistl mov inc xor cwtl mov pop push pop add mov test push cmc xlat (bad) sub pusha xchg lock adc loopne lret int3 or dec xchg push test adc xlat mov xchg shrb add test shr das push outsl ss xlat movsb xor stos cmpsb inc cmp adc icebp scas in (bad) imul (bad) pop inc sarb je je push inc (bad) mov push (bad) inc pop stc fwait push mov mov inc push (bad) call sbb xchg cmp ja test test mov into (bad) cmp pop sbb aad loope loop insl pop loope dec mov cld inc add sub or pop pop mov jecxz popa test push test ja or adc jnp add push push loope add cli mov mov sbb outsb in insb lock sub nop ret add push jbe test xor in jecxz fisttpll aad inc ja mov xlat cmp ljmp in (bad) pop xchg ret add loope sbb lea cmp pop stc movaps decl cmp inc popa dec aaa inc cmpsl add cli pop dec stos jp flds faddl clc cli sbb cli (bad) cmp (bad) fisubl cmp mov out aad shlb incl js fsubrl push dec int ret xchg xchg out ds add jmp gs jl lds lock clc jae pop (bad) cli jbe dec inc inc sbb sub add pop adc mov jmp ja in pop cli jnp mov push pop mov cli dec sub popa jg movsb js (bad) and mov fwait shrl hlt xor add sbb (bad) ja sbb push sarb mov cmc div in fs sti lock adc in and pop xchg xlat mov lock ja jle mov ja push loopne popa scas adc cmp lcall lret (bad) sbb aaa outsb adc and imul cmc cld inc stos aas and pop outsl cmc iret cmp popf test and outsl ja add in jbe fdiv fwait out cs lods fadds hlt out dec cmpsb ljmp loop pop and out or sub loopne jecxz fistp notl int3 jns pusha lret push adc mov outsb movlps fnstcw rcrb (bad) fisttpll add das add std and ds lahf in adc inc inc int push jns mov or cltd js aad or dec or jnp ja sarl in clc jae fstpl xor rolb jp daa sbb xchg mov or mov (bad) incl or (bad) std js enter cmc (bad) shrb dec fiadd and ret icebp pop ret adc mov jl pusha aaa add hlt test scas pop mov pop mov loopne xlat (bad) pop insl int sbb out call adc or sub mov pop lret fidivl sub inc xchg jp lcall ret in icebp or (bad) mov aaa or daa xchg mov push adc sub incl cld pop shll push push ja mov (bad) jg jge and and push (bad) rclb sub and dec xchg stc mov mov and xchg lcall es or scas pushf imul call out movsb dec push rclb jp add and xchg insb sbb push aaa cli cli loop movsl call scas rolb negb ljmp pop add adc shlb pop mov pop mov sti xor (bad) fbstp push sub inc sbb test and cmp lods rclb stos xchg add xchg lret xor lcall sbb jl shl pushf pop mov fwait hlt add mov int push popa pop cmpsl (bad) (bad) out rclb imul and sbb pusha sub cs imul jle dec pop cmc stos enter and ljmp aam (bad) sub insb in (bad) enter pop clc mov outsb ja xchg cwtl xchg or push push mov fidivrl lea mov inc aas jo sbb cli pusha call call mov incl in (bad) call xor inc xchg imul lret adc or xor pop cmc lcall sub das lock push addl sti ja hlt pop push add mov push mov adc in call or aas mov pop cmp inc lret cli add rclb sub push xchg add pusha dec push das shlb push cmp fildll addr16 or inc outsb movsb sub mov cmp xor stos (bad) insb daa (bad) movsl add into add xchg sti mov or lods (bad) xorl dec fwait lock sub inc mov std adc push push or imul sbb testb jae rcl inc jge (bad) mov mov pop fisubl xchg fucomi stos push lahf pop lods fcmovne popf dec push enter mov push cld mov cs pop adc lock or stc inc push stos sbb out mov pop ss pop lock jbe incl das loopne and dec mov lods enter mov push sahf ret aad jl mov popa mov push scas das leave pop push add (bad) fistpll push (bad) not fsubrs mov cli lahf pop sahf jns scas pop sti inc xchg pop mov mov cmp ja mov daa es call push ds inc mov scas mov (bad) lea stos mov movsb xor or ljmp push pop add lcall or aad pop mov lret scas sub les dec add cmpsl fs daa push popa xchg aaa pop rorb cmp and neg (bad) push sub pop adc bound (bad) fcomps or jg xchg push cwtl cli inc stc clc push and adc jbe cmp lahf sahf ja mov adc stc mov loope testb or push push adc mov icebp cltd mov ss rolb (bad) lds and or (bad) scas iret sbb test jmp add cmp dec xchg jne and pop and aas mov sar aas adc imul mov cltd xchg test jg dec and push add pop lcall push hlt int push movmskps cmpsb push fwait (bad) (bad) (bad) adc addr16 adc add or xlat push xor add add inc or and jl sub pop out xor loop sub sahf pop mov lods daa test call sub sar xor cmp mov pop sub sbbb sbb pop xor adc cltd cmp (bad) jg push cli push dec mov mov xor xlat shlb xlat sbb (bad) test loopne lods inc mov and xor add push add inc xor sub or push mov repnz pop rclb sbb es push jg sub test inc mov out dec or scas dec push push push adc push shrl jae mov (bad) call enter xchg jo xchg cltd stc stos push and out dec jg mov insb sub movsb movsb pop in in xor pop add mov push clc push pop bnd xor pop add push xchg sub clc sub jmp mov jge addb ja (bad) jg sbb jo and xchg popa pop sti int3 rcrb and and (bad) mov (bad) (bad) jg aam add push enter shrb jnp push sub call xchg and leave mov into rcrb stc sbb mov inc inc sbb push scas push sbb xor lret push cli dec sub inc jmp add dec xchg insl jb add imul call adc fadds mov dec mov ss dec jnp mov push jg ret mov add clc and add xchg jmp stc (bad) dec add sbb enter jb and dec bound sbb lock mov mov mov fsubr lods inc clc (bad) cmp adc jae lea dec add add adc jge push pop mov mov cs clc (bad) lcall pop sbb cmp clc rorb stos cmc test std out and add xor insb and cld jg lcall lods (bad) cmp cmp dec inc ljmp stc jl jge cmp (bad) pop sub std inc and stos cmc dec ljmp clc movsb pop inc pop out push hlt and lahf add (bad) xchg add and and mov or inc add push loope jl sub sbb ret push mov nop cvtdq2ps nop ljmp pop jmp (bad) cmp mov lahf outsb fwait lret ljmp and (bad) xchg mov aad cmp push cmp loope scas out stos icebp aas in xchg jbe adc inc mov loopne pop push negb mov (bad) les inc push or add ljmp cld daa icebp sbb outsb fdiv lods fdivl cmovle or sub (bad) xor movsb cmpsb lods stos notl std sub mov out jg add push and aaa cmp sar loope or push dec or mov pop psubd mov push in push in clc sbb jmp ss pop sub xchg out add sbb adc rcrb fcoms cmp mov add ret add pop ds and mov movsb (bad) incl sbb outsl cmp mov cmp insb iret jmp dec clc add lods dec push fs push pop jo (bad) and sbb push cmp push mov xchg scas pop shlb bound cmpsl sub push mov lock out lds mov (bad) rcrb lock add push sbb repz add ret cwtl andl icebp mov in inc rcll jp inc out xlat stos dec and mov cli dec jecxz (bad) movb pop iret sub add adc and mov mov push xchg pop mov outsl insb insl es lahf dec rcll inc or dec dec dec lock sahf int cmc jle aam cmpsl jne popl dec (bad) jg test xchg inc jp cld dec js jp fbld or xor das lret lods (bad) data16 dec aas and push je inc ja call mov icebp fcomps (bad) mov lds sbb jo out aas and pop (bad) push (bad) sbb cld ja sarb cmp rol (bad) hlt out xchg push inc add leave inc fldt (bad) lcall data16 xlat test rol push inc sub pop pop mov push pop clc jg (bad) movsb mov jns stc jp jns fisttpll loope aaa lock sarl (bad) decb inc cli rcrl in ret push push cwtl outsl (bad) cltd mov mov movsl call push dec hlt add outsl rcrb inc fiaddl pushf pop and popa inc jnp lods clc repz or adcl outsl inc jo inc dec loop loope add clc shll loop cmp subb xchg sbb push sub and jmp (bad) (bad) fiaddl aam push push imul out cmp sbb in pop (bad) push inc in stc inc add mov mov jl and (bad) cmpsl imul adc lret dec enter ds lods setp in cs push jecxz add mov inc jmp mov dec sbb add stc sub in daa sbb jp enter arpl fs (bad) or stc mov cmp push sbb ret or mov and (bad) mov mov out call xchg movsl movsl (bad) xchg sub pop xor test cmc scas xchg lahf mov cld ret mov cmp mov (bad) mov jo dec rcrb into mov (bad) jmp or in adc (bad) je cli ret ret mov ja sub movsb dec jb add adc jp pop cli (bad) popa jp (bad) jl pop or cli sti pop stos mov icebp out gs mov inc mulb lods inc (bad) pop les cmp in jg shll mov lcall or inc ret out mov repnz xchg mov sbb add jae sbb inc je add push lds shll (bad) xor pop add adc (bad) cmpsl adc and pop (bad) fsqrt push or push inc cmp pop sbb dec test or pop scas idivb mov lds bound push rcll jl push cli xor or clc adc fmull scas adc les les inc mov loopne lea scas mov and push fild pop and cmp pop push inc cmp push sbb addr16 xor cmp stos sub mov imul and (bad) cmp jmp ljmp mov aas mov sub dec cmpsl cmp or jo repnz lea decl test stos inc ret iret clc out pop (bad) jle xchg into pusha rorb or sbb orb adc jl dec clc arpl or pop iret pop cmc out xchg and xchg push inc push clc jecxz pop scas mov icebp lods stos lds inc ret push ret xchg rcrl xor mov fisttp adc lret enter pop mov jg fisttp (bad) lods jge and fwait pop lcall dec or push pop add cmc jmp fimul jae pushf gs (bad) call lret cmp in inc sbb dec clc sub ja jge pusha mov sbb js lret xor or ljmp xchg leave sbb xchg inc cmp ljmp outsb fimull pop pop arpl jle mov xchg pop inc in les (bad) lds push adc mov add mov push or cmp xlat les clc das pop jo push scas lods ja movsb dec push cli or loopne (bad) loope push sbb pushf sbb jge dec pop mov push les add nop or repnz dec icebp push mov out adc inc stos je lods loopne xor enter mov lahf call outsl inc fcmovb ret shll cmpsl push ja stc in lods shlb lds ret and subb jmp jp sbb mov push sti popa les mov xchg pmovmskb into orb pop gs adc mov dec repz lods or fs icebp xchg loop xchg fs or jmp lret in daa jb lods (bad) xor lcall std add scas xchg mov jmp cmp icebp stc imul pop pop lret inc or dec adc jb lret cs aaa std (bad) (bad) mov mov mov lods sub scas aam xchg mov sbbb jb (bad) dec out ljmp mov in or jecxz loopne adc lods mov pop jb lahf rcrb and mov pop fadd js ret stos repnz add mov mov inc ss int inc ja pop leave or or repnz clc lds outsb mov inc in (bad) mov shrl ret fcomp call clc fidivrl dec pop sahf pop rorb add or loop or stos xor arpl xor mov outsb cli or (bad) xor nop jge stos pop push js (bad) or test or nop mov and nop jp mov dec dec pusha mov xchg fimull clc jae or jb push rorl pop (bad) decb sub das mov test xchg lods add sbb add push (bad) adc loop inc dec inc out insl and lretw sbb and ret icebp mov push adc aas fwait push inc insl lods pop inc (bad) jmp bound clc and (bad) (bad) mov icebp and and mov clc inc lahf inc inc and test add das outsb sbb xchg and xor gs mov sbb pop mov or clc (bad) cmc mov (bad) cs push mov mov nop negl mov jo adc mov jl sub mov (bad) mov or add push adc (bad) jg outsb cmpsl stc inc xchg mov ja push movsl jp xchg add adc pop in stc push mov lock mov pop es inc stos adc mov cld fwait (bad) mov es jle jb sbb mov inc add xlat ljmp rolb adc in clc mov lahf pop lcall pop and clc push mov inc (bad) scas jp pop hlt mov jno int out add dec loopne add rcrl sub fist insb mov popa mov add inc xchg cmpsl pop mov das push lods or push or ret lahf sbb add out or das add jl,pn sbb pop notl gs push loopne push pop sbb mov push in jbe mov adc xchg fiaddl lock icebp push cli movsb add sbb enter push aad sbb pop sbb fcomps iret hlt cld cli imul xchg sbb sub mov mov jp lods pop mov sbb rorb push es loope pusha dec rclb xchg ja test mov int jbe fiadd test push pushf dec mov push push add and jge pusha pusha push xchg stc out movsb les mov lret pop out jl clc mov shrb outsb jg pop test lret into ret inc sub push inc push adc pop mov push xchg sub pop std inc outsl dec cmp sbb aad outsl xchg mov test lahf enter or outsb jb cmp pop push xor lcall inc ret jbe insl push loope mov bound adc icebp movsl outsl or out adc push adc (bad) call mov popf outsb call adc fwait sbb mov dec loopne (bad) adc adc sub push jp adc jmp jb pop jecxz dec xor and mov pop cmp mov in daa mov out pop aam cmp add push adc xchg push call push imul into adc incl jne add cmp int3 daa mov sbb inc mov inc cmp mov sarb cmc cmp js push sub push adc std xchg sub or ret jg in insb js jp lret mov pop out (bad) jg mov es (bad) sbb pop adc and loopne (bad) out rorb pop pusha pop dec leave sub fwait pcmpeqd mov fsubl sub and lds mov (bad) sbb ret and in addl pushf ja push add jge clc push push cli movsb sbb lds ja scas cmp lret jmp scas or lods add or jb enter rclb inc jmp dec mov loope es roll pusha std xchg cmc sbb insl (bad) (bad) gs in les push pop adc scas mov (bad) movsb imul mov fidivrl mov inc mov sti push or or fimul jae push lret pop (bad) pop lret mov xchg pop push mov push adc adc sahf lea xchg pop in dec adc pop int3 pop jne cli add push pop and push out rcll or (bad) ja lods cli adc jns out mov cmp js out or pop mov jbe lret rolb icebp and dec and adc mov dec cmpsb ret jge cmpsl pop (bad) cmc lds cmp mov jo js mov pushf shl and jb in pop test jns mov lods inc pop mov int (bad) cwtl (bad) popa mov lock push pushw pushl sbb ja (bad) cmc jp loopne (bad) mov pushf cmpsl and adc fwait xor gs leave in adc cwtl std cld cmp push or dec jns dec loope xchg pop dec inc xor bound shr push xchg sbb pop add sti inc cmp mov and ret scas cmc push call jns dec outsb in fcmovne and or ret into mov movsl (bad) cltd js sahf jo lea sbb hlt lds cmpsl adc inc in sarb js mov cmpsl sahf enter nop ret mov test push popa repz inc ljmp insb jge cmpsb sbb sbb clc mov or insl and ficompl loopne icebp mov xor add ljmp (bad) lods popa pop cmpsl (bad) cmc addb pop outsb sarb xor jl sti pop xor ljmp jge into xchg test jp push (bad) (bad) xlat les ljmp jecxz adc push pop cs inc inc mov pop test sub int3 jno xchg ljmp test fnstcw jl push sbb mov xor icebp mov sub out add sarl idiv and cmpsl lods inc mov adc lea inc cwtl (bad) add mov mov mov jle dec fstps test out mov les call sbb ret (bad) add mov cmp lock (bad) call lock std (bad) fstp pop outsl roll (bad) imul dec and xlat adc push loope adc sar pop lcall into lahf out mov jmp mov mov mov push pop insl ret dec es (bad) aaa inc out inc insl sbb lea add push push paddd shrl fadds xor aaa inc pushl cmc fistp or lods mov std daa sahf jge dec or insl sbb (bad) lcall in dec jns stos sarb inc insb mov lock test mov jp and (bad) dec pop xor (bad) mov lahf cmc ds cld out cs rorb mov lock les pop jbe xchg jl test out test mov jg cs sbb inc adc pop mov sub or pop imull rorb jmp pop dec cli ret movsb scas es lcall or aam inc loopne mov test push sbb into call mov push and js mov inc lods daa jo sub (bad) ja jmp add das push (bad) lock clc add xchg movsb aam adc push jp adc fidivr sbb xor dec xchg mov rorb or adc lahf shrb repnz push jmp (bad) mov ds sbb ja pop mov xlat paddd push cli dec mov push push addr16 jbe inc popa push xchg and push sbb mov jbe (bad) xor mov ljmp gs outsb cmpsl mov xor addb ljmp das inc xor add test jns cmpsb xor mov test jg,pn sahf repnz lock loope shlb cmp stos fwait inc push rclb jbe outsl inc imul test jns sub loopne,pt pop adcb lock mov add sub adcl jb inc cmp std jg dec scas ljmp daa sar dec xchg mov push cld inc (bad) sbb or daa fidivr push and push inc les testl clc push insl int3 mov push mov mov jecxz push mov jecxz cmp push lea pop lods out ret (bad) adc mov xor dec outsb jp inc adc clc cmpsl mov les xchg loopne dec cli pop or test idiv add add cs inc dec jmp lret dec insl dec pop push iret jle ret aad lds cli pop scas orb sbb xor cmp add imul jg mov ret pop mov add mov xchg lcall mov inc cmpsb out in pushf xchg inc sub jp add je cmpsb sti popf scas xchg or or adc ret mov lods daa jecxz lret push jge add mov push xchg hlt pop lea cld mov addr16 xchg mov xor and shlb enter mov mov (bad) loopne jb jg add adc (bad) fnsave aaa les int3 sbb sbb or push loop xor mov jnp jg push mov add cltd mov sarl and (bad) sub mov popf xchg divl sbb sti icebp adc mov aad les (bad) lret dec mov jo jbe jge cld push sbb popf mov repnz outsl cs icebp pop or push sbb idivb add cld pop loope adc fist cmpl sbb push std insl lret xchg jbe popf sbb loop test into xor stos ss xor stos jo jg in adc call mov mov fstps into (bad) cmp sahf clc jg icebp dec inc adc popa pusha lret fadds pop xchg inc std call cmp jge fidivr jmp push mov out movsb or inc jb divb mov xchg push (bad) mov ficompl (bad) js loopne scas out or scas pop sub (bad) jge movsb lret and adc sbb (bad) ljmp add cmpsl sub mov sbb jmp cmc (bad) incl lods stc pop fcmovne push push jge sub mov imul (bad) in lods (bad) rorb stos hlt jns push and lcall mov xchg xor daa mov shrl dec or mov outsb cltd cmp in jle jnp mov xchg sti shrb mov es fiadd adc ret cmpsl js stos mov jg iret lahf (bad) xor jg cmpl push popa push sbb sti sbb cld or addl inc test loop stos (bad) sub jg add or stc lods insb add sti sahf mov clc dec lcall add push xor or push sbb lahf je dec hlt jg call cli (bad) bound incb push or mov mov loop sbbl (bad) xchg xchg mov pop in cli jp adc mov pop or pop sbb (bad) cld hlt adcl mov out mov and add fadd cli in inc push ret xor sbb and dec sarl push sarb or xor ret cmp das mov jb popa sub inc out or mov mov lock xor mov shrb gs pusha push xor mov pop push std xor mov movsb dec mov lds and gs xchg fwait mov xor fbstp xchg aad lret shrb add in lret jecxz clc inc mov test xchg fwait repnz outsl xor iret arpl add pop jle and repnz inc loopne push fdivrp fcomps stc adc or xchg lock pop cmpsl xor xor pop sti jl hlt cmpsl popa mov test cli incl mov sbb push pusha push ret ret xor pop mov push bound mov lcall arpl sub xor mov xor shll push inc push (bad) int3 jg or std add std stos or mov fcom popa cmp hlt cs insb or in xchg loopne pop fidivrl dec jnp rolb mov and repnz dec push (bad) adc push test shl xlat or (bad) test or dec adc sub dec lea nop sub or or (bad) fidivrl adc fsubs fwait push adc mov test add xlat adc scas addr16 out cmp incl int3 push push sarl movsb pop pop jecxz pop data16 inc and into ret std (bad) xor jecxz (bad) mov (bad) daa fldt add rorb mov in inc imulb ljmp xchg hlt call loopne fild lret pop inc sbb and mov mov jg rclb in aas pusha mov inc mov dec mov sbb xchg jecxz divb popa push sbb mov (bad) sub pusha scas movsb xchg inc insb outsb mov pop push or incl mov shll bound inc (bad) (bad) mov test jp fldl (bad) (bad) lods out dec add addr16 out lret bound iret jmp pop in dec push bound test dec clc mov call jo (bad) (bad) lcall pop sarl in mov cs adc and xchg lret jnp in mov sahf ja stos jg sub add and ss loop iret push pop pop jnp mov lds loop pop sbb or fbld inc pop movsl xchg cs xchg cmpl fcmovnu add (bad) ficoml mov push pop cmpsl push shl mov (bad) fisub (bad) jb (bad) mov pop dec inc mov ljmp stc popa cld jl sub nop pop sub insl icebp pop add rcr sub pushf dec inc mov add data16 shrl xchg dec decl std cli pusha mov dec es push movsb lea lea icebp or (bad) mov add pop aaa pop xchg sbb mov mov popf sub in push or xchg push pop hlt fisttp les out outsb mov negl iret (bad) call lods mov fstpt xchg xor pop push pop dec cmp inc (bad) (bad) dec bound imul daa add clc ret js (bad) loopne mov jb xchg xchg push adc rorl mov ja sub (bad) push imul lock ja loopne inc test std outsl dec cmpsb lock jae dec cmp mov pop out jne mov adc mov xor stc lock fwait or add mov mov sbb jmp clc jne (bad) mov scas loope cltd insb pop jmp loop loopne sbb ror sub fsubp add (bad) decl mov pop cmpsl insb in out neg xlat xor mov dec or outsl rorl add jo pop sub push xchg addr16 in mov jo into inc mov enter mov dec adcb or lcall dec and add jge mov push icebp xorl xchg insl push (bad) loope mov inc add or stos jg jg aaa xor sahf add jp sbb (bad) outsl pop jle lods sarb ret add dec lcall lret cltd pop sahf push inc or mov fnsave fdivrl mov mov clc sbb fwait insb (bad) scas out rcll and jge icebp push aad and sbb test (bad) pusha cmpsl xchg stos loopne lds cmp fs out lea cmc rcrb test pop and cmpsl (bad) push mov or jp and pusha and lods rclb jno ss jno sbb push mov out pop push popf cmp sti lcall sub cli test fmuls jle dec mov mov roll mov cmc cmc pop sti inc cmpsb out loop cmpsl xor sbb in xchg lcall fucomi ja adc cli mov loope push ss mov sub mov daa icebp shll cltd in add pop mov stos mov mov mov (bad) or faddl out pop cmc push stos fadd pop add inc xchg xchg cmpsb insl adc mov cli loop adc dec push pop ret inc popf push add mov or push jmp xor adc aad or pop sbb cmp sbb test js aas loope cli test add (bad) fidivl cmp sub clc xlat and mov notl mov test cld fcomip (bad) outsb (bad) pop (bad) xor int3 pop add fs movb or push dec sbb jmp push hlt cwtl loopne pop scas lods cmc daa xchg cmc or mov jns movsl cmc dec stos push gs sbb loope ret inc jns int3 insb mov pop mov fbstp pop sub lods out lea hlt xchg and adc data16 shl mov push mov xchg in jmp push sbb call inc and stc aam hlt lret out inc sub add test mov cmpb fild pop data16 test andb mov inc aas or sarb inc or test inc loopne loopne aas aam ds test test lea add mov sbb mov xchg (bad) mov mov test mov sbb push es test sti dec cld sbb add pop std lret and fwait dec sbb pop add xor pop cmp xchg fnstsw mov pop ljmp rorb rcrl add xor stc insb pop sbb in adc pushf lea and jns push xor test addl dec out ljmp jl inc push jb ljmp das js xchg sbb push cwtl adc xor int lods mov mov ja cld push add mov loopne imul ja inc repz lods inc inc jae shr sub (bad) addr16 pop inc lret je jl adc jp mov cld shlb mov (bad) mov test fistp xor ret mov pop gs ss int pop data16 cmpsl xchg les dec push cmp ret push aaa mov (bad) xor jns or or mov cmp mov ljmp cmpsl repnz push mov mov sbb adc xchg enter xor dec outsl sub inc push push jge mov std call mov xchg add xchg imul mov push mov mov push lcall mov ret add scas adc in clc lcall dec sbb sub push or and cmp mov loop mov and dec les ljmp pop dec (bad) cmp jg xchg or mov movsl loopne pusha stos jg push icebp push cmp jmp loopne pop inc push mov loopne enter cmp cmpsb xchg or mov mov das incl adc fisubl mov or out push cmp or fwait jmp dec add sub adc lret pop jle mov clc pop in test cmp push push lcall cmp mov test xor or and inc jno ret idiv test rol mov pop mov cmpsb mov pinsrw scas sarb cmp (bad) addr16 xchg pop xchg daa inc lods les lock mov lods and cld (bad) push inc andl pop (bad) aaa lahf pop cmp lods lcall lret inc mov sub mov dec xchg pushf mov jg sub mov xchg push xchg testl cmp fcomip sahf push pop jo inc out mov fs push sub and xchg mov mov mov (bad) xor sub int3 mov lods sbb aaa jae adc setnp push and iret clc int3 pop fsubrs xor jl les or cmp push mov shrl pushf cmp repz mov das and jmp dec cltd stc orl outsb jl push push js imul loopne test add rcrb decl add dec add adc jnp inc cld stc push pop mov (bad) js icebp or das pusha clc jle scas ret test hlt icebp mov push fcomp add test dec xchg in mov icebp stos and rep faddp lods mov cmc push bound leave fist jbe jno aad inc ret fs lret dec mov pushf and mov js push cmp loopne mov (bad) clc rcrl add sarb add mov mov or inc idivb stos lret mov sub lret mov stos inc xchg inc and inc shlb pop ret or aas ror add test sub movl (bad) lcall jp mov sub nop test fdivs lods fdivrl insl or pop scas sbb adc adc mov incb lcall decl push pop or shr fs cmpsb add shrb js data16 bound cmp add std inc lods movsb mov dec out cli vmaxpd xchg loopne or sbb pop insl (bad) out scas movsl cwtl push shrb push pop xor sub sbb divl mov and jl push fs jp out lds stos and aad add lcall mov and mov pop xor jbe and pop ret leave pop cmpsl jg hlt push cmpsb cmp ret mov xchg test (bad) (bad) push fwait add mov es imul bound scas mov call inc imul and mov push ss stos jp in mov or fldt (bad) mov push mov jg mov movsb mov sbb fsubrs mov jne mov cmpsl cltd cmc xchg fsub pushf dec (bad) and mov movhps loope outsl cmp push (bad) jp mov xchg fnsave bound add sbb fild fidiv imul ficom pop pop adc sub lahf jb add decl and mov ds aad scas movsb or scas push test pop jmp ret adc test dec and inc cli (bad) mov inc xor and lahf pop cltd mov jg jl sti fs sahf daa clc bound inc les mov sbb lock push pop sbb insl pop loop ret loope (bad) clc pop call mov clc (bad) fildll test pushf xor mov popa out dec mov cmp fs das cli sbb xor and fdivr lea push (bad) mov inc (bad) shr faddl rorb and jns ja ds cld decl add mov cmp test mov push or clc xchg or in push test dec mov lcall addr16 pop lds mov mov jb hlt rorl xchg cmc std xor or and dec loope xor popl jae jg inc std xchg mov and jge cltd scas (bad) (bad) or negb xchg mov rcrb mov add out test fistpll imul sbb aad repnz push dec xor push xor or cmpsb and or and sub push out pop lock clc test cmp arpl fs sub lea insl negb pop add ret rcrb leave fsubr mov push sbb shr clc outsb push add lods aad pop cmp in enter pop ret out repnz pop pop sarl lds xor movsb daa mov call nop and mov and aaa push mov call mov jbe add or sahf jnp push mov bnd rcll add jno cmp ljmp push mov mov sbb and inc mov mov popa mov faddl lret pop jb ja pop adc std inc add hlt popf fsubrl push into dec mov push jg sbb pop in dec push aad mov test cmpsb adc loop mov pop cli sti gs inc rorb fidivl std cmpsb mov stc cld call out xorl notl mov sbb lds sbb cmpsl lret in lock scas fsubs ds or cli or push mov fdivrl pop sbb (bad) push or scas sbbl or mov stos push idiv ret stos mov xor mov cmp sub stc aas js push imul pcmpeqd xor ds stos push cmp movsb mov mov sbb dec or xchg cmp pop ljmp cmpsl mov push insb pop (bad) dec sti in (bad) in fdivs sub loop (bad) test sbb sub xchg pop jge sub ja dec aas sarl mov ffree sbb loopne ret add popf (bad) sbb clc xchg jns xchg and mov push loop icebp sub pusha scas adc lea jecxz cmp push xchg loope and stos test push (bad) ljmp stos cmp loopne mov or das xchg xor xchg mov (bad) lock cmpsl adc dec loopne fxtract (bad) jns add cmp nop (bad) aas movsb leave inc stos jg and adc rorb mov loop push iret loope clc shrl dec xchg mov inc jb push in push ja push or lock enter sbb lcall mov jne movsl nop sub cli xchg leave jl pop scas andb cmc js sub or ja lcall push mov je inc je es testl push sbbb enter idiv insl je out lret mov (bad) mov push push cmp add and pop imul sahf pusha lods cwtl (bad) mov hlt cmp ror imul dec ljmp inc cltd (bad) clc insl push pop inc ficomp jmp mov ja xor fcomip inc into scas mov ss inc addr16 aas add inc cmp movsl ret ret mov imul pop mov pop pop cmp xchg test jecxz mov repz jns sti cmc pop loop lods xchg add pop sbb das (bad) add jecxz or lcall test in inc push rcrl sbbl pop fnsave pop clc mov mov stos or jo xchg loope lock clc push xor pop sarb push sbb cwtl or sub loopne pop loopne push mov jne iret cltd pop data16 mov stc and ss and shrl cmp jg sub fimull into lcall test xlat inc adc xlat sbb mov (bad) mov clc dec cli sbb or in insl add xor fiadd pushf test mov jecxz orl leave loopne sbb sbb nop mov adc mov rorb fbstp jmp repz or test sbb push inc adc cld inc (bad) clc test add push or xchg xchg mov sahf les mov daa inc xor rorb bound fsts adc mov push jl add pop push pop iret std push pop (bad) mov cld paddusb call call out decb test not sub pop mov ja pop bound mov int3 adc sub mov pop jne pop imul pop push test push stos insl push mov adc adc adc or and adc jge scas sarb ret int xchg movsb out mov std (bad) mov ret mov adc dec test add sub lock jns adc cmp call push std sub mov (bad) mov cmc cli lcall aaa jge rcrl mov mov rclb call xchg jns jl (bad) aas mov xor adc fild sub icebp mov sub out xchg push cmpsl insb hlt nop and cmp les ss lds push inc arpl dec fiaddl sbb ja add sub xchg cli mov inc lds mov cmp decb inc int jp xchg pop adc jns jmp adc and mov insl xchg mov adc dec jl lret lds scas push std cmp or lret daa out sbb dec rclb cmpsb subl sarl scas popa test pop jmp fldenv adc mov sub dec dec inc mov pop jl cmp add ds push loopne ret push push xorb hlt mov aam xlat loopne out sbb mov sbb pushf mov xchg les clc (bad) out xor sub xor add sbb subl cwtl pop out test mov mov out jg inc mov paddd test mov mov or sbb ret mov pop dec in repz and mov xor inc pop xchg mov cld incb lock in repz cmp mov sub sub popf and add jae dec test in js aas pop pop aam out cmpsl xor add jecxz imul jmp test hlt inc jbe sub inc add (bad) aaa and mov mov jb pusha pop fidivr and cli loope ret mov mov push (bad) rorb jge xchg addb or push (bad) jle daa outsb sbb pop roll xor xor adc in cmpsb xchg push outsl fidivr pop loope vmwrite jb insl std loopne mov pop pop pusha (bad) jl jne movsb outsl sub (bad) mov sbb push pop mov mov js pop mov cwtl cmp add sahf dec (bad) mov (bad) dec js xchg and fsts dec pop jmp pop fild mov cmpsl xor sub sar jg jp outsl push dec mov xchg jge bnd rorl insb adc inc (bad) sub xor stc int3 push outsl insl leave incl sti or lock jb and icebp jp scas loopne clc sub dec testb adc push inc (bad) (bad) mov and xor out and push inc ja (bad) jl orb push sbb adc (bad) pop js (bad) jmp xor aad inc add sub nop mov push sub ljmp xchg or in inc jmp rcrl clc dec inc adc xor pop inc call gs push daa (bad) xchg pusha and cli popf adc adc sbb ljmp add inc push or mov fcoms in (bad) std dec negl pusha adc aad pop int ja jmp lock icebp test js and xchg repz fsts lock negl and pop repnz lret out add loopne out loop dec xchg repz cli outsl jl cld ja sahf push jno or (bad) push or jp xchg lret std adc add xor sub dec cmp (bad) sbb pop stos loope lret lcall pop leave push push stc lret jge icebp mov and mov dec mov ljmp push hlt pop setnp lret rolb das inc dec das push lock scas (bad) xchg test (bad) scas inc ss imul dec (bad) add jnp inc add dec aaa mov cmp pop fmull pop out cwtl mov lcall icebp jbe das aam daa dec mov sbbl cli lahf loop (bad) push and imull add jns (bad) sti add mov rorb xchg fcoms xchg push and push adc pop jl in incb std mov mov pop negl (bad) lock fptan cmp fcomi clc mov daa xchg add push jns jecxz mov scas test adc out mov push and jb sahf pop mov xor out and and cltd rclb add jbe add xor jl sbbb sbb rolb mov out xor decl jl add jge jae (bad) ret inc mov sub pop mov sbb out mov movsl loopne or add test xlat pusha clc lock f2xm1 sbb hlt (bad) jns mov push cltd icebp sti repz cmc push mov cmc ds jbe or jecxz js cmp push add sbb aad mov test test into clc lcall xchg push into sbb sbb jp int divb pop lcall mov mov insl repnz jne jle xchg popa test (bad) dec lods mov fdiv in aam ds xor fldcw in push add cld and aas xor inc loop sub dec in pop pop aas mov inc call pop dec arpl adc sbb inc sahf std imul enter test xchg shrb inc or and popf scas lret mov loope inc cmp scas xchg lcall cwtl lret and jg mov out cmc cmp xchg popa ret inc jp jo lcall imul xorl sub and fcomps loope pop (bad) cmc pop aam fidivl loope clc inc rolb stos (bad) fiaddl aam loopne adc cli fwait or sbb in or pop rclb dec pop inc adc cmp mov lcall inc js pusha mov mov xchg loopne ret std cld sbb or adc adc fnstsw loope mov shll mov rcl clc sbb fdivl jne jmp vpsubusb mov jnp push dec mov xor push jl mov clc das sbb scas out sub enter dec or adc lock cld lods add (bad) imul ret pop adc dec jo xor dec mov ret or xchg hlt sar lock cld cli fs cmpb sbb push xor mov mov adc (bad) test fs inc adc out xchg push lock popf out and dec sbb pop subb sub icebp mov iretw jle (bad) xor mov cli mov and lock add mov cmp roll lret cwtl mov ljmp rclb adc clc inc jae (bad) into xchg fdivrs push add mov or stos les and xor shlb xchg je and das rorl pop push push adc inc mov push sub testb adc push xchg mov insl push mov jb loopne xor mov xor cli push lret stos pop comiss stos call pop mov xor subl and icebp outsb lods fs (bad) adc fisttpl outsb push cs scas inc ret push lea dec push inc jno pop inc repz shlb jp cmp adc fist xor loopne pushf pop scas sbb fiaddl cmp dec (bad) xor inc add mov pop sub push lret jno mov xchg adc je mov shlb xchg hlt daa bound sub daa (bad) bts push jp loope gs push cmpsb ret mov rorb repnz imul fidiv xor adc ja mov data16 pop sahf dec mov mov mov cltd xor or test gs cmpb push and mov pop iret inc mov ss call loopne adc imul cli push jl lret mov clc mov mull clc push push les push jl stos stc push clc icebp push mov dec pop (bad) hlt and mov push scas pop dec (bad) stos lods cmpsl pushf mov jle inc cltd xchg xchg push adc add js test mov call sbb inc xchg fisubl in scas jb das test mov test jp mov push divl mov sub outsl push imull mov out out sahf (bad) push or xor jl pop sbb loopne push jno lret inc frstor or cmp jo psrld inc adc lea mov stos pop stc jo mov int inc lcall test fidivrl jmp xorl pop pop mov sub (bad) fild fmull fidivrl loop test popa pop jge or test lock loope jo xchg mov cld push rorl mov mov js mov mov dec clc pop inc fisubl jg je inc popf fcoms in insl dec inc stos cli xchg xchg pop aam or inc mov aas or ljmp inc pop pop icebp push xchg cmp xchg fs lock int3 pop loope sub cmp jl pusha push into xor jecxz in jg jo aaa adc push xchg and pop mov ret and (bad) in es mov mov push or scas fs mov in cmpsl sub rep mov rolb mov cmp scas xor mov mov aam fidivrl out pop divb lahf (bad) rorl inc imull repnz adc mov fwait mov sub js aas inc js hlt jne rsm clc xchg or mov adc js incl cli scas insl in adc (bad) (bad) stos js scas jb pop movsb sbb sahf jp outsl mov mov outsl xchg (bad) mov push daa fs (bad) cmc xchg ja das ret mov pop scas mov jle (bad) clc incl xchg aad hlt mov enter push das xorl repz cmpsl loop cld insb sub cmpsl sbb outsb pop mov pop dec mov (bad) cmp (bad) jecxz clc dec push push imul aad adc push out or jo xor sub pop loop loopne pop inc aam loope,pn mov push rolb adc lcall lock inc jecxz mov mov mov mov out jg jae cli ljmp add repnz xchg pop dec mov push adc cmpsb cwtl movl into imul or mov sub in (bad) push sbb xlat or push mov loopne add (bad) ss test inc xchg or mov lock dec xor (bad) fnop lcall push cmc xlat ficoml sahf add lret lock inc xchg in (bad) out inc les (bad) sar jbe lods sbb sub lret lods dec or add sbb inc (bad) sub lret mov enter dec xor cld pop adc mov add add std imul inc xor call lods insl sub xlat repz shrb sub and sub in (bad) call ja mov cmpsb out dec jae pop inc push not pop sbb mov dec push sarl mov sub ja or jge mov adc inc add add xor cmp stos loope cld test or incl jle adc cltd add sarl data16 lods (bad) mov mov cmc xchg (bad) mov pop dec and loopne mov decl ret cld movsb mov sti push jnp push cmp or (bad) lahf popa xlat loope inc mov fwait pop and popf sub (bad) std ficom push fwait les aam bound adc lcall pop fdivrl aam jl sub push popf jne jmp jmp in cmp add push pop ljmp jae fbstp push addr16 jae pop sarb movsb pop mov pop or lock push mov or fidivl mov pop ja inc sub add lods push mov imul mov mov pusha decb clc inc clc inc add push mov pop push cltd push pop push out es sbb out sbb pop loopne adc xor cmc dec or pop adc shlb shlb mov leave mov sbb sbb cli inc cmp and mov pop or pop (bad) or xchg lock mov mov cld mov fwait in inc ss xor mov xorb mov push sub lods adc add inc and ret or dec cmp xlat mov pop nop push inc pop pop lds cmp sbb sub xor aad popf jnp je jno sbb or sarb push shrl inc pop les push mov lcall sbb xchg dec je inc mov inc jp xchg cli jp cmc repnz pop into popa insl jo data16 stc or ficoml insl mov cs lahf imul push movsb push push dec jl dec cld clc dec lods rclb cmp mov cmpsb push movsb cmp pop dec jecxz fadd push xchg cmpsb outsl push rorb dec loope adc mov jle,pt sahf and jl add into shlb jo push dec lret push push (bad) sub test mov test sub fwait push (bad) mov and xor (bad) iret add aaa cmpsb movsl sub adc icebp add dec or fldt (bad) into cmp dec pusha pop clc icebp push mov lods mov fbld popa cli sbb dec or fwait int mov mov sub sti sbbl dec ss (bad) sbb loope pop pop loopne adc daa or xlat aas es lock cli cli fistpl iret into sub fmul les add mov push cli dec ret cld out (bad) sbb or add stc and mov aam xor jmp mov fs cmp shlb loopne cs mov in cli ret jo imul pop push add fstpl ljmp jge cs cltd rol adc push fiadd (bad) insl into cwtl inc xor jle test cmp adc lock loopne and dec push cmp dec jns xchg out jge (bad) jmp insl inc sub xchg sbb pop loope adcb ss push cmp push stos cmpsl sbb and inc cli fidivr xchg jle dec push pushf inc cmpsl jecxz loopne xchg inc adc imulb enter sub inc fwait sub mov ficoml sub jne (bad) or add jl sub xchg (bad) mov sub and out bound int3 lods js xor clc cld test popa loopne (bad) cltd jp cli mov lret in sub push push adcb sbb jno sub or sub push add call mov shlb decl cwtl icebp lahf and in clc out sbb (bad) sbb nop pushf int3 mov int inc fisttp rorb xchg push jmp ds mov or pop gs cli rorl inc jno divb inc iret inc push outsb cmp xor aas fidivrl xchg xor dec adc adc pop dec mull dec mov and sub cltd ja sbb mov mov sarb xchg mov push jecxz push std cli icebp dec lds pop push stos int nop shrb jp jne jg sub mov adc sbb nop pop (bad) xchg mov push ja pop or push mov movsb cmp repnz push in push aam cld xchg fwait mov into gs ljmp cmpsl shl fbstp push cs add (bad) cmpsb inc sub jp lcall sbb ljmp sub fisttpl mov dec sti test jnp orl addr16 add dec js xchg push jg sbb mov mov mov mov adc imulb pop push cwtl sub push int mov decl mov xchg lret inc add into inc stos sbb fisttpll (bad) mov movsb addr16 cli pop (bad) xchg out add jae aas jg inc icebp andb dec dec inc mov rorb int3 sbb add and addl notl mov push ds adc out ds movsl jmp or call es cmp push loop icebp add sub cmp (bad) pop mov lahf sbb rclb push lds adc rcrb das push sbb lahf data16 fucom push mov adc imul mov jae push pop data16 xor sbb inc pop jmp movsl (bad) dec cmp les inc dec jb and insb inc cld cmp add adc outsl ljmp or (bad) xchg push and lret sbb clc xchg pop mov mov push jg icebp das pop out in das pinsrw dec movsl pop add sub stos aam incb pop jmp addl movsl jle ficoml inc add sub loop push daa cmc (bad) fidivl cmpsb mov test jl adc pop jmp add rcrl pop scas ljmp ret aaa std and rclb stos inc pop test add sub aam sbb les mov in (bad) or daa push (bad) hlt push sbb push jg pop sub movsb jne pop mov inc mov outsb ret aaa (bad) cmp lcall jl add add push popa call fildll out fiadd sub mov pop sahf mov nop inc jbe jno faddl sbb scas adc sbb adc mov adc nop mov or lds add jo cli inc out ja sar add cwtl movsb leave sti inc imul test dec cwtl and jbe int push sub jle rolb (bad) cld ja adc loopne sub xchg add jo mov fsub icebp push jmp or add inc push jne iret mov cmpsb and dec inc add ljmp int3 xlat jge cmpsl cmp rorb adc andl xor pop push aad sbb pop pop pusha cmp cli cmpsb loopew clc mov mov (bad) fs std push vandps adc sbb (bad) cwtl pop sarl or imul insb adcb jle mov ds mov je daa push dec jg mov pop sub pminsw mov cmpsb pushf mov adc push pop addr16 mov es test loop mov out jg push fimul mov ja (bad) push mov xchg out xchg pop in repnz or jg loopne push in lods sub bound mov pushl aad inc lret jp popf scas test cld imul pop fstps int arpl jge pop or adc xchg in test aas in sub out fiaddl mov sub inc cld xor xchg idivb data16 pop inc fcmovb cmpsl stc rorl mov psrlw loope xchg mov push adc jg push inc sub cwtl mov push xchg mov aas int mov pop inc es inc je lahf jp xchg out mov sbb fnop adc jle xor mov mov out push lret dec mov fidivl or add cmp xchg lret ds lahf mov fnstenv int mov daa dec or imul inc cli or test mov cld out fisubrl add dec mov int data16 cs outsb test in cmpsl xor call dec test mov mov ljmp stc imul mov mov add (bad) mov test ja rcr ficompl pop mov fisttp test sarl stos (bad) sbb stos imul fnstcw push lret mov mov insb or popa sub test mov cmp cmpsl fisttp fisub sbb mov in icebp jns jmp mov and ja test js call or aam cmovg mov scas pop xor fcmove dec mov mov mov hlt mov cld imul or (bad) in aad push adc test lcall mov out aam leave lods rcrl jno and sbb loopne inc sub ret cmp test stc xchg dec repz mov dec mov mov jle push and pop sbb ja mov test push sub insb fs sub ja adc fbstp repz and pop ja dec int lock jbe insb stos shll test in xchg xchg mov (bad) mov and xchg mov push test lahf (bad) rcrl movsl shr hlt insb test lcall subb bound push jg push mov sarb and test lods outsl out or jb adc mov ss mov test (bad) pop cli sar imul (bad) jp pop jg mov sub (bad) and stc sar xor ljmp fisubrl stos dec jae pop mov push lret repz pusha pop pop or or in jmp mov mov sub test fidivr pop fucomi ja mov push jbe push dec (bad) je out cmp mov paddsb push adc scas std inc dec adc enter and les aas shr push rolb aas int xchg (bad) fs fidivr int mov inc push arpl repz stos xchg lcall or push mov cld xor push inc test out dec loope mov bound loope test or mov fidivr cld mov sbb testb enter cmp lahf out jns xchg mov shll and roll stc imul mov push lea pop test pop pop sub dec repz and sub (bad) repnz push loopne ja mov pop je cmp repnz xchg ds dec (bad) test (bad) call jmp std cmp out pop ret ret cmp pushf out out ss xor dec repz mov test (bad) ficom mov (bad) lahf mov rclb mov dec repz push gs mov in and xchg pusha pop fsts fwait mov sub adc ret outsb (bad) xor pop dec mov shrl movsl movsb cmp mov repz stc (bad) push test arpl int3 pop mov imul fnsave idivb push rcr lret repz adc test add jp jb test jnp cmp jl or pop dec mov scas fdivrl outsl andl stos pop mov (bad) loop fbld in adc pop pop lcall aam ljmp cmp daa lock cld sbb cmp pushf ret mov dec mov jle dec lcall mov (bad) mov push add jnp insl ljmp push aas insl sbb push test in cmc fidivrl js lahf jno push or jae pop mov inc in call test adc pop pop loope repz in push repz jg mov pop or pop push fidivrl test scas loopne dec or ret adc insl sub dec jae loopne daa push cmp loope lahf out pop push pop mov sar push lods loope pop js fwait ja fnstenv sahf subps sahf popa push lcall fstpt lret lock xor jns push inc mov pop repz stc push pop jl call fisubrl dec lcall popa call inc in xor mov fidiv ja sti mov fcmovbe popa push cmpsl std imul lcall popf out repz cmp mov sbb and ljmp outsl and mov mov aas int outsb aas jae inc cli addl xor aaa cmp push insb mov pop and dec stc xor imul rorl or pop icebp imul dec mov add push mov fwait jbe loopne ja clc je xor movsb popf jne pop je sbb mov addr16 (bad) fdiv jbe sbb rorl mov cli jbe and push xchg fsubrs jmp movsb pop insb imul outsl sub loop (bad) ja sbbb and push push mov push mov and insb insb (bad) lock xchg inc insl insl (bad) mov push mov (bad) and cmc pop adc push (bad) mov sub push and jnp int xchg jecxz dec ja mov push dec jp imul mov scas xor push jg mov jnp add repz std imul test movsl xchg xor dec cmp adc into jp imul jge pop pop lea rolb mov test push cmp or aaa rcl cld imul dec test scas inc jo xlat stos push psrld clc lds sarl dec movlps iret inc cltd (bad) hlt mov or xor cmpsl std sbb mov push mov cli (bad) mov (bad) sarb loopne xchg push adc stc sar imul push jns mov cmpsl mov dec hlt mov mov clc push or sahf lcall popf test and push stos pop mov mov and (bad) jecxz push cs imul add fistp jns test jp iret clc push sbb das sub loop mov or cmp in jle loope sbb sbb pop mov mov add mov push hlt test (bad) dec mov push sbb xchg mov cmp jnp leave out fidivrl lahf out dec mov std call fstps xor fidivl sub adc popa sub add imul mov cli imul mov (bad) stc sarl sub loop int3 loopne ja gs cmpsl dec xchg fidivrl stos mov jbe mov xorl lahf mulb mov pop (bad) test mov cmpsl cmp cmp push test repz jge jb add lods and lock push aas pop call push cwtl mov inc adc add add dec icebp in xchg push mov movaps sub (bad) insb rolb dec add push ret jp ds rcll int insb cld imul and fisubrl scas lahf not or lret test jo lret jb out aaa enter test and ja push cmp sar jge pop dec mov std test repz jns push clc out mov lcall xchg das add and out sub lcall leave ljmp ds pop mov jo push dec push aaa mov sub shufps fiadd pop xor cmpsl xchg push inc sbb xor hlt cld jo pop sub fiaddl mov cmpsl out push in fiaddl fdivr sub push loopne ds daa dec inc repnz mov mov test orl sub ja out pusha and test pop lock mov ret push jecxz xchg xor outsl stos ja sbb es out inc (bad) mov push daa jb pop lock repz (bad) sar imul xor fimull xchg mov xchg jl in jle aam cld cltd leave adc add sbb divl dec imul mov lea adc daa cld mov mov xlat add inc lods (bad) mov out and out and pop push adc and sbb pop (bad) jnp sbb mov xor imul push push out inc or jno imul pusha jo in mov ret test xchg or xchg loopne (bad) (bad) jl push inc mov mov inc or cld stos (bad) xor loop fistp ljmp mov pop and push ja lcall sbb imul popa test xor xchg scas nop (bad) shl leave xchg daa xor jmp pop mov adc xchg jno jns xchg inc push clc mov stc out stos mov adcl out rclb sti sbb xchg outsb lret dec ss cmc mov push imul sti in xorl xchg cltd push mov outsb push aad sbb xor cmp jp mov movsl xchg add (bad) test sarb xchg ja into out pop test pushf cmp add push xchg js fsts dec sahf sub aad xchg cmc ja mov xchg mov outsb jl cwtl mov mov (bad) xchg daa jnp mov sti cmc push out lret mov test (bad) shrb int movl jno sbb rorl sub mov pop imul test scas pop cmp ror incl pop cs (bad) push loop mov cmp shl pop jg out dec imul xchg outsb jne mov bound (bad) mov ret ret int3 js pop addl popa inc dec lock jle aas sbb mov cmp push pop xchg in ss inc sub aaa out xchg push cmp push cwtl aaa push aad out and aam push stos in loope adc mov es clc clc mov inc (bad) ret lcall inc es push sbb push stc sar xor inc fwait bound cmp popf out add mov addr16 mov xor out mov test inc xchg adc out imul data16 test popf xor out daa scas inc pop inc hlt (bad) (bad) out push in xchg outsl lods cli push test inc push xchg mov outsl in xchg daa inc aam hlt fsubrp pop pop icebp in dec test (bad) mov mov mov inc out fs or outsl cmpsb test xor or sbb ss std imul stos and cmpsb stc sti (bad) mov les dec or sahf sbb jb into xor fist shlb xchg jmp out pusha adc lcall push dec pop pop dec call imul mov add subb test push (bad) out dec sti mov les ja sar mov stos fiaddl rclb rolb call jae mov cli leave loopne jo outsl pop fsts or dec jmp (bad) mov test mov mov xor dec dec cmpsl inc insb sub jl xor stc or jle jo inc mov pop mov aaa push imul mov cmp or notl fiaddl sub sahf data16 mov ja adc aam in out jge lahf and xchg iret inc bound push xlat fdivrp xor xchg sbb repnz adc xchg test jo ret pop ss ja jns cmpsl fincstp inc mov hlt repnz push pop repnz mov cmpsl test mov ror loope jg pop imul data16 insb sub (bad) xor jnp pop push mov scas (bad) testl fist mov subb cmp and pop popa pop inc push and fnstenv aad mov test xor loopne fbstp ja mov in mov outsl pop adc cmpsb cmp test out inc lret ret push stc xor push pop mov loopne pop xor pop dec repz jns sbb gs jg xchg neg or iret xchg out push sub and or ds xchg add ds shrl mov pop test clc sahf (bad) mov ficomp jecxz out test rcrb in jge lcall stc ja pop fsubrs iret rclb xor imul test out negb lahf out sbb xorl mov lahf jbe out rcrb movsl ret lcall mov xor ja or rcrb dec xchg cmp aad mov push fsts out repz divb jecxz scas in jge pop loope pop mov mov xchg cmp pop js mov cmp ss adc push and (bad) adc es pop push mov stos (bad) pop (bad) xor jg push mov mov orl insl cmp mov xchg add and (bad) jae pop sar adc push xor sahf repz push mov popf out sti mov int3 sub mov mov xor jmp mov cmp xchg sbb in imul mov jmp mov es cmp test mov icebp in or inc mov lahf mulb dec leave das stc mov jg aas int sub adc sbb lret out es ret ja fsubrp inc pop xchg dec insl int aas pushf mov push mov and xchg adc icebp dec imul lods and lret adc (bad) lcall addl stos loopne push outsl mov xchg xlat push outsl ja repnz inc je ret es call test iret add sub and push movsl inc scas jae lahf insb mov sub lcall pusha xor clc mov push repnz jnp (bad) not lods fidivrl gs jg sti push mov fwait jg mov mov jl lods into adc sub pop inc es xchg or lock shlb aaa dec xchg xor in sub mov adc push ja lods sarb push test pop lcall lea imul xchg int3 outsl hlt hlt das pop or iret xor aam bound mov push cltd stos adc addr16 fimull popa cwtl pop inc test out sbb adc lock clc fisttp lcall cld xor les cmpsl test push aad lock sub push jge pop or xchg ret aam mov add out or mov sbb into push adc mov pop test inc (bad) inc add jbe fs and mov and and pop and mov mov mov xchg mov mov adc into mov mov push (bad) fnop push ret loopne push mov inc push les jg jae mov addr16 cmp imul int pop push xchg mov inc add jbe pop mov ret repnz pop cmovo adcl decb add popa bnd cmpsl mov aam dec push or jecxz xchg pop jnp dec jo sahf test cwtl (bad) cli iret add mov xor inc daa cltd outsb add xor test ret jle dec bound mov push or je fwait lock mov inc or and or add loop mov sub add nop ret fimull pop add jo lahf enter insl or enter ds inc jno cmp ss xchg gs js sar jl lock aaa stos jnp xchg push scas mov add es mov mov and fldcw xchg xor xchg (bad) cmp sbb and int3 loopne mov cli lock stos loope loopne and lahf sbb sub sbb bound mov out xor push mov scas loopne cmp icebp addr16 sti jne xor in in xchg push adc addr16 cmp outsb lahf pop jg add (bad) xor popa flds dec add fs pop cmc movsb pop add jne daa pop jns fsub lahf into std ror imul cs sub cmc fidivr (bad) pop insl pop pop push xchg pop call pusha in dec sahf movsl mov sub mov bound enter and lds pop xor jle cli sub inc aad lahf ret pop cli test mov shlb mov sbb test dec pop (bad) cwtl in test mov push or (bad) fldenv push adc mov push pop nopl nop sbb addb jl jg jnp loope dec add jo add addl sbb repz xor jns pop jge incb cs das adc mov lods push test xchg rol and icebp popa (bad) fisubl push pop pop (bad) push xchg cmpsl test mov dec lahf std outsb cli int3 ljmp incb xor sarl mov xchg adcb adc sbb add mov mov or popf scas and xchg idivl jno add sub mov shlb pop mov cmp data16 clc mov dec incl insb jl mov adc xor lds jle (bad) lods cld ds clc xchg into dec sub lret scas mov std lock cmc mov stc cli push aaa mov sbb jnp jp outsb add lahf mov push lcall jl pusha sar pop test xchg xchg lods cmpsb cmpsl stos xor inc mov arpl es dec data16 jo (bad) or dec sub cmpsb sbb pushl jb (bad) adc xchg mov push sub adc scas add imul les mov popa mov push aaa outsl fsub sub xchg push push push sbb nop (bad) sbb or lods flds test add add cmp (bad) mov sbb mov jae xchg ljmp je pop xchg sub hlt ffree push push and dec pop push pop jne fs das jecxz,pn std inc and cli push (bad) add pop inc clc sbb mov std adc push adc pushf ret das mov jge add mov sub and std mov cmp and or and or pusha mov dec or push cs (bad) adcb adc (bad) incl sub popa push xchg test out das jmp in incl arpl dec adc fadd incl push adc mov pusha jg adc dec sub loop cmp push mov or add dec stos lods cmpsl adc lahf and mov ss xchg (bad) push and xor cld push xchg mov xor cmpsb ss add lods pop ret mov daa add push jo std dec add add adc fbld push xor cmpsl cmpl dec fcomps xor xchg stos (bad) aas inc das (bad) sub rorb pop inc sub ret int3 sbb mov adc adc dec ljmp lret jg lcall mov mov and test and pop and or mov add pop cmp add push clc ds stos aam sahf loop sbb es mov inc inc es add adc cmp jo cmpsb fistpll mov scas test mov movsl add test lods mov jl scas cmp out adc iret fwait push loop test sbb dec test mov loop out jecxz sbb movsl push inc jg inc lret jb and les add movsl fisttp fwait aaa scas sbb pop push int lock mov sbb sub out arpl pop (bad) lcall and add pop xlat xchg adc fistpl scas inc inc dec jle mov sbb push loop fwait pop sbb mov ljmp shlb sub sbb fidivr repz fsubl es les or fldl adc cmp aaa cmp sti add fisttpl fmull lret repnz xchg sub stos add ret pop sbb iret aaa jb fcmovu shlb imul (bad) loopne aaa dec jnp (bad) mov sub push dec div or push ds sbb ja jmp clc pop jmp jp cld sub fwait out ret subb push rorb shrl push lcall or mov out and lahf push fs (bad) jmp mov cs mov bound cmc push loop lods insb xchg push or mov iret add aaa fstps xchg clc and ret xor pushf pop pop sbb rcll jns mov sbb fsubrl pushf seto jb push lock (bad) dec cli cmp es insb leave mov mov add lock (bad) int adc rcll lock jp mov stos ss sbb gs jp sub inc cmp jg mov xchg push inc mov loope bound (bad) sub push xchg int3 pop shl or aaa xor cli sbb addr16 adc inc mov aad fcmove insb inc sbb test popa adc mov xor adc test mov adc ret cltd push push (bad) loopne mov mov mov cmpsb pop cltd outsl test adc dec xor fldenv aad pop dec inc lock js outsb adc mov aas test cmp xor jl sbb xchg cs ljmp (bad) rolb fcomp clc es lods and ja std inc cmp pushf inc stos cmp dec add xor (bad) test rol mov fmuls inc xor add lcall ljmp lds enter (bad) sub cs (bad) sar sbb in addr16 or out push bound or adc dec push roll js ret loop addr16 mov dec hlt inc mov cmc (bad) or dec add aas add or (bad) dec dec cmpsb fisttp mov int xchg cmpsl dec imul sbbl xor sbb iret mov or in daa jle or dec lods inc dec sti nop bound cs mov clc hlt ret pusha out rcrb pusha or repz fnstcw push pop sub insl mov scas sbb and repz hlt add lock pop rcr fildll stos negl sub sbb mov ds dec les je cmp or inc and xchg jae (bad) mov clc jg ret jp jl insl pop (bad) jae jmp pop xchg adc jle push imul lcall mov and popf repnz clc sbb sbb xchg mov mov ds aas std (bad) inc inc int push cmp inc push rolb je enter xchg inc stc gs fcmovb jne cmc inc push dec iret test dec adc dec inc arpl jg xchg push (bad) outsl aas add shrl mov cmp xchg mov test dec add out shrb ja js add or jno sub xor test push cmpl or cli je insl jnp loop push in std dec ffreep mov pop push fisttp out (bad) mov (bad) out es xor adc test aad pop (bad) jb imul jge mov (bad) cmp jecxz sarb das push movl data16 add insl mov outsb sbb mov adc xchg ja outsb idiv (bad) outsl sub and xchg outsl and lret jne sub push dec insb repz mov call sub loopne clc inc mov imul lcall ds stc rorb push fadds push pushw push ss int stos sub mov pop fldl sub push jg adc mov lcall jbe test pop ret and mov idivb lds push mov and add and les outsl jb or clc lea stos jne stos sbb jle or shrl test add sti inc jae data16 icebp sahf add jg lods shrb xchg cmpsb (bad) push mov sub out cli sbb push loopne or push enter push loopne inc sbb outsl cmp inc jmp out xor loope les inc hlt sub mov cmp pop clc xor insl insb je imul add push std jp xchg jp mov ret popf push std inc ret jo cmpsl or and loope arpl fstps jb cli push add cwtl mul dec inc ret xchg (bad) roll into pop push call add push mov popl arpl jl mov ja (bad) xchg inc repz sbb ja xor outsl sahf imul sarb xor (bad) fsubrl dec jae das sub cmp (bad) call std push icebp xor imulb dec dec into data16 je int pusha dec mov mov push dec fwait dec jno mov int3 addr16 pop test cwtl cld push jl nop fldcw orb call dec aam mov mov sti mov clc movsb clc popf repnz rclb or xor hlt push and pop inc inc loopne xchg cld ja add mov (bad) add sub adc or call loope pop push jmp cmp (bad) les shrl sbb out hlt ficom dec xchg add out mov dec call cli cmp push shr movl ret mov add pop sbb pop vmaxps je or cwtl enter sti or mov aas inc xchg imul jnp mov (bad) mov or mov or test mov mov ja sbb and xchg add cwtl iret ss mov pop or or pop clc insl fnop xchg push jp mov xchg xor inc lahf call orb inc (bad) ja sbb dec and bound call repz ljmp stos addr16 adc add push dec sbb adc adc rclb insl lcall jg cwtl stos inc lods cmpsl les enter and xchg lods push jmp aas ja cli rcr leave mov lods ss jbe call cs popf push imul das out dec add neg inc int scas rorb sub push rcrl jae test icebp cwtl test push jle rclb (bad) jg inc xor pop fstpl xchg or jl or add mov fidivr pop mov jp pop jp sub dec push push hlt das dec lahf add hlt inc lock outsb sahf incb int3 lcall add js test mov mov repz cmp movsb push movsl rolb push mov dec push leave divb (bad) dec hlt and enter lret mov push fcomps push push je jecxz inc add xor adc sahf mov cmc js mov enter clc hlt dec adc mov clc mov push mov push fisttp rorb addr16 pop ss (bad) xlat mov clc push dec scas iret jmp cltd mull aaa push (bad) iret xchg push or imul push enter das test repnz dec push test (bad) mov adc loopne push cmp pushl aas dec cmp repnz dec inc pop enter mov repnz idivl adc rcrb outsl insl addr16 pop fsubp call sub mov repnz jbe fs nop xchg pop dec jg iret inc push inc jb mul inc shrb inc adc or jae mov clc (bad) (bad) xchg jbe icebp out (bad) push aaa xchg into clc bsr pop test cli mov loopne or ja pop cmc push sub popa inc stos xor or imul int shll xor xchg rolb xchg mov imul lock js sbb push xchg mov cmp rcrl sahf inc mov ljmp enter pusha (bad) jbe mov jns cmp dec sbb dec (bad) ds push pop jae inc mov xor js xor (bad) lret push js adc xchg sbb lds dec data16 dec das inc push push jmp into idivb pop jp jecxz dec fs ja mov in and faddl stos mov enter xchg notl xchg mov and jno pop popa (bad) outsb call pop lds pop aam scas xlat jns rolb xchg sub dec jmp push stos cmp jns scas sarb movsb cmp inc hlt lods sub pop mov mov test roll and xor outsb imul test decl shrb jle cltd leave add mov mov add fsubrl lea ja loope pop nop in les push push pop ret js inc pop hlt sub sbb scas and shll cwtl jbe adc push in lret pop mov add or cmpsb out or loope or inc push and scas sub mov aad int or sub (bad) cmp sub dec cmp cmc ret inc fs sub out add or pusha pop cmc mov lcall jg cs sbb cmp outsb rcr aad loope ret rolb hlt or sarl fstpl xchg push insb (bad) cwtl dec repz fcmovnu push addr16 sbb in jbe out adc insb sahf dec into cmp inc pop add push mov rclb cmpsb sti xchg mov xlat test lods mov cmpl sbb pop xchg or pop dec (bad) cmp and decl ret or push push test enter mov fcoms push add les jnp out out dec imul jl xor dec lcall aad cmp push shl popa dec adc (bad) jge jae aad loopne fidivrl je test fdivp ljmp fs call test add mov pop inc test lcall pop or jg jbe shrd push cmpb jnp test inc adc incl lods add jae or sbbl push jo inc int3 ja jae divb adc ret mov pop cmp jnp lcall push mov and outsb aam adc clc mov push mov movsb fisub roll sub (bad) pop add pop xor lret or pop insb jge scas mov fldcw scas std sub inc mov cmp push inc jmp scas inc nopl xor dec ret xor sti mov into jb adc mull add ss push sbb cmpsb mov (bad) sti jecxz dec lret fiadd lcall xchg xor mov push ja out xorb cmpsb mov (bad) mov xor sub jecxz xchg mov rolb push mov lea push push adc xor add stc fcoms xor mov sbb aaa ja xchg push ss lret lcall mov jns mov mov fadd jp inc loope mov rcr adc add je sub ja adc sub sti adc jl push insl mov popf jb adc push mov fs shr (bad) test sub or push dec sub (bad) mov jg loop dec ja stos iret pusha push pop adc loop out inc stos lods mov (bad) jg mov xlat cmpsb mov cmpl mov sub dec in jle mov mov sub pushl dec add ret out pop jnp pop inc (bad) aas les movsb popf out or pop jmp lods dec fstps or ret sub (bad) iret cs outsl or cmpsl (bad) sarl lods mov pop sub mov xchg mov (bad) and cmpsl xchg mov pop jo je iret in cwtl call dec test push clc push stc testl les cmp js mov dec jge sub orl and xchg fsubl jl push push xor icebp and and mov movsl cs push dec cmpsl aad dec arpl lock push push push inc sub jae (bad) add xchg push sub sub aad das xor cmp ret dec pop sub test and std and inc (bad) std cmpsl inc push mov cmc pop jne movsl dec outsb and iret (bad) ljmp es incl int pop imul xchg xor sub add mov imul test in lods cmp fs jecxz int3 mov test das ljmp add inc sub movsl push test inc leave xor incb stc out cltd setp jge xchg inc cmpsl loopne add mov dec aam nop fldenv inc cltd add std rorb and sbb pop test insl jle (bad) fldt jbe xchg push loopne mov jb addr16 jno sub aad sub mov push (bad) jae int add into ds sub hlt cmp jecxz ret in pmullw sub sub inc pop loope enter pop inc (bad) xor push jg sti testb scas loop je out dec add inc push sbb int add pop add (bad) jbe popf js imul fwait push and cmp jg jle cmp int dec push sub int3 and push test loop inc inc jo test mov jl addr16 lock test inc pop dec loop lds and pop stc lock fs test (bad) test sahf push out iret add mov jp es sahf cmovl mov push out jp test jo call les cmc push mov adc dec xlat clc ret inc pop ret in inc jno cli movsl pushf sarb jb inc sbb inc or push jle jns push (bad) ja dec cmp sbb fidivl pop ljmp pop into jae jle clc pop mov xchg jl pop loope nop bnd enter (bad) lcall mov xlat push sbb repz das xchg out into iret std test pop stos ja js mov lcall pop and push push cmc mov push pushf adc jle inc rcrb clc mov loopne inc fst (bad) (bad) cmpsl sub dec inc xchg jp adc test stos sahf push sub jmp scas (bad) repnz ret fiadd xchg mov cwtl cmpsl (bad) dec (bad) mov push or int xor xchg enter sub sbb adc repz popa rolb test add iret daa outsb es xchg mov inc or paddusb mov cmpsl clc mov (bad) into ja jge rol pop test sub clc dec mov cmp cmp nop mov mov (bad) loope (bad) or pop addr16 pop dec rcr (bad) sarl test scas mov lcall into jg xchg daa stos ss lret lret mov cltd push xchg in sbb mov fwait pop ss pop lahf push (bad) cmp xor scas in sbb fbstp sbb and xchg push sar cld (bad) fst clc mov fsubrl lods enter xchg sbb in rorl jecxz faddl outsb sbb and adc ljmp hlt (bad) pop xor sbb mov cvtpi2ps nop push daa jl testb inc loopne push out in or push movb movsl mov jbe mov jle movsb inc mov pop xor popf xchg add sbb pop and popf movzbl xchg xchg popf xchg jl push cmc or pushf lea into (bad) out sbb sbb add mov pop sbb movl ljmp cmp mov (bad) xor insb jp xor enter cmc repz ds out mov sub test loope mov ret inc (bad) sbb (bad) mov add inc mov add aam jle mov adc outsl ja sub inc clc ds mov dec cmpsl pop dec mov fwait pop inc loope push add mov aad rorb and mov xchg or and jp pop inc popf ja flds cmp push cwtl cmp xchg pop mov mov mov add cmpsl mov iret dec xor (bad) and enter outsl loop insl enter xchg mov jecxz (bad) dec inc push pusha sub arpl inc call inc shl sarb icebp pop out inc js clc imul sub lret inc lcall sbb hlt cld mov push into or pop jae (bad) mov (bad) cmpsb add daa sub mov lods xor js loop pop lcall adc xchg ret push xor mov mov add jg adc jge loop lea (bad) addl aam inc das and add jp lret iret mov mov lret call xchg aaa cmpsl pop jbe js sbb cli jl jl lret lret pop ffree sarl ror enter mov push jo jo jle pusha mov idiv or push mov and inc push and cs shr subb sbb inc sub out cwtl mov mov orb and jg pop push daa push xchg test mov xchg mov cs ljmp fwait rolb inc add add ss ret movsl sbb loopne rclb jl push icebp sbb sarb cli (bad) cmc push repnz cmp cmp and pop scas push add ja sahf jp or dec push mov cmp pop lahf inc cmp aaa repnz adc ja ja add push or cmp fisub push pop push push enter pop xor pop add test lahf sub sbb pop lret scas adc sub add in pop jbe inc jns clc repnz pop inc jg rcr sarb and and mov or scas adc jp and push adc mov push cmpb int3 fnop clc stc pop push and fbld or mov cmp push push mov enter and (bad) cmp sarb push pop sar sbb xor push mov or (bad) ss sbb pop notl dec xchg cmp clc aad jp and rolb pushf mov js adc icebp ds lcall add dec adc xor push pop notb jne dec mov jbe inc xlat inc rcrl or mov daa mov mov lcall adc (bad) and inc sub mov add sbb ja dec popa mov mov xchg cld ja sub rolb pushf xchg sub jbe mov popa xor sbb int3 xchg xchg (bad) imul inc push push loopne dec rorb insl push rcrl (bad) call dec mov repz jns int3 push jnp (bad) jmp imul cmpsl pop aad push mov pop shlb fildl mov inc push add in xchg add leave inc push push sub dec mov mov mov adc dec in mov add je je jmp (bad) ljmp or retw adc repnz (bad) je ret mov cmp jl inc lods jge out outsl loopne cld ja je cld add into mov pop (bad) aaa call call aam aad in sub jbe (bad) add dec dec dec lret mov pop or call inc xchg xchg (bad) ja cmp mov sub cmpsb or loopne sarl int push xor shll sbb or pop (bad) cmpsb or xor data16 jl sub ja fisttp mov mov insl sub aaa outsb mov insb push sub test sbb pop repnz ret fistpl mov adc (bad) xchg scas or cltd adcl or test rolb out or lcall add jno push and js pop adc or test sarb jg ret inc xchg mov jmp inc test repnz icebp aaa or cmpsb push mov xchg and movsb inc idiv inc mov or push cwtl push add lds das add and push jg adc xor fisubr ss push sub cmp loop mov js cwtl cmp scas adc fcomps stc push adc jb inc pop lods push inc inc ret add icebp cli es outsl push pushf xchg adc mov add mov inc pop add loope mov es sub dec xor out flds sub (bad) int3 push mov fcmovbe jle or jne mov lret and sbb jne add cmp dec push push and adc aas ljmp xor sbb shrb iret inc xchg lods lock out test add or popa push jno rcrl lods adc xchg cmc add adc aaa jo mov xor push inc imull push ret adc lock test clc add dec and sahf or loope mov cli add mov (bad) and jge push lods xchg ret out inc inc lock fist iret inc cmc and loop jo popl push sbb inc loop loopne pusha push jp imul mov adc cmp test pop mov outsb jl sub loop add pop inc xchg pop loope add insb mov pop test adc sti pminub les inc aaa test jp jne ret out jp out jo pop jmp or dec lcall add cmpsb inc fxch clc push xor fcomps loope mov mov scas lock push dec sarb lret fldcw test loopne cmp cld dec js add dec or xchg femms (bad) dec dec sub sub sbb lock les lahf mov xchg test sub sarl arpl ret leave pop push push ret aad or loope mov push int (bad) cmp jg or push jns mov mov repz pop dec add xchg (bad) sbb mov push mov add add pop inc jbe pop push cmpsb clc dec loope xor jle dec mov addr16 pop xchg clc sub push add (bad) push popa (bad) mov inc rclb jbe pushf outsl pop gs xlat mov jae add movsb adc (bad) ss sbb pop in je and clc fistpl pushf scas mov mov sbb adc aas enter loopne (bad) lock add add cmp lock jp in xor fmul jp add ret js pushf dec inc fcos adc (bad) push pushf or inc loopne xor adc in fstpt sbb push sarb fcmovnb addr16 outsb insb xor mov fisubr cmpsb inc js (bad) (bad) mov push xor mov ds lock sahf data16 mov xchg xor stc cmpsb xor stos outsb cmpsl out cmpsl bound inc jecxz cmp xor mov fldcw push adc cld bnd (bad) mov inc stc jne ljmp cmp ret jo dec mov clc call pop sub or cmpsb ret cmp pushl es aad mov popf loop rcrl cs dec les mov cmp xchg xchg mov cmp icebp mov jl jp out mov add shrl call cmp sti fs das sti mov in inc call sub xor jmp jo or ret jns inc xor ret pop gs pop sub push pop add data16 xchg stos shl pop cli or nop enter add pop sub adc pop loopne clc push cld cwtl imull std movb adc mov test js jle loope adc add ffree push jge lock enter jb pop and (bad) cmp or pop in and or sbb sub dec lock cmc decl inc xchg pop inc (bad) jge add add pop pop (bad) movsb lock scas jae pop das adc test lcall pop adc bound sub inc jp stos sbb scas lock xchg jl xchg das push jb xor das pop dec sub cmp adc jmp fbstp sbb loopne (bad) out (bad) mov sub imul jmp lret imull mov loope and inc mov or fwait les inc cmp or fdivl jns scas cmp push pop repnz adc pop inc lret push clc outsl xchg stos imul cmp fwait dec push mov xor inc add int ret xchg push jle pop aad and push adc repz inc add dec das loope,pn mov adc std pusha and pop ret js stc cli sti scas adc dec js xor stos ljmp into xor pushl outsb cltd jae iret fidivr xchg in xor cli hlt (bad) aas sub mov push add jmp push jle in bound push pop nop std mov inc clc dec das lahf outsb push cmc sub and xor aas xchg push and aad in xchg lock movsb inc cli add add aaa cli pop mov add pop sbb insl (bad) out ret push pop add sbb inc pusha addl xchg sub adc xor inc fsubs (bad) cmc pusha aad or and push sbb cmp test adc inc add or sahf and dec fcomps xchg pop (bad) dec add jg cmp mov inc mov andb sbb mov mov jbe fdivr lret push (bad) or in ret jae fisttp jns add xor scas lcall jo mov mov test mov ret mov bound push dec cli dec hlt lcall bound sub jno movsb push movsl mov sbb or (bad) inc cs mov es fisttp push mov fwait mov mov xor xchg (bad) and sbb inc ja (bad) xor mov add cmp outsl mov pop hlt shlb push jno push out and jae add divl call popa xchg mov mov and mov cwtl push xchg lea test repnz cmpsl das enter dec rsm inc fidivrl lcall or jmp outsb or cmp icebp adc bound into insl cmp or cmc icebp outsl dec int inc mov (bad) xor scas ss pusha mov in aam mov lahf mov (bad) jmp leave and std push jp mov jl js loope (bad) jbe xchg pusha aas mov imul (bad) mov pop mov test out adc jecxz ljmp push push pushf es test mov and popf bound lock stos lahf jbe add lods mov ljmp inc aas cmp dec fadd push gs mov inc mov push sbb jp jmp sub setno loop lcall mov sub je les mov or rcrl xchg push jne xor mov out push mov (bad) push insb push mov ja rol in pop insl and push orl rolb js mov rorb mov sbb pop push and sub es mov and movsb stos pop mov jmp inc xchg repnz repnz mov (bad) aaa inc or or jp scas aad mov adc xor add test shrb std inc addr16 mov mov push mov pop sbb aad ret sub dec sbb sbb les lahf inc pop lcall push les cwtl sbb push push es jg pop das inc and pop fstl dec inc push fdivrl mov ret std and imul bound jle sub push (bad) dec pop push ret cmp cli clc jnp sub add clc adc (bad) imul outsb mov dec cmp cld aas push add insl js push pop cmp mov les xchg adc stos mov movsl rorl xor mov pop ret push mov inc leave repnz inc jb js sub or test lahf and pop or cmp lea adc xlat arpl shl hlt xchg das in push ret sbb sub fisttpll lods dec add or inc and int3 xor je mov jb inc mov and mov inc and add ds cmp lret icebp pop add fisubrl outsl push cwtl fs das push inc sbb adc xchg add insb movlps pop or jl in cli stc lcall ja mov or mov jle inc sbb sbb int (bad) mov std xor rorl loop pop xchg outsl xchg popa push lcall mov fs xchg mov incl frstor inc push daa pop imul xchg icebp inc int repz dec push popl lcall sbb in gs push aas ret or shr int pop mov mov fcomps ds call and or insb xor or add inc push pop sti inc enter out loop add jne jp xorl (bad) sti xor jb adc pop inc add rclb scas mov jb mov sarb sub mov cmpsl out fstpl sbb jb movsb aas sub cli out push adc rorb pushf mov xchg (bad) mov aad (bad) jno ret or mov sti xor (bad) xor imulb in xchg push push rcrl jecxz cmpsl cmp sbb pop adc inc imul pushf mov fwait and push pusha push imul jmp sbb add push push or cmp mov adc js xor (bad) enter repnz mov pop fs enter adc mov cmpsb jne mov lock sbb push jnp mov jno mov jge inc pop sbb xchg jo xor icebp add mov mov daa test cld jo test push repz push mov stc push int insb movsb lea push push (bad) sar add std inc mov or stos mov jmp ret lods cld shrl dec and outsl sub (bad) outsb imull jg pop ja pop or cli mov das js mov ja rolb fdivrs inc call mov rcrl cltd clc push add xchg cmp les jge adc ret inc inc (bad) ss ljmp sub mov dec loopne sbb lcall (bad) bound xchg push dec add jbe (bad) pop or and add shrl add jg and decb jbe cld leave aaa imull mov xchg jnp dec ja add adc jbe add (bad) xor inc (bad) enter mov fimul aaa outsb mov insb in dec xchg outsb pop imul mov hlt js push cmc mov sahf lea sub xlat add hlt scas loope in lahf hlt sbbb int inc incb mov fs leave cmpsb out std nop mov lock and jbe es mov sbb sub std ja inc fcoms xor or (bad) aam pop mov xor sub movsl ds xchg jp and outsb cmpsl into sbb jcxz mov into sub inc inc xor (bad) lock or xchg and stos add push loop (bad) das (bad) mov push sarl add sbb cli pusha roll mov inc or add mov push or jecxz lret sbb dec test cli repz pop inc pop mov movsl loopne in lods movsb test imul sbb bound mov or out and popa mov adc mov and xor push clc imulb sarl or enter inc insl cmpsl les dec (bad) jge out inc in imul test xchg dec mov dec push mov (bad) popl lcall in inc xor pop xor leave movsl fsts aad mov test lods es mov xchg stos stos mov ss pop orl jp push add mov inc mov pop xchg push std leave pop or pop xor scas lret dec loopne inc int3 adc lock aam mov aad imul adc sahf adc xchg out dec test cli xlat sub addr16 fimull loope ljmp popa fs cs insl dec fisttpl lret push jp cmp mov in xor push pop jb xchg jbe pop nop (bad) xor mov sub or cwtl stc iret movsl jge add push repnz jl lds cmp into inc xor push and lods (bad) daa aas or bound jecxz inc inc cmp xor cmpsl jne fisubrl test adc test adc mov int xlat sbb lret jle bound pop xchg sahf mov test loopne inc ja inc lea cmp cmp movsl loopne xchg pop out push test push cmp insb pop push push test test mov repz popf call mov incb ret rcr xchg inc enter push movsl lret cmp cmp and imul mov ds out push adc sahf (bad) xchg test mov fisubrl pusha jge pop dec scas cmp in push mov or mov test into (bad) xorl dec push jg rcr outsl jbe pop or aaa sub push or dec pop insl inc mov push dec imul notb outsl outsl jg mov mov inc push jne pop (bad) inc call test mov add clc test imul xchg idivb mov mov xchg subl cmpsb mov pop sbbb xor dec mov ficompl mov inc cbtw push jg mov cld imul rdpmc out xchg repnz dec push outsb aas mov mov in jg mov test popf inc add sub (bad) xor push mov xchg pop (bad) mov jne not dec dec mov cmc add dec insl dec fidiv insl xlat jo imul test push add fidivl mov and iret add ss push inc mov xchg cld out lcall push mov loope xlat mov push jmp jmp pop setae push lcall (bad) out clc idiv aam pushf dec sbb out dec repnz inc jecxz in push push outsl ror mov xchg sub xor pop test push push mov aaa cld js mov repnz lret mov fs fldl int ljmp fistpl xlat lret (bad) dec xchg (bad) bnd leave push fcmovu cwtl inc repz pop repnz xor repnz xchg xchg dec mov cmp jb push push or adc jg inc daa push scas mov js mov (bad) inc push mov dec (bad) adc jp xchg dec adc call cmp pop movsl xchg es xchg dec xor insb mov push insl mov hlt xor dec repnz out xchg je add pusha cmp ret and (bad) aad mov xor clc cmp xor pop mov inc bound sbb jbe sbb push outsb aam lods lahf and jmp pop inc (bad) loopne je (bad) imul cmp inc xor in insl test cbtw pop orl lahf and (bad) or xlat xchg cli bsr or mov ret imulb jb cmpsl test repz leave mov fs xlat sub sbb ret scas or (bad) iret push jmp push add inc push (bad) cld mov cmc xor shll sub addl pop subb shl mov test mov scas xor jecxz mov scas popf scas daa sbb cmp test pop and xchg jns (bad) test incl es mov push push inc mov cmc decl pop cmp fs adc adc cli and cwtl nop addb insl push in movsb push gs sbb addr16 nop addr16 xchg cmp pop jp ss ret (bad) (bad) push cwtl jecxz movsb es (bad) decl adc lret sbb mov insl and imul or stos push (bad) xchg jb int3 sub pop test dec or mov sub lds fbld lds push push stc jp push xor sarl cld add push and sub jle shrb inc ja mov adc xchg mov xor shlb mov jno ffreep sub xchg js jo pop movsb and out or std flds cmp mov clc ja jg inc push pop sti ja insb cmpsl pop jl repnz insb icebp incl add push in aad orl xchg xchg dec imul or (bad) pop mov (bad) addr16 js inc es lods inc sbb ja ja mov lahf fdivr mov jg fisttp bound adc cmp (bad) dec add add inc jbe iret (bad) lock pop and and sbb ljmp and add adc test addr16 nop gs movsb cli cmp push xchg outsb xor adc (bad) mov sub stos inc stos jb das sub mov add push movsb pop pop cmp dec inc movsl add mov cwtl (bad) and fsts pop sbb mov push cmpsl scas mov jbe xor adc sbb nop mov js mov dec add aaa fadds inc stc test icebp icebp and dec mov leave icebp mov inc sub pop popa in dec inc cld add (bad) ja fild inc adc or mov xor or or addr16 dec mov mov add jmp sub lcall sub test rclb add inc lods cmpsl push cld cwtl sub out mov sbb sahf sbb ja pop dec cli aas pop xor push jns pop lret out cli pop and fnstcw mov or test adc ret femms lock fild rolb (bad) jae add cmpsl mov sub lcall rclb adc inc popa cmp (bad) xor inc bnd (bad) in jecxz mov out stos icebp inc fisttp call loope fstl ss inc rcrb stos push bnd sbb xchg cmovae sub xlat add gs cmpl pop call pop rcrb adc fs roll cli das adc sbb cmpsl or or and dec out ficompl loopne mov or mov inc das movsb popa aas adc es xor and ja push sbb pop scas inc push movsl pushf xor xchg sbb in (bad) (bad) popa push popa pusha lock addl repnz and add flds nop mov cmpsb out mov test (bad) imul imul pop test out popf add icebp push mov cltd mov jp and fiaddl adc icebp xor mov (bad) out call je (bad) mov push xchg mov pop add nop mov xor hlt push inc es dec test xchg cwtl fisttp and (bad) jo adc insl mov ss xor mov jbe popa and in imul inc ret pusha ror jge jno xchg das adc sbb pop les out jo movsl imul push mov and in shll pop ret rcrl jo push mov subb push test dec push mov cmp fiaddl std pop mov inc scas orl jecxz xchg and xor and mov cs pushf ret jmp mov insl sub pop stos mov or jge add pop cli cltd in mov inc jp push or call cli lcall ret push cld int xor jle pop lea add jne hlt cmp jg mov or cltd mov cmpsb xchg mov (bad) mov dec outsb cmpsl outsb insb push inc add rolb and sti sub lock xlat xchg es fsubrs jmp loopne sbb (bad) sbb jae inc mov mov cld xchg cmp (bad) shrb (bad) fbld scas loopne mov cmc and push ret sub clc jbe adc adc dec pop pop inc mov push add ljmp (bad) sti roll sub es (bad) pushl pop mov pop sub pop adc cmp test loope,pn xchg mov or push inc sub aad loope xchg lcall scas loope (bad) jnp int3 add mov or cmp pop jo std xor xlat cmp (bad) pop add out addr16 rolb add xchg les mov mov xor sub mov mov ja add sub pusha add out or dec push out ss pop and xor pushf rorl call je inc cmp inc ret jg dec mov cmp push mov push loop fchs adc cmp lret and outsl dec push xlat dec jg inc lods fwait movsb jg bound xlat in mov out scas fcomps sbbb or hlt ret xor les jge arpl stos sbb lea and pop adc push loop cwtl xor loope mov pop lret popa les rorb jg orl sbb xorb les rcr or ds ret imul test or mov pop push lahf cltd (bad) decl test out int3 jno dec aas sarb push add pop outsb lret out out and icebp fs sub adc (bad) push push lock cmp or sub mov outsl push sahf jecxz mov rcrl rcrb sub (bad) push lods sahf pop sub lock adc mov mov and mov pop mov mov mov xor push imul mov pop adc mov add xor mov add test out lods cmpsb add jbe cmp icebp xor das rclb pop dec cs and and add xchg data16 dec in xchg ja and stos loope cli push sub cmc mov mov sbb clc cmpsb cmp jl sbb jne jp cmp int lret adc push fistp cwtl mov fmuls jl into lods (bad) or rcll repnz popl fsubrs jo scas adc xorl bound inc ret mov popf lods adc inc cmp inc mov inc cmpsb ror add jge add (bad) sub fstps (bad) mov add xor scas call xchg sbb out nop bound stos ret pop bound adc in and push or sar (bad) (bad) sbb push ja fisttpll adc nop push push cmp loop dec rolb xchg stos nop incl ret or dec adc es loope inc sub cmp mov or jmp in dec inc push ret in sti dec jle test jae loop negl iret (bad) loopne mov jbe adc push cmove stos jl call orb and into cmp loop jb add xor pusha insl rcr xor in lret and jmp (bad) push sarb pop popa cs test dec (bad) xor mov fsubr pop ret and rcll std push push and sub mov or cmpb or sbb pop mov notb js dec fsubs addl bound jle cli pusha addb mov adc xor mov aas pop xchg mov roll pop pop add xor mov jb sarb adc mov and stos in inc cmpsl inc lods fnstsw or jae xor test or subps cmpsl mov out jns sbb movb inc pop pop inc mov jb pop mov push and ja inc out (bad) cmp sti push scas xchg jp xor sub jo lock xchg sbb outsb sbb pop lock ds pop mov les mov add ret mov sbb aam sar bound clc pop jb sbb js les sub insb or iret rolb (bad) pop adc outsb jae dec (bad) fldenv cmpsb lret adc jo outsl add in test iret cmp xchg dec loope add out ret push xchg aam scas clc loopne adc fs insb sbb mov push adc scas inc inc imul call loopne test mov rsm or lret jo popf out push jecxz cmp sbb aaa cmpsl (bad) aad js pop (bad) dec sbb pop adc imul mov push adc jo lock aaa pushf ja sub insl cmp bound fcmovnu fidiv jge ret aas mov lret (bad) repnz (bad) iret xor divb dec ja jle jmp push mov (bad) jae imul cmp mov insb adc jne cmp xchg push es dec popf xchg mov sbb (bad) stos movsb in bound mov test aas ja inc out (bad) cs and push pop les sub adc cmpb and inc loop fstp inc mov int3 sbb and rclb push adc pop add addr16 pop (bad) hlt sbb jg add pushf out insb jnp push lods push (bad) hlt xchg cmp (bad) pop push sti push popf add inc inc push sub dec cmp mov pop lock xchg and mov push out mov mov inc xchg cmpsl insb push insb add sbb jns or loopne jecxz mov je mov loopne or repz je imul xor inc pop ja popa sbb mov lcall out das movsl aam out inc mov fwait in xor jg repnz dec dec popa cmp jle lret sbb jg fucomp mov (bad) push push xor ja mov out push ja mov lahf pop inc stos jp subl push pop xchg push inc and mov push repz lock sub andl mov inc dec loop push lock xchg push jp ss push jmp int and xchg sti rorb pop jno fwait in add clc inc nop xor push pop idivb aad xor movsl pop cmp imul addr16 push stos and and jo (bad) fidivrl mov clc bnd jbe negb clc inc fiadd out pop xor int repz es mov js cltd mov pop dec inc movsb push jnp push push clc loopne ds mov hlt ja test ret add out scas iret divb cmovl cwtl fisubl sbb (bad) jecxz push and jne add iret not orl mov out rcr (bad) jo pop jl movsl loopne cli mov mov push mov aas clc (bad) hlt push adc push (bad) mov (bad) js aam into lock scas jp or or (bad) cmp adc pop add loope inc inc cld repz sbb push ljmp mov enter inc mov jnp add push ja mov mov in sahf cld adc or add or inc cmpsb add sub jle jae add js push mov pop pop sub aas push cmp mov push outsb mov xorb or push cmp sub loopne dec movhlps (bad) jl insl pop sbb mov loope cmp das jbe inc or xchg fnop bound inc imul hlt ret lock test pusha mov scas add fmull dec xchg je sahf cbtw push rorl outsb push dec gs jecxz mov int fisub push notl push movb loope mov iret jnp sub loopne mov mov nop and pop mov lea jmp stos pushf (bad) ret cmp sbb nop insl pop pop cld lahf icebp xor int loopne mov mov lods sbb jge or clc repnz (bad) mov repz cmc mov mov cmp ja loopne (bad) sbb outsb add je cmp jmp (bad) sub das lods repz clc mov sarb jne inc mov cld mov movsb dec cmpsb jp or clc xor pop (bad) cmpsl xchg jo pop jge and fwait pop and adc sbb push push jo rcl shlb xor (bad) (bad) adc rcrb enter xchg std sar (bad) pop insl cld xor pop mov divb push cwtl sbb aam jns cmp test std inc sub jbe mov mov adc push jp test rcr sbb xor mov repnz movsl mov inc add or aad inc icebp add xchg aaa (bad) cmp push icebp push dec test call (bad) rorl inc pop cwtl mov mov push sub mov pop xor sahf js inc xor pop xor xor sub inc sub and push shr mov add mov dec mov cmpsb push xor insl cld adc into leave inc (bad) cmc js loop out std (bad) aam sub hlt js lret lcall jl sbb repz shr jle sahf dec xchg adc inc ljmp arpl inc dec fwait sti ret (bad) dec adc mov mov jnp test sub cli outsb idivb stos inc add iret or cs (bad) (bad) adc mov inc push xchg ljmp ret and jo pop add or mov test inc outsl (bad) push or stc or adc clc rcrb pop (bad) push lcall mov xchg push test jle mov jl add xchg dec xchg push lahf or sub fcomi sbb ret hlt inc push daa jo jecxz outsb push xlat lods cmpsb (bad) (bad) push inc out les out sub sbb imul push and xchg scas push inc ja inc inc sbbl jo dec mov mov scas xor insb cmp jp jbe or inc add mov outsb inc push (bad) aad mov test pop sbb jno int3 ret fsubrs outsb mov clc xchg imul jl cmp jne js cmpsl int leave test or test ljmp jns imull sub (bad) or pop cwtl add js daa lcall inc mov pushf inc or lock fwait and xchg add or subl cld xor lret fwait add jbe addr16 les lock push xchg push icebp pop scas dec adc add clc inc or inc mov decl not jge adc (bad) sti adc xor sbb pop lods ljmp cmp adc jg in mov pop or ja jbe test adc ret push fwait loopne scas test inc mov js pop jnp rcr add add sahf repnz cmp adc movsb aas add in pusha mov pop and stos pop loop lock std add lret sbb sub xor mov jmp test arpl stos jne scas outsl push mov mov or dec and adc les adc xchg inc ffree mov jle mov out mov nop push adc push fisttpll nop push add in inc incl stos mov sti sysret movsb les dec pushf xacquire addr16 or decl add inc mov mov test pusha mov inc inc xchg pop xorb rclb lock incl in xchg jo or xor or push push das xchg lret pop push ja (bad) decl jbe jns pushf ret jno inc jp push movsb negb sub insb loop jmp add es lods pop sub in lea dec loopne and lcall ja bnd hlt imul mov movsb or xchg xor jp (bad) ja jp dec xchg pop into mov push push pop jge or jb push pusha daa lods mov cli ficompl fimull adc scas inc imul push push hlt and add mov xor xlat in fucomp xchg mov cld insl adcl popa xor push xor mov mov pop lret int3 push sbb add addr16 sbb (bad) stc pop push (bad) test mov push ds add icebp pop lahf sbb cmp lcall mov nop dec push imul dec or jbe sete or fsub mov scas aad mov mov pop xchg bound xchg cmp pushf rol rcrb fdivr push test push add adc and dec dec mov jnp rorb lock lods std test jne add pusha movsb and jns jg out divb inc jb mov mov rcl adc lret lcall in xchg add rclb or and jle mov inc jmp cmc pop and cld and aas mov popl inc or pop dec cmp or add sbb push insl push out mov xor and push ljmp (bad) pushl iret call fcmovne add sbb decb cmp mov data16 outsb lret out inc pusha xor (bad) (bad) clc ficoml rcrl xchg je test mov movsb mov lock jg mov (bad) scas fnop ds daa aam push cltd push jg and insb push push ss (bad) push pop cwtl push (bad) mov daa cmp pop outsl xchg or sub out ret iret sub aad add rclb and inc lock sub pop push jae adc cmpsb pop adc mov movsb clc mov add mov push shlb adc cli daa jnp adc push mov cmp addl pop test push or enter dec mov mov jle cmp pop sbb xor and xlat mov test inc jge fwait dec aam mov test movsb and jbe ficoml ret fcomps xchg fdivs fidivl mov dec lods cli dec aam insb inc mov lea sub mov aam jecxz cld push imul add pop cmp cmpsl add dec and out mov (bad) pop icebp aaa inc sbb mov pusha mov push sbb rorl mov data16 pop into push rcrb push cmpsl in add add jp pop cld adc loopne orl pop repz dec mov pop or inc test mov movsb xchg ds hlt aam jns sahf clc mov cmc sub mov call ss inc mov or inc psraw mov mov dec clc fisubrl arpl mov ret test es inc cld sbb add push mov xor lret out cli pop (bad) lcall add loopne dec pusha xor cmp adc cwtl cmp inc dec or addr16 cmpsb push shlb xchg mov lret dec cld addl pop dec push push shr fabs gs rcrl xor or ds add lods inc push inc int ret (bad) push popa sbb or xchg xchg mov ficomp push cli inc jae add xor inc xchg push gs (bad) aam nop fs imul push dec fist sbb or jl pop movsb pop mov mov scas (bad) fcomip iret dec mov adc sub pop into mov out mov ljmp pop or scas stc mov jae scas sti (bad) push icebp decl inc fist cmp mov mov jg inc pavgw ja add sub shrb outsb rorb inc loopne mov add call add leave push sbb jp (bad) sarl sbb pusha ja add (bad) enter aaa pop es icebp ret and cli or out pop fwait int mov andl push montmul cmpsb inc inc ljmp sub xor daa sbb add addr16 ret roll push icebp xor and jp and mov jg clc mov ret fmull push mov clc cmp ljmp pop or push mov loop movsl decl std into or and and mov inc mov loopne mov and xchg inc xchg ja outsb cs mov cli iret pop pop (bad) adc push push cli movsl aad iret add ja les in or and or inc shr mov testb dec fsts mov imull inc add adc scas test scas fs adc or add mov enter and jbe sub fs movsb popa sub inc hlt add sbb xor outsl dec aad mov loopne mov jns pop add outsb clc rcr decl or lcall movsb lret mov pop lods ja shrl jb arpl (bad) push test js jns popa fdiv stos fnsave clc push ret sub push add or adc mov js dec fsubrs ds daa push iret pop push cmp or pushf das sbb cmp lods lsl movzwl push ja enter xor add int3 call pushf std pusha (bad) in enter out or adc dec scas pop or xor xor sub cli or or add inc orl push loopne xor or cmp ljmp jecxz mov ret add int cli stos test loope lcall fidivl in add lret repnz sub mov sbb jmp mov add outsb cld js lret push inc jae xor lcall pop das mov push cmpsl push dec icebp push sub add adc sub jg mov adc push adc push aad iret mov icebp outsl (bad) sub lret lods ja dec fdivrp call mov stos test in cmp aaa dec in jp cld xchg faddl and daa mov cmpb jl sub clc mov pop ret push iret ja jmp rcrb lahf or and mull fwait sub sbb lods xorl xlat push clc sgdtl iret addr16 sub mov inc add les mov mov test ret or cmp ret jl fild (bad) pushl inc push insb rcrl push jmp fwait mov popa movsb dec aaa jg in inc es dec hlt and insb add inc jmp or test addr16 add rorl lea push into sbb imul mov les jns mov shll cmp or add or or mov push jo mov enter test mov xlat test mov pop shrb xor mov lock rol (bad) cmp inc cld inc and loope mov jecxz adc adc jb inc cmp icebp sub cmp (bad) jo push xor idivb adc xchg xchg sbb mov fcomps (bad) jge scas sbb jnp jo jne and insl mov push (bad) xor sub ret faddl add xchg iret xlat in hlt jp adc (bad) lock sbb js bound out adc push add mov add and jge or imulb sbb pop push enter (bad) clc inc loope les jae popf scas dec inc clc aas xchg sub out insl sbb cwtl mov or lock scas and out imul or cmp mov xor scas adc and add pop cli inc mov repz inc loope ds inc mov jl jle cwtl pop imul sub mov loopne pop roll mov sub inc test xor jo jnp test and or fstl xchg inc sub push xchg dec popf jne cmp push call ret or inc push lcall inc (bad) aad pusha push fbstp push sbb adc xor call imul adc sahf and xor mov mov loope icebp loop inc repz xchg or cmp push cmp test (bad) push jnp and scas jp adc js arpl cli or xchg or push in loopne test in adc shl cmpsb shl fmuls in (bad) stos push (bad) adc outsb inc movsb addr16 movsl mov mov movsl and les pop andl cltd pop lcall pop fiaddl push push mov test xchg les andb cltd and and add mov or out jp sub cmpsl and adc push (bad) fs push imul xor push xor add mov cmp fdiv sahf cld fwait pmuludq mov push shl pop jb out sub sbb mov and and pop ss dec out adc dec pop ret cltd or call les cld rol rol pop sbb pop mov lret lods int push sub gs call push (bad) adc int3 mov sbb nop (bad) mul shrl dec push stc push push sub subl pop (bad) aas in pop fldt ret faddl mov sub xchg dec add and adc xchg push cmovne and les test cmp clc inc push or loopne mov lock daa imul lods clc or nop mov add or decl mov inc nop into jmp add inc dec fwait int3 fidiv idivl nop (bad) fisubrl mov and gs mov sbb sub xchg hlt call add or cmp cmp ret xchg dec scas leave jle add push jne inc and decl lds jecxz jae inc fnstcw (bad) push adc sbb dec repnz push fist repnz (bad) sub pop or or push mov xlat push pusha cli and sarb ficoml adc xor subb loopne loopne jp (bad) fdivrs jl cld inc movsl (bad) pop push pop inc pushf inc xor adc and mov js fwait daa outsb push push jle xchg jp fsubl xlat mov popa jecxz int3 loopne fistl iret fwait bnd ljmp xchg xchg sbb out jo sub (bad) lahf add (bad) mov or mov (bad) pop mov rorb dec dec inc xor inc or bound loopne insl in lret loopne das jge rclb inc sbb (bad) xor imul idivl stc sbb push cwtl (bad) notb sbb pusha push push (bad) pop or je decb mov sub xchg clc ret mov inc jl mov mov cld ds inc mov jmp dec movsb lea ret test cld out insl (bad) shlb (bad) cltd mov mov jge sub sbb inc call outsb nopl xchg sbb loop orb inc xor dec arpl test insb xorb add dec cmovo fsubl or arpl scas jmp imul stos decb sbb mov stc jp sarb xchg lret in sar cmpsl fs sub lahf fiadd mov add inc cld add aad popa popl out dec cwtl push rorl push (bad) push xchg outsb test bound popa pop adc xchg pop jge add or divb or (bad) xchg ret or push push imul mov cmpsl push mov pusha xchg add sbb or (bad) xor xlat push mov fistp jp stc movsl sahf ficompl lcall sub xor int inc xchg daa pop nop add inc loop je dec iret cli in sub pop pop pop mov pop fwait movsb test mov add (bad) (bad) shlb lods xor cmp mov mov pop insb stos dec push negl aam inc push cld (bad) out rolb lret inc pop adc call aaa push mov aas lock (bad) cmp mov pop push mov movsb fsubrp pop notb mov insb test mov les jge es iret insb inc sbb movsb out repz mov test pop jl outsb xor adc mov mov xchg push aas sbb xchg mov push shrl icebp lret insb popa out idivb repnz sbb jp test mov jb or jmp (bad) sub lock adc ja fisubrl add clc insl mov dec sub dec in mov add loope mov ja insb fdivrs popf (bad) jne inc aaa sub mov jno adc xor mov xchg arpl jno mov fbstp fildl cmp jae out mov jno js mov fidivl int lret loope mov enter andl lock jne loop stos (bad) and pop or int rsm call xor cli adc int push fstl add clc ret ror cld outsb hlt les adc add pop (bad) je mov pop mov rclb cwtl sbb ret out into sub out push das popa insb (bad) incl test pop or fistl and jae movsb push (bad) mov lcall imul es mov in xchg fisubrl mov mov dec pop aad and pop insb out mov mov or push jns aas jmp idiv into rol repz lret stc enter roll push lahf dec mov (bad) push inc pop iret aaa sbb bound xchg test fwait inc push repnz xchg jp pop add or push loopne subl lcall dec arpl leave adc push test aas dec jae cmp int rcr xor push cmp (bad) push add movsl scas sub push mov push jne js adc or mov sahf inc mov shr push jp push cmpsl icebp ret repnz xchg xchg stos aad or dec mov pop mov push lcall das (bad) xlat test adc out push in mov sti pop sahf out or push test and sbb xor jle xchg test sarb mov and mov mov cmp imul mov add cmpsl sub and lret mov mov jns repnz loop jae mov je lret jae mov adc mov repz lret jae fbstp shrb cltd shr repnz sahf xchg jp enter add jns rorl cmp push jp aaa xchg mov jl mov mov mov scas cmp out and add out mov outsb ja jns not inc rolb mov shl mov into dec jb out cmpsb into jecxz mov repnz sbb inc xor test cmpsl cmp out inc icebp (bad) ja movsb aas out das out mov adc cwtl imul add mov jecxz in test inc testl inc rcrb dec push mull push div adc cmp imul mov inc cmp in and jns iret div dec test sahf lret fwait dec outsl addr16 ljmp outsl test repnz inc cmp out cmp ja pop push xor jae xchg (bad) pop test lret les push mov sub repnz mov sahf add jg das pop cltd shr addb push cmp pop pop sub xchg sbb lahf out js xor jb lock jl push shufps sub sub or ret push or imul cmp mov pop cld push sbb iret scas out sub out sbb inc (bad) pcmpgtw push nop xchg dec in icebp idivb idivb data16 notl cmp mov ds dec repnz ret dec cmpsl repnz (bad) imul pmulhuw ds jne,pt cmpsb push mov rclb push stc (bad) out sbb neg bsf sbb clc mov mov loop pop pop add test data16 mov test std ficompl inc mov ss jnp rorl push xor adc jg mov cmpsl sti push (bad) movsb push leave push adc push stc mov xchg rol cwtl inc cmp xchg iret repz cmpsl loopne cmp dec sti ds ljmp fidiv loop jge mov mov test inc pop cld fwait shrl or out loopne mov loope aas repnz test or fildll sbbb push stc cmp add aad fisubrl xchg mov loop stos pop incl sub mov fwait fs mov jl sahf jp jecxz mov push std sar dec shrb aam call repnz dec dec push scas push js int dec ss fistl cltd add loopne jmp inc cmp sbb xchg loopne outsb nop pusha mov mov cmp xchg mov ss in push dec sar bnd cli sbb imul xlat decb and adc cmpl jmp cmc mov jb jbe daa dec mov jmp inc repnz rolb rcll jg std or jae mov push sti popa icebp add je es inc mov cmpsl sub or sub pushf out lret xchg mov in (bad) mov jmp inc dec jp sbb pop adc getsec mov cmpsb mov fldt dec sbb loope insb cmpl lahf sub es fcom or (bad) (bad) cmp (bad) js adc push arpl inc shll scas and jg cmpsb shll int ret inc adcb cmp pop adc xchg cli or mov (bad) mov or fistp mov jnp xchg pop cld call (bad) xor mov ret or push mov in scas jnp mov add clc gs or sub adc scas or movsl das push fcmove xchg cld (bad) in bnd es popa cld leave lcall inc sbb push inc sti stos test xor push jle mov mov push (bad) pop mov shrb imul loopne pop cmp shll jb sub lcall sub into sub adc dec sbb or jg push sahf in (bad) dec xor push fwait jmp cwtl clc rcrl stc inc jo xchg (bad) fimul and in rorb jno and out pop ret les or test inc add mov add rcll nop sbb les cld cmp adc push push mov add xchg ds mov pop pop unpckhps movsb pop mov ret cmp pop fsubs bound enter lahf or fwait addr16 scas or and rclb aaa xchg lret jg bound mov mov int repz outsb mov xor mov push sahf loopne mov mov shlb into jecxz inc xchg sarb mov cs (bad) je adc push inc es (bad) xchg push (bad) lea imul dec in sub movsl insb (bad) pop inc loop fisubl inc pop push ljmp in shr loopne inc das jp sbb add add pop call test test dec jnp cli mov cmp aad loopne sub push dec jl mov cli scas add fidivrl (bad) xor adc ljmp xchg incl sbb test inc aas jb negb loopne push cmp mov mov add mov clc mov icebp cmc dec std insl jge mov push jge shll rclb xchg xor sbb pop pop popf push mov in or and inc movsb sbb iret ja sub jp inc pop jbe add inc cmp push or add sarb push jb loope fwait cli dec (bad) or das loopne (bad) mov std push in test push in (bad) mov inc ret or pop inc mov das mov sti xchg mov xor cmp mov ja fs loope push ss pop scas ss lods test sub jl pop rol pop mov jmp mov loopne inc in lods cli repz ja cmovns jle pushf push pop sbb orb mov push push jp sub test jl cld and imul cmp cmp ss pop dec rcl inc cli (bad) jge clc decl sbb dec sbb or dec mov pop std pop xor test pop out adc add adc adc or xor push cld ret pop fild sbb cld sbb ret int3 push inc fstpt clc fnop jecxz stc inc in add adcb inc sarl ds mov movsb pushf ss test mov cmp pop and push or lods jecxz or dec outsl adc mov or mov scas xor dec jp sbb ss xor gs ja jl push inc ljmp adc inc cmp jns mov mov ja aaa sbbl xor xor jp push inc outsl jg popa cmp outsb clc xchg mov xor fisubl adc aad mov daa xor push aaa out or or (bad) jbe mov sbb jl and loope popa loop mov adc das leave xchg add inc mov sbb orl add (bad) sbb jns or inc mov in (bad) imul add adc aaa ficom push test fisubr sub and cmpsb sbb imul inc (bad) xor rolb sub sbb fwait or jne pop mov and jmp xchg pushf and pop sbb in icebp lret stos lea pop jb,pt les mov and in xchg jl push test das adc sahf std and xchg pop jb sbb cmp int3 test pop jle and mov insb shll pop push lret aas loop mov nop stos sbb adc cld mov inc and (bad) xor out lret adc mov sub adc adc (bad) pop (bad) jp lods jnp test push sbb fwait aaa mov jns neg inc or jl fwait aaa loop dec fwait push xchg imul fistp mov push lahf fwait aaa outsl fidivr scas and out leave xchg sti cmpsl repnz ret les sub (bad) aaa outsl les cmc loop ds dec cltd sub stos xlat adc aaa jne popl js mov xor int3 and push jge inc add int clc out outsl mov sub add push inc dec mov cld fldcw insl add or or stos lahf icebp lock test dec mov pop jae pop inc mov xor jo and mov jg scas mov (bad) lcall inc dec ficoml imul rclb sbb push jecxz sbb loopne mov stos (bad) into or lods jg sub mov xor xchg ljmp mov ljmp push insl call and dec rolb xchg icebp rol rcrl push std add xchg xor mov imul inc lcall pop inc and dec or adc dec js cld ja xor inc ss mov scas add aam mov out into iret inc and scas loopne and xor xor push jnp sub pop adc cli mov test inc pop pusha sub mov (bad) popa inc orb in xor in mov and popl lods out jg adc repnz lahf fidivrl in jb mov fwait clc lahf test in (bad) cmpb pusha clc scas push out push (bad) adc dec mov mov test push imul inc sbbb shll or sbb mov push fcmovb adc and ret clc pop enter int les icebp mov or add lret pop mov out repz pop scas mov or and push push js xchg fildll cmp mov dec (bad) jmp push out add adc leave imul movsl or ja js cmp lret xor rcrb xchg in or mov repnz call sbb test sbb (bad) fwait cli lea ja inc dec add xchg idivb xor pop (bad) mov or stos pop adc lods stos repz adc add or add js shrb add shrb mov clc fcmovbe rorl jmp sbb push lock out xor inc sub xor and test mov or stc inc fist and adc mov push xchg icebp push insb adc divps outsb inc (bad) out adc sbb push lods cmp incb sub add int pop inc xchg jp add mov test lret jp loope pop dec add pop add or ss mov and stos xchg mov add push lds inc add (bad) dec jns into in adc lahf das jbe push hlt mov xor js jp push jle (bad) adc sbb ja inc push sbb das jb push leave jp jge sub cwtl pop push xor add lahf ljmp fiadd imul je adc fsts mov cli aas cmp pop inc mov jb or pop dec fcomps negb jb push adc push mov fcomip inc sbb xchg cmpsb cli pop rclb clc dec mov movsl outsb jns inc add lcall lods mov push or repz insb ja cmpsb jp ret xchg and jb xor mov pusha jmp sbb push add ja cmp add mov rcrl jg sub lods mov or (bad) js hlt xbegin or inc and mov fisubrl add lock mov mov out and pop push cld mov cmp je mov jmp sbb push mov inc mov (bad) in icebp inc sub push frstor icebp scas out push ds mov clc dec nop push add adc fdivs cmp jno fimull inc (bad) sbb sbb lahf ret lcall std ljmp cmp popf loop call fiadd mov cmp inc mov and loop push mov sbb mov push xor inc sbb add fiadd pop (bad) add mov push push push push repnz inc inc mov sub enter push add sub ja (bad) sbbb es mov ss sahf push arpl cmpsl jmp jae cli push fbld jg cmpsl mov sub sbb xlat mov mov roll loopne es test cmpsb ss mov (bad) xor pushf xchg mov sarb push mov and fucomi mov mov cli add loope ljmp pop add lcall dec mov ja stc push clc xchg push mov in shld pushl frstor fsubrs or clc cmpsb dec inc push imul out mov clc adc sub insl sarb inc cmpsl sub push addb or fstpl push xchg imulb lahf lock aas mov cvtps2pd rolb clc outsl ret psadbw in push or xor sub push ss sarb andl lahf lock inc dec inc xor and cwtl (bad) cmp pusha pop lea mov inc in ja add sub add or and inc pusha cmp cli lcall (bad) lods pop rcll inc push xchg pop iret negb xor push fidivr adc cmp sub les (bad) cmp jmp add xchg pop cmp into test xchg dec sub int cmp cltd and test inc outsl jg subb adc xchg addl xchg pop sub jmp in jle fstl imul inc jmp pop sbb inc stos test sub inc loope push (bad) mov pop adc xchg jnp pop inc (bad) push xchg movsl pop or xchg jae push sti dec lock push ret xor (bad) imul ret add adc dec add push ss add das (bad) jecxz xchg jecxz (bad) ja xor mov jg xchg dec sub test xchg jbe and jg (bad) stc cmpsl pop xor ret inc sub fstps mov xchg pop out lcall mov ja add sti shrl adc xchg lods pop jle idivl sub xchg addl test jg aad sub icebp test pop jmp xchg push test addr16 pop call fstps adc sti pop dec sub lds repz rol xchg hlt jmp dec pop cmp cli and xchg data16 outsb (bad) popf push xlat jg inc xchg (bad) outsl jb ret pop push stos mov sahf inc hlt sbb push jnp repz loop jne cmp loope lret dec sahf push push cmp fildll cmp dec (bad) lcall adc or test xchg pop sub fisttpl icebp inc pop sub dec xchg sbb adc xchg stos scas fildll aas push xor adc pop loopne lock out test xchg bound fs adc enter iret test xchg call sub out add or test xchg dec sub (bad) adc xchg mov push imul (bad) incl inc pop jl nop cmp das jns clc jns shr mov xchg cwtl xor insb jno pop and enter aas push addr16 imul jl aad outsb aas out (bad) jge pop add pop cmp icebp in (bad) incl fsubrl pop push js lds repz ja test je outsb ror cmpsb xchg pop or (bad) sti jg xchg pop sub (bad) adc push sbb mov xchg pushf pop jne leave xchg inc adc jbe xchg call xchg jae jnp lret push enter into push testl add daa fisub (bad) lahf inc xor call push clc rcrw (bad) gs inc sbb add pusha cmp loopne neg arpl dec pop jno les data16 pusha ret loopne xchg (bad) dec insl xor dec (bad) push out jl mov fadds loopne aas push imul add (bad) jae outsl outsl mov mov data16 bound cmp faddl inc fs sub xchg out or (bad) fdiv sbb call inc pop jl lret jle negl jo pop and jbe dec cld (bad) daa lock inc daa fiadd call aaa into pop xchg push lahf mov jae out fs (bad) inc sti dec inc insl sbb ja loope push push inc loope inc jp cmc fs incb mov loopne dec and pop ret cmc inc inc push xor adc scas movsb xchg pushf push inc clc scas mov pushf jp mov ja icebp pop mov outsb gs adc test aaa pop hlt scas fisttp fstps sub cmp test pusha lret insb imul adc pop lea lds lret adc xchg mov lret push adc ja adc imul pop or cmp les ficomp sbb ja push and jno sarb imul test xchg inc jl cmp pop stos or dec sub js or jl cmp push xchg mov jg imul popf pop std ds popf mov xor testl adc fisttpll adc pop xor rep pop cmpsb xor mov test mov add out test push cli rorl fisttp imul pusha jl clc lock (bad) cli mov inc push in pop cmp mov push sahf loopne loop repnz inc aas push dec loopne cmp push push rcll jo cmpsb xchg test test (bad) cmc lea sub ret mov inc xor push sbb inc and iret adc and jne lahf dec sub insb lods dec aas mov (bad) xlat andb sbb in push jo inc mov mov lahf or mov mov loop fwait push xor addr16 and in push mov sahf push js mov mov jo (bad) dec sahf aam test pop sbb xchg xchg jo ja enter sub ds subb xchg ss cmpsb repnz roll cmp jne xor sbb xor jno out lds sbb sbb or in xchg cmpsb fstps out dec movsb jecxz aas push pop shr cmpsb clc jl ret adcb sub jge mov mov mov fnstcw sub sarl ss pop repnz js leave add repnz ds ror into jns xor xchg loop jl dec cmpl jmp mov or mov ret enter ret pop lods push inc xchg ljmp adcl push adc iret cmpsb scas call daa outsb or sbb pop push push cs (bad) lcall adc mov push les mov das mov add and sub rorl rcrb mov out scas fmull adc xchg adc jl jge ficom out bound push fxch jnp dec inc jnp jae incb inc repz dec pop daa fistpll loopne call inc (bad) pop outsl jp iret cmpsb add jmp (bad) push out pop cld pop sarb stc pop out testl xor and xor inc aad repz imul inc (bad) loopne fld xchg out jnp push or das enter mov scas push xchg bound ds mov inc and out insl push pop mov aas mov lds jp xor out ret (bad) add dec add je (bad) test mov enter or pop pop cmp call aas cli pusha mov mov inc jnp mov insb (bad) push out jmp fs fcoml jg insl xor jae neg daa ds lcall into fimull and push lret popa and lahf jne and inc jp and jnp or ret mov movl push mov mov negl dec inc xor or js (bad) sarl jo sub or leave pop add iret jl loopne ja insb leave (bad) ljmp pop inc imul jnp fadds dec jns xor xchg cmc mov or subl test xchg inc cmpsb stos push pop dec xor movsl lds repnz gs dec sbb rcr sbb (bad) push in mov repnz sahf sub test jl or fs int lahf cwtl add (bad) mov jne mov mov push push stos jecxz (bad) sbb jg jecxz out jb cmp je jp inc out cmp inc sub push pop jae or xchg mov jbe out ja outsb aaa mov imul addr16 ja dec sbb or push cmpsb stc test add lcall loopne loop inc push fisubl sub sbb out pop add jbe mov pop mov cmp fisubrl loop ret lret ficoml inc punpcklwd (bad) loopne adc cmpsb add adc jbe pop popf je jecxz push repz rcr adc movsb mov dec cs or sub xchg (bad) das and insb pop mov mov push repz in mov xchg (bad) loopne jo mov xor xor ja sbb push push xor ss sub jecxz xchg rcll daa (bad) cmp push or fimul outsl xchg jp pop and jmp mov (bad) xor pop mov (bad) push inc negb jp pushf mov mov sbb jl pop repnz (bad) mov (bad) imul mov inc iret xor fcoml mov int3 jg inc sub jp or and or xchg insl add popa pop leave and (bad) mov arpl push test inc push jno sub arpl push insl imul dec add and scas push stos inc movsb das mov and pop push sub cwtl jg sbb jnp ja test lahf push sbb ret in cwtl mov rorl data16 scas push inc leave ja,pt int3 xor add xor xor and ja aad xor inc bswap je xor scas aas jbe mov dec jo xorl jb outsl arpl add push scas xor pop inc xor lods pop adc inc mov leave test sbb sbbb inc mov dec push push mov push mov outsb dec add push sub pop insl or dec xchg adc loope jg sbb push ljmp xchg test pop aas inc fwait adc lods adc sub aam jae out cmp pusha jno ja cli fwait scas mov jle dec aad sbb push (bad) ds lock imul int imul out xor sbb jp out push bound ja push aaa out xor ffreep push (bad) popa dec jno (bad) jge repnz push (bad) out out push out inc (bad) dec jp sub shrb bnd data16 jno out icebp out lods xchg xchg add out ja sar (bad) (bad) pop jne pusha ja leave jns loope jne push pop mov (bad) out je push adc movsb inc push push jmp push mull cmp cmp scas sub insl jo push cli les push xor mov cmpsb adcl xor fdivrs in pop pop iret cld in (bad) fldenv sti test push lret rcrl jb jbe pusha fxch rorb lods xor pop dec inc addr16 insl add add push jo jl (bad) jg fcompp pop loopne pushl bound cld (bad) xor fisubl loop jne push fistpl or fs fidiv int sub (bad) js test and and and pop flds or mov jg call (bad) ljmp mov (bad) sbb push pop or call jg mov xlat dec jae adc les sub aam addr16 jecxz nop push sbb out pop push jecxz sbb add or in inc ret jecxz mov cli out sbb into pop push mov pop xor cmp sub xchg insb mov pop stos pop jae or xchg clc cli test sub mov cmp jo ja adc adc jmp jge sar cmpsl cmpsl adcl inc inc fadd shrb stos mov jmp rcrl xor nop ljmp std sbb xchg fistp ds sahf jbe inc ret sub pop jle sbb mov cmp add mov push or jne mov dec ja sbb loop cmpsl sub jp jmp xchg rcll jecxz jl,pt add xchg dec ret (bad) repnz iret pushf fiadd fsubs pop bound pop push cmp jbe cmp rorb push imul adc fimul clc dec xchg test ret repnz dec push arpl mov push movl loopne bound adc xor mov jl pop fcmovbe ja mov pop inc lds lock test push jne loopne mov and push inc lcall mov push call inc push add push xor xorl test ret ficompl movsl outsb mov cmp rcll fistpll addl xor into ret stos movsl push adc mov gs push dec sbb aad lods add ja and outsb mov jne mov outsl ja adc stos pop repz xlat and (bad) or gs aaa dec xchg adc xor outsb and pushf push lods xchg (bad) mov rolb cmp das mov ret add jne fisub push or imul sbb imul loopne cld mov inc outsb jmp bound jge popa xor push lret sarb ds pop addr16 mov aam pop pop cwtl ja jg and fiadd loopne imul dec push pop xlat xor inc push ja sbb loopne ja jns jp out call mov das pop ffreep push rorl jp fldenv push push loopne stos test jge push jno jle popf dec cmp dec (bad) (bad) (bad) cmp cmp mov lret pop adc push xorl ja (bad) jae insb and dec xor lcall js out sub inc call push mov cld jecxz cld cmp int3 int or lock pop loopne mov lock insl pop outsb es ja jge push int3 ja mov push push fistp add mov and (bad) add or push adc fcmovb jg scas call sti pop scas sub test cli test hlt lods inc das lds test inc xor test negl clc lret mov popf orb cmp cmp ret adc jmp dec ds xchg fiaddl push es jnp out xchg sbb leave inc repz and sahf pusha jo loope nop int in pop dec dec addb popf icebp xor lea shl add out pushf cmc lea loopne imul mov mov adc out or push pop adc xchg cli push jg xchg dec jge rolb sbb inc and xor ja add (bad) leave ja xor sarl int aas mov test pop or pop int mov es imull dec add lahf add ljmp subb xor imul fisubrl dec sub mov sbb or pop cmpsb jp push cli inc into js xor inc add fcmovne push je rcrb ret dec pop fdivp xor lcall and movsl push leave mov cmp icebp dec cmp pop fisubr repz in push imul sbb sub mov push mov pop xor dec or (bad) js cld data16 or jmp sub sbb daa jno aaa mov push scas cs ljmp mov cmp lahf lret push fs data16 pop popa mov dec mov sub adc ss sbb lock popa jno mov popl clc stos xor imul stos outsl mov jns and loope push and nop inc sarl push in into xchg ffreep leave jbe xchg mov out call or rcr push pop pop sbb add dec adc ja adc xor sbb inc push aaa push jp jge cmpsl mov sub lock jno test clc fstpl pop pop mov cmp imul sbb cmp out iret push pop scas or cmovl sbb shlb outsl (bad) loope mov jle mov add fistpl addr16 idivb addl adc loopne xchg jo dec popa sbb push cmp cmp popf movsl fidiv nop pop aas loopne ja adc or dec mov repz (bad) mov and fisttpl subl push jecxz mov fnstsw ja push in fisubr xorl add jbe or ror fcoml loopne imul dec jae repz inc mov lret jnp mov xchg add roll inc flds jo pop loope pop xchg push xchg stos rcll scas pop cmp mov loope inc bound notb push or aas ja mov or addr16 (bad) jmp push outsb inc ret mov xchg iret jge arpl scas out dec mov lods fs addl adcl decl mov sub push stos repz jnp adc sub sbb add test (bad) sbb repnz push and mov bound cld push pop or orb rorl dec insb sbb inc jmp or adc sub pop and xorl out cmp sbb lcall pusha push ja jge test xor insb pop inc scas test (bad) cmp test (bad) mov stos aad arpl dec push inc das sbb cmpsl pop mov sarl (bad) and dec mov mov repz loop dec dec and sub test js adc jg dec adc adcb cmpsb inc cmp icebp aad ja jae dec subl enter cs mov mov enter loopnew (bad) mov aad iret test rorb mov xchg push add jg inc je out pop pop xchg mov inc daa lock test sub clc cmp (bad) or lock and data16 sbb cs fistl and pop or pop fs inc or dec js pop or xlat lock sbb or lcall xor ljmp xor or sbb cmp ja mov sti inc sub xchg loope rolb sub pop inc jg sub imul popa or add fdiv ja outsl pushf inc sbb fisubr pushf cmc add (bad) mov cs sub shl pusha mov stc hlt pop loopne sbb mov jo fs test mov mov jo int inc inc outsl xor stc outsl cmp fdivl out sbb dec clc xor xor sub mov fiadd jg cmpsb cmp sbb mov push test faddl mov adc stos dec movsb aas adcl aam je mov into notb xchg (bad) js add cwtl andl test pop cltd jge xor ficompl inc dec sub hlt jo xor adc shrb test mov test dec inc ret inc ret mov dec test insl emms test mov mov dec inc (bad) xchg inc movsl xor dec xchg xor inc inc mov mov pusha or lahf sub or and call xchg adc bound pushf jnp sbb sub push pop sub pop inc js shl adc add ret push pusha movsb and fwait stos imul adc jbe add sbb push shrl dec push dec stos adc rorb lea mov dec jg jne pop mov sub aaa xchg sub or adc push cmpl (bad) repz sarb xchg sub cmp imul ja jp fcoms cmp lahf andb push mov pop jmp movsl test push inc pop sbb aas sahf je aam sub mov ja jmp pop mov and aaa lds cltd fdivrs mov pop ja adc add addr16 movsl push pop cmp jmp push mov ja ja scas les pushf mov nop jge movsl scas (bad) add xlat add lds sub sahf pop aad inc mov jg mov push xorl imul pop inc test pop iret fisubr iret ja pop outsl test insl dec fiadd test ja push outsb cmp add icebp add cmp and jl es rclb or shlb aas cmpl pop sub jle and movsl jnp xchg push lret mov arpl xor test mov xor repz xchg les adc add mov cmp outsb add jp pop lds inc pop mov outsb rcrb add pusha jne out pop outsl xor adc aad jmp push sbb xchg ret xchg fisub ret jne jo adc or jge jno dec fadds sub lods cmpsw pop adc inc push add aaa dec out sbb jns (bad) fcoml lret xlat sbb in jns loope ret push mov cli mov jle outsb inc call mov mov insb xchg sbb inc sub xchg es mov push js xor push (bad) (bad) gs mov pop and push jbe mov std fistpl ficom (bad) ja fadds pop pusha pop popf xchg arpl stos adc jae inc outsl dec jl repnz push ja inc sarl fisubr das sahf jno inc ja lock mov rorw ja (bad) sbb outsb inc das pop pusha aad cltd adc mov popf out jecxz insl adc outsl imul ja aam mov leave sub imul adc or sub push andl push in loopne inc pop fadds ja xchg push adc mov add cmpsb lret int pop outsl mov pop dec in inc imul subl jl mov in or adc and jge xor call xchg pop sub adcl add ja cmp xorl sbb ss sbb rol leave xor outsb xor xchg sbb (bad) mov pop ljmp sub mov mov (bad) sti xor sbb pop rorl inc cld lds movsl mov ja arpl ret stc mov mov add or xchg ds jmp xor dec pop iret mov pop and push add sahf rorb fistp mov daa inc outsl (bad) sbb sarb insl ret or movsl push insl lcall hlt mov imul jp leave or ljmp (bad) xor xor test add inc jl syscall scas nop fsubrs ja sub cmpsl pop fcompl inc mov pop and imulb jne jns std pop sbb jl leave pushw repz mov roll je xor inc pop push js jno pop xchg rcrl aam push cmp sbb pop inc shll testl inc jmp jle xor repnz xor popf std movl out sub je cmp hlt or pop cli jae loope push test mov and xchg mov cwtl dec add lods jmp and and mov sbb rorb cld and mov inc loope shll push fs mov ds push jne pop push orb and inc stos jp mov fs sahf ret add mov push mov push sbb je popa xor rcr add cmpl call mov mov ss lock fwait imul imul stc sbb push sbb sti cwtl rorl addr16 orl adc daa and sub dec or into neg inc aas ja cwtl imul xor sahf push nop push push sahf push push pop sbb xor fs jbe push (bad) js and cmpsb or pop ret cmc or and loope cmp pop ja ret mov sub stos xor test sbb jnp add add imul sub pop subb pop emms sbb mov inc ret add test jle cli and (bad) call inc cmp jp dec aas icebp pop cmp cmc push jg rorl sub pop sar pop shrb jmp ja mov push and or mov xchg mov (bad) dec ja mov (bad) pop add cmova pop inc or pop out sbb xchg jbe mov ficomp adc or insl iret loopne or mov ret pop out sub pop jp pop jo out adcl xor scas adc das mov loop icebp fwait xlat add js imul adc sti lcall sbb cwtl add sbb and mov std or in scas push xor fwait repz scas lret insb inc outsb jp fnstenv (bad) jmp loope cmpsb ret (bad) and adc pop hlt ret movsl jae call push lock xchg in xor sbb pushf xchg add adc mov or out test push (bad) out dec rorb sti (bad) (bad) jns and nop test jg aas xchg xchg mov clc call xchg xor sub adc (bad) xchg out lds js addb in (bad) (bad) (bad) fistp mov into out add rclb jmp cwtl jp push dec leave emms in imul pop arpl ljmp (bad) lcall xchg bound fsub cwtl call jae nop pop mov adc (bad) lcall mov pusha (bad) push dec mov fnstenv pop sbb lahf ret push outsl lock pop popa push mov and ret inc int3 inc lock (bad) (bad) cmp push xor jb fcomp adc jmp (bad) loopne sub mov xchg cmp adc out push imul xchg mov jnp cltd leave jmp cmp (bad) lcall and jnp ja mov (bad) inc jno clc jle dec or test arpl fld push mov inc imul std ja mov outsl jecxz,pt (bad) (bad) mov jl pop pop rcrl iret pop out add mov imul xchg test jg adc push or pusha xor imul pop mov jnp icebp decl jae sub int pop insl and lahf cli dec xor enter dec inc jp lret cmp sahf cmp inc test push jg ffree mov bound inc into inc in pop insl push pop cmpsl nop add dec mov (bad) (bad) call xchg fdivr pop stos ja xor andb mov (bad) (bad) incl push dec push test inc pop or ret ss and pop mov or ljmp ret or out jmp rcr and addb aam in (bad) (bad) fisttp sub paddsw xchg pop in adc mov mov (bad) (bad) (bad) call push (bad) roll (bad) jnp fdivl cmpsb lahf aaa sbb pop notb push inc (bad) (bad) call pop sbb dec adc mov cmp xor fdivrp (bad) (bad) dec push xor xor xlat lods add aaa or (bad) (bad) ljmp mov ljmp cmp hlt in xlat in ficomp pop (bad) incl in ret stos js mov out sub insb add jecxz out sub pop and (bad) (bad) lcall sti pop and xor mov xor xchg jbe incl cld jg fldl2t xchg xchg sub addb jge (bad) ljmp mov test (bad) ljmp push xor mov (bad) (bad) decl xor xchg pop lcall xor xor leave pop mov sbb (bad) ljmp pusha sbb or add std (bad) pop addr16 insb std inc test (bad) (bad) incl (bad) lcall in call lret xchg data16 (bad) (bad) jg inc arpl xchg dec and inc mov test cmp (bad) push out inc lcall dec push jno cmpsb insb mov xor sub dec mov mov (bad) (bad) (bad) in arpl dec int3 jbe pop pop jmp add sub pop pop aad xor sub outsb push (bad) (bad) pushl incb mov push mov push sub inc loopne incl icebp pop jle push rolb or outsl cli decl lock jecxz leave inc mov add loopne aas psrlq add loope dec call or ljmp gs add call add xor add mov mov push stc jg cmp (bad) pop or scas sti lods push cmp iretw push adc fs (bad) decl outsb adc cmp xchg (bad) dec and jo rclb pop (bad) cmc lahf fcoms std (bad) jmp lock inc mov xchg mov repnz xor sarb clc (bad) jg loopne fldl pusha loopne lret mov das mov fisubrl sub shl (bad) decl call lret (bad) xor cmp clc ja cmp idiv inc cmpsl data16 lods cmp jl cmp mov push cs arpl lock gs inc xor lock or dec cld (bad) (bad) (bad) cmp int3 test mov into push clc mov pushf loopw mov mov ss aas setb mov mov (bad) aas nop pop add xchg sahf cmp scas dec sysenter mov dec in mov add mov imul ja (bad) aam mov mov out dec out (bad) (bad) (bad) call lcall cmp mov sub push in push pop push sbb shrb jmp adc and sbb cltd ds decl (bad) arpl out fnstsw test aas inc jle or push call xchg and pop mov popa (bad) gs mov repnz (bad) (bad) (bad) jg and push pop sub mov push out add out in cmc out in (bad) jmp push pop sbb out cmc xor pop add adc cmpb jge mov pusha sbb cmp (bad) (bad) (bad) cmp mov xor or mov aad cld orl cmc int out rclb je js sub movsl insl mov fcoms cltd daa lea push clc div xchg ds xor data16 shl cmp data16 push icebp js push mov fdivrp (bad) bound mov xchg jo push mov push mov push inc mov scas notl loopne cmp mov sahf jecxz cs (bad) (bad) (bad) sarl pop cmp fxch push negb data16 jg or xchg xchg pop ds int3 int3 push loopne inc outsb sub (bad) (bad) add cmp or ficom ficompl push jmp in inc stc jg inc loop xor mov or ljmp data16 test nop bound in pusha aaa sub or int or dec insb xchg inc imul xchg ja out jmp jmp outsl cmp incb gs (bad) jnp inc pop popa daa mov jnp push popa xor jae sti pop dec jmp add jno imul jb sub cmp int add (bad) incl insl jne cmp (bad) pushf pop adc call sbb and jle fisub nop (bad) inc daa incl add imul (bad) cmp into and imul xor push iret ja push xchg popa jg push and or pusha fist adc add addr16 jecxz pop test inc pop orl jne pop adcl insl pop or insl aad aad ficom cmpsb jle into sbb pushl adc data16 jge loop ss pop or push push loopne lods sti pop (bad) mov (bad) icebp movsb xor ja incl add out stc fcoms orl (bad) lahf xor cld (bad) sti jmp xlat xor (bad) ja cmp pop mov fwait (bad) ds orl and xchg add jecxz and stos sbbl jg call push inc xor jecxz push inc adcl push les pop push inc pop leave add mov add push push push push dec sbb pusha leave add sub inc inc jne dec (bad) cltd xor inc add push (bad) add add xchg dec mov add mov data16 gs add add int3 add scas xchg xchg mov ss (bad) pop jg lret add mov icebp lret add (bad) loop sbb jb testb (bad) cmp sub (bad) (bad) jg push lea xchg pop inc movsb int3 add push fidivr add fisub (bad) in adc mov nop mov inc push push inc mov push popa mov pop mov adc or dec (bad) or fiadd push out test arpl (bad) fildll jb jne or inc imull not dec insl or push es sahf not out sbb dec and push imul mov fs jae out sbb imul es push sub adc nop (bad) push jbe inc jo imul adc popa outsb insb or inc scas jns mov add insb arpl push or push push (bad) fdivrl dec dec push jbe mov push push pop repz outsl xchg push adc insl (bad) loopne push or addr16 cwtl and dec mov inc aas lret add cwtl and cmp jb add ja cmp popl add jbe xchg sahf add shlb inc push arpl jae popa xor jno add js es dec pcmpeqd push push mov sub lahf pop addr16 fisubr cmp out mov mov sti or mov inc sbb cmp (bad) jo dec popa out xchg jmp arpl fsubr sub inc pop adc mov xlat ljmp into (bad) jb gs cmp mov and fistpll lds xor bound js sub out sbb sub ljmp push jecxz (bad) adc jbe mov or jg cmp dec pop sbb jecxz add bound dec mov out aas push jnp outsl ss or call jb mov (bad) push arpl cmp xor clts or imul mov (bad) pop jo xchg mov (bad) fidiv ja jns push insl jmp add lock cmp imul jns sti cmp push lret das inc out jne mov push push outsl push pop loopne and add repz faddp add jo push shll scas dec outsb mov div pop ffree daa dec sub push stos clc pop mov insb sub iret pop icebp pusha ret sbb je insb shlb jo popa popf notl clc jnp ss outsb sub fisub jne outsl xchg jnp mov push or add jmp jp jmp divl je arpl xlat pusha sarl jae dec (bad) jle shrb das daa mov lret je ja add fs (bad) ja (bad) jecxz inc bound popa xchg clc pop xchg pusha push push push pop mov repz daa pop pop je stos push xlat add aad sbb pop popa ret inc and pop jb outsl dec setg adc out inc fidivr push sub icebp cmpb fildll or insb sbb cmpxchg or icebp ror es (bad) xlat sbb jle pop sbb addr16 cmc hlt jmp or lods pop outsb inc push and or jae cmp insl pop pop imul mov arpl jno add out xlat cmp inc inc push and stos dec dec jmp (bad) adc push add push cwtl adc outsb jecxz or push mov push mov push fcomi cmp lahf dec add ja or insl cmp and pop push pop outsb jg sti mov sbb fisub dec ret jo or out adc pop rclb out scas arpl push lock add arpl lock mov adc sbb call mov jb jbe lret and jecxz nop scas add push loope int adc and ss add sbb lea xor xor mov pop or pop inc mov jno ret out fs addr16 sub (bad) sti push inc gs mov insl xchg imul daa das xlat xor packsswb outsb sahf loope,pt ucomiss inc dec and jo (bad) xor shrw sub dec adc adc xlat jmp or (bad) jae lods mov out jl push and push outsl mov adc (bad) adc push cmp lret push roll fcom or lret (bad) rep pop lds pop cmpsl and dec (bad) mull pop scas add fwait icebp (bad) andl sbb ds stos jmp fmuls xchg mov shl ja adc ss pop mov ret sbb mov cs mov push out call dec jl sbb jbe imul or pop insb inc jae sbb jno fwait shrl repz movsbl insb cmp sub inc addr16 jae les out dec rol outsb mov fisttpl cmpsl (bad) xor les imul cli hlt outsb push push and cmpsl loop sbb (bad) sti stos jo push jp push jns xor cmpsb adc jb pop xor cmpsb fmuls push sub arpl sarl inc push sub add cmp mov loopne push xlat sti call jmp push ds (bad) repz add aas jae jb xchg lock cmpsl dec pop or or push ret imul lahf insl jmp dec or fisttp mov addr16 xchg mov xchg xchg dec sahf scas xchg mov mov lea inc daa sbb mov pushf mov adc xor out movsb add sbb push imul pop mov adc bound dec mov dec hlt rolb cmpsb inc mov adc mov movsb xor sbb xor mov pop arpl ja adc test mov or push lods or jg and jne jae cmp or inc sbb sbb mov and js xlat lcall adc lods and mov jo inc sbb divb inc mov push or imul inc outsb test shlb out loope mov adc xchg push (bad) xchg ss out mov inc ret lcall and add push push xchg jne aas fs mov out imul pop xor daa lods bound mov fildl jnp outsl loopne icebp pop push add push sbb dec mov mov sub pop cmp xchg rclb pop add jne inc (bad) push push iret jp jmp ss mov pop push mov mov jae or insl (bad) aas iret jl imul push imull mov sbb into dec andb aas test jne pop pop pop insl add dec jae sub popa pop adc daa (bad) imull mov (bad) in mov mov inc jbe lcall jb lea pop and cwtl inc pushf (bad) xorl push sbb mov dec cs fistl or mov push add outsl arpl dec out lds pop pop jne xchg inc cs loopne sbb and ljmp jecxz loop ds jnp adc or aas inc adc or jo (bad) out jb jmp fndisi(8087 mov jbe inc rcll pop or add rep pcmpeqd mov imul ret lret push push (bad) loop iret das and outsb jb aas lcall imul fs push xchg push and xor pop in imul mov pop lahf xlat xor xchg idivb inc cmp pusha mov (bad) jmp xchg pop inc xchg xchg cmp cwtl and cmp sub adc pop adc mov call jno add add add mov es shll jecxz out popa imul mov sbb mov ret jbe (bad) xor or aam mov outsl push and xchg and lock dec loopne out sub je xor sbb xlat pop lahf outsl cmp loop data16 imul testl pop add dec adc scas rcr adc je shlb das or sbb imul decl jle outsb inc fcmovbe idivl push notl push inc jae cmpsl neg mov dec fwait das mov cli xlat and pop bound ret test adc pop mov scas sbb mov daa outsl jmp pop dec sbb dec leave (bad) arpl push and push ret jmp adc push stos call ja ffree lods or push int3 add and iret jbe or test mov mov and xor xchg jl mov jo pop and push mov cmp call jae mov mov (bad) (bad) jnp les sub or (bad) jne pop and mov jae adc sbb add xchg push add mov mov or fisttp gs sub xor test or or loopne mov clc pop int3 repz mov mov jmp imul fisubr lcall les aaa pusha enter push imul dec sbb outsb pshufw pusha mov or imul xor arpl mov push adc inc (bad) pop (bad) xlat ret jp outsl aaa cmpsb pop dec ds arpl adc dec sub (bad) mov daa push xor sbbb fs pop add jbe jg (bad) call fbld cmp aaa mov pop fwait cmp adc jb push mov jbe gs test mov dec repnz inc (bad) outsl jg mov adc imul cmp dec add or pop out cltd or push push cmp or adc das mov jo adc mov adc mov ja sbb dec or shll adc cmp popf and mov mov adc jae pop adc test cmpsb and xor adc add pop cmp adc cmc and mov fisttp adc loopne imul pop ret sbb push pop xchg aam mov dec sub jns mov mov int mov push adc mov xchg lret jp outsb jb int dec imul adc adc fisubl mov adc push rclb dec cmp andl adc sub rolb adc pushf sub lock push add addl add cmp outsb int3 or xor jo mov loope ret fdivrl push adc into pusha pusha jns mov or fadds sti push js xor or jp lock and push enter and mov fcmovnu int out scas or xorb in add dec pop add push mov pop dec or insl add pushl or or push insb push jae jo jno sbb xchg and sbb inc ljmp pop movq test fwait or addr16 mov (bad) fisttp xor add or fs xchg cmp jg inc mov pop and aam loope mov sbb or lds xor adc lods mov ret add add inc mulb add insb jnp loope push cwtl add adc xchg in lahf or sbb jb subb sbb sbb or rcll rclb inc lock inc mov sbb sbbl fadds or enter jns loopne and and add cmp or sub test push dec adc sbb aaa mov dec adc mov sbb push shlb stc inc scas dec mov sub mov inc ret cmp add xchg xchg or pop dec pop ss movsb jne lds adc dec pusha mov pop adc outsl push or popa aas and xchg dec in in add or add xchg pop leave add push pop xlat inc or push std imul insb aam jo inc adc faddl popa dec sub or or fstpl aad lods pop inc sbb gs add jno sub jmp mov subl and icebp testl adc pop (bad) jg out outsb fs sbb movsl in mov lcall jl mov in inc int3 sbb sbb jb jb or or sub push inc popf fildl push addl add adc imul ret mov and mov ja and pop jg push sbb inc js mov pusha sbb or out and sub sbb (bad) cmp xor push and int3 dec inc and aam xor push mov fstenv addr16 and xchg daa add cltd pusha push cmp push (bad) jp push mov or and mov inc lahf xchg xchg in pop (bad) loopne in add arpl mov pop sub inc push push push inc shl scas push dec and mov movsb test fisttpll jg int xor jmp clc (bad) or (bad) cmp pop shll sub sub xchg lea xchg inc sbb jnp add sbb xor stos lret or iret shlb mov lds sub inc jno and inc add test repz cmp dec push mov movsl (bad) jne or mov sub popf adc fidivr mov jns hlt cmp int3 (bad) adc pop push pop loop (bad) adc mov sbb inc xor add sarl test push cmp jnp push pop icebp mov add jnp addl imul lock test outsl push je rcrb ja adc pop arpl fiaddl adc lret xor xlat jnp jp pop sub add sbb sbb fcoml sbb imul pop imul stc and outsl mov adc mov popl leave or sbb push mov push inc dec add lods add stos sub inc das push inc jp sub pop inc mov ja inc xor pusha adc shrl pusha push fistpl sub outsl in shlb cmp invd or dec mov add movsl inc jl sbb sbb pop cmp gs dec add mov imul ret inc insb (bad) and cld add addr16 pop push add test daa mov nop mov orb movsb fldl ret pop push dec push xor add jg mov dec inc lea loope sbb fmuls rcll lods cmpsl push push or inc (bad) jb sbb insb sbb outsb sbb mov loope fmuls scas inc inc push jo xor enter sub adc lock call and lds roll outsb xorb inc xor jae repz and es pop fcoml and jbe nop inc lds pusha sub and push dec adc pop inc xchg lods dec mov (bad) push cmp and in fldcw and scas add stos sbb dec xor mov sbb pop sub pop inc outsl lret js cltd sbb mov pop imul je ret push nop (bad) xor iret fisttpl mov pop sbb pop pop and (bad) and inc divb test imul (bad) xchg sbb dec inc push inc push mov adc lods or shrl sahf je dec sub daa xchg fwait inc hlt pop sub outsl jo xor mov add hlt sbb lds dec je pop dec xchg pusha sub out ss inc jmp dec add rolb imul push adc lods pop dec daa dec and nop ss mov jns pop bound dec inc sub sbb je add (bad) adc loope pop inc jge sti test mov jno sub dec jns xchg inc leave mov pop dec adc add outsb xor lea outsl and xchg mov push enter add pop outsb or sbb xchg lods nop mov test jo in sti (bad) mov pop mov inc cmp inc and es xchg sahf test push lret popf mov lods (bad) mov xchg sbb add stos lds jo mov push insb push test dec fisubl (bad) pushf into push sbb jmp add mov arpl out cmp lahf orl sbb loope mov jmp outsl mov jl imul insl movsl call loope sub or cmp xor mov call je jne xchg push xor and push je sbb (bad) popa pop pop data16 dec jb xor xor sbb xor and mov cmpl shrl sbb sbb sub xchg imul and iret sbb cli mov dec jae add mov enter aaa and and (bad) adcl arpl mov in and adc ret adc imul and inc mov push inc mov popa push jmp imul loopne mov inc pop xchg movsb or mov (bad) pop arpl or inc and stos in insb sbb push popa inc test in inc inc dec outsb add xor das pop sbb and push (bad) and popa (bad) daa jmp ret or aad and pop and jmp flds lds xchg leave aaa data16 stos xchg mov sbbl (bad) xor and jecxz ret dec cmc add ret mov sbb inc jb inc mov dec (bad) sub aad cmp xchg sub add sbb mov push xchg test pushw inc sub mov out sbb and push loop cmp dec sbb loop sbb jo adc das and jne xor lret fs test cwtl fildl ret xor push fs sbb sti fldt push sbb movsb ficomp pop ret mov and mov push clc stos andl and icebp int3 sbb ret push jb pop jnp push sub and nop mov test jne and push into popa inc adc fwait mov pop sub add or jb and fs jne push roll inc movsl imul (bad) int3 push fldl push sub (bad) int mov cmpsl sub lea push adc pusha inc pop daa movsb xor je lock inc dec ret jae int adcl mov mov leave dec rcll push ljmp test add add popf sub loopne popl sti sub push push daa jo push xor adc adc inc pop add nop/reserved dec popa push inc (bad) stos adc push and aas dec xor shlb sub sbb dec inc inc les sbb mov push pusha inc inc push inc adc notl iret cmpl push push sbb dec fisub or jo push pop cs aaa shrl popa add orb arpl lahf je,pn jae mov outsb mov sbb dec add mov dec gs loopne seta xchg loop jae dec pop add dec in fimul nop into xchg xchg inc test and xchg test add add add add add pusha mov lea movl push or jmp nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp ror dec add int add add add add add or add add pop add addb add mov add add or addb add cwtl or orb add or add test add or add dec sldt add add add add add pop add add add add add add addb add lock addb add add addb add push add add add add add add add add add add add mov push pop add add in add add add add add add add loopne add les add add in add add add add add add add or add clc push pop add add in add add add add add add add xor add sub pop add add in add add add add add add add pop add add pop add add in add add add add add add add addb add add in add add add add add add add test add enter xor add in add add add or sbb mov add cwtl sldt movsb sldt mov add (bad) sldt aam add out add lock cli sldt or add push adc adcb add mov add add add sbbb add xor add pop add add addb add add add add add clc add add and add dec push add jo add cwtl push add rolb andb add adc add cmp add pusha pop add mov add mov add fadds add add add sub add push or subb add mov add add or xorb add add add add add add add add add sbb add cld pop pop add add add add add add add add add add inc add add pop pop add add add add add add add add add add push pop pop add add add add add add add add add add nop add add add add add add add add add add add mov pusha pop add add add add add add add add add add loopne add and add add add add add add add add add add or add arpl add add add add add add add add add add xor add gs add add add add add add add add add add pop add add add add add add add add add add add addb pusha imul add add add add add add add add test add xor add add add add add add add add or add add add insb pop add add add add add add or add add add jl add add add add add add or add add pop add add add add add add or add add pop sahf pop add add add add add add or add add sbb add in add add add add add or add mov add in add add add add add or add add pop add add add add add add or add add pop add add add add add add or add push add sbb pop add add add add add add or add push add fadds or mov add add add add add or add add cwtl adc add add add add add add or add and add add add add add add or add xor add in add add add add add or add push add fadds add add add add add add or add pop add cwtl push or mov add add add add add or add pop add pop or mov add add add add add or add add sbb add add add add add add or add add fmuls add in add add add add add or add cltd or mov add add add add add or add pop add pop stos or mov add add add add add or add pop add sbb add in add add add add add or add or add lret or mov add add add add add or add add cwtl fmull add add add add add add or add add pop in or mov add add add add add or add decb add add add add add add or add push or mov add add add add add or add or add adc add add add add add add or add or add or mov add add add add add add add xor add add add add add add add or add add xchg loopne add add add add add add xor add add add add add add add mov add shlb push add add add add add add adc call or xor add pusha or xor add mov add mov add fmuls add add add sub add push or xor add js add mov sldt enter cli sldt lock cmp add sbb cmp add inc or cmp add push sldt nop or cmp add mov adc add or addb add add add add add add add or add add adc or popf add add add add add add add add add js add mov or faddl add in add add add add add add add mov push add in add add add add add add add enter pusha push add add add add add add add add add lock add imul cmp add in add add add add add add add sbb add add or xchg add add add add add add add add add inc or add add add add add add add add add add push jno add add add add add add add add add add nop or add add add add add add add add add add mov jne add add add add add add add add add add loopne add push add add add add add add add add add or add jl add add add add add add add add add add xor add add in add add add add add add add pop or add (bad) or in add add add add add add add add add orb int3 orl mov add in add add add add add add add test add addb add add add add add add add add rorb add add add in add add add add add add add clc or add add in add add add add add dec adc xorb add pop or add add add add add add add dec or or adc add in add add add add add add add jo add orb add add add add add add add add cwtl or or aad add in add add add add pop add jg add or add sbb add inc push add push jg add jg add jg add push add add add add add add add add add or add enter adc add in add add add add add add add xor add fcoml add in add add add add add add add pop push add lock or adc add in add add add add add add add orb add or adc add in add add add add add add add test add sbb add in add add add add add add add rorb add sub or adc add in add add add add add add add clc push add inc xchg or adc add in add add add add add jl add add add add add or add sldt inc push or adc add in add add add add add add add pusha sldt add add add add add add or add add pop push or faddl add in add add add pop add inc add inc add push add add inc add dec add add inc add inc add inc add dec add add inc add dec add push add push add inc add inc add add add inc add inc add dec add inc add inc add dec add add inc add dec add pop add inc add inc add add add add inc add or push add inc add dec add push add dec add push add or inc add add add push add add add add add dec add dec add add inc add dec add inc add dec add inc add push add add push add xor or dec add dec add dec add dec add add sbb add add add add add add add and add add andb or add adc add add add add add add add add add add add add add ja add jl add jl add jp add push add add add add add or add cmp roll add lahf add add adc xchg inc in (bad) cmp dec pushl les sub enter or mov add add add add add add add or add sldt add add add add add add add add add sbb mov ficompl (bad) dec std aaa mov inc (bad) sub sbb add add add add add add add add add add add add add add add add add add add add add pop add add add outsb pop or test sub fwait xor lods xor pusha incl pop (bad) cmp mov inc incl push add add add add add add add add add add add add add add daa add add add add add add add dec add add add arpl add jb or ss cmp mov outsb movsb mov add repnz hlt decl jmp (bad) decl je dec loopne decl pop incl pop (bad) cmp rorl add mov add add add add add add add add add add add add add add add add dec add add add popa add add push jge sub cmp cmpsl push insl je jo mov in (bad) clc movsb in std jmp out (bad) lcall in decl fcomi incl (bad) in (bad) jg ljmp mov call push decl pop incl pop std inc ficompl add add add add add add add add add add add sbb add push add add add je adc lahf push push pop mov fucomip mov cli sti mov std (bad) ljmp hlt (bad) jmp jmp cmc decl fnop decl fldln2 incl rcl push mov mov push lahf mov pop xchg mov inc scas insb call outsb call imul dec aad std dec jecxz incl adc rolb add add cmp add add add add add add add add add add add add jno test xlat jecxz out clc (bad) lret (bad) (bad) inc (bad) (bad) (bad) mov clc (bad) jmp repnz jmp cli lcall out lcall jecxz std xchg fcomip call (bad) decl out incl (bad) pushl xlat incl (bad) jmp ss jmp aaa dec jmp ss std and inc ljmp mov pop repz push out call push dec frstor jmp incl add lret add add mov add add add add add and add add in (bad) lcall out lcall jmp sti jmp out lcall clc lcall in call repnz nop loopne decl fucomp incl (bad) incl fyl2x lcall mov das xchg aas pushl xchg inc pushl lcall sub inc (bad) aas (bad) push lcall jne pop ljmp push loop std push in jmp ss and xchg xor pop mov repz sub sbb sbb add add (bad) shr or out (bad) cwtl in (bad) popf out std pushf in std fwait out std fwait out std fwait call cli std lcall std xchg in std xchg in std xchg loop std xchg fcomip decb fdiv std xchg out std test out std adc in (bad) jg repz dec mov std push fisubl loopne std arpl jp insb in (bad) std imul jne pop icebp jb pop in jb pop in jae pop ljmp push loop std push in decb incb pop incb push (bad) cmp dec (bad) xor inc incl add lods add add mov lock in lcall out lcall out lcall call clc lcall in call loope call fdivp std mov icebp decl (bad) incl xlat in (bad) jl in std jl repnz xchg dec into pop call lcallw outsb lcall jne gs std insl jmp jge pop in jne push in jno push in jno pop ljmp push loop decl decl pop incl (bad) ds mov inc incl add stos add add (bad) shr inc lcall lcall out lcall out lcall out lcall in std xchg in call loope decl fcomip std mov lock fldz (bad) jg in (bad) jge jmp jp jmp jp repnz test inc enter int3 pusha call lcallw outsb lcall jne gs ljmp cmp in xchg outsl out xchg gs jle pop in jae push jmp call insb call push decl pop incl std ds push (bad) cmp dec incl add stos add add mov ljmp out lcall in lcall out lcall out lcall in std xchg jecxz call loopne decl lock xchg out incl xlat in (bad) jge jmp jp in pushl jmp js lock cmp ret push decl pop decl call lcallw outsb std pop fidiv gs ljmp cmp in test jae mov jae mov jno mov push jmp insl decl incl pop std inc iret push (bad) cmp push incl add cmpsl add add xchg shr jg jmp std lcall out lcall out lcall in lcall jecxz std xchg loopne decl fcomip decl fucomi std sbb (bad) jle in (bad) jge jmp jns in pushl jmp jne call incl (bad) cmp rcll pop decl pop call arpl pop fisubrl pusha loopne jmp jnp push cmp in test jno xchg jno mov jns (bad) (bad) jns (bad) (bad) js mov jne mov jo test imul jmp jnp add add add sbb add add call sti std pushf out (bad) pushf out std lcall std lcall std xchg in std xchg loopne (bad) nop loopne std (bad) fcomip std mov out std xchg out std test out (bad) jg in std jge jmp jns in std js jmp jne call (bad) jno ljmp lods pusha std cmp gs cmp imul inc mov arpl pusha loopne std gs std push cmp in test jne mov cmp dec jmp ss inc mov nop inc mov lea mov nop inc mov add add xchg fsubr les out lcall call stc lcall in call loope call fcomip decl fsubr incl fsubr std jl jmp jns in pushl jmp jbe ljmp into out outsb int ljmp jmp ljmp out jmp out jmp out pushl (bad) js (bad) incl cmp fisubrl pop fidiv in ljmp cmp call mov pushf (bad) jecxz jmp sti lcall call idiv xchg in call loope call fdivp std mov repnz (bad) incl aad std jnp in pushl jmp jbe ljmp int ljmp call ljmp in gs gs (bad) in pop (bad) in jae (bad) std je clc incl call popa call insl lcall je gs std je (bad) incl or mov add add mov ljmp fwait call stc lcall in call loopne decl fdivp std mov out incl out (bad) jge in (bad) jp in std ja jmp jbe ljmp iret jmp ljmp out push in lretw gs in arpl jecxz pop (bad) fs rcl jae clc incl jns dec int3 pop call call insl lcall je outsl sti xchg add add add add xchg (bad) adc jmp cli lcall out lcall jecxz call loopne decl fucomp std xchg out incl xlat in (bad) jl in (bad) jns jmp jbe ljmp int ljmp call ljmp out lretw leavew in (bad) enter (bad) pop ret imul ljmp aam jno clc (bad) aas lods ja inc (bad) push decl popa call call insl std imul add add add xchg xlat out sub call stc lcall in call cmc call fcomip decl fucomi std sbb (bad) jle in (bad) jl in (bad) js jmp jne ljmp int ljmp call ljmp out push leave in fs (bad) pop (bad) pop ret loope insl (bad) loop push fdivr jo idiv cmp ret inc (bad) pop decl pop call gs pusha in js add add add add add add cli lcall idiv cwtl in (bad) xchg in std xchg loope std nop fcomip std (bad) fcomip std mov out std test out std sbb (bad) jle in std jnp jmp js jmp ja ljmp iret out insl int3 call std imul in leavew in fs (bad) in pop (bad) pop ret push ret imul idiv cmp mov push std inc lds lret pop in incl or mov add cmp add add add add in stc lcall in call bnd fcomip decl (bad) incl (bad) in std jge jmp jp in pushl jmp pushl jmp ljmp call ljmp out leavew in fs (bad) in pop (bad) (bad) ret loop push shl imul std insl fdiv (bad) cmp mov (bad) aas mov push call callw insl incl add arpl add adc cwtl fsubr lea out call loope std nop loope decl fucomp incl (bad) (bad) jg out (bad) jge jmp jp in pushl jmp pushl jmp std insl lret out push in push leave in fs (bad) in pop (bad) (bad) ret loop pop shl push mov sar insb fsubr std imul repnz test decl nop repz add clts add xchg aad mov out call jecxz call fcomip decl (bad) incl fsubr (bad) jle jmp jns in std jbe jmp jne call ljmp call std push leave in (bad) enter enter (bad) in pop (bad) (bad) ret loop push ret push shl pop ret in insl mov out std push shr jmp repz hlt incl add pop add add cwtl fucomp (bad) xchg out call loope decl (bad) incl out (bad) jge out (bad) jnp in (bad) js in pushl jmp jb call pushl jecxz je (bad) jb fdivr jo xlat pushl (bad) pushl aad jb aad jb aam jno aam outsl mov sar insl mov sar addr16 out imul in jmp jmp in lcall in (bad) jg (bad) incl pop jnp add push lcall cmc xchg fldlg2 lock jmp mov out mov jmp mov jmp decl aad incl shl std adc loope (bad) fucomp call in std mov hlt decl loope incl fcomip (bad) jl repnz ja icebp pushl icebp pushl icebp ljmp lock ljmp in jmp jmp gs jmp jmp popa shr lcall ljmp sub cltd add add mov (bad) ljmp lock jmp out clc lcall jmp call out decl jecxz std mov repz fcomip (bad) jg icebp (bad) jl icebp (bad) jns lock jbe out pushl out ljmp in ljmp out ljmp in ljmp in jmp jmp fs jmp in lcall in lcall jmp sti (bad) ds pusha mov add cmp add add add add clc (bad) jmp out idiv mov jmp lcall call hlt decb in decb loope incb (bad) (bad) jnp out (bad) jns lock jbe out (bad) jae out std jb in std insl xlat out std insb (bad) in std push aam std gs (bad) arpl in std pop shr std pop iret jmp pop into jmp call nop iret add add add push cwtl aad and jecxz loop in out loope out fsubrp in loop ljmp hlt cli lcall cli xchg loop call loop decl loop (bad) jp repz out std jae out ljmp in ljmp out ljmp in ljmp in jmp in jmp in std popa shr lcall ljmp iret jmp push shr ljmp ret add dec add add (bad) (bad) or or enter mov or mov repnz out ljmp in lcall jmp push shr call jmp decl call decl idiv dec aam lcall call decl add sub add add add add mov jle stc jmp out ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli repnz cld scas jb fisub (bad) incl push sub add jg fsubs mov les rcl mov aam xchg lret fchs xchg int call lahf mov repz scas sahf sti jae repnz add (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) incl (bad) (bad) incl incl add (bad) (bad) incl jg add (bad) (bad) incl jg add (bad) incb add add incl add jg add add add jg add add add dec add loopne add add add loopne add add add loopne add add add rolb add add add add add add add add add add add add add add add add add add add add add add add add add incl add add add jg add add add jg add jg add jg add jg add incl add incl add incl add incl add incl add add add incl add add add incl add add add incl add incl add (bad) cld add incl add (bad) incb (bad) add (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add add add add add pusha add add and test add add push add add push add pop add inc add push add dec add pop add dec add dec add add add add add add roll add add add roll add aas add add add add add add add cmp add add push add add outsb add inc add insb add dec add data16 add sbb add add xor xor xor xor xor xor bound xor add push add add add outsl add jo popa add jns dec add insl add add add inc add inc add and push add arpl push add add imul sub and dec add arpl add add sbb add insb add inc add jae arpl jb imul imul add add push add insl add je add add popa add imul add add popa add je jne jb add add add insl add outsb add add add add add add imul push add jb jae imul add add xor add add add add add add add add add add add add add add outsb add add outsb add insb add popa add add add jo arpl popa add add add add add add dec add add insb add outsl add jns jb imul je add inc add jo jns jb imul je and test add add add add add add add add inc add inc add add add push add add imul add add outsl add jns jb imul je and test add add add add add add add je inc add outsl add jo sub and push add insb add je add outsb add arpl outsl add add add add add imul add add add add add add popa add add popa add add popa add imul add add add add add add jb imul outsb add insb add imul outsb add insl add add jb jo arpl popa add add add js add add add add add add jb outsl add add je dec add insl add add add push add outsb add arpl popa add add cmp or add push add outsl add add je push add jb jae imul add xor add add add add add add add add add add add add add inc add imul and inc add jae arpl jb imul imul add add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add add mov pop or add or add or sbb or jb or and or jg or sub or mov or xor or xchg or add or add or add or add or add or add or add or add or add or add or add add add or add add add or add add cmp or add add dec or add add add or add add pop or add add add or add add jbe or add add dec inc push dec inc dec xor cs dec dec add jbe jo xor cs insb add insl arpl xor fs insb add insl fs xor cs insb add imul insb add gs jne xor cs insb add gs xor fs insb add jb imul add outsb jae outsl outsl insb cs add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs insb outsl jae dec gs add dec insl popa addr16 imul add add imul add add jbe inc inc add push popa jb popa outsb je outsl jo add add je inc add add jb jne jb push popa insb jne inc add dec jo outsb push jb outsb je jb mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push outsl (bad) testl pop dec outsb je addr16 and rcrb xor add jns insb daa push outsl jb add jns incl imul add or push je sub in push lcall pop push xor ds repz fs test push dec bound arpl pop sbb mov shl jae insl sbb and sbb jb popa arpl add lcall pushf int3 pop inc add inc and clc jmp out std nop arpl cwtl lods int3 int3 inc mov mov gs loopne jno add push adc or mov push push or or fs adc pop xchg loopne loope jmp xadd dec dec mov dec dec dec mov lods test dec dec dec movsb mov dec dec xchg nop mov test cmpb dec js in dec dec dec dec je clc hlt dec dec dec dec lock push dec pusha push add mov std fistp jo sub je movzwl mov ss pop ret (bad) in in pop pop push push in in dec dec inc inc lahf int jge mov add push add (bad) mov mov test jne xor pop enter mov mov ret (bad) incl rorb mov mov inc cmp jne mov mov mov push nop mov inc add scas mov mov xchg insb test xchg mov mov mov (bad) or mov mov adc add imulb or cmp pop lock or push mov mov mov mov add rol (bad) fistpl cmp push or push or ret and mov mov push or inc add adc insb fistpl jne aaa sub jne (bad) mov sbbl add pop pop pop push jg push je sti mov xchg cmp jb (bad) fucomi (bad) mov add call ja and mov inc (bad) mov dec ret jmp add mov add pop repnz sub jl mov jnp push sub mov or mov aam or or mov or jmp sbb sti jne sbb aaa mov mov mov push add orb add mov add add and push jg mov mov pushl sarl dec add mov push and push out jae lds rol push lahf sub xlat mov jne icebp push sbb outsb fsts pushf cmpl in pop xchg sub fucomip mov (bad) jo add or lret and mov faddl lds mov push xlat lock in es ja mov add cmp in mov divb cmp jp sub sbb xor loopne xlat push or add loopne jecxz fild sbb cmpsl mov adc jno mov mov or sub cmp adc pop sar hlt outsl mov mov and sbb ret decl loop,pt mov or rcr lds pop cmp jno jge add and mov cmp or or jbe scas adc sti push push cmpl jmp ss pop or jae and shlb je jb inc add aad mov xor jmp sahf nop enter out sub or push or sbb jae mov cmp jae std add jae dec or inc addl and (bad) add dec dec loopne (bad) dec ja clc mov (bad) aas cmpsl inc (bad) or add repnz (bad) xor idivb inc cmpsl jg cmpsl xlat mov push movsb in je mov aas or xor stos scas jl push (bad) pop add jne scas imul and push inc in pop setnp or cli jl add je out ret je cmp inc jle or mov sub push stos mov or pop xor lea adc mov pop fcoms or push out arpl xor data16 ja or imul jne mov cmp mov xchg inc cmpl sub inc popf ss mov loope rorl fdivs cwtl aaa jecxz add cld ss testl sub mov cmp pop push adc pop push test popf adc je imul jo (bad) out or adc jmp push vmread jecxz jl hlt pop sbb or or add push push cld pop pushl mov push cmp arpl adc or fldcw adc push mov sub mov push mov jle hlt inc cmp in mov ret add rcrb (bad) or pop pop pop push adc sub mov ret mov mov jo xchg pop xchg test shlb xchg sbb roll and xor arpl cs or mov imul add mov je bound pusha cmpb mov sbb add fistpl push cmp mov or jg rolb pop test jns add jo,pn add stc add fcmovne or sub hlt mov add sbbb cmp inc inc or fadd jb add or add std push mov cmp (bad) (bad) ljmp sbb add sbb cmp jl (bad) fcomps repnz jb sahf es mov or mov and add jecxz mov sub test cld dec adc adc dec fist je insb or push or push sar fist or xchg or ret incb in push push (bad) xor adc je add cmpsb ret jne sub inc aas mov testb je mov sub cmp dec mov cmp (bad) or push push (bad) mov xor add in jmp ja add add and repz bound inc or andl mov pop xor jmp adc add dec xor dec (bad) mov cmp (bad) add push lea sub cld jg aad sub (bad) sub cmp jge mov lret mov out insb jmp daa xlat add lea and in mov dec push fucomp aad (bad) lds stos clc add std jae lea (bad) xor cmp mov xchg (bad) jp push iret mov add sub cs (bad) aaa adc pop mov enter mov sbb pop mov sbb cmp adc push pop add sub cmp negb jl mov pop mov pop sbb adc (bad) jle adc or inc mov sub adc sbb or pop mov hlt push adc lock mov inc mov pop push jo mov fist mov es push mov cmp pusha decb xchg lods sub add adc repz sbb sbb sub sub xorl cmpl mov mov cld adc or mov (bad) mov sbb fadds pusha pop pop or adc int3 (bad) ljmp or cmpsl fwait or xor sar cmp push jg adc jne fcoms stos sbb ljmp sbb insb lea sbb mov jbe push js lods jg,pn pop mov pop fnsave pop je pop jmp sub push sub sbb pop insb fisttpl jle fistpll jne movsb sub cmpl mov es hlt inc add xor dec (bad) loope sub cmp sub pop daa xchg inc mov and jmp (bad) xchg leave jmp repnz jne jmp inc enter xor pop xlat test orb fwait pop movsb lock repz or je sti clc stos jle aas lock push addr16 push push shrl ret pop or sti mov pop pop imul inc sub shl mov movb pop inc scas (bad) jne clc outsl addl jmp mov fdivl inc (bad) pushf or push push add or pop or jo push or jbe jmp jo xor mov sbb sarl sub mov add arpl sbb pop das jmp inc (bad) arpl ss sbb and popa aam pop pop push push sbb jp adc mov test (bad) jo xor in or ss das lock test jne test ja (bad) or movnti add push add loope push or jb inc xor (bad) jge inc mov or cmp clc rclb out mov mov cmp stos loopne xchg paddsw push jl sbb dec mov adc ret sbb cli xlat call orl jmp mov cmpl cmp (bad) mov push adc or adc sbb and mov mov jg sbbl mov mov icebp add loope add push or lock adc lret adc sbbl notb jl loop cli add mov sub add negl add push in loopne mov push pop ret or mov ficomp fcomp push fmuls ja or mov outsb pop jecxz cmpl iret adc jmp daa add inc lahf add add dec or icebp inc addl dec add sbb sbb cmp and push pop mov pop pop fistpll or js push xchg mov sbb cmp xchg ret push cs jmp add ret subb or and inc jnp pusha push sub incl popa jp cmc adc push lods lcall mov adc add mov out adc xchg ret (bad) mov sub test bound les aam adc mov add adc decb popa lock cmpsb test jle call mov mov xor mov cmp lret inc je fisubrl lock xor sbb enter movsl mov sbb push (bad) mov xor add aaa cmp imul arpl push mov dec hlt cmpl scas pop shrl inc or rol add push cmpsb push push inc sbb pop or xor jg mov adc inc jle movsb fdiv popf jecxz cmp lods mov cmp lahf cwtl add notl fist cmp ja mov mov (bad) aas ds pop mov adc push enter mov push push push xor xchg mov pop jne xor pop mov ret xchg iret call mov lock mov sub sbb ret (bad) fcomip sbb rolb jl cmp jg add mov inc rep jmp mov outsl pop in leave jmp mov jl pop cmp xchg pop adc mov sbb (bad) mov cmp fldln2 dec clc divl je dec js rep xchg mov fwait mov xor lea xor std xor clc mov ds inc mov fldcw movnti pop push sub fist fwait pop testb or fsts dec or es rcr insb or scas fldcw pop inc jbe dec ret aam push int3 adc pop sub dec jle cld add (bad) push fdivl mov fimull sub (bad) (bad) fwait scas adc sbb je mov in xor add mov xchg adc xlat clc or sbb sbb pushl mov cmp mov ja and idivb jb push sbb lock adc push sbb sahf jmp cmp data16 xor mov cmp mov lret mov inc inc and xchg xor mov mov inc inc xchg ja add push shr je mov cmpsb pop push inc dec aam dec fcompl sbb aaa in aaa or jne jmp adc add adc (bad) loop je mov cmp jne push adc add adc outsl pop loopne add jne add cmp cmp jne cltd xlat icebp or jmp add push mov shr or int3 in dec pop cmp shl mov mov out mov cmp jne dec dec inc sarl dec and pushf mov cmpb fcomp fdivrl adc mov (bad) pop aaa in popa adc stos pop daa push shrb cvttps2pi mov push inc test je mov out jae or je or je and je push imul xor dec and clc (bad) pop je,pn jmp or or cmp ja lea mov add push outsb out int or jge jmp inc shr decl mov js pop sub jmp inc inc jmp mov mov (bad) popa jb xchg and mov ja add scas leave pushf add call (bad) cwtl pop xor mov jge mov inc mov mov pop (bad) fistpl inc mov dec jne pop cmp push decb xor fpatan cmpsb mov fwait icebp sti add je adc lea mov adc lea fldt inc into out pop and add je das inc cs adc inc xlat jmp pop xchg xchg push xchg jge mov xor call jmp fstp fldt pusha xor adc out mov jl in inc je adc mov inc sahf enter inc pushf or and and adc xchg (bad) jl mov out sbb xchg sti lock and inc mov mov lock mov stc (bad) xchg sub sub pop jecxz (bad) stc xchg pop add leave sbb mov cmp ficomp call mov bound cmpb (bad) pop mov xlat fadds outsb xor xchg push or push push pushl mov ret inc mov push pop test enter mov (bad) jg push inc push and daa (bad) lret into pop inc test xchg clc js aas sbbl (bad) (bad) (bad) incl (bad) mov addr16 leave repnz bound and cld gs sahf mov sub (bad) popf imul pop js inc mov stos mov cmp or mov xchg test stos pop out sub imul (bad) divl jl xor cmp call (bad) jg inc mov sti jmp stos push inc mov push sbb sarb repnz (bad) (bad) (bad) incl nop fildl daa movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov pop pushf mov (bad) (bad) (bad) jmp repz loope jp iret inc bound ds push cmpsb scas mov (bad) (bad) (bad) call or addl cmp xor in cmp sahf xchg pop cmpsb lock lcall mov mov popa movsb mov and addr16 repz mov addb xchg and and outsb bound xor jmp scas cmpsl xor repz rolb or pop jne push pop and add lods mov and mov bsf movzwl decb cld push push push pushf (bad) mov dec xor push push in (bad) xor movl xor hlt push data16 add mov gs test jg adc out mov jmp push clc pop dec xchg aas or adc (bad) (bad) decl push push inc push inc pop inc outsl jb popa outsb fs inc gs jo imul push dec popa adc and jae push popa insb jne fninit fwait jne jg aad mov adc lcall lods lret xlat mov xor mov inc ljmp or add mov or dec cld jne dec mov xor out cmp repnz mov inc inc fmull shrl mov jle and sbb adc aaa and mov add outsl test or out fsubp add sub movups repnz hlt ret xor and outsb loopne mov or push cld cld incl jl mov xor push shr dec rep pop out inc jnp stc mov mov sub pop mov pop test pop add sbb in cmp je pop mov add jae daa push mov mov push sbb cmp ljmp lods (bad) mov mov mov pop adc cmp xchg aad pop cmp (bad) jb (bad) or and jmp rcrb sub adc roll adc inc fcompl scas push mov and push scas jo cld mov imul mov shll push adc mov inc adc adc clc mov leave push mov jmp add pop (bad) rclb mov mov dec setne call dec mov sub out mov stos pusha js sarb aaa dec icebp in cmp jne jb cmp fmull or jne push dec (bad) xor or inc inc fsubl popa sbb or mov and aaa xor es call mov mov cmp je mov leave jne mov add jle jmp lret loopne pop sbb push add repnz je pop in negb sub vaddsd shrb mov pop cs xchg test aam pop ljmp cs jecxz divb pop jne das mov sbb xchg mov les cmpl inc pop int jno push in or data16 bound stos pop push pop fwait mov in popa lock xor inc ds xchg adc mov dec push cmp sbb add dec jne icebp fucomi sbb sar jmp add sbb jecxz dec cmp jns pop cmp lahf push popf enter xor sbb lcall pop jmp push xor call je push pop add mov jl push hlt xor test outsl add mov mov movl pop xor or and dec mov or dec dec mov (bad) sub adc push clc (bad) sbb xor (bad) sub add and pop xor pop push cmpb jmp in (bad) in push call jns inc mov push pusha push push cmp repnz xor or add sub mov add or jae jnp push lea xlat pop push push and (bad) scas fcompl mov cmpb je or jne movsbl inc inc jmp sbb pop addr16 pop and nop flds push aas loop pusha fsub pop fdivrl adc rorb (bad) push testl dec jne fiadd push mov negl outsb xchg and adc aam adc icebp (bad) sub out push sbb rorb cmp lods xor clc cli out push je or sub mov and push dec mov push insb jb add stos imul enter adc js push jne push (bad) ljmp jns je orl out mov sub adc mov push push mov call jnp rorb cwtl movl loope add test jle aas aaa mov mov and mov mov cmp xchg dec or add mov pop cwtl push mov or add lea mov add aas ret pop repnz addb cmp jne sti sbb sub mov (bad) or mov sbb pushl push dec jne mov (bad) xor or ja inc jmp sbb inc mov lds xchg adc adc mov add cmp and cmp mov cld jmp push cmp setge jl aas sbb cmpsb movl or mov call inc jg add fcomps cwtl test cwtl pop push push push push push mov adc stc es cmp mov mov cmp mov or cmp andl (bad) or cld mov rorb imul lea cmp mov push loope sbb insl insb jmp ret xor mov push xor xchg ret sub divb add (bad) jg je cmp push sub mov cmp pusha add sub jb je jmp cmp outsl lods (bad) sub adc jmp sub (bad) (bad) fisttp je jmp mov jmp mov jmp mov jmp mov jmp push sbb (bad) call mov jmp mov jmp mov jmp mov jmp mov push mov push or or pop (bad) sbb mov jecxz (bad) push jge push xchg lods push insl outsl jp inc cmp inc pop test mov je rolb or mov out push inc sti and inc pusha add cmpsb push sub fdivs xor scas rolb pop xchg movsb fmul cld mov xchg sti (bad) shlb xor scas or sbb cmp cmpsb add or stc pushl add and xlat imul or jg add mov mov jle dec (bad) notb mov add call and push rorl jecxz adc js loopne rorb insb mov sbb dec mov ret xchg js mov repz mov mov add (bad) sbb jg mov movl jecxz lret push fnstsw inc mov aaa mov cmp movb fildll sub jp cmp test push (bad) sbb das loopne fadds dec dec mov dec jne pop push push nop ficompl inc pop sbb std add out add mov loop ret movsb xchg or mov add push mov mov pop cltd idiv add rol mov pop add mov jbe mov mov jne rorb mov push push xchg out out jbe lahf xor sbb inc movsl ljmp adc ja add mov mov sbb pop push cmpsb dec mov cli (bad) inc push cmpw jl cmpl add popl xor stos jmp xchg mov cmc hlt add pop adc daa in cmp xor in stos loopne pop adc cmp or (bad) xor orl add mov sub aas adc xor (bad) ror pop mov call mov jne dec and xchg sub aas mov (bad) loopne push jne cld mov and mov sub add pop jecxz imul push js scas xor or cmp je es mov inc popa mov mov ficoml push jne fldl loopne cmpsl adc xor add lock ret pop push lahf inc das loopne mov mov inc sub inc mov jne movsb pushf mov dec clc dec jl popa mov or push lea push scas sbb push push les push sbb in jb movl ficomp stos dec jne cs and inc jg mov orb sub sbb ret dec mov fldcw jmp jbe xchg adc test or aaa jl (bad) jle push add loopne push fnsave (bad) pop movw and adc mov sub insl cs loopne daa cwtl mov mov das stc pop sub (bad) mov loopne ds cmp or pop fdivr arpl or adc pushf imul loopne (bad) in xchg add xor popa clc fdivrs mov ljmp (bad) jmp lea cmp push or pop sub into mov sbb js jl sbb (bad) mov and fistpl addr16 push jl movsb fadds sbb add cmp call loop or mov jg and or jle andb add xor aas das neg call pop sub jmp push push je fisubl pusha and pop pop or or addr16 in add sarb mov or out shlb push dec repnz mov mov das sti pop add pop pop xor jnp jbe push and pop cld ret fnstcw inc shrb or (bad) xchg sar or pop add aas js ret lahf push je mov pop shrl cld add cmp pop and jp iret fimull mov sub push out popa cmpl (bad) (bad) cmp je cmp mov mov xor scas rorl add hlt movl dec mov cli dec and std lds push sbb mov clc mov mov jmp insb mov decl imul cmp mov ret jmp dec sub add cmp fs fdivrs mov cld push paddd jge and aaa add dec jmp and lahf push mov mov ss add pop cmp xchg dec jne mov or add aas dec jo scas and lea jmp xchg inc ret mov add push orb cmpsl sub (bad) imul cs mov lcall pop mov inc stos xchg or lcall loope jo stos and push pop rcr sbb or sub clc inc das lods hlt stos shr pop add add lahf cmp xor cmc mov adc pop adc dec adc movsb inc es mov aaa pop inc cwtl cmp and ds mov es jl cmp jge sub inc xchg sbb adc (bad) adc shr in jmp and sbbl pop hlt jae lret jl sub lock outsl mov mov add stc add lea pop or movsb push push cli mov repz lahf cltd mov jg mov inc dec jge cmp adc imul xchg gs cmp mov mov lea add or clc mov in add xchg xor mov push mov dec js mov inc jb adc adc sub in pop push faddl xchg fsubl and cmpl aaa pushf dec out and sbb push or or loopne clc pop push jecxz or and (bad) lods jmp xor sbb (bad) arpl cli pop ret aad icebp (bad) pop icebp or adc ret push push test add adc pop imul das loopne mov jbe sub and cmpsl push cmp call jmp adc push pop in aas test push jno xor mov jle shrb ss ffree lock or aaa sbbb ret ss ljmp subl push das int3 mov pop pushl mov and pusha sub add fimull outsl add add sahf inc pop fwait pop xor add jns push je mov adc in xor insl mov cmpsb add pushaw and push cvtps2pd or xchg pop adc out stc jle loopne push inc movsb cmp jge or adc pushf push ret std call cmp push lods add add dec or add and je jle cltd xor adc stos add lods sahf std mov leave xchg fstpl mov dec sbb adc sbb adc aaa hlt scas mov out sahf mov xchg mov xor or or pop std (bad) cmp je cmp je cmp je cmp into cmp je mov shlb dec mov inc adc or adc cmpsb out mov aad push or push mov dec cs adc cmp pop jmp cmp inc scas cmpsb cmp push push mov push lahf cmp arpl or aad cmp call call adcl sahf out push (bad) and cmp pop or push mov and mov or insb jmp lret cmp daa add sti aaa ja xor push dec and pop mov pop lret and (bad) cmp fucomp sub sbb jo data16 ds jmp ret dec sub adc mov cmp push adc clc pop addl or in cs pop outsl cld sbb clc push push add sarl push mov stc into pusha or push mov cmp xor (bad) pusha or pop dec or arpl pusha or mov cmp pusha adc and (bad) call xor inc push fistl jmp and inc in cmp mov push ret jne dec add inc dec cwtl div jle or or jmp aas add sarl jb cmp xor mov fcoml ds adc popa and loopne mov adc pop rorb jo or iret mov cmpsl or insb and mov in inc in test xchg rorl sbb lds dec jne sub testl sub loop (bad) mov adc les lock xor add es ja sti add add (bad) push ljmp adc jo add je cmp call lret or and (bad) xor adc in pop mov push mov push inc ja test cmp sbbl jnp cmp mov jge and (bad) jae or rcrl pop pop ret jo std outsl js push dec aas pushl sbb ja (bad) cwtl mov (bad) push xchg insl pop jno mov add mov mov test jg mov mov jne loope pushf ss lods js add push les dec lock popf sub cmp push push mov inc add (bad) pop push jl call push sbb add pop test jle mov imull dec in in cmp je xchg mov and pop (bad) fnop cmp jne mov cmp jge mov pop lods pusha imul sub test iret add inc loopne push in mov addl jnp fcomps in jge or pop in test in push add in sbb (bad) pusha push add dec shr (bad) ret add movl or adc or (bad) jg fadds ret cmpsl cmpl jle cwtl or xchg inc mov jl inc or jae ficoml mov push dec jne enter cmp adc in cmp add dec test cmp xor lock jne dec std les stos push xor pushf inc xchg xchg pop addb adc dec mov inc rol imul push push push mov incl out and cld pop pop mov push (bad) in sbb pusha cmp stc enter add jne mov jne sbb jl add mov pop jnp jne push push ret test les add or push inc adc or add jbe pop (bad) mov mov or clc inc (bad) jne or ret adc jecxz jmp sbb pop fild out sahf nop mov fnsave cmp popa xchg pop mov jmp push mov movsb or pop test and cmp rcll sub les jbe inc mov cmp js pop push loope sub sbb test lods and cmpb testl out in hlt lods sar jne movb fisubr pushf lea (bad) fdivs popf jno rolb imul roll cli dec jg lret push les xchg and cmp lahf insb (bad) and je xor loop cwtl lea neg cmpsb add cmp test mov fdiv sub dec push push mov push int inc lret test mov mov inc imul gs xor cs insb pop inc gs outsl outsb addr16 popa je stc ret dec popa insl gs daa outsl loopne jg ja sbb fstp pop movb adc addr16 push sbb mov cmp push xor repnz js ret sahf icebp push xor test mov jns aas sub out xchg into pusha addl shrl iret pop cmp push ret push repnz push inc jno dec popa pop sti lcall push lods repz loope jmp js push xor cmpb dec (bad) fdivrs call shrl xor (bad) jnp sbb add sti int3 hlt dec cmpb stos pop cmp jne adc and inc cmpb rcr or int3 sbb add insb xlat nop sbb fs ret inc xor xchg jecxz insb cmc add (bad) mov outsl data16 popa jb pop or popa insb gs aaa add cmp push ja mov mov nop dec add sbb mov sbb xor push inc sbb pop mov inc mov sbb lds jp mov mov sbb icebp mov mov aad scas rorb fstps jge mov push pop fadd mulb push sbb sub or nop inc dec add or mov daa sub xchg mov (bad) ja mov xor or mov fsub mov ja aam call cmp test in jmp mov das enter push cld jne pop fs mov ljmp dec pop mov or or scas out sub data16 cmp or inc js push inc add je sbb jbe notb mov test pop xchg pop sbb or fidiv sbb sbbl lock inc pop adcl mov jle ja xor fadd or jge mov pop add ret xor xchg mov sbb daa dec js adc (bad) mov (bad) or addr16 jno push xlat sub mov pop imul mov addr16 jp std ret decl call inc cmp ja mov inc jmp cmp pop add jnp mov push fcmovb jmp or mov adc sbb mov pop xor and lret add xchg mov jmp pusha add dec pusha rcr xor inc add dec or cmp jb or adc movb and sbb mov dec jbe pop add inc rcrl push rol mov dec test lock std mov lea imul fcmovb push dec andl ja jbe insl fdiv cli (bad) js jg or inc test je or jae cmpl cs adc add pushf out inc cmp jne cwtl and mov loope or mov pop lea jmp dec dec cld mov adc pop pusha mov inc lcall scas sbb or movl and inc inc mov ret mov sbbl sbb fmull jnp xorb sbb or jb inc arpl mov pop inc xchg out scas mov sbb cmp (bad) mov xchg in das cmp mov pop adc testb mov adc adc xchg fnstcw rcr pop xor inc push and sbb pusha inc aam mov dec outsl push sbb (bad) enter jo stc xchg add mov push popf pusha mov imul pop pop iret add add fadds bound and sub and mov outsl inc lods inc xor push ss cmp in pop cmp test jb add xchg mov mov cmc mov cmp jge push pushf (bad) leave mov sub hlt pop push inc std add push out loopne,pt or (bad) xor push out pop mov push lock push lea push push into cltd pushf lock fimull xor mov or xchg je xchg ret mov bound enter jnp daa mov xor mov and and sbb in jae or mov sub push cmp movb stc (bad) jo and dec mov pop inc adc cmp lods data16 xlat adc call mov dec add sub inc jge lods add cmp jbe xchg push add and or sub mov outsb and in mov and (bad) rorb in push push dec test inc mov test loope aas inc cmpl ret loop dec pushf inc or out call push mov sub mov in test jne mov in push jns push mov sti mov lock mov ret mov hlt movsl lret mov (bad) dec jl fs mov test cmp mov sqrtps mov leave jecxz dec push (bad) sarb xor or out mov add and adc (bad) aam add jbe push fnstcw add add push or cltd in out and or sub jo add xor cmp or in in ljmpw gs jb jns pop (bad) popa bound inc push idivl jne inc gs jne je dec outsl je imul jbe outsb popa mov gs outsl inc arpl or imull ret or jb xor (bad) (bad) (bad) mov insl bound outsl js imul ja nop in lock (bad) (bad) push andps outsb dec inc xor je jbe arpl add sbb (bad) xor in and jb adc or in jbe jb add lahf clc setae leave leave hlt lock aas call in fnop xchg xchg xchg xchg aam int3 enter xchg (bad) sarb mov test xchg xchg xchg movsb mov xchg xchg xchg nop mov test xchg xchg je insb push fs pop pop xchg xchg xchg xchg push push dec dec xchg xchg xchg xchg inc inc cmp xchg xchg xchg xchg xor sub xchg (bad) orl leave leave leave enter pop push leave leave leave leave push dec dec inc leave leave leave leave inc cmp xor leave leave leave xor and leave leave leave and adc leave leave leave adc add fs add cmp in in lock call in fnop aam in in int3 enter in sarb mov test in in mov in in mov in jl je in in insb push in pop pop push in in push dec dec inc repnz in cmp in jb jb loopne int3 enter jb rcl jb jb fdivrl jb lods test jb jb mov jb jb mov jb jl je jb jb insb push jb pop pop push jb jb push dec dec inc jb jb inc cmp xor jb jb sub and jb jb sbb adc jb jb or add sbb add test hlt cmp cmp lock call cmp fnop aam jb cmp int3 mov jb sarb mov test dec dec outsb pop mov in dec dec nop mov test in je insb push fs pop pop in in push push dec dec in in inc inc cmp in in xor sub in in and sbb in in adc or xor in add cld test jb jb hlt lock call in fnop jb jb aam int3 enter jb sarb mov test jb jb mov jb xchg nop mov test jb je insb movzwl les rol loop or inc dec adc fisttp inc dec xor push out cmp adc jo push mov pusha nop xor jmp outsl insb mov scas push mov movswl add inc and inc pop dec lods test pop and dec push jge push sub lods mov lods cmovle rcrb int3 out add jle mov rorl adc sbb and sti add pop pop xor (bad) (bad) and hlt mov xchg pop ret or push mov scas cmpsl add and out push add mov pushf or push shrb pop push sbb push push sbb ret cmpsb imul cld ss xorb repnz xorl xchg inc (bad) push popa add rorb add gs xlat (bad) out mov push dec inc inc dec add outsl inc pop push clc jge addr16 dec push inc push dec pop and out mov push push pop sub push inc dec pop dec dec dec xchg mov push dec cs adc leave sbbb js xchg cs js lock dec dec cmp icebp repnz dec dec dec dec cmc div clc dec dec dec dec stc cli sti cld dec dec dec dec std (bad) jmp dec dec dec dec loope jecxz dec dec dec dec in out dec dec dec dec jmp dec dec dec in out out rorb dec dec rcl rcl dec dec dec dec aad xlat fmuls dec dec (bad) fcmovnu dec dec dec dec fstp ffreep dec dec dec dec rol les dec dec (bad) enter dec leave lret dec dec dec dec int iret mov dec dec dec mov mov dec dec dec dec mov mov dec dec dec dec mov dec dec dec mov dec dec dec mov dec dec dec movsl cmpsb cmpsl test je dec test nop sbb dec jl insl ret mov add (bad) (bad) pop daa ret add xchg and add add inc js gs imul inc mov fs adc inc dec gs jo nop je call leave je or dec jne dec dec gs lock outsl jb shrb das adc sub mov dec outsb mov sub ds and scas lret add add inc (bad) scas add test xlat or mov mov ret loope push sbb jo ds outsl pop insl sti lahf or imul nop nop scas nop in push and popa outsb addr16 push adc dec jbe and outsb adc out jno inc inc or xchg dec pop mov pop int3 gs pushf scas pushf adc inc sahf clc jo jbe pop in ja imul pop pop sbb insl jle inc pusha mov dec jb ds cmp loopne (bad) rcl popa add mov cmp mov cld scas ds ret adc (bad) movsbl notb outsl imul pop je or ja jge nop or popa jae fidiv mov inc inc dec dec and ljmp jo and add lock push adc push and in jbe mov sub fs inc ficoml inc sbb arpl dec and andl insb call aam inc (bad) jl push fsubs or push popa sbb fdivs fmuls mov popa fsubl and mov jbe mov push bound inc dec out xchg mov popf sub or jo fsubs mov loope loopne or stos pusha mov repnz dec ja pop test cmp mulb pusha jle add aaa xor pop (bad) inc loopne dec invd jbe inc nop int3 (bad) shrb inc cmp inc and mov inc xchg icebp outsl cmpsb push mov push jg xchg add jne int3 add jb mov test sub aaa and scas adc repz cmp scas cmp inc xor iret adc and xchg mov jnp sbb push loopne sbb mov push insb push add xor xchg adc push and dec cmpsb imul and xchg push fadd rorl push lods outsb arpl cmp fdivs inc test shr jbe lock repz mov add cld cmp fmuls lret mov mov or mov mov pop add mov adc inc andb pop mov push (bad) out scas xor adc or mov mov mov cwtl dec call fucomi mov xchg mov adc pop xlat in adc sub jns add cli sti test inc pop sbb mov adc push cmp ja xor incl sub mov inc inc dec loopne jg repz ja pop add icebp fimull or psubsb addr16 cmp jbe push leave repz je movzbl push push decl mov repnz pop sarb pop mov pop bnd pop lods fldl inc inc ds mov xchg and or in mov (bad) (bad) out and sti je loopne jmp pop imul pop out sbb pop lcall ret push (bad) jo cltd adc xor adc adc scas xor mov cmp push rorb gs arpl push adc test ds push cli push inc sbb mov out add mov adcl pushf insl jo jnp push adc xor mov mov mov inc cmp jl aaa push aam cmpb jbe adc sbb insl cmp sahf notb dec sub clc push sub inc nop lock clc jno js lock sti call icebp fmull sbb sub je rorb mov (bad) jae cmp jl inc mov cli mov rolb push dec imul stc pop or (bad) jae ret sar inc dec jne cmp pop sbb divl mov inc dec cs mov (bad) div dec mov cli cmp ret push push jg (bad) jg pop pop sub sub jbe add mov sub jmp mov dec jne push mov add cmp in adc leave push outsb cltd nop mov pop mov xor (bad) xor adc mov loopne sbb subl inc pop je pop insl xor xchg sub aad sahf cmpsb mov (bad) mov and sub mov (bad) inc mov andl push and fistp mov jmp ret add add sub add rorl (bad) fdivr mov or sbb xor aam lods jg lods push sub rcrl loope dec lock dec pop ffree ffree ffree ffree pop aad addl movsl out add and and sahf jbe jecxz and lods loop das cmp add push mov sbb push xlat and sub (bad) fsubs pop js add roll mov fimull mov lock outsb mov or repz (bad) lcall add mov nop cmpsl mov xchg outsl mov inc push sahf jno sub rolb jbe ja in (bad) popa ds dec mov lods mov xchg pop mov movsb sbb icebp loope enter pop jo add clc and mov inc call and ret lds mov lods imul lcall mov push adcb out adc xchg fimull pop pop pop orl loopne sbb xchg add dec outsb mov btr lcall pop outsl sbb addr16 dec imul inc mov dec ret fldt or pop sbb cltd das sahf icebp bound add inc push mov and adc jmp and rcl and xchg cmp data16 or out cli sbb out cmp ja jo loop orb (bad) (bad) inc ja or push add inc push push sub test add dec mov mov (bad) in jle sbb dec xor mov rolb (bad) jo movsl xchg scas lock push pop pop jmp push dec test (bad) out addb cltd pop leave or adc or xchg push lds xchg push push stos lret shrb add cld loope jmp sbb je aaa mov pop aas test xchg ss lods xor add fild into xor cmpsl jmp addr16 fisttp or call ds sarl mov push dec add jg pop cmp std pop cli pushf sarl (bad) lock xor xor pushf mov loope jo aas pop cmp cmpsl lock xor (bad) mov cmpb pop pop jne,pn push jg (bad) jmp dec in dec out xchg (bad) or cs fidivrl pop cmpsl push mov push scas pop mov enter cmpsb push sbb call loop xor xchg mov clc cld push jnp das cld xor loopne insl clc out inc call hlt sub hlt adc call daa dec sub dec or xor xchg jb adc inc mov nop enter xor imulb mov mov ret das lea push pop mov or xlat mov rorb notl pop sbbb pop pop ret ja fadds cmpsl push xchg mov mov push rolb pop add lret popa and mov fnstenv pop addr16 inc cmp sub push loop adc pushf out in dec and ds pop iret sahf imul call outsb mov xlat xor repz mov mov mov loope addb cli ljmp rolb xorb inc mov mov xchg in (bad) test jmp jl ret inc sub jne scas in add fisubrl xchg mulb addl cs mov pop sub jbe sbb cld popa lds mov mov push add mov jne add or mov mov push rorl roll cmp lds inc xchg or inc mov jne push shll dec iret ja imull add daa fcomps cmc or jbe mov lahf ljmp jne les push test fiaddl cmp inc and and jo lcall minps and sub scas rclb cmp sbb (bad) mov rorb add xlat lea mov cli into (bad) (bad) add in ds jge adc jp cmc mov out or jne out add jns sub xchg sbb jmp mov cmp sub lcall cmp jne cs and mov jmp sarb dec jp cmp mov fsubs ja pop mov mov jge xchg or lret ror movsb xchg rcr popa pop mov rep sbb cmpl add jne pop pop mov insl scas pushf jmp sub cmp clc das icebp ja imul mov add and push pop dec inc xchg ljmp inc cld or repnz clts aaa je ret je xchg ret and mov xchg cmpsb cltd xchg push pop pop jne xchg fimul jmp push mov daa mov push push iret scas mov leave repz xchg ljmp push mov mov or adc dec fsubrs (bad) xor sub fisub and xchg (bad) addb xor jmp cmc xchg fwait out imul movsl fldcw adc mov cmpsl pop outsb adc cmp aas imul jg jb and cmp jne adc cmpl jbe mov xor sbb lock xor inc inc add xchg jmp mov mov in add and cmp call pop js mov pop mov mov ss inc in dec fdivl or jmp rep out and dec mov cwtl pop ds cmp dec leave or out mov add int scas nop bound aas mov or je mov inc std imul dec je dec jl mov mov ret jbe cmp jbe mov in clc adc xchg adc fdivrl movb and test loopne mov inc iret dec jnp cmpsl aaa mov mov xchg ret xor and dec int3 lahf ds add jne add daa (bad) and loope push fadds mov fdivrp jbe lock fdivl addr16 jg xchg inc push (bad) sbb test in ss dec sub ror jp mov pop lcall jp in adc add sbb (bad) clc dec cld lea test fucom jmp dec ffreep xchg add xor xchg pop insl mov insb loopne movlps lea cmp mov lea lock xchg ja push xor dec dec loopne stos or orb jge mov neg jmp or enter xchg and jbe push mov mov xchg xchg mov inc dec mov or jg dec mov stos cmp jne pop pop sbb add dec fild xchg lcall mov cs mov repnz (bad) (bad) addr16 in mov sub cwtl add jge aas into mov mov cs jg cmp adc jb (bad) (bad) mov cmp jge movzwl cmp je sbb jl lea mov sub sub adc (bad) (bad) lods push add ja movswl mov add or lea mov dec repnz cld pushf jmp addl jo dec dec inc dec inc dec lods or xor or (bad) add ret std ret mov aam adc jg cmp jl pop sbb stos je,pt mov stos imul fildll stos jmp inc inc mov loop enclu mov inc stos pop pop inc clc dec ja adc push mov push mov imull jno push dec sbb sub das clc add inc mov mov test insl cmp cli adc mov mov sub or or repz inc sub test jne sbb insb in stos cmpsl or call loope testl dec je inc jne pop mov ret mov bswap xchg repnz or repnz inc cmp icebp rolb fwait test and jle inc je push push cmp (bad) fmuls ja mov sbb jb movsl mov sub inc loop push mov test add inc add and and fucomp idivb and sub inc sub sub cltd cmp push sbb and into mov sub or ds push xor sub xor flds loopne add dec je pop das (bad) jg orb jle mov or movsb cmp idiv lret sub inc push ret or (bad) add movb jg push call je imul or dec fdivrs out pop jo inc fabs push adc pop frndint push pop jge fldt fstsw fwait mov testb je fidivl xor pop fbstp lea mov inc sub ret ja shr and add add shrb jns and jg jge inc cmp pushf or cmpb jb xabort jnp sub dec js decb and pop data16 ja mov jmp mov fcmove push jo je notb cmp ljmp push out xor jge pop push adc mov iret adc test mov fadds test incl ljmp mov cmpsl sbb jae dec add aaa sub mov fildll cli clc xchg push dec or mov sub mov sbb or pushf and jne dec dec dec hlt pop sub cmp and mov inc ljmp enter or push into cmpb divl pop jmp xor je mov iret cmpsl lock pop das add in dec and push setle xor mov f2xm1 fwait cmpb pop das push fldz cmpsb or ds lods or jne inc leave sbb sbb in aam pusha jne inc sbb dec and (bad) cmc fdivrp cmp jne inc push sub pop add jg jne mov xor add ja push mov adc aas jmp in xchg outsb (bad) fstpt xor test xor lods add add mov int cmp mov test or fimull pop (bad) fiaddl jmp aaa mov div lahf inc imul imul add add cli hlt nop jb aaa add cmc sbb sub xor pop aam (bad) push je test test push sub adc fistp sub enter in test scas addr16 mov sub xchg sbb pop lcall aam fldt fstpl fcoms (bad) test mov out xor adc mov ret or (bad) out xchg mov divl cmp adc adc jo test (bad) clc out mov mov jae or cmp xor push and dec dec insb sahf jae in data16 add imul adc fxch dec sarl adc mov and xchg push fstpl fwait (bad) or aad out in outsb lret movsb push popa inc mov lcall cmp hlt mov sbb mov push adc mov push mov cmp push iret int3 jmp iret and mulb aas or enter loopne jp xchg and fldcw xor div lods lret lods dec rclb mov or xor pusha arpl loop sti lcall subl lea lea fmull jge add (bad) xchg fwait orl (bad) jb or jb sti mov push sti insb cli (bad) cmp ja adc fisttp lds pop dec incb jne sub roll cltd idiv imul loope rcll mov stc add pusha ret or add rol std std pop inc xchg addl int3 insb shr in test jg dec cmp push clc adc or inc pop test ds inc out dec mov add cmp jl addl es ret inc and movhps inc lods mov in scas add decw cmpl fs negb add push sub ficompl loopne cmp add sub sub inc pop mov mov mov scas ret (bad) adc cli js mov loopne insb pusha loop cmp jb fnstsw xchg sbb inc jmp fiadd fisub hlt and hlt mov cltd jbe push daa mov mov (bad) xchg test pop popf mov cmp int cld mov icebp add push pop rclb rorb adc mov lock mov inc sbb xchg and idivb cltd out cwtl xor ja mov or fcomps sbb orl jb cltd push movsl sbb (bad) push mov int dec add pop arpl sbb mov pop loopne xor mov mov mov dec sti je fdivrs addb push cmpb and loopne jne pop add add mov lea or xchg repnz jl movb rorb add jecxz lahf lret in push in jge call cmpl nop xchg sbb adc and sbb fidiv cwtl jmp jo inc xchg addr16 push out add xchg push lock mov cmp js xchg push or lret mov jnp jge xchg push mov pop pop dec leave mov fcompl je,pn or mov add lods mov pop insl pop cmpl sub xchg mov cli adc add xor xor adc adcl sbb ret xor sbb test test imul fsub add jmp push in dec ds in ret jbe xchg bswap test lock cltd aaa mov jecxz push inc cmpb and xchg jne push or (bad) cmp lock jns pop add xchg push outsb cmp pusha inc stos js add fimull xchg (bad) sarl push lock pop mov pop lcall and dec push jecxz mov js inc nop in (bad) scas fimul call or jae ljmp inc or lods cmp fs jns add fisttpl mov call or cmp jne mov jecxz lcall cmp xchg mov addb mov loop or fisttp in jbe jle add add or or or mov jns dec fwait push js or lcall in sub jo (bad) jo mov pop or pop jo push and sub test xchg std pop bound das popf dec push cmp pusha out xchg out adc mov hlt dec push mov rcll jmp sbb add mov add movsb pop movsl jbe notb (bad) xor dec add jmp out orb aad push stc xchg call mov mov dec and xchg cld daa mov das in pop lods loope lcall bound mov push jbe jl push add jge mov mov add push jmp dec outsl jg or je or je jmp cmpb dec mov pushf xchg mov pop dec ja mov mov je jne rolb jmp cmp xor jne fnsave add gs pop mov ljmp sub loopne or fimull or or jle mov mov push lea repz inc call nop out add and repnz in xchg gs or jne mov adc ljmp jg cmp adcl push fs xlat jns add sbb xchg ja jns adc or inc jmp and add cltd mov lea adc add lock lret add inc jne ret (bad) repz adc out adc mov out into jge push push loopne sbb popf add and and push imul xchg je inc xchg jmp pop aad popa sbb push test fucomi add xlat mov fnstcw aam jae inc icebp mov (bad) mov or adc jnp inc and inc mov into pusha fsubrs jl into xchg cli cmp inc dec das push dec xchg or xchg cmc jbe adc and dec pop or adc into popf push test push jne or mov xor adc mov inc cmpsl or dec ljmp push adc pop lods dec adc cwtl outsl cmp daa sub je mov (bad) daa mov je dec add mov (bad) cltd (bad) jbe mov out xor jmp mov add pop or ljmp nop data16 add sub jae lock xchg jle push pusha or dec sub js add cli mov fiadd not or sbb mov mov nop inc ret daa push or push dec js mov mov sub and push mov push sub and cld mov inc pop mov (bad) sbb incl jl pop in (bad) cmp jne call push pop lahf mov mov jmp sub call dec je sub sub je jmp mov jmp aaa xchg mov es push inc mov push adc clc jle fadd pop pop bound add aad (bad) mov test add jg mov or pop js mov out call sub bound or lea sub sub cmc cltd jp and test addb jmp xor jo xor aaa sahf test cmp call jne cmp jg mov incl pop cltd xor sub add sahf out jg jg stc imul add cmpl jle adc call and out cld gs lcall fadds loopne stos xor push jmp cmpsl and movl sbb test xchg dec ret popf xchg cmp inc imulb push mov ds loope jne pop xchg mov mov inc sti fadds (bad) fisubrl rorl fwait imul rcl loope neg sbb adc sti in jbe sbb or idiv cmc (bad) xchg lods xchg in test jo dec aaa xor mov sbb ljmp in pop jmp jo bound mov test jmp mov and in call mov mov sahf lret leave (bad) aaa repnz sbb aaa xchg or lock pop push movsb out xchg and push (bad) adc jge add fild fsubrs (bad) push fstps addr16 mov lock mov divb jbe cmpb jle and fs jne mov add or push inc sub ja,pt mov inc sbb ss ja scas xor xor ficoml out cs pop mov shrl jmp (bad) outsb adc cmpb (bad) mov adc fdivr mov mov fsubrl and loop sub fcomps das xor inc repnz out sbb push jl subl sti cmpsb cmpsl xchg or dec lods and push iret fs push hlt aad add repnz fildl stos mov sbbb push repnz lods test je out jmp push pushf mov add shr or pop ficompl je push lahf and ds inc add xor or inc outsb dec cmpsb xchg lret pop xor mov or and inc or add jns add fs test lahf sub and in or ja jne add add add dec lock or and push popf loopne push pop sub pusha jb pop sub mov push les pop aas testb js repnz cltd js and into call xchg les scas ret ficoml in adc mov jno roll dec mov sbbb outsl push cmp ret jne dec pop pop and loopne daa fst fcomps mov fsubrl or fs loopne jle (bad) fstp push je lods cmp push imul aaa add mov sub jb lret inc cmp or xchg pop jno in sbb outsb lea inc test enter mov add (bad) in jmp pop mov xchg repz and push aas push sbb xor les stc dec call jp lods xor movsl cmp rol les pushf or inc rcll loope dec push add lods xlat xchg mov sbb push mov cmp or mov imul cmp mov lods inc lock cmp movl ljmp push mov and pop add shrb testb je (bad) xor in insb xchg int dec call aam inc xor or cmc push or les lods add outsb jge push jl je dec add fcoms add add into or adc and movsb aaa mov lods xchg pop pushf cmpsl jb push ja bound push mov mov inc lods jl add jmp (bad) in out xor xchg cmpsl mov lock ret fwait mov xor dec jbe lock std adcl push push fbstp dec notl xor repnz or in hlt push push fcoms les lea jecxz xor cmovno enter scas pop dec or mov clc loopne (bad) and cmp clc test add jb sub cld imul cmpsb adc aad pop pusha lock je sub je scas ret mov sbb inc lcall cltd jle lahf stos int3 mov sbb sbb lea sub pop lock rcrl jge pop cld jg mov pop call cmovp jo add jle hlt dec add jmp jae add add jmp mov shll sbb add popa nop mov push xor jmp in xchg shlb in jle cld push shrl popa dec xor push sbb push pusha xlat add sub (bad) fildl mov inc add sub imul sti sub test out dec mov and sbb cwtl dec (bad) jne iret out idivb jno aam cmp and inc out add adc jmp sub sbb dec mov xor dec mov inc push repz (bad) or (bad) jo aaa insl mov or clc push shrb sub xchg fsubs icebp dec xor adc xor testb mov iret les cmp and push loopne xchg out mov or and sbb std movb mov aas xchg jbe push xor mov cmpsl jl mov mov imul jne push lea cmp or rorb jae push fcoml add push or cmp xor movl pop inc mov lods and mov rolb dec mov js dec add dec push or inc xor cwtl mov test push sarl popa pop (bad) pusha les push dec enter ljmp inc add dec fdivs sub push sub xchg push sbb fimull mov add test dec adc (bad) pusha nop ja lcall jnp xor adc test in (bad) out mov clc loope pop adc ja incl pop and push cmp cmp out add icebp popf jb clc dec xor mov jl or sti push jg cmp sbb icebp lret jp outsb mov iret push push mov ja or js jo pop pop mov push movsb frstor add test sar lret adc ljmp adc sub jnp rorb cwtl and add inc or mov or mov adc pop loope lret test loopne cld adc sbb add dec sub cmp push add in or rorw jge clc push in repnz outsl push loopne sub dec loopne mov out or mov dec and shrb mov mov rorl and jns push movsl xor adc or add movsl mov pop into int3 in (bad) mov imul pop cmp in push cmp je jmp xor jb je jmp xor cmpsb imul and add push lcall or push push push daa (bad) and loop cld push mov add nop outsb adc mov mov dec dec (bad) pop push mov jnp mov xchg adc sub xchg or cltd inc xchg jae (bad) (bad) adc or repnz cmpsl dec pop adc cwtl sub push loopne xchg mov pop test adc jno insb lar gs cs add mov jae scas pop (bad) or enter rorb add lods aam sbb jno pusha xchg mov mul and outsb les pop sub cwtl mov mov jb xchg add nop pusha nop daa and jb sub adc dec jl rclb adc mov stos std rolb or add push aad and cmp hlt ds xor dec (bad) hlt add mov repnz sahf xor loopne push xchg ret cmp push jp sbb add jecxz lea mov mov outsb nop xchg int mov mov dec xchg and sbb sub xchg dec cmpb sub mov pushf pushf gs jb pop pop mov adc and jl mov mov ds pusha mov shufps adc lods pop inc cwtl cwtl loopne and out pusha push adc push mov and adc xchg ret sbb adc push insb dec and movsb lcall loop and push mov pop sbb add enter push popa sub add popf dec testl sbb add mov mov or int3 mov jl mov jne cmp add xor call pop cmp in hlt test adc jnp les pop sbb ljmp jecxz into mov and push jb fisubr movsb xchg sahf and and pop roll dec xor mov outsb loop xchg inc rorb sub test mov xor rorb mov cmpb mov push pop or add mov (bad) dec jmp dec xorb or and mov sub and lock adc add inc subl add cmp add loopne in and lret jge stos mov (bad) xor cmp daa jge into (bad) xor ja lock inc mov adc clc push inc leave ljmp inc in push (bad) pop jg mov scas das adc sub fildll jl mov and cld lea inc inc jge inc push xchg pop leave dec scas pushf popa mov adc add and xchg cmp mov movsl test jge in fucom jl jne sbb loope cmp push fs scas sub bound mov (bad) and sarb fildll push xchg mov lock cmp cmp or jg xchg or cmp cld or mov test movl inc iret es shrb mov mov rorb push push enter cmp daa push daa outsl or and addr16 cmp fwait add dec sbb inc scas xchg mov mov jae push leave and xchg mov push fstl cmc add lds fild inc jg fcoms push sub insl insl or inc popf xor aad shll aas pop cmp jl xorl xchg mov aas adc pop mov lock stos push mov mov adcb and inc sahf jge dec cld add sbb imul sbb cwtl push ljmp je sub cmpb out loope or cmp adc inc daa shrb mov lods pop mov or je scas push push push in test sub aaa repnz inc fadd ret ret and sub loope orl cmp jbe jp lds outsl aas dec fstl jl mov inc into adc lock daa loopne hlt pop ja and xchg mov xchg push or mov push add xor adc dec push xchg cs sbb sahf hlt sbb stc add stos and hlt xor pop sahf inc test in fdiv pop (bad) hlt mov les jge loope adc jns mov pop or mov div aaa push mov sub jb inc in jb lds stos (bad) sbb pop adc lret jne and cmc sub mov pop jne pop popa repz push clc pop ja pop or xchg sub push sub dec adc (bad) pop adc xor dec mov enter es add push ja cwtl shr mov pop xor xchg mov or testb test adc add sbb or sub subb mov fsubrl or sbb pop loope outsl popa mov data16 cld mov inc inc cmp test inc and inc push loopne sti lock movsl clc imul leave mov or pop jle push dec jne jmp push push (bad) mov es cmp and insl push sub add imul in jle dec jne push lock cltd pushf xchg jbe add je pop jg icebp mov dec lcall cmp (bad) repnz xchg or in jmp hlt cwtl mov testb call sbb in ret (bad) aam sub (bad) fwait adc push push in mov in xchg mov mov sub fsubr insb pop fmul int xchg js popf cld loopne mov and and mov repnz fcomp mov push fldenv mov xchg sarb sub shlb jns mov sub xchg pop int3 mov add and enter add and dec sbb sbbb leave xchg rolb bswap mov fsubr sub cmpsb cld push mov bound sbb leave test cs add out test test sarb cmp movsb insl das fs rcrb out scas insl add fs sarl sbb pop jo pop jmp xchg push push mov and pop iret cmpsb dec call int3 pop inc jecxz xchg push cmp ss popf pop ret in adc and (bad) lock (bad) dec mov lock cmp push enter mov push lcall add or cmp sub mov mov sbb iret sub in mov adc movsl int mov (bad) ss pop mov sbb sbb and pusha mov cmpsb inc repz test xlat jg xor mov (bad) adc sbb iret sub cmp jmp push sbb les loopne xor cmpsl mov or or jb jecxz and les jb gs jo inc pop add inc js stos xchg lock mov jne pop dec ret xchg add out adcb fistpll or (bad) mov mov push or mov outsl sbb inc cmp jne mov and and ss ljmp pop pop push adcl sbbl inc jmp mov sub fnstcw (bad) icebp dec and jmp fsubr enter mov push lods mov sbb mov mov addr16 rolb and sub mov jecxz,pn clc orb or lcall leave pusha cmpsl fild loope adcl lea shll insl test mov sbb or push add into mov movl imul scas sub mov dec sbb cmpsb pop mov xor adc xchg (bad) xlat or cmovae lret lds les mov fsts adc mov cmp push dec mov and imul adc sbb inc or notb pop adc clc sub mov mov jnp ja je push mov push ret xor mov xor seta mov lea call aam sbb mov adc sub shrb add shl mov aam pop lcall ficom dec movsl push cld sete incl xor mov jb out add dec sbb jnp mov sbb incb in mov pop cld add mov js lret pop mull sbb inc incl scas add loopne add inc (bad) cmp pushf cmp or rolb insl cmpsl enter das pushl dec mov xlat inc lock ja dec or dec sbb and inc xor int pop lock mov cmp sbb adc inc push cmp push leave cwtl pop pop in (bad) add shrb aam adcl adc sbb adc lods dec cmp inc les lods add loope mov inc iret jne cld push jne adc insl ret cmp inc repnz (bad) mov xadd jnp aaa xchg cs jge and int3 subl out mov inc jl jmp jecxz xor jbe movsl out mov je sbb adc push push movsb pop cmp imul fdivp mov fsubrl rcl dec iret sarl int3 push loopne (bad) fdivrs and push pusha lods push push movsb popa push pushf fs pop mov mov test cmp cs out jns divl insb js push jo lahf out pop adcb iret repz cmp xor sahf shrb pop fisubr and jmp mov dec add push fnop addr16 pop adc pusha adc pop in cmp or or mov xchg out cmp mov cld push fsubrp popf xor clc push nop inc hlt cs jae dec lock hlt in in cmp in cmpsl loopne jns (bad) or ja pop fsub daa iret leave cmp out add clc int3 (bad) leave cmp aam inc inc les add mov lock leave mov pop pop lods out sub jns iret test movsb push add pop cmp (bad) and daa out in xchg out fcoml in cmp mov iret enter les cmp (bad) movl dec add cmc dec mov sarb lahf or pushf scas sub loopne and sbb push add sub notl fs sbb jnp pop push ja jge sub fdivs lods in test cmp fadds cwtl in inc push nop mov aam (bad) xor nop ret sub xchg xchg xor clc subl jae mov add adc cmp xor jl scas or xor stos inc push jb push js mov decl dec xor lret leave sub or aas cmc push push jge push je mov mov les adc mov loope faddp and ret dec insb leave sub cwtl or (bad) enter dec or and js mul mov xchg add dec sbb adc mov and in cld pop sarl adc jbe xlat dec roll add sarl test push test and cltd in jb repnz sub mov add inc push clc xchg out (bad) or daa stc jl lea outsl pop cmpb cmc sbb movsb repnz je mov pop adc clc les jno pop ret xor loopne adcb jb sbb lea add pop adc fcomps (bad) jb xor mov xchg inc fnop add and and notl mov leave pop std dec fdivl inc lea outsl hlt sub imul xchg fsts cld xchg clc ljmp rcrl (bad) rorb jns push push mov add mov mov add ret push and xor jle add pop mov xchg dec es xchg lret insb in lods xchg dec es hlt mov and pushf fs fnstcw or adc dec xor and les leave and enter xor js rolb aam dec xor repz pop rcrl xor enter aam in leave jl mov xor and pushf in repz nop lods lock ret lea leave mov jp pop jne pop pop add sub inc push addr16 jo daa dec add outsl je mov stc inc fs jne aas adc cmovns insb ja das outsl fs outsb dec jb fnstsw repnz jb inc insl jo inc jb insl push je xor inc repnz push cmp data16 and dec and aas inc jae push imul pop dec add (bad) pop pop pusha rolb cmp inc clc ja fnstenv jne test mov mov xchg lods inc sbb (bad) mov fdivrp and pop icebp inc adc (bad) sbb ja dec jecxz ficoml imul push add and jo (bad) pop add repz add call in mov xchg sub dec pusha clc jnp push xor push fadds adc dec in in mov dec inc cmp cmp hlt and outsb sub je inc pusha mov jnp cld aaa xor inc mov add dec mov mov (bad) fcoms or push es (bad) ds fwait or jmp mov mov pop push inc jb lret add (bad) dec or ds and xlat jge popa adc push push or (bad) int3 xchg push and dec dec ret hlt dec outsl nop mov xor or insb ds xchg or loopne jb sbb pushf or jb adc cmp adc insb movl pop ds inc xor mov outsb sti cmp push divb int (bad) mov outsl inc pop xor jo arpl es xchg pop jg loopne cmp and aam pop dec int3 inc cld ds push mov and xor dec (bad) pop pmulhuw mov aad in add in (bad) lret add das cmpl jb pusha or call jb or es call test loopne jns add in add push loope rcrl fildll sbb cmp in dec xchg test in enter push loop jb push mov fnsave or in loop movl in cmp or jg and dec ret add call clc sub out iret test shl sub dec je sbb or xor movsl mov nop es shll std add loopne aam pcmpgtb mov das dec pop rcl clc mov sbb clc pop dec hlt mov jl hlt sbb lock inc fidiv lock sub inc stc xchg jl xchg in dec push fsubrp mov jns call nop subl ficoml repnz mulb push inc loopne fbstp movsb test dec roll fcmove int3 or lcall adc fdivl js inc shlb into shrb sbb shrb mov or push test mov adc es sub sub inc insb push je clc ret negb (bad) xor adc add dec (bad) iret mul loopne cmpb sbb in ffree add xlat xchg cmpsw leave jp (bad) pop outsl add add mov add outsb loopne mov push setg dec push and dec adc jecxz lahf xchg fsts repnz jge insb jnp mov add xchg and mov and (bad) jp lods xchg or mov mov dec cwtl aad loope pop xchg dec fistpll xlat test xor out adc or inc add cs add iret aam push adc push (bad) nop fisubr jne xor xchg std les adc dec xchg jle mov clc jmp and mov add idivl lock (bad) push cld imul lea or lea push jno cmp js (bad) js lea or xchg inc sub inc pop imul or mov mov (bad) in jle jge repz dec jnp adc mov out test cltd mov fsts inc or xchg divb push cld ret mov fsubs xchg (bad) adc or xchg jge add xchg jbe out xor ja sub or lahf fs js xor testl and pushf jmp mov icebp xor push (bad) mov addr16 sti pop jb mov pop andl sbb and jp xlat loopne (bad) leave test lea test add mov or inc out mov jmp sbb cs loopne or xchg sub loopne call insl push mov or jo fadds into jecxz rol jae jnp pop sub adc jl xlat mov push movsb test mov push ret outsl mov mov inc call (bad) push data16 jmp push fistpl or out fidivrl push add xchg inc and int cmpsl dec decl push adc (bad) jmp add or jne hlt sbb push and mov aaa cmpb xor push loope push inc (bad) adc in cmpsl (bad) inc fdivrs sub jne mov fcomps sub or pop clc loopne xchg out cmp je pop jne inc les push sbb or dec loop xor or notl adc or xor aaa inc fs xor jo mov sbb mov outsl test or (bad) out mov sarl nop in popf push mov loopne or aaa ja dec je and inc cli adc adc stc into imul jmp inc lock movsl xor mov xchg jb add arpl nop mov call jno xchg jp or aad ja cmp or popa mov cmp (bad) mov inc lea out dec or pop jg aaa xor or call enter enter (bad) cmp fbld jbe dec lahf xchg push cmp imul sarl ds test xchg cmp add fucomp popa in sbb dec loopne pop fucomi enter loope,pn inc shrb jge push and fstl or inc mov and sub mov rep cmpl imul or inc sti and sbb mov cmp ja mov mov lods out ds enter and leave divl pop inc lock mov ss out mov test sbb dec sub loop cmpb pushf hlt or sbb mov (bad) xchg out mov dec lods scas movswl insb fdivl movl add or pop push xor jmp sub fnstsw lock xchg in test or clc fildl cmp rclb cmp mov push push or loopne xchg mov jl in push fsubl (bad) fsubl inc lock movsbl fmul xor xor or aam sbb dec shlb sbb outsb add insl enter enter lds sti int sar (bad) cltd fdivl (bad) int3 jg adc pop dec je jmp int or sbb rolb and je xor (bad) mov mulb in test or dec sub mov mov inc fistl mov clc sarl adc sbb xchg add es in in pop flds mov pop fnsave pusha outsl shrb cmp mov pusha cmp andb lea and movsb xor or xorl mov call mov xor cwtl arpl stos xchg jno jmp sbb ss dec sbb jmp pushf mov sub bound mov adc mov sbb xrelease and cld cmp loopne or pushf sub (bad) xor mov je mov in out in repnz (bad) mov stos or jmp jecxz dec lock and cmp adc xor sub hlt in inc hlt adc cmp loopne xor in push aad cmc in imul hlt jne add xchg inc enter out hlt in push dec and cmc loopne dec mov push dec leave arpl push push data16 xor dec movsb mov iret repz or sub push arpl in lcall daa loop repz (bad) cld pop push xor and push jmp inc insb push test insb stos or push lea mov cwtl mov push inc es sets je push cwtl jo lods cmp in or and in loopne test cmpsb aaa loopne insb or (bad) xor (bad) fsubrs les aaa enter aam aaa rclb adc ror jno imul int sarb inc ret insb jecxz enter adc cmp dec xor les lcall stc pop sub inc jge out bound addr16 cmpsb inc notl movsb pop adc lock xor mov rolb pusha inc pusha xlat aaa mov insb in mov add inc ja cwtl xor out mov sbb cmp aaa rolb orl movsb aaa dec daa and movsb aad mov cmp cmp cmp cwtl jno lods or add mov dec mov (bad) nop popf nop ja in clc dec aaa in mov popa shl add mov test ret jmp and sbb data16 int3 loopne dec xor dec test push mov dec add outsl add mov sbb mov jmp movw ja idivl xor add movsb movups mov enter adcl fcoms or adc xlat movsb pop sub pop or pop daa pop push add js shrb mov push (bad) inc mov jo add push out pop add outsl or pop cmpl jb mov ds jne sub mov xlat cmpsl lcall je mov jne int3 cmp and popa and fisubl stc push adc xor inc push dec jle dec ds add inc outsl jne or aam xchg jb outsb arpl and lea dec pop and or cvttps2pi fwait aas sbb push outsb imul inc arpl fwait (bad) xchg cmpsl and inc iret push inc je inc add or xchg or pusha daa adc or add push add or clc lock les loope std dec incb sti and dec ja test sub test push inc xchg or pop dec mov jbe das add je (bad) movsl push jmp lea dec fiadd lea imul pop jmp push cmp sbb add xor dec and insl lock dec aaa adc jl add inc out mov push and xor scas in test xchg (bad) jl nop testl adc movsb adc pushw push xor and jle adc mov sahf sar sub dec ja xor fiaddl and lods aam and and dec dec xor arpl sub push mov repz outsl fmuls xor mov pop hlt cwtl cmp mov and pushl dec jb add jl and out push or or jle popa push and pop add adc push mov xlat sbb adc sbb xchg dec icebp test lcall je outsb (bad) adc add xchg pop mov inc pop pop pop xchg jecxz mov jg (bad) call call fdivrp loopne ret mov (bad) adcl mov inc mov jae sub push or adc ret xorl jle outsl mov cs inc xor std mov (bad) daa fisttp fcoms popa mov sbb out push nop popf and mov jo jmp xchg jle and ror or push ja mov pop pop rorl adc lods add add and bound cmp paddq push test in mov mov inc and shrb push push add scas push dec jb or jbe mov stc imul cld sub inc inc ret xchg cmp cmp (bad) jmp setg (bad) ret fbld inc mov test ds push fnstenv in movsb leave loope add bound ret daa lock lock mov adc cmp dec leave inc pop cmc pop dec loop jmp incl mov (bad) cmp sbb sbb and mov mov or cmpsl andl or cmp inc dec in mov aam aaa loopne xchg mov cmpsb jne arpl or pop fmul inc mov bound incb lret xchg nop adc clc ds stos xlat test fiadd pushf mov ds lret sub out lods mov adc aam adc or mov insl pop xor lods out and repnz shr nop dec in in in les cmc lods inc dec pusha or lods dec adc and sub stos lods shrd scas nop xchg xchg daa daa daa daa xchg xchg xchg xchg daa daa daa daa xchg cwtl cltd lcall popf sahf daa daa daa daa lahf addb addl xchg pop add cmp xor in xor cmp inc mov push add ds add or imul js rolb adc cwtl ret jle push xchg ss pushl pushl sbb test jne push rolb mov cs dec xor cmp jle sub cmp ret push in outsb sbb cmc cwtl cmpl cmp lods xlat rcrl cmp mov sub lods aam ja add jmp scas shl ja movsb mov (bad) lea mov sub roll call pop outsb sbb mov add push or fwait insb or add lret je mov sbb sbb and sbb inc add jbe lock (bad) jmp jle in je jmp cmp insb adc insb sbb test out jne or ljmp mov mov cmpb je cli (bad) loopne push lar decb ja add aas add shr sbb aaa fwait mov cmp cld ret std push add add adc add mov ficoml (bad) jle xchg (bad) call into sti or aaa mov in ds decl push adc mov mov stc (bad) decl cmpb ja jb add add call (bad) mov enter mov mov or sbb inc scas mov push (bad) in fwait cmp push mov add call dec mov xlat or xchg (bad) idiv test jb into inc mov lods cmp lcall stos mov imull jecxz adc mov in hlt ret (bad) mov shrb xlat (bad) jge daa aaa clc outsb sub dec sub sbb sahf lcall jne test xlat lcall hlt pop push ret xchg jns mov sbb xchg or push ja or adc pop jmp pop or hlt (bad) adc or mov sub stos jecxz pop or lret addb xor mov clc enter mov mov fiadd xchg aad stos hlt addr16 cmp dec push ja loopne xchg add mov les or mov mov xchg cmp data16 cld push xor iret lods pop add inc dec movsb je or aad imul sbb push cmp add rcrb xlat inc mov jne aam xchg sub jns out xor push popa fldt fstps fwait jp in fdivrp mov fucomp add mov add pushw or in (bad) push fistpll pop fmuls mov mov cmp mov pop pop jge dec mov adc xchg xchg mov or xor fdivp out add sbb (bad) fist sbb fwait push out sub fstl push inc add cmp jg sbb sub jb cmp inc push push imul (bad) push jmp pop jmp sbb sbb push jmp adc push or int inc sbb and fidivrl rclb fidivr cmpsb outsl subb jno pushl jge add call js inc (bad) mov xor lea insl xchg pshufw ja jae jne cmp adc clc dec or or icebp jbe add out jb leave mov mov fiadd jmp cmp ja (bad) ljmp or add mov lret rclb rcrb outsl icebp jae sub mov sub push outsl es test pop dec jb sub inc inc iret scas jge jmp and clc ljmp add push inc insb imul lret fxch notl ja dec gs push sbb xlat or dec push gs inc insb popa out stos inc divb loopne gs sub add mov dec or inc imul stc in add bound sbbl mov sbb sbb adc dec outsl add pusha punpckhwd sub (bad) dec outsb insb jns (bad) js ja jno jbe lods fstpl ss push fistpll push or jb or cmpsl or dec imul rol repnz test or xor mov test push dec hlt xchg and cmp add nop add out aaa (bad) mov out cld or popa fstpt cmc dec gs sbb jae movsb jnp mov inc jne sbb or or adc ficom pop sbb or push lea add push mov add or xor mov shrb and test push movb inc inc pop and jae mov xchg pushf aam cs inc cmp stos push lods outsb mov pusha mov xor scas ds mov mov mov call mov in in inc mov pop rclb addr16 adc (bad) pop push inc and inc fldenv nop cwtl mov mov add cmpsl push mov in jge hlt mov fimul imul scas pop leave lods mov movsb movsb add mov pop add les xchg outsl rdpmc or (bad) push mov pusha mov inc ss jle sub mov cwtl nop jb or mov or sbbl pop jle adc orl icebp imul pop aaa push mov add cmpb (bad) sub mov mov scas and cmp pop scas dec enter push pop pop cmp stos (bad) notl inc push add enter test mov push loopne push add (bad) call lret push add jne sbb pop js push or mov aaa je or add in xor int3 jge mov xchg in adc sbb add cs push pop push or das scas pop ds loopne cwtl (bad) fsubs or fildll inc push jmp adc adc mov imul adc dec leave jae fs jo ret mov pushf jae push rclb sahf cmpsb add scas cmp add or mov push jo mov lcall cmp fadds adc in pop jmp inc setl lahf out jl nop dec les mov dec idivl inc es push inc pop imulb out inc mov jl aaa xor jge mov loopne xor push push js rclb mov inc mov and shrb ljmp inc push or lock pop aaa cmp loope fadd aas loopne (bad) xor in repnz mov push popf loope insb push sbb and xchg push shrl cmpsl push lock mov or dec pop dec push sub xchg xor push mov jnp mov push sbb insb (bad) sub add add adc and movsb push jne jmp (bad) sbb insb sbb xchg dec rolb push mov adc push enter pop in daa push push push pop (bad) inc leave inc cmp data16 cmp cmpsl in fisttp pop push sbb pop int3 fild push or mov jnp sbb pop and cmp mov xor out in (bad) out sbb xlat das movnti mov pop inc push pop nop adc adc xor sbb ds es pop fisub je test pop rclb testl repz movsb test sbb jo sub push mov dec pcmpgtb cmpsl in or cmp adc cmp add nop and push pop es push add xor jo in in push repz testl sbb idivl fucomip sti or pop push and xor sub push insb outsl mov adc push xor ret loop mov pop sbb xor out jl sahf mov jp out cmp push push mov pushf sub or adc leave je push inc push adc xchg pop cmp shrl in pop mov pop pop rcl pop push lahf jle (bad) out pop in mov mov out mov (bad) lods gs into push push out shrl push xor mov mov sbb dec clc push nop jbe nop jo hlt mov gs or rorl out xor pop inc unpcklps jo (bad) aaa and and inc sarb push mov mov stos mov adc add mov inc xchg fmuls fdivs nop fsubrs mov cmp int3 gs cmp jae jge xchg lahf inc pop sbb pop mov int dec (bad) inc push in stos cs jns out cmpsb aas mov and lock mov push add scas xchg xchg les hlt push xor bnd les push testb or push dec xchg jbe push adc jnp pop push adcb xchg mov mov cld (bad) sti fwait icebp lcall cli (bad) stc (bad) clc push push push push push push loop lcall push cmpsb cld push add repz out and xor into hlt icebp fidivr adc push add lock or nop xlat pop and nop mov adc jge xor inc inc pop (bad) fstl add cmp or pop add test push popa addr16 lock ljmp lcall and in pop lock in adc imul xchg cmp xor das fidivr push addb mov pop and pushf fwait out fldl pushf (bad) push xchg dec (bad) fimul in out dec push or pusha adc pop push aaa pop sub push or and jecxz aad addr16 fs xchg orl aas add (bad) push push or add in dec dec sarl pushf imul nop mov lahf dec loopne cmp jne orl je mov repnz mov orb loopne jo or addr16 jb jne (bad) or scas movsb cmp sub cmp xchg mov iret pusha test xor push mov dec sbb data16 and bound or mov je cmpsb or test ljmp lret mov outsl xchg jo test cmp add add sbb sub test fcomp or ss dec inc ja xor sbb outsb jmp mov (bad) add imul test stc mov push shrb fmuls push adc add in sbb fsubs or mov (bad) stc pop jl add ret addb xchg cmp add and movsb push or daa cmp add and sbb lcall mov pop cwtl cmp lods insb or dec sub scas adc push and in sarl lcall push cmp dec or inc mov pop or push inc andl or (bad) (bad) mov lods dec jne pop add insb xchg mov mov jbe cmp pop sbb xor test lret lea pop jne lea push pop jo shrb mov xchg mov sbb dec loopne pop adc imul addl insl outsl mov loopne popf xchg push sbb cmp push add cmovae jl fcoms pop inc cmp ret and cwtl sbb mov ds adc adc or daa and add test pusha add fs push add jbe lods push or xchg sub or data16 add adc stos mov sbb and sbb imul pop pop icebp pop or inc adc sbb cmpsl mov clc push movl inc ds out add loopew fisub cmp inc adc mov lds xor (bad) push lea dec inc subl cmpsl pop aaa mov push dec arpl inc dec jne (bad) mov cmpsl adc test dec mov lds inc roll sbb jg push pop sbb inc rcr push jb adcl iret hlt mov rorb andl xchg sbb (bad) inc dec jbe leave dec ljmp in xor cmc push pop sahf and movsb addr16 or hlt cmp pop sub jno sub (bad) popa cs push dec call add rol and aam jl lock or fildll js pushf les and adc inc cs pusha mov inc mov call es in add cmp cmpl fcoml imul icebp cmp push push call jl jecxz (bad) (bad) dec call (bad) xor dec (bad) clc sbb adc dec add pop loopne and pop clc lret out mov and jge dec dec enter mov pop shr jge (bad) in int shlb or outsl dec nop push mov cmc xor xor push add repz xchg mov sub sub pusha or popa xor call jmp out js add test shlb mov adc jbe int3 and jbe,pn enter roll lds faddl xchg je xchg and enter andl dec mov cmp sbb jecxz pop ljmp inc or inc xlat lahf scas cmpsl fcoml or imul sbb pop or dec and jns pop mov cmpsl ret or add or add xchg xchg lahf mov inc sti cmp aad movsb xlat mov or push push jo nop popa lock das (bad) shrl repz es jae enter push xchg jbe sbb xchg das inc push scas repz inc in xor sub ret pop jns in xor sbb lock cmp xchg insb cmp mov shll sub xchg inc push sbb cltd jno add inc xchg mov xchg inc push cmp mov in cmpsl mov sub xlat mov (bad) in mov enter aam imul jbe add aas pusha sub add pop mov je or addl dec add inc dec dec rorl or or xor or pop test jo outsb and sub adc xchg popa mov (bad) or cmp mov pop jg mov mov or repz outsb dec mov js mov ret mov shlb test xor lea add inc sub push sub cld mov jmp ret add jne loope in inc pop clc insl ror sbbl dec mov jne sbb sbb add or or sub es out pusha jb add fcoml daa mov jbe adc mov add mov in je shrb js and in dec clc cmp je pop mov pop cmp faddl (bad) call jb int ds pushf aaa mov adc add scas das or push mov jecxz mov sbb pop icebp mov jge dec push xor pop sbb sbb push fldcw mov xor sbb adc dec xor (bad) arpl inc sub add cmpsb xor cmpsl dec and test fisubr cmp sahf outsb rorb jl aas shlb xlat arpl hlt mov jl insb mov out roll push xor inc call leave ret fbstp cs jnp adc (bad) adc arpl inc cmpsb sahf outsl loop mov stos (bad) dec std in xor into je loope,pt das mov jo je mov clc ret test add pop movsb or fsubs adc pop ftst or or add in les dec es jns push jge dec fst or push ret cmpsb ss sbb and mov inc idivb inc sub xchg aas add mov xchg cltd push dec adc mov fstl cmp cmp sub fcomi idivl add lock das push add imul push or ret inc adc test push sbb incl or leave or insb xchg in int outsb pop aam cwtl das xchg test add push add ljmp rorb popf inc std inc decl jg sbb jnp dec enter loop adc or notl add dec or and cmp js inc movsl test je loop sub or adc jb add mov jae push nop jb fcomi xchg mov pop leave loope adc mov inc outsb inc ret or int sbb fmuls loopne mov or in adc jmp and ret adc cmp add scas add mov aad dec or sub add dec or adc cmp jne sbb leave rcll movsb in stc std jle jo mov or inc sbb pop sbb dec jg jecxz add ss in mov cmp and and call mov ja call enter jb pop rcll pop mov inc out xor adc sub loop or pushf and and pop jle loopne test lock lods sub (bad) inc mov push bound popf and dec mov sub jg dec fwait cmp inc cs push repnz outsl mov sbbl gs pop inc inc test cs ret test in roll cmp adcl rorb pop js inc rorl push sub push inc inc jmp loopne sbb mov cmpb push enter xchg inc js mov jmp dec add cs fldt or inc lahf pop push ljmp adc mov mov add in and and adcl push jle cmp adc cmp cs cmp mov fcomip insl call jbe aaa push xor mov push dec mov add dec loope pcmpgtd sub shl out je or lcall mov push jp push push and mov xor push fcoms cmp mov pop (bad) (bad) cmp jae dec or pop add (bad) je stos adc btr push add mov xchg push jle int3 push push inc adc mov fcmovb push jae mov xor pusha add stos jnp dec inc mov jge jp cld mov jl mov xor outsl push and cmpsb jb pop ja dec mov jg xlat jb cmpsl add sbb and (bad) mov jmp inc cmp jne inc decl jne les adc adc stc arpl rolb mov sub push add mov and es sbb notl test pop rorl movb or xchg sbb pop add inc in add cld jo or xchg (bad) mov adc or jb cli jns cmp sbb loope mov adc pop and xor mov lret or cmpsb pushl js push loop jge and push addr16 in rorb aaa loopne mov push js or mov (bad) and xchg adc push lcall add aas or inc and stos lea sbbb xor add call les dec push jp push arpl or jmp inc pop or jg mov dec adc popl pop lods popf ja jl and sub fcomp xchg adc int dec mov test lahf cmp lret daa or jp and jbe scas sarl xor inc add pushf sub sbb mov clc icebp lock ret cmp push or xorl enter jnp pop xor (bad) jecxz (bad) lcall jo jno inc test test mov inc add pop (bad) sbb arpl fisub inc mov mov dec jae int xor pop pop push push pop pop lcall inc adc or inc xchg (bad) xor lds ret ret xor mov out push cwtl pop adc sub jmp (bad) (bad) ja daa (bad) dec clc rorl fstps subb jmp and xchg xor hlt xchg add push movsl push push sbb push adc (bad) push inc negl push (bad) push xor cmp dec shll popa xchg mov sub in addr16 (bad) mov xor ret cmp popa pop cmp jge xlat dec push in sbb fs inc rol mov sub or popa test or add and push inc and pop adc pushf inc and push jl xor inc mov stos cmpsl lock sbb test mov hlt popa loope xchg adc rclb fstpt aad (bad) sbb inc lcall and std lock pop movsb and (bad) xchg mov inc (bad) cmpsb sbb out jne dec lret in push push adc pop add loopne xor ret adc stos lock mov jne xor sbb adc loopne or push and call cmpsl and push xchg das dec popa xor insl in fwait pop call stos lcall outsb mov push add in xchg fs cmc pop and push inc loopne add adc dec jno or (bad) enter sub clc hlt pop mov (bad) mov adc loopne add jl and fmull add fwait inc add ret cmp push loopne int3 fucomip insl and ds dec fisubl adc push (bad) and jno loop stos ds in dec add add push dec mov lret scas in (bad) ds into aas sub js roll call shll jne xchg jb fs xchg dec les adc lods (bad) cmp nop (bad) aaa rorl adc cmp insb out or pop push mov dec adc mov or scas mov in sbb cmp dec inc xlat sub das out rclb dec pop add mov clc add insl add dec mov repnz pop push sbb incl lock xlat std ret push xchg or out scas nop (bad) jne mov pop sub xlat inc mov inc aas pop andl in imul bound dec push add jns pop imul shld push test and movsl sub mov adc loop das fbstp xor les enter push data16 inc dec mov sbbl push lahf and add (bad) inc sbb faddp dec dec jns mov int scas jae rolb sub das push outsb xor push jb lret sub je daa sbb loopne push mov pop fldcw dec mov (bad) dec (bad) mov or ss sub jbe adc xor out leave inc lock daa cmpsl rcl (bad) frstor mov in or pop scas adc aam dec dec std push (bad) dec dec (bad) pop gs inc jmp fdivrs adc inc sbb pop or je or push or lret sub int3 xchg and cmpb jne or add int dec outsl dec lds cmp jp dec gs adc (bad) ret sub adc jg enter ret in cmc dec jecxz add lds incb int iret testb cmp pop fistpll int3 add push testb sbbb test into (bad) je mov and movaps xor aad in jecxz (bad) jle adc inc or enter push adc or inc adc push adc pop dec clc cltd andb pop (bad) sub mov push pop sub pop add mov adc xchg aam cli leave push bound iret addr16 mov mov data16 (bad) fcom pop xor ror and and cmpsl movsl cmp sub sbb lds push dec xchg test aam adc inc or push sub sub dec cmpsb or (bad) adc jl add test ja sbb inc stos mov inc dec cmp outsb adc or rcrl imul fldl sbb jnp movsb xchg negb in inc inc mov xlat pop cld lock dec (bad) jne cmc or mov jle arpl xchg pop add add mov lock cltd aas popa std adc adc jl je pusha outsl outsl push jg mov (bad) jmp mov gs aam (bad) in mov ret jge lea rorl xorl pop push or push add add in jge sar mov sbb dec jnp out dec outsl and ret daa sbb mov ret aas aam pusha mov dec push sbb dec pop or repnz rol add (bad) mov mov pop rcrl mov aaa sbb sbb and test inc fs das int leave mov pushf pop push sbb mov adc fwait sub aas (bad) xchg add (bad) (bad) std jg inc or or and and loopne sbb out xchg (bad) jl xor and xchg mov dec nop cmp movsl cmp in jl and pop js adc jne add cwtl icebp inc hlt shr out in push mov insb or and and dec (bad) jg jl lahf into pop xor xchg cmp jne mov sub cmp jne mov mov xor jecxz jle jge pop and mov jl cld add lods arpl add or or addr16 je inc or cltd nop rolb jnp and add xchg rorl inc loope addr16 sti pop mov stos enter inc sub sbb js xchg inc push nop sbb jge or jle add xor push add out xchg mov adc test jo push mov xor inc test mov je ljmp xchg ljmp inc push incl or pop and iret jmp (bad) jno dec sub mov call (bad) in les das mov xchg loope sub jge pop aam incb jl and mov mov and pop mov jo push sub mov jecxz es fsubs sub mov xlat add js in xor in sbb mov lea ret cmp mov mov orb xchg lods inc rcll jno mov sbb cmp fprem inc js or jne cltd enter or and ja cltd push push mov pop sbb adc clc jecxz subb test sbb push ficompl nop add pushf sub and inc jb ret repnz pusha daa inc adc enter outsl adc test fmuls sbb add inc lods xchg push imul mov lds push add es (bad) jbe push or in sub daa or dec rcr aad adc mov cmp add jp jge in xchg loop jmp push (bad) stc inc mov jno pusha insl cltd sub push mov cmp add bound dec cmpsl inc leave push xchg loop movsb cmp loope add sub mov js dec movsl push clc jo inc das pop dec into outsb aam pop sub pop clc sbb lods add stc dec xor fistpll cmovo inc jecxz les inc nop popa pop lock or ja cmp sbb cltd xchg dec out pop lea jo mov das jg pop push mov or inc jecxz sub add mov or or stc dec test dec mov dec xlat out fsubl add in pop xor mov sbb xor mov (bad) into jo xor xor dec jl jnp lock mov jb cmp and popf inc int3 add (bad) adcb or adc sahf movb ret xor arpl repnz jge and loopne and pop nop or mov mov mov shll cmp push mov leave add jno mov dec or xchg movb les or not mov cmp movsb icebp or stos or into iret jae imul addr16 pop int3 add je dec or adc sbb push add sbb and or dec pushf and dec in xlat add or lock push mov inc mov push scas ficom cmp push std cs mov mov fisubl adc add fs cmpsb std aam idivl pushw js pop adc xor les or adc or test pop (bad) or test mov jl xchg cmp ret fidiv jne push aam ja aad inc adc mov xchg rcll int3 insb add lods dec daa or mov pusha inc xchg or xor cmp adc pop push or cmp sti int push sub (bad) jl cmp jle or lds in xlat test adc jne mov and push mov jno xchg add mov pop jecxz in push pop sti inc test imul enter inc push enter inc push dec adc pop fnsave icebp inc lods mov mov (bad) cld or ds and nop adc insl loope jb cwtl push loopne add jg add pop shr adc pop popf ret movsb js in or lods mov pop fimull outsb in dec or ret mulb sbb jmp jg push mov or adc or push dec sbb fs dec push pop daa (bad) sbb daa mov add insl push inc cmp bts push push jb jo imul add fs out loopne pop aaa and fcoml out mov sahf ret nop push mov and inc and sbb sub inc cwtl adc (bad) xor lea jnp adc inc nop and sbbl fidiv jmp insl mov jne,pn fs jmp sub mov lea xor push and inc adc cmc adc mov cmp loop ret nop ja popa lods inc rclb fsubs add faddl xlat add push aaa add add test push ficom cld mov push popa sbb pop leave inc les and add lret cli push cmp jmp mov dec inc push jae or outsb scas inc xchg mov mov addl xchg mull jle sub mov push leave sbb jp popa ret or xorl pop dec jmp (bad) fmul rorl and sarl and fmuls sbb mov loop cld xchg arpl jge xorb loope mov sub mov enter out cmpl jle mov (bad) and inc cmp mov and fs adc jno lods ss movaps inc push mov sub xorl push and arpl dec and pop fwait cli (bad) (bad) in syscall jmp aaa push and cmp jl addb popa or cmp sbb jmp stos leave (bad) dec and push andw rcr and pop pop into arpl in arpl push cmpl jp fistpll cmp sub fs lea pop inc out pop bound (bad) lock test mov mov insb push mov push adc adc movl push push add sub add imul inc jb sub inc or inc enter lret sub push aad insb pusha das push inc cmpsb decl sbb or adc add xchg mov add or iret orl data16 jns lock add jl adc fnsave fsubs adc jne ret and xchg push jo sub inc int out add push or inc adc push fidivl pop adc mov jb pusha cmc out mov push std adc push ljmp cmp push movb adc xchg mov add lock pop cmp xorl dec hlt aaa cmp and test enter addr16 adcb sbb mov test xchg and or push pop adc cld push inc lret std or pop call xor orl rclb sub push add arpl les adc andl sbb insb js cmc and jnp cmpsb mov movsb cmp ret inc (bad) cmp mov push flds or sub xchg push add push push or jne add mov add enter ja dec in rolb inc imul subl imul mov add fmull or pop test or or cltd sbb dec sbb movb mov adc push inc or sbb inc sbb xor pop loopne cld xor movsl inc call xchg repnz xchg sub ret xchg inc sahf imul loopne inc pushf and sahf rolb mov sub push xlat movsl dec enter jne and ja imul imul jmp xchg push fcomp push enter mov js or imul add mov cmp xor loopne nop xchg add adc cmp test push cmpsl mov sbb mov sbb cmpsb test rorl sub ret mov nop push jecxz push lret push fs lods pop (bad) pop push lret mov js jbe jne add ja mov jg sbb flds pop outsl push fsts lret ret xor cmp dec test push cld movsl or jne pop xor bound (bad) jge mov sub dec xchg sbb xchg adc inc adc and xor and or bound iretw imul xchg cltd dec jle push mov sub inc inc or lods test outsl test ret sbb dec je in dec or lods adc fs inc loope sti add cmp (bad) jnp xchg inc jmp addr16 xor cltd test mov xor insb mov (bad) xor add and pop mov jae dec insb insl outsl adc and add mov sbb sbb jae or sbb testb inc mov hlt add and sub jp mov pop push pop push rorb cld cld push cmpsl lea mov out mov pop jmp (bad) mov add jge mov test mov or notb pop xor xor not and pop mov ret dec jmp adc xchg out or lock add in add pushf inc mov xchg cmpsb clc pop dec xor lahf xchg and pop test mov xor popf xorl loopne lock sub rorb sbb cltd int retw int3 lret xor adc dec ret and mov sub lock int fsincos loope xchg jo imul push xor push into pusha add in out pop iret push pop mov dec sbb adc addl dec cmp inc or test or jo jmp mov in mov push and in iret cmp je addb or push sub mull mov dec in fsts dec lock in aam adc xchg (bad) inc mov or jne in inc dec inc sub jo xchg cmp enter add xor imul (bad) in sub inc sub aam mov daa fadds lock pop jb int movb inc dec and add sub adc lods sub fcoml sbb fsubrs jle sub popf cmpl div arpl sbb nop pop jmp dec fmull ss cmp push dec push inc sbb jno or (bad) cltd pop adc mov mov ja sub mov or xor das add loop add rcrb mov in adc fwait add iret and mov adc pusha sbb inc jae mov mov xor mov xlat call jmp inc pop aaa inc in add sbb sbb and or shr popa nop aaa or xor fsubrl sbb add fsubs out pusha pop push popa (bad) hlt in mov cmpsl fst (bad) mov cltd mov sbb xor cmp add test loopne pop xor leave mov in ja dec xlat pop out or xlat or test nop pop daa mov test sbb xchg cmpsb pop loope (bad) ret lcall sub jae mov imul sbb out out movsb add xor js ret (bad) hlt xchg add clc sub inc in push add mov cmp push xor mov or outsb adc insb push mov dec js or (bad) cmp lahf out or sbb add dec cs mov adc mov pop xchg adc popf push push sbb sub inc xor sbb (bad) fstpl fldl mov cmp sahf mov xchg add pusha or and mov sbb iret repz insb jp add and jo testl insl pop fs pushf jb xchg and enter or pop jne or cmp dec iret xchg sub adc add and sbb push ss enter fidivr mov push mov xchg mov push and adc and daa cmp ret inc xchg in insl sqrtps fwait out push mov adc mov sbb aas mov (bad) div outsl mov jne mov push adcl push mov jno xchg fldl2e mov ja cs sbb sarb pop adc dec add insl sub in jne lods dec jmp daa shlb loopne dec (bad) jb xlat lret in adc inc leave cwtl test mov inc ljmp popa xor stos enter hlt movsl dec aad lret mov inc and out mul add inc push stc mov es jno inc cmp mov hlt inc xor sbb imul hlt (bad) movsb fildll mov sbb icebp xor lcall inc imul and push ljmp dec push data16 jecxz xchg std pop es mov cmpb lock out orb adc pop lea loope loop inc (bad) push add iret and iret imul hlt aam mov scas lock js add xchg dec lds shl jo pop push pcmpgtd pop rcl mov ret xor cmpb fstpt shlb xchg test jns lret inc xchg mov insb cld incl and cmp popf (bad) call add sbb punpckhwd add and mov jns push lock sbb mov jle popf pop xchg xor (bad) jg daa and jp inc pop jbe pop pop jnp in pop and xor sti aam fnstcw stos jp xlat test inc sbb out bound cmp jne sbb push out push xchg adcb repz (bad) sbb sbb fs pop xor adc nop cmp pusha loop xchg xchg call pop mov mov add (bad) faddp and icebp inc daa push imull fst fisubl sar xor jbe jg jne mov mov test add add mov mov movsb sti xor out ljmp iret in jns daa or adc pop xor inc roll mov add ret jns mov imul retw fcmovne xor xor aaa movsb lea aaa cmpsb in js sahf add test xchg (bad) jb xchg mov enter adc repnz sbb clc fnop fdiv dec sub hlt arpl in mov add dec dec mov mov xchg push add mov cmc enter je push sbb ret push lods jge adc iret sbb test movsl cld adc mov sbb dec aam cmp sbb dec call je jb movsl (bad) daa push fist jno lcall dec jmp push pop adc fs faddl push bound push (bad) pop push fadd sbb out ret pop notb (bad) hlt jmp inc push jge mov mov adc into push sarl int3 jecxz aaa mov mov cld lea addr16 dec roll xlat rcl add fcomp scas adc inc fcompp repz xor rorl sub pusha dec xchg test out jne mov sti and push lods sub xchg mov out adc js push sub add mov pop mov fsubr call mov sbb lret test daa jmp sub mov mov je outsb add aam sbb mov (bad) insb push movsb inc add adc xchg pushw imul and je cmp push mov adc (bad) pop mov jecxz lods mov xchg sub dec pop lds add xor push das xchg push xchg cmp xor sub add and pusha push fstl or aam push add jae fistp dec je dec sub in jecxz popa inc test lock push lret dec testl mov pop or push adc mov bnd mov push lds adc (bad) in or xor sbbl pop or jne lea cmp hlt sub sub xchg icebp mov loopne stos ret add fcmovnb movsl sarb mov jno nop sbb and or add mov pop stc pop ret inc mov movsl sbb or (bad) int notl sysenter mov push test mov jecxz or and adc pop mov xor movsb in push cld fld xchg ret es aam push jb cmp aam fwait int sbb push jg sub test push or and loopne repz movb and pop push inc or femms aaa cmpb leave dec sbbl push dec xchg xorl jo cltd adc push adc lahf mov inc or ja aam sub mov adc sub lock dec add outsl add jg outsb add mov add ja adc add je (bad) fisttpl and scas xor les shlb das pusha repz jo or mov test pop xchg ds sub pop xchg dec dec pusha push insb push jle mov mov pop les rcr repz repz push and and cs mov sbb mov mov add cwtl lods sub (bad) mov pop jne pop xchg jmp das pop imul push (bad) test inc mov xchg add mov sbb or stos xchg cmp popa xchg pop dec pop mov test adc cld xor adc hlt mov dec mov sub dec push je lcall (bad) repnz hlt adc mov xor out jmp push mov addl push mov sbb inc mov add push aad daa mov or xchg (bad) es inc inc and inc dec push push lea (bad) lea inc push call cmp jge ss sahf gs push sub loop mov xor inc or push (bad) dec call lret in (bad) fimull popl lcall or cld stos fmul cmp inc call jmp in (bad) movsl mov or mov ss cmpsb cmp dec push sbb push inc sbb and xchg lret push pusha or orb push adc mov jmp add mov cltd lods jle xor mov push cmp shrb sahf pop push sub adc dec andb jne inc mov call add popa mov pusha or xchg pop cld pop xchg addb xchg cli cmp mov inc bound loope jl inc push mov adc adc rcrb rolb mov hlt pop jnp mov mov negb dec lock (bad) repnz sbb mov or or loop test inc add push mov push mov mov jbe hlt dec add mov fwait cmp stc dec call shrb add int3 mov add ljmp outsl mov sub aas sbb xor mov mov rorb sbb mov jnp dec outsb push xchg pop mov movsl push rcr jbe insl in lea insb pop divl sarl fs adc push rolb or cs ss in gs movsbl das adcb cs xor cmp mov ljmp cmp jbe sbb mov sbb clc xor insl mov imul cs push mov jmp daa jmp mov ljmp jp pop lea fidivrl loop push lods jmp cmp (bad) or mov (bad) (bad) dec or dec sub das jmp int (bad) mov lret push sub inc adc cmp rorw pop or or (bad) jo or and mov add ret mov paddw inc dec iret jle jl or sbb cmp jge pusha iret xor cmpl and and lret mov mov dec cmpsb push add add fsubrl pusha leave add imull sub add iret fnop fcoml xor leave push in push xlat add mov xchg push test outsb psubsb dec (bad) add (bad) xchg dec mov aaa or (bad) push lea (bad) daa mov (bad) cmp subl rorb (bad) nop (bad) push mov pop aad ds push popa imulb nop je sub mov or cltd (bad) add inc inc mov mov lock push out add andb sub dec mov jnp mov add daa lret push cld dec mov add mov xchg std cmc xorb mov xor leave pop loopne dec ficom mov (bad) aaa jo cmp sub cmp cmpsb das cmp cwtl loopne pop arpl dec add sbb and xchg subb xor and faddl mull mov mov jl pop movsl adc outsl or imul (bad) pop xor xchg lahf push push mov in arpl hlt pop and xor lock and mov jae in andl popa jne inc into xor add sub arpl xchg mov in mov xor cmp mov mov jle fisttp int3 push xchg outsl xor andl mov mov cmp fdivl in xchg push mov aas jnp cmp je addl adc fisttp adc adc sbb sti (bad) mov orw dec xchg cmc rol data16 push sbb mov sbb nop scas push sbb adc dec ja adc adc fimull sub push rorb or pop adc xlat or dec (bad) pop lds xchg sub sub and jnp jnp (bad) testb mov and pop inc mov push scas in jl xchg dec adc icebp bound fidiv cmpsl mov jmp pop clc aam add mov mov push (bad) jae adc sbb movsl cld jmp jl cmpb (bad) pop adc mov xor scas adc (bad) sub dec or inc push les xchg inc or inc xchg adc or adc add jnp stos xor cltd mov scas cwtl js,pn or sahf or inc fs sbb mov jp dec xlat adc les fcomps rorb fisubl aad and lock addb cld push push cmp shll fisubr setne test fcoml sub popf enter add in ret add lret cmpsl je mov dec ss outsl jo in sub cmpsl fist popa add int3 lea pop and inc ja sub notl arpl jbe lret dec pop bound rolb xchg lret xorb jne ffree or sti push mov cmp jne daa call cs jne hlt jp jns dec push mov sbb mov push add sub nop inc xchg mov mov (bad) xchg es pop dec jnp (bad) ret aas lds cmpl imull push push sub xor sbb pushf inc aad imul loopne arpl inc dec jne in mov add ret push imul fsubrs dec push sub test xor loopne cmpsl cmp add mov pop cmpsb sbb jmp sbb nop stos and rcr and loope mov (bad) daa adc add add popl cmp out sbb pop addr16 cmp pop sbb leave aas jo nop mov push xor jp push sahf jge mov dec or (bad) jg push dec cmp mov xlat xor gs ret sub mov xlat call inc mov pop mov or sbb andb clc es sbb add scas push fcompl inc icebp and xor popf loop ret sbb (bad) rorl or add sub les idiv and dec cld lods or out mov jmp test or ffreep test scas add in push sbb inc sarb dec xor dec cmp and and dec les outsl sub jnp jmp push mov je iret xchg jge jne es push fstpt jne pop pop jno mov push mov xor pop add jle lods mov insb and or mov scas aas or shll pop add sbb push pop out jmp nop (bad) or loop test inc mov in mov cmp lock int jl test insb lret sub or add rolb add rorb insb mov clc sub sbb xlat dec js jp jmp dec sarb jl aas sbb push pop out inc push and dec pop (bad) sub cld cltd ror jns test xor cmp fistpl pop push or push arpl jne ljmp popa inc fimull dec loopne into cmp rorb inc je mov push out sbb sbb mov dec repnz inc and stc and cmpsl bound or int3 add rclb push mov xor call mov jne pop adc cwtl pusha scas frstor wrmsr and (bad) push pop mov stos and inc (bad) and mov mov shlb mov inc adc cs jle push and adcl inc addb iret daa inc xor pop xchg xor fdivr mov jne xor dec adc inc dec mov or or test sbb sbb sahf adc add iret cmpsb sub int3 xlat pop ds scas lahf ss mov add loopne add add adc ss aad or sub retw add inc add mov xlat pop sti add xchg adc (bad) (bad) dec adc push adc jo imul cmpsb lds sbb sub iret mov inc cmp or add rorb and in imul adc aaa icebp inc mov (bad) movsb fwait mov aad arpl jg lret fisttpl pop mov jge jne jle add cmp iret xchg orl add mov rcrl push repz call inc dec lret fdivl push pop or lcall fcompl (bad) aam add push and sbb push rclb sub sub sbb call (bad) movsb popf aam ja (bad) cld ja sbb fucom mov fdivr decb shlb push sbb loopne aaa jo in call xor push dec mov adc (bad) mov arpl sbb push mov mov jo ficompl mov jmp sub pop mov lods popl push movl or sub sub sbb xor mov inc jae sub jb or pop mov cwtl iret or cwtl insb insb jecxz daa leave addl pop sub addl shlb and and sub and xor add sbb fisubr inc add adc iret mov sub into or mov aaa mov sub push rorl outsl xchg aad pop dec outsb mov insb xchg addb mov sub push mov (bad) movsl inc push xchg je inc inc pop or add jge imull and or (bad) lea je fisttpl out and pop mov pop jo or push or jge in xor stos adc push mov mov push push and aaa call add mov inc insb cltd push sbb inc cmp pusha push mov push cmp pop pop test lods pop inc pop inc push lods lock push dec cli add mov rcrb or mov or adc and jl cld push test and js mov rcpps sti xor and mov pop lock or mov add adc cmpsb fwait inc xchg pusha arpl addr16 fildll orl xor push aas mov push test inc pusha mov mov push cmp ret movsb in pop pop aaa pop push movsl subl jae and lret push pop mov mov mov call lock adc fdivrl rcrb mov pop and cmp movsl xor lods and xor mov xor mov xor jb je xor xor jbe js xor xor jp jl xor xor jle pusha popa xor xor bound xor xor addr16 xor xor insb insl xor xor outsb outsl push push xor xor push push push push xor xor push push pop pop xor xor pop pop pop pop xor xor pop pop inc inc xor xor inc inc inc inc xor xor inc inc dec dec xor xor dec dec dec dec xor xor dec dec xor xor xor xor xor xor xor ss cmp xor xor cmp cmp xor xor ds and in inc dec test mov test add push sbbl dec enterw and popa ds mov sub add push arpl mov xor mov insl and pop adc test push xor mov or jo push popa dec ret fwait (bad) xchg cmp adc out fwait inc fwait jae mov mov push add inc loopne loopne gs aam ds mov push je insb pop fmul lock xor data16 enter je or adc outsb and adc gs (bad) adc cmc inc add insb or jae xchg cs testl outsb int sbb jle push fiaddl jo outsl sbb push inc popa jae add imulb lret sbb or push inc jl (bad) pusha add jae outsb or inc cli (bad) testl sahf add xchg subb cmpsb push push fwait idivb push je into insl dec outsl jo je push inc jns mov jnp adc adc and add sbb adc xor out in jnp adc loopne mov pop adc mov add jne pop jns rorl cmp bound loop mov add dec jl jp mov pop lods or push cmp or jmp inc inc xor pop inc sbb outsl jae es inc je lods mov sbb pop jo idivl std incl test inc jmp outsl mov add push adc dec ss lods pop ficom insl pop pop lcall and pop or pop insl repnz fmuls or mulb xchg iret repz and stos push (bad) xlat dec loope cwtl (bad) (bad) push mov jnp and lret add jmp pop adc insb fcoms adc test leave push push dec inc incl aas push test call lds add jmp mov ss bound push push dec gs fidivr mov (bad) in cld add cmp dec lds int3 aam jmp int3 push cmp pusha xor add push daa in or add push jno cmp outsl lea lahf push cs pop pusha sbb addr16 xchg mov mov and out jne pop sbb lds or adc mov cld lock add inc scas pop xchg add add sbb roll adc fstl ds lsl push lods push push inc je push scas ljmp js mov pusha sbb out xchg mov push cmp jmp pop sbb add test (bad) cwtl int int mov movsl mov (bad) in dec enter xchg mov iret lds cmp xor cmpsl popf nop push mov movsb (bad) push nop lcall inc popa sbb scas or mov sbb push movsl xor sub scas fs aam mov or and pop lds scas test push int3 push or mov lods test add push push aam (bad) inc lds into cmpsb loopne add lock addr16 jae out sbb cwtl (bad) aas fdivrl or mov addb dec jl jne loopne fisubr adc inc outsb adc and mov mov jge aaa and rcr or or inc arpl pusha sahf inc loopne or fs dec outsl ja scas jmp out adc push cld push xchg add xor repz push push add imul rcr les in scas lods push xchg ret sbb push movsb sbb pop xchg fmul lcall aas ret ret mov es sbb dec pusha mov repnz imul je mov push add pop insb push icebp sahf fsub push sub push subb ljmp jmp pop cld in mov fwait pop orb call imul pop jo test ret pop or mov sbb pop and popa inc nop addr16 in cmp paddusb push cmp add mov das push cmp mov inc cs loope xor xchg or ficomp push clc push sub out push or nop mull pop add push push adc divb sbb fucomip adcl add jb out pop mov sub je and sub js dec js pop cld xor or push je push dec fwait adc dec push aam pop leave push js mov sub clc ds push or gs dec in dec add nop xor mov mov cwtl xor cltd pushf xchg clc (bad) clc pop stc inc aaa (bad) imull call cli jg push sti (bad) jb sar pop incl add dec push movsb add ds repz incb add or dec jg dec imul push pop and mov jg mov je mov imul push or ret jle mov fadd mov loope stc stos jg adc push mov jo jg adc jg sbb jo push mov cmp clc sbb ss enterw daa inc sub jle in sbb pop sub push push or jle push mov sbb mov bound pop mov pop push or test fsubrs sarl or outsl outsb pop mov xchg pop sbb xchg inc aaa leave inc sub push pop aam aaa loopne xchg sub jnp out push orb das in hlt push pop pushf xchg clc sub sbb sahf cmpsl push xor add enter sbb push cmp daa mov (bad) push pop mov ds or mov inc (bad) dec popa outsb nop fisubr test decl shlb add jne cmpsl test pcmpgtd pop cmp push push mov mov fstpt or mov push mov pop pop cli add and test and test jle sbb loopne or insl mov jmp jnp movsl fdivs push insb rcrl inc cmp and pop mov test dec pusha fldenv xor or xchg cmp in sub push jbe sbb mov sahf (bad) decl mov pop mov jno fwait mov add cmp (bad) mov out decl lock xchg lock mov es sub cmp pop add leave ficom sub outsl and sub cmpl rclb pusha and or inc mov les or je add and std xlat cmp sub mov (bad) (bad) jmp lods pop adc incl dec or jl roll pop and fs mov (bad) int sbb or repz fist cmpl or enter inc dec push imul or add insl mov enter addr16 (bad) fs popf or adc mov fs push jg mov fmull adc int3 insl cmp push pop cld cs cmpsl cmp push mov in or scas sbb shr cmc aam and arpl adc rcrb or outsl mov push and jae jp insb outsb pop dec insb push pop add stc out push xchg jbe add add (bad) insb xchg gs insb pop pop sti pusha push ss imul gs insl in mov mov addr16 push outsl ja fcompl lods iret lahf jne or arpl rorl jae popa inc jno popa mov ja or shlb adc add in ret ja insl inc enter dec data16 push add adc dec xchg cltd inc data16 das lsl cmc inc popa pop pop jo inc nop fidivl pop imul lods dec mov jb mov adc inc je inc push xchg cltd sbb insb je or dec add cmp pop outsb sub cmp je or sub push pop test lds imul dec mov or push xorl adc xor lret insb or adc pusha adc adc xlat pop or outsw inc push add outsb jne sub sbb xchg daa fadds bswap or (bad) xor ficompl cmp add icebp xor shrl test sbb dec data16 or mov pop pusha or or push push call ret push mov in pop bound add movsb ret iret or js test pop repz addr16 popa testl dec inc push push inc push add mov incb inc push dec push xor inc dec dec cmpl inc inc push pop cmp adc inc push dec dec push mov push inc fiaddl xchg inc dec dec and dec enter inc inc xor xor adc or in and inc inc dec inc xor xchg inc push inc inc dec notl inc inc rcll dec mov mov (bad) mov push (bad) das sbb mov data16 inc das mov push xor push aaa jg xchg adc push push push dec push (bad) nop cmpsl xchg dec inc dec push mov fidivrl nopl mov mov sbb push pop adc add into push dec sbb rorb mov pop pop loopne and dec or sbbb cmp sbb ss push or or lea push mov adc or dec push ss sbb or jmp addl adc repz add mov dec pusha xchg shlb jbe mov or or jo mov sub mov push and lds dec adc stos (bad) arpl pop or mov in lods movsl das or rolb push loope dec std test mov pop push mov fwait in add lds das js xchg sbb dec mov (bad) shlb sbb rorb and mov test sbb cmp inc mov cmp and loope scas sub inc jo cmp push cli dec push and cwtl add movsl leave jb adc aam rorb clc and push sbb popa inc xchg or imul nop outsl popa mov jno inc adc or xor sbb dec dec test inc or ljmp xchg out or enter inc sbb je sbb jmp adc mov add mov sbb xchg xchg lret add or mov adc lea add loopne lods sbb mov je dec cmpsl sbb mov jg (bad) mov jae jmp jo fiaddl imul add fsubs jecxz push cmpsb es mov push sub dec mov or mov popa js xor push adc add inc xor out jns xchg test js mov push dec and xlat rep loop jp aam insl and adc xorb push mov or push or ret inc mov mov pushl aam sbb jo lea push mov fwait nop inc mov fldcw pop (bad) pushf push xchg jle lea xor lea outsl xor push pop aaa fcomi das fdivp ficoml jp mov and mov ja pop xor pop imul mov sbb outsb outsb inc sbb dec aam lock xchg pop add loope (bad) pop sbb push mov adcb movb xor add adc scas add inc xorl nop inc cs lret adc jl and add in lret roll jns adc lret lret push add lock sarb adc add push jne fistpll outsb lret jne mov incl mov sbb mov inc mov addr16 add in das movsb jns xchg scas clc dec in cwtl jne inc lods in or push cmp add inc push das sbb mov adc mov or push scas mov cwtl sub or imul xchg int3 rcll add jno leave sub fcmove add nop and sub pop mov jb scas imul es int out mov push mov inc ds xor mov lahf and jne cwtl or xor nop mov xlat lock inc mov mov pusha mov push loopne fs and push orb ss sbb repz stos sub out out bound or adc lock je js add push adc int mov popa gs lock dec test loopne xor push push aas mov sbb and roll dec pop sarb (bad) nop xchg and inc mov cmp loope (bad) ljmp mov movl in loopne insb inc sbb mov dec adc nopl and (bad) fsubs (bad) xor mov sbb dec test push out (bad) sbb orb clc jb push and inc cmp fs mov jno xor nop dec jge (bad) js mov loopne nop rolb (bad) mov sbb and push or push add rcr or sub or or in outsb scas imul sub push push nop mov js popf popa loope jae xor inc sub imul and inc sbb ja inc rcrl pop dec inc mov xchg iret ss dec arpl cmp sub mov and stos dec fstl enter pop mov sub dec scas inc gs dec (bad) shrl push mov mov adc enter sub inc rol rclb push and ja rolb jns dec repnz jge push cwtl ret mov bound cmp test sbb lea dec xchg mov sub mov push sbb mov mov cmpsl xchg aam fmuls and (bad) cmp and and sahf adc xor xchg loopne fdivs ss push mov pusha iret dec cmpsb inc xchg push pop emms pusha movsb test rolb pop or inc adc adc push mov push add ret pusha mov test outsl cmp mull lahf mov push xor dec sbb jnp ds cmp mov aaa aam jne mov fnstcw sbb pusha leave dec (bad) or or sbb adc mov xchg aam and inc les or enter add daa sbb and ret adc aam cmp insb dec ja aad sbb push inc rcrl pop jge mov (bad) ds pop inc jae dec mov and out push test mov cmp je mov or out aad mov insb mov push out test pop push sbb inc inc mov mov mov rorl movd arpl (bad) and orb (bad) mov push mov inc cld fild or shll sbb mov fimul cmp je fs push add xchg lods sub bound adc js aam add adc push (bad) dec xor loopne (bad) adc mov mov xchg xor push xor rolb mov mov sub mov or pop repnz mov cmpsl mov test dec (bad) (bad) mov sbb andl or sbb or push movsl and sub add (bad) dec je xor sti pop pop es (bad) lret aad jno or cwtl fnop shrb fsubrs das jl adc xor pop scas xchg enter stos or das xor daa jns fadds pop adc push insl call inc or and shlb pop sub test xor inc push hlt fs cwtl cli es adc jge adc lea mov sbb and shr enter andl mov (bad) repz fsts xchg push pop adc jge inc jmp adc cmp add and add sbb ds mov imul test flds and fwait or imul inc lock movsl push mov repz push and dec sahf jbe sbb in push jp aam jle push out lea js or in (bad) jle or adc inc push mov adc idivb test add add je or mov fistpll dec pop or divl (bad) not and mov pop adc pop sar add pop (bad) scas add mov cmovo in mov pop imul xchg push movb sub leave cmp outsl push fabs push test stc mov mov xor push sub cmpb mov sub (bad) push and sub packssdw rcrl sarb fadd adc dec cmp in loopne fstl jge ja mov daa mov adc sbb and fdivl push sub dec jmp jns ds sub push rorb pop xchg inc xlat sbb pop js adc sbb sub inc inc das inc insb aad cmp push pop test add in (bad) sub stos xchg jns pop dec out adc sbb or pop call sti xor mov rorl and sub (bad) mov cmp push mov mov cmp imul mov add add mov movb pop popa or sub adc aas dec mov outsl sub adc adc xor outsb add mov pop pop pop rolb outsl push add jne mov js divl (bad) jge adc adc adc sbb push inc add cmp and inc pop das or add aam jns pop (bad) mov stos stos jo movsb dec js and and pop fistp insb mov enter push dec jns jmp imull outsb js mov mov sub shl mov mov popa push sub popf mov jmp test add adc or xchg cld push mov pop fcomi xchg or loopne jge push jno testl jnp xor push or fcompp lods inc push rolb jne ds add xchg dec out fisttp mov lea inc fcmovu pop push cmp cs and fwait imul push addr16 data16 ret sbb (bad) (bad) lock (bad) icebp pop nop das pop pop push sub mov roll ret in sarb push loopne mov inc movsb clc sarb loopne cs aaa das add mov dec mov and or xor (bad) and fimull add push dec loope push dec pop pusha xor pop push push dec clc gs or cmp not int aas push xor adc dec mov push xchg pop add lret push sbb ror movups add imul dec add and and mov es mov out outsb adc (bad) fnstenv push push icebp sub and (bad) cmc mov add dec das sub mov ret xor cmpsl lahf in fmuls or loope test sub push mov inc and mov das lods push or dec adc loop mov shrb lock adcl jne push add (bad) movsb jo pop and pusha cli loope mov (bad) hlt or mov cmp sub inc shrb sub mov adc pop pushf lods das or stos shrl push xchg outsl mov rcrb and insb pop cld push xchg cmp push push mov mov xchg inc add mov jb cmp (bad) dec test cmp movb sbb (bad) or lods outsl pop pop mov enter cvttps2pi (bad) decl sub movzbl sbb lea jo shl mov (bad) cmp jg test jle cmp jl mov aaa enter jg adc pop clc jle gs xor sbb xchg and mov or imul inc ja inc mov add dec gs push pop lds or jne push adc cmp push add pop sbb xor dec inc dec pop out pop mov fsubrs mov test xchg mov imul mov and or in pusha mov or lods mov xchg insb sub es add adc shlb adc inc lcall mov adc inc ret push jg sahf sbb fimul loopne es cmp dec mov into gs in lods call jbe dec jne cmp push add sarb mov pop mov cli sbb sbb and rcll add sub add fcoml mov test loop test hlt xchg rorl mov (bad) and insl imul inc jbe nop pop cwtl rcr push mov insl mov push mov loope sub add xchg push cs xor jnp sti mov repz push mov mov push adc aas push arpl push push mov mov or or cmp shlb repnz rclb pop into mov pop pop or lret mov ljmp xor inc hlt pop pop sbb sarb jmp xor cmpsb scas xchg movb sarb fcmovb sarb ret sbb push push test fisttpll jmp sbb sbb sub mov lea (bad) fadd addr16 jmp inc mov movl or add addr16 loopne imul je dec or jle lock jmp jb mov jmp bswap pop mov and sbb pop push adc insb outsb (bad) push push cmp xor inc and jae xor push imul sub and and inc adc push push adc push mov pop cltd sbb orl in pushf int3 (bad) xor cmpsl out adc push add mov pop xor cmpsb dec sub icebp sub mov test jne mov push add addb int3 xlat hlt add mov fbld push fs lea (bad) call ret push clc pop int3 mov add mov inc decl xchg call repnz jmp adc mov xchg in or jecxz add fdivs mov mov pop out sbb adc xlat push dec jg dec add add mov pop push push in hlt xchg scas ret ror inc call nop out add dec fimull call mov cmpsl fsubr dec mov mov fcoml sbbb pusha inc add add leave sbb add or mov cltd addr16 add or xor mov and push add push lods or mov data16 mov insb ret out mov lods cmpsl mov mov xor push xor fisttp mov mov cmpsb insl inc inc call push loopne in in cmpsb repnz and in ljmp sti fcoml jmp int3 adcl xchg jno pop dec pop out mov inc and (bad) pusha nop outsb scas adc lods das add dec jmp mov jno pop mov sub mov sbb rcrl pop (bad) fistp push adc shlb mov das dec xor mov scas xchg cmp and inc push sub or jmp push addr16 imul adc loop icebp mov push adc inc or add cmp or and mov mov je imul fsubr inc int3 and jmp outsl bound inc dec jo dec gs into hlt rorb pop pop xchg mov pop push aaa cli cmp or int pop jne cmp cmp pop sti xor pop roll mov repnz (bad) sbb mov ret xchg pop frstor inc dec in sbb pop sbb mulb or mov push push and jo adc jo adc out cmpsl pop ret daa xchg xlat adc pop and cmp adc mov (bad) xor or pop (bad) icebp (bad) imul add outsb mov jl add jge mov aam adc jae mov rorl out push movsb push dec in ljmp push les out into xchg scas push inc add sbb and repnz mov mov xchg jl mov sub lock inc lock sub movsl rorl mov adc pop movb outsl bound push and inc sub mov mov cmp inc dec jne and mov dec sbbl mov je js add inc adc or lods xchg mov outsl pop add add fcoms enter stos lock sub lahf (bad) dec and test icebp cmp xchg adc int test inc xchg lret jp sub cmc (bad) cmp pop popa cmp or pop nop sbb ds and jp adc scas imul xchg sub inc and cwtl pusha mov mov add sbb add add aaa outsb sbb mov and sbb cmp sarl adc rol or (bad) cmpsb sbb jne pop mov add icebp dec daa cmpl mov ficomp enter cmp icebp loope mov call mov aam insl and push (bad) pop push test or out adc test (bad) lods jg xlat pop jne mov and xchg mov dec ret insb or pop test and and lcall sbb cmp dec adc xor or push je dec jnp loop imul cmp adc sti xchg out push mov sbb nop pop (bad) and add ret jg adc and sbb mov pop mov (bad) xor and mov push push je out out in mov (bad) aaa loop outsl sbb jmp add push aaa or daa lods and and sbb adc or or and or adc mov mov xchg insl mov repnz movsb dec mov xchg mov ss xor es mov inc xchg loop xchg mov add lds mov divl sbb push (bad) scas idivb push shl adc dec je fcompl push mov pop mov add xor cmp xor mov insb (bad) cmp inc and es mov loopne or cmp or adc mov lods sbb sbb (bad) repz dec in pop mov sub mov cmpsb dec xchg add jmp pop adc clc inc inc ds dec xor push or inc and ret in leave adc cmpsl das and les jg test inc rorb mov inc sub push and and add gs sub xchg push adc inc (bad) inc push mov insb inc sub incl mov adc dec movsl sub sub (bad) es lock sub adc mov (bad) es fs and mov adc loopne mov inc js jmp xor clc rol je sub or push push fisubl xchg sbb stos clc jnp push inc (bad) aam stos andl adc adc test arpl sbb icebp cmp (bad) enter adc pushf pop lcall pop sub sbb pop jmp movsl (bad) scas nop jmp push cmp mov push stos cmp push adc call jg (bad) jmp push int adc mov cmp std imul je or push mov js inc pop xchg sbb push jb mov sub out and add data16 xorl add pusha mov adc fistp dec push nop out or add mov xor in sub sbb cmp sub aaa clc mov loopne jg adc popa xchg pop shrb xchg ss xor pop or jno ret or jmp orl xor add and and jno lcall insb movsl jns dec test add movl xor loopne sbb push int3 sub ja (bad) (bad) movsl sub adc insb sub enter cmp cmp add cmp loop cmpsb cmp dec loop sub out adc adc xor push loopne fsubs or adc push xor jecxz cmpsl or mov xlat int lcall inc adc lret subl push dec dec or clc hlt imul lret icebp mov sub imul push or inc sbb pusha aam or xchg roll fiadd push in ret cmp out into dec ja xchg cmp (bad) sub add fimull jl inc test test push fs pop mov sbb in adcl cmp sbb xor pop (bad) sarb add mov xchg xchg inc inc sti sub adc enter sbb mov mov movb mov rorl dec mov call mov cltd sub jo and imul scas je cmpb sbb and dec bound jns lods daa pushf push inc js ficoml add push mov pop repz cwtl mov int3 mov inc decl aaa test loope mov cmp je daa icebp sbb int sbb jecxz sbb or xor or push cltd nop sbbl andl cmp fidivrl cmp jle sub js movsb test xchg mov jns adc sbb sbb adc jno mov fist mov lahf jmp mov inc andl test cmp adc pop adc adc js hlt sti mov sbb sbb push add mov jo,pn adc (bad) sbb pop iret cmpsb jle insl cmpsl add inc jmp aam cmpb fcom add push or or add in adc sub sub xchg mov pop popf jo dec pop adc xchg jl push or fcmovnb add pusha jl jmp add call addr16 je in les addb dec mov mov fwait jbe cwtl or pop leave jmp push lea pop jl movsb xchg addl ljmp bnd sub insb mov mov mov sbbb pop sub mov and jae std cmp nop popa cmp add fadds aas repnz out sub mov or sub mov or mov inc in inc out lods adc xor lcall mov les (bad) mov sub fnop enter pop or bound call lret out pop push les push jmp add xchg iret adc (bad) int3 scas mov enter inc jl cs inc mov push movl adc add jecxz pusha movsb mov cmp add out clc dec cmp pop and jmp inc ret loopne insl ret shrb or fnstenv les adc dec icebp jne ss sbb daa ja push imul xlat aam lea es add data16 push sub punpckhwd xor outsl push add std sub add lds add jns mov xor push sbb bound sbb mov adc fiadd aam adc int xor or xor mov adc lahf xchg mov mov push mov pop jns pusha fcoml pop sarb pop or add lcall xchg test (bad) mov or dec jo orps jp lock mov adc xor lret dec int3 push adc adc sub sbb push loope push dec push xor bound leave jo fistpll sbb dec jecxz dec dec add pop ss push push add andl mulb es lea xchg sbb lahf cmpsl mov fbld push mov mov add data16 push fistl (bad) xor repz mov push sti pop les in xor aad or xchg sarb mov lahf sarb sub cmpl imul lock jecxz lea cwtl push add inc rorl inc and xlat jb icebp add not add adc and adc jae mov push adc movl mov inc loopne dec pop sbbb and out xchg xchg adc or subl (bad) mov adc in jo cmp sbb and sbb sbb jl mov sbb add sub sbb js xor inc imul sbb sbb or and mov push mov in mov pushl jae and or inc adc sbb or add (bad) or pop scas dec (bad) out or dec ret inc ds xchg aas adc ss push inc mov (bad) mov faddl xchg or cwtl add outsb sbb mov adc and (bad) (bad) mov lahf add sbb ja push add pop es push fmull (bad) lock fstl sbb push push and lods jge mov sbb sub lods or push sub imul add xchg cld xrelease xor cmpsl hlt cmp pusha and pop in mov mov nop add je scas mov mov sbb jmp pop loop sahf jns insl inc dec rcrb sbb jmp call cmp je mov js (bad) scas pop daa sub push adc cmp inc mov dec loopne pop in jne dec add push xchg inc push mov test adc dec dec cmp jne mov rorb xchg or add cvtpi2ps or xor repz dec cmp mov pop rcrb sub xor rcrl jg xor test imul or and sub xor iret sbb add test jnp sub dec insb fisubrl xor fsub aad pop pusha pop adc mov xor xchg aam ss call jecxz xor and cmp addr16 push mov repnz xor push fimul ret sbb (bad) inc fs and aaa mov loope rclb inc enter xor add loopne inc dec and fdivrs or call push xor or add xor (bad) bound fisubrl shrb push jecxz mov sub or and push test dec shl and add inc dec or (bad) lock mov aas and lcall sub cs cli inc add add lret sbb into push add icebp xchg lods add pop (bad) jl or inc sbb out sub dec (bad) rcl cmp imul arpl adc and iret mov mov loopne sahf test inc clc aam aas in out or addr16 xor nop add xchg insb mov adc fiaddl add test add add push inc add psubsb rorl outsb lahf fist add push lret rcl dec ret cmpsb lock adc mov ror testl iret mov sbb pop out xor popa push adc loop sub mov fdivr sbb jno aas or inc cmp pop lahf sbb sbb mov cmpb or mov xor and popl or js sub loope rclb fildll push and mov mov xchg test insb adc ss pusha mov xor (bad) sub mov imul and cmp inc xchg aam into and sbb or ja xchg pop jae or ja xor rcr lods and sub or aam into jno movsb mov mov fistpl aad call or hlt in out adc fisub (bad) push add movsb lock pop sahf ficomp test push xor ss pusha roll xchg dec clc xor cld adc lahf push add pop dec or inc add push mov pop movb leave hlt lods xchg cmp out popf inc cmp push (bad) and jp inc call push or rcrb mov fdivl (bad) lret scas push dec fs push test or sub push sbb ret lea js ret aas inc in adc movsb adc and sbb sub xchg and lods push sbb push imul (bad) jg movzwl push add add sub scas rcr adc mov fucomp fisubrl add push cmp push sub lock or bound push insl inc imul mov sub cmpsb cwtl loopne pop leave xor aam (bad) xor pusha leave out hlt in fsts add call and int3 sub push popa xor dec inc or inc leave xlat test xchg testb pop and loopne and mov mov or mov (bad) sbb inc (bad) andl ret roll cmp push xchg mov dec lds cmp jmp sub push aad pop int3 rol fcomip adc add jo jnp xorb push mov dec mov add or pop mov inc and push xchg stos sub (bad) adc nop daa mov push add es jnp add clc sbb lds add divb add sbbl add shr mov mov (bad) ss pop mov pusha aaa cmp add shl push xchg xchg js and push adc pop sbb dec pop or scas add jmp loopne fnstsw push pmulhuw cmp (bad) das jmp inc xlat sbb test enter inc add pop xchg mov shll ss in fwait (bad) mov mov and add stos or pop inc shrb pop inc xchg xor mov jb and xor movsb gs pop cmp or fist les mov gs sbb inc cli fisubrl movl mov rorb or movsb es cwtl and adc insb scas pop fs adc push ja jae repnz jmp aas out add cmpsl js outsb adc aaa add xchg mov loope fs insb cmc inc push dec pop or push lock mov sbb ja ss xchg xchg dec sahf inc cwtl mov sub test jmp mov push xor xor dec xchg bound outsb jno cmp mov das dec rcrb adc or dec movb push xor pop mov sub add push jge adc adc mov sbb leave and call xchg xor xor mov test lret cmp sub jne push push leave adc push push sub ljmp adc xor add mov mov sbb adc movb push sbb adcl mov test scas lea daa push dec pop mov test pop cltd sub roll loopne mov add inc and or (bad) jns dec ds ret lea test jo sbb jb pusha xchg test adc or dec add arpl lea stos mov dec (bad) mov jo pop ret adc into rcrb dec push adc lea mov adc sbb ja (bad) enter sbb mov sbb enter sbb adc push or outsl movsl jo xchg dec out rcll push nop sbb (bad) push dec sbb loopne ljmp or ffreep fild cmc pop pop adc loopne loopne (bad) data16 add inc jmp sarl (bad) or ljmp lds sbb mov pop mov fldt lods inc (bad) shlb ret mov or (bad) or ficom mov rolb push xchg cmp jecxz xchg push rcrb in enter jo xchg je lock enter inc dec mov test add pop sbb ja lret push loopne mov mov mov daa (bad) je and inc outsb or adc fisubrl inc adc mov or test add inc in or add sbb sub decb insl popf aad inc push cmp sbb pop dec pop push in adc int mov je inc cli dec mov pop mov mov movzbl inc dec add fsubrs sbb jbe imul xchg adcb in push sub out divb call (bad) and mov and call mov pop sub pop cmp pop and jecxz faddp test lea pop mov mov sub xor sub roll in es rcl add std (bad) cli loopne sbb or add and sbb fs xchg xorps and dec dec repnz in imul dec test adc jb lcall add clc stc cmp sub pusha inc in pusha cwtl insb sarb and and cmp ret aas in das shl out or pop lds dec (bad) jbe adc adc dec and sbb fs vrcpss and sbb sbb or out pushf and and mov xchg fildl andb call orb aaa test xchg inc fisttpl sub bound stos fs push push adc add push push or xchg mov inc push push sbb jae mov jp sub cmp stos stc scas pop dec push int or mov dec adc sbb sbb cmpsl ret fmull xchg xchg (bad) xchg and pop fsubs inc es enter and and lods lods (bad) pop icebp pop mov push ret clc test bound or sub imul movsb (bad) push dec add jo je jg pop rolb or inc add mov inc or jge adc (bad) frstor sbb outsl adc adc push jo subl xchg int xchg adc mov lea dec push fwait cmpsl jge jns ja or and ja or out xchg inc pop test jmp (bad) lock sub inc adc add pushf xor lea mov fmuls icebp and icebp and repnz je jmp lock ja push and ss adc rol sub or add sbb shl add and jle or adc decl xlat adc lahf pop adc dec pushf inc (bad) lods adc adc arpl stc xchg push and mov iret lret xchg pop daa popf ljmp push test cmp (bad) (bad) pop inc lea lock addb dec xor inc and sarl xor inc cmp cmp mov inc test add xor nop mov mov popa cmpsl repz cmp leave push out sbb sbb loope xchg mov (bad) sbb orb mov mov jb and xchg adc push lds add cmp jb sbb lock pop insb or jmp adc leave stos jmp outsb sub loope aad inc jbe sbb push push imul cmpb lock mov pushf ja,pt push sbb cwtl call add lcall pop cld sub insb in sahf sub adc or sub movsl sub fmuls mov imul mov add arpl sbbl fnop or mov xor push data16 cmpsb sub adc ret fldl adc addl test cmpsl adc rorl sbb test ror push je and push push dec cmp js and sbb jbe xor push push mov and inc in or incb aaa inc js subl push (bad) jbe mov pop pop jmp inc push xor aas inc fidivrl testb je ss (bad) xor int3 popa mov mov sub push rolb pop or mov add push adc cmp or fcomps or pusha jo push incb push pand jl scas (bad) xlat push dec or (bad) sub ljmp enter sbb test adc test sbb mov sbb adc decl subl sub and lea mov mov and pop xor xchg lea lods popf push stc add cmp or mov dec or add stc sbb test call es adc cmp cli add lahf add sub xchg repnz frstor imul mull into js adc jecxz (bad) pop xchg adc mov and clc sub pop ret aam sub lahf add cmp mov jmp mov movsb mov inc mov adc lods adc inc cmp outsl sub mov lods jg,pt jbe cmp test pop inc subl xor aas sbb push cmp dec push inc divb lret insb mov pop cs fadd xchg inc mov les mov pop and mov add scas inc loope mov jnp (bad) adc mov stos pop lret add stos jno lret xchg mov adc jbe cmpsl notl cltd mov jo add addr16 mov enter adc subl rcl addr16 loope sbbl fidiv ret mov mov std (bad) in cmpsl aaa sub sub or sbb (bad) std cmpsl mov push and daa push pop stos pop test sub mov xchg addl loopne dec fdivrs punpckhbw iret enter inc adc jo mov fstps push adc pop and movb sub mov dec addr16 jg or push into inc mull cvtps2pd aaa into and (bad) sub jne mov and jo enter mov mov (bad) jb (bad) outsl adcl bound dec xchg jp aas and mov dec mov insb and push test inc cmpsl inc or stos sub adc and mov sub lods and call xor adc pop or push and sbb mov or push jno mov pop and and push bound or out leave fcoml lock adc cld dec pop adc add or mov dec mov xor or popa mov xor cmp movsl mov clc or adc add xchg rclb roll xor xor and mov inc idivb or inc cmp popa add xor addr16 cld data16 lret add push nop xorb pop clc adc hlt jg pop lcall hlt pop xor arpl and mov es inc js mov test and cld sub clc cli xor and push out fcmovb movups pop sub sub nop mov dec xor xchg jne stc mov xchg cmp pop inc push cmp adc loopne loopne pop xlat fst dec add push inc push adc mov mov inc inc ficom mov imul sbb js sbb ret push in fwait sbb lret rcrl dec js xchg (bad) out push and mov pushf or call dec jg shlb mov push dec mov mov add or adc ret cmp and xchg and mov stos sahf and mov xor mov cld xor jl or es xchg test push cmp jg (bad) inc sahf ret ret ss mov nop ss add loopne push push test xlat adc stc dec xchg and inc or mov push aaa test ds mov mov pop inc mov push faddl or xor fs movsb xchg mov push adc inc rcrb push push imull push inc cmp lcall daa lret adc and mov pop jne mov and sub push jp adc das dec push and adc (bad) aaa cltd sbb insl and das lock shl rorb dec mov sub mov mov in add xchg pop test outsl inc cmp inc insl ljmp ror and dec dec outsb punpckhbw enter pop push cwtl leave in movsb sti out jo aaa push push cmovl leave leave leave dec inc inc cmp leave leave leave cmp sub leave leave leave sub sbb in lret sbb cmp leave add add or in shrl ds div sub xlat int3 cmpb cmp or dec push xor mull add sub jg je push sub aas xor or dec mov pop inc imul mov je movb out movb push into mov sub invd outsl nop lock jo je jb mov pop and xchg das and mov jle pop push jmp inc adc adc cmc adc jae adc rcll sbb arpl add rorl jae pop adc jle inc jmp adc or repnz nopl ja mov or push sbb or mov inc aas rorl jle or push popa cmp jle push mov mov pop dec jle mov sbb mov xor sub add or aam pop and mov mov inc cmc imul dec jmp jmp adc loope push push add push push mov xchg data16 icebp sbb clc fdivl push adc daa scas and adc dec adc and cs jmp push xor out and daa movsl popa push sub es add lock mov jl inc or inc fsubs xchg adc rolb jns push inc xchg lock and or cmp xor outsb cmp pop sbb jge cmpl jb add xor dec sahf ret lds or pmuludq pop adc push lea lea call inc inc and ds jb push sub movsl or dec adc mov daa push daa push shr dec push push dec inc pop cmpsl and xchg aas or or add or aas xor stos iret cmpsl es dec in in push adc xor leave adc rcrl push aam jne dec movsl repnz daa cs rolb rcrl adcb and add test das flds or xchg gs push xchg jo add clc push mov je fcomps sbb notb push sub add jne gs mov lods scas jmp ds add adc sub ja cmp andl cli adc data16 popa jns jo sbb mov rolb cs movl cld push cmp mov jp shlb call bnd adc aas and jg adc ret push push inc push nop xor mov (bad) mov repnz inc cmp xchg sub enter std jg add mov jle prefetchw or lcall js outsl jae xchg cld mov pop rcll mov or inc aaa movsl test lods xlat dec outsl nop out or inc imul jnp push andb test mov imul pusha in or pushf js fs daa mov lcall adc xchg imul sahf (bad) add cmp sbb xchg inc fs add push add jo push out inc test sbb dec repnz sbb pop daa cs mov xor inc popf fdivrl les enter mov fcoms cwtl in rorl lods dec aam xchg (bad) test cmp ds sbb inc aaa or repz lods arpl insl inc dec push cmpsl cmp repz mov cmp repz xchg lahf mov inc (bad) (bad) cs iret lds sub fdivl sbb push add add insb rolb loope insb push inc fild adc adc push and and and and aas cmovp cmc jo das cmp out pop jp inc pop ss pop imul adc aaa pop push dec or xor jo sub and mov mov adc mov xor fs sbb mov push fild jp das inc les enter fcompl sbb movl pop jg push jge jmp scas add dec iret rolb inc sbb jno mov into sub sbb xor adcb jmp (bad) or add and mov es hlt sbb and cs (bad) push test ret sbb stos mov data16 push xor inc xchg adc test int3 add cltd xchg xchg jg pop (bad) xor cmp xchg prefetcht1 insl mov cmpsb jo push sbb xchg push call ljmp cmp pop les jb dec out add loope,pn xchg add adc cwtl cmp mov lock push jbe sub in sbb jp inc or inc hlt pop loope sub popa loope push sbb jns into jmp cmp hlt jne jnp fisttp adc mov mov adc sbb mov enter xchg add pop mov add je and jmp mov push mov sbb and cmp pop arpl jne jge pop or out aas loopne pop js sbb aas inc dec sbb cli or pop inc ljmp mov and scas jbe ret and inc push cmp mov sub inc lea adc add cmpsb je bound (bad) das and sarb xor add mov movsl popf dec or arpl std rcll cmp inc movsb es xor and mov pop daa xor cmp add or sahf pop fsubl int3 les sbb les or sbb imul jmp scas push mov push add or das fadds dec cmp inc jmp cmp xor cmpl inc sbb in dec pushf in sbb fadd jo xchg cmp movl lea jbe ljmp pop sti in mov loopne mov inc fnop jmp xchg fisubrl dec and mov js movsb movsb add ja xchg pop adc in fldenv aad outsl sub or rorl jno add inc adc jne mov push xor inc xor fadds cmp dec roll in lock jecxz adc xor nop idivb inc call xchg lcall cmpsb mov fs mov lock cmp inc cmp xchg fldcw mov mov or pop enter or pop sub push test xchg mov out xor sbb add or stos push ret fisttpll clc cmp mov pop sarb sbb pop inc sub cmp push or push xchg imul add sbb or cmpsb jecxz movsl mov loope mov das inc xchg and dec je or sbb xchg scas icebp and loopne and cmp sbb jmp push inc dec mov (bad) daa cmp xor insb or lahf mov inc iret aas lods sbb leave inc push adc or xchg jno cmp jne sbb add push adc sbb orl test ja pop pop movsb out cmpl test arpl inc push jg xchg jne jmp je cmp sarb subl data16 jb sub push mov cmp add out cmovno or and test push scas or mov pop daa push xor dec xor (bad) outsb sahf mov sbb rcll movsb xor and and inc cmpb je repnz lahf xor mov test outsb sub hlt sub mov add insb inc or data16 mov ret pop mov addr16 and adc arpl dec pslld xchg inc gs movb arpl pop (bad) xor pop lcall or ja dec adc push inc lock add dec push pop and jae inc add mov (bad) sahf lods mov aam ret dec pop add adc adc add sarb mov ljmp test or stc or (bad) aam les add inc ds cmp xor out sbb or mov add xor xchg cmpsb push orl fstl or sub lock push aas inc mov pop add or mov sti and das cmp jle mov mov jmp pop mov imul mov scas dec inc push cmovae xchg pop pop stos jnp dec pop push and out out enter or xlat repnz and enter es dec aam iret and hlt sub pop scas or pop mov hlt dec cmp jbe iret dec sbb fcmovnb lahf cmp je notb sar mov gs jmp clc pop lret (bad) mov push fnop loope (bad) sahf (bad) add sbb sub push and or cmp in ret pop pop outsb inc jo rcll repnz and and cwtl mov or inc sbb push ficom imul es shll test add orb push lods pop add add mull dec dec mov adc ja imul loope push stc out pop rclb sub aam aam fimul inc imul inc movsl hlt daa subb pop push repnz push cmpsl cmpsl testl lods movsb dec or popa rorb push pop add (bad) arpl xor hlt pop cmpsb (bad) das cltd add mov dec sub xor add test mov dec pushl cld adc cmp mov mov rorb inc in pop or and xchg ret test outsb movsl fnstsw test push int3 push inc sub lret cmp insb xchg cltd ljmp pop testb sbbl and and adc add add pop sbb pop jl mov dec mov cmp bound add pop mov pop inc add push push out sub mov inc push cmp (bad) loope dec loopne cmp daa outsb dec iret xchg rsqrtps sub pop fnop gs dec inc push fmul ret xchg (bad) pop inc cmp fistpll lea es mov scas mov sahf mov add mov dec clc pop and sbb add pusha les sub (bad) sub hlt (bad) cmp inc call xchg mov (bad) movb call dec lds in shlb jne mov ds imul dec adc loopne cmp ja jmp push pop ret pop popa shr pop mov jne out (bad) faddl or mov inc into push adc push fiadd mov dec xchg mov pop fcmovu ret movsb sub push or and scas adcl xor sub sbb cmp lods jno subb or shlb dec dec fadd out cmp aas test xchg inc sub in mov pop sub xor sbb add mov stos cmp je xchg pop (bad) jnp sbb cmp in inc mov cmp roll fildl jbe sub loope shr xor incl xor imul push or dec lds mov sbb loopne or rolb loope mov xchg dec das inc clc nop arpl pop xor in and push lock adcb add pop mov push leave adc les imul out sbb lea mov sbb jo or pop push ja dec sbb and push mov push ret das adc movsb stos in lea fndisi(8087 or cmpl add push inc int3 mov (bad) aam push cmp pop cmp cmp push inc pop xlat push cmp push insl adc call add fcomps ror repnz dec insb and (bad) pop scas push out xor cmp sbb shrb pop or push xor dec jo fs add xchg push mov xor mov fistpl mov in sub xor inc movsb dec push movsb repnz fs mov inc int3 dec aam push sbb push aam call push in push cld push sbb inc pop in lret mov bound clc (bad) jo pop arpl arpl cwtl inc scas dec out or es addb enter push sub pop cmp push xchg mov js fsubrl push inc outsb mov mov int and sub inc das adc pop outsl jae push jg fistpll in inc daa push bound jb das pop bound movsb ret mov mov add jnp,pt add (bad) cmp dec dec or push push push mov popf nop sbb (bad) and sbb dec ss insb bound fidiv inc jb push imul push dec lret add mov and adc dec int or cmpsb dec dec imul pop dec dec adc adc pop lcall nop inc scas jmp fs add jp pop ret push les gs xor or movsl sbb adc insb out (bad) pop mov cmovnp sbb jns xor jb addb nop xchg cwtl xor xor pushf mov xor lods mov mov mov xor xor rcl fdivs xor xor loopne call in lock clc xor xor add or xor xor adc xor xor sbb and fst xor sub cmp push int3 iret cmp pop mov push lea pop test push jge and sub loopw add nop lret rolb test dec push mov add movsb xor xchg nop sbb cwtl inc pushf add nop pop mov inc sub or test rolb movsb xor mov mov lock movsb jb adc sbb nop lret xor inc sub push inc rclb dec gs fdivs xchg add test adcb in push sbb aam inc sub lock hlt xchg lods or cld clc or cld repnz dec sub and gs sub add or test pop movsb xor xchg adc lret push sbb mov gs sub sub insl dec add sub xor mov inc cmc xchg inc pushl imul ss je gs gs adcb rcrb inc insb outsl jae and pop push ret dec mov cwtl or mov movb add xchg (bad) mov push adc outsb int pop daa test je add mov addr16 xchg mov jae addr16 fs fildll scas pop dec arpl jae xchg popa push xor xchg fsubrs jbe daa lea or jbe or jns jp jae sbb int (bad) addr16 jnp xchg xchg pop pop (bad) pop xor pop dec mov mov push icebp push add inc lds adc or pop mov pop dec xor movsb mov iret shrl dec sub xor inc or dec outsb add and mov popa add mov and xchg fisubl (bad) cs push adc pop in sbb push (bad) pop xchg pop pop xor das cwtl mov xchg or push mov (bad) pop mov addr16 fwait movsl jbe jne insl outsb das pop fs jecxz sbb outsb rcll pop xchg mov rolb xorb icebp mov inc outsl arpl (bad) jg pop adc xchg pop outsl xor xchg repz insb inc or outsb adc cmp dec enter iret hlt movsb outsb (bad) out insl xor and mov jg daa cmp xchg xlat aad insl mov mov mov fcomip nop push mov insl and add outsb fs push enter dec sbb push dec cltd push inc mov push xchg add xor add push or add xchg add outsl pop dec push in inc pop dec inc js fdivrl xlat scas addr16 and mov xchg add sbb scas sbb pop push js xlat add lods pop iret enter inc and insb push pop sti push and push mov es pop add neg add push es push test jge jp jne orb push add xchg outsb dec pop mov popf lret and cmpsb gs pop mov fadds push pop or cmp cmp imul fsubl in cmpb or inc push push lods push dec or fs inc test faddl ret mov les int3 push inc push ja adc and push pop sbb add pop xor mov mov xor scas aas inc aaa fistl mov das pop int3 add cltd (bad) mull sbb fmull loopne sbb insb mov sub and pop adc rcr shrb jne aaa push out jns mov adc lea add inc adc clc push inc cmp mov xchg cmc sbb outsb rolb inc mov lea push xor add add add mov (bad) adc add stos cmc bound and pop cmp jb (bad) out cwtl insb and dec arpl mov or (bad) xlat (bad) sub inc push movb push push mov dec mov jmp add sub adc adc pop insb sbb test or loope pop cmp into push mov or mov mov mov scas out lret push dec and es push cmpsl lea je shlb popa add ret sbb rolb rolb or and adc add and push out push pop test push cmp loopne pop sbb daa out push outsb inc out adc loopne add push pcmpeqb (bad) adc jo jne lahf or in dec lahf push pop add pop adc fcoml or inc push cwtl pop or sub mov addr16 adc mov xor cmp mov and lods fwait rorb or daa push push push mov xchg or lea sbb push lea or aaa dec push and mov mov cmovs xchg repnz testl push aam fimull sbbl nop jbe xchg mov ret sub mov out cmpsb xchg mov das inc add xor arpl in dec jne shr sub dec jo or sub clc nop xchg fadds repz mov mov mov push arpl or add (bad) adc or jo dec shll mov cmpl pop inc test insl ret popa xchg add ja inc add mov and mov arpl sbb imul movsl add mov push sbb push jle jno push inc (bad) out push adc dec sbb mov mov xor sahf aam xor or and cmp call std popf push loopne (bad) xchg xchg jmp adc push jp adc mov pop push pop pop and add outsl add adc push inc mull push cmpsb xor add push cmp inc pop dec outsb push cmp mov add addr16 movl push xchg jmp das cmc pop les adc push rorb push mov test shrb cwtl sbb add and test xor addb xor sub and mov in std insl fs addr16 push push pop xor (bad) mov jnp add arpl and pop loop push xchg xchg outsl in repnz dec pusha mov pop test repnz sahf xchg popa andb add fimul dec je,pn pop dec fmulp lea inc insb jl,pn iret enter enter pop xor cmp sub js jbe test mov jp in or pushf cmp cmpsl jle mov cmp dec and xor sbb mov or dec sub xor clc mov ja xchg and pushf adc jecxz inc mov or push clc lock loope cmp jmp in xor jae sarb je jno mov sub adc cmpsl xor int3 xor inc stos imul arpl add ljmp loop mov pop xor mov je (bad) jb aaa (bad) inc jecxz lds xchg mov mov pop movb push sub push xchg movsl inc scas inc lahf ss mov pop hlt (bad) lock rol movsb int shrl inc insb mov mov ds rorl xchg mov push sub in insl ds mov mov ret lods sub sbb cmpsl push adc xor inc sub xchg data16 sbb jmp popa imul scas jae fidivl insb and sub pop mov jo insb mov (bad) cmpsl std xor popa imul shrl lods mov enter cli cmpsb test or inc scas fwait movb fcoms jp aas hlt aad sub sub imul dec fwait pop mov stos out out dec dec xor pop inc pop pusha insb inc push movsb (bad) adc mov push cmp push mov daa xchg mov pop jno pop lock ds adcb dec dec loopne nop jo mov lcall push cmc into push pop fmull ss (bad) add inc imul cmp dec enter add ror cltd test push jnp pop dec pop mov push in push mov pop push imul adc (bad) mov pop add sbb mov push outsl jo jo (bad) aam push push insl out mov push push addl loopne add nop cmpsl dec lock arpl or test or dec push sub mov xchg jl adc add sbb add xchg ja hlt dec fcomp add in push or xchg sbb xchg loopne fistp fmuls jo sbbb xchg loopne inc cmp jmp nop cmpsl insl jae bound adc add sbb (bad) mov cmpsl mov xchg adc stos jmp andb nop sub cwtl cltd inc (bad) sbb cmp add inc push xchg (bad) nop cli rclb mov movl sub or pop or push (bad) je sub or movsb push inc xchg add and xor test adc rcll jp and arpl inc inc test enter inc adc adc sbb pop inc ds sbb insb cmpsl inc add mov (bad) push push ret mov out cmpsl fidivr push addl jo cmp sbb outsl inc js sub or xor rcrl outsb inc jnp push lods or mov push xchg or cmp or mov add data16 pop xor cltd add (bad) fwait mov and dec and and orb es sahf xchg jo mov in add pop push pop sub xlat push in js mov sarb push inc (bad) push bound dec push lcall pop pop rcrb push imul rolb sbb push add loopne push outsb scas roll mov or xor aad xor in cmp xor out test imull adc mov push jl (bad) push jno cmp ljmp (bad) hlt test or jp in das loopne inc hlt push lcall pop test mov data16 and push and xchg inc adc cmp inc xlat insb repz dec sbb adc insb mov insb push clc in push loopne push adc nop out insl pmaxub xchg dec cs push insb sbb or sub adc fistpll mov mov mov std pushl cmp cmp es push pusha rcr adc push inc bound call xorl jl dec inc add ja adcl mov dec inc leave xchg testb push or popa sbb push pop and cs jno shrb cltd and or inc mov and cwtl mov pop add ds lods mov mov push inc popf lods xchg xor mov fsubrp repz adc inc add cmp xchg sbb scas pop mov adc scas xor sahf into movsl add push (bad) adc and adc push jb adc les dec pop repnz add fistpl nop add pop xor ror xchg popf fisub or adc push add add xor pop sbb dec push xchg dec adc sbb scas mov fidivrl sbb ja pop mov dec repnz jno push in cmp mov and imul xor int test push jb or add xchg ret and pushf hlt insb je inc cmp ljmp cmpl add inc push je mov and es daa jae jb pop sub inc cmp leave sub rorb cwtl nop shrb inc adc inc inc sub les or subb or add icebp rcrl mov popa insb dec movsb cs mov lods fidivl pop or or out jb sbb mov pop dec gs xor cmp dec and mov gs add test fdivr xor jb ds imul push jo popa mov adc xchg and das (bad) je fsubs cmpsl lcall mull push pop mov push les call call (bad) mov mov push fsubrl js loopne dec inc jle jo imul nop inc scas in xor push pop push dec push add sbb or cwtl je imull jo insl push push xor gs fcoms and inc mov xor es shlb jmp sbb pusha mov pop xor outsb inc push dec jp aaa and adc adc popf test daa inc add xchg jle jge in mov adc ficomp into mov in scas xor jmp adc sub sub lahf adcb test push or or mov mov cltd adc arpl xchg jno sti mov pop (bad) str xor xor cmp outsl xor nop adc or enter xchg faddl test dec lahf cmp pusha in xchg jg fimull mov mov jmp lock mov mov mov xor inc sbb sub inc (bad) rclb (bad) push dec dec cmp jle inc add xchg jo mov insl test je or je jne jp pushl xlat out and sar push aad movsl jnp rol call or and add inc or mov mov inc xor mov push push dec adc jo rolb inc pushf pusha inc mov arpl xor mov pop and push cmp xor mov lret (bad) in rclb leave loop adc jo adc in inc and (bad) and jmp jne xchg sbb cmp mov dec jmp sbb and call addl cvtps2pd cmp mov (bad) add mov adc inc (bad) pop jl cmp jg cmp mov mov jbe jb inc pop or adc cld pop fdivr imul fdivrp fstl cmp (bad) and jge mov faddl sbb idivb push addr16 lea or fmull mov xor bnd xchg adc out jmp and sbb xchg jb call xor (bad) mov (bad) sub jmp or ss or xlat call push pop movsb dec es cwtl icebp inc mov or mov sbb dec inc dec push orl stc lea jns pop sahf rclb movb in xchg fisttp ljmp sbbb adc fsubl int ret hlt js sbb xchg in mov test fwait add sbb xor jns mov sbb jne push cmpb imul push aas cwtl fisubl jmp push add jl jg cmpb outsb test aam cmpb pop inc fidivr mov inc inc or push inc ret mov mov push mov out cltd pop cmpsl pop lcall test jmp sub fs mov xchg mov or mov mov mov cs mov mov ja push jge push cmp test mov dec pop push gs js inc dec fiaddl jnp imul imul ret xor sbb fisubrl cmp push dec inc mov sub xchg dec or test dec pop and jne and ret or mov mov cmp pushf rol daa add inc sub jg nop je leave sub push add outsb cmp push adc jl mov flds dec or jmp not and xchg inc and (bad) ret pop inc imul popa mov aaa jmp dec testb sbb ret jbe pop ds pop dec neg jmp push add sub jae push mov xor push pop lock andl inc add call push and xchg xchg or pop add jle inc fcomps xchg mov mov in mov mov and (bad) xor add adc shlb mov xor sbb sti push in sbbl ret sbb and bound js dec jae push push add roll add xor icebp fimull or sub jmp clc sub fcomp popa inc mov sub lds cmp or or lods xchg add xor mov pop jmp and inc imul inc scas es (bad) and sbb push sbb inc mov lods std rcrb dec flds and push daa shlb jns add pop push (bad) fnstenv jns and pop je and data16 adc mov clc mov sahf push mov popa or je mov cmp pop pop sub push mov xor jmp mov bound dec jp enter add (bad) sbb mov dec add and insb in and or les pop out add sbb js nop cmp scas add movsb fistpll mov add mov dec cmp std push std pop sahf jmp imul push or pop pop enter int3 jl test repz mov gs xchg or (bad) push fisttp iret lea stc cmp inc xor mov cmpb test and sub imul inc lcall add adcb nop mov ja add clc add add sbbb xor lods aaa stos in sub pop aas xchg movl movsl add mov stos mov icebp push push add add jmp sbb mov adc inc pop xchg icebp add rclb push sbb (bad) xor ret push mov and fs scas rcll and fs enter movl roll mov or inc sti aad test test shll sahf mov inc mov cli test rolb inc add push cmp pop mov (bad) pop pushf loopne mov xchg lds outsl xor pop push jo imull or inc data16 lods dec inc (bad) hlt enter mov add cmp adc fdivs mov or data16 add push lea ret leave sub mov jbe add sbb inc shr xchg outsl aaa stos imul adc and dec jge sbb aad cmp pop mov mov ja,pt popf pusha sbb movsl mov jmp imul sub das cmp gs and sbb add scas fisubr lahf movb jp and insl cmpsl jmp icebp mov enter lea dec add dec (bad) cmp and xchg (bad) mov xor jge mov adc jle pop lock icebp sbb imul test inc loope mov jmp jge rcrb jge push stos inc jge leave rcrl add int3 adc aas cmp je adc sub (bad) mov mov pop cwtl push arpl in inc vmptrst pop out adc jecxz out sub pop test sub or sub imul add and pop (bad) sbb cmc xor lock push mov roll push inc inc and push add xchg pop imul adc dec cmp add sub dec fsin inc mov and sbb push push push pop push (bad) mov (bad) inc dec (bad) jnp cmpsl sub jo loopne sbb iret and (bad) mov mov push lcall pop (bad) xchg push mov pusha movl test and add out mov sbb sbb loopne adc outsb inc lahf add cmpb mov mov cwtl and frstor addl pusha add icebp and ss adc stos cltd lods cmpsl shr mov or jno addl movsb push imul adc pop rorl pop cltd mov dec or sbb dec xchg les mov lock imul mov jecxz and xchg mov add sti dec insb sub cmc test cmp and test push inc sahf xlat and inc pop pushf push push and dec mov xchg push decl or add pushf mov sub dec add test std loopne (bad) test jl mov push aad dec shlb inc (bad) cmp stos pushf pop lcall and adc fiadd sbb add lret nop cmp xor adc or sub adc je pop lea pop lds mov je lods ret or xchg pusha pop push lcall and dec das dec roll pop icebp ret jmp scas insl fs ja inc loopne xor out dec addl and xchg add mov or mov mov out xor cmpsl lahf mov sub dec and in add jmp sbb pop push test pusha mov push sbb call rol mulb leave mov sub xor (bad) add sbb pop sub fisub adc jl out std mov mov mov xor lcall (bad) ret adc mov inc mov or pop jecxz mov nop and mov imul push cmp insb jg xchg cmc pop add pop xchg pop mov lods mov xchg mov movsl mov mov daa mov dec decb loop xchg cmpsl decb cmpsl rcrb sbb mov (bad) (bad) jne or cmp jp clc repnz stos sbb repz cmpl das pop aaa cmp rorl sub cmpb mov add xlat lods das pop fimul enter fmull pusha lret add push mov mov mov lods dec loopne popa and dec dec push (bad) push ds popf sbb js inc mov xchg test mov rorl cwtl pop (bad) out cmpsl pop pushf cmp inc xor mov (bad) in pop mov stos inc iret push nop xor cmp or push pop push sub and jnp movsb loop or das and add addb sub inc lret add push (bad) mov scas (bad) in in xchg stos push mov inc (bad) dec adc or xlat jge lcall int in push and lods mov inc adc xchg dec scas dec inc call xor jecxz js jo mov dec cmpb adc xor mov add add icebp inc mov mov ret fcompl mov pushf jl xchg inc jae mov pop (bad) cs lods iret repz cmp adc mov pusha or pop lea push sub aas dec push or lods pop mov cmp jle push jmp and or dec or pop cli pop bound arpl add lock add and in pushf inc or and push std xchg in testb je mov lods jo inc mov pop insl stos mov and jns pop xchg dec (bad) icebp xor push inc lcall add daa mov (bad) jg or mov jp pop jnp mov mov adc xlat popa in sbb sbb cmp mov (bad) mov add and fld pop add or pop mov jbe aas inc dec mov test cmpl addr16 mov jns ret je fstl jns inc push mov addr16 addr16 movaps leave leave leave sub sub leave leave leave sub leave leave leave adc adc leave leave leave adc leave leave leave sbb sbb leave leave leave sbb leave leave leave add add leave leave leave add leave leave leave or or leave leave leave or out in icebp repnz add mov mov imul clc pop dec lock out sahf inc call jns out sub and sbb jns out adc jl add cwtl cmp repz nop loopne fdiv cmp repz enter cmp shrb mov cmp repz push mov iret repz nop cmp iret subb and cmp repz adc pop pop inc iret repz xchg push iret repz lock call iret repz sub and repz repz adc iret mov test scas mov lock call in mov adc popf inc or mov jae mov loopne mov dec mov inc out jns repnz js cmc fisubl pop roll les addb cld xor mov test pop (bad) jnp fwait aam mov aaa pop push sbb cmp mov mov pop add add popa jns adc inc mov insb inc insb jns add fsubrs inc or (bad) mov push pop or pop or int outsl mov xchg jae mov and std adc cmp pop test add mov cwtl in or and rcrb sub andl push mov inc mov rorb (bad) ja add adc clc mov cmp in int3 sahf or sahf idivb and sbb neg repz and inc pusha push dec push mov or and fs (bad) inc imul pop mov mov pop enter aam inc addl push popa adc mov cmp or rolb das mov fildll mov mov mov mov (bad) fcos xlat call jmp cmp loope clc aad (bad) push dec mov sahf cmpsl pop fs hlt fdivrs int or clc roll rcrb cmp out lock or nop ja aas or daa add sbb sbb inc cmp pushf les int3 movsb push or push and adc add mov fsubr jmp cmp mov imul jo inc sbb pusha addb push push cmp push inc shlb imul popa mov push add jb dec adc sbb les aad add adc jecxz (bad) (bad) repz pop add in mov jae push sbb sub or jns insb pop sbb mov (bad) cmp inc fadd mov or pop sbb inc sbb (bad) cmp dec push add pop xchg add pop jns lcall add aam mov enter and xchg or sub rorb outsb mov scas pop nop mov test mov xchg ror mov xchg push aam inc cmp enter fwait int push mov rcrb lock or nop add pop imul and js mov enter test pop ja,pt push cmpsb ret es subb ds cmp mov dec mov add xor sbb into and adc faddl leave mov pusha dec push add mov push add bound xor or add cwtl cs cwtl (bad) inc sbb insl or rclb push xor stos push push add jmp flds movsb incl imul ds adc mov mov add adc gs cmp les enter cmp push xor mov push add sbb roll cmp xor jo gs and jl or add or jmp arpl and test rcrb or clc push push add fmul test (bad) hlt movl and pusha mov pop clc rol inc xchg or inc cmp rorl ret sub imul pushf mov mov fisttp jp fldt push pop mov mov lret cmp push lock cli popf mov sti and inc mov add or pop or push lods insb test add (bad) jo or inc or fistpll (bad) jne rcl aam test inc mov sub test cwtl idivl inc mov or pop jg fincstp sbb dec adcl lock xchg mov xlat sub pusha xchg and mov pop mov ror scas jl fs insb clc cmp je or add xor aam unpcklps push (bad) or push adc cmp or mov int3 pop mov push or jo fdiv pop pop (bad) (bad) sti call and test lock or je xchg cmp push jno mov popa mov lar das sbb das ftst inc es stos or inc out xor push pop imul jb and or cs inc loopne ret call sbbb test adc jge mov cmp jl add movsl mov das or xchg scas iret jbe out scas stos fsubrl xchg je jae pop or push mov lods add out movsb dec xor pop pop rorb cmp cmp test dec add popf or push lods inc mov lahf and xchg into mov fmuls mov cmp inc mov xor in sbb roll cmp xorl add mov (bad) sbb lahf call xlat jne sub inc adc push mov gs lcall dec in mov dec mov push adc lds add push add repnz inc pop loop add adc push xor addb adc dec add or pop adc pcmpgtb stc stc in adc jo (bad) aaa leave clc jmp loop cmpsl aaa and cmp push dec or mov bound lods arpl jmp jbe andb add sub pop pop test mov negl or adc adc scas sub sub clc or dec and cmp lea mov xchg loopne roll dec push bound ljmp add sub aas jo dec sbb mov (bad) xor rcll cmp push fsubl js xorl add in adc mov lret cld (bad) aaa xchg cmp jmp mov jmp mov push mov mov iret add movhlps js push mov fisubrl jne jg or pop adc fs sub adc sti add sahf xorb std pop or fdivs test lret or (bad) (bad) (bad) sub aad (bad) or sub push sbb push jge pop sbb xchg mov and test in cltd or shll enter sub inc adc mov cld adcl jge xor cmp test push (bad) mov pop cwtl aam (bad) push cmpsb out push clc lea sbb movsb pop push or and cmp push icebp fistl sub insb call inc push je and push dec fist pop imul and pop push ret (bad) jbe mov or es loopne (bad) jne mov fadds jo push imul sbb cmpsl mov push fsubr sub gs test push and inc cld add shrb push in jmp sub cmp pusha and rorb test lock ss sbb xchg imul dec repz scas cltd xchg (bad) call (bad) add mov rcr jbe jmp pop (bad) mov and aam sbb aam sub and (bad) (bad) out rol dec sub sahf out inc loop cmp adc ror sbb movsl adc fidivr jmp adc fcoml lea jbe mov dec mov push add mov das sbb sub adc sub fisubrl dec in adc dec in in dec faddl (bad) lock add add add adc loope in cmp iret mov add add les jmp sub das lret arpl scas sbb and ret and test xchg cmp or inc cmp pop adc mov ss push adc divl jl das loope or push (bad) mov in mov shrb cwtl adc mov sbb xor add subb lods inc sub push or imul mov dec (bad) fdivl outsl inc mov out xor push sarb (bad) push sbb jp adc xchg out and popa andb inc mov mov xchg subl fidivr sub scas aas lds adc aaa sub inc cmp iret or sbb mov pop and movl sbb dec jmp pop push (bad) and cld int3 pop or clc jae sbb hlt (bad) mov jns xchg adc sbb jae mov push xchg inc add mov shll add cmp bound adc dec aaa rolb xor xchg cmp (bad) dec adc (bad) xchg push fldcw cmpb mov jle int mov and fsubrp pop adc push cmpsl dec les sub in pop cmp scas add rep fist loop add add les imul lock sub ss push sbb push (bad) jle jo mov push add test jbe out mov cmp test xor fsubs testb mov test roll jge daa jmp aaa inc mov adc aam mov test jne mov ret or test adc imul movsl lods out jmp mov add push (bad) mov (bad) or cmpsl ret add dec add jl roll mov add inc fdivrs inc out dec dec mov cmp cmpsl mull test or imul mov adc or push sub push roll dec sti push mov dec adc setb fimul xchg add sub add and fcomps bound inc mov push xchg pop das sbb aas pop or sub adc dec dec aaa imulb lcall jecxz cmpsb sbb sub imul add jno add dec mov xor pop lret bound jp sbb mov repnz mov lea adc (bad) pop inc xchg out adc adc push gs out jno jmp pop sbb push outsb loope fimull movsl mov sub sub gs add and cmp mov pop bound mov push inc cmpb std popa adc addr16 decb add or shlb dec push sbb push mov popa je xchg mov testb push cmp mov xor inc pop jg rcr inc mov insb adc mov (bad) incb xor lock dec je jb sbb sbb or sbb mov popa cmp push mull sbbb jge jo push inc xor int3 sub in stc or sub mov (bad) pop inc cmp je lock push mov out adc sub not (bad) imul mov add mov xchg sbb or push hlt test jae jmp cmp aas pop inc pop mov cmp je outsl jl in xchg incl nop scas shr stos add sbb pop rcrb adc xor cli daa data16 and shld test pop pop jne test push push sahf add pop loope popa aas jo sbb movntq pushf fmul adc sbbl das je roll cmp fimul jae lock xchg ss mov loopne jo mov aaa ss jnp aas je xor ja adc dec add outsl call aad inc push mov sbb jmp sbb sarl dec mov dec sub mov or ljmp dec xlat adc mov lods je lods icebp adc cwtl sbb pop jne rcr je jp mov adc cwtl insl xor mov das pop push sub test xchg fadds rclb inc jnp inc mov add movsb lods xor mov cmpl movb cmpsb cmp (bad) mov test outsb mov pop inc out fadds mov mov cmp movsl add bsr jecxz push lret xchg xchg inc js and aam rcrl minps sahf pusha movsb fsubrp and inc push adc mov in push xor add shr out cs mov cmp adc fisttpl add imul inc jecxz repnz out adc jb rolb add and sbb sub bound pop mov scas popa dec adc push maskmovq notl lret jp mov lret pop add adc rolb outsb aam mov sbbb sti cmovp push inc xchg sub mov dec xor xchg (bad) add sub inc pop pop mov xorb jle push aam cwtl or add pusha pop mov rolb or or mov or outsl add xchg fbstp push fs sahf xchg pop sub sub data16 cmp shlb popa das sbb in jns sbb pusha adc cwtl mov xor xchg loope pop mov (bad) lods add mov mov shlb mov dec outsb outsb dec mov repnz adc add scas jb lods (bad) mov fildl push pop mov pop fstpt iret leave enter les and daa mov dec pop in outsb or loop loopne jo jl pextrw dec or mov xchg mov enter jne xchg dec int3 adc xchg in adc sarb roll fmul scas jge push adc fcoms inc js fcomp faddl popl in push adc or or es push insb hlt jle adc push and jl or cmp or je xor lcall mov pop fstl fisubl int3 sub or je xchg mov mov push mov adc sub fmull loopne imul or js adc test push cmp inc push push (bad) outsl lock ret jo,pt pushf push scas movsb loopne ds sarl loope push push push push adc gs jae clc popf movzwl sub insl pusha (bad) pop stos and xor xor dec imul out push (bad) pop mov add arpl insb push or out mov outsl pop js bound fnstsw jnp es jb jb popa or jge scas add popa dec es insb bound jbe xlat xchg jbe es gs pop jo jnp repz addr16 jb addr16 imul out add mov arpl insb daa sti outsb inc pop push jg sub fnsave je cmpsl sbb mov xchg pop jbe mov loopne mov fdivp mov pop jb arpl mov outsl dec pushw das in jnp mov imul popf mov lock mov push lret add bsf int3 mov int cmp lcall lret fxch xchg jp mov adc dec xor scas subl cmpl adc sbb test mov xor adc ds or notl inc addl jl or inc push test or test or adc je or outsb mov sbb mov adc sbb jmp mov lea pop add adc adc mov push mov out addr16 mov xchg aam inc push or jmp repnz and mov pusha inc insl xchg (bad) pop popa add leave orl xchg je lock push and jb ja arpl jecxz adc enter or cmpsb stos adc dec or fs jg adc adc or sete push and (bad) sysexit test ret fldt sar jb or jb jmp jo jecxz sbb or and adc das sbb mov aas sbb dec in push pop xor pmulhw sbb dec sbb test fimul rolb fcoml push dec adc mov adc sbb adc or adc das (bad) adc adc jb or xor push es or dec jmp (bad) xor sbb or movsb push add add xor push and push mov jle pop push loop (bad) xor jl cmc in pop in add add xor add or or cmp repz or or or repz repz adc push iret repz pop sbb sbb sbb imul sbb and and push call out sbb repz cmp insl repz repz mov cmp shl cmc push out sahf out sahf sub dec pop insb jge sahf out mov jge out out cld or testb or jns inc or mov fcoms add xchg add add movsb jb in push push adc adc push sub or lret dec or jb in push or mov adc adc adc adc dec in lret adc jb inc pop dec push cs push xchg dec sub jmp pop sbb aaa pusha ja push popa imul bound and dec gs arpl and sbb push push test and pusha xchg mov jo mov mov add cld xor pop and fcomp imul ds adc sahf js lock adc popa or sbb incb push push clc push adc loop gs xchg add adc mov test (bad) adc int3 mov ds push lock sub sbb jl loopne mov decb test push loopne dec int3 mov push sar push add add add push cmc mov push jb das out les dec push xchg push pop xor inc push (bad) mov ljmp imul mov dec jbe push cmp test add ficomp adc loopne inc pop inc push dec jl inc inc adc push inc pop adc push jbe add repnz (bad) repz push pop je inc icebp xchg push cmpb (bad) addr16 sub cmp je push lods cmp leave (bad) xor data16 add jne pop or pop sti (bad) out and test mov or enter test outsl cld sub inc pop mov inc jo outsl mov cmovb inc daa test movsb sbb add insb push and pop add push repz mov (bad) (bad) mov loope lahf out sbb mov jne fnsave insb popw pop pop lds subl mov or js scas out pop popa jno popf or call mov mov psubw add subl push js loopne nop or pop mov and ljmp out adc lahf pop inc popa pusha loop push aaa and jo pop adc and adc stos adc push jb adc and and cwtl jb add rcrb iret or and xchg lahf add (bad) pop sbb sbb sub adc stos sbb dec push sbb inc pop xchg mov lods in ret rolb push les pusha jo push push outsb xchg stos test cmp and and pop enter test push or add push fdivs dec cs and shrb add or test addr16 inc cs sub dec push inc sub inc xchg pop lahf cs inc pusha xor js nop or js dec gs jbe and adc pop xor and xor repz pusha dec loopne ss fadds inc sbb cmp push adc pop pushf push adc nop repz cmpsl lods and fcomp xor sub cmp pop add inc mov ficom xor fs popa jae in or outsb sub mov add mov mov add test dec icebp adc push test mov sbb lods je add sub jle sbb fisttp jl ja push mov mov out dec cmp mov pop test sahf push or andb or daa test inc nop sbb dec pop adc xchg add cmp add loopne inc jmp aam and out push push push xchg sbbl mov mov dec xchg js pop push sub mov cmp cld ss and in fnstcw inc repnz cwtl and and pop or adc loope bound mov mov fcomip push aad and je sbb call icebp push popa sbb sbb mov test shrb leave pop adc ret cmp dec pop lods inc inc nop or sti xchg (bad) aas adc enter dec pop inc pop frstor add ja xchg add scas mov sub adc stos mov pusha and push leave push cmp sbb and sbb inc jb sbb inc cmp and or and inc xchg sub cmpsb xchg test cmp int3 fcomp sub mov ja and loope pop sub dec xchg subl shll pop dec push jo add add sub cs xlat sub push xor std xchg push loop adc add lahf scas shlb adc out mov cmpsb push shrb lret push (bad) sbb and stos js sub adcb les and add and jg movsb sbb add inc push cmp mov push dec xchg fucomp sbb ret xchg pop jo scas adc push xor and adc push sbb push inc leave push xor and mov and adcb nop stos add cs in xor xor jge push inc xor cld add add imul xor loope in sti std test bound fs adc jae pop or or divb jne insb adc dec lods fsts mov add push lcall ja mov aaa push cmp test adc or sub pop cmp hlt xor (bad) adc enter jns add movsl push and dec pop addr16 in js,pn mov add pop decb pop loop setb jge sub pop sub cmp push add cld ss cmpl xor mov imul out insb int imul adc mov pushf cmp inc xchg sbb adc add add adc mov mov pushl sti push jmp mov scas ljmp push clc cmp sub fcoms fistpll pop cs adc or xor push sahf notl lds xor sbb outsb mov lods jle fildl sub or fcoml push add inc push add xor jae int3 cmc fmulp sub adc push inc fdivrl daa adc or jo imul mov inc jnp (bad) aaa insb int xchg sub lret or or jmp in push or shll hlt add xor mov or (bad) jnp cwtl push mov adc xchg das scas pop orl push and (bad) mov lea adc push mov xchg clc xor hlt pusha inc test push mov scas xor dec pop and scas int inc add and pusha mov jb gs lock test inc mov movsb inc inc fs adc fwait dec rcrl pop or rorl ficoml fistl dec inc fisttpll inc ficom cwtl dec popa js adc mov cmp sub xor inc cmpsl xadd sbb or push and sbb sbb adc xor or add add sbbb mov int and bound mov repz xchg and lret and add or lods push jecxz or sbb xchg pop and leave daa sub leave inc xor push sub sub jnp cs les and nop test addr16 lock in sbb pop add or push dec xchg stos push in (bad) or inc lock push (bad) test push push aaa enter aam inc sbb inc les dec nop jo push sub fs or inc mov xlat (bad) dec ss lock jae or imul les ja mov es cwtl mov xor lahf mov ret imul pop adc or leave rorb mov (bad) fnstsw rclb les jge and arpl and lods dec adc aas dec aas lods xlat loopne arpl ss push in out push push out in loope adc inc cwtl or cli cvtps2pd cmpl imul lods mov jne mov test adc and pushf inc pop je (bad) xor pushf push hlt sbb test or daa cmc daa sbb lock fistl adc (bad) bnd pop aaa test fistp mov repz push fcmovnbe shll push pop rcrb movsl loopne hlt repz push lahf sbb sbb mov push repz imul mov mov add movsb ret movsl loope movsb add pushf sub dec xor adc jbe mov jecxz mov mov aas outsl leave fiaddl test xchg fabs fdiv dec mov add push add adc xchg pop (bad) outsl jecxz rol jecxz add fildl or cwtl mov or into sbb stos and lock mov mov test mov ret imul mov sbb sti cmpsb push stos scas sar inc jmp xchg lea aaa insb mov test add out jo push nop push cwtl or js popf je xchg inc push je out bound add or cwtl push push and jge movsb pop push mov xchg adc (bad) es jns fdivs push inc ret pusha adc pop sub cli add mov outsl std dec mov test and loope adc mov adc fimul in ljmp aaa out inc movsb sub dec iret pop insb push sub sbb xchg push pop xor inc adc xchg xchg in lds cmp jl sub mov popf sbb push adc add inc dec pop lea xor add cmp insb hlt test or mov cmp jne andps jno add test andl stos add test inc andb test lods fldl es nop adc sar sarb cld xchg outsl mulb fs roll movl or sub aaa shlb sbb inc inc mov mov (bad) ja addr16 inc fcomps mov aas xor add add adc push sub pop out inc daa insb or (bad) jne clc movzwl insb outsb pop fmull loope inc dec jmp mov or movb add loop push mov sub pusha mov out cs xchg and and mov pop cltd cmp add in mov sbb mov cmp cmpsl add adc sub xchg loopne in les xchg or mov adc jbe mov or scas jns pop inc js mov lahf and inc leave pop testb cmp outsb loopne nop inc dec fdivrs repnz adc clc je or xchg test adc mov insb fwait rolb lret mov adc imulb push inc mov inc adc pop ret mov scas arpl jmp add cmpsl inc and mov inc sbb sbb mov mov jb cmp ffree ss xchg outsl cmp mov push iret push cmp adc push and (bad) add repz fwait mov adc mov cmp das lods loopne cmp les jns dec jns pop or cmp dec pop jo jno inc mov mov sbb adc (bad) in in fldl and mov or fsubrs push inc mov sbb fbld sbb repz dec push dec inc xor cli shrl gs cmp mov setb popa inc rol and add stc push (bad) sbb sbb arpl or and fs add or push add dec test cs mov aad adc adc push imul out in mov dec sbb fwait mov sbb mov icebp jmp testl adc (bad) int3 or jmp pslld cmp add sub test push pop fwait daa add out test inc inc das jne jecxz mov or or aad and std (bad) mov ror aas shrb and nop es mov mov iret in test mov mov or lock mov add inc notl push cmovle decb out mov adc and mov fwait pushf cltd sub jne aas test (bad) or cmpsb mov jae dec out test add push (bad) scas xchg fimull sub sub and push hlt loop inc out add subl and cmp je clc mov cmp dec shrl adc test nop lcall pop pop push inc xchg cld (bad) (bad) cmovs int3 in mov loopne mov inc sbb inc push push push dec dec fidivrl (bad) inc push lods movsb push mov mov es xor or pop jae inc adc sbb test dec mov or adc fidiv (bad) jne jmp (bad) rorb stos mov jne out lea xchg aad mov jg sarb jle into fdiv inc loopne lock jnp int3 pop jmp mov cmp sahf push dec xchg loopne cmpsl push and pop jo adc and (bad) lahf mov mov orl sbb jno add jb push (bad) adc add data16 mov cs push loop and xorl sub mov pop cld sahf lds dec mov in insb jmp adc lds sub xchg xor mov and fistl push dec jne push das ret icebp cmp fidiv mov mov xadd mov inc icebp popf xchg (bad) jne push push lock push xchg lock sahf fs xor xor mov cmpsb repnz jb loope push cmpsl xlat xor and es adc pop cmp js adc out nop mov lret nop mov addr16 mov pop inc sub mov seta pop and inc mov cmc mov push adc mov subps push or mov sub adc adc or or and inc mov mov cmp inc dec shlb inc inc mov push cmovbe pusha std rcl lods xor add imul lods add jne cld cmpsb adc xchg cmc clc fisub inc inc xor in dec pop pop xchg sub add xchg mov cwtl pop cmp xlat cmp pusha lods xor cmp arpl jnp rcrl inc (bad) lahf (bad) jmp mov das sbb xchg sbb test dec or push popa test pop lahf jg fmull ret adc or mov bound in and daa mov jp pop inc stos dec les xlat dec sarb sub imul push data16 add jno sub xorb push mov or imul lea insl into (bad) jge inc add dec mov push or jnp jge jge or cs xor lock mov pop sbb in inc sub jo mov lea push inc aaa dec sub sbb push insl mov scas out xor adc outsl stc ficomp mov push mov sub jb jbe popa xchg push jae xchg xor pop test or mov inc sbb xlat pop mov mov xlat popa push addr16 daa inc test pop cmp lods xlat jmp inc clc sbb pop fdivs iret inc rcrl mov addl mov test cmpsl hlt add movsl ret xor repnz sbb lods bound inc movsb sub cmpsb nop orb or es mov mov test icebp ljmp jne mov neg leave dec sub mov push mov movb xchg jo xchg lea mov movsl and pop mov test jecxz ljmp jecxz push and dec or iret mov sbb push or inc les adc in idivb xor mov pop popa mov inc sbb sub pop cld imul cmp movl or dec popa mov loopne jne jmp js xchg test and loop mov add stos inc lea cmpsl sbb push inc out cs push mov and loopne and cmp iret xor loope or sbb and scas push add or nop or lahf push movsb sbb cmp dec aad mov lods or fs mov inc test inc add inc push sub jge add scas popf push mov imul xor fs or insb pushf xchg and dec icebp jmp sub xchg (bad) (bad) adc inc movsb jg mov and jecxz or je mov aas inc es dec mov pushf das and ret push dec adc test pminsw mov xor (bad) les bound lret je sbb sub jns call sbb in push pop shl jo and sarl aad pop lret test fldl ss rclb sti nop ja or sbb inc loopne (bad) mov pop sbb imull popa movsl scas push sub (bad) or jge inc cmpl cmp fstpt sub fdivrp inc sbb js jb call jp xchg or mov je mov add (bad) mov pop mov add and sbb dec lahf popf xchg das and push sub rcrl (bad) ss xchg push ret mov xor xchg sbb je and in sahf jmp jecxz add xchg scas cmp (bad) xor (bad) or shrb fs out mov aam xchg daa and cmp lods push sub (bad) cwtl lds mov sub or xor inc rcrb psubsb jne cmpb xchg xchg sub enter movsb nop fdiv xchg adc ret data16 pop rolb adc iret push mov loope mov push test push jnp ret sarb cmp (bad) jns sub and jle pushf xor mov adc cmp mov xor xor es adc addr16 pop inc dec and cltd in sbb (bad) mov add pop ja xor sub data16 mov imul mov inc add cmp push inc inc loopne ret fs adc adc xchg pusha or (bad) jno jecxz jne adc jecxz add add mov fild adc push mov pop jp push aas push leave test pop and test and iret in ljmp dec adc lods addr16 fbld mov sub adc and or aam push fmull mov sbb mov inc mov rolb es xchg inc and pop sbb call or cs push push or and lahf mov dec lret or pop jg pop add int mov (bad) sub sub mov (bad) lcall lods jmp sub mov dec sub es mov ret xchg fimull (bad) aam jle xchg xlat loopne or mov loopne mov inc sbb setb stos cmc xchg ret xchg push or or ljmp sub sub or jo dec (bad) jbe adc in pop or push movsb cmp mov popa push or mov stos pop adc loope cltd jne andl dec or sbb jp cmp sbb icebp enter and pop dec dec push push inc dec pop cmc sub dec cmp sbbb (bad) mov std push adc pusha add sub or cmp push pop jo mov push xchg es mov aam out xor aas and lret inc dec (bad) sub fsts sbb push and cmp xchg in stos or pop repz or jmp iret jmp xchg sub and orl rclb (bad) sbb mov (bad) ds adc aaa push test test aam in jnp repnz sbb jg aam and (bad) clc or or in push mov jecxz stc (bad) les shlb out out pusha adc adc bound in push inc dec mov add or mov or aam jle adc clc gs push and and mov add jmp sti push stc into xchg movsb jne mov cwtl pop dec push sub ja or or jmp inc popf pusha inc and rcl dec and addl (bad) sbb cld (bad) sub ds and test pop mov adc sub add inc mov scas xchg aad mov int3 fmull push fsubrs and nop xchg loopne sub xchg lcall repz lods and pop adc or dec idivb jge es (bad) jle popf cmp jge and imul test jbe adc mov loop inc mov pop shll add divb mov mov xchg jbe loopne jge frstor mov jne inc std or mov and sarb mov jmp pop jmp fldl ljmp addr16 and add dec mov arpl fs add rcrb sub jno mov adc push mov add lods and adc in lret test ret test xchg das sbb movsl lods push push ljmp dec adcl push and or push xor jb mov mov test cmp xorl add mov icebp mov mov adc adc fst push sub cld cmp xchg sub cmp dec scas cmp pop pop out pop jo or adc loope out ficompl mov jp outsl and (bad) pop mov aam push arpl and xorb xchg (bad) jl test das mov adc push or dec push dec adc dec sbb aad xchg xor mov mov cmpsb insb loopne rclb xchg inc sub fmul inc sbb pop pop xor popa or out loopne leave xor add or push rol adc add xchg addl decl mov je xchg (bad) adc pop push and dec push cwtl adc push pop jmp inc push add nop mov sub rclb pop cwtl jmp xor xorb dec adc movb je das sti je jg dec cmp fdivrl int sub fwait (bad) mov inc arpl add jg mov (bad) movsb or add sbb or daa (bad) cmp loopne add loope mov int3 inc aas add add das clc loop rolb popf dec loop movsb cmp insl push aas mov and fdivr sbb inc bound out jne dec aaa xor push imul aam clts test fstl push mov fcomps mov lock pushl push aam push adc fcompl aam and rorl insb rclb rclb ret pop lods mov sbb roll or fwait dec es mov bound xor mov pop jmp xor xchg add cmp mov add jbe dec add sub cmpsl push mov push jo gs adc dec jg popa dec ss and fs cmp lock lock jo and mov pop or popa (bad) push les xchg nop bound (bad) inc jb arpl xchg je sub ret cs push lea push push pop jl jno (bad) aaa mov daa adcb pop mov call xchg jne mov sbb adc cmp cmp mov int mov cwtl xlat push lahf lret and jo add popa add fbstp fdivrs dec add or jne add aad int push jmp pop in add inc inc push mov cmp outsb arpl cwtl push pusha sbb and adc mov adc mov lock insb mov les jae loopne out sub sbb mov xor (bad) add in aas fs sbb shrb cmpsl cwtl mov adc nop xchg push xchg cmpl adc or add sub fsts inc mov dec mov rcll inc enter inc push in cmpl cld jge or push mov or inc movb ljmp outsb shl mov or out mov cwtl negb mov jne movsl and and cmp jecxz inc (bad) loopne lods xchg mov mov or xor mov add insl je push inc jg mov clc js fwait mov (bad) adc push movsl sti mov sbb nop or bound sbb push sti sub addr16 pusha sub sub cs mov mov xor rcl push int xor mov cs xchg leave pusha jmp cmp push dec pop xor pop insl inc loop mov imull movzbl push cmp add jmp dec and sub inc dec sbb out pop jno or dec (bad) push add jne inc loope sbb (bad) mov adc inc fdiv repz inc xor push jle jle lea push andl or cmp jb xor movhps out cmp mov pop push jns add dec inc hlt adc dec sub (bad) mov and testl aam cwtl sub mov addr16 mov mov popf shlb push jge call sub pop xchg jae jl cwtl jnp or or pop subl pop and inc test jns jo add outsb jae push sub pop xchg mov jae cmpsl or add movb adc pop iret mov cmp xchg clc nop dec xor cmc into push jne (bad) loopne inc adc inc nop and inc dec clc inc or cmp cmp enter mov leave jo inc inc cmove xchg cmovp loopne cwtl ds hlt inc lods int3 adc int jns out aad in cmc jns mov or push mov lds loope xor and aaa cmp mov pop push js sbb ss loope or mov lcall or or inc inc dec sub (bad) dec std (bad) (bad) xor and sub into add loopne lret inc fs sbb push lahf add loope cmpl int mov and and clc push cld mov dec xor or xor push or push sub push (bad) nop in add pop xchg les or jp jnp fstpt mov repnz iret or jge cmp xor cmpsl movsl aaa lock or movsb rcll adc ret xchg sub jp or or fprem1 push dec inc ss movsb arpl dec cmp les leave (bad) lock lods inc scas xchg test dec push inc mov sub insl mov cmp inc dec adc dec cmp out inc and add inc aad (bad) fadds pop inc or jo inc fs fmull (bad) add add jb xor mov inc jg push inc inc pop addr16 dec push mov mov es add inc pushf movsb loop or js xchg aad inc sbb mov cmp in ret pop fs add inc adc inc loopne mov xor add adc rcll movsl movl add data16 aaa dec inc sub sub and sub xchg in in notb pop sbb cmp sub sub and xor sub loopne push outsl into ret movb add je sbb (bad) adc rcll inc lcall mov inc pop in push mov test (bad) xlat adc repz popa and insl xchg mov add repnz mov add mov (bad) jns mov out push vpackssdw mov outsl add or sub pop push repz fldl stc stc jle lea jno out loop mov dec inc call push lods inc cmpsl or mov lcall out xchg dec adc jbe inc mov xchg push shll jmp pop mov aaa call imul aam (bad) mov jae ds (bad) sarl push movsl decl add or aaa push inc sbb addl adc pop lahf out sbb repz and adc or pop cmp and sbb cmc orl fdivl push dec inc movsb lods inc push lock dec insl or adc pop ret test scas repz add sbb fildl push lock push inc sbb les and mov lea gs and je fsubs or mov xor sbb add jg pop push dec dec dec inc dec push add push adc or or and xor aaa or cmpsb push xor push or add push mov and fwait cmpsl sub push push inc jmp mov add clc incl inc sub pop adc sub jne (bad) in shr push adc push setne or jecxz das adc pop stos popa push mov adc mov jnp add sub mov insb aaa xchg les les (bad) add enter push inc jns mov inc mov add sbb push (bad) adc mov daa lock push pusha leave gs cs jne loope ljmp lods add rcll or inc dec adc (bad) push aad pop je pop mov mov cmovnp loopne inc sub dec pop mov jbe cmpsb or orl test inc mov adc clc adc and daa fcmovnbe sbb icebp pop ret movsl inc addr16 mov sub add mov push fiadd jns rcrb fild xor (bad) mov rcrb shlb jbe leave add nop fdivl pop push mov add ds add mov test lods push xchg add xchg sbb sbb push add mov not jo inc jb outsb adc dec imul cwtl pop inc mov je js xor inc xchg mov push jl sahf negl push mov test pop pop lahf negl faddl in push xchg and mov and ds inc aaa push mov (bad) cmp inc push sahf cmp jl rolb js movsb es push push shl push movsb gs sbb fiadd cmp enter and mov add ds fwait pop and xchg add sbb xchg sbb and mov adc or pop mov mov push sub inc repnz js sbb pop jo,pt or sbb rolb dec mov cmpsb in add out out push and push push (bad) outsl (bad) xor out pop shll xorb xchg pop add pop and pop pop mov (bad) ss sbbl xchg pop pusha add ljmp insb clc push nop inc pop cs push sbb nop movl pusha push add jns aaa sbb cwtl ds in add leave inc leave pushf sahf test mov inc fimul dec in xchg nop inc or or divl cmp xchg ja sbb or pop shrb push push fnsave cmp pop inc lock ret pop test jmp in or xchg add add or mov insl popa in arpl sub jbe sbb repz loopne xor xor pop (bad) pusha rorl pop fcomps shr adc js psubw je push imul nop lods add pop sub (bad) shr mov push and aam push mov sbb cmpsl mov or jmp add push add cwtl test pop push outsl div pop or xor add and in and insl jg cwtl add iret lds les lods and dec inc insl daa mov inc dec jae rorl push loope insl xor aaa dec movl cmp xor adc sub push cld xchg xor roll or pop rcrb xor dec xor inc pop (bad) fnstcw mov notb dec cmpsb lea mulps loopne or jbe pusha sahf or nop jl adc roll shr dec imul add push fcmovne pop mov lods or add xor aaa addl xchg fldt testl insl sub jecxz cwtl inc add faddl jno stos adc or xchg incb mov and mov ja orl pusha or pop popf sbb cli xor mov lods push pop adc pop lock cmp push nop insb bound push and pop cmc (bad) lds bound rorl daa pop or inc pop (bad) notl outsl popf (bad) adc mov add dec push mov cmp cmpsb je xor inc jo pop mov jns aad pop leave pop orl push pop push movsb iret out bound fcomps shrb outsb mov movsl mov enter js adc add les add adc shrb aam prefetch add idivl sbb push pop xchg loop mov sarb or fisttp insb jne inc subb jmp push push adc add add das mov add or out lea pop sbb add push sbb adc popl push in push inc jp sub xchg sbb cmpl sub fimull sub and xchg add frstor dec sbb movsl jns lods data16 gs jge leave or or lods mov xchg lret jae sub sysenter addr16 lock xchg push push jo lods pusha and test add loope jmp out sub orl (bad) rorb xor fcoms les repnz mov pop movsb add or mov mov das add and push ja cmp xchg dec movsb incb add add add add cli jg or add add add or or mov mov mov mov mov or sbb cmp inc mov cmpsl in xchg mov (bad) (bad) in push ljmp jmp jmp jmp jmp jmp jmp jmp jmp (bad) (bad) fdivrp (bad) fdivr (bad) fisubrl fdivrs add aam adc sar sub (bad) iret stos into dec dec dec ljmp sbbl dec mov push enter mov xor out enter or andb sbb pop or xor imul jo push sbb sarl aam pushf push mov ds jns jae in clc js pushf call in mov mov (bad) sbb imul adc test jl repz xchg mov (bad) outsb in ja push push pop mov jge (bad) ss shll out jge in lock dec cwtl lret movsb inc movsl outsb cmpsl (bad) testl push ret ds test ficompl push cmp push int3 sbb or nop pop pop sbb fwait adc out daa or cmp addl enter cmp jns add ja in push add dec cmp sbb push cmpsl or aas incl lods roll pop xchg pop dec xor push push or cs mov sub orl mov jmp (bad) loopne pop dec rorb sbb pop insb pop xor mov push xor adc jg push push adc jle add add adc pmuludq or jle dec insl xor or imul pop adc ja xchg lods push push decb xor inc xor adc inc push fdivrl cmove or dec popa je xchg inc push push addr16 dec cmpsl dec fldt adc xchg aam dec dec push xchg insl mov test ret rcll andl inc cmp lods insl jl jbe mov sarb or push popa daa adc dec pushf adc xlat mov xchg clc (bad) mov xchg hlt gs popf fs inc or or les inc push inc cmp push or fsubrl jae jns push outsb mov roll imul sub or imul sbb add cwtl mov cltd aam mov es mulb dec xchg sub xchg fwait mov fwait or outsl cmpsl clc push adc pop adc adc jp push jns (bad) out test idivl mov js push mov fnop xchg pop imul pop push or insl cwtl pusha incl cmp sub push ss mov add js add add bound mov lcall add add (bad) inc or add mov mov adc decl mov inc adc sbb or es mov mov mov (bad) mov push mov xor cmp pushl (bad) mov ret inc lea and inc sahf add into std (bad) mov (bad) mov aaa adc mov mov mov cmpsl jne (bad) call push repz sbb inc mov out lods xor hlt inc (bad) js jns repz inc dec push cld sbb divl dec rclb push add xor lods and loopne push xchg in cmpsl flds js pushf test mov xlat add mov sub repz jbe cmpsb push aam in dec repz push mov xor lock mov sbb mov dec addb push pushf idivb push clc xor shrl or xor adc push mov adc insb out sbb (bad) fisub fadds pop cmpsb aam sub and mov insb cmp fs add pusha lock add add push xchg push and cmpsl jge mov push sub flds test cmpsb (bad) repz sti ds pop into push jbe sbb adc ds xchg into inc pop and cvttps2pi push or loopne mov mov push push push push sbb int add mov inc xlat pop aad cmp sub adc sub adc rcrb movl cmp scas sub adc pop loopne pusha cs push out mov sub add dec loopne ss mov popa push sbbl js mov inc cmp les cmp or xor mov mull cmp sbb dec add mov or push sub mov push fidivrl das mov es test pop add inc daa movsl add push adc rcrl pop and leave adc add inc (bad) jae pop pop dec jl jns mov push add push ja pop sbb add addr16 sbb adc and pop adc or cmp xchg or push (bad) pop pop adc push imul pop push or push sbb rorb pusha imul adc mov inc std add pop jbe mov add or mov sub pop pop cld pop call lcall xchg xchg shrb add into dec jl dec add xor pop call sub or sub cmp or cwtl sbb push frstor inc cvttps2pi pusha cmp push dec rolb or inc into inc out xor push pop enter pushf or les daa ds add add addr16 je negb ja jmp pmulhuw mov mov mov or fs push fs and les xchg inc push mov imul std jns iret repz or cmp sbb repz arpl es aaa sbb scas (bad) cmp push xor js,pt imul pop (bad) jp cmp inc push jo int push cld push adc fdivl in rol jbe or ds xor popf fmuls addb nop adc cmpsl sbb pushf push sahf mov add xchg sub pusha pop unpcklps pushf imul movq xor pop xchg fild jle mov add leave enter sbb dec sbb add xor dec loopne mov or adc cmovge lods addb lods ljmp mov add mov push mov fistpl lock js push push and lods insb (bad) lret sbb push lea add and sbb pop sbb add inc movl inc inc xchg cmp ja add mov jl push sbb mov cmpsl insb cld pop inc push aaa sbb adc (bad) cltd (bad) leave add jne xchg mov insb xor (bad) (bad) inc cmp adc stos mov outsl lods mov pop negl negl push cmp dec jmp push or add leave nop loop and (bad) jb daa inc jb add push ja fldcw xchg adc or fsubrl iret loopne shlb or leave pop cmp push push inc push inc mov pop dec daa push jo daa or outsb adc dec and popa (bad) and dec outsl xchg inc nop xchg daa dec or daa push xchg (bad) ja mov xchg out pop mov movl fidivl add xorb lods and adc and outsl daa adcb dec push scas pop movsb icebp adcl jb icebp fistp jmp xor mov pop fisttp sbb lea and sub inc xchg push jo sub lcall add enter add es int3 sbb inc push and cmpsl loopne pop test aam adc dec imul fstl mov subb add outsb rcrb xchg sub out pop outsb inc add push mov mov ja push rorb mov sub adc sbb pusha lret aaa mov xchg inc adc push mov pop hlt push xchg mov or adc fildl or push or add cmp or or pop shlb mov call push xchg mov pop pop (bad) xor mov and push add je pop add icebp ret js pop jo (bad) jne mov movsl lret push push add cmpsb stos imul or addl add push mov (bad) (bad) jne addl mov jmp jge push or enter and out outsl add push or push pop mov dec add popa add mov lds inc pop lods dec (bad) xor or adc adc dec (bad) xor sbb and (bad) xor shll sub sub inc rolb mov inc add push cmp ja pop sbb frstor pop dec add mov mov aas push ficompl pushf add mov fdivl (bad) addl test inc or lds into jbe sub je mov jbe xor mov add bound dec nop adc add jle andb adc mov xor lods (bad) adc mov mov xor xchg (bad) mov stos push add add xor xchg xchg adc (bad) cwtl insb outsl and mov (bad) jmp or call sub iret sub inc or or pusha pop push pop push add xchg pop adc je cmc nop movsb adc ret xor add sub mov push dec mov and inc pop insl add xchg pop mov push out cmpsl pushf (bad) sbb std push lods xor dec fist dec addr16 popa lds or lea mov pop sbb or sub ljmp enter ja adc inc xor pusha adc test or ja rcrb bound clc xchg jbe mov ljmp pop push insb insb fsubp pop mov lea cmc push pop bt xchg pop inc inc inc lahf lds addr16 add bound pop and dec iret add cltd sub sbb pushf xor stos cmpsb imul imul dec add or sub fnstcw imulb mov sub add xchg in or adc or imul push mov inc push xchg addb daa (bad) jae mov daa fisubl pop nop iret cmpsl xorb out (bad) dec add pop xchg mov cmp pop fcoms mov insl mov ja add pop ds outsl fistpll sarl jb sbb inc and adc xor push loop push sub (bad) (bad) push dec out jnp popa dec add maskmovq negl in push rcll adc test loop sti js xor inc call out jecxz sub shll inc call stos test call das orb inc inc push fistl icebp movsl in sub jnp lods mov sub or int pushf clc lods push leave sti or cmpb cld push cwtl xor push ljmp (bad) aaa sbb mov loopne push icebp js pusha les adc inc in sub jmp loopne add and cmpb (bad) je pop out xor fildl and xor cld add shll cs lock and pop add lea js ffree cmp jge mull iret cmpl mov lea jle test ror or push xor pop xchg jmp jmp jnp outsl inc (bad) std dec std jl or iret sub and lock adc pusha inc push xchg jp jno int and (bad) push cmp lock xchg pusha mov hlt sarb inc jo jl add xchg push daa (bad) push imul fmuls dec in mov sub dec jne sbb cltd or cmp loopne mov pop sar and mov unpckhps popf pop ret xchg push (bad) cmp pop inc jne and (bad) cmp and (bad) mov and test dec subb test (bad) lods notb jo in sbb loop or les fwait add push push and sbb push fildll xchg sbb push scas inc lahf adc pop cmp adc rolb dec pop jmp xor cmp popa sbb push (bad) jnp pop jbe mov mov aam and xchg leave sub jmp jmp enter jne add test jecxz icebp sub lods or sbb rcrb xor jmp sbb push pushf pop jne xchg push pop or enter push inc jo jl mov out mov adc repz pop enter adc aas or add je out flds and (bad) repnz push nop dec mov hlt add push or pop repz pop adc sbb fildll sbb pop insl mull jge mov sub loop sub add loopne mov insb cmp mov daa mov jnp xchg jo inc (bad) ja cs aad xor into and lea inc mov sbb mov xchg add xor sti movsb imul pop add dec jmp xchg in or jl out cmp subb adc mov push add inc cmp adc insl mov lock or add mov lds imul (bad) sbb adc pop add cmpsb mov mov xchg sbb cmovae xor push inc and inc push and icebp sbb jne loopne sbb mov inc jmp in ret cmp stc and lea aam mov mov das mov and test fistp sub inc jo push push push cmp jae jns (bad) clc fimul pop and lea rol and adc add lahf xor push push repz mov mov push addb subl mov adc inc pop loop fdivrl das or adc addr16 (bad) jae inc mov adc (bad) popa aam gs aad sub fidivl adc mov jne cmp adc inc test push dec pop les sub jo mov add mov ljmp cmp pop and add add out and in aad ss jle dec jns sub imul mov push xorb push insl pop sub rclb (bad) add jmp pop xchg dec scas dec adc or pop sub push jns or jne cmpsb call test and loopne pop xchg add cmpsl inc lock adc push lods gs fmull lret xor or mov (bad) mov adc xchg push lret mov gs jl sbb arpl cmp dec xor cmp lea js loopne cmp pop and adc les xor movsl (bad) repz pop xor sub adc push iret push lret mov or dec jmp into test nop mov jae sahf inc insb push call push fdivrs js add mov add pop jno movsb xor gs push sbb or dec ja shll test cwtl movsb adc dec add xor adc mov into push push cmp mov jne mov sbb jnp call lahf scas push or aas push fimull push clc mov idivl sub xchg icebp (bad) fcmovnb or add sbb cmpsl sub cltd cmp das cmp inc xor adc mov push cmp test and push xor jo mov inc insb cmc sub and inc xlat cmp push and mov or cli jmp jno mov and push pop je cwtl adc or insb mov popa adc in cwtl dec loopne cltd (bad) arpl ss cs push pop outsl je test lret push adc cmp jo or mov inc sub add push pop and or sbb gs xlat mov cmp lock pop pop pop mov add jne mov sub fmuls ljmp sub push adc jb addr16 cmp xchg aaa addr16 push addl pop jb and insb push arpl dec js stos (bad) push and inc mov adc jae dec lss mov adc enter mov sarl dec cmp gs jecxz fwait pop movsl sub daa sub adc xor lds or adc ja (bad) or in adc mov dec lcall enter mov movsl sbb loop bound cmp jge ret enter jne mov je adc add dec js mov (bad) mov orl (bad) push or (bad) mov cmc inc fiadd out lock int3 push out insb inc imul jmp sarb sbb aas jnp xor mov push fs loopne or dec inc cs fldcw adc xor (bad) dec jnp dec es adc push adc push pushf inc and loopne imul cwtl std addr16 push mov and mov testl loopne stc fisubr lret shr imulb pop gs sbb ds jl mov push push sbb pop lea pop add xchg inc adc jge lock pop add dec daa inc cld lsl add ds lret cmp hlt insb mov sub cltd insb cmp cmova bswap jbe mov push iret adc add mov orl push jg and pop out add xchg cmpb mov adc dec rorl adc pop or pop dec add js and dec sub outsl mov out pop jmp cmp or or adc or ret cmp push or xorb aaa dec mov pop cmp cmp insb pop je cmp or inc (bad) popa cmpsb scas sbb sarb sbb cmpsb sbb in dec jmp dec in test shlb jbe add dec or fisttp pop clc (bad) push jl cmp lods test dec mov mov jle,pn fstl push in mov es mov xchg pop add lods daa pusha or mov push arpl pop and push das cmc xchg ret push addr16 (bad) and and xchg rorl fs test push lcall (bad) jno mov jecxz push popa imul addr16 shrb sbbb outsl push and and cmp stc mov or add sbb adc add faddl xchg push inc pop es test movb xchg sbb imul jp push (bad) roll mov inc popa loope loopne jg andl imul xorl cmp dec je sbb xchg jne movsl or js xchg sbb pop dec scas cmp push sbb push add lret add pop (bad) aas or mov push xlat sub mov dec sub pop or mov mov push jmp push imul dec sub mov push rolb sbb mov je je sbb (bad) mov mov movb push pop daa or repz pop or (bad) idivb pusha push pop add jp jmp add imul add shrl sbb psubb dec mov (bad) mov xchg mov and cmp sub mov popf aam add adc mov leave and inc insb fcmovbe insb and adc je push fs jg push dec push (bad) cmp aad or mov fadds ret adc mov and mov sub pop push fisttpl mov push insb xlat loope (bad) cmp inc mov int3 nop pop cmp and adc adc popa imul dec ret xchg aaa push cmpsb cli (bad) enter fwait pop ret out insb js inc push movups fdivrs in adc or test inc xor mov fcomps mov outsl adc cltd clc es orl dec cmp lods incl cmp clc cmp push mov inc or push add cmp xor mov mull add test loope (bad) mov push xor sbb and rcrl ret dec xchg cli adc xchg hlt inc pusha sbb ret imul dec push (bad) jle int3 or push mov arpl pop insl inc add or mov pop repnz and jb cmp ret dec or jecxz and jle js jmp jne inc mov lods sbb cmp or xchg enter loopne push imul xchg cmp mov (bad) fimul aas xor adc push lods pop (bad) push add xchg cmp or dec scas xor xor out adc ret insl fnsave cs and push mov je aaa test add dec out jecxz mov inc jmp inc (bad) or test xchg xor pushf mov xchg lock jne push adc xor push or and jbe push push push movsl pushf js inc mov popf jns mov or aas movsb cmpsb addr16 inc add dec add ja and dec test dec imul jle pusha jge aam call adc decb cmpb cmp fnstsw sahf nop es test ljmp mov dec cs movsb xor adc test sub jns dec push dec mov dec jo mov out imul and pop mov cli push and (bad) xchg add inc (bad) aam xorb cmp outsb and push pop push sbb mov cmp das pop dec xor or das les inc loopne mov roll sbbl inc push inc dec add add dec add push and inc or test loopne je jmp jge xchg cwtl mov add adc jo dec addr16 cmp dec jnp js sbb ds addl push sub aam push dec push stos adc mov in outsl cmp fidivr fdivr clc dec and mov push dec xchg push ja mov lds mov inc (bad) cli push or sub mov aaa pop repnz push dec inc and daa pusha mov insl popa cmpsb ss push (bad) sub imul loopne xchg lock add mov or xchg xchg or scas popl xchg cmp push mov pop fbld sub mov or outsb dec add add fidivrl adc mov inc sub push mov add lds int or xor pop mov lahf cmp xchg lea inc inc lods pop rcrb add xor pop (bad) xor or pop es loopne mov or (bad) (bad) in adcb fdiv pop lret stos xchg inc pop mov cmpsl xchg sbb or ret int mov pop inc jo jo cld sub add mov xchg mov mov add mov std out add push sub test adcl rorl xchg mov xorl pusha int inc dec imul jmpw mov mov pop (bad) and pusha leave test jge divl (bad) lret mov inc pop insb xchg jno cmp pop mov aaa mov add or test pop mov jg mov mov adc xor mov mov pop call pusha outsb inc xor inc mov lahf sub sbb xor hlt push push outsl lret push and sub xchg addr16 addb and stc jle add pop ret lcall sahf or test sbb insl pusha inc sub or test sbb mov (bad) or pop (bad) jecxz xor and and cmpb and loope add pop push mov mov cli rolb push cmp or out dec pop je mov ret mov pop ret fstps mov (bad) scas and or mov xor insb push addb adc rorl cmp and (bad) adc mov xor addb scas ret ds lods fadds les popf inc enter cmp cli stos dec xor xor or cwtl mov repnz sahf cmp pusha (bad) insb or testl aad inc cltd inc inc cld pop aam pop xchg paddb pop push je pushf int push fwait push popa push xor mov adc aas dec scas jo adc je mov push mov loopne fbld nop pop push add xchg push and fdivr popa inc lcall rol (bad) jo and lock xor add and push call idivb add aas icebp mov enter stos call mov pop and scas movsb outsb or mov adc mov xor or int3 out in outsb xchg jl jnp je mov movb ja xchg mov or push add jmp cmp (bad) xor sub mov push cs stos and push (bad) adc or (bad) dec sbb aas mov xor cmp pop je mov or or mov nop cltd lret mov (bad) ja in mov dec and je mov fwait and cmp xor pusha add pop or cs pop pop test inc pusha pusha sbb data16 xchg (bad) pmaxsw add jb cmp sbb adc sub mov jo mov xor xchg xor adc into pop nop lock cmp insb mov adc or xchg push push xor mov pop mov aaa testl sti in jne inc rorl (bad) push rol sbb mov or cmp rclb ret pop mov mov ret xchg push out push jp addl dec sti xor sbb and or (bad) push push jb mov rcll pop inc les enter dec dec sub loope in inc lcall xlat adc sub out pop push xor das sahf movsb xor jne stos or mov mov and mov fisttp imul rorb aas call cli rcll and or stos push pop aas pop jne push adcb xorb inc popa cmp mov jo sbb push ja or sbbb scas stos add and lea jg jmp incb inc pop push es out ljmp cs inc lahf pop test (bad) insl add sbb loope ret add pop jne sub rdmsr mov xchg xor or dec hlt jns inc idivl je addb add push popa shlb adc or inc into out xchg adc out push jmp dec fsts jecxz mov inc mulb smsw and adc (bad) xor pop pop das adc je mov mov jb ret cld or mov inc in xor out sbbl movsl (bad) mov sahf mov sarb outsl push cltd or lcall dec pushf push and sarb popa or cwtl sti add ficom xchg les mov add jle mov push into jne movsb add out iret add and push add dec mov repnz sbb mov adc (bad) xor push jle and aam fs lock in stos pop imul or fnstsw xor call xchg movsl imul mov cmpsb je pop adc sbb sbb sbb xchg push test les pop xor test mov cltd jne inc jle sbb in call aad jl fmull fildl fsubp data16 pop mov ret popf adc lea fisttpll sbb lahf sbb push fucomp icebp call mov add mov lea loop (bad) aas dec sub inc xor (bad) push nop add je cwtl sti jge push aad push push push insb push mov mov push cmp fwait ret psadbw dec inc movsb sbb mov or sbb lret add add inc xchg lret test in sub pop into push aaa movsl daa and movb mov sbb mul pop fisubl roll sub jne add push add shl sbb inc sub mov sahf jge je neg pop lea sub je cltd shr jnp mov sub mov xchg jmp xchg mov outsl test test hlt push inc add push cmp gs jg clc cs ds or xchg sbb (bad) inc inc mov mov jbe jl xchg xchg pop cmpsb nop dec dec dec cwtl je or add mov outsl push inc pop enter loopne addr16 inc ljmp add pop lock imul dec mov inc mov cmp sbb jle loopne (bad) sub test push cmpsl mov push mov sahf pop fisubrl (bad) aaa call ds sub in or or push xor and mov jbe sbb ret inc icebp test add leave or imul mov sbb jae mov in outsl or sbb jle nop lahf adc aaa mov mov fldl jo roll rolb sbb sub jb je loop bound sbb mov pushf inc repz test loop add inc and scas push mov mov cmp mov add xor lret data16 inc mov int3 push xchg mov mov add cmp sbb push in xchg xor dec cltd adc add push or addr16 lock push faddl and inc cmp mov inc sbb das pop pop (bad) aas ret (bad) xor push stos fxch push pop clc cli lret sarb lea sbb test jmp fldcw ret popa sbb sub cmpl shr push mov sbbl add bound incl mov mov js or inc loope inc movsb push adc stos jle stos pop adc js jne pop mov adc push imul aam and lds mov inc rol insb add xchg xlat push loopne pop or stos popa add iret js out das pop lret push or adc and test pop out adc or int3 and or pop add xor (bad) adc mov push iret mov or add push cmpsl or push imul add in popa inc iret stos pop and adc xor ljmp pop push cmp push push pop inc mov xchg jb repnz add fild bound or xchg inc xor ds mov inc or popa adc push mov pop mov lret or cs cmp cltd int3 enter daa xchg outsl jne mov cmp sub push cmpsb inc jg jecxz outsl pop add xor pop cmp sbb add xchg add mov pop leave mov lock sub mov (bad) jbe insb cmp adc daa adc in sti popa out jmp sub sub leave in or or js xchg pop adc sbb arpl jl add jne jl and popl jmp push pushf cmpsb and sub jge lret push jns roll or or imul adc jge or daa ds pop pop jg orl sbbl dec push xchg icebp test ficompl push inc push dec mov xchg cmp inc cmpb (bad) mov mov xchg or fimull stc inc jmp add (bad) push or sub inc push inc jne shrb sbb sub dec movsb icebp or jmp int jmp cmc ss fild adc mov push (bad) sbb xchg mov loope in and ljmp mov jb add xchg andb loopne lahf (bad) outsb jg jb adc or popa inc es xorb add out dec ljmp dec mov cld sub bound outsb fidivl aaa pop jmp ret adc out stos enter (bad) test (bad) in sub dec dec fdivrp notb jle push (bad) jmp xchg shrb pushf insb adc or adc inc sbb push add dec inc sub mov and adc inc hlt popl push or pop xchg push adc and test push pusha mov sbb inc jl hlt aas in nop lods or push mov in dec test add jmp jle push lds aam push xchg add outsb inc push jae or jo dec pushl ja call (bad) dec and and push iret jp push mov push sbb adc xchg lds xor pop push pop jo scas lock ja and and je adc cmp roll push lds out repz adc mov mov add inc push xchg jle add and addr16 and movsl in bound (bad) adc cmp sbbl cmpsl push push cmp test xchg inc adc ss in fsubrs lds jmp popf push arpl dec repnz inc sub sub sub mov xchg push dec sbbb mov xchg sbb jge std rolb sarl lahf das js dec and inc push xor jg mov push or jg adc push adc push mov dec in adc cmp inc stos enter xchg mov movswl push or adc rorl mov (bad) les insb or mov xchg orb (bad) jecxz (bad) sbb mov imul notl enter jl mov loop mov mov pop and addr16 pop pop jbe xor pop sarl mov test dec subl dec cmp jne and dec addl and mov lcall je ret pop pop pop or push fwait roll mov mov out jno in dec scas fs inc les add dec lahf push or fcmovbe enter push movl in jne iret dec fs cmpl sub or popa bound add pop rorl ret pop aam push shlb das lods insl push dec or mov loop loopne cmpsb mov and xlat movsb enter dec call pop dec lock mov dec push sbb sar push adc jnp inc lods push xchg jnp or or inc lahf mov in pop adc add addr16 and (bad) adc outsl sub and ss mov ret add push es lsl dec mov in add add dec sub pushf push (bad) outsb sbb inc sbbb mov xor pop ret test popf mov outsl mov jb xchg add jle je push dec or xchg lock or es xchg xchg jbe jle adc or sbb es (bad) xor je mov shlb add sbb inc sbb in js xor mov ret sbb mov je push xor clc xchg je int3 pop push inc loop and leave xorb pcmpeqw sub out pop insb and lods dec jb adc jo or or fistp and pop leave mov pop push jo cmp sub popa test mov push mov loop mov mov pop and push fmull inc mov icebp sub or adc cmpsl or adc cmp lcall mov inc bound xchg shr dec push sbb in and nop rorl jbe dec push pop movl outsl (bad) insb ret xchg orl sahf test out pop mov testb pop dec mov insb adc (bad) fmuls or leave lret ss jge cmp les sub fwait jo sbbl fwait mov mov add insl js mov sub pop inc push xor mov or es dec lock je arpl rorb inc cwtl loopne push dec dec push mov movl add ds enter loopne mov push add push adc push push jbe jmp sbb add add jo sbb adc push or mov sbb mov pop in dec arpl movl je dec dec dec or movsb cmc lods pop push clc fstl fldcw cmp and sub stos mov bound and inc fs push enter or pop push pop push jl mov push rcrb xchg test adc out dec pop ret data16 pop inc dec cmp in adc dec or nop or nop sbb imul es cmp mov xchg and nop mov and sub xchg mov and inc faddp dec cs or (bad) mov push (bad) mov sbb jb aad push imul arpl add or cmp xor outsl xor mov xchg lock imul mov mov (bad) ss xor push mov negl shl dec jb daa scas and loopne xchg sub or add fcompl sub lret (bad) insl adc inc and jne xor adc fcomi xorb dec add mov outsl dec jg mov add in inc jg add push nop jns mov jg add insl cmp push add gs ss sarb dec or pop xchg adc cmp adc jl xor or repz fwait outsb pop inc mov sub or je mov push jmp bnd inc (bad) arpl add push cmp jmp sbb rcr pop dec jl cmp ja mov adcb imul push push dec push cwtl call loopne xor and sbb adc or add add mov fwait mov adc mov mov hlt or mov jo out xlat add shlb outsb cmp xor js pop mov aaa aam adc loopne or ret js fcmovb push pop sub xor xchg data16 inc les mov adc cmp and subl xchg xchg inc pop or les (bad) sbb adcb jg es mov sti add loope xor insb xor (bad) or popa cmp imul (bad) fs sbb push insb mov dec insb or mov loop lock movl sbb xchg lods push mov cmp sbb sarb nop rclb xor and inc je xlat les mov dec fbstp push adc imul je fsubp cmp bound xchg add adc inc jmp aam test stos adc push subl push mov clc nop mov out adc cwtl push or sub xchg or mov roll lods jbe jnp jge mov bound and lret fmull push push adc xlat xor insl repz mov xlat aam gs (bad) repz inc movb jmp lea dec orl dec aam cmpl add test mov outsl rorb dec (bad) frstor gs mov xor xchg lods push pusha and aad mov push and pushf adc jns dec adc hlt es and or stc mov stos sub jbe xor pop nop dec lret jmp jl cmp pop rcl enter outsb push mov mov add adc out xchg ret or inc (bad) aas loop cs jno mov mov mov xchg nop lahf xchg jno imulb enter mov cmp imul cmp (bad) aam loopne out jno lods pop pop push mov or jmp push pushl out jns or cmp ja jg mov lahf shr inc add ficompl dec inc add cmp setle cmp imul test popa add lods sub mov rcl out rcl xchg or imul dec inc sti lods cmp ljmp or and adcl push adc inc sbb in dec stos js dec push std sbb and enter ficoml daa lods sub aaa pop xor add mov mov push cmp adc (bad) out pop cmp flds sub add loopne ror jmp aaa into into xor xorl out or add adc cld or sbb xchg mov ret xchg test add in add popa leave call and push ficompl lock aaa inc sub pop sub jne icebp add jns mov sub aaa mov mov jl push ret add int3 push icebp xchg dec xchg pop or cmp pusha or lock cwtl jl add pop add jne in orl cmp push ja xchg frstor out push push adc cmp daa push mov jns add mov xor push or or mov xor add jmp sbb mov push xor xchg xchg dec rcl lret lods push push adc rol rclb sub lods or cmp (bad) out setne cs addb xchg repz movsb push and dec pop subl xor xor inc push daa insb out fcmovnbe adc mov or pop and add test movsb push xlat or hlt mov and jae lahf (bad) xchg add pop sbb subl and sbb cmp jne loope lret lock imul mov or outsb jmp adc dec add cmpb push mov xchg adc sahf cmc les dec or dec push cmp insb je fiadd inc out outsl subl daa sbb dec (bad) lret inc adc or cmp fs xchg xor (bad) clc lock (bad) xor rclb testl jg decb lret cmpsl jne cmp mov mov rolb sbb call sbbl in and sbb cmp cmp jne mov xlat (bad) adc adc popf mov dec lock sub add add lds aas push pmulhw cmp sub add add movsl pop xchg push ljmp pop fstl push xlat into nop pop inc push sbb fldenv push mov daa inc mov loope,pt xchg outsb and outsl dec in adc or iret and das shr fnsave aas insl cmpsb fbld sbb jb add test jecxz adc mov xlat gs clc cmp call lahf incw xchg xor popa std jne and jb and xor adc pop sbb in mov inc xor inc jl adc pop sub scas mov sub inc push and xor lret dec sub sbb lods (bad) (bad) sub pusha shrl mov add pusha movsb in pop in loop and (bad) cmpsl cmpsl sub or push inc xor sub jecxz or (bad) imul cs cli rcrl aas add inc dec jne cmpb mov dec and push dec mov (bad) cmpb mov xchg push adc sbb mov and xor mov fimul inc pop xor mov sub lret into jg add mov xchg in add jne push pushf jle sub or adc xor push xor ljmp add add push inc mov xchg sub sbb mov fdivs jo cmp adc jo jo xchg popa xor sbb imul jp cmp stos jne push inc inc lcall xchg jl adc loopne adc lods jno test pusha sbb adc dec ss add mov aas (bad) jmp adc jmp lds or adc (bad) fildll xorl test (bad) arpl jno scas and fsts pop cmp jle push movsb jno xor psrlq cmp jns movsb std outsl es add push or pushf ret dec xchg jg sub dec mov inc fwait daa xchg call addl into loop sbb mov pop sbb add or add jmp shll lea mov pop push les xchg loop push pop sbb or dec sti cmpsb mov push dec and ret mov and pop push ret test inc pop adc push orl mov test sbb divb iret adc inc adc addr16 add (bad) sub incl xchg into xchg jmp fwait mov add inc xchg mov and or lock js imul or mov push sub adc pop mov or dec imul dec lock sahf (bad) dec sbb and or fisttpll mov nop je add push push and lcall lfs cmp inc xor mov stos lea rolb adc dec and incl xor ljmp cwtl xor into xchg nop aam testb imul and jmp adc nop jmp and mov or and out add lea or mov movsl jns leave jo sbb mov xlat inc test sub mov mov fidivr and mov movl lahf add cmp mov jl jmp xchg xor out fadd aam pop inc push push add lcall add fdecstp sahf nopl repz and fldenv adc jo lret xchg loopne pop sub iret dec js push inc out insl loope pop dec fsubrs (bad) aas jbe lds in fwait push iret rcrl and or adc cmp sbb push and adc mov (bad) dec js test and (bad) sbb in and lea test loop cmpsl mov push pop lcall sbb dec jl or inc and cmp fadd js sub jnp jmp or lea mov test sub adc fild push test loop or pop pop lea clc cmpb mov popa jne andl xlat lea or sbb jmp jg movsb mov ja mov xchg and lea jmp jmp dec and mov es and (bad) sbb mov dec in dec jne adc add jmp sub adc inc clc enter das mov imul pusha push outsl test xchg pop add and rcrb jmp shll sbb andl xchg stc outsl or mov or ficom jecxz fiadd rclb fdiv cli loopne cmp mov jno addr16 idivl push shrb cld push or jnp push popf or lods lods andl mov mov adc pop fimul out insl in mov sbb jp lock in inc lock les xor sbb mov in xchg sub nop cmpl pop xor imul shlb jne pop jo int3 adc sub arpl xchg shlb ucomiss out or push or dec add xor cmp daa lds sub outsb mov imul (bad) je add imulb mov (bad) insb in and inc lock test cmpsb xor adc inc push mov mov push js jmp je sub popa and mov pop scas pusha and nop aas rolb rol data16 sub mov inc je aad sti xor dec faddl cmp fld scas adc mov jl and xor cmp jmp cmpsb popf or mov and inc daa aas sub mov cltd sub ja inc inc mov pop mov ret out andl xor inc test mov push adc call clc iret push add push inc adc dec cmc sub mov lods add jo add add fmulp xlat int3 add rcll or jnp jne push sarb and dec xor sbb adc enter subl sub jecxz xor or das push xlat add push xor inc adc mov test pop mov push shll dec loope dec and dec into stos loop add (bad) xor sub popa daa insl cwtl ljmp pop sbb scas xor cs lret adc (bad) pop xor clc xchg xchg rcrb out inc or outsl loop pusha inc add mov and inc int inc pop call push roll add insl or push mov cmpb pop adc dec or dec je push pop ljmp mov jb inc adc sbb popl add insb mulb sub jg push inc and pop (bad) jmp outsb cmp andl and in or (bad) xor pop shrb out test xor lcall push sbb icebp adc call jmp sbb enter sbb add and mov sbb arpl jecxz cmp push and push xchg mov js outsl push or in push rcll into jp pop outsb jle jb add jmp clc mov inc bound add hlt lret inc mov subb mov mov add xor xor sub cmp pop insb test pop fmull dec pop or pop loop fisub clc or sbb popf add dec xchg lcall fisubl adc mov int3 inc mov mov les popa mov xchg mov popfw push fdiv push test sbb mov cmpl cwtl add fcmovbe dec mov or xchg test je push cld and cmp inc xchg mov jae dec mov sub push test ret inc push adc (bad) inc icebp rcl icebp push loopne add pop mov scas adc mov or sub xor pushf adc sahf popa pop mov and test jmp movl je stos adc loopne ljmp pop adc mov (bad) out xor ja sub andb (bad) fbld pop xchg lds fisttp fs sahf test inc mov or mov and add add (bad) mov adc push dec mov mov rolb mov push enter js fiadd enter jle mov loope jbe nop mov xchg fldl stos push xchg xsavec addr16 cmpsl fsubs adc mov inc imul add in pusha xrelease inc test movsb stos aad shrb js mov sbb fldenv mov sbb fwait and sbb or unpcklps mov jns mov jne ss test xor les leave pop add int arpl push xchg cmpb iret jmp (bad) decl cmp ret cld and nop cmp mov lods insb cmp inc xchg daa (bad) popa test mov (bad) cmp mov jmp or popf in pop loopne js ds mov das leave pop sub sbb mov or xchg cmp push xor xor inc fcomps fcomps sbb nop scas lock mov or sub pop jl xor cmpsl xchg sub arpl jge add push sbb inc or dec orl loop pop in cmp fsubp or xchg fisubrl sub movsb mov sbb push push jmp nop push sar push pop dec sbb int3 lods nop inc jle movsb mov cld scas add inc mov sar pop pop pusha jo mov and mov ljmp out cmp inc aas xor mov ret inc cmp inc cld cld mov jo in outsl sbb xchg fxch sarl cmp xor mov jbe sbb mov inc ljmp and sbb mov dec (bad) inc test push mov dec imul es or movsb pop daa add pusha popl inc nop inc mov test cmp mov push rolb daa push and int3 adc ret shr push shrb and cld cmp jne ss or sub push push sub and (bad) pop icebp cltd (bad) push push movsl cmp les (bad) adc pop lea push leave enter je fdivrl push push test mov add jmp adc imulb mov or loope mov stos sbb ror mov adc or pop daa mov cmp daa inc adc add adc push adc push lods add push orl push pop outsb cmp push sbb adc adc popf add or fs dec repz aas cmp cltd dec lea or mov bound iret jno add bnd mov inc pushw dec and inc mov push lea mov stos xor popf lea (bad) js sub clc lret je movswl loop arpl jmp cmpw lods imul xchg inc add outsl js push inc int3 push sar mov xor adc lock daa icebp (bad) movb scas xor in xor or add lock cmpl ret xor out add jns repz fldenv jle pop das ss popf je cltd jo rcrb xchg test adc sub (bad) cmp xlat sbb cmp stos push jno jno xchg xchg adc cwtl sub stc ret (bad) add push and push add inc xor xor adc ret xchg test xor dec dec movsb in add dec adc xor in (bad) mov call aaa dec in addr16 lret xorb cmp movl push mov or mov add or roll pop and add push push jmp xchg push jp adc sub inc test mov xor loopne or ds push adcl repnz add xor loop (bad) jnp jmp popf and push sarb sbb or push aad xor outsl lods (bad) xor jge or lock lds mov (bad) or cli xchg addr16 popf or test clc clc xlat mov dec mov push xchg xor ds jecxz shrb and pop sbb scas aam je aaa cs stos vlddqu es xchg fild ss sbb nop adcl and push (bad) int test lret daa adc or sbbb ss out mov adc xchg jne push or test ja dec andl pop add lahf adc faddl cmp pcmpeqw jle jne jle and pop and pop loope cmp mov mov or rolb dec xor (bad) pusha stos adc adc xchg ficomp inc les imul les arpl leave mov call shrl scas push inc ja add mov leave push adc sar ss push pop push lock inc inc in add rclb lods push jecxz inc ret enter mov movl inc test pop cmc push mov add ds (bad) ja adc mov or push xlat lea loop dec adc mov inc jecxz or xchg cmp jb ja out adcb js loopne scas test je add mov jg push enter fcomps cltd test add add cmp push rclb push mov mov ror inc insl test or inc (bad) sbb cmpeqps xor sub test imul xlat lock ja xor in inc jb in clc nop xchg mov or pop and push push in push loop loopne push inc mov stc pop sub dec cmp aam loope sbb aaa pop adc or adc and inc icebp movsb mov pop dec loopne bound arpl push subb je lea push jecxz push xchg fsubrs and scas or not dec adc mov pop loopne adc push std rolb movsb pop push (bad) sbb xchg dec insb cli adcl adc sbb or pop mov or int in and sub push adcl adc cmp pusha cmp or jbe pop push in lea or or loop sbb mov push xchg pop cmp es push or xchg (bad) and out adc mov mov ret push push loopne pop ret mov jecxz pop xor xchg addr16 jb mov mov sub mov mov mov and or xor sarb std and js mov or inc pushl (bad) lods in rol enter jo (bad) xor aas xchg add add or mov cmc (bad) in outsl mov sub imul rol cmpsl pop push das push xchg mov nop jo int3 lds movsb cmp loope push fsubr and cmp inc sbb cmp ret rclb xchg xchg addb mov shll leave loop icebp mov popf dec and aad push mov push mov inc repz mov loope icebp mov mov inc loopne mov push inc loop (bad) push sbb sub jecxz ret scas inc mov out xor cmpsl lret fstpt cwtl add mov push xor and xor sbb fadd pop xchg jae xchg mov sbb push or dec sub or fs push mov mov xchg mov mov pop pop outsl inc xlat lock es xor repnz xchg es push add sub xor pop pop add push xchg push xor push adc or jge pop mov adc pop dec pop xor loop dec or jg pop pop test movhps jnp add add inc push std daa test cmp jmp lods jl add pop in sbb sbb dec inc or stos jne lods inc xor dec movsl jg and (bad) in mov adc push xchg ljmp int3 je je and adc call inc and mov xlat add icebp cmp mov dec xchg inc (bad) sahf jl dec sbb rcl ret push add push xorl pusha rcr out add xchg push push addl jae cwtl (bad) mov push xor fistl movsb lods fsubrs hlt dec add jae,pn call (bad) js clc sbb shrb je mov jmp mov mull add adc cmp gs add and push ret inc inc push mov add adc daa mov adc sbb gs add xchg or (bad) sub les pop (bad) dec daa push sub jmp add jne pop iret adc add xor pop ret sub pop add sbb mov sti shrb dec lahf (bad) and mov out pop and sbb (bad) repz iret aaa inc sbb dec aad add daa inc jne push imul jge sbbb rclb clc cmp inc aam jmp xchg push les jne bound mov xchg inc push or dec and xchg cmpsb addr16 insl push popa cmp icebp and sbb and xchg shll ss push xor push add pop mov arpl mov xorb push push cmp mov sbb jae sbb or xchg cmp movntq out arpl sbb imul clc in je out je cmpsb cmpl js fwait xor mov shl mov inc or fcoml xor mov or jmp lret jne inc ret or popf lods add push inc sub mov jp int lods xor rclb and or xchg rcl push rol jno dec lods adc mov sub (bad) inc cwtl pop shrl loopne cmp push inc sub test fist cmp lret cmp xchg xchg pop negl adc cmp cmp dec bound dec test add lods sbb daa mov jbe xchg icebp in pop popf jmp test and subl rclb push sub sbb (bad) mov mov sbb ljmp (bad) and add cld xchg mov nop mov add inc push ret mov dec je push daa pop imul sub add adc loopne ja loope push (bad) jg pop pusha dec xor roll dec and sbb add pop mov and movzwl push jo je or sbb mov and out dec mov push sbb jno fistpll mov out aaa pop or or xchg add sbb adc push int nop (bad) (bad) push push or es nop inc cli mov push dec fisttpl call cmpsl outsl xor nop fnop out and add xor nop ret jmp push inc mov dec or pop dec push lds push push and xchg test cmpsb fidivrl aaa clc js and or sarb and cmpsb pop or dec inc scas push sub sarb (bad) mov xchg jmp sbb push push dec (bad) or or sub in or adc dec pop in popf or es lahf dec add add push adc stos lock jge loopne (bad) adc ret leave ret xor sub pop push movsb pop pop mov xorl mov ds push fimul movb mov pop push inc loopne add push inc push push notl iret mov xchg adc cmp test mov mov stos arpl test divl and and cmp xchg adc add xor sbb jo ja xlat scas pop lret add mov repz je test xor cmp movsb (bad) jno insl xchg dec mov lret sub gs lret and test or mov sub add shrl pop jns push das mov jg jecxz insl mov and out adcl xor jno ret add fadd hlt out and (bad) jbe aam (bad) loopne repnz std leave push cmp xor or xor andl clc sub adc push dec adc scas mov sub dec adc out in dec sbb test pop push rdtsc incl (bad) adc outsl cmp cmp and gs mov (bad) jle jbe jne jmp cmpsl in add xor sti lods push xor add push jbe add int3 adc and xlat sbb mov pushl fcompl inc or jle ds xor loope inc (bad) dec ret or push and (bad) xchg lods sub add mov (bad) xor insl call divb dec lahf add push imul or in hlt jg add lcall into pop add xchg cmp add icebp cli dec dec pop das lcall in insb fisub and data16 rcrb and in movsb lea adc push add or (bad) push xor call loop push dec adc mov xor mov loopne mov mov addr16 test mov insb and pop pop addb out push lea loop mov xchg pop imul adc rcr rorb adc or sbb or iret rclb cmp or adc xchg and imul mov fstpl ljmp mov adc roll lret stos sub push shlb scas sub sub cmp adc daa and sub rcr mov or daa xchg out in or call dec shlb inc sub push sarl or int3 xchg push test je rcl out dec (bad) shr sahf inc jno (bad) in inc lcall push mov push mov fcoml pop inc xchg xor add pop pop jmp adc jmp movb lds dec cmp add xchg out mov cmpsl mov dec ljmp inc je sub shrb sbb mov inc jmp pop insb int mov mov rcll mov and dec mov enter inc call mov push repnz push dec or movsb imul mov sub inc (bad) mov dec mov mov dec push adc inc and sbb sub sbb dec dec or loopne test pop int jl outsl das cs std sub aam adc and jle (bad) in adc or add add dec lock push mov iret dec dec sbb mov cmp fmul adc pop movsl or mov ret into adc into inc dec add popa push push insb add (bad) mov add mov shlb jle sbb in lcall inc lcall sbb movsb imul clc sbb mov aam les inc pop fsubs sbb enter fsts pop enter add ret add movsb add push jg adc inc dec jmp lcall fmuls mov pop sub lcall fimull inc xchg jge bound cmpsl dec pop enter inc rcll rolb or pop add into mov mov mov sbb insl xchg cmp sbb lahf mov or push (bad) in mov add adc sbb dec outsb add out push add pusha sub jmp or sub andb imul sbb jmp pop sbb pop pop (bad) xor cmpsb flds ret loope and les add (bad) pop dec inc dec or mov xchg mov mov push adc push push clc xchg lcall in dec aam movsb push imul dec push push mov clc add mov mov aad lahf loop mov stc cmp lcall leave fisubrl pop jmp inc test sbb dec lods mov push push jmp (bad) gs and call xchg sbbb pop sbb insl adc (bad) mov xor inc insl mov push icebp fwait push push dec adc inc lcall fs cmp div imul adc pop into int3 stos mov or insb add adc and sbb pop dec mov ret mov push sub scas jl or aam aam adc xchg fmuls fwait cmp dec mov xchg cmc test hlt ret jne mov add inc xor mov inc push insl pusha cmp aam inc sub xchg push xor mov add jno fs inc outsb push mov jnp pop aam add in jg iret add test daa push adc cmp test dec or adc sub xor mov adc push pop and xor enter loop sbb rorl pop popa fucom and mov adc movsb loope nop je and test mov cmpsl enter sub cs lods push dec lea jecxz jg dec scas mov cvtps2pi xchg lock fild push add cmp inc add daa nop jno scas test jnp or sub jne (bad) sarb (bad) in or jle add loopne or or add adc cmp cmpsl stc test add mov rorb cmp mov cmpl mov mov inc push es das das jmp arpl dec and inc ds mov xchg int mov or adc add leave mov xchg push mov dec and outsl cmp ret mov adc xchg jnp add mov push add sub test mov mov inc xchg sub and xlat les (bad) adc mov mov add xor aas fimul lock or loop push sub subb (bad) addr16 push fistl pop inc pop xchg mov dec xlat loopne xchg test xchg addb adc imul jno or sub adc loopne jmp sbb adc mov jmp inc aas adc xchg sub push inc sub ljmp in xchg jle mov clc xor mov mov push hlt add adcl sahf add add rclb or push stos ret in fldl mov adc add xchg movl pop jbe and lea mov cltd inc mov push add cmpl push adc pop sub or inc js into loopne mov mov or or nop push pusha lds xor mov ret das add xchg sub adc mov or arpl rclb inc addl aam pop call out bnd insb pop fnstcw xor add test pop xor jmp add mov mov add push cld jnp dec clc and daa sub lcall call pusha dec call adc jle pop sub add adc fmul or cmp cmp push adc sbb sbb clc jo cli out pushf jmp cmp jge cmpl roll jne enter inc xor das sbb or dec mov adc cmpsb or lods pop mov subb cmp out xchg xorl inc lock pop mov addl addr16 or and push cmp leave mov lock pusha mov push inc inc test mov cmp dec (bad) sbb jo scas add call add test jns mulb dec mov or mov psllw sti or daa cmp or ds add mov aam sbb push inc stos das sbb sub pop pusha pop or cmp cmpl sub adc (bad) adc sub mov (bad) adc adc push in je lock jb lret and and test sbb add pop add pop je push in int ss mov ja or push mov loop add fsubl loopne inc and xor cmp in out dec out and xchg inc fistpll jae mov mov mov add jo add (bad) mov test cmp adc cmpsb push cmp dec xchg add and cmp adc dec or and pop jnp out pop or pop cmp sbb jbe sbb js and or xor add pop push pop jmp push adc inc inc add jg nop ja ret cmp je pop and out lock xchg sub roll popl mov iret test xor out and (bad) out test adc push rclb mov or adc (bad) aam (bad) ror decl das imul lahf and pushf das shlb fmull mov push out enter (bad) push insl loope mov sub incl incl daa jbe loopne lret insl mov or hlt sbb add ja (bad) cli into (bad) (bad) pop aas andb push int push sbb rorb inc cmp and cs push dec and jno and outsb (bad) xchg pop es mov lret push or or sti popf sahf add jp (bad) sbb inc fs cltd mov (bad) add iret sbb movsb lock inc sub sub out jge adc add or sub faddl imul jg add mov iret sar jmp mov push lahf dec movsl mov push inc add or mov pusha inc out dec cmp add stc out insl addr16 gs push add sub std and xor jmp imul (bad) mov pop (bad) cmp (bad) cmc sti popa repz iret xchg cmp pop dec lea push loope push ds jmp push push loope arpl mov xor sub movsb xor psubw (bad) mov jle cwtl pop fs push mov dec mov mov jne addr16 push in pop rolb into inc inc ret inc test add add jmp roll mov adc inc pop xchg or outsb lock jmp aam ljmp adc fs movsb push or popa pop test pusha mov and mov mov xor xor inc mov adc adc mov (bad) jmp scas in mov sbbb pop popf adc pop add or jg or (bad) aaa pop popf sbb lods addl inc addr16 (bad) daa or sub add aaa adc xchg jno cltd clc sub sub outsl adc int xchg (bad) mov jae xchg loop sub mov xor rclb out mov nop enter xchg xlat aaa adc inc cmp or dec cmp hlt mov fs or fmull or pop push and mov fdivl cmpsb adc sub fnop and cmp mov mov dec push add jecxz sbb jp push test mov adc sub fdivrs lock cli lea loope add mov hlt test pop sbb pop flds out in add jne push jnp cmp pushw and imul add inc adc push xchg push push clc add gs fs shll xor lods loopne loopne xchg mov jl jae sbb mov pop loopne and sbb sub jl sbb fisubrl mov and push addr16 add and and inc stos jp jecxz xorl mov pop or and pop push xor inc or sbb mov aaa pop arpl and ficoml adc (bad) mov clc (bad) adc cmc in sahf push insb idiv scas xor rol cmp or dec leave pop (bad) fistp loopne dec sbb insb or add iret mov add and sbb dec lods mov cmp inc addr16 fdivrs sbb xor xor idivl ret pushl ret jo sub loopne and hlt jne dec xchg lea gs sub add push jle or sub out test daa xchg mov leave cmc xor repz aam (bad) fisttpll xor cmp cmp mov sbb cmp cmp mov (bad) ror mov sarb xchg or jle rcr ficomp inc mov push stos ret adc shrb (bad) aaa test addl or inc insb push dec insb jecxz or outsb jg push in fs adc add push or add pushf mov or test pop mov clc pop aaa or lods inc xor xchg or fs addl shrb lea out call call xor dec and mov inc mov push fs out sub and push cmpsl inc cmpb ja insl mov jg in (bad) mov mov inc cwtl sub lock cmp mov xorl cmp add xchg or and rolb adc in cwtl cmp inc mov xchg and es dec out dec mov mov inc adc jge jo cmp ret (bad) inc movsl fs inc pop inc jp adc add and in rolb lret or xor mov adc xor and jns lret xor adc push cs clc add pop ret icebp aaa outsb sub jne iret ret adc lds mov jle inc jl sub lahf data16 sbb jne mov ret mov dec sub push mov aaa mov sti jecxz dec pop mov jmp push add rcll dec or sbb test push into push fcomp xor into stos mov cmp adc xchg sti add mov sub cmp imul pusha mov xor icebp test inc jo imul or pop sub test jmp xchg inc daa or negb push inc movl sub mov or rolb add jle mov cwtl fcoms adc jmp xor sbb inc cs nop in lea pop push jb xor movsl sbb inc dec inc jo xchg ja push lds xor pusha loop or sbb (bad) mov out or or sbb popf or or pop adc push mov or flds sbb pop mov daa sbb or in mov cmpsl pop jne,pn daa (bad) push adc pop adc or push jne sbb sub pop mov push xor push inc mov jmp sub xchg add adc xchg sub sbb and loopne fmull sbb fcompl gs enter lods ret adc lahf add clc sub cld (bad) shlb pop ffreep add fldcw lock aaa popa cltd pop mov in jne add add ret xor or xchg cmp push clc out mov ds mov jg jg add add cmp xor push cmp push sbbb pop add inc xor daa mov jl add sub aas adc ja xor sbb add xchg jg ror sbb pop pop (bad) pop pop push jg cmp inc or inc add fadds sti jmp cmc js and jne sbb mov push push sbb movsl mov dec cmp xchg pushf or jo or (bad) loope (bad) fcoms addr16 hlt xor shl dec xor add pop test add add or add cmpsl sub add cwtl sbb mov sub test push sbb mov xchg or push sbb push shl movb push dec cmpsl jno xchg pop jo mov push and sub push push (bad) xor sub (bad) xchg push sub mov adc loope and js scas imul leave inc cmpsl pop cmp daa rclb dec clc repnz pop loop xor sbb repz push in inc mov pop xor rcrb jge add fisttp inc pop adc xchg int3 or imul xchg mov xor inc sub inc cmp lock jnp jne sub movsb loopne gs or stos inc clc dec add ds push add int3 lock jae mov and insl pop sbb xor imul pop lods add inc cmp and jmp sbb lret mov inc sub or push xor push jno ss in (bad) jo call sub movsl imul inc inc pop test ljmp movsl sbb enter clc cmp pop adc xorb push dec in cmpsb add popf xor iret add add or pop insb sub pop (bad) scas push addl xchg or popa mov (bad) jne pusha sbb dec add pop adcb in enter lret dec and dec cmc inc mov cmp add inc mov inc jo sbb sbb fcompl ja add inc add xor dec imul and adc inc je push jmp pop or popa push cltd sub inc mov mov faddl pop dec cmp cltd and mov dec dec or add add or push lods push lods push xchg cld xor or mov pop std adc les clc dec (bad) ret subb mov scas jo sbb ss add mov test adc or lock clc in inc movsl imul call push int3 mov lret and in dec lock les lock in or push fwait adc (bad) pop rolb lcall or outsb dec sbb es push add dec int cltd mov sbb cwtl inc add pusha push or sbb and inc bound test pop nop and sbb jmp jne or sub push push mov sahf or or lods jo xchg dec das fadds or das test adc add push lock bound rcrl outsb xor stos leave movsb or or mov cmp or jp fsubrs es push jne add shrb hlt add shl push and das sbb pop push lahf pop sbb mov sub (bad) mov aas mov icebp or add popf push pop push dec icebp or iret adc or lds or sbb mov mov mov xor mov cmp enter push out jecxz xchg ror pop add pop dec push test cmp mov rclb and xchg out dec pop sub dec xchg arpl loopne adc je hlt hlt lock push cmp hlt push add pusha movsb dec pop inc dec or or add jmp popa inc adc mov (bad) es fdivrl dec clc xchg sub push popf mov dec (bad) mov and xchg or adc push mov loopne inc adc das lret bndldx adc mov cmp push mov loope cmp jb arpl jecxz test adcl jge dec addr16 push nop enter int mov push pop xor pop das out into push into jecxz imul nop or int3 sbb xchg fwait jmp pop sub or mov sbb sub inc aaa nop or sahf xchg push shrb inc push das or push test adc in inc ret nop lock mov dec mov jl pop jno jle add mov mov sbb das adc pop push scas adc add fisttp jo pop add xchg pop mov (bad) adc sbb std std in and inc push adc xor jecxz xchg cmp xchg xor iret push push inc ret pop fldt cmp dec ficomp jnp dec inc icebp push push pop xchg movsb add push jg je imul imul push mov cli stos jle icebp jo les das sbb pop add inc xor out cltd adc fwait sbb and or or imul jo rcrb fwait cmp ja inc sub inc add call lea xor and sbb pop in in adcl jo xorb lock xor xchg mov adc xchg or sub inc rcrl or mov rcr pop cmp or xor cmpxchg in inc loopne inc push inc sbb js mov in nop out loope in aaa push lock mov test mov inc repnz or mov sbb data16 push sbb pop jne mov mov andb dec jae cmp jne pop cs jp fucom adc imul and xchg push sub fiadd and push lret imul mov inc test and test and push pop (bad) cmpsl add xor adc fcomip dec and pusha fs sbb and call adc pop push push xor jle mov adc clc mov pop out xchg lods mov sahf mov sbbb bound jp sub push push add xchg imul arpl and and test pusha scas add cmp dec nop or mov data16 and adc ss pusha ds cmpsl cmp mov cmc (bad) or test sub mov cmp xchg popl mov lea push ret insl xchg cli adc repz add push dec inc jae push adc and fwait mov lret mov lock dec push mov arpl lods add mull in add (bad) pop popa pop roll adc mov sub clc sub mov ret add push jns mov dec mov je sub add or add or rol cmc sbb sbb fnstcw stos add clc push mov mov les jle push fs mov mov fildl test in and jge jnp mov push xor out fnstsw dec lock ss add mov mov push lahf test lret mov (bad) scas mov xor icebp push lock nop (bad) xchg (bad) sbb dec mov pop outsb cmp cwtl cmpsl call ret sub and inc inc mov pop (bad) popa xlat aad and jo aas jecxz sub pop adc test hlt add sub xchg fsubs cltd jbe mov pop insb inc jo (bad) cmp sub add sub cmp (bad) mov cmp lds (bad) and nop insl add jmp sbb aaa adc inc pop das lcall jl js cmp inc or sbb scas and mov and push shlb pop jmp inc pushf cmc push stos aaa mov popa adc mov rcr mov rclb mov pop dec inc mov test ret and pop lahf dec fadds mov nop or add xchg pop ss sti push mov cmp cmp jl or pop repz mov pop mov sub jg test add dec sbb push xor adc xor das stc nop popa inc es sbb jg sub xlat ds and and add sub inc (bad) dec dec pop in pop inc cld mov sub nop pop fstps add jne (bad) fdivs cmpl pop mov pushf jns jnp sub outsb pop aas xor or aad dec push sbb xor ror pop xor dec dec and push test or and fisubrl mov pop imul stos rclb inc mov addr16 outsb push icebp popf hlt xchg sbb outsl mov jne mov test mov cmp sub in push cmp pop (bad) pop add jecxz dec ja and popa mov nop jb arpl cmp xchg cmp xorl dec dec and mov push push jo adc out test sbb das add ja lea lock sbb call push out lret push xchg mov test xor xor or add sub es or aas sbb add divl les clc adc mov fadds adc test and inc xor push xor (bad) cmpsb outsl lret inc mov xchg (bad) mov fistp call stc cltd repnz jne out jecxz nop cmp sub loopne inc movsl into xor in gs (bad) imul dec xchg mov jae add js jne jmp scas add adc sub mov scas popa cmpb xchg popa mov cmpsl add sbb es sahf rol adc or mov inc cmp daa jg adc lods xchg das dec fsubl jge add ret sbb push out pop nop lods adc xchg adc rcrl (bad) xchg icebp and add adc lds and mov loopne push and push cmp inc sbb cwtl inc and fisub push imul lea (bad) std pop pop jo and and cmpb mov inc cmp fdivrp push jmp punpckhwd push subl aam (bad) mov nop ret dec push pop or lahf jge je jmp popa je jnp clc sbb mov ret cmp nop pusha cs sub mov inc shr ljmp add push xor daa adc inc dec mov aam and stc jl fs sub push hlt in push dec ret cmp test clc fmull cwtl test add fwait mov adc push jnp sub lret cs xor pop push mov js in sub nop xchg or les movsb jb mov mov and or or sahf inc and push dec push mov dec dec inc add insl add push inc gs jbe loope push gs cmp add test sti sub adc jae push popa das dec sub imul inc xchg das inc in inc add arpl das (bad) ss sub nop pop fidivl jno jp gs cmc sbb push inc push es cmp mov fbld (bad) inc testl mov fsubrl insb sbb mov jl (bad) leave ret or pop push sbb rcl or add mov xchg ja and jo hlt ljmp or (bad) xor xor dec mov push add mov cmp xor loopne and xchg pop cmp sub sub loope jbe inc pop mov push jnp insb or and cs inc adc and or push cmc sub popa inc shr push leave and cmp pop insl inc es fstpt lods rorl sbb and repnz xor dec adc dec sbb movsb pop xor lea sbb sub dec pushf cmpsb lock add mov add sub push pushf jno mov sbb ret mov das mov mov push and xor cmpsb and lods dec mov or xchg inc push push fs pop repz or int jle rol fstpt js test out rorb xchg pop jp iret mov aaa ja outsb pop and pop clc add (bad) mov loopne test inc test mov inc jmp sbb cmpsb lock sbb mov and fstp push mov pop xorl mov enter subl lss sbb xchg add xchg xchg jns into xor (bad) leave adc push jge out nop mov sub pop cli fwait push fsubp and inc sbb inc insl lods inc push aas sub adc fistpll cwtl add sbb clc (bad) out sti lods xchg hlt fidivr scas int3 push adc push repnz jmp das xchg xor nop bound and add lcall cs out mov xchg insl jl addr16 xor xchg mov inc sub sub dec aaa or loopne mov es xchg adc or mov dec xchg ret shrb jne jo adc cmp pop or sub add pop inc test ficom xchg ss push hlt out and mov jne mov rolb xor mov sbb rolb int sbb dec roll in pop xchg mov test add cmp sbbb shrl jo mov mov mov shrl pop and clc or cmp cmp pop push pusha inc xor push jle mov rclb lods sbb push and dec inc inc adc nop or test subb mov pop js arpl frstor inc rcll jne fstl outsb bound ret outsb imull pop or inc push in sbb nop (bad) loopne inc or inc cmp loopne movl xlat xor inc dec add pop xor cmp mov push js pop push fs inc mov or scas xchg fcmovnb mull jl aad push mov les sbb push lahf pop sub inc and popf push and or ljmp mov xchg push xchg xchg into imul ja test cwtl adc aad aam call pop and cmp sahf out sahf inc dec dec push push pop push popf out pop pusha fs outsb imul xor or gs add adc add fcoms xor pusha lods inc mov add popa aaa js xchg mov xor xchg or psrld push bound imull popa pushf (bad) stc dec ret pop mov inc inc xor xlat dec sbb push aam push lea inc cmp add inc push inc add repnz sbb push cltd sbb es rorl xchg (bad) dec ret pop or js ret repz les xor int mov push (bad) sti loope and les dec mov pop insb lea lock and sbb xchg pop shll xchg fbstp sbb jg push rolb (bad) (bad) add adc or ss lcall xor cmp and gs or addb or and rcl xchg loopne or arpl sub aad add mov xlat leave out mov aas pop xor sarl dec (bad) or pop pushf jl (bad) xor mov adc hlt loope or cmp jne xchg lea jle cs popa stc sub jle xchg push (bad) cmp arpl jne mov xchg add js js vunpcklps shlb pop inc jo rorb mov test mov xchg andb push jl rorb call mov mov arpl or xchg inc (bad) in mov or sbb fistpl out stc push and sbb xchg xchg pop (bad) (bad) sub cmp add stos test sbb push or jle sbb or or xor loopne pop imulb mov push lock insl neg push jb adc pop aas push xor sbb push xchg pop xchg jmp add and mov or rorb xchg cmp inc cmpsb and sbbb cmp push pop inc ret xchg sbb imul outsl push adc inc sub mov push xchg nop mov iret daa adc fsubs daa adc mov xchg mov mov mov push sub bound (bad) push das xchg add mov dec mov inc adc xchg dec pushf in or xchg jecxz add push out lods dec push push dec xchg jecxz lods ret sar adc push push je adc jne movsb mov data16 and push lret outsl jae add and mov (bad) xor jnp inc dec or cmp xchg sahf or xchg pop or lods or (bad) leave in rclb daa push into add lock outsb loope lahf push push dec out fmull pop pop sub das outsb inc aas js (bad) or out push xchg adc inc sbb in imul fstl sub dec es call mov mov cwtl dec jne test or jle out add jl xor pop dec fs jbe mov pop inc movsl pop jnp mov inc cld je add adc pop jl call xor out ret rol cmp jne dec adc psllw push pop jns inc fldl loopne push pop mov cmp lock incb mov push add xchg mov cs ljmp pushf dec lods xor lods adc test add into js int jmp add (bad) cmp je pop push push loop pop mov je aas jl sbb and rorl outsl or inc jne or insb jns js les mov cmpsb cltd imul out or mov jg pop adc pop mov push sub js lock push rcl xor dec xchg inc jae rorl push xchg lds pop push cmp add icebp add or minps adc push inc addb adc add and orl pusha pop dec dec rcrb jno mov lods jge cmc sub sbb or add hlt and or sub inc pop or aam insb (bad) pop clc xchg outsb lock mov push or js cmpsl jmp pop ds jecxz nop into xchg popf mov sub ss (bad) mov push adc sbb pop sbb imul pushf add jne nop sub jl mov adc dec push and (bad) add ficom jbe aaa addb sub lcall clc lcall adc dec xchg int3 es add imul sub (bad) lret jnp push add mov imul jb jb jg mov mov outsl fmuls cwtl add add pop push mov ss mov pop sbbl xchg xchg push adc out push cmp add ljmp adc push push aaa add sbb sub push cmp movsl sub aas and add outsb loope aam lret divb pop adc inc scas mov subl pop inc xor dec imul push mov scas das outsl mov dec leave cmpsb (bad) mov adc xor add xor inc mov xor inc inc sbb rorb fistpl das jne sbb and sbb xchg add addl pop inc xor pop or lea push xor mov nop or cld mov inc cmp movb add mov sbb inc sbb dec dec gs or orl push pop mov jo xadd cmp mov movsb (bad) imull mov bound pop adc mov push adc jne rclb inc nop imul movsl call call mov lock icebp stos and subl clc in push sbb out shl jnp sbb push shrb ss ret xor xor ret mov std cmp mov xor push popa divb loope pop jnp inc pushf mov xchg xchg push sbb jno outsl and cmpsl xlat je mov xlat xor and mov movsb movsw nop (bad) mov ds adc adc mov inc xchg and sub cmpl and or je sub xlat or andb dec sub addl mov cli js add adc inc add out dec cmpsl fstpt mov popf jecxz insl test pusha jbe jno outsb leave xor jnp mov xchg lock or jae stos push pop popf dec xchg mov add or insb push cmpsb in inc (bad) test jae icebp hlt inc mov pushf arpl cmp nop cmp iret inc nop dec xlat xchg dec lock mov js insl cwtl movsb or rorb push pop ret sub dec arpl or or dec pop cwtl jmp add hlt cmc dec push mov xchg (bad) iret jno mov mov jge jno aam push pusha notl ret ret cmc pop enter iret mov xchg push ror adc ja rcrb inc jbe jo in ljmp pop add fistp xor cmp leave mov lods stos daa push inc test sbb insl sbb sbb xchg hlt add push sbb adc out push sbb hlt adc push mov in mov push dec or mov cmp cwtl movups add int3 popa and (bad) hlt call or push (bad) mov lods dec nop jge sbb out imul jns push dec sub jl cld add inc add inc movsb rorb sub test pusha inc jg or sbb sbb int into movsb jmp sbb mov sbb jg cs fildl push test and pop negb pushf arpl icebp lock mov setl cmpsl push (bad) popf and (bad) stos cld push or movsb jmp push loop add adc inc mov ret push pop xchg jbe pop lahf adc xor scas mov or loope xor mov mov (bad) mov lahf sub or aaa inc lcall fisub add push movsb (bad) jne inc adc pusha mov or add cwtl clc or inc pop jns das inc fldenv pop sub xchg aas pop popa fidiv xor inc popf pop and mov das lahf cmpsb (bad) xor cs mov adc loopne or les mov sarb lcall bound dec push sub add mov add mov add xchg jo xor (bad) pusha add inc fbstp sbb add in mov jae notb jns fs call fwait dec mov add xchg fwait inc push jb (bad) cmp inc pop xchg or xor inc add cmovb pop movsb sti jle shlb addr16 xchg inc test xorb (bad) iret add mov or mov mov inc inc ret mov dec jecxz or jmp sub sub inc adcb mov add jg or mov (bad) outsl and (bad) aaa sub push lods cmpsl and adc outsl arpl and inc xchg out xor daa mov sarb xor inc jl pop sub xchg test xchg invd dec and push add or or push sub xor jl pop popf or insl pop fsubs in push and jg ret movsb inc and sbb xchg cmp mov test clc jmp xchg enter (bad) cs es inc (bad) dec ja and ja dec mov inc dec dec jns mov out adc mov aaa pop dec ret sbb movsb push inc cmp inc adc stos add sti iret or scas (bad) cmp cld or fdivs lods adc and adc and add jo in lods xchg mov orl (bad) hlt mov inc adc mov xchg xchg or and les pop pop test jl xor dec cmp int3 pop adc add lahf rol pop push and add dec jge cmp add insb xchg inc adc sub mulb scas rclb fnstsw add fdivs gs cmpsl clc xchg cmpsl xor (bad) daa loopne xor push push push andl xor inc sbb aam aam in push (bad) push fcoml xor movsb loopne sbb mov inc mov dec xor mov dec call (bad) xor dec add xorl sarb es imul or adc inc clc (bad) lret lds adc mov or fnop mov arpl inc pop dec clc sub dec inc mov push lds fadd test loopne loop in (bad) lock call xchg xchg in stos and clc lods in add push or sub ret hlt mov and loopne inc test adc mov cwtl xlat inc inc cmp xchg mov adc or sub pop sub out mov pop push aaa lock repnz mov dec cmp adc test mov or xchg shll movsl pop dec movsb ret jbe repz lock sbbl cmp imul mov fsubs pusha dec push pop jge add test inc dec push popa and scas lods pop mov lods cmpl jecxz arpl das test or pushl xor cmp and pop ret es popf or xchg adc dec inc add cwtl jg mov pop outsb sbb subl xor push and mov push push rorl jo fs (bad) fcoml dec les fdivr cmp push arpl jae sub adc insb pop lods popf mov jmp outsl rorl push scas sub imul pusha mov add sbb rcrb cli pop adc mov push mov add dec pop cmpb or or shrl sbb xor jns (bad) xor xor push xchg cmp cmp mov mov add rol add or cmp jae (bad) fwait jg adc sbb fstl mov push dec sahf pop or or popa jb sbb ds or mov sarb push sar xchg scas add push bound insb fidiv js and pushf scas adc in dec (bad) mov and inc add movups (bad) jbe xchg int push into test dec aad jnp push inc fs arpl pusha or fcomi and (bad) and and int and imul mov sub fistpl lds inc (bad) nop fiadd adc xor pop leave or addr16 ficom mov or fldcw push sub es pop mov add lret dec fimul les mov jb mov push mov pushf mov mov jnp cmpb push call xor outsb mov dec push mov out cmp pushf mov stc sarl push mov sahf pop jl sahf pmullw and (bad) jns pop (bad) scas lods xchg fldt fdivrl xchg mov cmp push sbb push test enter mov xor lock xlat inc sub (bad) xchg lods pop lahf loop shrl sbb insb aam stos dec ja je (bad) lcall inc cmpsl pop sbb push test mov or pop mov or add pop shl xor or cmp cmp sbb in push inc mov imul dec cmp nop push movsb sub adc xor jmp js or sbb (bad) mov cmp scas or rolb push lock dec add lock jl xor cmp rcl inc push inc pusha push or add sbb pushf fisttpll cmp popa jne cmpsl mov cmp mov xchg or mov inc cmp adc cmp push inc aas sbb pusha sub pop (bad) out cs dec pop xor add push sbb ret adc pcmpgtd int3 jle (bad) not push cmp arpl fiaddl xor adc sbb shrl nop jo jns (bad) ds mov nop jmp pop mov mov push adc pop adc cmp lcall test pop lods push and je insb pop sbb mov dec mov test scas mov xchg cmpsb pop push enter jl movsb out cmp inc lock mov shrb out das cmp jmp jp pop es faddl (bad) jmp rcll adc jge add test and xor add add cmp fild loopne out mov adc (bad) hlt imul rolb and sbb dec inc lods mov scas add imul jmp dec adcb in add pop mov push add icebp or int stos add lret call imul (bad) mov or rorb dec scas das pop iret inc enter pusha es cmpl ret or fwait pop adc mov mov out andps mov adc popa add or adc jo fstps loopne adc sbb lahf mov fsincos xor je imul scas mov xchg out js fdivs add fnstcw sbb sbb jo out or and xchg int mov enter mov enter pusha js test adc (bad) enter cld push rorb pop imul push nop pop pop and fsts or adc mov and out cmp imul inc dec xor and mov test fisttp insl or imul or nop pop and roll ja dec or or ret and jo jo test cmc xor xchg (bad) test out aam xchg sbb imul push xlat cmp cwtl or xor insb push ds jecxz fist shlb xor xor xor inc mov inc dec dec dec dec dec dec dec dec mov push push push push push pop pop pop out cs dec xchg movsl fistpl adc rcl rcrb push push lods das add mov js movsb push fwait dec and jg cmpsl nop lea xor aas addb and std in adc and add es inc add fisttp repz and xor add mov push xor mov sbb mov test mov lods mov adc clc sub clc aam in adc push mov sub pop mov aas push and jge shll dec jnp sub pop mov in sarb stos pop cli add movsb imul and xchg push (bad) jmp das int push adc push lock push mov subl in and imul xchg add xor push inc inc ret and inc inc dec pusha sub cmc call lock push dec mov mov sbb or clc leave add or test dec outsl (bad) out sti inc push pop inc pop and enter sub sbb sub inc add lock inc or mov push leave cvtps2pd mov cmp outsl test push bswap or mov ljmp subl mov shrl pop xchg scas test lea pop add pop sbb loopne mov push das xchg or xor sub jmp lea pop mov sub mov push fwait pop repz xchg (bad) or jmp inc (bad) sti push add pusha or dec adc data16 dec aaa pop mov insb or in fadd push (bad) mov and lock dec lock xor cwtl push inc bound or adcb aas (bad) fistpll (bad) cmp ja sbb xor pusha cmc es je mov add lahf popa jo add mov ret adc (bad) daa call push fstps ret (bad) imul add and ficompl pop jp push ljmp pusha adc xor or arpl es sub test mov pusha mov sub lock ja fistp mov mov ljmp je fimull hlt xor pop (bad) jne adcl dec jp cmp sbbb push xor jb (bad) je adc push push cmp imul push lret push aas dec insl fcoml test repz and and hlt add ret add adc into inc cmp pusha push mov dec leave add mov ficomp inc or dec sbb imul cmpb fldcw sbb aad fmuls fnop gs mov cmc inc inc je test or pushw lods mov inc and lods dec dec or adc mov pop (bad) cmp dec add fdivs rcl outsb aas ret dec scas xchg pop aas pushf (bad) xor mov pusha mov rolb cmp enter jo inc aas movsb aas inc push popf xchg push les push fwait data16 dec mov in dec push sbb cmp jnp cmp cmp aas mov pop rolb pop cmp inc inc mov add mov inc (bad) movsb mov (bad) mov sub sbb enter sbb or add dec jg cmpl cmp test js cmp ret jns xchg mov imul inc (bad) add push mov sbb inc dec cmp mov dec scas (bad) xor addb (bad) rolb push dec mov adcl lock lcall das xor outsl jle adc dec lock pop pusha jle sbb add pushf fs test or add jne lods mov pop cbtw inc add dec dec sarb (bad) push (bad) out iret xchg sbb sub or rclb adc jle and push rcll dec push dec stos lods add out addr16 xor adc les sbbb data16 lahf adc mov or or mov jl je mov idivl ljmp repnz jo cmp lcall xlat or (bad) nop sbb lock fsubs (bad) push daa push pusha lret fwait push test cmp sti cmp xchg adc lock (bad) mov mov (bad) push or push in sbb add push adcl xor dec and add loopne cmpsl test dec sub popl test movsb sahf (bad) xchg inc sbb pop pop jecxz push movsb fcmovnb cltd je aas or xor xor rorb pop and pop or mov jl mov lahf xor call inc inc push jae add add mov mov pop sbb inc add dec lods mov sbb aas add std sub mov sbb mov mov mov aam insl scas pop pop (bad) pop push push adc fist mov movsl es dec dec (bad) jg testb test loopne inc jl add test scas xchg insb out pop and call or sahf mov push add push inc pusha iret insb loope test xor push pusha mov jg lcall jge mov sub iret pop popf push inc pusha shll xor mov xchg mov cmp xlat dec insb xor flds movsl test sub test adc aad cmp jae shrl mov lcall in jbe sbb dec (bad) rolb inc mov pusha dec mov shlb popf outsb add lock or test in data16 dec test xchg test or or ds mov movsb pop ljmp dec adc and inc or jmp enter jl inc dec xor adc call inc sbb mov pop mov ret mov push and add add jg imul movl cltd pop add hlt lret sti rcrb xchg fisubr cmp mov fcmovne lock inc outsb xor inc mov cmp arpl test or shrb cmp mov fldl fwait mov movsb les or mov jne ljmp sbb mov inc stos rclb mov push mov subl mov push nop sbb int3 push mov adcl sbb mov inc dec adc sbb setb inc dec fcomip or xchg mov push ret push mov pop xor fs jo pop jge lds cmp and sub imulb hlt adc fadd mov cmp scas and enter mov shll xlat or pop rsqrtps adc jns stos inc cmpl inc iret fwait test xchg dec cmp pop adc inc leave dec sub lret pop lahf lods inc iret dec pop das loopne jl dec xor sbb hlt or js call xchg push cmp jne push inc adc outsl int inc inc mov cmp inc cltd pop inc icebp fldl out jle sbb shrb sub les push sbb dec mov jo ss ret add mov dec gs or mov fstpl and cs les imul or sub push push pop push xor push push dec ret sub cld jno xor int3 sahf jns subl or mov dec lea imul cmp jo lock adc (bad) jbe lods xlat dec adc xchg rcrl dec push mov push int3 jo aaa pop push push inc adc sti jge lret dec icebp push fsubrs cwtl xorl xlat pop pop mov mov das rcrl inc add clc imul es xchg dec cltd add popf mov adc or or sub in aaa test fstl (bad) inc push cmpl lea sbb or pop inc ret insb fs out and lea movsb daa ss pop test push movsb pop daa test xor xchg andl mov jne pop add (bad) push hlt hlt pop xchg adc inc xor and ret and movsb inc push add repz clc or pop jns lret inc push xor insl sbb sub add xor leave lock rorl add sar and sti or in (bad) pop fildll push sbb sub sbb mov inc or adc lea add sub jo mov push insb or outsb aaa fistpll mov push and sub jns loope jmp push sbb add rcrb xchg jne mov add test leave jne loopne ret call dec iret push inc cwtl or or mov rcl fwait sbb je icebp xor adc andl loopne test mov bound rolb add xchg pushf or push loopne aaa sub hlt sti sahf jno xchg xchg adc test sub inc pop add sbb add jbe add test adc and mov adc dec xchg inc mov call or call add (bad) add or xlat lds psubb mov leave adc push jns call in adc xor les and inc clc xor inc mov lret clc sub inc ds xor adc sbb repnz inc pop mov test push push lret dec movsl roll xor clc arpl rclb test push stc mov clc lock adc inc sbb dec (bad) inc nop push call adc adc mov or movsb leave into add and sbb jns cmp pop push out sub inc cmp ret mov pop and mov nop pop and insb adc sbb sarb add adc popa test test addl sti pop popa loopne mov inc fimul add enter push je or in push sbb (bad) mov sbb jle (bad) (bad) xor mov xchg (bad) or cmp sub xor je pop sub mov pop cmp push pusha inc push sbbl and adc xchg fildll mov pop fistpll sub push cmp mov xor jl dec aam cmp pop jl or mov adc pop dec xlat (bad) or or add mov sub dec adc test stc sbb dec addr16 add pop fcompl inc addr16 push arpl mov xor lret or loop push pushf pop mov rol hlt adc xor push cmp dec cld (bad) incl lds lock inc call add jbe lret repz (bad) xor sbb add ret xchg jmp dec aaa dec fs dec movb (bad) jp dec pop xor xchg out sbb int jl mov and cmp or popa roll xchg leave test clc shrl pop pusha aad stos xor in ja dec sbb fdivrl adc int arpl mov or pop mov movsb cs (bad) test adc cs push and push add dec test jb and sub aas lock aad and ds (bad) cld sbb in add pusha mov inc cltd insb aaa hlt pusha sub movl lods mov fdiv push push mov inc inc sbb push dec and dec cmc testb aaa xor lea sbb imull lods inc ret dec iret and cmp xchg ret add mov ret adc adc pop jp aas pop push add fcom fstps imul cltd cmp mov xor adc xchg mov jne popa fistl ds clc or push dec sub inc and insb inc xchg outsb dec stos outsl cmpsl orb repz pop mov add xor adc push das or adc adc mov or push mov (bad) fucomip aas je (bad) aas xchg cmp movsb mov push divb andl je sbb cmp outsl test xor out add aas sbbl push scas pop xchg lods mov mov outsb fmulp pop nop dec ds inc push inc inc rcll lds sbb leave outsb (bad) or ret ds lret mov rol fdivrs lock cwtl pusha pusha sub je cld mov out mov dec mov ljmp call pop pop lock jno,pt aaa pop cmp xor jmp fs and lods adc cs push pop movb int fcmovu mov xchg es arpl push (bad) lds bound popa push js xchg lea mov mov cmpps jmp inc imul aas jbe and add xchg dec inc adc dec aas int dec cmpsb push pusha sbb popa cmpsl test sbb or sti js or or push xchg inc sub lea dec out mov or push jg pop daa xor mov or in mov out jmp test clc addb push pop test sahf scas dec jecxz jbe and sbb xchg jne xor scas dec cmp xchg and mov and inc inc dec jnp shrb lock or inc inc push adc push add push and test nop cmp mov mov mov or cs inc popa xor mov imul mov mov shr gs js cmpsl xor xor xchg jmp or fdivs adc adc sbbb pop add pop stos ret jno pop sub call jae movsl mov dec mov mov push fsubl push mov jmp mov out lret enter inc inc or mov cmpsl addr16 adc ljmp ja (bad) lea mov mov cld and lods out scas out cmpl add jo iret int jge xor xchg and enter adc or cmp dec xor cmp ss sub xlat xchg inc lret jle fistpll push cmp cmp js hlt adc add movsl les xchg mov (bad) or xchg xchg into and adc (bad) daa lock jl or dec daa push mov lret push ja mov sbb (bad) push pop pop cmp pop dec mov inc pop inc shlb ja movsl aas insb mov pop inc inc xchg jne sub xor dec jmp data16 fstpt lcall insb lret fisttpl dec push fwait lock pop gs movsb hlt xlat pop cmp xchg xlat lahf and mov and inc and sub xchg mov cmp cmp and adc icebp stos xchg mov enter push push pop imul insb add mov mov cs xor or popf dec out ss hlt jmp imul cwtl jmp mov adc push jb nop rolb or js adc or rolb mov into pusha lock fs in jl add pusha (bad) and cmp xchg inc mov xchg dec (bad) leave (bad) cmp inc or clc es xchg imul add sub fnsave (bad) adc lcallw xor mov insb sub sbb xor rorb in sar call sbb call add sub aaa mov repz mov and cmp mov dec lods adc add mov out in and cwtl sti jle mov xchg test mov mov inc or pusha or daa inc push lock push sti mov out sbb and sbb push sub push in idivb sbb aaa pushl dec inc add adc int movsb mov std push or xor adcl imul popa cmpsl sub and inc add mov mov in int3 add call shrl movb out xchg or jecxz lock sbb test or fldl mov (bad) mov dec jbe fld loopne xchg scas in pusha cmpsb xor test clc xchg iret aam leave rolb enter sbb mov pusha sub and and jle in les daa test rclb adc les repz xchg jne dec push pop outsb aam cwtl dec cltd loopne fs mov push aam je push sbb mov push mov cs repz nop fdivs push out out mov rcrb push shrl (bad) enter xor jno lea xor xchg inc lcall push stos lds adc sbb push jo dec dec and or xchg ret rorl dec adc mov jmp push (bad) daa add js sbb (bad) sbb dec mov jns mov dec leave idivb xchg sbb cmp jmp rol lahf push mov or push fwait divl push arpl movsl cmp ds push (bad) rolb loope (bad) xor popa shrb cmp aad (bad) mov stc into or or dec pop xlat (bad) dec pop out insl xchg pop cmp adc push mov or sub loope mov add mov leave push push mov xor sbb pop outsb dec je popa ret clc (bad) or into add and jne mov sub aas lea jp xor xchg mov cmpsb (bad) test popa es and aaa cmp aad mov sbb (bad) iret xor pop repnz adc jae fsubrs ds dec push dec pop int3 scas push xlat out call pop add mov nop sub cmp cmovae push xchg jo xchg and add dec add or add xor mov mov popa (bad) ja sti jl inc sbb xor int3 arpl inc movb or sarb inc mov pop inc cmpl cmpb movb lea inc test test sbb add negb aad pop mov add jle aaa xchg and jbe mov dec inc jne mov push les cmp inc cmp mov jnp adc lock cli or iret and adc pop push cmp add xchg mov rorb or mov xchg mov rcrb add pop jo loopne lds inc clc out inc xor insb in or push and fdivrs inc cmp in pusha shrb inc sbb mov xor inc xchg inc mov mov dec and faddp mov xor in out stc daa pop lods ja cmp out mov mov xchg push push lahf insl sbb or lea ret outsl dec loop je sub daa sbb xor push pusha xchg push (bad) jne hlt xchg mov cmp add and je push inc ret mov sub inc pop out (bad) (bad) push daa dec pop hlt add adc mov fcmovnb xlat (bad) and ret ljmp mov daa add lea loope xor pop sahf xchg and aad fadd jmp into inc shlb cmp js pushf xchg insb add mov or add fnop push hlt add mov cltd test jle mov adc cwtl or out xor adc aad or dec jo outsl mov aas shlb inc mov cmp pop adc adc ret dec jne cmp cmp ret pushf (bad) mov sub das mov (bad) and adc insb stos add rclb mov xor shlb add add xchg (bad) jle sub mov ja aam xchg add insb pop mov mov pop sub push add xchg jbe cmp push repz sarl cli lock cmp fcoml in mov add lock mov mov (bad) adc jecxz or xor sbb loopne pop push movsl rorb adc cmp jp mov jmp and sub dec cmpsl outsl or push sub sbb sbb lcall push stos push enter aas add imul loop push cli data16 cli sub add cmc add (bad) mov and sbb testb je orb and outsl pop in cmp xor push cwtl ret mov mov mov outsb sbbb cld xchg inc mov inc jbe nop xchg movsb push mov dec cmp sbb fdiv add leave adc lds test popa insl loope gs rorl inc stos add popl mov xorb mov adc jnp ds sub xor cwtl push push and (bad) and and sub sbb inc cmp je xor jmp inc lcall rol mov int3 mov mov jge cmp addl xchg dec ffreep pusha push jne outsl loopne jecxz cwtl hlt xchg sbbb adc xor jmp cs and lret nop test ds jecxz mov push push lahf rcr mov pop movb inc push add imul inc cmp cld mov jb pop loopne add test or add test (bad) sbb imul sbb out in adcl mov pop cmpl jl add dec push adc xchg faddp cmp into add adc aas cs inc fwait jg cmpsl inc sub xor arpl pop dec in or mov jbe mov out sahf inc pop sbb sub sbb pop (bad) dec pop cwtl dec rcrb das mov mov inc or xchg sbb push pop xchg fiadd sbb cli test icebp cmpb inc jmp (bad) repnz and icebp lods or ds mov add cmp shrb mov adc xchg hlt adc and out les test push dec aas pop nop pop push mov dec inc cmp orl fisubrl ja push add ret or in test pop or ret sbb test or mov xchg or or jmp xor enterw cmp cmp cmovl pusha sbb inc xor sub add ds pop add xchg (bad) jmp fiadd push fsubr sub and shlb sbbb push daa fnstsw jecxz sub test test mov loope mull rcrl jp loop pop adc inc xor add jo xchg xor jge icebp push test sub and add loope push cmpsb call and aam cmpsb fimul orl loop lret sub aas mov or sub ss loopne inc outsb faddl mov movsb sarb (bad) (bad) cmc jnp hlt jmp sbb out xor rcll lods adc rorb int3 xorb (bad) jl adc xor jne push je pushf dec xor pushf xor sarl fmull or pop nop mov or push into or cmpsl dec ficom jl pusha rclb in ror sbb pop pop icebp (bad) push lcall popl fcoms (bad) push ss dec push clc pushf lods xchg lcall loope aam xchg push orl pusha cmp dec or inc (bad) jbe mov (bad) pop jb push pop ret movsl test sbb inc fistpll outsb lock and xor inc hlt add in add adc add xchg cli inc add inc pop adc (bad) add inc das push imul cs mov sbb mov lcall inc dec hlt ret aas cmp ret xor push push lea imul dec sub dec push add push lock in add arpl inc cmp mov or inc in xchg icebp mov mov loopne or daa test add in enter nop ss orb dec xor or das loopne sub xchg jo cmp add aaa push pop inc push lock ret inc add cmc inc adc mov push repnz pop test inc push pop sub call fsubrl ds lcall sub sub or out or pop add sub ja jge es sbbl fldenv jmp je and imul and sbbb daa xchg loop testb add jne out mov test cmp jne pop push movzwl adc pop inc add sbb mov sahf jbe xlat mov sti outsl insl inc jl hlt outsl and test add mov loopne stc test (bad) add xor shrb (bad) mov addl mov sub enter add inc xor sbb add xchg inc ficoml dec jge or adc hlt fcmovnbe int3 mov outsb mov into ss mov stos mov sub or mov fsubrl fdiv mov xor or nop xchg dec fdivrl jae dec push xor or mov in notl adc ds fdivrl and inc xchg stc call adc sbb dec icebp cmp cs inc mov sbb add int lea inc and pushf pop mov aam pop shl fmul and mov (bad) cmc cli leave xorl and add cli push push or test jmp cli sbb fcom dec pop cmp dec sub dec cmp xor inc dec pop mov or sahf andb inc push xchg jns cli in loope mov inc arpl mov mov lret push lods push jne inc test (bad) push dec mov or mov xchg or pinsrw stos ljmp popf add sbb (bad) jmp push lds xchg cmc jecxz pop xor and adc xchg adc inc sarb sbb adc mov mov add adcb jl (bad) xorb daa and cld adc fadd inc pop xor ret inc mov mov xchg mov stos cmp rolb inc inc cmp inc popa add jmp dec in (bad) mov inc cmpsl add js subb jb sub subl ret add ret cmpsb jo xor or lods pushl stos orl jl je std mov jge xor repz xchg jns pushf add cwtl call or fistl pop or jecxz xchg or pop jb sbb xor cmp aas lcall adc ret mov divl aas pop fwait mov cmp inc xor adc mov test jp gs xchg add jo add mov fidivl sub (bad) out jle fsubrs or in pop imul loope adc (bad) dec fs movsb mov or lds xchg inc mov sbb sbb mov dec jae sbb inc and dec fsub pop pop xchg inc sbb jmp cmp scas and dec stc fadd lods push testb and or and or inc scas sbb or ja push sbb fs push je add mov sbb sbb pop jecxz sub sti mov jmp paddsb dec and push pop and pop aaa push insb dec lock mov clc out push cmp jne icebp ss xchg outsb xor and test sub scas enter sub adc imul or push sbb pop shrl dec fildl inc test sub push outsl lock pop or sti jl sub mov pop adcl and and ljmp jl inc sbb xchg sub ret stos mov adc xchg leave jmp outsb pop sbb xchg add movsl movsb test les ret adc test jmp mov fdivp push push and or cmp repz sbb popa sbb push mov jnp repz sub ds or idivl cwtl add add push cld pop out sahf ja push clc in mov cwtl hlt dec in push or pop pop push inc pop scas cmc or lock cmp pop cmpsb mov and mov jmp dec xchg and dec jmp jae mov and movsl test rol popa xor mov xchg xchg lahf shll mov loopne sub js sub add outsl std push adc test or bound dec pop add adcb jne adc nop enter adc test jne dec or in bts shr xor xorb insb ss adc (bad) jae je lds data16 jo dec add jl xlat push and dec pop and dec xor pop xor dec mov add cld xorl test add or movsb addb imul fstpl decb push pop push inc jl push and or or push inc push sbb dec ficomp enter jb cli add or ret mov call inc scas adc in lcall dec enter add push fcompl insl outsl fs es sub loop (bad) mov add rcrb mov or push loopne pop sbb ret arpl nopl cs iret mov add push adcl xor mov outsl adc fs imul in inc mov pop or pop and pop xchg and push push sbb ss push les inc dec pop add add mov mov add or test and jo and ss ja mov mov push pop and pop push in xor nop pop adc (bad) insb add sbb ljmp add or jne jnp or jp pusha cs dec or or jno or dec pushf idivb add mov pop mov mov (bad) or daa or (bad) jnp popa or xor and ljmp or push outsl mov xchg (bad) jae pop (bad) add decb xor rorb or and std (bad) (bad) inc dec movsl sbb out mov das mov popa mov pop xor pusha or cmpsb sub js mov push sbb and int mov pop add nop pop out cmpsl pop adc sbb adc jne lcall or lock adc adc mov xchg and out cmpsb mov outsb jne sbb outsb jb int lret push adc xchg jb xor sahf push or jp xchg jae xchg nop dec add push or fild jo addr16 adc (bad) adc adc (bad) and adc inc add xchg and push gs shr inc jge int3 loopne loopne xor movsb cmp mov data16 imul (bad) mov xchg pavgb or adc insl mov push jb clc jns inc and cwtl adc addr16 mov scas push outsb (bad) aaa dec cmp lahf xor push adc addb pop ds add clc cmp fcoml outsl aad inc jl cmp xchg or imul test iret enter add rol flds rcr in fiadd xchg adc jo mov mov xchg xchg push popa loopne pop les mov push mov adcl push push adc adc fisubr cltd add ja dec xor push (bad) or inc adc sbb mov or jns dec pop xchg and pusha sub sbb pop push add xor daa and (bad) fistl enter mov jl and rol out or sbb push mov inc sub and pop add xchg inc inc in into ds sub out adc inc inc adc inc testb cmp inc test inc inc mov jl insb mov inc dec mov in addr16 inc mov adc fimul pop pop inc cmpl pop in inc fsubs in lcall int3 insb push or jge jg inc cmp jp popa jl push ja neg cmp repz push push sub push push pop fs inc adc (bad) cmpsl out push add add add add ljmp add add adc mov adc push xchg ljmp or xor push push mov inc mov mov jp xchg test mov or and rorb std ljmp rclb in and stos jb push mov push mov dec pop push nop and ds roll lods out ds repz or sbb ds or int lcall push sub out cmp (bad) push mov data16 mov push faddl jae clc push xor jl into cmpsl cmp es push cmp stc mov mov xchg add xchg fdivrl fadds insb push xor mov fs orl xchg mov mov js ret enter or sbb xchg test pop and loope jp mov and nop xor dec xor pop adc cmp sysret in mov sbb push xlat outsl pop sbb or adc mov push xchg test xor sbb mov push inc andl leave mov push cmovo cmpsb dec sbb mov push and jns inc shrb push dec loope push mov mov adc scas pop in adc adc or aaa pop adc inc fist inc insl jo adc mov test sub sub push rolb ljmp sub add add or cli and sbb cmp pop sub inc xchg xor gs movsl sbb scas mov xor inc inc inc sbb xlat and pop jmp jns imul das mov fmull shll jb fistp call fcompl movsl lds in push enter repnz add mov pop push ret das add das cmpsl stos in sbb add aad lock push jae xor jae xor mov push and sub out inc ss dec test add add and mov sub or xor scas scas mov sub int3 cmp sbb pop pop or adc jno adc xlat incl push sub subl or into jmp and add jne pop jnp adc sub (bad) fdivr fwait sub jle inc or jbe ja fwait nop iret test xchg outsb push add movsb pop (bad) xor dec insb fs pop dec lds mov jno repnz push ret mov push or int sub pop push lcall shrb js jae data16 fldl test adc xchg lcall dec xchg cmp arpl xor fdivrl pop inc xor sub xchg (bad) xor jecxz int (bad) pop int loop ss aad or mov leave aaa outsb in mov es cmp or (bad) inc jne gs je sbb (bad) sti (bad) rcr push (bad) lock rorl sub rcrb sub push cmp aad pop pop push cltd loopne cmp adc orl sbb pop les adc xchg test push shlb and les dec popa dec ds pop les inc adc aas and adcl mov inc cwtl cwtl je mov ss insl sbb enter mov dec adc mov (bad) xchg addl xlat push repnz sarb mov roll nop ret (bad) fcomps dec bnd adc clc jns mov push loopne popa cmc add inc jl arpl fwait add fiadd (bad) aam in sub dec xor mov mul dec sbb (bad) xchg (bad) dec dec xchg stos dec dec (bad) dec adc loopne sbb rcrb xorl push test loope dec dec cmp push jbe jecxz mov test xchg dec add inc pop dec or pop orl mov std inc push ret xchg std dec push sbb push adcb push mov add adc xor push add dec push pop mov data16 cmp adc inc cmp addr16 nop cmpsl dec inc inc push rorb aam add push dec adc or pop push push hlt das adc and mov test inc clc rolb pop lret pop and cmp popf rolb pop in or test in and pop or pop fs lock and add pop or sbb adc pop enter adc mov inc sbb xchg rcrb add dec add or out push sub xchg push rcrb in cmpsl fldcw mov fsubrs std or sbb sub inc adc loop pop jo or add lret push pop or out nop lds push pop bound iret pop scas push mov test popa xlat or and cmp lods sub sbb dec aam or inc fnsave rorl xchg nop fsubrl or pop pop push or push loopne scas fcomps lcall dec inc inc pop pop push or mov push add add sub xor adc (bad) mov xcrypt-cfb cmpsl movsl mov add in cmp test sub push out pop mov or je adc dec push inc loope lret xchg push out and mov (bad) mov xchg xor xor sub dec xor mov rolb shlb je test je adc mov fcompl adc push adc mov mov fmull adc test and sarb and jmp adc push xor fwait mov sbb and sub and and (bad) xchg sub call cli sub ficomp xor insb pop into or sbb loope ret dec ret or lea dec sbb cwtl jp push cmpsl cmp ss pop and cmpsb js aam cs mov mov fadds adc mov lahf pop aam fild repnz dec and adc jbe ret mov test (bad) rclb push sbb cmp aas xor mov adc sbb xchg (bad) push inc and out std (bad) mov loopne add and (bad) pop push jp iret call jle cmp sub mov xchg sbb and lds je lods fidivl inc inc push andl (bad) jae addr16 loopne cmpsl sbb adc lock xchg inc xchg cli (bad) sub or jns iret in or or inc sbb (bad) adc or xor sbb sbb into insl fisubl or xchg mov xchg push ja xor jbe testb sbb cs mov adc fidiv add xchg add jns aas push and mov mov ret popa mov mov pop push aam test dec (bad) scas or add jnp dec dec adc insb jl inc xchg add lock sub and rolb pop mov hlt movsl test xchg or push shlb mov mov or mov or push inc or add or insb dec sub or inc insb fistl ds push inc add mov fisttp and mov dec ret inc rorb push and cld or lods inc inc and rorb lahf in into add loopne mov pop and add mov push xchg sub fxch pop das fist pop fildll jecxz sub sbb inc sub add sub es and mov xor push sub or push inc add push fadds gs (bad) in int3 and xor push hlt xlat push loope fiadd pop dec cmp xor lods mov dec sub xor xchg inc push dec mov add sub xor rol je aaa cmp xchg jge lahf cmpb push cmp popa jp fcompl adc push dec (bad) sbb push fsubrl jb in add adc testb mov or push add ret bound dec sbb and lock or lahf and add stos mov push xor inc pop and repnz jge push mov pusha adc cmp or xchg jb or lea jnp jmp fucomi arpl mov enter imul inc pusha lock test test test sahf sub adc push mov int pop stos or pushf sbb jmp adc sbb xchg mov mov sbb mov sarb shlb push ljmp add sub movswl push mov or in xor and rorb jne mov pop out jecxz (bad) js dec cmpsb adc (bad) push sti pop adc jae (bad) lcall fs inc imul push test cmp adc pop cmp jmp inc inc or rorb mov cs adc inc daa add ret mov sub mov push ret rclb movsl loopne sbb and or ss sub (bad) xor push jmp mov and sub adc add dec sub (bad) lcall rorl push sub or je ss jmp scas add test inc xchg or (bad) and repz lock pop push dec imul and daa xchg std pop inc inc outsb aaa add pop mov in cmp movsb inc pop in mov mov jo adc inc addl pop sahf les in push push and sbb (bad) jno mov movl lea fdivrs push and xchg icebp sbb pop cmpsb or sbb arpl pop cmp and inc (bad) mov xor mov dec push (bad) adc jns inc push nop mov subb das add outsb or (bad) js jne outsl pushf packuswb repnz sbb imul test lcall insl fidivl or dec pop das js (bad) pop sub rorl add lret pop jecxz (bad) mov adc or add mov lods (bad) (bad) push and lea sbb push rol mov cmp repz and xchg push add xor ds test inc orl xchg push das mov sub loop pusha test jge and sub (bad) xor sbb jnp push add cmp test insb pusha mov mov cld cltd lea xchg jl jp pop sbb xchg iret dec push jb lock pop dec dec pop pop add mov and sub xor inc enter cmp test cmp xor enter cld imul int sub addb add andl (bad) ror shlb push mov test cmp lock lock pop stos das leave push (bad) and push push mov push mov clc sbb push mov mov and bound loop and fs xchg (bad) dec sub ljmp fwait dec mov xor aas or notb adc mov pop adc int push or mov sub int3 js or pusha push mov lods stos add add cmp mov sbb or (bad) cmp outsl xchg push les xchg adc shlb inc pop mov (bad) mov mov sub push and nop jmp and or test daa push push je mov and aam fstl inc shrb cwtl scas daa and rclb pop push sbb adc inc ja lcall jo stc cwtl xor cwtl out mov push inc jecxz and mov sub pop jmp pusha sub shlb or push gs add int3 ss pop pop notl loopne sub adc imul lahf mov lock xor adc sbb cmpl dec js movsb adc ja mov sub emms (bad) ss loopne test and imull leave aaa or or add or push pop xor push inc (bad) lret push inc adc in pushf and loope (bad) or mov pop xor mov lods mov pop dec outsl or push in or or popa les sbb (bad) pop dec xor and jnp inc or lea dec loopne cld (bad) insl leave sbb xor pop pop gs (bad) lret lock add (bad) dec mov or sbb sbb add scas call adc push push lea push sub mov aaa ds push or sbb loopne addl outsl or lds sbb out sbb pop mov fstpl jno push jle mov xor add or imulb xor sbb and jae push ret sbb mov and arpl dec xchg jge adc mov pop and std adc jle sbb lcall fcompl cmp cmp and jmp ret adc in add rol add in push pusha (bad) and jne adc repnz out ret lea sbb add jno mov pop dec je cmpsb inc mov pop fs xchg pusha mov dec pop imul stos mov push sbb pop add in jge add or pop popa dec add xor xchg cli mov ret adc mov ds cmp or sbb in fadd inc lods pop jb or clc ret aas out add xchg dec push mov movsl int or and in adc neg sub fcomp (bad) mov in inc or lea daa cmp mov pusha pop dec cmp or nop nop pop jne mov aas push jb lods loop xchg clc add adc mov add (bad) cmpsb adc add fld inc ss inc loopne mov je aaa (bad) xor sbb or or xchg push lret sbb (bad) xchg ja stos orb mov inc out and addps dec adc in out dec cmp push add xchg xor sbb das jns hlt (bad) cmp cmpb fyl2xp1 aam imul outsl in add arpl dec nop shlb sbb mov mov jp insb icebp mov fsub testb adc mov dec (bad) dec add nop out pop sbb in adc inc adc call lock dec cmp insb mov inc sbb in sbb push das mov push daa orl push (bad) das xor push insb add bound pop inc inc ret cmp lods pop dec add xchg out cmpsl or sbb add lock movsb pop and fild xchg jne idivb les sub ret ss dec arpl sub add in pop and pusha or and ficom push pusha sbb or (bad) dec aas popa call jmp lcall movl enter xchg hlt cmp push arpl pop orl out cmp xchg (bad) cmc cs dec xchg ret inc lods aad fildll cmp cmp in and in push push inc sub out pop cmc cmp xchg xchg inc xlat orb mov test dec test adc aam cmpsb add dec lret push addr16 les ret or outsl loopne sub inc cmp jnp fiaddl lret xchg push (bad) lods adc pop cmp add and in push test lar xchg (bad) stos inc mov mov and mov test ds ja das or sub lea xchg (bad) or mov testb data16 in subl jle jne jp push adc fs add push rclb scas xchg push bound push lds xchg jo sub enter pop xchg loopne lcall push mov sbb xchg and movsl xchg or xchg xchg adc inc cmpsl pop push outsb adc mov pusha mov gs lea xchg leave or mov mov or rcrl adc sub pop lods das daa push insl inc test pop in jo (bad) sub mov ret sbb mov push or repz hlt adc cmpsb mov cmp and fs add and sbb arpl push adc and or and insb and push aaa test aaa test xchg inc jecxz xchg dec imul sub xor lds cwtl aaa and loopne dec decl sub xchg and lahf dec ljmp push cs dec inc js adc fcoml push pop xor mov aaa or sbb jl sbb sub (bad) sub sti das add and adc repnz mov notl add enter sbb ss inc add pop subl leave test sub aas cmpsl insl das cli in xor addr16 inc push xor sub mov jae push xor shlb xlat lahf cltd aam (bad) pop sbb xor add sbb pop (bad) pop scas out pusha or push andb or das ret fnstsw cmpb cmp push mov mov (bad) inc sbb add pop pop fcmovb cmc xor cwtl xchg cmpb sbb insb mov imul inc push sbb out inc jecxz dec sub dec mov or xchg xlat ret xchg xchg add nop add aas mov sub int3 cmp sbb aas int3 enter mov frstor and sarl fsubs add cmp lock imul dec jnp pushf or dec or push push mov dec adc xor inc or cmp mov xor clc daa push mov push scas or leave icebp jl stc lret add aad xor adc das dec fsubr push lret ret jmp dec sub pop cltd (bad) dec fs jo adc imul inc jmp pop das rorl int3 test and movsl jns imul lods add call in or inc (bad) outsl and push and divl add (bad) and mov push push sbb pop movb fcompl mov or mov (bad) ljmp ret mov pop inc scas testb add fmulp jmp andb cmp push test inc push nop rolb aam cmp pushf ret fwait (bad) into xor fnstcw call add adc cld test arpl and mov add fldenv das sub in jl mov pop les adc orl imul mov add inc jg sbb or jl ret jb or jmp or test loop cmp mov mov mov jmp cmpb push cmp jne mov add xor test or (bad) push inc inc in mov xchg sbb and pop fnsave xchg push test dec mov repnz and inc out cmp lret inc cmp test and mov daa mov mov imul sbb dec pop rcll jecxz and sub push test pop mov sbb inc or lods jecxz aam inc push imulb insl or sub sub inc ja bound nop fs dec fldl cmp mov cmp jle inc inc hlt pop dec inc xor clc cmp adc mov enter hlt in in pusha mov xor dec test andl sub push cmp or bndldx ds nop add inc push out arpl xchg sbb mov mov sub add daa inc xor clc mov mov mov adc adc dec dec adc pop push lock lds cwtl jp inc jmp dec jp call and or nop xor leave or and icebp or shrb mov lahf ss mov mov addb sbb jg mov mov xor cli add jno fnstenv jne mov popf jo aad push lret nop add jg mov andb ss lret xor inc loope push inc shlb cmp pop leave clc xchg jne pop lods dec sbb mov addb xchg aam and rcl loopne popf ds pushf cmpsb test push inc shll mov insl rorl add ja push dec jb adc dec shr add add es ret add sbb pop mov adc mov dec pop inc xchg xor lcall or mov neg xchg movsb neg in sbb out loopne sbb test sbb xchg add fisttp dec push or in arpl rcl insl inc jmp add dec das add ret decb repnz sub push adc push test push push testl and sub mov lods (bad) daa push jo les int3 or push dec (bad) decl and xchg fistpll push add les add and lahf pusha movsl sub test push das xor in aaa mov inc (bad) daa movl leave das jne add or js fwait or insb (bad) fldenv adc (bad) xchg and jo or pop imul mov mov or xorb xor add insb xchg gs test mov mov mov lea loope loop enter lret nop inc xor (bad) cmpsl icebp rcl lock pop mov loope lods pop adc adc testl icebp xchg pop mov bound cmp add and bound mov push fildll sbb lcall movsl and push rcrl pop sub push add inc scas loope sub aas aaa cmp movsb leave sbb add sub xchg jno movl mov xchg mov inc xchg xor (bad) or mov xchg stos jne das adc pusha sbb es push jmp dec mov or adc (bad) and mov add and mov cmp fcompl subb shrb adc test fldt adc or out jge xorb loopne sub mov adc adc inc jb pop and je repz add inc scas jae or xlat movsb movsl push pop inc setae imul lods cmpxchg je loopne pop mov xor icebp inc pushf mov mov add sbb adc pop mov in mov jne dec mov (bad) ss push inc sahf jecxz mov pop adc sahf int dec xchg ss aam sahf dec subb jne rclb cs mov or fsubrl setbe test fmull or inc cmp les ret cli mov lds inc es sub xchg push lods jo imul mov fld popf cmp insb inc daa inc ljmp xchg inc mov jno adc xchg adc rcrb fist or inc adc shll mov cmp push and leave push iret and mov std or pop push dec je bound adc in jno ret clc je cmp mov aam popa mov mov pusha jmp int mov mov jmp aaa (bad) inc pop enter lahf push add inc dec out inc inc rorb lock push rcll cmpsl push test inc push stos and adc (bad) (bad) pop loope hlt push add cmp dec loopne adc shlb pop jne xor incl jnp push into sbb xchg (bad) push add push adc decb xor add or scas add pop jp ja insb ljmp cwtl and je inc jo daa push mov xchg mov pop mov cmp or fisubr inc loop sub test (bad) imull mov push xchg pop mov and mov sbb and add lods sub adc aas lret cmc xor divl sar mov and imul inc cmp sbb (bad) cs mov movsb inc ja add outsb mov jo cs push mov push cmp sbb xor push jbe dec fidivr addb inc adc jae add cmp push outsb shrl jbe jge sbbb sbb inc sti push push inc jo mov adc jp sbb push ffreep inc imul push sub push push add push cmp and or add negb aaa popa xor cmp sub sti add imul add sub push cli jo sbb lds xchg push cli sub rcl inc push sub in xor mov sbb pop mov inc mov inc push mov add adc sti mov mov push push lret cmp js adc imul adc pusha mov adc sbb push and xorb jne cmpl push mov sbb data16 cld mov cmc xchg jp fbstp dec push mov sub or insb lea cmp xor cmpb and jnp push add clc dec adc fidiv lods sti pop adc cmp enter pop pop adc mov rcrb sbb rclb jo add jg cmp daa test decb mov or lods lea mov aam xchg fchs push mov adc mov fsubs inc sbb cld outsb jnp out add xchg fs inc xor add lock imul add pushf add and rclb and adc adc daa out or add mov or add sbb mov or sub or add add and add adc (bad) mov insb das sub or jl rolb gs stos das repz aas scas sti outsb dec xchg cmp incl xchg mov dec fwait pop es loop push lods lcall divl mov ret (bad) sbb push push and dec xlat pop cld in and cmp idivb mov push xor mov add ret add pop lcall adcl or dec dec inc dec push aas loope mov push aad nop adc test push or or sbb test sub lods sub enter mov push cs int3 fcoml pop lcall or adc adc sbb fist mov xor lret data16 and sti or hlt add test sbb pop mov push cli mov pop push test in add decl sub jecxz cmc out push jae pusha jo out cld stos push mov cld pop add or and cmp and hlt fistl sub fisttpll mov movsb pop inc cmpl jne xor push jae pop fsubrs cmp sahf cmp dec in cli stos xor add cmp mov lods mov cli inc cmp je lock or in adcb inc popa mov mov sbb aam adc push jo mov adc add mov (bad) sbb aaa andb xor xor mov push mov cs jb mov cs xor cmpxchg incl push cmp lock cmp adc cltd adc or icebp ja fs mov or pop sbb xchg (bad) mov xchg fcmovnb dec jge jno jp cltd nop dec dec jmp and int add pop push cli leave aam adc jg push or aad je stos and add cltd js push pop pusha sbb js mov stos xchg rol add out imul dec add dec push setl lds adc adc pop jmp and movsb mov adc sbb loopne mov mov mov ficom dec repz pop push lea xchg or dec sbb xor jg mov mov xchg lods sbb add shl test adc mov mov mov cmp push ja jl adc xlat sub daa add adc std not and pop mov add aam add xor and and adc mov xchg push mov outsb inc test addr16 daa lock insl arpl sbb sub dec push decl or fsubl das sub add fdivs cmpl pop mov addl jne rorb pop flds jne ret inc loope xor mov cmp push and or jmp sbb aas rol ficompl (bad) push adc lea push mov mov mov fistpll mov cmpl inc inc je out xor cmpb je xor jecxz cmpsl xchg push or add pop out mov and cmpsb xchg dec cmc pop lahf add adc aam shrb fild call sub ficom movsl xchg (bad) outsl mov test or push cmp sub push inc mov lods push dec push xchg push mov xchg in sub pop movsb cmpsl xor pop pop es mov outsb mov push mov or dec das cmp push sbb xchg push in inc cmp enter lahf cltd add sub (bad) jno lods dec push movsl (bad) mov fistpl pop cmpsb aaa lret adc add xchg fstpt fcmovbe enter mov add ss or inc lock test and lock pop mov mov pop sub add dec jne fs add sbb sbb mov xchg shlb mov jne pushw push dec popa jbe movsb xchg inc sub add xor imulb xor cmp inc daa gs push test imul mov pop ret outsb popl xor add adc inc adc sarl or inc arpl test imul push push loop add lock sar imul nop out cmp add sub push sbb and push xchg les icebp es push mov test xchg sbb dec enter fadds cmp insb sub dec adc outsl mov add dec mov mov (bad) jb (bad) xor xchg addr16 inc adc add xchg (bad) ja fdivl jecxz pop stos fwait add cs push (bad) push rcrb sbb imull arpl and push scas stos cmp rorb mov mov inc mov loopne sbb sbb add loopne pop add (bad) mov inc test ss fadds ret pop fldenv sbb xlat sahf nop decb test sub roll pop inc cmp sbb push push in loope mov add adcl mov mov pop rolb call out add inc add inc and loopne add mov std test and push scas xchg sbb add nop cs cmpsl sub mov cmp dec aad insb sbb adc or cmp pop push arpl scas jo sub push push mov mov sbb sub movsl inc add dec sub sbb pop les jo cmp inc (bad) enter lds mov and or je scas ret adc adc cmpb jae push jmp insb dec or fmuls cmpps jmp mov adc push xor movsl scas fwait inc cmp xor jo mov adc mov fdivrl mov in jno cli mov or in pop adc dec mulb pop or xchg outsb mov dec jmp pop into movb fldenv xor xchg adc jmp sub add cmpsl sbb dec sub lcall popa lods xor rorb pusha xchg xlat stc cmp cmp inc aaa add rorb or jge sbb mov or (bad) and test pop ret sbb dec push add leave neg lds dec ds push mov mov inc out inc outsb or sub stos and ss mov mov inc lods push add sarl dec mov sub sub sub add into or add (bad) cmc xorb xchg push aad aam push xchg jg xor jno pop gs out arpl or test stc in xchg ficompl popf mov xor lods and maskmovq idivl enter cmpsb sbb das fcompl pop insl loopne xchg insb and cmpb dec jmp pop fist push push pop ss or jl cltd test scas (bad) testb sub in add add and mov fucomip sub test pusha jmp push sub movsl push or dec rcrl dec or inc add or lcall pop mov inc je dec test adc les adc sbb add and add mov inc and and sbb cmpsb xor cmp inc xchg adc push movsl jecxz pcmpeqw add sub movsb mov rolb icebp mov mov fcoml cmpb inc adc adc inc add in adc mov sbb push and push sti mov test cmp loopne dec (bad) xor lock gs and pop inc inc dec out lods ror add or and and push (bad) or (bad) jmp sbb jl bnd xchg test or jbe xor addr16 jl jno scas pop sub loope push mov push mov out xor push adc or je pop or pop mov mov std push stc sbb add cmp mov cmpsb and cmp enter stos lods leave dec or jmp mov jo pop pushf add sub je pop test or mov dec and push insb or jge pop jae pop pop imul test sar xchg sbb sbb roll aaa pushf and enter addr16 sbb fidivl imul lods imul bound rcrb lcall ret sbb (bad) movsl jbe aam fs aaa inc inc cli shl ds jo jmp cmp sbb out xchg movsl push push loope pop add ja dec add insb pusha add add ljmp das cmp inc popf inc and enter xor mov cmpb lret ss sbb and insl loop lods pop jmp subl and inc gs cmp mov add icebp inc inc pusha pop push jb adc mov push jb pop aaa lock jge push pusha rep in or test or pop and adc lahf loope pop push (bad) orl push lret (bad) icebp push loopne dec add jnp cltd mov pop ret adc out jo cmp movsb cmp js add or loope mov insb rorl test mov pop ds call pop adc add inc stos mov ficomp mov subl jle mov imul add inc inc out lcall jno repnz xlat stc shr cmpsb mov adc jl stos popf rclb cmpsl dec add shlb insl js scas aam and sub ret jbe cmpsb dec aam push sti cmp int xchg lods jmp dec lret (bad) cmp icebp sti inc jmp sbb jne and dec add fs dec mov fisttp addr16 inc cs sbb arpl sbb shlb lcall jecxz add and or xchg adc or ret ret scas adc mov fcomi fcoml por cmp sub cwtl adc xor xchg movsb loope pop inc aaa ror mov ret adc xchg pop jl add push and bound push mov iret push and cmpsl cwtl push lahf and and inc add dec jg roll int or (bad) and and inc bound inc dec push jns mov pop aaa nop jge mov sbb or and xchg psubsb jg fbld pop or push in outsb push ds cli jge sbb fs pop out and pop int callw (bad) xor adc lods push push inc mov or scas shrb insb jle add cmpsl push xchg loope (bad) (bad) lahf sub ds loopne pop aam cmpb adc adc sbb shrl daa repnz imul xchg xor or dec or jne pop jae cmpsl enter push sar adc sub jnp or inc rcr mov push lret (bad) pop jl mov mov inc mov lock or sbb xchg xor cmp mov adc jb lcall into ss dec mov jecxz lods push or lock adc and adc fistpll loopne xchg sbb outsl pop pop pop lcall pop add mov cltd pop dec test mov inc movsl cmc dec test mov stos add push (bad) sub cmp subb or (bad) ja movsb nop das jne xchg push loop (bad) sbb mov and nop das xor add or jo pop adc adc rol jo pop mov insl adc mov fsubrp loop xor lcall je push (bad) mov push rcll test jnp insl dec ljmp cltd and lock mov jno andl pop lock rclb cwtl lcall cmp cmp scas inc (bad) dec sub mov sbbl push adc cs mov icebp aam cwtl xor faddl push push push out mov pop inc or mov sbb pop push xchg test cli adc sbb sahf xor pop fsubl push (bad) xor jp mov or and add inc sub sbb and pop cli mov add fildll ljmp dec loopne inc mov lea fmuls loopne mov pushf insb je testl orps cmpl pop or call ljmp dec stos call jmp and test push jne (bad) xor mov bswap dec imul es leave mov jl nop in mov dec call call sbb xlat je lcall or and xchg cmpsb push ret pop dec mov add or adc cmc xor shll and rcl or imul pusha dec adc xchg test enter mov adc push fdivs jmp inc add pop add push sbb out mov push dec xor subl inc ficoml and add push pop repnz ret push lcall pusha mov xlat repnz stos jno ljmp mov pop fs xor adcl rcrl int3 inc ret dec fisttpll sub adc or adc sti clc adc bound sub scas test jge je add mov pop fnstcw inc imul adc popa into ds add and add movsl push shrb inc add pop or pop and leave cli xchg push jnp cmp adcb adc sbb outsb push les orb sbb sbb scas test loop fs sbb push cld je addr16 cld dec push xor push cld cld cld sub or movb pop test add mov mov lea std call xor mov xchg int3 and jno add pop dec jmp or push mov seta push push cmpsl pop push das or lahf push jnp fs fcmovb and aam mov xor adc movsl jne and jmp jle pop adc push add mov and sub mov mov mov and sbb pop jge inc pusha les xor and push push or sahf pop jl push je inc push cmp es sbb push orb cmp mull mov mov loopne das dec mov nop mov addl mov sbbb mov push (bad) dec xor jl sub or and cmpsl andl ret jle test fsubrs pushf or jle (bad) pop jnp or push (bad) mov ret (bad) pop dec dec andb dec dec and xchg (bad) ficomp pop rol pop (bad) jne push push mov pop xor push (bad) dec dec ss push push sbb pop mov or add xchg lcall fs xchg sbb pop iret fmuls lcall xor mov insl outsl sbb dec ret pop lds and repz sbb push lret pop sub xor cmp add mov (bad) aas sti fwait rolb inc pusha mov test test jl or jle es mov lock mov (bad) cmc xchg js push xchg xchg mov pushl out daa sub (bad) pop cmp scas xchg push imul jmp rolb push adc xor or fisub dec inc loop sub push insb add mov push sbb jo pusha or ja cmpsl mov dec cltd outsb rcrl xorl sub cmp cmp jp roll push scas pop lock cmpsl out push aam lahf shlb jbe sbb sarl push mov cmp sbb sbb mov mov dec or (bad) nop push push mov or sbb in cmpsb fdivrl movsl cwtl scas loopne ret pop into dec cmp lea enter adc gs fwait cmp mov aaa out cmp push out jno (bad) inc add shrl pop mov push sarb pop negb mov inc sbb sub addb cmp adc ffree xchg push lea lds sub pop lods gs adc pop jl dec and (bad) inc jae test outsb insb sbb cmc lcall xor icebp adc aas data16 vmread int3 jne cmpl (bad) std mov pop mov pop cs push push cld xchg and leave insb sbb dec pop pop xchg aad outsb or add add cmc push es adc inc or orb xor jae cmpsb mov sbb inc divb imul dec pop sub shrb dec js call jbe popf and mov aam lds nop jp and das mov inc push xchg incl sbb in fcmovne insb imul push lods xchg mov cs pop nop lea sub add pop push mov cmp pop aaa sbb cmp (bad) ja add imul sub test adc es nop imul inc jbe inc mov and lods cmp mov out jbe mov lods sbb nop divb andl xchg add mov (bad) or fdivrp callw xchg xchg mov or push testb inc add sahf cmc outsb inc popa and dec sbb jns testb and jmp mov cmp das pushf and xchg sbb or adc xor cmp es movsb xor xor sub mov data16 xchg xchg pop dec jae das and (bad) je cmpsb aad add jl dec push daa ret push push es sbb sbb clc cmpsb inc test hlt push pop mov pop movsl add mov and push and cmp pusha in or fidivr sbb jns pusha fbstp pop sbb pushf cmpl jo and into push mov arpl push add sub sub add push (bad) mulb mov cmp je sbb add lds lock loop push sbb xchg out dec push mov (bad) or sub inc and dec lock jmp sub inc sub pop mov jmp sbb lds lock imul (bad) repz hlt rcll mov lods xchg sub pop push imul and mov stos pusha adc adc in ds pop lahf test les sbb nop inc mov or inc mov jnp add push cmpsl dec mov rolb je pusha mov out sbb mov mov (bad) push xlat cmp (bad) aaa test inc adc subl fmuls pusha and xor pop insl fild lahf mov rorl mov adc mov adc cltd sbb mov or xchg enter xor (bad) pop aaa lock jbe sbb pusha loopne jb xchg addr16 fisubrl stc cmp xchg xchg inc add add fs inc add cmc popf jle pusha xlat and xlat push fcoms shl (bad) cli sbb cmp addb xor in in jae sbb mull xchg mov out xchg cmp in mov or mov pusha and push mov mov or jmp mov test or addl add adc inc cltd mov ljmp xchg push xor (bad) xor shrb sbb add imul (bad) xlat movsl out adc mov adc sub dec cmp cmp sub cmp int3 jmp lods push mov or fnstsw jmp ret lret add push clc and mov into test xor xchg jns dec push jmp mov (bad) push aas movsl (bad) (bad) cli loop popf pop (bad) adc push jbe inc cltd rcr push inc movb sbb mov mov repnz in push nop inc cmp xchg leave je pop push pusha cmp fbld mov dec enter inc sub push and int3 sbb clc push sahf mov test push movsl adc pop leave or jecxz and dec pusha fisubl pop cmp hlt xchg imul mov daa xor jo pop in sbb rcrl sbbl push imul roll test pop insl mov fidiv pop jmp xor jle pop xor and and test xchg arpl (bad) sub inc pop sbb js mov jae jb ja je or sahf addr16 or add mov add adc add cmp cwtl push dec inc pop mov push rolb adc popf inc mov dec (bad) mov mov daa or int3 test call stc mov daa cmp dec jo,pn jl in add mov sti cwtl lea and stc mov movsb pop loope (bad) lock xchg adc pop enter jge adc fisttp ljmp inc cld dec inc dec dec dec inc lcall cmp xor add fiaddl push pop cltd cld stc mov or or pop pop sbb lods leave inc sbb jo fmull push xchg out add add xchg inc scas pop jmp mov push lahf (bad) lock lods pop movb mov mov in xor lahf mov or js clc pop jb sbb fldt jge nop je les lock mov lock xor repnz lahf daa nop (bad) fsubrs xor push int3 je inc inc xchg outsb add sub adc xor xor push cmp cmp xchg add add mov sub dec test and cmp mov lret loopne pop sub nop enter into or add xorb mov xchg shrb sbb xchg cwtl push movsb add xchg adc push or add xchg inc scas aam mov rolb xchg push aad fistpl (bad) ljmp sbb cltd add jae sbb sbb insb shrb je js je mov pop adcl test mov adc cpuid lock cmp das js cltd adc dec push fiaddl or lret sub adc or std pop dec mov aad xchg cmpl sub xchg push aaa (bad) push xchg mov and mov push sub rolb push mov lods pusha je cs orb pop fs and pop xor jno mov add outsl add das mov aad add lahf cmp or mov xor insl mov or push mov ret add mov mov jo cld or sub or loopne push mov jne test sub mov fsubrs test in and xor adc xor pop sub add push jl sbb dec movaps dec fadds or jno imulb adc test pusha mov mov xchg loopne push push xor mov adc ret cmp adc dec lahf inc and lock adc fcmovb rcrb rorb or in or add push push test ljmp clc mov add mov fwait xor dec sbb mov andl and jmp test xor cmp popa add sbb ljmp mov popa aaa sbb jg adc ret mov movsb pop and sbb mov pop outsb cmpsb aas xchg jle daa push (bad) dec mov bnd sbb rclb inc idivb cwtl (bad) shrb aaa stos sub mov add jmp cmp jae mov ja bound (bad) or and js add inc insb stos out add mov push add dec xchg inc mov icebp add push and mov das pop adc je sub mov icebp lcall push popa pop pop push and pop xor inc cmpsl sbb mov (bad) cmpsb das xor or xchg and and pop jg movl cmp cld js cmp rcrb ret mov sbb adc add sti adc into push test repnz lods xchg mov adc in add (bad) mov test inc bound mov jbe push add sub push ljmp mov repnz ficom push popf inc xor add pop rorb add pop mov xor lock push push inc push fidivr add lea ficomp or mov dec jns inc mov push out mov or cmpl fs sti xor sarl insl mov (bad) mov clc imul jge rcll push mov insl push jg mov mov dec or push in loope rolb sbb mov sti inc pop es movsb jnp dec add sub addb cs mov add xchg xchg arpl xorl push and mov jbe pop push cmp roll sahf or scas lods leave adc dec or dec inc aaa dec mov (bad) stos fcmovnb cmp pop pop add sti sub pop ja cmpsl xchg and add movsb nop test jne int (bad) cmpsb mov inc lahf push das lods jno (bad) or out mov mov je fildll (bad) ja in mov pusha inc jl jl xor jmp out and test jo adc sbbb add rcll adc mov gs jbe insb je lods mov xchg xor and jb pusha movsl add hlt sarl aas rorl arpl fisubl mov mov fwait out mov add inc mov lods xchg dec adc das or idivb inc push inc push dec sbb pop dec sbb mov xchg fcoml leave pop mov or inc mov dec clc pop nop mov test cltd sub pop icebp call cltd add pop insl xor adcb adc sti inc mov mov cmp mov inc pop jnp push or or adcl in pop jns test push std adc jge xor adc test pop and adc cmp test hlt (bad) or push imul pop add jmp and mov loopne cld (bad) mov jae jne sub mov adcb inc push sti movsl adc imul and xchg lahf cld and mov (bad) pop mov or jns mov orl inc pop sbb test pop ret mov push into or repz dec arpl in jecxz push cmpsl add add pop pop fldcw push adc movsb or jne pop test cmp pop pop push pop jbe fisubr test ret add mov sahf add add es js aas int3 mov add sub jl ds mov iret shrb outsb adc aad movsl lret add ljmp jns je test push mov jne aaa or or mov add aaa ja xchg fdivrs out (bad) jae movb and movsl mov aas mov mov push pop or pop and mov outsb pop xchg addl push jnp xchg sbb mov xor mov push leave mov push cmp jle xor mov dec lea mov into hlt movsb xchg mov inc nop ja lret shrl xor adc dec stos cmp arpl adc popf or (bad) jne cmp mov dec scas push mov mov in inc sbb adc xchg lret sbb das dec (bad) mov aam hlt enter ret mov and push mov call inc xchg ret shrl movl xor pushf (bad) aas ds mov mov out inc cld mov test and jge push cwtl adc or dec in mov cmp add mov mov imul fwait int3 jne jecxz jecxz sub jmp xchg push inc and push pop pop cmp and addb test lods inc cmpsb stos test sub mov cmp enter test and push mov xchg and pop xor je outsl lods or je xor popa hlt mov or in add call jmp pusha movl fstps and xchg js (bad) xor or xor mov jb sub sar add push inc popf cmpsb push sti rcr adc sti add add fs or popf dec jae fs hlt add pop sbb nop adc inc bound push cmp clc loope loopne mov and mov lods nop or dec dec out hlt in and add dec xchg or pop jg adc inc dec fisubr loop adc je xchg pop aam (bad) jno out in adc lods sbb adc orl sub sbb xor push arpl and test pushf jl test xchg xor mov cmp pop cmp cmp clc add push push xchg dec out pusha add or jp rcll jl ss push call adc push (bad) repz sub xchg test fmull sub es mov xchg add into dec mov jle lret shrl or popfw add inc push adc push add xchg gs inc insb mov and test inc push rorb cmp mov mov stos pusha imul pop (bad) dec enter das sbbl push hlt push nop outsb xor inc jnp cmp cmp dec push jns cmpsl mov mov or andb scas push inc adc add lret out cmp mov dec fisttpl jge cmp scas (bad) mov out dec push add push xchg lods sbb loop iret nop adcl ret icebp xor lcall adc sub (bad) lret and call or imul jmp push les movhps out sbbl inc pusha movsl lret cmp ret sbb lock les cltd mov push dec or fsubs mov inc adc mov dec je icebp fbld or push cmp jne fstpt test inc dec pop xor in pop inc dec adc js and and idiv cmp lock and mov fwait or movsl mov ret shll popa enter nop (bad) aam add xchg in push rclb mov mov inc add sti aas add dec fsubrs lcall loope je add xor js and and lret shll add pop xor adc inc or dec pusha stos ljmp push jp icebp std in dec (bad) and mov pop inc push push sub sahf jbe pop cmp aad sbbl inc add movsb cmp leave push cmpsl mov push dec inc mov jmp mov movsb pop hlt aas call imul rcl pop inc xor sbb imul hlt push jl ja lock sub stos (bad) xlat dec insb nop pop pop and push sub or test push xor push push inc js inc xchg pop or stos or sbb push inc sub out flds les iret aas mov mov mov jge pop mov lahf mov cmpsl daa rorl and push xor loopne fcoml sahf mov (bad) sub dec mov repnz loopne push adc pop xchg in xor inc adc test mov ret bound fcomps adc xor mov add and loope cmp inc roll outsl add test dec adc test push sbbb push (bad) mov adc dec and push lods mov mov push add sub in jmp inc loope xchg dec mov xor inc mov and lock nop lock mov fildl cmp out mov rclb xor sub mov in inc mov jle push cmp scas xlat (bad) outsl dec lret cmc xor mov daa lahf mov roll (bad) mov dec cmp mov je shrb mov mov or xor dec push lret sahf xchg and sub push dec movl mov and push add into xor pushf les test insl push inc inc pop mov and (bad) xchg xor add and out pop sar mov lret add clc jge,pn mov sub adc sub sarl addb push pop aam shrb add insb stos insl lcall loopne sbb pop stos inc aam (bad) add pop adcb scas pop xchg out in je rcr faddp cmpsl sub ja pop mov jbe fildll je testl leave adc sub lods jo loop pop xchg mov mov or rcr mov jmp and pop adc add fmuls lock sub dec (bad) lret sub sbb or inc and jnp sub inc add movsb jle,pt push and test movsb add aaa and imulb int3 and dec inc dec into or popa test mov les in and add stc or out hlt dec les mov into add and xchg push adc add (bad) inc or or mov push ja loopne xor mov andb or pop mov xchg sub daa and movsb lock sub aas jmp jo,pn jb or add (bad) fwait insl xchg fs scas dec push xchg test sub push sahf adc int xchg lods mov adc xchg mov fsubl mov xor or inc inc stos mov (bad) sub and cmpsl bound sbb and adc jecxz jge mov push adc (bad) cmpsb mov xchg xor repz push pop pop mov jmp mov xchg push pop dec sbb pop dec je sti rcrb adc loopne repz rol cwtl add rcr sbb cmpsb dec (bad) fdivs cmp inc test pop pop xor test adc loopne,pt fdiv inc pop and shrb scas mov insb adc jl dec or insb jo sbb test in (bad) lret shrb nop popa sub pushf rcrb loopne add push stos lods cmp sub aam bound dec pop cmp aad jge (bad) shr (bad) xor scas movsl cmp fiaddl aam lcall dec add jge push xchg adc xor push pop xchg push adc aas das inc outsl lahf xor rorb push dec rolb dec cld outsb inc cmp je test aaa lds mov sbb sub jmp movsb fwait sbb adc in mov xor imul mov cmp cmp popa test loopne jb int3 enter inc sbbb add rcrb insb and dec sub sbb daa mov add inc je bound pop adc push dec aas cmp lods popa movb popa adc test mov lret popf or add push iret aas jg jne icebp sbb sub add push sarb and data16 les out cmp and xchg xchg add mov les mov add (bad) popl ficom cwtl mov std fs sub or cmp pop sbb bound pushf nop pop leave inc push test or cwtl fs mov push dec add shll repnz push aaa add mov (bad) jmp mov sub jp sti mov scas mov lcall inc dec pop faddl pop fistpl test fisubl push nop cli fidivr push sbb xchg es js fwait push pop and dec lcall push pop mov or pop inc adc les pop push or fnstcw or add or inc decl xchg pop jmp pop or or push insb repnz mov mov push dec sahf imulb xor sbb adc outsb mov xchg adc arpl repz movsb jb fsubl bound add iret sbb adc insl ret nop or push adc ficoml or sbb jb jnp sub xor sbb push rolb xor test (bad) push sbb in pop add dec and mov xor adc sub jmp xchg jp xchg xchg cmpsl test lods popa lock sub mov mov rorb je sub pop lock sub pop add insl pop in test add jp loop pop and pop cwtl cmp xor xor mov (bad) mov das sub arpl push pop test dec sub ror pusha inc scas subb call pop sub lcall sub xor enter pop cmp mov push cwtl pusha dec xor dec adc cmp cmp and cltd aas xor dec mov pop cli cmp xor lods outsl shll xchg fs ss sub popa mov pop mov mov aaa pop js test push push inc movsb add pusha enter jo arpl inc dec cs sub add xchg cmp lret dec lret pop push cmp icebp test aas mov inc inc nop stos sub lret js hlt inc xchg pop and push pusha out inc or inc dec push inc push inc dec and add mov rorb fwait (bad) sbb inc cmp loope cwtl lahf push sbbl lds sub shrl mov lret adc push cltd add xor sub add mov mov mov rclb or add ret das inc mov sahf inc xlat sbb mov mov int3 push mov add xor sbb adc aam cli aad icebp push add push push push imul and lret lea adc add (bad) cmp in mov dec cli add sub iret add arpl adc and push lock jns push pop and push jp xor xor sbb daa pop enter pop icebp nop add jecxz movsb mov mov aam loopne or es xor dec add das mov fwait inc push xor dec inc xchg pop dec ds pop ret les add mov cmp loope shrb add or mov and xor add int3 fdivrl mov jae les fdivrl inc movsl fstpl jne pusha int3 pop fs or dec cmp (bad) daa movsl push negl cwtl inc push jno mov or faddl adc and adc sub add aam cltd lock ds sbb mov iret nop inc add mov jmp pop mov packuswb push pop push repz cmpb sbb (bad) or jo ljmp push hlt dec jecxz or sub sub cmp jge add sub (bad) mov mov jge jbe jbe andl ss pop sub dec push xchg nop mov jge data16 add mov and or jmp sub mov fs inc and sub mov aas (bad) repnz cmp (bad) add loope mov push sub push or fsubl dec fcom stos add (bad) jno push inc and loope out out jmp mov fstps mov push ds push or adc push add pop or popa xlat adc adc mov xor sub add push les inc int3 les lret shr pop and sbb jb dec dec getsec adc enter pop bswap aam jno xchg loopne dec lock (bad) jmp cmp jne sbbb hlt jmp out mov pop push or pop push iret adc mov pop add (bad) testl push push xchg push daa mov mov (bad) insl sub xorl ja mov xor rorb add or dec aam push sbb mov mov popa mov mov push insl outsl imul push pop dec (bad) xchg or add mov xor inc mov dec rcl stos xlat xor rcll fcoms jmp pop dec rcl pop es mov inc clc cmovno movsb movsb jmp jo cmp mov sub inc or xorps pop jo adc mov inc xchg clc imul pusha mov and xor xor mov fisubr lods mov jge push push test addl or lock or add aam js cmp mov xor lret add mov subl xor pop mov push and dec sub sub sub mov imul xchg mov push dec push adc cmp imul enter dec push jmp stos pop and cmpb add andl adc leave aaa out lods jne pop push out mov jg lock xlat js lock lret sbb outsl mov lods clc std push faddl and enter pop adc cmc jg pop (bad) dec mov wrmsr shlb les add fistpl clc inc mov fbld test popa lods insl inc (bad) out mov scas ret xchg ds mov aaa popa push sbb ret rcll loope push mov insb fildl rcrl adc cmp call iret mov or push (bad) shrl sti test pop dec loope mov or cmp mov mull xchg test jg stos jno adc rcrb sbb nop sbb sbb adc js imul leave (bad) push cmp or xchg inc inc clc add sub add sbb pusha add inc xor inc insl or and testb insl jno add add sbb and lahf or or fimul lret fidiv or add insl push add adc loopne in sbb add mov imul xor dec xor xor and pusha inc mov and add loopne jecxz xchg xor (bad) mov int3 dec aam ret insb sub jg cmovne adc xor pop cmp mov in mov ja jg xor lcall add and add mov es nop jns jno and mov pop adc adc xor (bad) jae mov in mov jnp ret mov xorb sbb fsubrs sbb adc rorl bound sub fs lea inc push jne,pt in xchg or enter sbb fildl fwait ss cmp jo outsb (bad) (bad) out lahf rcrb add (bad) clc push cmp mov xchg ljmp in out push add mov je pushf mov js sti popf push nop cwtl pushf mov aam dec sub sub cli mov push aam movl repz mov push sbbl cmp mov push xchg and xchg pop mov add mov daa aas inc cld mov mov (bad) mov push mov push pop jmp sub mov ds adc outsb jmp pusha out push dec jle mov sub or jl mov loopne xchg insl lea dec call or xor cwtl sub cmp lock push inc lock inc leave inc push jae arpl out (bad) loope push mov push xor inc aaa (bad) xor (bad) fcomp sahf dec fidivl (bad) xchg test test cld mov mov cmp (bad) lret icebp outsb or push into push mov rorb sub cmp jg shlb stc inc jne addr16 jl mov mov xchg (bad) mov jg adc mov pop fiadd push mov (bad) aas push loopne (bad) jl push and pusha add fistp push jmp xor add inc or aaa inc out out add sti jg out fwait sti aaa inc push test adc repz cmp lcall fidivrl dec push xor dec in push lcall xorb pop fstp lret pop int3 outsl subl (bad) mov jp ljmp push jecxz (bad) iret int3 je fisubr (bad) ljmp aas inc movsl mov mov pop mov sbb std mov mov mov pop call jle cmp data16 mov ss cmp inc fsubrp push xor xorl mov dec (bad) dec scas cs push pushf loope (bad) pop gs loope inc dec lock das pop loopne aad (bad) rclb loop fcomp std lds les je cwtl in adc pusha in out out (bad) pushf push push mov outsl push cli push enter (bad) stc lret sbb nop mov and in jmp imul jle jl int dec inc cmp clc cmpsl ljmp mov cwtl xor sub and (bad) repz ss call stos scas test push sub inc and in push xchg loop jl pop mov jbe (bad) (bad) or testb sbb lods aaa jle jg and push mov push dec in add mov movsb xlat addr16 mov or aam dec pop or aaa rcll cmc adc cld inc mov mov jb fstpt jl push mov xchg (bad) dec push sub inc push mov pop push push cmp pop scas fimull in add lds cmp push rcll cmpsb inc (bad) out mov push aam ret (bad) es xchg adc sub divb fistp in shll test inc mov add adc (bad) xor mov jp push mov adc adc cmpsb and dec pop stos pop js jnp dec push imul icebp (bad) or or or or push (bad) mov xchg in sti lods push orl in fcoms push add dec mov inc push push push in test mov fcomps inc jle or aaa jp in pop mov push inc mov stos loop and xor cmpsb imul inc aaa hlt cmpsb popl (bad) cmpsb aaa insb push sar out out (bad) pop jmp repnz mov repnz mov dec stc push scas ret lcall mov loopne shrb push and push faddp mov aad jo mov inc out sti sti cmp roll shrl push inc mov aas jge xchg jns add xchg in jnp push pushf test xchg lods popf inc aas js insb push in mov iret aam rorb shr dec outsl aaa cmp lock mov pop (bad) or xor cmp aam cmp mov sbb push mov add add inc out adc push popf std je insb in lds pop (bad) (bad) mov (bad) push adc push ja (bad) or cmpsl gs loop (bad) fistp sub pop dec roll pushf xor sub icebp test dec mov adc pusha sbb cld shr outsb pop push (bad) inc xor ret or int3 mov add ss je out jle cmp testb cwtl or push scas inc lds mov and ss adc xorb in pop fidiv cwtl lods xchg pop fcmovne mov inc pop xchg imull mov or bound sbb pop mov xor mov in xor call into loope (bad) xor adc sahf leave aam jl add (bad) adc push fidivr mov fwait std aam and pop rcl in adc jg call mov (bad) xchg push jecxz xchg in inc inc ljmp in jo jmp xchg or loope mov ja dec jmp cmp stos ret mov aad fwait xor test test popf mov in out inc xchg jmp dec dec popa pop orl pop sub add (bad) rolb pop pop out mov dec insb fisub mov addr16 add js movsl call out jecxz repnz jo in (bad) sbb scas mov dec scas cld mov fcoml in fcmovnbe lcall ret mov enter dec lock xchg ss les enter daa cmp fbstp loope int3 nop mov es push push pushf sbb pop inc ja lea inc add push dec adc jl inc clc jmp adc push rclb cmp stos sbb dec jl push gs scas repz clc data16 adc lock outsb or (bad) fimul out fcom fisttpl rorl add int3 js cmc lds aam je push xchg add push cmp in push sbb jp sub ss mov push sbbl sahf repnz push cwtl xor xor mov js out or les inc fstpl adc and in mov in jne lds lcall insl test shrl pop aas outsb jo xor sub decb cld test out aas inc mov (bad) cwtl push (bad) jne (bad) in jae mov mov jns push cmp fcmove js xor cmpsl stc and xlat js js fistp in pusha add popa sub int3 ret pop aas jns jnp,pt jmp stc (bad) shr pop cmpsl stos push mov test (bad) aaa (bad) js mov out mov lds cmp inc jmp push inc mov jbe pop push data16 cmpsl cli cmp cltd and (bad) int3 xchg orb jb mov fdivs lcall mov pop push call dec rcl (bad) cmpsb mov out out scas dec ja cmp add les fstps add icebp push iret daa cwtl mov fcmovu aaa xchg dec or (bad) or rorl aaa (bad) jmp rcr xchg xlat in add ss mov cmp fwait mov inc push std or into fdivrs xor insb stos push xlat fcomip test nop insb aam mov outsl negl mov push test xorl push das loopne test mov popf (bad) sub aam jne outsl rol cmpb rep call hlt push jg mov push sbb push jmp or aam repz call scas add gs xchg outsb mov cmp out push pop xchg ss aas flds sbb xlat or (bad) jne insb mov adc mov cmpsl jno adc je ds fidivrl push push mov push test out sbb push dec dec push push arpl add or jne mov mov pop shll cmp jp mov aaa jmp adc jle (bad) in jae dec js push mov loope mov mov lods push shll lods cmpsb inc mov push mov imul mov xchg push sti mov mov jbe in push lea xchg call imul xchg lods cmp jmp fldenv leave andl jmp inc jg pop cmp enter or in shr push push jle xlat mov jecxz or jp push imul mov xor ret sub dec clc and (bad) xlat inc sbb rcrb pop and into insb ljmp stos pop mov mov ret mov mov fs lcall push push repz stc push inc lock aad push je (bad) into pop xchg pop mov cmc je dec cmp stos add inc push shll cld or ja (bad) rorb out xor (bad) mov enter mov push gs mov fdivrl sbb idivl pop and fisubrl dec mov imul mov mov xchg mov ljmp mov sbb sbb hlt cmp xchg dec mov mov cmp pop dec or xor rcl add in and insl sub pop and aam je,pt cmp std rol clc push xor lods xor xor aaa decl clc rorl loopne dec mov sbb iret (bad) (bad) mov lods xchg mov push mov mov cmp and inc cmp inc cld push dec inc jmp fisubl mov cvtpi2ps in cmpsb dec push dec dec adc and inc mov push in and nop dec lahf enter xchg add cmp cli jmp mov and aas pop xchg sub aaa fs outsb inc cmp rcll (bad) cs loope push pop inc pusha cwtl xchg negl shll dec push mov call movb clc jle mov fisttpl pop jbe aas inc outsb xor adc fs sbb in add (bad) fisttp mov cmp mov fbstp mov (bad) lret add xchg mov add jg mov fiaddl push loope insb dec push pop xchg outsl inc addr16 and and and lods push mov push shrb dec mov push mov ljmp fcoms aam mov aam mov repz cmp push fwait sub sub push movsl mov cmp sbb xchg push add lock jnp xor sub mov frstor movsb call push bswap test lahf xchg mov (bad) mov js outsb cmc sbb mov aaa jb ret test mov scas and cmp insb outsb mov add jmp jl gs cwtl (bad) push insl mov pop in jbe lcall sarb pop incb push sbb fsubr (bad) loopne (bad) fcoms ss and jae cmp pop xorl fisub mov cmp or dec roll pop xor push push pop popf inc mov rcll cmp mov out in mov roll movsb push xor rcrl inc leave ljmp jecxz push call popa pop cmp inc inc lret lret mov jmp push out leave mov stos or leave fsubrp das shll int3 dec lret ret test push sti fwait sub shlb lcall sahf call pop push hlt xchg push lahf sbbl mov scas xlat adc inc xchg push bound xchg stc or dec dec enter or mov push push stc add push into nop enter scas and in jmp and arpl ja add jmp sub pop (bad) mov out (bad) mov push mov insl jae mov mov inc test stos test aas bound mov (bad) ficompl mov or lock jg aaa cld movsb xor ret arpl insl js push int3 test jo mov sub lret dec je xor psrad mov arpl cs dec insb jne sti add mov jae icebp out mov push sub fdivl rcll loopne mov cli sahf and pop popa pop cmc (bad) pushl jb arpl aas jp (bad) xor test push mov adc loope mov stc inc hlt mov loop mov or push or arpl loop ror push sub (bad) cli je (bad) lods push lock sbbl fwait push imull or cmp outsb or lahf push pushf arpl xor inc fs mov and (bad) lcall pusha dec jbe pop sbbl xlat call mov fbld repnz in pop jge std or push fwait stos test inc push sub (bad) adc add dec clc adc mov fidivl sti cli and and cmc xchg push pop adc aad mov data16 push mov rolb xchg mov test dec xchg fidiv push cmp (bad) mov add jne cmp cmp adc out fadd push mov js stos cmp mov inc lret lahf test aas fsub fidivrl push pop icebp out in cmpsb (bad) fsubr scas call cs aam push sbb subb andnps aad push jl xchg push std sub xchg xor push (bad) sbb mov pop (bad) imul sub push test loop mov add pop cmp inc xor (bad) jmp mov cmp pop shrd push pusha cmp inc lods mov push cs loop scas push fimull ret and dec push xor icebp adc push mov push fs in pop nop push push jmp test mov out sbb (bad) mov popa pop mov popa mov loope in lahf fsubrs push mov aas mov pop adc push test insb cmp pop shrl push jmp cmp int or push mov xor push mov lcall cmp test aas jl testb scas fwait (bad) fucomp cld jmp shr mov gs pop jo and pop cs cli xchg mov loope pop mov loope dec cmp inc out ss cld or (bad) lock or add fdivrs dec leave jmp bound jp call divl (bad) test sub cmp mov ds mov jg inc jecxz (bad) test pop mov or aam xor jmp pop lock cs lret orb push movsb cltd dec lar push jmp mov movsl sbb push inc aaa dec (bad) addr16 and mov aas mov out add pop mov mov test out pop repz aam rolb pop cli ret and int test ljmp clc mov sbb push or loop xlat std test push push cmpsb pop (bad) (bad) (bad) fadds cmpsl mov or adc inc push cmp in les aaa (bad) loopne add ret pop test and cmc (bad) out lret pop cmp (bad) std in jp test scas (bad) mov call mov sbb lock and test mov cmp pop cld hlt lcall cmp adc jge cmp xor pop (bad) mov in out ret lcall test mov or jle or push push pushf ljmp sbb cmp aam push xchg orb movsl cmc pop sbb push push lds jbe dec cltd test shrb in rorl push inc mov add and mov or in (bad) cld adc mov xchg xor push add mov lods sbb push mov fist cli jmp cld stos jl pop dec sti enter jge inc xchg jo mov loopne push xchg inc dec pop ds jp mov aad mov dec push inc pop cs (bad) loope xor push (bad) cmp dec inc or mov mov pop pop gs rorb mov or imul xor mov jp lret mov sub ljmp out addl out jmp aaa arpl (bad) into mov fist loopne roll nop imul pop rcll bound xchg pushf sbb rcll pop cmc add movsb jl test and xlat lock aas inc mov aaa hlt mov and je stc push xor es push mov jo push push (bad) mov add or sarw icebp inc add scas sbb jb mov jl push std push pop push fwait sbb fisttp into mov jg fwait jecxz outsl mov and cmp xchg cmp mov push and aam jle stc jne dec sbb sbb push rorb lahf push cmc aaa outsl and fisttp negb xor mov das push dec bound pop cld je and add mov adc outsb dec popf push push scas (bad) sbb ja jns pop das xor mov jge lods xlat jno mov mov shl dec test js jl repnz outsb push adc fisubrl pop push mov xchg dec imul add mov icebp ss into mov mov mov mov mov adc mov rorb (bad) lret ds inc bound mov cs push stc js mov xchg into cmpsl insl cli cmp cmpsl or jmp sbb push jg stos shl push mov push jg xchg ret out mov movsl dec jge jnp mov add add lock jg lods insb push in loop cmc (bad) aas cmp lods mov push out dec cltd sarb pop movsb jle xor or jl mov xchg je xor cwtl hlt jmp and daa cmp xlat mov pop push test xchg (bad) pusha lds jns xchg add stos cmp sub jmp xchg ret inc or (bad) lret or or das sbb loopne ljmp sub loope loopne pop inc lret (bad) out and cld test roll xchg nop sub or lahf add cmp js lret andl dec ret fsts cmc adcl mov out shl add or jne mov add xchg outsb push push fnstenv xchg hlt push out sahf jbe or add jl sti imul aad pop mov in jnp inc add and push pop mov in mov jb sar pop sub rcll lods adc jno cmp loopne andb inc mov add inc lods push or push push and push loopne imul xchg inc mov stos mov lcall xor mov imul pop ja xor push decl push add and jp mov inc sub jnp pop push stos jno cmpsl cmp jp or push jno in or insb cld mov sub int rcll xchg and push cmpsl shrl adcb pusha and aam cmp adc repnz inc xchg cmp push lock or cmpsb movsb mov and hlt jae aad adc movb inc push fs pop add push sub aaa cmp jo inc or data16 dec cwtl mov dec push scas dec cmp mov mov inc and and mov shr (bad) adc clc inc adcl daa loope fs lahf inc push mov mov inc xchg (bad) push xchg push push xor cs aam jo cmc jmp push imul popa imul nop or jno insb adcl inc xchg push xor inc daa dec sub (bad) fdivs mov sti (bad) xacquire xor mov sub xchg jle jo mov inc mov adc inc test fisubrl jno scas add mov js insb insb xor pusha inc sbb jp call cwtl ljmp fistpll lea push lret arpl pusha data16 lods jbe add data16 add adc das int3 mov scas cwtl mov aas stc inc xchg in xor add movsb loop mov dec inc push mov adc jge cmp aaa push shll push call popa aad inc jne cmp and testb es mov shl insb ljmp shrb ljmp sub arpl aam mov loopne repz jecxz xchg loop pushf xor sahf faddl scas bound xlat push pop add lods push and in daa lds mov push (bad) sub mov mov ja loopne lods xor push scas push in xchg loope in pop inc scas adc mov xor mov movsb shlb push push pop push or add aam lea push int scas inc sbb aaa or inc out outsl sbb imul loopne inc mov icebp stc test into push cmp shrb mov inc mov adc dec (bad) aam dec cltd subl rolb sbb ss mov mov (bad) movsl cmp add lret into push inc mov in mov stos int out test mov (bad) mov outsb add int xchg jecxz cwtl insl adc lods mov shll outsb pop sub push sub out ret cmp sub xor dec pop pop push jmp and sub jg stos fs mov fnstsw test pop dec dec or adc (bad) mov loopne pop jmp loop mov add push lcall fdivr (bad) roll mov (bad) xchg (bad) cmp es sub notb cmp ljmp inc inc pop mov loop in je lods (bad) aam cmpsb push cwtl sbb or push cmp push fisubr sbb mov jb pop sbb repnz cli in in movsb popf cmp cwtl jmp pushf jmp sub mov lret and ljmp push push fiadd (bad) addl adc mov jns dec pop pop sbb pop push shr add jp push test fcomi push shrb or pusha bound mov mov daa pop push cs jne scas inc ss fidivrl (bad) loopne fidivl add daa loopne ret in push push out mov sbb mov sub roll sbb icebp ds insb lcall repz (bad) xchg push push adc rcrl mov cmpsl enter fsubrs (bad) push xchg mov (bad) xor aaa inc pop bound aas inc mov js cmp cmpsl or repz or push and push or das xor mov fs xchg xchg or push ja push iret stc dec mov push ret push (bad) cltd (bad) shll dec push adc test insl outsl stos clc pop inc int3 pusha dec sbbl jl into les loopne jle int cwtl push imul in (bad) sub adc jl sbb pop rorb loopne ficomp pop fimul in mov clc and push jae dec cld int3 mov push mov add pop dec pop adc and test cwtl cmpl aas stc jb lret add jo mov mov sbb mov repz sahf rcl jl dec mov rcll mov dec or popl enter push cmp pop inc push fldl pop fs shrb popa call jno iret mov add (bad) sub (bad) push xchg pop mov es xchg mov add ffreep cli push loope icebp mov dec cmp scas mov lret xchg fisubl aad fiaddl loop xor imul jg mov loope sub mov adc jo sub xor test sub xor clc mov popa mov cmp lcall into xor xor inc sti fiaddl dec add test add mov stos sahf cli mov aaa xor and sahf sarl push mov loop sbb (bad) lea inc jmp loop pop (bad) xorl push aas nop (bad) repnz xchg cmp hlt sub and cltd xor daa int3 ja add jb jo sbb pop int stc cmp (bad) aas iret cmp aaa popa rcl or inc xchg push aas push pop insb fsubrl les or jg push iret xor bound sub pop mov (bad) mov imul cli xorl das xor or out adc popa inc inc pop mov orl and andb cld inc sbb add test aam mov clc push cmp scas inc adc push adc popf insb mov mov mov (bad) mov pop movsb movsl mov mov (bad) (bad) ss aam xor movsb in xor cwtl hlt jb in pop stos and jno mov push ds jl cmp addr16 xor push in push rorb adc mov loopne and xchg dec cmpb push out push test pop shl sbb xor xchg (bad) popf jmp clc mov cmpsl jno stc lods inc loopne ret mov insb paddq xorl sub jae push cmc push cmpsb mov mov adc daa xchg jo mov pop adc or or push inc sub stos push (bad) sbb divl push mov insl addb mov sbb xlat dec adc lock dec push dec sbb and mov aad mov mov js rcrl movsl fs mov iret xor xchg inc mov push dec test pop jns (bad) dec xchg pop mov pop outsb aas pop test inc xchg imul ljmp pop scas mov mov inc mov (bad) and je jg scas or xchg add inc (bad) fildl add aam cmp outsb loopne test ret cs ret clc dec in shlb mov out call pusha push outsb pushf lcall lods inc ficomp xlat pop add cmp push pusha inc jb jl inc ljmp push xchg icebp scas mov (bad) les arpl push fstl fiadd sbb pop lret mov push js xchg ljmpw cmp xor jno lds push mov cmp push shlb (bad) fmuls fsubrl cmp cli mov movsb jecxz and pop leave je icebp icebp adc mov or ljmp jnp push push inc jnp mov pop lods movsl pop nop xor test pop sub ret xor push cmpsb lods (bad) (bad) arpl rcll mov leave iret fxch push iret inc pop jne leave sahf inc xchg scas dec in xchg add cmpl lods popa adc jmp outsb sbb xor and and sub pop mov xorb imul lret fs icebp shll (bad) aad fstl dec inc bound add aaa jae cmpsb dec mov movsl mov leave or jmp push pop lcall mov lea mov aaa jle mov push or cmc scas pop lahf std add gs gs dec aas (bad) xor pop js fnsetpm(287 (bad) mov js mov out mov adc mov fisubl aaa repz lods adc mov cmp jl pop fnstsw push push adcb pop inc aad adc mov add jge mov icebp xor jp push adc push dec je add shr jecxz dec mov hlt or mov pop pusha jp mov sbb insb es js cmp fwait (bad) cld add (bad) bound jmp mov dec fs push jmp fimul movsb push scas shr enter in rcrl jae test out jle push fstpl enter cmp xchg in pop xor rol or jecxz push test (bad) popa aaa jmp int cmp push movsb xlat push jmp pop lods (bad) fnsave lret jp mov or xlat add or in aam push mov popf jb ljmp jl lock lods aaa imul adc dec call mov pusha adc insl jg hlt stos aad cmp rcl shll call sbb push pusha call cmp or test jge pop add lock lcall out cmp movsl leave mov mov loopne xchg mov adc enter adc in arpl add jns loopne subl push add loop inc out imul (bad) in add adc imul imul add add xor jns jle jp popf mov repz enter sub out sti sbb and push mull mov jle aas inc mov cltd icebp test cmp inc scas jb mov mov and add mov loopne,pt cmp icebp icebp jecxz (bad) jg push (bad) out cmp xor cmpsl inc cmc loopne dec iret push or mov loop out aaa cld inc mov sbbl lods fmuls (bad) addr16 add enter dec inc loope xchg push mov adc out cwtl mov repnz decl hlt xlat inc outsb sbb push inc stos xor test roll or movsl insb sbb and call leave jnp mov xchg pop sbb push xor or in adc mov cwtl imul adc mov adc sbb adcl fs xchg inc pusha (bad) push imul xor pop push ret jae mov dec adc cld lcall push adcb and adc jbe push cmp hlt inc orl dec pusha in push mov test stos pop inc rcll dec xor or mov leave lods cli cmp insl test (bad) jae push inc push and inc add push dec lret push dec pop ljmp out and sbb icebp pusha test int rcl dec fiaddl loopne je repnz xlat push loop inc mov or ficom popa nop or sub je shr mov mov jge mov push or sti mov test scas rorl (bad) nop sub cmp sti popa icebp ret movsb and andb or ss jl jne pusha cmc mov movsb jle xlat push jbe bound aas out add hlt xchg push arpl xchg imul call ret cmp mov dec out pop add mov xor cmc test add mov adc fmul orb inc imul cld (bad) jb pop dec cld out mov mov lds pop clc addb push js xchg insl mov adc movsb mov mov je lock cmc jle int sarl jmp test aas subb push jns push xor add or loope aaa push inc push adc dec aad icebp cmp jnp call movsl cmp (bad) jbe add test jl push sbb pop jge cmovo inc roll sub fcoml pushf popf or das pop dec dec lea jnp and jae jecxz xor out pop jle js cli adc (bad) cmpsb out sub mov repnz inc add hlt aas push in xchg xor cmp dec fistp xchg push adc hlt pop dec cpuid rorl or icebp jecxz and jp (bad) test mov sbb fbstp rcll es lea push mov movsb xchg insb test or or lock cmp push inc mov cmp sbb push xchg sbb add fmulp cli or imul jmp nop push pop pop sub aaa test push jl and ja pop dec gs mov xchg ret sub out loopne popf or bound cmp dec scas cmp aam push push cli xlat mov (bad) ljmp call dec faddp pop inc sarb fisubr (bad) or mov ljmp mov (bad) pop push jge pushf (bad) mov rcl xchg or subl cs or add fsubrp add adc call mov dec mov (bad) sub dec pop fist or pop jl cld fs je xchg or jl outsl xor xchg xchg repnz outsl jle pop pop and jne cwtl mov divb mov adc dec pop adc lods ret add iret mov mov mov push push and and jmp data16 or test mov sbb jb bound push add jp add ret repnz out (bad) xchg adc mov cmp add enter rorl pop ja mov fisubl mov insb mov xor adc imul inc clc push popf mov xchg jl int3 cmpb pusha sbb xchg js push ja dec sbb dec out pop fmuls incl in jp push push mov cmp pusha scas incl aaa mul push repz push cli sbb jp ss imul and stos push mov (bad) mov xchg arpl push xor xor cmp add jmp icebp cmp in mov enter jne clc push mov push jbe xchg imul inc xchg sbb cmp adc push fstl ret ljmp rcl loop rclb lret fs or fcoml inc sbb add inc add fcoms mov sub xor imul cmp push push jp mov sbb dec je push movsl fldl int3 inc lods lock mov rorb rorb or adc jecxz je sub inc pop mov pop dec add popa jne inc movsl dec sbb push push call in jmp (bad) int3 (bad) hlt dec jle xchg ficomp xchg push stos or lock sahf out subb push cld movb mov rclb pop push push add sbb test repnz imull dec sbb or jbe fiadd shr test sbb jg jns mov ss pop js movsb test mov movsl adc bndldx out inc add jo jns sub mov inc add add or xchg push scas ds mov iret xor dec jp data16 sbb and sbb adc and dec push cmp (bad) fdivs mov push push test inc mov outsb jl or mov inc xor dec xorb fmuls jo in or ret xchg fs subb adc test adc xchg sub add pusha (bad) adc mov sub test xchg xchg lock mov jo or movsl push mov fmul xor cmp mov fstl jle sub hlt dec aas lock sub push lods pop jbe in xor push push mov loopne ficompl dec sbb pop (bad) sub in adc in push mov mov fildll sub add shr sbb pushf (bad) jno lea inc or cwtl sbb loop mov lahf dec inc dec fsubrp or cmpsb fwait pop xor cwtl hlt mov or push popa mov adc sbb jns add sub mov xchg aam fdivs clc leave lods push fild inc loope jns jge (bad) leave scas add out xor and and mov sbb pop pop call mov ja push mov or rcrb adc mov movsb pop or ficompl jmp push gs sbb outsb ss cmp mov add ljmp pop add cmp sbb pop out jg jge std insb fldpi cmp and cwtl cmpl gs pop out add xor xchg adc push fwait sahf jno mov loop shrl jno inc xchg cli in jbe clc mov (bad) xlat idivl inc xor or mov movsb hlt lock xor mov (bad) loope,pt jnp in add xchg add lods dec outsl int or dec jle in cld xorb cmp sbb sub inc xchg imul lods (bad) and jp push sub orb pop jns sbb outsb insb dec (bad) xor add mov sub dec jl scas int3 into scas xor adc jo (bad) insb into lret cmp pushf push fs and fs rclb hlt push fs test scas outsb add push add pop sub cmp mov push mov pop and sbb push push inc mov in in fisubr leave mov add dec inc dec or gs inc sub mov dec push mov jb cld jne popf or lock iret pusha mov xchg inc (bad) fbstp inc sbb mov inc jae cmp mov and add stos jo cmc xchg adc push scas push jo mov out jno lods andl or xchg dec loope jl outsl xchg enter clc mov push mov imul rclb repnz loop loopne sub jbe inc out add inc or or mov dec test pop push add pusha push mov jnp mov xor jmp push pop adc cwtl in push std test in mov inc (bad) pusha sbb ss imul xchg push stc or rolb gs push pop sbb jl push pop xchg sbb jae or cld xchg mov xor dec push or ss xor fs sub das daa xchg lds push sarb icebp inc (bad) std (bad) sahf jle arpl mov jb (bad) sahf aaa shlb pop xor pop stos sub add add ffreep test lods sbb pop imul sbb xor rolb mov inc in mov dec repnz insb push or xchg cmp push sub cmpl mov add dec pop lahf push (bad) or ret or aas bound (bad) mov (bad) ret or xor aam inc push jb pop mov inc iret inc push jno leave jbe mov push in push in js inc rorb mov sub stos adc daa popf clc xor jb insb or in mov and pop and dec push (bad) or add movsb adc aas inc push xlat mov push sub lea pushf push push sbb (bad) je aas call inc push push mov and xchg jmp je add push call out mov sbb add jae and xchg pusha arpl push dec out adc rorb call or outsl sbb in fwait dec ret pusha or adc xor pop jp cmp inc xlat adc in cld das mov push add push out adc mov popf or push jb (bad) fist inc mov in jp sub cmp push adc xor or push test push jp (bad) aam sbb inc xor push inc std mov dec adc or or push inc xor pop mov jns jecxz movsl sarb dec sub mov or sbb sbb outsb xchg jp out mov loope xor addr16 jnp add and rclb cmc fs xchg in and pop jne insb cltd push popf icebp jmp leave push (bad) ficoml cmp hlt adc cwtl xchg xor mov in pop cmp mov adcl (bad) or insb pushf testb outsb lods xor xchg adc ret pushf test orb inc adc sbb xor mov imul nop add sahf cmpsb or scas outsl gs push mov cli sub mov cmp mov jecxz add shl or test bound push loop add ljmp loopne jbe lret mov push mov cmp or and or xor pushf lahf cltd int movsl add dec jo inc pop pop mov adc sahf jge lock fiaddl std ds lahf (bad) cli jge adc test cmc outsl dec in sub aaa les int3 test xor dec adc loop add push dec push pop pop pop cli pusha push adc mov sahf pop xchg enter push fwait jecxz xchg push or ret lods scas inc imul mov cld mov hlt popa inc (bad) jecxz push les pop cmp push jle pop mov fninit or (bad) fisubrl xor dec jp inc lods adc ret ret fmull xor (bad) (bad) and cmpsb rcrl and and icebp mov test stos pop movsl (bad) enter aam mov int push add add (bad) rcll push popf (bad) inc push xor jmp cli outsb jecxz pusha jne pop sbb (bad) or inc lds mov add (bad) pop cmp das bound push ds sahf lea mov push pop pop dec add inc lods (bad) mov fdivrl xchg mov push lahf mov push xor push in rolb adc aas arpl shr es add (bad) or adcl scas sti nop and aas pop mov test mov pop dec xchg dec push rep add jo bound mov push imul inc cltd sbb push faddl lret popf mov stos or fildl repnz pop into dec hlt push inc scas mov push xlat mov nop mov and (bad) pop inc add mov jp loopne sbb imul jno (bad) je adc addr16 in clc clc dec jecxz sub fwait cli call jae mov cmp dec pop add lret dec push sub add mov lods adc cmpsl push je hlt pop fwait out cmp rolb dec mov repnz mov add push movsl and jbe aam add out jge push jl xchg aaa fbld pushaw push sbb sub in cmp sbb test inc mov cmp xchg push pusha inc xchg mov add loop dec add test mov popf jbe les inc loope adc shrd jecxz icebp jns push adc sub sub fiaddl mov push jb lcall inc std sbb ljmp or addr16 jg mov xchg loope addb inc cmp fsubrl jo lods cmc inc sar push mov es dec ljmp inc add mov call mov daa and ja call popf sub lock xadd dec and rolb fisubl faddl or in sbb je cmp inc mov sub xor adc (bad) (bad) push rclb pop jae nop dec mov xor add lcall ljmp push loope jne ja roll outsb push push or adc sub mov arpl jmp insb jecxz xchg push imul mov adc lock push clc jnp and add mov mov mov aaa in cli call jbe inc mov mov mov jmp ds push ss jne dec std fdivs data16 mov and hlt sub das or js les shrb adc xchg sub mov addl xchg out pop rol or adc aas pop ja and ret inc ja mov or call xchg adc jo loope xchg lcall add idivl outsl jo jbe jbe dec (bad) (bad) incl dec outsb gs dec push dec imul arpl js push xor xor xor popa ret fidivrl xor lods xchg subl inc adc (bad) adc insl out fld jge push outsl jp jae xor or sbb push add and sbb push lods pop pop xor jle mov adc push in dec sbb mov iret ds pop insl push sub nop rcll ror xlat ds fxch movsb add sub push out cmp enter sarl sbb dec cmp lcall enter cmp out rcrl pop test push pop xor inc mov neg fwait inc into push or fdivr fstps push push arpl insl out fild adc in fsubrl je cmp ds fimull push mov pop sub inc xchg dec push pop out cmp push inc pop or cmpsl stc cmp lods jp and mov iret sti (bad) xchg xor push cld out insl cs mov push inc push fs mov repz push mov enter xchg lock sub clc push test push add xorb push push or push nop sub fsave ljmp or sahf out jg pusha jl mov pop (bad) into push mov inc push push sbb pop outsb mov in fdivl cmp pop mov cmp inc sub mov popa fdivrl sub das dec xor rolb sub jbe leave stos add pusha rolb add xor mov ds pop jnp dec call clc and lret int3 enter enter fcomp fxch (bad) (bad) loopne jecxz in pop xchg mov fcmovne xchg movsb mov and aaa jns pop and popa je xor xor loope jns or xor pusha or push adc test fcomps outsl imul xchg (bad) popf adcb aaa stos pop test mov push loope add xchg jmp sbb scas push add and iret sarl push or sbb repz repz cmp dec iret repz push pop fs je cmp repz mov rep mov (bad) int3 iret repz aam in hlt cld repz mov adc and in roll add add xor gs into xor nop call pushf jno dec jb xchg xchg and jae je mov xchg fldenv bts add add pop xor add rcrl and xchg jl cmpb inc or adc cmpsb or lcall ss lock adc sahf out and dec pop push jl pushf lods mov int3 fsubr cld or and sahf cmp call into repz cwtl sub push push inc xor mov jb push (bad) pop fsubrs movl push and push cltd cwtl or popaw fnsave mov sbb push adc out adc and add pop xor aas push push out cmpb aas adc imul mov push cwtl jg lods aas add push sarb push loopne fdiv lock lock mov mov dec sahf push or push add repz repz mov mov adc adc adc imul push sbb jae and sbb push adc cmp repz mov movsb iret repz or sahf cmpsl stc cmp adc pop and jns out cmp dec sbb out je fistp mov and repz push les fadds in or cmp repz lahf orb cwtl add dec enter out ds clc (bad) adc xchg sahf out sahf mov pop mov jns mov sahf out int3 aam in sbb inc scas out ja mov mov add add jbe (bad) cmp loopne negl xor push punpckldq cmp loop pop mov pop (bad) jbe sbb sbbb push fnstcw aad or add add in add iret repz sahf push js xchg movsb mov iret repz shl hlt out lcall or and out sahf sub cmp adc fadd xchg adcb and pop orb lods add jmp pushl divl xchg das out jmp xchg add xchg add jb adc or out prefetch jb push or adc jb sbb add mov shrb adc daa daa add sahf ja pop inc fs jl je sahf mov test (bad) notl scas adc into fadds xor inc mov sarb fcoml and lods and dec sub jns xor jl movsb mov jns out aam clc or iret repz sbb xor push push je pushf movsb mov enter jbe loopne sub push ja dec xor mov pop mov insl xor push fucomip lods push in xchg inc shll leave insb test lods add add or nop pop jo sahf ja ret jb push std xchg jns out cld movsb cli mov out sahf out clc fdiv lock repz testb sbb sub iret repz cmp push icebp repz repz mov repz out mov daa iret repz aam call cmp xchg bound or add mov sbb xor cmp mov (bad) outsl and inc or or add add in out imul adc push stos inc adc nop add lcall or mov rcl ja daa or outsl lods pusha ljmp cwtl push inc mov test imul aad and add pop mov pop adc fcos mov add mov xchg xchg pop add outsl xchg stc mov out mov jns out (bad) incb add idivb test add add loop add lcall das mov test sahf push jl add icebp addr16 add jo mov mov es push adc movsb add cmc pop inc or lock outsb lods push test xchg xchg movsl scas test js test mov in data16 xchg movsl (bad) int3 ja lcall orl test fimul movsb ss aam fs out lods out pop push mov inc pop pushf imul ss push (bad) sarl push hlt faddl cwtl out js test sahf je (bad) pop dec sarb lods and repz lods pop or out cmp push fs enter pushf inc insb pop mov hlt adc stc fidivr mov cs mov push (bad) push mov out cld push hlt push push (bad) add cs bsr push ss mov cmp push je mov ficompl add into mov ret nop andb push es cld push or mov lock (bad) data16 jl push pop jnp xchg pop push push lock loop js xor mov push push mulb fidiv mov movsl lock cmp nop fcoml and mov jp mov ss jl pop cmpl jle push jo push push out cmp cmpsl push pop and ss push sbb push iret repz test fcoml mov jae xchg fmulp pop pushf out sbb adc (bad) xchg fmull xchg cmpsb neg jnp es in xor and mov mov xorl ss ds movsb imul pusha data16 (bad) push mov jns ret js outsb or clc push je iret jnp inc or lock lods and (bad) mov xchg pushf xlat push loopne in jo cmpsb sub es mov addr16 outsb mov push push adc inc fs data16 (bad) mov sbb dec out out push in sbb pop insb push pop out cmp in aas outsb les (bad) xor inc fidivr out mov adc pop and or or or mov add jae push pushf push push shl loopne mov mov or mov out pop add push dec jge jbe add pop dec add pop inc fidivr jns sbb inc and dec pop push and mov dec aaa push pop dec add sub and adc dec xchg ja dec pop push loop push inc mov jnp pop push mov push xchg dec xor or inc push fisub cs and inc push cs fidivr push and xor dec cmp scas fnstsw testb push rsqrtps mov or dec push dec push cmpsb ss mov add sub inc add xchg sti flds rclb dec addr16 and incb add lahf jge je pop sub rolb sbb sbb add sbb mov (bad) faddl cld jg clc dec sahf das pop aas push pop jmp rol dec pop jns add pop or push aas pusha sbb jg add xchg jl xor add test or pop jo inc dec add ror ds add psubb notb outsl add push out (bad) repz fwait neg out (bad) cmp and cmpsl mov add pop mov clc pop push (bad) aas pop popa fcmovnbe fisubr aas pop xchg addr16 xor sub std cmp push fnstsw add cmp hlt insb jl (bad) push data16 lds sbbb add jnp sub jo iret rolb push and (bad) mov lock push lcall adc cltd movsb fucom jl (bad) xor jg jnp inc push add (bad) cmp call mov iret mov jl add add and lods ffree gs add sarl dec pop outsb daa (bad) xor aaa pop std inc ss iret clc lock aas rcrb fcmovnu push push inc pop cwtl scas insl (bad) popl adc add mov in jmp sbb dec test in out mov ds jle lds add fwait add pop in les test jnp bound aas nopl ljmp push les mov addr16 cld mov push cmp fadd push inc mov aaa pop push data16 lock inc sbb inc cs mov (bad) and or push insb ss int or push sub inc add (bad) shll xor sbb push push sbb cmp sbb aas jne data16 (bad) push xor divb fwait insl (bad) adc fcompl jl sbb push sbb or insl fldt pop ss push shl cmp fstpt data16 jns leave mov push push add cmp add rolb and add or add sbb sbb cmp fnstenv cwtl mov daa sbb mov repz and daa and xchg mov lahf and daa and out push adc cmp clc dec push ficomp mov push jb jge push daa lret xor daa xchg in mov sbb sbb fidivr inc daa out cmp aaa mov (bad) ja push into jne jne clc push (bad) cmc sbb pop push or cmp cmpsl lahf adc add xor cmp inc and mov xor and cltd outsl or jnp mov movsl daa dec sub aas push es popf cmp xor mov dec sub fidivrl jns dec and fidiv inc and jbe,pn out push and and cmp out jno sbb push dec pop push insb nop cltd push (bad) cmp push fcmovnu mov cmpsl daa push ret divb and push mov or (bad) push (bad) (bad) cmp (bad) push nop inc push clc repz xchg addr16 mov add testl xchg inc inc inc or pop xor scas dec push pop es stc jnp daa (bad) daa inc aad repnz push push dec dec pop daa mov nop lret outsl dec out in cmpsb and repnz incb jbe add add clc daa add ret jecxz add mov jbe pop repz or ret fstpl push insb sbb fdivrs ds shll cmp cmp out clc shl jb sbbl (bad) xchg lahf cmp (bad) sbb fs cmp gs mov push fbld in fidiv jae push aas daa dec lret out mov dec inc inc es iret adc dec add adc daa xor in repz sub jecxz test (bad) push push pop (bad) sub in inc xchg out jns or xor push stos movsb sub cmp or repz daa xor insl in mov daa aas das es pop mov mov daa clc out insb stc push inc sub push daa xor flds sub loopne insb pop outsb data16 inc push xor cmp (bad) je push inc mov mov daa je stos inc aas call inc js fsubrs or test sub adc dec push pop xor dec fs mov xchg daa mov cltd stos xor ja mov push lahf jmp mov jne adc cmove cmp test cmp sbb xchg push xchg sbb dec sbb xor cmp (bad) daa addr16 fs jl and clc or in bound sbb xchg fcoms daa fldcw mov xor dec daa mov fdivl daa dec daa clc dec rcr jae je dec sarb dec jl and rorl (bad) out and daa (bad) xor xorl cltd cltd call cmp xchg cltd cltd and stos gs test repz bound movsb aaa mov orl les mov mov cmpsl out push cwtl (bad) in adc fistpl push ja inc dec mov inc sbb lahf stos pop dec push adc scas pushl inc pusha and cmp cmp pusha pop pop xor (bad) (bad) jmp cmp addb push enter pushf mov (bad) pop rcr daa aaa int3 shrl into aaa daa and rol cwtl and cwtl stos xchg sbb sub in sub insl mov in jbe lds push fmull loop and push test stc fnsave push div clc daa and mov xchg add and mov xchg and pushf aas lahf push pusha (bad) stos aas adc cmp add mov push push andb movups jmp cltd xor cld lret sub lret xor pop mov lock fsts dec add (bad) xor or (bad) fnsave repz pop lret or sub out decl inc push in push xchg dec pop pop or lock jnp cmp ja pop (bad) (bad) (bad) (bad) (bad) sbb pop lods sbb pop or push cli cltd je jns (bad) push loopne inc sub std (bad) (bad) incl inc cld or data16 pop add popf push aas cwtl push mov cmp and and test jmp mov into movsb and popf fbld inc inc jmp push jge inc (bad) cld repz ja pop sbb jmp js dec movsb and negl movsb push jmp int lods movsb pop add (bad) out out pop sarb sub sub jg jg mov xchg scas and test xchg and fsub fnsave push movsl push or hlt adc js out add jb adc cmc pop pop das sub daa push lods rcrb test adc mov sbb mov (bad) in sub imul cmp mov dec lock add push outsl adc aas push inc cmp sti mov ds xchg xor in cmpsl insl aas mov xor aam push dec or ds (bad) cmp ljmp sub xchg push rorb xor xor rcrl push mov or mov repz push mov jecxz sub and (bad) sbb pop mov (bad) cld jg inc jg cs xor and test int (bad) fisttp adc push jp mov test call lods cli add lcall shrl cmp or decl push and push hlt pop mov or jns add pop or xchg daa rcrb stc push xchg int pop aad sub push sbb mov adc outsl inc adc mov push (bad) add leave cmp jb mov jnp outsl (bad) xrelease lea jecxz push sub mov aas lock sub sarl xchg lcall sub jmp cld stos decb jg jl and fdivp iret sub push xor mov inc idivb std dec fdivs push sbb pop sbb add xor mov fsubs adc pop rclb (bad) mov sbbl in outsl mov test and out fucomip sbb and rcl adc dec push (bad) pop jl out sbb mov dec push cs sub inc (bad) (bad) std je loopne and push (bad) inc test lods push js cwtl (bad) jmp (bad) pushl jle or cld inc popa fs pop (bad) push sub xchg sti rorl inc mov (bad) mov mov (bad) insl aad (bad) lret xlat sbb sar scas cmp pop adc sub ja xchg arpl mov adc inc shrl (bad) out pop loopne test add sbb stc sub push pop jb adc sub mov inc push sarb inc dec or adc sub rcll scas jae push sti ret mov jnp ljmp bound xchg pop xor pop jg inc jns inc push out out (bad) ljmp lret sbb (bad) repnz lret and or out mov test pop mov mov pop adc dec fistl pop stc mov xlat jp repz into jp push (bad) lcall (bad) ss (bad) mov inc xchg xchg es cs mov (bad) ljmp sub jb cmp adc xor ret jb mov mov pop and (bad) (bad) mov dec les mov pop (bad) sbb dec or pop rcrb loopne add les rolb and idivl mov dec mov ja es mov (bad) (bad) jmp jge scas (bad) jge sub nop xchg sub xchg inc ja rorb jo adc add movsl push imul not hlt jne das mov popa int movsb xchg lahf cmp push popl push scas (bad) mov int dec or lock sub cs lcall popf aas jle mov cmp sbb and mov pop fistl mov daa mov dec ffreep lahf sub fwait cld mov lret mov xchg imull mov mov mov dec or movsb (bad) push rclb data16 lods insl jnp fsubr scas stc mov ja jmp (bad) mov cmpsl mov insl jne push test aad cmp adc pop inc and xor rcrb mov pop ja mov inc ljmp int3 mov (bad) dec or loope add in rcl fldl ljmp shrb shl sbb addl js nop sbb cmp cld roll mov pop xchg mov inc xor pushf mov jnp out pop rcrl cld stos pushf clc in cmp xorl mov in mov outsl push sbb (bad) cmp addl push add jnp jg es movhlps xor call pusha (bad) jge sahf mov (bad) jb pop fmul test lock mov (bad) out cmp movsb inc xchg test (bad) or bnd xchg xor mov in mov aas sti out cli or inc adc cld pop int cltd mov std movsb out and sub lds scas add repnz xchg je (bad) lock mov push or mov mov mov mov xor ja (bad) mov (bad) pushl sbb sarl push in fstps mov mov mov clc jg cmp pop or int sub test jg push (bad) mov shrb (bad) pop fwait (bad) jg test jmp xchg sbb push in lock iret adcl add or mov lods and inc lock xchg fwait int3 mov (bad) adc (bad) mov nop jnp jg cld pop cld jp (bad) idivl xor pop mov aaa pop or out adc pop es ss outsb or ret jnp mov push int je add jg mov xchg adc cmp stos rorb into (bad) inc inc clc (bad) mov subb cli data16 (bad) std adc psubb dec ja mov sbb jecxz clc jmp (bad) jbe repnz lret repnz insl pop push lock stos (bad) mov data16 (bad) sbb ja rcll push cs movsl jnp (bad) sub testb mov adc inc fild addb jg lret cmpsl mov pop and xor mov stos pop incl cs icebp dec cltd fcoml adc cmp jg fxch (bad) (bad) push mov stos (bad) (bad) sar aam pop (bad) stc mov shlb lods int outsl out int pop add movsl sub push jnp ja (bad) lods aad jbe or and fld push gs push cld int imul dec nop lcall aad clc or leave cmp xchg push mov (bad) stos jp xchg lret xchg pop pushf mov (bad) std inc mov push xchg jo outsl ja mov pop xchg stos scas xor lret cmp jle xchg decl fnop clc cli and cmp cld lcall or ret ja ss outsl mov mov adc sub cli pusha rcr lcall xchg shll fcmovnb mov xchg inc jg cld mov sbb pop jg test pop (bad) incl inc les xchg and adc pop and or dec lods and mov adc push in loop movsb sub ja adc lcall shrb push xchg in popa pop cmpsb jecxz std cld leave test sub and mov jg,pt xchg xchg lock mov pop adc add addr16 movsl movsb pop xchg jnp fstp ljmp test stos js daa mov ljmp in insl sub stos sbb es or sbb pop add orl movsb sbb sti scas ret stos out mov ja ret clc rorb mov pop cs (bad) fisubrl sub mov clc adc ljmp loope or push mov lahf jmp push push test or loope sub sub sbb std ficomp imul stos adcl and scas (bad) sti incl and mov out ja push test jb dec ljmp fsubs ds cmp push sub adc lock int leave sbb mov mov test (bad) (bad) ljmp cltd push mov add mov inc neg ffree subl cmp enter push sub jecxz fildll lret jns inc loop sbb daa dec scas daa (bad) fist push push push lock sbb mov mov push or mov stos das jecxz pop add gs mov pop repz lcall cld pushl inc mov sub and pop jg and push inc xor sub int or xchg mov push cli inc sub lods sar jle (bad) shrl sbb scas dec mov sub xchg in stos bound clc push mov push lret sahf mov fcmovne aam rorb mov push or jg ljmp sub lret xchg mov (bad) mov lcall cmp xor pop bound ljmp adc decb aas cltd adc lods (bad) xor push mov jge inc xchg ljmp lret xchg (bad) repz and decl xor sbb dec sbb ja sbb outsl cmp and fwait addl add push and sti jmp outsl mov or (bad) repnz std mov mov inc test mov stos xchg fs pop pop nop push das (bad) rcll cli cltd jnp mov adc sub sbb cltd or push jmp and ffreep fstps idivb pushf (bad) mov mov inc shrb adc mov and das sbb andl sbb adc out xchg lock push sbb push lds pop fucomi mov (bad) jne mov or dec jbe lret (bad) into pop scas lcall es cmpsl mov (bad) aam fmulp fsts roll out rorb push cmp mov xchg pop movsb mov out adc rorl push sbb idivb pop insl cli sub (bad) scas jmp cmp fdivrs jmp push (bad) sbb mov xor and sti arpl ja cmp jg adc or mov adc sub lret shl pop js fdiv (bad) push cmp cmpb imul xor push mov enter jbe out adc add pop or cmp sbb out out (bad) push test push and aas or (bad) (bad) out and pop xchg sbb shrb push pusha stos nop fcoml lock jge sarb mov (bad) shrb jp cmpsl bound pop call xchg shrb cmp fdivr incl dec lods and ss jg ret add ds pop repnz imul inc or sub (bad) (bad) lcall mov xchg mov shrl and xchg jp add loop ja ljmp jbe push js mov movsl insl jl ljmp loopne cli cmpsb jp icebp movsb testb sub xor lcall stos repnz adc cmp ret in adc mov outsb bound mov and jp fnop jmp (bad) jnp aam pusha ret incl in pop in lods test cmc aad push rcrb out mov push pop (bad) push xor jbe insl ja xchg jno cld int3 clc icebp push or lods popa scas push (bad) push jecxz mov inc push push pop clc (bad) jle fcoms and push mov in imul mov sbb lods cmpsl mov sub scas sarb sbb pop es push mov scas sbb rcll push mov pop cli fmul scas sti mov sub mov (bad) lcall cmp std cmpsb mov clc dec mov aam repnz mov mov stc (bad) faddl adc lret es repz and mov lea (bad) (bad) mov or xor call inc or and push sub jge outsl pop push mov into pop aad aaa push adc pop lahf mull imul movsb and scas das push pop movsb (bad) ljmp in and jge jb ficom rorl inc incb pop cmpsb outsl repz fisttpll or jbe pop call rep jnp lret xchg xchg xchg mov adc add std pop clc cltd and add lret inc add aad jg aas std inc mov sarl mov mov aaa sub mov mov mov js movl loope pop (bad) jmp or pop repz jecxz mov gs clc repnz shl incl ja xor dec insl push jbe ljmp push inc es je pop mov call insl aad (bad) mov (bad) mov cmp lret or loope scas mov int (bad) std lds inc adc sub sar pop ljmp sbb sub push ret aaa push pop xor jg mov mov inc (bad) gs loope cmp xor mov and es lods push inc pop iret arpl sahf add fnstsw (bad) fist adc mov jbe jns pop jecxz push (bad) jge pop clc jne psubb inc mov in sbbl clc es cwtl push and loop push bound cmp mov mov add pop (bad) jns (bad) iret out jp hlt push outsl clc sahf ljmp call call cmpsl or (bad) sahf sahf stos cmpsl push outsb mov jl or hlt xchg pop jg outsb or jb inc xchg scas adc mov sub xor or mov xchg pop and out inc cmp and je insl (bad) idiv sub push out mov push mov or mov and (bad) or cmp out fcomip mov pshufw jecxz ret js and loop jecxz xor call mov pop push loopne mov pop sbb fidivl ljmp xor push flds mov mov sbb lods push push sub mov (bad) mov jl lcall mov xlat jg daa repz leave inc add nop xor mov testb test (bad) push mov fxch xchg movsl cmpsl jp sub pop lods ret lock xor or mov ss adc dec inc mov ljmp sub movsl cltd aam nop pop std ja pushf (bad) dec cld pop ss xchg (bad) fdivp mov (bad) cli mov mov pop ffree mov push pop test clc cmc pop (bad) push mov cmpl pop ret lahf add sub fdivl push loop leave mov fistp (bad) scas out add adc mov push icebp mov les xchg inc cmpsl dec in mov adc clc mov jl cmpsl jle inc fs mov pop cli rcll out ret push pop mov test test xor cmp xchg add adc mov pop pop push aam lock fwait mov jl xchg adc cli jnp mov inc lahf jge inc or mov repnz mov mov rorb pop scas push (bad) aad (bad) aaa add std push out mov sub inc iret xor pushf lret (bad) test push repnz es fmuls cs push pop inc cmc std cltd xchg mov sub dec and loope test cmp cltd mov cmp sub outsb xchg test xchg dec mov fidiv outsl xchg (bad) fidivrl test int pop xor jo loop cmc ja mov loope sbb (bad) push call mov pop adc push lock push (bad) out ret jae sbb pop mov xchg int movd cmp push das inc xchg ja mov mov adc stc cmc adc push int3 in cld xchg inc cwtl or in loopne stos ret mov inc dec movsb mov leave adc call xchg sahf mov and nop clc xlat lret adc push stos xlat int3 mov jbe test inc pop call dec jge insb test icebp dec sbb and xchg fisttpl fs enter nop inc inc cld mov mov pop std (bad) decl hlt ret jge fadd outsb add push test push (bad) outsb rep int3 test pusha xlat cmp enter push ret fsubrl or jecxz mov cld jmp xchg jnp mov add imul mov cs clc xchg push sub push ja lret int ss out popf mov push faddp aas js lret cmp push xchg push loope outsb add adc or in mov jns xchg stos icebp jg ja adc int inc mov mov cli (bad) (bad) pushl mov repz fcoms (bad) loopne pop sub dec mov std or pinsrw call (bad) (bad) ljmp pop sub jae sbb jge and or sub jno aad add call add loope stos mov add aaa ljmp sarb xchg out in js mov jmp add pop cs and and add sbb pop loopne (bad) (bad) negb jb push adc clc rorb mov push (bad) sub cltd sbb pop ret pop sbb mov push cmpsl mov sarb in mov pop repz insb cli insb adc mov sbb mov idiv pop js fdivrs or pop push lea mov int3 push pop in or popf or add pop add sub jge sub xchg icebp pop push scas out sbb push push rcrb aas ret and jg lds shrb cmpl sbb jg xorb or sub push push inc sarl imul add fnstcw mov (bad) ljmp lock ja mov xchg push popf jb add jg and jb pop lods ja clc or in push xchg incl jg mov mov pop pop jl (bad) and out push scas adc mov sub pusha cmp lahf add mov addr16 adc cmpsl pop mov push in adc push xchg lock or xor ret loope ljmp nop loopne push cld and scas repnz sbb cli xor sbb rcrb pushf cmp jg sar lods mov inc ror mov mov inc mov imul clc out add xchg sub lock mov and cltd sbb mov add addl xchg xor test les aas (bad) jle fisub or adc pop pop (bad) (bad) jnp mov xchg fimull in mov loopne sbb add mov dec mov dec or mov xchg pop sbb fwait push sbb cmp jns sbb testl fisubr (bad) hlt fbld cld mov (bad) ss xor sar sbb and rcll push aam incl enter fwait cs cbtw lds decl push (bad) psrad mov jb sub push ljmp sub push pop cmp fistpll stos inc mov or cmpsb jg jmp int test rol inc (bad) jmp xor xor mov jmp add adc jmp imul jo std push add les or xor xchg adc mov xor in sub ds lods jg jmp lods sub adc xor xchg push push pushf or xchg (bad) mov outsl enter out mov mov jmp fistpl call xchg push inc les pop out and mov sahf pop int fstpt clc dec lds xlat xchg mov outsb stc mov decb sti pusha fnstsw sub (bad) jns jnp (bad) (bad) pushl fimul es mov push imul push sbb popa inc xchg sbb push test in (bad) incl les push inc fldenv jge in push mov push sbb cld pushl adc (bad) (bad) clc push sarb cmp stos mov or jo pop ficom test inc lea dec cld cltd jmp xor pop or (bad) out and loope pop mov pop cli pop imull and lcall push cld jg lods push daa xchg jp or push pop pop ret stc or jecxz fwait pushf aad add decl (bad) (bad) imul push fnstsw clc sub sbb movlps in test push jg in out ja icebp push fdiv pushl outsb (bad) aaa mov pusha or push xchg fdivrl push jg fdivp mov fldt sbb (bad) in sub std clc pop pop jmp (bad) pop enter notb clc mov push jp pusha cli aas js (bad) and pop test adc dec repz (bad) jnp imul pop js add call data16 (bad) (bad) jg movsl inc sub bound test lcall test jnp sbb push jge incl (bad) mov jecxz jmp push insl pop dec xor mov (bad) sbb push aaa (bad) (bad) ljmp mov inc hlt jae adc aam movsb or jmp cwtl loopne fildll jl pop push lret ficom (bad) ja cld inc add lcall arpl push idivb mov movsb negb imul dec add jge mov notl sarl inc pusha and xchg (bad) insb ja (bad) mov (bad) in rol int3 sub push add into mov lahf daa js mov jns jmp push test or outsl and test aad push push repz jmp mov aam imul rclb pop pop xor push lret pop les imul sbb pop fdivrp int notb pop (bad) jo cmp sahf lahf cli ds iret cmpl std popf pop ds (bad) (bad) jnp ja gs inc pusha mov fsubrl jmp out pop adc das hlt shlb xchg dec pushf dec mov lahf cli lret jl mov mov mov fildll add ret dec (bad) push test fmuls xchg mov repz push int and sti scas enter imull lret rclb lods cmpsl mov nop aad fwait xlat xchg jl cmp rorl sub rclb sti push ds movb or cmp jae push mov in negb mov imul out out repnz movsb dec mov unpckhps inc into repnz push (bad) out push mov repnz (bad) ds in popa push jo adc out test scas mov xor sbb aas mov jg mov mov fildl pop mov in xor (bad) cmp inc cmp stos insl push lcall pop scas push push rol sbb jne adc insb addr16 jns bsf adc jg mov test ret outsb or aas shr pop loopne mov push add ja ds loopne insl mov jno fwait lret rcrl and or push mov out ja jb sub clc xchg mov daa push daa inc cmp ds in gs pop push add (bad) adc insl aas sbbb test mov ds cmp mov fcoms int (bad) xchg pop inc insb xchg (bad) testb je push in nop mov mov fildll ja or popa in int3 mov js (bad) out test adc mov pusha lret outsl xchg (bad) lock adc es std loope aas mov fucomip es aaa lcall (bad) aas stos push (bad) mov xlat (bad) xor pop mov repnz push into nop mov xlat xchg clc scas daa outsl mov call pop cmp test pop je dec push cmc ficomp (bad) (bad) jl in add add imul out popa jl rcl pop jge sub ja shrl or mov fldl std and pop in bound icebp add mov jle scas pop jmp jl add cmc icebp insl pop and test (bad) call (bad) and xchg shll jmp adc pop add jae jno pop push testb sbb in pop (bad) jecxz loopne sub movl (bad) mov push or xor int adc or rolb (bad) jg (bad) pop test es sbb mov mov rolb push outsl adc (bad) (bad) (bad) jg scas pop shr lock movsl movsl pop pop cmp (bad) jmp mov jle (bad) (bad) aas icebp imul or adc dec stc inc mov fcomip movsb push hlt and sbb ret add mov decl pop decb (bad) (bad) gs mov or jnp cmpsl (bad) in movsb mov lret xchg int or inc enterw mov in lea je sar sar insl stos adc mov adc cmp inc sbb (bad) incl aas cmp jl fwait repnz jb mov out mov loop mov jmp push les mov push adc gs adc dec lods test mov pusha jg mov dec sarb push incl clc push addr16 jp es xchg xchg xchg xchg out mov inc cmpsb and mulb dec inc jbe push sar pop add notl std jp stos xchg loop and (bad) lcall sbb aam iret xor pop mov sub mov loopne std push inc pop mov jg jge call jmp mov jmp mov xchg hlt sub scas cli sti inc jo cli fwait imul in add das subl int3 mov xor movl std and mov scas aam mov stos and psllw pop sbb cltd xchg int3 xor iret lock pop clc (bad) incl xchg mov pop cli ret xchg dec pop pop stos lahf das pop cmc int outsl movsb xor clc push aaa xchg mov add or pop cltd dec mov jp sub je lret scas sti jl cltd fcmovnbe insl test fdivs push sbb pop pop test cmp (bad) jmp dec xor out es mov ja jnp int3 hlt mov roll mov add iret (bad) mov sti fnstsw (bad) les sub out push push mov and arpl fwait add mov faddp fnstenv add jo and mov sbb hlt scas mov add mov add outsb std cmovae inc push test (bad) cmpsb (bad) (bad) idivl rorb mov sub mov cmpsl cli iret pop out popa bound fldcw push jg (bad) pushl fsubs cmp stc sarl mov stos jmp fdivr jmp fcompl sbb out mov pop iret (bad) lcall jg cmpsl fsubs inc lcall adc out xor jg lcall sbb call push inc adc aam jecxz movsl lods inc (bad) aas jecxz sbb xchg dec orl shrb (bad) (bad) (bad) pushl nopl shrl push jns jae in test insb and (bad) fbld dec or adc inc mov ds ja inc fwait (bad) (bad) (bad) mov cmpsl and (bad) sbb jne push fstps in or push adc das stos lock inc ret fist rcll in mov sbb ljmp data16 xchg call out out xchg jae movsb mov call rcrb xchg xlat or xor lcall inc xor and sub (bad) incl mov lret cmp cltd or cmpsl pop push fldenv out xchg or (bad) (bad) mov cmpsl test fld xor lret push mov sub int3 sbb jg sbb inc mov fs jp popa push insl pop cmp jecxz fildl add gs cmp test in (bad) pop js xchg cmp fisub aaa cmp cli lahf add mov inc inc lods sbb icebp test stos testl push nop data16 (bad) mov test sub pop addr16 ja test xchg hlt adc cmc je (bad) jo outsl xchg in into in inc mov dec test test and mov movd (bad) jg mov fsubs push (bad) jecxz stos jns test sar pushl inc xor pop sahf jne das or push popf inc ljmp test test in fimul (bad) out push pop pop xor cmpb pop fldl int sub pop and lret sub cli icebp imul jl push adc mov imul cmp js mov cmp loope or jp sahf or xor inc (bad) leave jl push lahf mov or leave push imul arpl and jg fbld repnz aad (bad) mov pop mov pop add (bad) jmp xchg mov mov jl sub ljmp ret (bad) jg lcall jnp xchg int3 lods les (bad) inc (bad) mov cs pop je lcall or push cmp fistp add icebp push cmp push or dec fsts loopne popa aaa mov push out stc push inc clc dec les jne jo cmpsb adc sahf lcall inc int push pop das push or and loopne pop scas or neg clc test les repnz adc fdivrp (bad) jg mov pop dec stos int3 push and (bad) or or out pop inc sub adc cltd push loopne shll pop xchg jl push ret mov (bad) loopne (bad) mov adc push inc sbb cmpsb (bad) cmp int3 repz les (bad) iret pusha cld mulb (bad) (bad) cld push or (bad) mov add push push cld inc push stc mov jle adc pop mov loopne sbb in test stos enter sub pop fisubl mov mov ret cmpsl push mov pop mov divl push inc mov lea fcoms mov sbb cmp call or (bad) jg ja es sbb xor sbb mov in lock out pop or cwtl clc inc inc rcl pop or add pop movsl daa addr16 ret (bad) scas pop cli inc mulb (bad) cmp add and sbb (bad) mov mov (bad) jg lcall ret cmp jecxz sbb pop sarb clc sub loopne (bad) cmp mov adc outsb jnp push ljmp jge push adc jbe movsl mov out cmp mov arpl xlat bound imulb pop arpl xchg mov cmc inc hlt (bad) iret push mov mov insb (bad) (bad) jne shll inc mov in push hlt lock cmp mov scas push adc aaa out inc sbb inc pushf add icebp inc ljmp cmp aad ja ficomp jmp lods adcl pusha jae sarb xchg mov jns pop pop adc outsl clc fbstp add test lock push xlat push incl pop in pop mov xchg stc cmp (bad) (bad) xor xchg pop out leave popa orl hlt xor je dec push test jg mov jg test push iret stc sbb add pusha mov decl (bad) hlt mov in in push inc pop jecxz pop (bad) pop sbb outsl pushl jmp lods mov test add addl cli fcomip sti fwait adc (bad) sbb push es add mov mov addr16 dec js lds sbb sub out hlt cmpsb push shr rolb push dec xlat ljmp insl repz int3 inc pop mov stc mov std sar pop dec lds pop inc cmp insl fmull stos push cmp pop cld jmp lds je fwait ret ljmp pop outsl clc pop std pop push js (bad) xor mov movsl sbb je cmp into inc pop mov (bad) or sbb fwait lea pop and sar arpl mov dec ja rol arpl push repz cli ja loope cmpsl adc scas fistpll dec aaa cld adc pop or cmp dec out cmp ja jbe pushf call jae (bad) (bad) mov test pop data16 mov push mov test push fcoms adc loop jmp sbb ja sbb (bad) loope ss (bad) jno out or stos cltd xchg mov sbb pop out push incl dec lcall notl incl cmpsl mov inc movsb xchg push std fbstp mov mov or hlt xchg cli xor ja cmc and cmovs xchg inc cmp jno popf pop inc mov fidivl sqrtps clc (bad) cli pop sbb jbe mov mov xor inc (bad) lock repz repz icebp xlat stc addr16 iret xlat pushl pop cmp adc and mov push (bad) mov shll inc idiv in pop jbe je outsb jo leave stos mov add add in pushf les fistp ret or pop cmc bound stos push pop (bad) (bad) ja inc dec ja pop cs xchg jns push ja (bad) lds inc sub mov movsb popf je ljmp rcll jge sub scas fxrstor sub data16 stc jae ret aaa fdivrs jns cmpsl pop shlb sub mov test ret push mov jp inc mov adc pop xor (bad) movsb fcmovb loop out jp pop jbe jp jmp test mov sub mov (bad) jne pop std inc mov fsubrl push push inc inc jl int out jno (bad) icebp or jnp sbb ret xchg rolb jle decb cmp stos lock pop pop mov loop ljmp lahf ficoml dec mov mov xor test lret sbb bound sub xchg mov sbbb inc sub adc in sub aas adc (bad) pop icebp imul mov aaa or outsl mov pop jl jp push daa lahf loop cli mov lret dec test faddp icebp fidivr enter lahf inc adc in pop das daa loope pop lock jbe mov or lahf mov lret das into scas test pop in test jp or sbb mov cmpsb cmp sbb pop mov adc add add adc pushf xlat jge xchg stos bound pusha sbb jp sbb xor hlt mov cmp pop xor push frstor ret mov mov jl inc jae fbstp aas (bad) mov out jmp inc fwait test les out imul xchg in and (bad) pop pop adc test int out aam cs les addr16 lods push jle or cs xlat insl lcall popa roll mov inc mov loope rolb mov je outsb hlt push lea ljmp xor sbb outsb jg clc mov mov imul xchg test pop jecxz insl daa add dec add lock jmp mov bound inc adc sub decl dec (bad) cmp sub lret test (bad) pop std sar outsb out aas loopne mov sti push (bad) jo rcl ja cmp mov inc ljmp jp (bad) push imul inc jl pusha pop (bad) push in inc and ret mov jp lea (bad) jmp add sbb (bad) mov (bad) pop pop loopne std adc mov add inc hlt das adc pop or push inc jl clc aaa jb pop fdivrp flds push cli hlt gs push or sti lahf (bad) repz inc pop js mov popf aad sbb inc fstpt in repz test std lods pop nop lock leave inc into fsts pop lock pusha (bad) or (bad) fnstcw std inc cmp rcr test es adc adcb sub scas icebp stc sbb lock mov scas jg stc mov loop jg add xor in (bad) mov adc pop adc inc dec gs insl push loope pop bnd mov sbb and jns (bad) xor lret ret movl arpl add out out inc repnz popl idivl push xor mov (bad) mov sbb stos loop adc sub inc xchg cwtl cmp inc cmpl (bad) cmp jl jmp notl les out (bad) push jle and imul ljmp mov faddl cmp inc push popa adc fsubl (bad) out adc lret test or sahf mov xchg pop (bad) int3 scas pop cli and jns loop jg das shlb (bad) cmpsb push xor addr16 mov jp cmc (bad) mov dec shrl cmp mov (bad) das adc imul mov es adc mov pop call xor shrb jno xor add orl lods push scas pop push jl int cltd hlt xchg lock outsb cmpsl mov rcll adc mov sub iret inc or lret movsb (bad) fwait adcb iret pusha push fldenv cmp call movsl std inc jbe stos add fwait in mov jne push icebp inc mov pop xor and fstps out add movb dec adc clc cs lahf mov pop lret sub push adc jl shl jmp cwtl sbb sbb ret jp ret mov dec fbld sbb pop (bad) and jns adc mulb add xchg rolb cli and cld fistpll xor pop leave inc lods fcmovb xor hlt sbb pop rclb mov (bad) jmp mov pop cli fwait les pop test clc std push sti add fdiv inc ljmp sub pushf outsl shrb or sub cli int pop mov pushf sub into nop inc clc cli ljmp (bad) repnz outsb js push pop sub cld jp imul fiadd cmp (bad) push add imul call cld (bad) adc or call shrl mov inc and add arpl jle inc rep cmpsb sti xor sbb movsb dec idiv js hlt push push mov sar outsl aam add push or and lock ret adc push das shrb pop lds mov cmpsb inc or stos ja cli mov mov sbbl sub stos scas clc sbb cmpsb in inc mov inc pop into dec pop lcall xchg scas scas sub shrb add outsb jge (bad) movsl clc xchg aaa (bad) mov pop mov (bad) idiv loope js push xchg outsl outsb pop push xorl adc aas insl xor repnz incl pusha mov inc lahf pop pop mov lock loopne es bound pop clc (bad) lcall adc sub inc aaa jnp (bad) lods or into pop adc rcrl mov cmpsb cmp cmp sar jl add ret xor add jg cld mov ljmp sbb push pusha or sub add pop add sar xor test dec cmpl addr16 pop mov pop mov mov ficomp push pop loopne orb sub dec xchg clc sbb or pop adc fbld mov push fnop add test dec pop cmc lahf mov pop (bad) test jp lcall cmpsb push (bad) fbstp lock or mov repz or ret imul push (bad) cli pop cltd fildl shlb leave popf mov scas (bad) add fiaddl jp loope hlt fistpll cltd add adc rorb sbb and mov imul jl mov int stc lea stos pop jmp dec inc fdivs jmp cld lahf int (bad) pop inc sbb sti ljmp sbb es insl pop pop inc (bad) (bad) lahf push loopne pop dec jmp xor ja call mov stos ja (bad) (bad) decl jg mov or add xor cltd leave imul jno push decl and mov jmp (bad) insb inc and outsl sub cld incl sbb add loop xchg clc lcall std jl mov xchg in cmp xor cs out and mov inc push pop mov ja popf mov leave adc in jecxz mov fcmove rorl and ret lds adc scas push ret mov lds or sbb dec add jo jne pop push jae pop std mov sbbl or fldcw popa fld cs mov pop sub je dec call sub out dec lea clc dec (bad) incl mov (bad) adc cmc fistl into pop mov mov fs rcrb adc out insl in pushl cmp jg and decb dec mov add sbb sbb stos int3 push das inc std mov out outsb push mov push mov mov cli mov dec inc std in incb shlb loope jbe sub out out shrl clc pop rcrl push out stos (bad) loopne dec push add add rcll mov fadds push sub xchg clc xor sub loope xchg sbb mov xor adc sub icebp sti push fdivs fchs repnz dec mov mov (bad) cld sub push hlt lret or sbb je mov mov and mov enter addr16 push xchg clc sti jns mov aad (bad) sti cmp clc ss shr sbb stos mov jp (bad) outsb pop (bad) (bad) jb scas ret data16 ja mov cs mov push ja xchg inc adc fcmove loop jo mov pop xchg data16 aad adc add je test cmp scas rcl xchg jo jae jns add aam add jmp adc and sbb xor (bad) lcall sbb mov sbb pop add add dec mov mov enter ljmp sbb jno js sbb test xchg cmpl ja pop int push jns jp pusha sub jns cli rorl mov sbb dec mov xor inc xor or or (bad) push in or loopne std je adc add aaa std dec jmp lcall and pop mov (bad) inc xchg and mov fwait xor mov xor add loopne (bad) (bad) sub pusha dec movl inc loope out cmp inc add (bad) inc pop (bad) sbb popa out xchg jle sub adcb dec lock push out test (bad) mov into inc dec or mov stos dec daa or mov call stc arpl jl mov pop xor test das jl cld and (bad) incl cmc mov cmp mov arpl mov (bad) push inc cmp lcall xor inc sub sarl lods mov es push icebp cld jmp pushf push std sub push rep out out sub and jno in std xchg push (bad) jmp ret (bad) pushf dec push push pop loopne test jge inc outsb rolb mov rorb ret inc jg fidiv pop push je jg jnp (bad) (bad) pop mov push and rcr ja loope decb (bad) fistl mov inc xor cwtl mov pop push pop add mov test push cmc xlat (bad) sub pusha xchg lock adc loopne lret int3 or dec xchg push test adc xlat mov xchg shrb add test shr das push outsl ss xlat movsb xor stos cmpsb inc cmp adc icebp scas in (bad) imul (bad) pop inc sarb je je push inc (bad) mov push (bad) inc pop stc fwait push mov mov inc push (bad) call sbb xchg cmp ja test test mov into (bad) cmp pop sbb aad loope loop insl pop loope dec mov cld inc add sub or pop pop mov jecxz popa test push test ja or adc jnp add push push loope add cli mov mov sbb outsb in insb lock sub nop ret add push jbe test xor in jecxz fisttpll aad inc ja mov xlat cmp ljmp in (bad) pop xchg ret add loope sbb lea cmp pop stc movaps decl cmp inc popa dec aaa inc cmpsl add cli pop dec stos jp flds faddl clc cli sbb cli (bad) cmp (bad) fisubl cmp mov out aad shlb incl js fsubrl push dec int ret xchg xchg out ds add jmp gs jl lds lock clc jae pop (bad) cli jbe dec inc inc sbb sub add pop adc mov jmp ja in pop cli jnp mov push pop mov cli dec sub popa jg movsb js (bad) and mov fwait shrl hlt xor add sbb (bad) ja sbb push sarb mov cmc div in fs sti lock adc in and pop xchg xlat mov lock ja jle mov ja push loopne popa scas adc cmp lcall lret (bad) sbb aaa outsb adc and imul cmc cld inc stos aas and pop outsl cmc iret cmp popf test and outsl ja add in jbe fdiv fwait out cs lods fadds hlt out dec cmpsb ljmp loop pop and out or sub loopne jecxz fistp notl int3 jns pusha lret push adc mov outsb movlps fnstcw rcrb (bad) fisttpll add das add std and ds lahf in adc inc inc int push jns mov or cltd js aad or dec or jnp ja sarl in clc jae fstpl xor rolb jp daa sbb xchg mov or mov (bad) incl or (bad) std js enter cmc (bad) shrb dec fiadd and ret icebp pop ret adc mov jl pusha aaa add hlt test scas pop mov pop mov loopne xlat (bad) pop insl int sbb out call adc or sub mov pop lret fidivl sub inc xchg jp lcall ret in icebp or (bad) mov aaa or daa xchg mov push adc sub incl cld pop shll push push ja mov (bad) jg jge and and push (bad) rclb sub and dec xchg stc mov mov and xchg lcall es or scas pushf imul call out movsb dec push rclb jp add and xchg insb sbb push aaa cli cli loop movsl call scas rolb negb ljmp pop add adc shlb pop mov pop mov sti xor (bad) fbstp push sub inc sbb test and cmp lods rclb stos xchg add xchg lret xor lcall sbb jl shl pushf pop mov fwait hlt add mov int push popa pop cmpsl (bad) (bad) out rclb imul and sbb pusha sub cs imul jle dec pop cmc stos enter and ljmp aam (bad) sub insb in (bad) enter pop clc mov outsb ja xchg cwtl xchg or push push mov fidivrl lea mov inc aas jo sbb cli pusha call call mov incl in (bad) call xor inc xchg imul lret adc or xor pop cmc lcall sub das lock push addl sti ja hlt pop push add mov push mov adc in call or aas mov pop cmp inc lret cli add rclb sub push xchg add pusha dec push das shlb push cmp fildll addr16 or inc outsb movsb sub mov cmp xor stos (bad) insb daa (bad) movsl add into add xchg sti mov or lods (bad) xorl dec fwait lock sub inc mov std adc push push or imul sbb testb jae rcl inc jge (bad) mov mov pop fisubl xchg fucomi stos push lahf pop lods fcmovne popf dec push enter mov push cld mov cs pop adc lock or stc inc push stos sbb out mov pop ss pop lock jbe incl das loopne and dec mov lods enter mov push sahf ret aad jl mov popa mov push scas das leave pop push add (bad) fistpll push (bad) not fsubrs mov cli lahf pop sahf jns scas pop sti inc xchg pop mov mov cmp ja mov daa es call push ds inc mov scas mov (bad) lea stos mov movsb xor or ljmp push pop add lcall or aad pop mov lret scas sub les dec add cmpsl fs daa push popa xchg aaa pop rorb cmp and neg (bad) push sub pop adc bound (bad) fcomps or jg xchg push cwtl cli inc stc clc push and adc jbe cmp lahf sahf ja mov adc stc mov loope testb or push push adc mov icebp cltd mov ss rolb (bad) lds and or (bad) scas iret sbb test jmp add cmp dec xchg jne and pop and aas mov sar aas adc imul mov cltd xchg test jg dec and push add pop lcall push hlt int push movmskps cmpsb push fwait (bad) (bad) (bad) adc addr16 adc add or xlat push xor add add inc or and jl sub pop out xor loop sub sahf pop mov lods daa test call sub sar xor cmp mov pop sub sbbb sbb pop xor adc cltd cmp (bad) jg push cli push dec mov mov xor xlat shlb xlat sbb (bad) test loopne lods inc mov and xor add push add inc xor sub or push mov repnz pop rclb sbb es push jg sub test inc mov out dec or scas dec push push push adc push shrl jae mov (bad) call enter xchg jo xchg cltd stc stos push and out dec jg mov insb sub movsb movsb pop in in xor pop add mov push clc push pop bnd xor pop add push xchg sub clc sub jmp mov jge addb ja (bad) jg sbb jo and xchg popa pop sti int3 rcrb and and (bad) mov (bad) (bad) jg aam add push enter shrb jnp push sub call xchg and leave mov into rcrb stc sbb mov inc inc sbb push scas push sbb xor lret push cli dec sub inc jmp add dec xchg insl jb add imul call adc fadds mov dec mov ss dec jnp mov push jg ret mov add clc and add xchg jmp stc (bad) dec add sbb enter jb and dec bound sbb lock mov mov mov fsubr lods inc clc (bad) cmp adc jae lea dec add add adc jge push pop mov mov cs clc (bad) lcall pop sbb cmp clc rorb stos cmc test std out and add xor insb and cld jg lcall lods (bad) cmp cmp dec inc ljmp stc jl jge cmp (bad) pop sub std inc and stos cmc dec ljmp clc movsb pop inc pop out push hlt and lahf add (bad) xchg add and and mov or inc add push loope jl sub sbb ret push mov nop cvtdq2ps nop ljmp pop jmp (bad) cmp mov lahf outsb fwait lret ljmp and (bad) xchg mov aad cmp push cmp loope scas out stos icebp aas in xchg jbe adc inc mov loopne pop push negb mov (bad) les inc push or add ljmp cld daa icebp sbb outsb fdiv lods fdivl cmovle or sub (bad) xor movsb cmpsb lods stos notl std sub mov out jg add push and aaa cmp sar loope or push dec or mov pop psubd mov push in push in clc sbb jmp ss pop sub xchg out add sbb adc rcrb fcoms cmp mov add ret add pop ds and mov movsb (bad) incl sbb outsl cmp mov cmp insb iret jmp dec clc add lods dec push fs push pop jo (bad) and sbb push cmp push mov xchg scas pop shlb bound cmpsl sub push mov lock out lds mov (bad) rcrb lock add push sbb repz add ret cwtl andl icebp mov in inc rcll jp inc out xlat stos dec and mov cli dec jecxz (bad) movb pop iret sub add adc and mov mov push xchg pop mov outsl insb insl es lahf dec rcll inc or dec dec dec lock sahf int cmc jle aam cmpsl jne popl dec (bad) jg test xchg inc jp cld dec js jp fbld or xor das lret lods (bad) data16 dec aas and push je inc ja call mov icebp fcomps (bad) mov lds sbb jo out aas and pop (bad) push (bad) sbb cld ja sarb cmp rol (bad) hlt out xchg push inc add leave inc fldt (bad) lcall data16 xlat test rol push inc sub pop pop mov push pop clc jg (bad) movsb mov jns stc jp jns fisttpll loope aaa lock sarl (bad) decb inc cli rcrl in ret push push cwtl outsl (bad) cltd mov mov movsl call push dec hlt add outsl rcrb inc fiaddl pushf pop and popa inc jnp lods clc repz or adcl outsl inc jo inc dec loop loope add clc shll loop cmp subb xchg sbb push sub and jmp (bad) (bad) fiaddl aam push push imul out cmp sbb in pop (bad) push inc in stc inc add mov mov jl and (bad) cmpsl imul adc lret dec enter ds lods setp in cs push jecxz add mov inc jmp mov dec sbb add stc sub in daa sbb jp enter arpl fs (bad) or stc mov cmp push sbb ret or mov and (bad) mov mov out call xchg movsl movsl (bad) xchg sub pop xor test cmc scas xchg lahf mov cld ret mov cmp mov (bad) mov jo dec rcrb into mov (bad) jmp or in adc (bad) je cli ret ret mov ja sub movsb dec jb add adc jp pop cli (bad) popa jp (bad) jl pop or cli sti pop stos mov icebp out gs mov inc mulb lods inc (bad) pop les cmp in jg shll mov lcall or inc ret out mov repnz xchg mov sbb add jae sbb inc je add push lds shll (bad) xor pop add adc (bad) cmpsl adc and pop (bad) fsqrt push or push inc cmp pop sbb dec test or pop scas idivb mov lds bound push rcll jl push cli xor or clc adc fmull scas adc les les inc mov loopne lea scas mov and push fild pop and cmp pop push inc cmp push sbb addr16 xor cmp stos sub mov imul and (bad) cmp jmp ljmp mov aas mov sub dec cmpsl cmp or jo repnz lea decl test stos inc ret iret clc out pop (bad) jle xchg into pusha rorb or sbb orb adc jl dec clc arpl or pop iret pop cmc out xchg and xchg push inc push clc jecxz pop scas mov icebp lods stos lds inc ret push ret xchg rcrl xor mov fisttp adc lret enter pop mov jg fisttp (bad) lods jge and fwait pop lcall dec or push pop add cmc jmp fimul jae pushf gs (bad) call lret cmp in inc sbb dec clc sub ja jge pusha mov sbb js lret xor or ljmp xchg leave sbb xchg inc cmp ljmp outsb fimull pop pop arpl jle mov xchg pop inc in les (bad) lds push adc mov add mov push or cmp xlat les clc das pop jo push scas lods ja movsb dec push cli or loopne (bad) loope push sbb pushf sbb jge dec pop mov push les add nop or repnz dec icebp push mov out adc inc stos je lods loopne xor enter mov lahf call outsl inc fcmovb ret shll cmpsl push ja stc in lods shlb lds ret and subb jmp jp sbb mov push sti popa les mov xchg pmovmskb into orb pop gs adc mov dec repz lods or fs icebp xchg loop xchg fs or jmp lret in daa jb lods (bad) xor lcall std add scas xchg mov jmp cmp icebp stc imul pop pop lret inc or dec adc jb lret cs aaa std (bad) (bad) mov mov mov lods sub scas aam xchg mov sbbb jb (bad) dec out ljmp mov in or jecxz loopne adc lods mov pop jb lahf rcrb and mov pop fadd js ret stos repnz add mov mov inc ss int inc ja pop leave or or repnz clc lds outsb mov inc in (bad) mov shrl ret fcomp call clc fidivrl dec pop sahf pop rorb add or loop or stos xor arpl xor mov outsb cli or (bad) xor nop jge stos pop push js (bad) or test or nop mov and nop jp mov dec dec pusha mov xchg fimull clc jae or jb push rorl pop (bad) decb sub das mov test xchg lods add sbb add push (bad) adc loop inc dec inc out insl and lretw sbb and ret icebp mov push adc aas fwait push inc insl lods pop inc (bad) jmp bound clc and (bad) (bad) mov icebp and and mov clc inc lahf inc inc and test add das outsb sbb xchg and xor gs mov sbb pop mov or clc (bad) cmc mov (bad) cs push mov mov nop negl mov jo adc mov jl sub mov (bad) mov or add push adc (bad) jg outsb cmpsl stc inc xchg mov ja push movsl jp xchg add adc pop in stc push mov lock mov pop es inc stos adc mov cld fwait (bad) mov es jle jb sbb mov inc add xlat ljmp rolb adc in clc mov lahf pop lcall pop and clc push mov inc (bad) scas jp pop hlt mov jno int out add dec loopne add rcrl sub fist insb mov popa mov add inc xchg cmpsl pop mov das push lods or push or ret lahf sbb add out or das add jl,pn sbb pop notl gs push loopne push pop sbb mov push in jbe mov adc xchg fiaddl lock icebp push cli movsb add sbb enter push aad sbb pop sbb fcomps iret hlt cld cli imul xchg sbb sub mov mov jp lods pop mov sbb rorb push es loope pusha dec rclb xchg ja test mov int jbe fiadd test push pushf dec mov push push add and jge pusha pusha push xchg stc out movsb les mov lret pop out jl clc mov shrb outsb jg pop test lret into ret inc sub push inc push adc pop mov push xchg sub pop std inc outsl dec cmp sbb aad outsl xchg mov test lahf enter or outsb jb cmp pop push xor lcall inc ret jbe insl push loope mov bound adc icebp movsl outsl or out adc push adc (bad) call mov popf outsb call adc fwait sbb mov dec loopne (bad) adc adc sub push jp adc jmp jb pop jecxz dec xor and mov pop cmp mov in daa mov out pop aam cmp add push adc xchg push call push imul into adc incl jne add cmp int3 daa mov sbb inc mov inc cmp mov sarb cmc cmp js push sub push adc std xchg sub or ret jg in insb js jp lret mov pop out (bad) jg mov es (bad) sbb pop adc and loopne (bad) out rorb pop pusha pop dec leave sub fwait pcmpeqd mov fsubl sub and lds mov (bad) sbb ret and in addl pushf ja push add jge clc push push cli movsb sbb lds ja scas cmp lret jmp scas or lods add or jb enter rclb inc jmp dec mov loope es roll pusha std xchg cmc sbb insl (bad) (bad) gs in les push pop adc scas mov (bad) movsb imul mov fidivrl mov inc mov sti push or or fimul jae push lret pop (bad) pop lret mov xchg pop push mov push adc adc sahf lea xchg pop in dec adc pop int3 pop jne cli add push pop and push out rcll or (bad) ja lods cli adc jns out mov cmp js out or pop mov jbe lret rolb icebp and dec and adc mov dec cmpsb ret jge cmpsl pop (bad) cmc lds cmp mov jo js mov pushf shl and jb in pop test jns mov lods inc pop mov int (bad) cwtl (bad) popa mov lock push pushw pushl sbb ja (bad) cmc jp loopne (bad) mov pushf cmpsl and adc fwait xor gs leave in adc cwtl std cld cmp push or dec jns dec loope xchg pop dec inc xor bound shr push xchg sbb pop add sti inc cmp mov and ret scas cmc push call jns dec outsb in fcmovne and or ret into mov movsl (bad) cltd js sahf jo lea sbb hlt lds cmpsl adc inc in sarb js mov cmpsl sahf enter nop ret mov test push popa repz inc ljmp insb jge cmpsb sbb sbb clc mov or insl and ficompl loopne icebp mov xor add ljmp (bad) lods popa pop cmpsl (bad) cmc addb pop outsb sarb xor jl sti pop xor ljmp jge into xchg test jp push (bad) (bad) xlat les ljmp jecxz adc push pop cs inc inc mov pop test sub int3 jno xchg ljmp test fnstcw jl push sbb mov xor icebp mov sub out add sarl idiv and cmpsl lods inc mov adc lea inc cwtl (bad) add mov mov mov jle dec fstps test out mov les call sbb ret (bad) add mov cmp lock (bad) call lock std (bad) fstp pop outsl roll (bad) imul dec and xlat adc push loope adc sar pop lcall into lahf out mov jmp mov mov mov push pop insl ret dec es (bad) aaa inc out inc insl sbb lea add push push paddd shrl fadds xor aaa inc pushl cmc fistp or lods mov std daa sahf jge dec or insl sbb (bad) lcall in dec jns stos sarb inc insb mov lock test mov jp and (bad) dec pop xor (bad) mov lahf cmc ds cld out cs rorb mov lock les pop jbe xchg jl test out test mov jg cs sbb inc adc pop mov sub or pop imull rorb jmp pop dec cli ret movsb scas es lcall or aam inc loopne mov test push sbb into call mov push and js mov inc lods daa jo sub (bad) ja jmp add das push (bad) lock clc add xchg movsb aam adc push jp adc fidivr sbb xor dec xchg mov rorb or adc lahf shrb repnz push jmp (bad) mov ds sbb ja pop mov xlat paddd push cli dec mov push push addr16 jbe inc popa push xchg and push sbb mov jbe (bad) xor mov ljmp gs outsb cmpsl mov xor addb ljmp das inc xor add test jns cmpsb xor mov test jg,pn sahf repnz lock loope shlb cmp stos fwait inc push rclb jbe outsl inc imul test jns sub loopne,pt pop adcb lock mov add sub adcl jb inc cmp std jg dec scas ljmp daa sar dec xchg mov push cld inc (bad) sbb or daa fidivr push and push inc les testl clc push insl int3 mov push mov mov jecxz push mov jecxz cmp push lea pop lods out ret (bad) adc mov xor dec outsb jp inc adc clc cmpsl mov les xchg loopne dec cli pop or test idiv add add cs inc dec jmp lret dec insl dec pop push iret jle ret aad lds cli pop scas orb sbb xor cmp add imul jg mov ret pop mov add mov xchg lcall mov inc cmpsb out in pushf xchg inc sub jp add je cmpsb sti popf scas xchg or or adc ret mov lods daa jecxz lret push jge add mov push xchg hlt pop lea cld mov addr16 xchg mov xor and shlb enter mov mov (bad) loopne jb jg add adc (bad) fnsave aaa les int3 sbb sbb or push loop xor mov jnp jg push mov add cltd mov sarl and (bad) sub mov popf xchg divl sbb sti icebp adc mov aad les (bad) lret dec mov jo jbe jge cld push sbb popf mov repnz outsl cs icebp pop or push sbb idivb add cld pop loope adc fist cmpl sbb push std insl lret xchg jbe popf sbb loop test into xor stos ss xor stos jo jg in adc call mov mov fstps into (bad) cmp sahf clc jg icebp dec inc adc popa pusha lret fadds pop xchg inc std call cmp jge fidivr jmp push mov out movsb or inc jb divb mov xchg push (bad) mov ficompl (bad) js loopne scas out or scas pop sub (bad) jge movsb lret and adc sbb (bad) ljmp add cmpsl sub mov sbb jmp cmc (bad) incl lods stc pop fcmovne push push jge sub mov imul (bad) in lods (bad) rorb stos hlt jns push and lcall mov xchg xor daa mov shrl dec or mov outsb cltd cmp in jle jnp mov xchg sti shrb mov es fiadd adc ret cmpsl js stos mov jg iret lahf (bad) xor jg cmpl push popa push sbb sti sbb cld or addl inc test loop stos (bad) sub jg add or stc lods insb add sti sahf mov clc dec lcall add push xor or push sbb lahf je dec hlt jg call cli (bad) bound incb push or mov mov loop sbbl (bad) xchg xchg mov pop in cli jp adc mov pop or pop sbb (bad) cld hlt adcl mov out mov and add fadd cli in inc push ret xor sbb and dec sarl push sarb or xor ret cmp das mov jb popa sub inc out or mov mov lock xor mov shrb gs pusha push xor mov pop push std xor mov movsb dec mov lds and gs xchg fwait mov xor fbstp xchg aad lret shrb add in lret jecxz clc inc mov test xchg fwait repnz outsl xor iret arpl add pop jle and repnz inc loopne push fdivrp fcomps stc adc or xchg lock pop cmpsl xor xor pop sti jl hlt cmpsl popa mov test cli incl mov sbb push pusha push ret ret xor pop mov push bound mov lcall arpl sub xor mov xor shll push inc push (bad) int3 jg or std add std stos or mov fcom popa cmp hlt cs insb or in xchg loopne pop fidivrl dec jnp rolb mov and repnz dec push (bad) adc push test shl xlat or (bad) test or dec adc sub dec lea nop sub or or (bad) fidivrl adc fsubs fwait push adc mov test add xlat adc scas addr16 out cmp incl int3 push push sarl movsb pop pop jecxz pop data16 inc and into ret std (bad) xor jecxz (bad) mov (bad) daa fldt add rorb mov in inc imulb ljmp xchg hlt call loopne fild lret pop inc sbb and mov mov jg rclb in aas pusha mov inc mov dec mov sbb xchg jecxz divb popa push sbb mov (bad) sub pusha scas movsb xchg inc insb outsb mov pop push or incl mov shll bound inc (bad) (bad) mov test jp fldl (bad) (bad) lods out dec add addr16 out lret bound iret jmp pop in dec push bound test dec clc mov call jo (bad) (bad) lcall pop sarl in mov cs adc and xchg lret jnp in mov sahf ja stos jg sub add and ss loop iret push pop pop jnp mov lds loop pop sbb or fbld inc pop movsl xchg cs xchg cmpl fcmovnu add (bad) ficoml mov push pop cmpsl push shl mov (bad) fisub (bad) jb (bad) mov pop dec inc mov ljmp stc popa cld jl sub nop pop sub insl icebp pop add rcr sub pushf dec inc mov add data16 shrl xchg dec decl std cli pusha mov dec es push movsb lea lea icebp or (bad) mov add pop aaa pop xchg sbb mov mov popf sub in push or xchg push pop hlt fisttp les out outsb mov negl iret (bad) call lods mov fstpt xchg xor pop push pop dec cmp inc (bad) (bad) dec bound imul daa add clc ret js (bad) loopne mov jb xchg xchg push adc rorl mov ja sub (bad) push imul lock ja loopne inc test std outsl dec cmpsb lock jae dec cmp mov pop out jne mov adc mov xor stc lock fwait or add mov mov sbb jmp clc jne (bad) mov scas loope cltd insb pop jmp loop loopne sbb ror sub fsubp add (bad) decl mov pop cmpsl insb in out neg xlat xor mov dec or outsl rorl add jo pop sub push xchg addr16 in mov jo into inc mov enter mov dec adcb or lcall dec and add jge mov push icebp xorl xchg insl push (bad) loope mov inc add or stos jg jg aaa xor sahf add jp sbb (bad) outsl pop jle lods sarb ret add dec lcall lret cltd pop sahf push inc or mov fnsave fdivrl mov mov clc sbb fwait insb (bad) scas out rcll and jge icebp push aad and sbb test (bad) pusha cmpsl xchg stos loopne lds cmp fs out lea cmc rcrb test pop and cmpsl (bad) push mov or jp and pusha and lods rclb jno ss jno sbb push mov out pop push popf cmp sti lcall sub cli test fmuls jle dec mov mov roll mov cmc cmc pop sti inc cmpsb out loop cmpsl xor sbb in xchg lcall fucomi ja adc cli mov loope push ss mov sub mov daa icebp shll cltd in add pop mov stos mov mov mov (bad) or faddl out pop cmc push stos fadd pop add inc xchg xchg cmpsb insl adc mov cli loop adc dec push pop ret inc popf push add mov or push jmp xor adc aad or pop sbb cmp sbb test js aas loope cli test add (bad) fidivl cmp sub clc xlat and mov notl mov test cld fcomip (bad) outsb (bad) pop (bad) xor int3 pop add fs movb or push dec sbb jmp push hlt cwtl loopne pop scas lods cmc daa xchg cmc or mov jns movsl cmc dec stos push gs sbb loope ret inc jns int3 insb mov pop mov fbstp pop sub lods out lea hlt xchg and adc data16 shl mov push mov xchg in jmp push sbb call inc and stc aam hlt lret out inc sub add test mov cmpb fild pop data16 test andb mov inc aas or sarb inc or test inc loopne loopne aas aam ds test test lea add mov sbb mov xchg (bad) mov mov test mov sbb push es test sti dec cld sbb add pop std lret and fwait dec sbb pop add xor pop cmp xchg fnstsw mov pop ljmp rorb rcrl add xor stc insb pop sbb in adc pushf lea and jns push xor test addl dec out ljmp jl inc push jb ljmp das js xchg sbb push cwtl adc xor int lods mov mov ja cld push add mov loopne imul ja inc repz lods inc inc jae shr sub (bad) addr16 pop inc lret je jl adc jp mov cld shlb mov (bad) mov test fistp xor ret mov pop gs ss int pop data16 cmpsl xchg les dec push cmp ret push aaa mov (bad) xor jns or or mov cmp mov ljmp cmpsl repnz push mov mov sbb adc xchg enter xor dec outsl sub inc push push jge mov std call mov xchg add xchg imul mov push mov mov push lcall mov ret add scas adc in clc lcall dec sbb sub push or and cmp mov loop mov and dec les ljmp pop dec (bad) cmp jg xchg or mov movsl loopne pusha stos jg push icebp push cmp jmp loopne pop inc push mov loopne enter cmp cmpsb xchg or mov mov das incl adc fisubl mov or out push cmp or fwait jmp dec add sub adc lret pop jle mov clc pop in test cmp push push lcall cmp mov test xor or and inc jno ret idiv test rol mov pop mov cmpsb mov pinsrw scas sarb cmp (bad) addr16 xchg pop xchg daa inc lods les lock mov lods and cld (bad) push inc andl pop (bad) aaa lahf pop cmp lods lcall lret inc mov sub mov dec xchg pushf mov jg sub mov xchg push xchg testl cmp fcomip sahf push pop jo inc out mov fs push sub and xchg mov mov mov (bad) xor sub int3 mov lods sbb aaa jae adc setnp push and iret clc int3 pop fsubrs xor jl les or cmp push mov shrl pushf cmp repz mov das and jmp dec cltd stc orl outsb jl push push js imul loopne test add rcrb decl add dec add adc jnp inc cld stc push pop mov (bad) js icebp or das pusha clc jle scas ret test hlt icebp mov push fcomp add test dec xchg in mov icebp stos and rep faddp lods mov cmc push bound leave fist jbe jno aad inc ret fs lret dec mov pushf and mov js push cmp loopne mov (bad) clc rcrl add sarb add mov mov or inc idivb stos lret mov sub lret mov stos inc xchg inc and inc shlb pop ret or aas ror add test sub movl (bad) lcall jp mov sub nop test fdivs lods fdivrl insl or pop scas sbb adc adc mov incb lcall decl push pop or shr fs cmpsb add shrb js data16 bound cmp add std inc lods movsb mov dec out cli vmaxpd xchg loopne or sbb pop insl (bad) out scas movsl cwtl push shrb push pop xor sub sbb divl mov and jl push fs jp out lds stos and aad add lcall mov and mov pop xor jbe and pop ret leave pop cmpsl jg hlt push cmpsb cmp ret mov xchg test (bad) (bad) push fwait add mov es imul bound scas mov call inc imul and mov push ss stos jp in mov or fldt (bad) mov push mov jg mov movsb mov sbb fsubrs mov jne mov cmpsl cltd cmc xchg fsub pushf dec (bad) and mov movhps loope outsl cmp push (bad) jp mov xchg fnsave bound add sbb fild fidiv imul ficom pop pop adc sub lahf jb add decl and mov ds aad scas movsb or scas push test pop jmp ret adc test dec and inc cli (bad) mov inc xor and lahf pop cltd mov jg jl sti fs sahf daa clc bound inc les mov sbb lock push pop sbb insl pop loop ret loope (bad) clc pop call mov clc (bad) fildll test pushf xor mov popa out dec mov cmp fs das cli sbb xor and fdivr lea push (bad) mov inc (bad) shr faddl rorb and jns ja ds cld decl add mov cmp test mov push or clc xchg or in push test dec mov lcall addr16 pop lds mov mov jb hlt rorl xchg cmc std xor or and dec loope xor popl jae jg inc std xchg mov and jge cltd scas (bad) (bad) or negb xchg mov rcrb mov add out test fistpll imul sbb aad repnz push dec xor push xor or cmpsb and or and sub push out pop lock clc test cmp arpl fs sub lea insl negb pop add ret rcrb leave fsubr mov push sbb shr clc outsb push add lods aad pop cmp in enter pop ret out repnz pop pop sarl lds xor movsb daa mov call nop and mov and aaa push mov call mov jbe add or sahf jnp push mov bnd rcll add jno cmp ljmp push mov mov sbb and inc mov mov popa mov faddl lret pop jb ja pop adc std inc add hlt popf fsubrl push into dec mov push jg sbb pop in dec push aad mov test cmpsb adc loop mov pop cli sti gs inc rorb fidivl std cmpsb mov stc cld call out xorl notl mov sbb lds sbb cmpsl lret in lock scas fsubs ds or cli or push mov fdivrl pop sbb (bad) push or scas sbbl or mov stos push idiv ret stos mov xor mov cmp sub stc aas js push imul pcmpeqd xor ds stos push cmp movsb mov mov sbb dec or xchg cmp pop ljmp cmpsl mov push insb pop (bad) dec sti in (bad) in fdivs sub loop (bad) test sbb sub xchg pop jge sub ja dec aas sarl mov ffree sbb loopne ret add popf (bad) sbb clc xchg jns xchg and mov push loop icebp sub pusha scas adc lea jecxz cmp push xchg loope and stos test push (bad) ljmp stos cmp loopne mov or das xchg xor xchg mov (bad) lock cmpsl adc dec loopne fxtract (bad) jns add cmp nop (bad) aas movsb leave inc stos jg and adc rorb mov loop push iret loope clc shrl dec xchg mov inc jb push in push ja push or lock enter sbb lcall mov jne movsl nop sub cli xchg leave jl pop scas andb cmc js sub or ja lcall push mov je inc je es testl push sbbb enter idiv insl je out lret mov (bad) mov push push cmp add and pop imul sahf pusha lods cwtl (bad) mov hlt cmp ror imul dec ljmp inc cltd (bad) clc insl push pop inc ficomp jmp mov ja xor fcomip inc into scas mov ss inc addr16 aas add inc cmp movsl ret ret mov imul pop mov pop pop cmp xchg test jecxz mov repz jns sti cmc pop loop lods xchg add pop sbb das (bad) add jecxz or lcall test in inc push rcrl sbbl pop fnsave pop clc mov mov stos or jo xchg loope lock clc push xor pop sarb push sbb cwtl or sub loopne pop loopne push mov jne iret cltd pop data16 mov stc and ss and shrl cmp jg sub fimull into lcall test xlat inc adc xlat sbb mov (bad) mov clc dec cli sbb or in insl add xor fiadd pushf test mov jecxz orl leave loopne sbb sbb nop mov adc mov rorb fbstp jmp repz or test sbb push inc adc cld inc (bad) clc test add push or xchg xchg mov sahf les mov daa inc xor rorb bound fsts adc mov push jl add pop push pop iret std push pop (bad) mov cld paddusb call call out decb test not sub pop mov ja pop bound mov int3 adc sub mov pop jne pop imul pop push test push stos insl push mov adc adc adc or and adc jge scas sarb ret int xchg movsb out mov std (bad) mov ret mov adc dec test add sub lock jns adc cmp call push std sub mov (bad) mov cmc cli lcall aaa jge rcrl mov mov rclb call xchg jns jl (bad) aas mov xor adc fild sub icebp mov sub out xchg push cmpsl insb hlt nop and cmp les ss lds push inc arpl dec fiaddl sbb ja add sub xchg cli mov inc lds mov cmp decb inc int jp xchg pop adc jns jmp adc and mov insl xchg mov adc dec jl lret lds scas push std cmp or lret daa out sbb dec rclb cmpsb subl sarl scas popa test pop jmp fldenv adc mov sub dec dec inc mov pop jl cmp add ds push loopne ret push push xorb hlt mov aam xlat loopne out sbb mov sbb pushf mov xchg les clc (bad) out xor sub xor add sbb subl cwtl pop out test mov mov out jg inc mov paddd test mov mov or sbb ret mov pop dec in repz and mov xor inc pop xchg mov cld incb lock in repz cmp mov sub sub popf and add jae dec test in js aas pop pop aam out cmpsl xor add jecxz imul jmp test hlt inc jbe sub inc add (bad) aaa and mov mov jb pusha pop fidivr and cli loope ret mov mov push (bad) rorb jge xchg addb or push (bad) jle daa outsb sbb pop roll xor xor adc in cmpsb xchg push outsl fidivr pop loope vmwrite jb insl std loopne mov pop pop pusha (bad) jl jne movsb outsl sub (bad) mov sbb push pop mov mov js pop mov cwtl cmp add sahf dec (bad) mov (bad) dec js xchg and fsts dec pop jmp pop fild mov cmpsl xor sub sar jg jp outsl push dec mov xchg jge bnd rorl insb adc inc (bad) sub xor stc int3 push outsl insl leave incl sti or lock jb and icebp jp scas loopne clc sub dec testb adc push inc (bad) (bad) mov and xor out and push inc ja (bad) jl orb push sbb adc (bad) pop js (bad) jmp xor aad inc add sub nop mov push sub ljmp xchg or in inc jmp rcrl clc dec inc adc xor pop inc call gs push daa (bad) xchg pusha and cli popf adc adc sbb ljmp add inc push or mov fcoms in (bad) std dec negl pusha adc aad pop int ja jmp lock icebp test js and xchg repz fsts lock negl and pop repnz lret out add loopne out loop dec xchg repz cli outsl jl cld ja sahf push jno or (bad) push or jp xchg lret std adc add xor sub dec cmp (bad) sbb pop stos loope lret lcall pop leave push push stc lret jge icebp mov and mov dec mov ljmp push hlt pop setnp lret rolb das inc dec das push lock scas (bad) xchg test (bad) scas inc ss imul dec (bad) add jnp inc add dec aaa mov cmp pop fmull pop out cwtl mov lcall icebp jbe das aam daa dec mov sbbl cli lahf loop (bad) push and imull add jns (bad) sti add mov rorb xchg fcoms xchg push and push adc pop jl in incb std mov mov pop negl (bad) lock fptan cmp fcomi clc mov daa xchg add push jns jecxz mov scas test adc out mov push and jb sahf pop mov xor out and and cltd rclb add jbe add xor jl sbbb sbb rolb mov out xor decl jl add jge jae (bad) ret inc mov sub pop mov sbb out mov movsl loopne or add test xlat pusha clc lock f2xm1 sbb hlt (bad) jns mov push cltd icebp sti repz cmc push mov cmc ds jbe or jecxz js cmp push add sbb aad mov test test into clc lcall xchg push into sbb sbb jp int divb pop lcall mov mov insl repnz jne jle xchg popa test (bad) dec lods mov fdiv in aam ds xor fldcw in push add cld and aas xor inc loop sub dec in pop pop aas mov inc call pop dec arpl adc sbb inc sahf std imul enter test xchg shrb inc or and popf scas lret mov loope inc cmp scas xchg lcall cwtl lret and jg mov out cmc cmp xchg popa ret inc jp jo lcall imul xorl sub and fcomps loope pop (bad) cmc pop aam fidivl loope clc inc rolb stos (bad) fiaddl aam loopne adc cli fwait or sbb in or pop rclb dec pop inc adc cmp mov lcall inc js pusha mov mov xchg loopne ret std cld sbb or adc adc fnstsw loope mov shll mov rcl clc sbb fdivl jne jmp vpsubusb mov jnp push dec mov xor push jl mov clc das sbb scas out sub enter dec or adc lock cld lods add (bad) imul ret pop adc dec jo xor dec mov ret or xchg hlt sar lock cld cli fs cmpb sbb push xor mov mov adc (bad) test fs inc adc out xchg push lock popf out and dec sbb pop subb sub icebp mov iretw jle (bad) xor mov cli mov and lock add mov cmp roll lret cwtl mov ljmp rclb adc clc inc jae (bad) into xchg fdivrs push add mov or stos les and xor shlb xchg je and das rorl pop push push adc inc mov push sub testb adc push xchg mov insl push mov jb loopne xor mov xor cli push lret stos pop comiss stos call pop mov xor subl and icebp outsb lods fs (bad) adc fisttpl outsb push cs scas inc ret push lea dec push inc jno pop inc repz shlb jp cmp adc fist xor loopne pushf pop scas sbb fiaddl cmp dec (bad) xor inc add mov pop sub push lret jno mov xchg adc je mov shlb xchg hlt daa bound sub daa (bad) bts push jp loope gs push cmpsb ret mov rorb repnz imul fidiv xor adc ja mov data16 pop sahf dec mov mov mov cltd xor or test gs cmpb push and mov pop iret inc mov ss call loopne adc imul cli push jl lret mov clc mov mull clc push push les push jl stos stc push clc icebp push mov dec pop (bad) hlt and mov push scas pop dec (bad) stos lods cmpsl pushf mov jle inc cltd xchg xchg push adc add js test mov call sbb inc xchg fisubl in scas jb das test mov test jp mov push divl mov sub outsl push imull mov out out sahf (bad) push or xor jl pop sbb loopne push jno lret inc frstor or cmp jo psrld inc adc lea mov stos pop stc jo mov int inc lcall test fidivrl jmp xorl pop pop mov sub (bad) fild fmull fidivrl loop test popa pop jge or test lock loope jo xchg mov cld push rorl mov mov js mov mov dec clc pop inc fisubl jg je inc popf fcoms in insl dec inc stos cli xchg xchg pop aam or inc mov aas or ljmp inc pop pop icebp push xchg cmp xchg fs lock int3 pop loope sub cmp jl pusha push into xor jecxz in jg jo aaa adc push xchg and pop mov ret and (bad) in es mov mov push or scas fs mov in cmpsl sub rep mov rolb mov cmp scas xor mov mov aam fidivrl out pop divb lahf (bad) rorl inc imull repnz adc mov fwait mov sub js aas inc js hlt jne rsm clc xchg or mov adc js incl cli scas insl in adc (bad) (bad) stos js scas jb pop movsb sbb sahf jp outsl mov mov outsl xchg (bad) mov push daa fs (bad) cmc xchg ja das ret mov pop scas mov jle (bad) clc incl xchg aad hlt mov enter push das xorl repz cmpsl loop cld insb sub cmpsl sbb outsb pop mov pop dec mov (bad) cmp (bad) jecxz clc dec push push imul aad adc push out or jo xor sub pop loop loopne pop inc aam loope,pn mov push rolb adc lcall lock inc jecxz mov mov mov mov out jg jae cli ljmp add repnz xchg pop dec mov push adc cmpsb cwtl movl into imul or mov sub in (bad) push sbb xlat or push mov loopne add (bad) ss test inc xchg or mov lock dec xor (bad) fnop lcall push cmc xlat ficoml sahf add lret lock inc xchg in (bad) out inc les (bad) sar jbe lods sbb sub lret lods dec or add sbb inc (bad) sub lret mov enter dec xor cld pop adc mov add add std imul inc xor call lods insl sub xlat repz shrb sub and sub in (bad) call ja mov cmpsb out dec jae pop inc push not pop sbb mov dec push sarl mov sub ja or jge mov adc inc add add xor cmp stos loope cld test or incl jle adc cltd add sarl data16 lods (bad) mov mov cmc xchg (bad) mov pop dec and loopne mov decl ret cld movsb mov sti push jnp push cmp or (bad) lahf popa xlat loope inc mov fwait pop and popf sub (bad) std ficom push fwait les aam bound adc lcall pop fdivrl aam jl sub push popf jne jmp jmp in cmp add push pop ljmp jae fbstp push addr16 jae pop sarb movsb pop mov pop or lock push mov or fidivl mov pop ja inc sub add lods push mov imul mov mov pusha decb clc inc clc inc add push mov pop push cltd push pop push out es sbb out sbb pop loopne adc xor cmc dec or pop adc shlb shlb mov leave mov sbb sbb cli inc cmp and mov pop or pop (bad) or xchg lock mov mov cld mov fwait in inc ss xor mov xorb mov push sub lods adc add inc and ret or dec cmp xlat mov pop nop push inc pop pop lds cmp sbb sub xor aad popf jnp je jno sbb or sarb push shrl inc pop les push mov lcall sbb xchg dec je inc mov inc jp xchg cli jp cmc repnz pop into popa insl jo data16 stc or ficoml insl mov cs lahf imul push movsb push push dec jl dec cld clc dec lods rclb cmp mov cmpsb push movsb cmp pop dec jecxz fadd push xchg cmpsb outsl push rorb dec loope adc mov jle,pt sahf and jl add into shlb jo push dec lret push push (bad) sub test mov test sub fwait push (bad) mov and xor (bad) iret add aaa cmpsb movsl sub adc icebp add dec or fldt (bad) into cmp dec pusha pop clc icebp push mov lods mov fbld popa cli sbb dec or fwait int mov mov sub sti sbbl dec ss (bad) sbb loope pop pop loopne adc daa or xlat aas es lock cli cli fistpl iret into sub fmul les add mov push cli dec ret cld out (bad) sbb or add stc and mov aam xor jmp mov fs cmp shlb loopne cs mov in cli ret jo imul pop push add fstpl ljmp jge cs cltd rol adc push fiadd (bad) insl into cwtl inc xor jle test cmp adc lock loopne and dec push cmp dec jns xchg out jge (bad) jmp insl inc sub xchg sbb pop loope adcb ss push cmp push stos cmpsl sbb and inc cli fidivr xchg jle dec push pushf inc cmpsl jecxz loopne xchg inc adc imulb enter sub inc fwait sub mov ficoml sub jne (bad) or add jl sub xchg (bad) mov sub and out bound int3 lods js xor clc cld test popa loopne (bad) cltd jp cli mov lret in sub push push adcb sbb jno sub or sub push add call mov shlb decl cwtl icebp lahf and in clc out sbb (bad) sbb nop pushf int3 mov int inc fisttp rorb xchg push jmp ds mov or pop gs cli rorl inc jno divb inc iret inc push outsb cmp xor aas fidivrl xchg xor dec adc adc pop dec mull dec mov and sub cltd ja sbb mov mov sarb xchg mov push jecxz push std cli icebp dec lds pop push stos int nop shrb jp jne jg sub mov adc sbb nop pop (bad) xchg mov push ja pop or push mov movsb cmp repnz push in push aam cld xchg fwait mov into gs ljmp cmpsl shl fbstp push cs add (bad) cmpsb inc sub jp lcall sbb ljmp sub fisttpl mov dec sti test jnp orl addr16 add dec js xchg push jg sbb mov mov mov mov adc imulb pop push cwtl sub push int mov decl mov xchg lret inc add into inc stos sbb fisttpll (bad) mov movsb addr16 cli pop (bad) xchg out add jae aas jg inc icebp andb dec dec inc mov rorb int3 sbb add and addl notl mov push ds adc out ds movsl jmp or call es cmp push loop icebp add sub cmp (bad) pop mov lahf sbb rclb push lds adc rcrb das push sbb lahf data16 fucom push mov adc imul mov jae push pop data16 xor sbb inc pop jmp movsl (bad) dec cmp les inc dec jb and insb inc cld cmp add adc outsl ljmp or (bad) xchg push and lret sbb clc xchg pop mov mov push jg icebp das pop out in das pinsrw dec movsl pop add sub stos aam incb pop jmp addl movsl jle ficoml inc add sub loop push daa cmc (bad) fidivl cmpsb mov test jl adc pop jmp add rcrl pop scas ljmp ret aaa std and rclb stos inc pop test add sub aam sbb les mov in (bad) or daa push (bad) hlt push sbb push jg pop sub movsb jne pop mov inc mov outsb ret aaa (bad) cmp lcall jl add add push popa call fildll out fiadd sub mov pop sahf mov nop inc jbe jno faddl sbb scas adc sbb adc mov adc nop mov or lds add jo cli inc out ja sar add cwtl movsb leave sti inc imul test dec cwtl and jbe int push sub jle rolb (bad) cld ja adc loopne sub xchg add jo mov fsub icebp push jmp or add inc push jne iret mov cmpsb and dec inc add ljmp int3 xlat jge cmpsl cmp rorb adc andl xor pop push aad sbb pop pop pusha cmp cli cmpsb loopew clc mov mov (bad) fs std push vandps adc sbb (bad) cwtl pop sarl or imul insb adcb jle mov ds mov je daa push dec jg mov pop sub pminsw mov cmpsb pushf mov adc push pop addr16 mov es test loop mov out jg push fimul mov ja (bad) push mov xchg out xchg pop in repnz or jg loopne push in lods sub bound mov pushl aad inc lret jp popf scas test cld imul pop fstps int arpl jge pop or adc xchg in test aas in sub out fiaddl mov sub inc cld xor xchg idivb data16 pop inc fcmovb cmpsl stc rorl mov psrlw loope xchg mov push adc jg push inc sub cwtl mov push xchg mov aas int mov pop inc es inc je lahf jp xchg out mov sbb fnop adc jle xor mov mov out push lret dec mov fidivl or add cmp xchg lret ds lahf mov fnstenv int mov daa dec or imul inc cli or test mov cld out fisubrl add dec mov int data16 cs outsb test in cmpsl xor call dec test mov mov ljmp stc imul mov mov add (bad) mov test ja rcr ficompl pop mov fisttp test sarl stos (bad) sbb stos imul fnstcw push lret mov mov insb or popa sub test mov cmp cmpsl fisttp fisub sbb mov in icebp jns jmp mov and ja test js call or aam cmovg mov scas pop xor fcmove dec mov mov mov hlt mov cld imul or (bad) in aad push adc test lcall mov out aam leave lods rcrl jno and sbb loopne inc sub ret cmp test stc xchg dec repz mov dec mov mov jle push and pop sbb ja mov test push sub insb fs sub ja adc fbstp repz and pop ja dec int lock jbe insb stos shll test in xchg xchg mov (bad) mov and xchg mov push test lahf (bad) rcrl movsl shr hlt insb test lcall subb bound push jg push mov sarb and test lods outsl out or jb adc mov ss mov test (bad) pop cli sar imul (bad) jp pop jg mov sub (bad) and stc sar xor ljmp fisubrl stos dec jae pop mov push lret repz pusha pop pop or or in jmp mov mov sub test fidivr pop fucomi ja mov push jbe push dec (bad) je out cmp mov paddsb push adc scas std inc dec adc enter and les aas shr push rolb aas int xchg (bad) fs fidivr int mov inc push arpl repz stos xchg lcall or push mov cld xor push inc test out dec loope mov bound loope test or mov fidivr cld mov sbb testb enter cmp lahf out jns xchg mov shll and roll stc imul mov push lea pop test pop pop sub dec repz and sub (bad) repnz push loopne ja mov pop je cmp repnz xchg ds dec (bad) test (bad) call jmp std cmp out pop ret ret cmp pushf out out ss xor dec repz mov test (bad) ficom mov (bad) lahf mov rclb mov dec repz push gs mov in and xchg pusha pop fsts fwait mov sub adc ret outsb (bad) xor pop dec mov shrl movsl movsb cmp mov repz stc (bad) push test arpl int3 pop mov imul fnsave idivb push rcr lret repz adc test add jp jb test jnp cmp jl or pop dec mov scas fdivrl outsl andl stos pop mov (bad) loop fbld in adc pop pop lcall aam ljmp cmp daa lock cld sbb cmp pushf ret mov dec mov jle dec lcall mov (bad) mov push add jnp insl ljmp push aas insl sbb push test in cmc fidivrl js lahf jno push or jae pop mov inc in call test adc pop pop loope repz in push repz jg mov pop or pop push fidivrl test scas loopne dec or ret adc insl sub dec jae loopne daa push cmp loope lahf out pop push pop mov sar push lods loope pop js fwait ja fnstenv sahf subps sahf popa push lcall fstpt lret lock xor jns push inc mov pop repz stc push pop jl call fisubrl dec lcall popa call inc in xor mov fidiv ja sti mov fcmovbe popa push cmpsl std imul lcall popf out repz cmp mov sbb and ljmp outsl and mov mov aas int outsb aas jae inc cli addl xor aaa cmp push insb mov pop and dec stc xor imul rorl or pop icebp imul dec mov add push mov fwait jbe loopne ja clc je xor movsb popf jne pop je sbb mov addr16 (bad) fdiv jbe sbb rorl mov cli jbe and push xchg fsubrs jmp movsb pop insb imul outsl sub loop (bad) ja sbbb and push push mov push mov and insb insb (bad) lock xchg inc insl insl (bad) mov push mov (bad) and cmc pop adc push (bad) mov sub push and jnp int xchg jecxz dec ja mov push dec jp imul mov scas xor push jg mov jnp add repz std imul test movsl xchg xor dec cmp adc into jp imul jge pop pop lea rolb mov test push cmp or aaa rcl cld imul dec test scas inc jo xlat stos push psrld clc lds sarl dec movlps iret inc cltd (bad) hlt mov or xor cmpsl std sbb mov push mov cli (bad) mov (bad) sarb loopne xchg push adc stc sar imul push jns mov cmpsl mov dec hlt mov mov clc push or sahf lcall popf test and push stos pop mov mov and (bad) jecxz push cs imul add fistp jns test jp iret clc push sbb das sub loop mov or cmp in jle loope sbb sbb pop mov mov add mov push hlt test (bad) dec mov push sbb xchg mov cmp jnp leave out fidivrl lahf out dec mov std call fstps xor fidivl sub adc popa sub add imul mov cli imul mov (bad) stc sarl sub loop int3 loopne ja gs cmpsl dec xchg fidivrl stos mov jbe mov xorl lahf mulb mov pop (bad) test mov cmpsl cmp cmp push test repz jge jb add lods and lock push aas pop call push cwtl mov inc adc add add dec icebp in xchg push mov movaps sub (bad) insb rolb dec add push ret jp ds rcll int insb cld imul and fisubrl scas lahf not or lret test jo lret jb out aaa enter test and ja push cmp sar jge pop dec mov std test repz jns push clc out mov lcall xchg das add and out sub lcall leave ljmp ds pop mov jo push dec push aaa mov sub shufps fiadd pop xor cmpsl xchg push inc sbb xor hlt cld jo pop sub fiaddl mov cmpsl out push in fiaddl fdivr sub push loopne ds daa dec inc repnz mov mov test orl sub ja out pusha and test pop lock mov ret push jecxz xchg xor outsl stos ja sbb es out inc (bad) mov push daa jb pop lock repz (bad) sar imul xor fimull xchg mov xchg jl in jle aam cld cltd leave adc add sbb divl dec imul mov lea adc daa cld mov mov xlat add inc lods (bad) mov out and out and pop push adc and sbb pop (bad) jnp sbb mov xor imul push push out inc or jno imul pusha jo in mov ret test xchg or xchg loopne (bad) (bad) jl push inc mov mov inc or cld stos (bad) xor loop fistp ljmp mov pop and push ja lcall sbb imul popa test xor xchg scas nop (bad) shl leave xchg daa xor jmp pop mov adc xchg jno jns xchg inc push clc mov stc out stos mov adcl out rclb sti sbb xchg outsb lret dec ss cmc mov push imul sti in xorl xchg cltd push mov outsb push aad sbb xor cmp jp mov movsl xchg add (bad) test sarb xchg ja into out pop test pushf cmp add push xchg js fsts dec sahf sub aad xchg cmc ja mov xchg mov outsb jl cwtl mov mov (bad) xchg daa jnp mov sti cmc push out lret mov test (bad) shrb int movl jno sbb rorl sub mov pop imul test scas pop cmp ror incl pop cs (bad) push loop mov cmp shl pop jg out dec imul xchg outsb jne mov bound (bad) mov ret ret int3 js pop addl popa inc dec lock jle aas sbb mov cmp push pop xchg in ss inc sub aaa out xchg push cmp push cwtl aaa push aad out and aam push stos in loope adc mov es clc clc mov inc (bad) ret lcall inc es push sbb push stc sar xor inc fwait bound cmp popf out add mov addr16 mov xor out mov test inc xchg adc out imul data16 test popf xor out daa scas inc pop inc hlt (bad) (bad) out push in xchg outsl lods cli push test inc push xchg mov outsl in xchg daa inc aam hlt fsubrp pop pop icebp in dec test (bad) mov mov mov inc out fs or outsl cmpsb test xor or sbb ss std imul stos and cmpsb stc sti (bad) mov les dec or sahf sbb jb into xor fist shlb xchg jmp out pusha adc lcall push dec pop pop dec call imul mov add subb test push (bad) out dec sti mov les ja sar mov stos fiaddl rclb rolb call jae mov cli leave loopne jo outsl pop fsts or dec jmp (bad) mov test mov mov xor dec dec cmpsl inc insb sub jl xor stc or jle jo inc mov pop mov aaa push imul mov cmp or notl fiaddl sub sahf data16 mov ja adc aam in out jge lahf and xchg iret inc bound push xlat fdivrp xor xchg sbb repnz adc xchg test jo ret pop ss ja jns cmpsl fincstp inc mov hlt repnz push pop repnz mov cmpsl test mov ror loope jg pop imul data16 insb sub (bad) xor jnp pop push mov scas (bad) testl fist mov subb cmp and pop popa pop inc push and fnstenv aad mov test xor loopne fbstp ja mov in mov outsl pop adc cmpsb cmp test out inc lret ret push stc xor push pop mov loopne pop xor pop dec repz jns sbb gs jg xchg neg or iret xchg out push sub and or ds xchg add ds shrl mov pop test clc sahf (bad) mov ficomp jecxz out test rcrb in jge lcall stc ja pop fsubrs iret rclb xor imul test out negb lahf out sbb xorl mov lahf jbe out rcrb movsl ret lcall mov xor ja or rcrb dec xchg cmp aad mov push fsts out repz divb jecxz scas in jge pop loope pop mov mov xchg cmp pop js mov cmp ss adc push and (bad) adc es pop push mov stos (bad) pop (bad) xor jg push mov mov orl insl cmp mov xchg add and (bad) jae pop sar adc push xor sahf repz push mov popf out sti mov int3 sub mov mov xor jmp mov cmp xchg sbb in imul mov jmp mov es cmp test mov icebp in or inc mov lahf mulb dec leave das stc mov jg aas int sub adc sbb lret out es ret ja fsubrp inc pop xchg dec insl int aas pushf mov push mov and xchg adc icebp dec imul lods and lret adc (bad) lcall addl stos loopne push outsl mov xchg xlat push outsl ja repnz inc je ret es call test iret add sub and push movsl inc scas jae lahf insb mov sub lcall pusha xor clc mov push repnz jnp (bad) not lods fidivrl gs jg sti push mov fwait jg mov mov jl lods into adc sub pop inc es xchg or lock shlb aaa dec xchg xor in sub mov adc push ja lods sarb push test pop lcall lea imul xchg int3 outsl hlt hlt das pop or iret xor aam bound mov push cltd stos adc addr16 fimull popa cwtl pop inc test out sbb adc lock clc fisttp lcall cld xor les cmpsl test push aad lock sub push jge pop or xchg ret aam mov add out or mov sbb into push adc mov pop test inc (bad) inc add jbe fs and mov and and pop and mov mov mov xchg mov mov adc into mov mov push (bad) fnop push ret loopne push mov inc push les jg jae mov addr16 cmp imul int pop push xchg mov inc add jbe pop mov ret repnz pop cmovo adcl decb add popa bnd cmpsl mov aam dec push or jecxz xchg pop jnp dec jo sahf test cwtl (bad) cli iret add mov xor inc daa cltd outsb add xor test ret jle dec bound mov push or je fwait lock mov inc or and or add loop mov sub add nop ret fimull pop add jo lahf enter insl or enter ds inc jno cmp ss xchg gs js sar jl lock aaa stos jnp xchg push scas mov add es mov mov and fldcw xchg xor xchg (bad) cmp sbb and int3 loopne mov cli lock stos loope loopne and lahf sbb sub sbb bound mov out xor push mov scas loopne cmp icebp addr16 sti jne xor in in xchg push adc addr16 cmp outsb lahf pop jg add (bad) xor popa flds dec add fs pop cmc movsb pop add jne daa pop jns fsub lahf into std ror imul cs sub cmc fidivr (bad) pop insl pop pop push xchg pop call pusha in dec sahf movsl mov sub mov bound enter and lds pop xor jle cli sub inc aad lahf ret pop cli test mov shlb mov sbb test dec pop (bad) cwtl in test mov push or (bad) fldenv push adc mov push pop nopl nop sbb addb jl jg jnp loope dec add jo add addl sbb repz xor jns pop jge incb cs das adc mov lods push test xchg rol and icebp popa (bad) fisubl push pop pop (bad) push xchg cmpsl test mov dec lahf std outsb cli int3 ljmp incb xor sarl mov xchg adcb adc sbb add mov mov or popf scas and xchg idivl jno add sub mov shlb pop mov cmp data16 clc mov dec incl insb jl mov adc xor lds jle (bad) lods cld ds clc xchg into dec sub lret scas mov std lock cmc mov stc cli push aaa mov sbb jnp jp outsb add lahf mov push lcall jl pusha sar pop test xchg xchg lods cmpsb cmpsl stos xor inc mov arpl es dec data16 jo (bad) or dec sub cmpsb sbb pushl jb (bad) adc xchg mov push sub adc scas add imul les mov popa mov push aaa outsl fsub sub xchg push push push sbb nop (bad) sbb or lods flds test add add cmp (bad) mov sbb mov jae xchg ljmp je pop xchg sub hlt ffree push push and dec pop push pop jne fs das jecxz,pn std inc and cli push (bad) add pop inc clc sbb mov std adc push adc pushf ret das mov jge add mov sub and std mov cmp and or and or pusha mov dec or push cs (bad) adcb adc (bad) incl sub popa push xchg test out das jmp in incl arpl dec adc fadd incl push adc mov pusha jg adc dec sub loop cmp push mov or add dec stos lods cmpsl adc lahf and mov ss xchg (bad) push and xor cld push xchg mov xor cmpsb ss add lods pop ret mov daa add push jo std dec add add adc fbld push xor cmpsl cmpl dec fcomps xor xchg stos (bad) aas inc das (bad) sub rorb pop inc sub ret int3 sbb mov adc adc dec ljmp lret jg lcall mov mov and test and pop and or mov add pop cmp add push clc ds stos aam sahf loop sbb es mov inc inc es add adc cmp jo cmpsb fistpll mov scas test mov movsl add test lods mov jl scas cmp out adc iret fwait push loop test sbb dec test mov loop out jecxz sbb movsl push inc jg inc lret jb and les add movsl fisttp fwait aaa scas sbb pop push int lock mov sbb sub out arpl pop (bad) lcall and add pop xlat xchg adc fistpl scas inc inc dec jle mov sbb push loop fwait pop sbb mov ljmp shlb sub sbb fidivr repz fsubl es les or fldl adc cmp aaa cmp sti add fisttpl fmull lret repnz xchg sub stos add ret pop sbb iret aaa jb fcmovu shlb imul (bad) loopne aaa dec jnp (bad) mov sub push dec div or push ds sbb ja jmp clc pop jmp jp cld sub fwait out ret subb push rorb shrl push lcall or mov out and lahf push fs (bad) jmp mov cs mov bound cmc push loop lods insb xchg push or mov iret add aaa fstps xchg clc and ret xor pushf pop pop sbb rcll jns mov sbb fsubrl pushf seto jb push lock (bad) dec cli cmp es insb leave mov mov add lock (bad) int adc rcll lock jp mov stos ss sbb gs jp sub inc cmp jg mov xchg push inc mov loope bound (bad) sub push xchg int3 pop shl or aaa xor cli sbb addr16 adc inc mov aad fcmove insb inc sbb test popa adc mov xor adc test mov adc ret cltd push push (bad) loopne mov mov mov cmpsb pop cltd outsl test adc dec xor fldenv aad pop dec inc lock js outsb adc mov aas test cmp xor jl sbb xchg cs ljmp (bad) rolb fcomp clc es lods and ja std inc cmp pushf inc stos cmp dec add xor (bad) test rol mov fmuls inc xor add lcall ljmp lds enter (bad) sub cs (bad) sar sbb in addr16 or out push bound or adc dec push roll js ret loop addr16 mov dec hlt inc mov cmc (bad) or dec add aas add or (bad) dec dec cmpsb fisttp mov int xchg cmpsl dec imul sbbl xor sbb iret mov or in daa jle or dec lods inc dec sti nop bound cs mov clc hlt ret pusha out rcrb pusha or repz fnstcw push pop sub insl mov scas sbb and repz hlt add lock pop rcr fildll stos negl sub sbb mov ds dec les je cmp or inc and xchg jae (bad) mov clc jg ret jp jl insl pop (bad) jae jmp pop xchg adc jle push imul lcall mov and popf repnz clc sbb sbb xchg mov mov ds aas std (bad) inc inc int push cmp inc push rolb je enter xchg inc stc gs fcmovb jne cmc inc push dec iret test dec adc dec inc arpl jg xchg push (bad) outsl aas add shrl mov cmp xchg mov test dec add out shrb ja js add or jno sub xor test push cmpl or cli je insl jnp loop push in std dec ffreep mov pop push fisttp out (bad) mov (bad) out es xor adc test aad pop (bad) jb imul jge mov (bad) cmp jecxz sarb das push movl data16 add insl mov outsb sbb mov adc xchg ja outsb idiv (bad) outsl sub and xchg outsl and lret jne sub push dec insb repz mov call sub loopne clc inc mov imul lcall ds stc rorb push fadds push pushw push ss int stos sub mov pop fldl sub push jg adc mov lcall jbe test pop ret and mov idivb lds push mov and add and les outsl jb or clc lea stos jne stos sbb jle or shrl test add sti inc jae data16 icebp sahf add jg lods shrb xchg cmpsb (bad) push mov sub out cli sbb push loopne or push enter push loopne inc sbb outsl cmp inc jmp out xor loope les inc hlt sub mov cmp pop clc xor insl insb je imul add push std jp xchg jp mov ret popf push std inc ret jo cmpsl or and loope arpl fstps jb cli push add cwtl mul dec inc ret xchg (bad) roll into pop push call add push mov popl arpl jl mov ja (bad) xchg inc repz sbb ja xor outsl sahf imul sarb xor (bad) fsubrl dec jae das sub cmp (bad) call std push icebp xor imulb dec dec into data16 je int pusha dec mov mov push dec fwait dec jno mov int3 addr16 pop test cwtl cld push jl nop fldcw orb call dec aam mov mov sti mov clc movsb clc popf repnz rclb or xor hlt push and pop inc inc loopne xchg cld ja add mov (bad) add sub adc or call loope pop push jmp cmp (bad) les shrl sbb out hlt ficom dec xchg add out mov dec call cli cmp push shr movl ret mov add pop sbb pop vmaxps je or cwtl enter sti or mov aas inc xchg imul jnp mov (bad) mov or mov or test mov mov ja sbb and xchg add cwtl iret ss mov pop or or pop clc insl fnop xchg push jp mov xchg xor inc lahf call orb inc (bad) ja sbb dec and bound call repz ljmp stos addr16 adc add push dec sbb adc adc rclb insl lcall jg cwtl stos inc lods cmpsl les enter and xchg lods push jmp aas ja cli rcr leave mov lods ss jbe call cs popf push imul das out dec add neg inc int scas rorb sub push rcrl jae test icebp cwtl test push jle rclb (bad) jg inc xor pop fstpl xchg or jl or add mov fidivr pop mov jp pop jp sub dec push push hlt das dec lahf add hlt inc lock outsb sahf incb int3 lcall add js test mov mov repz cmp movsb push movsl rolb push mov dec push leave divb (bad) dec hlt and enter lret mov push fcomps push push je jecxz inc add xor adc sahf mov cmc js mov enter clc hlt dec adc mov clc mov push mov push fisttp rorb addr16 pop ss (bad) xlat mov clc push dec scas iret jmp cltd mull aaa push (bad) iret xchg push or imul push enter das test repnz dec push test (bad) mov adc loopne push cmp pushl aas dec cmp repnz dec inc pop enter mov repnz idivl adc rcrb outsl insl addr16 pop fsubp call sub mov repnz jbe fs nop xchg pop dec jg iret inc push inc jb mul inc shrb inc adc or jae mov clc (bad) (bad) xchg jbe icebp out (bad) push aaa xchg into clc bsr pop test cli mov loopne or ja pop cmc push sub popa inc stos xor or imul int shll xor xchg rolb xchg mov imul lock js sbb push xchg mov cmp rcrl sahf inc mov ljmp enter pusha (bad) jbe mov jns cmp dec sbb dec (bad) ds push pop jae inc mov xor js xor (bad) lret push js adc xchg sbb lds dec data16 dec das inc push push jmp into idivb pop jp jecxz dec fs ja mov in and faddl stos mov enter xchg notl xchg mov and jno pop popa (bad) outsb call pop lds pop aam scas xlat jns rolb xchg sub dec jmp push stos cmp jns scas sarb movsb cmp inc hlt lods sub pop mov mov test roll and xor outsb imul test decl shrb jle cltd leave add mov mov add fsubrl lea ja loope pop nop in les push push pop ret js inc pop hlt sub sbb scas and shll cwtl jbe adc push in lret pop mov add or cmpsb out or loope or inc push and scas sub mov aad int or sub (bad) cmp sub dec cmp cmc ret inc fs sub out add or pusha pop cmc mov lcall jg cs sbb cmp outsb rcr aad loope ret rolb hlt or sarl fstpl xchg push insb (bad) cwtl dec repz fcmovnu push addr16 sbb in jbe out adc insb sahf dec into cmp inc pop add push mov rclb cmpsb sti xchg mov xlat test lods mov cmpl sbb pop xchg or pop dec (bad) cmp and decl ret or push push test enter mov fcoms push add les jnp out out dec imul jl xor dec lcall aad cmp push shl popa dec adc (bad) jge jae aad loopne fidivrl je test fdivp ljmp fs call test add mov pop inc test lcall pop or jg jbe shrd push cmpb jnp test inc adc incl lods add jae or sbbl push jo inc int3 ja jae divb adc ret mov pop cmp jnp lcall push mov and outsb aam adc clc mov push mov movsb fisub roll sub (bad) pop add pop xor lret or pop insb jge scas mov fldcw scas std sub inc mov cmp push inc jmp scas inc nopl xor dec ret xor sti mov into jb adc mull add ss push sbb cmpsb mov (bad) sti jecxz dec lret fiadd lcall xchg xor mov push ja out xorb cmpsb mov (bad) mov xor sub jecxz xchg mov rolb push mov lea push push adc xor add stc fcoms xor mov sbb aaa ja xchg push ss lret lcall mov jns mov mov fadd jp inc loope mov rcr adc add je sub ja adc sub sti adc jl push insl mov popf jb adc push mov fs shr (bad) test sub or push dec sub (bad) mov jg loop dec ja stos iret pusha push pop adc loop out inc stos lods mov (bad) jg mov xlat cmpsb mov cmpl mov sub dec in jle mov mov sub pushl dec add ret out pop jnp pop inc (bad) aas les movsb popf out or pop jmp lods dec fstps or ret sub (bad) iret cs outsl or cmpsl (bad) sarl lods mov pop sub mov xchg mov (bad) and cmpsl xchg mov pop jo je iret in cwtl call dec test push clc push stc testl les cmp js mov dec jge sub orl and xchg fsubl jl push push xor icebp and and mov movsl cs push dec cmpsl aad dec arpl lock push push push inc sub jae (bad) add xchg push sub sub aad das xor cmp ret dec pop sub test and std and inc (bad) std cmpsl inc push mov cmc pop jne movsl dec outsb and iret (bad) ljmp es incl int pop imul xchg xor sub add mov imul test in lods cmp fs jecxz int3 mov test das ljmp add inc sub movsl push test inc leave xor incb stc out cltd setp jge xchg inc cmpsl loopne add mov dec aam nop fldenv inc cltd add std rorb and sbb pop test insl jle (bad) fldt jbe xchg push loopne mov jb addr16 jno sub aad sub mov push (bad) jae int add into ds sub hlt cmp jecxz ret in pmullw sub sub inc pop loope enter pop inc (bad) xor push jg sti testb scas loop je out dec add inc push sbb int add pop add (bad) jbe popf js imul fwait push and cmp jg jle cmp int dec push sub int3 and push test loop inc inc jo test mov jl addr16 lock test inc pop dec loop lds and pop stc lock fs test (bad) test sahf push out iret add mov jp es sahf cmovl mov push out jp test jo call les cmc push mov adc dec xlat clc ret inc pop ret in inc jno cli movsl pushf sarb jb inc sbb inc or push jle jns push (bad) ja dec cmp sbb fidivl pop ljmp pop into jae jle clc pop mov xchg jl pop loope nop bnd enter (bad) lcall mov xlat push sbb repz das xchg out into iret std test pop stos ja js mov lcall pop and push push cmc mov push pushf adc jle inc rcrb clc mov loopne inc fst (bad) (bad) cmpsl sub dec inc xchg jp adc test stos sahf push sub jmp scas (bad) repnz ret fiadd xchg mov cwtl cmpsl (bad) dec (bad) mov push or int xor xchg enter sub sbb adc repz popa rolb test add iret daa outsb es xchg mov inc or paddusb mov cmpsl clc mov (bad) into ja jge rol pop test sub clc dec mov cmp cmp nop mov mov (bad) loope (bad) or pop addr16 pop dec rcr (bad) sarl test scas mov lcall into jg xchg daa stos ss lret lret mov cltd push xchg in sbb mov fwait pop ss pop lahf push (bad) cmp xor scas in sbb fbstp sbb and xchg push sar cld (bad) fst clc mov fsubrl lods enter xchg sbb in rorl jecxz faddl outsb sbb and adc ljmp hlt (bad) pop xor sbb mov cvtpi2ps nop push daa jl testb inc loopne push out in or push movb movsl mov jbe mov jle movsb inc mov pop xor popf xchg add sbb pop and popf movzbl xchg xchg popf xchg jl push cmc or pushf lea into (bad) out sbb sbb add mov pop sbb movl ljmp cmp mov (bad) xor insb jp xor enter cmc repz ds out mov sub test loope mov ret inc (bad) sbb (bad) mov add inc mov add aam jle mov adc outsl ja sub inc clc ds mov dec cmpsl pop dec mov fwait pop inc loope push add mov aad rorb and mov xchg or and jp pop inc popf ja flds cmp push cwtl cmp xchg pop mov mov mov add cmpsl mov iret dec xor (bad) and enter outsl loop insl enter xchg mov jecxz (bad) dec inc push pusha sub arpl inc call inc shl sarb icebp pop out inc js clc imul sub lret inc lcall sbb hlt cld mov push into or pop jae (bad) mov (bad) cmpsb add daa sub mov lods xor js loop pop lcall adc xchg ret push xor mov mov add jg adc jge loop lea (bad) addl aam inc das and add jp lret iret mov mov lret call xchg aaa cmpsl pop jbe js sbb cli jl jl lret lret pop ffree sarl ror enter mov push jo jo jle pusha mov idiv or push mov and inc push and cs shr subb sbb inc sub out cwtl mov mov orb and jg pop push daa push xchg test mov xchg mov cs ljmp fwait rolb inc add add ss ret movsl sbb loopne rclb jl push icebp sbb sarb cli (bad) cmc push repnz cmp cmp and pop scas push add ja sahf jp or dec push mov cmp pop lahf inc cmp aaa repnz adc ja ja add push or cmp fisub push pop push push enter pop xor pop add test lahf sub sbb pop lret scas adc sub add in pop jbe inc jns clc repnz pop inc jg rcr sarb and and mov or scas adc jp and push adc mov push cmpb int3 fnop clc stc pop push and fbld or mov cmp push push mov enter and (bad) cmp sarb push pop sar sbb xor push mov or (bad) ss sbb pop notl dec xchg cmp clc aad jp and rolb pushf mov js adc icebp ds lcall add dec adc xor push pop notb jne dec mov jbe inc xlat inc rcrl or mov daa mov mov lcall adc (bad) and inc sub mov add sbb ja dec popa mov mov xchg cld ja sub rolb pushf xchg sub jbe mov popa xor sbb int3 xchg xchg (bad) imul inc push push loopne dec rorb insl push rcrl (bad) call dec mov repz jns int3 push jnp (bad) jmp imul cmpsl pop aad push mov pop shlb fildl mov inc push add in xchg add leave inc push push sub dec mov mov mov adc dec in mov add je je jmp (bad) ljmp or retw adc repnz (bad) je ret mov cmp jl inc lods jge out outsl loopne cld ja je cld add into mov pop (bad) aaa call call aam aad in sub jbe (bad) add dec dec dec lret mov pop or call inc xchg xchg (bad) ja cmp mov sub cmpsb or loopne sarl int push xor shll sbb or pop (bad) cmpsb or xor data16 jl sub ja fisttp mov mov insl sub aaa outsb mov insb push sub test sbb pop repnz ret fistpl mov adc (bad) xchg scas or cltd adcl or test rolb out or lcall add jno push and js pop adc or test sarb jg ret inc xchg mov jmp inc test repnz icebp aaa or cmpsb push mov xchg and movsb inc idiv inc mov or push cwtl push add lds das add and push jg adc xor fisubr ss push sub cmp loop mov js cwtl cmp scas adc fcomps stc push adc jb inc pop lods push inc inc ret add icebp cli es outsl push pushf xchg adc mov add mov inc pop add loope mov es sub dec xor out flds sub (bad) int3 push mov fcmovbe jle or jne mov lret and sbb jne add cmp dec push push and adc aas ljmp xor sbb shrb iret inc xchg lods lock out test add or popa push jno rcrl lods adc xchg cmc add adc aaa jo mov xor push inc imull push ret adc lock test clc add dec and sahf or loope mov cli add mov (bad) and jge push lods xchg ret out inc inc lock fist iret inc cmc and loop jo popl push sbb inc loop loopne pusha push jp imul mov adc cmp test pop mov outsb jl sub loop add pop inc xchg pop loope add insb mov pop test adc sti pminub les inc aaa test jp jne ret out jp out jo pop jmp or dec lcall add cmpsb inc fxch clc push xor fcomps loope mov mov scas lock push dec sarb lret fldcw test loopne cmp cld dec js add dec or xchg femms (bad) dec dec sub sub sbb lock les lahf mov xchg test sub sarl arpl ret leave pop push push ret aad or loope mov push int (bad) cmp jg or push jns mov mov repz pop dec add xchg (bad) sbb mov push mov add add pop inc jbe pop push cmpsb clc dec loope xor jle dec mov addr16 pop xchg clc sub push add (bad) push popa (bad) mov inc rclb jbe pushf outsl pop gs xlat mov jae add movsb adc (bad) ss sbb pop in je and clc fistpl pushf scas mov mov sbb adc aas enter loopne (bad) lock add add cmp lock jp in xor fmul jp add ret js pushf dec inc fcos adc (bad) push pushf or inc loopne xor adc in fstpt sbb push sarb fcmovnb addr16 outsb insb xor mov fisubr cmpsb inc js (bad) (bad) mov push xor mov ds lock sahf data16 mov xchg xor stc cmpsb xor stos outsb cmpsl out cmpsl bound inc jecxz cmp xor mov fldcw push adc cld bnd (bad) mov inc stc jne ljmp cmp ret jo dec mov clc call pop sub or cmpsb ret cmp pushl es aad mov popf loop rcrl cs dec les mov cmp xchg xchg mov cmp icebp mov jl jp out mov add shrl call cmp sti fs das sti mov in inc call sub xor jmp jo or ret jns inc xor ret pop gs pop sub push pop add data16 xchg stos shl pop cli or nop enter add pop sub adc pop loopne clc push cld cwtl imull std movb adc mov test js jle loope adc add ffree push jge lock enter jb pop and (bad) cmp or pop in and or sbb sub dec lock cmc decl inc xchg pop inc (bad) jge add add pop pop (bad) movsb lock scas jae pop das adc test lcall pop adc bound sub inc jp stos sbb scas lock xchg jl xchg das push jb xor das pop dec sub cmp adc jmp fbstp sbb loopne (bad) out (bad) mov sub imul jmp lret imull mov loope and inc mov or fwait les inc cmp or fdivl jns scas cmp push pop repnz adc pop inc lret push clc outsl xchg stos imul cmp fwait dec push mov xor inc add int ret xchg push jle pop aad and push adc repz inc add dec das loope,pn mov adc std pusha and pop ret js stc cli sti scas adc dec js xor stos ljmp into xor pushl outsb cltd jae iret fidivr xchg in xor cli hlt (bad) aas sub mov push add jmp push jle in bound push pop nop std mov inc clc dec das lahf outsb push cmc sub and xor aas xchg push and aad in xchg lock movsb inc cli add add aaa cli pop mov add pop sbb insl (bad) out ret push pop add sbb inc pusha addl xchg sub adc xor inc fsubs (bad) cmc pusha aad or and push sbb cmp test adc inc add or sahf and dec fcomps xchg pop (bad) dec add jg cmp mov inc mov andb sbb mov mov jbe fdivr lret push (bad) or in ret jae fisttp jns add xor scas lcall jo mov mov test mov ret mov bound push dec cli dec hlt lcall bound sub jno movsb push movsl mov sbb or (bad) inc cs mov es fisttp push mov fwait mov mov xor xchg (bad) and sbb inc ja (bad) xor mov add cmp outsl mov pop hlt shlb push jno push out and jae add divl call popa xchg mov mov and mov cwtl push xchg lea test repnz cmpsl das enter dec rsm inc fidivrl lcall or jmp outsb or cmp icebp adc bound into insl cmp or cmc icebp outsl dec int inc mov (bad) xor scas ss pusha mov in aam mov lahf mov (bad) jmp leave and std push jp mov jl js loope (bad) jbe xchg pusha aas mov imul (bad) mov pop mov test out adc jecxz ljmp push push pushf es test mov and popf bound lock stos lahf jbe add lods mov ljmp inc aas cmp dec fadd push gs mov inc mov push sbb jp jmp sub setno loop lcall mov sub je les mov or rcrl xchg push jne xor mov out push mov (bad) push insb push mov ja rol in pop insl and push orl rolb js mov rorb mov sbb pop push and sub es mov and movsb stos pop mov jmp inc xchg repnz repnz mov (bad) aaa inc or or jp scas aad mov adc xor add test shrb std inc addr16 mov mov push mov pop sbb aad ret sub dec sbb sbb les lahf inc pop lcall push les cwtl sbb push push es jg pop das inc and pop fstl dec inc push fdivrl mov ret std and imul bound jle sub push (bad) dec pop push ret cmp cli clc jnp sub add clc adc (bad) imul outsb mov dec cmp cld aas push add insl js push pop cmp mov les xchg adc stos mov movsl rorl xor mov pop ret push mov inc leave repnz inc jb js sub or test lahf and pop or cmp lea adc xlat arpl shl hlt xchg das in push ret sbb sub fisttpll lods dec add or inc and int3 xor je mov jb inc mov and mov inc and add ds cmp lret icebp pop add fisubrl outsl push cwtl fs das push inc sbb adc xchg add insb movlps pop or jl in cli stc lcall ja mov or mov jle inc sbb sbb int (bad) mov std xor rorl loop pop xchg outsl xchg popa push lcall mov fs xchg mov incl frstor inc push daa pop imul xchg icebp inc int repz dec push popl lcall sbb in gs push aas ret or shr int pop mov mov fcomps ds call and or insb xor or add inc push pop sti inc enter out loop add jne jp xorl (bad) sti xor jb adc pop inc add rclb scas mov jb mov sarb sub mov cmpsl out fstpl sbb jb movsb aas sub cli out push adc rorb pushf mov xchg (bad) mov aad (bad) jno ret or mov sti xor (bad) xor imulb in xchg push push rcrl jecxz cmpsl cmp sbb pop adc inc imul pushf mov fwait and push pusha push imul jmp sbb add push push or cmp mov adc js xor (bad) enter repnz mov pop fs enter adc mov cmpsb jne mov lock sbb push jnp mov jno mov jge inc pop sbb xchg jo xor icebp add mov mov daa test cld jo test push repz push mov stc push int insb movsb lea push push (bad) sar add std inc mov or stos mov jmp ret lods cld shrl dec and outsl sub (bad) outsb imull jg pop ja pop or cli mov das js mov ja rolb fdivrs inc call mov rcrl cltd clc push add xchg cmp les jge adc ret inc inc (bad) ss ljmp sub mov dec loopne sbb lcall (bad) bound xchg push dec add jbe (bad) pop or and add shrl add jg and decb jbe cld leave aaa imull mov xchg jnp dec ja add adc jbe add (bad) xor inc (bad) enter mov fimul aaa outsb mov insb in dec xchg outsb pop imul mov hlt js push cmc mov sahf lea sub xlat add hlt scas loope in lahf hlt sbbb int inc incb mov fs leave cmpsb out std nop mov lock and jbe es mov sbb sub std ja inc fcoms xor or (bad) aam pop mov xor sub movsl ds xchg jp and outsb cmpsl into sbb jcxz mov into sub inc inc xor (bad) lock or xchg and stos add push loop (bad) das (bad) mov push sarl add sbb cli pusha roll mov inc or add mov push or jecxz lret sbb dec test cli repz pop inc pop mov movsl loopne in lods movsb test imul sbb bound mov or out and popa mov adc mov and xor push clc imulb sarl or enter inc insl cmpsl les dec (bad) jge out inc in imul test xchg dec mov dec push mov (bad) popl lcall in inc xor pop xor leave movsl fsts aad mov test lods es mov xchg stos stos mov ss pop orl jp push add mov inc mov pop xchg push std leave pop or pop xor scas lret dec loopne inc int3 adc lock aam mov aad imul adc sahf adc xchg out dec test cli xlat sub addr16 fimull loope ljmp popa fs cs insl dec fisttpl lret push jp cmp mov in xor push pop jb xchg jbe pop nop (bad) xor mov sub or cwtl stc iret movsl jge add push repnz jl lds cmp into inc xor push and lods (bad) daa aas or bound jecxz inc inc cmp xor cmpsl jne fisubrl test adc test adc mov int xlat sbb lret jle bound pop xchg sahf mov test loopne inc ja inc lea cmp cmp movsl loopne xchg pop out push test push cmp insb pop push push test test mov repz popf call mov incb ret rcr xchg inc enter push movsl lret cmp cmp and imul mov ds out push adc sahf (bad) xchg test mov fisubrl pusha jge pop dec scas cmp in push mov or mov test into (bad) xorl dec push jg rcr outsl jbe pop or aaa sub push or dec pop insl inc mov push dec imul notb outsl outsl jg mov mov inc push jne pop (bad) inc call test mov add clc test imul xchg idivb mov mov xchg subl cmpsb mov pop sbbb xor dec mov ficompl mov inc cbtw push jg mov cld imul rdpmc out xchg repnz dec push outsb aas mov mov in jg mov test popf inc add sub (bad) xor push mov xchg pop (bad) mov jne not dec dec mov cmc add dec insl dec fidiv insl xlat jo imul test push add fidivl mov and iret add ss push inc mov xchg cld out lcall push mov loope xlat mov push jmp jmp pop setae push lcall (bad) out clc idiv aam pushf dec sbb out dec repnz inc jecxz in push push outsl ror mov xchg sub xor pop test push push mov aaa cld js mov repnz lret mov fs fldl int ljmp fistpl xlat lret (bad) dec xchg (bad) bnd leave push fcmovu cwtl inc repz pop repnz xor repnz xchg xchg dec mov cmp jb push push or adc jg inc daa push scas mov js mov (bad) inc push mov dec (bad) adc jp xchg dec adc call cmp pop movsl xchg es xchg dec xor insb mov push insl mov hlt xor dec repnz out xchg je add pusha cmp ret and (bad) aad mov xor clc cmp xor pop mov inc bound sbb jbe sbb push outsb aam lods lahf and jmp pop inc (bad) loopne je (bad) imul cmp inc xor in insl test cbtw pop orl lahf and (bad) or xlat xchg cli bsr or mov ret imulb jb cmpsl test repz leave mov fs xlat sub sbb ret scas or (bad) iret push jmp push add inc push (bad) cld mov cmc xor shll sub addl pop subb shl mov test mov scas xor jecxz mov scas popf scas daa sbb cmp test pop and xchg jns (bad) test incl es mov push push inc mov cmc decl pop cmp fs adc adc cli and cwtl nop addb insl push in movsb push gs sbb addr16 nop addr16 xchg cmp pop jp ss ret (bad) (bad) push cwtl jecxz movsb es (bad) decl adc lret sbb mov insl and imul or stos push (bad) xchg jb int3 sub pop test dec or mov sub lds fbld lds push push stc jp push xor sarl cld add push and sub jle shrb inc ja mov adc xchg mov xor shlb mov jno ffreep sub xchg js jo pop movsb and out or std flds cmp mov clc ja jg inc push pop sti ja insb cmpsl pop jl repnz insb icebp incl add push in aad orl xchg xchg dec imul or (bad) pop mov (bad) addr16 js inc es lods inc sbb ja ja mov lahf fdivr mov jg fisttp bound adc cmp (bad) dec add add inc jbe iret (bad) lock pop and and sbb ljmp and add adc test addr16 nop gs movsb cli cmp push xchg outsb xor adc (bad) mov sub stos inc stos jb das sub mov add push movsb pop pop cmp dec inc movsl add mov cwtl (bad) and fsts pop sbb mov push cmpsl scas mov jbe xor adc sbb nop mov js mov dec add aaa fadds inc stc test icebp icebp and dec mov leave icebp mov inc sub pop popa in dec inc cld add (bad) ja fild inc adc or mov xor or or addr16 dec mov mov add jmp sub lcall sub test rclb add inc lods cmpsl push cld cwtl sub out mov sbb sahf sbb ja pop dec cli aas pop xor push jns pop lret out cli pop and fnstcw mov or test adc ret femms lock fild rolb (bad) jae add cmpsl mov sub lcall rclb adc inc popa cmp (bad) xor inc bnd (bad) in jecxz mov out stos icebp inc fisttp call loope fstl ss inc rcrb stos push bnd sbb xchg cmovae sub xlat add gs cmpl pop call pop rcrb adc fs roll cli das adc sbb cmpsl or or and dec out ficompl loopne mov or mov inc das movsb popa aas adc es xor and ja push sbb pop scas inc push movsl pushf xor xchg sbb in (bad) (bad) popa push popa pusha lock addl repnz and add flds nop mov cmpsb out mov test (bad) imul imul pop test out popf add icebp push mov cltd mov jp and fiaddl adc icebp xor mov (bad) out call je (bad) mov push xchg mov pop add nop mov xor hlt push inc es dec test xchg cwtl fisttp and (bad) jo adc insl mov ss xor mov jbe popa and in imul inc ret pusha ror jge jno xchg das adc sbb pop les out jo movsl imul push mov and in shll pop ret rcrl jo push mov subb push test dec push mov cmp fiaddl std pop mov inc scas orl jecxz xchg and xor and mov cs pushf ret jmp mov insl sub pop stos mov or jge add pop cli cltd in mov inc jp push or call cli lcall ret push cld int xor jle pop lea add jne hlt cmp jg mov or cltd mov cmpsb xchg mov (bad) mov dec outsb cmpsl outsb insb push inc add rolb and sti sub lock xlat xchg es fsubrs jmp loopne sbb (bad) sbb jae inc mov mov cld xchg cmp (bad) shrb (bad) fbld scas loopne mov cmc and push ret sub clc jbe adc adc dec pop pop inc mov push add ljmp (bad) sti roll sub es (bad) pushl pop mov pop sub pop adc cmp test loope,pn xchg mov or push inc sub aad loope xchg lcall scas loope (bad) jnp int3 add mov or cmp pop jo std xor xlat cmp (bad) pop add out addr16 rolb add xchg les mov mov xor sub mov mov ja add sub pusha add out or dec push out ss pop and xor pushf rorl call je inc cmp inc ret jg dec mov cmp push mov push loop fchs adc cmp lret and outsl dec push xlat dec jg inc lods fwait movsb jg bound xlat in mov out scas fcomps sbbb or hlt ret xor les jge arpl stos sbb lea and pop adc push loop cwtl xor loope mov pop lret popa les rorb jg orl sbb xorb les rcr or ds ret imul test or mov pop push lahf cltd (bad) decl test out int3 jno dec aas sarb push add pop outsb lret out out and icebp fs sub adc (bad) push push lock cmp or sub mov outsl push sahf jecxz mov rcrl rcrb sub (bad) push lods sahf pop sub lock adc mov mov and mov pop mov mov mov xor push imul mov pop adc mov add xor mov add test out lods cmpsb add jbe cmp icebp xor das rclb pop dec cs and and add xchg data16 dec in xchg ja and stos loope cli push sub cmc mov mov sbb clc cmpsb cmp jl sbb jne jp cmp int lret adc push fistp cwtl mov fmuls jl into lods (bad) or rcll repnz popl fsubrs jo scas adc xorl bound inc ret mov popf lods adc inc cmp inc mov inc cmpsb ror add jge add (bad) sub fstps (bad) mov add xor scas call xchg sbb out nop bound stos ret pop bound adc in and push or sar (bad) (bad) sbb push ja fisttpll adc nop push push cmp loop dec rolb xchg stos nop incl ret or dec adc es loope inc sub cmp mov or jmp in dec inc push ret in sti dec jle test jae loop negl iret (bad) loopne mov jbe adc push cmove stos jl call orb and into cmp loop jb add xor pusha insl rcr xor in lret and jmp (bad) push sarb pop popa cs test dec (bad) xor mov fsubr pop ret and rcll std push push and sub mov or cmpb or sbb pop mov notb js dec fsubs addl bound jle cli pusha addb mov adc xor mov aas pop xchg mov roll pop pop add xor mov jb sarb adc mov and stos in inc cmpsl inc lods fnstsw or jae xor test or subps cmpsl mov out jns sbb movb inc pop pop inc mov jb pop mov push and ja inc out (bad) cmp sti push scas xchg jp xor sub jo lock xchg sbb outsb sbb pop lock ds pop mov les mov add ret mov sbb aam sar bound clc pop jb sbb js les sub insb or iret rolb (bad) pop adc outsb jae dec (bad) fldenv cmpsb lret adc jo outsl add in test iret cmp xchg dec loope add out ret push xchg aam scas clc loopne adc fs insb sbb mov push adc scas inc inc imul call loopne test mov rsm or lret jo popf out push jecxz cmp sbb aaa cmpsl (bad) aad js pop (bad) dec sbb pop adc imul mov push adc jo lock aaa pushf ja sub insl cmp bound fcmovnu fidiv jge ret aas mov lret (bad) repnz (bad) iret xor divb dec ja jle jmp push mov (bad) jae imul cmp mov insb adc jne cmp xchg push es dec popf xchg mov sbb (bad) stos movsb in bound mov test aas ja inc out (bad) cs and push pop les sub adc cmpb and inc loop fstp inc mov int3 sbb and rclb push adc pop add addr16 pop (bad) hlt sbb jg add pushf out insb jnp push lods push (bad) hlt xchg cmp (bad) pop push sti push popf add inc inc push sub dec cmp mov pop lock xchg and mov push out mov mov inc xchg cmpsl insb push insb add sbb jns or loopne jecxz mov je mov loopne or repz je imul xor inc pop ja popa sbb mov lcall out das movsl aam out inc mov fwait in xor jg repnz dec dec popa cmp jle lret sbb jg fucomp mov (bad) push push xor ja mov out push ja mov lahf pop inc stos jp subl push pop xchg push inc and mov push repz lock sub andl mov inc dec loop push lock xchg push jp ss push jmp int and xchg sti rorb pop jno fwait in add clc inc nop xor push pop idivb aad xor movsl pop cmp imul addr16 push stos and and jo (bad) fidivrl mov clc bnd jbe negb clc inc fiadd out pop xor int repz es mov js cltd mov pop dec inc movsb push jnp push push clc loopne ds mov hlt ja test ret add out scas iret divb cmovl cwtl fisubl sbb (bad) jecxz push and jne add iret not orl mov out rcr (bad) jo pop jl movsl loopne cli mov mov push mov aas clc (bad) hlt push adc push (bad) mov (bad) js aam into lock scas jp or or (bad) cmp adc pop add loope inc inc cld repz sbb push ljmp mov enter inc mov jnp add push ja mov mov in sahf cld adc or add or inc cmpsb add sub jle jae add js push mov pop pop sub aas push cmp mov push outsb mov xorb or push cmp sub loopne dec movhlps (bad) jl insl pop sbb mov loope cmp das jbe inc or xchg fnop bound inc imul hlt ret lock test pusha mov scas add fmull dec xchg je sahf cbtw push rorl outsb push dec gs jecxz mov int fisub push notl push movb loope mov iret jnp sub loopne mov mov nop and pop mov lea jmp stos pushf (bad) ret cmp sbb nop insl pop pop cld lahf icebp xor int loopne mov mov lods sbb jge or clc repnz (bad) mov repz cmc mov mov cmp ja loopne (bad) sbb outsb add je cmp jmp (bad) sub das lods repz clc mov sarb jne inc mov cld mov movsb dec cmpsb jp or clc xor pop (bad) cmpsl xchg jo pop jge and fwait pop and adc sbb push push jo rcl shlb xor (bad) (bad) adc rcrb enter xchg std sar (bad) pop insl cld xor pop mov divb push cwtl sbb aam jns cmp test std inc sub jbe mov mov adc push jp test rcr sbb xor mov repnz movsl mov inc add or aad inc icebp add xchg aaa (bad) cmp push icebp push dec test call (bad) rorl inc pop cwtl mov mov push sub mov pop xor sahf js inc xor pop xor xor sub inc sub and push shr mov add mov dec mov cmpsb push xor insl cld adc into leave inc (bad) cmc js loop out std (bad) aam sub hlt js lret lcall jl sbb repz shr jle sahf dec xchg adc inc ljmp arpl inc dec fwait sti ret (bad) dec adc mov mov jnp test sub cli outsb idivb stos inc add iret or cs (bad) (bad) adc mov inc push xchg ljmp ret and jo pop add or mov test inc outsl (bad) push or stc or adc clc rcrb pop (bad) push lcall mov xchg push test jle mov jl add xchg dec xchg push lahf or sub fcomi sbb ret hlt inc push daa jo jecxz outsb push xlat lods cmpsb (bad) (bad) push inc out les out sub sbb imul push and xchg scas push inc ja inc inc sbbl jo dec mov mov scas xor insb cmp jp jbe or inc add mov outsb inc push (bad) aad mov test pop sbb jno int3 ret fsubrs outsb mov clc xchg imul jl cmp jne js cmpsl int leave test or test ljmp jns imull sub (bad) or pop cwtl add js daa lcall inc mov pushf inc or lock fwait and xchg add or subl cld xor lret fwait add jbe addr16 les lock push xchg push icebp pop scas dec adc add clc inc or inc mov decl not jge adc (bad) sti adc xor sbb pop lods ljmp cmp adc jg in mov pop or ja jbe test adc ret push fwait loopne scas test inc mov js pop jnp rcr add add sahf repnz cmp adc movsb aas add in pusha mov pop and stos pop loop lock std add lret sbb sub xor mov jmp test arpl stos jne scas outsl push mov mov or dec and adc les adc xchg inc ffree mov jle mov out mov nop push adc push fisttpll nop push add in inc incl stos mov sti sysret movsb les dec pushf xacquire addr16 or decl add inc mov mov test pusha mov inc inc xchg pop xorb rclb lock incl in xchg jo or xor or push push das xchg lret pop push ja (bad) decl jbe jns pushf ret jno inc jp push movsb negb sub insb loop jmp add es lods pop sub in lea dec loopne and lcall ja bnd hlt imul mov movsb or xchg xor jp (bad) ja jp dec xchg pop into mov push push pop jge or jb push pusha daa lods mov cli ficompl fimull adc scas inc imul push push hlt and add mov xor xlat in fucomp xchg mov cld insl adcl popa xor push xor mov mov pop lret int3 push sbb add addr16 sbb (bad) stc pop push (bad) test mov push ds add icebp pop lahf sbb cmp lcall mov nop dec push imul dec or jbe sete or fsub mov scas aad mov mov pop xchg bound xchg cmp pushf rol rcrb fdivr push test push add adc and dec dec mov jnp rorb lock lods std test jne add pusha movsb and jns jg out divb inc jb mov mov rcl adc lret lcall in xchg add rclb or and jle mov inc jmp cmc pop and cld and aas mov popl inc or pop dec cmp or add sbb push insl push out mov xor and push ljmp (bad) pushl iret call fcmovne add sbb decb cmp mov data16 outsb lret out inc pusha xor (bad) (bad) clc ficoml rcrl xchg je test mov movsb mov lock jg mov (bad) scas fnop ds daa aam push cltd push jg and insb push push ss (bad) push pop cwtl push (bad) mov daa cmp pop outsl xchg or sub out ret iret sub aad add rclb and inc lock sub pop push jae adc cmpsb pop adc mov movsb clc mov add mov push shlb adc cli daa jnp adc push mov cmp addl pop test push or enter dec mov mov jle cmp pop sbb xor and xlat mov test inc jge fwait dec aam mov test movsb and jbe ficoml ret fcomps xchg fdivs fidivl mov dec lods cli dec aam insb inc mov lea sub mov aam jecxz cld push imul add pop cmp cmpsl add dec and out mov (bad) pop icebp aaa inc sbb mov pusha mov push sbb rorl mov data16 pop into push rcrb push cmpsl in add add jp pop cld adc loopne orl pop repz dec mov pop or inc test mov movsb xchg ds hlt aam jns sahf clc mov cmc sub mov call ss inc mov or inc psraw mov mov dec clc fisubrl arpl mov ret test es inc cld sbb add push mov xor lret out cli pop (bad) lcall add loopne dec pusha xor cmp adc cwtl cmp inc dec or addr16 cmpsb push shlb xchg mov lret dec cld addl pop dec push push shr fabs gs rcrl xor or ds add lods inc push inc int ret (bad) push popa sbb or xchg xchg mov ficomp push cli inc jae add xor inc xchg push gs (bad) aam nop fs imul push dec fist sbb or jl pop movsb pop mov mov scas (bad) fcomip iret dec mov adc sub pop into mov out mov ljmp pop or scas stc mov jae scas sti (bad) push icebp decl inc fist cmp mov mov jg inc pavgw ja add sub shrb outsb rorb inc loopne mov add call add leave push sbb jp (bad) sarl sbb pusha ja add (bad) enter aaa pop es icebp ret and cli or out pop fwait int mov andl push montmul cmpsb inc inc ljmp sub xor daa sbb add addr16 ret roll push icebp xor and jp and mov jg clc mov ret fmull push mov clc cmp ljmp pop or push mov loop movsl decl std into or and and mov inc mov loopne mov and xchg inc xchg ja outsb cs mov cli iret pop pop (bad) adc push push cli movsl aad iret add ja les in or and or inc shr mov testb dec fsts mov imull inc add adc scas test scas fs adc or add mov enter and jbe sub fs movsb popa sub inc hlt add sbb xor outsl dec aad mov loopne mov jns pop add outsb clc rcr decl or lcall movsb lret mov pop lods ja shrl jb arpl (bad) push test js jns popa fdiv stos fnsave clc push ret sub push add or adc mov js dec fsubrs ds daa push iret pop push cmp or pushf das sbb cmp lods lsl movzwl push ja enter xor add int3 call pushf std pusha (bad) in enter out or adc dec scas pop or xor xor sub cli or or add inc orl push loopne xor or cmp ljmp jecxz mov ret add int cli stos test loope lcall fidivl in add lret repnz sub mov sbb jmp mov add outsb cld js lret push inc jae xor lcall pop das mov push cmpsl push dec icebp push sub add adc sub jg mov adc push adc push aad iret mov icebp outsl (bad) sub lret lods ja dec fdivrp call mov stos test in cmp aaa dec in jp cld xchg faddl and daa mov cmpb jl sub clc mov pop ret push iret ja jmp rcrb lahf or and mull fwait sub sbb lods xorl xlat push clc sgdtl iret addr16 sub mov inc add les mov mov test ret or cmp ret jl fild (bad) pushl inc push insb rcrl push jmp fwait mov popa movsb dec aaa jg in inc es dec hlt and insb add inc jmp or test addr16 add rorl lea push into sbb imul mov les jns mov shll cmp or add or or mov push jo mov enter test mov xlat test mov pop shrb xor mov lock rol (bad) cmp inc cld inc and loope mov jecxz adc adc jb inc cmp icebp sub cmp (bad) jo push xor idivb adc xchg xchg sbb mov fcomps (bad) jge scas sbb jnp jo jne and insl mov push (bad) xor sub ret faddl add xchg iret xlat in hlt jp adc (bad) lock sbb js bound out adc push add mov add and jge or imulb sbb pop push enter (bad) clc inc loope les jae popf scas dec inc clc aas xchg sub out insl sbb cwtl mov or lock scas and out imul or cmp mov xor scas adc and add pop cli inc mov repz inc loope ds inc mov jl jle cwtl pop imul sub mov loopne pop roll mov sub inc test xor jo jnp test and or fstl xchg inc sub push xchg dec popf jne cmp push call ret or inc push lcall inc (bad) aad pusha push fbstp push sbb adc xor call imul adc sahf and xor mov mov loope icebp loop inc repz xchg or cmp push cmp test (bad) push jnp and scas jp adc js arpl cli or xchg or push in loopne test in adc shl cmpsb shl fmuls in (bad) stos push (bad) adc outsb inc movsb addr16 movsl mov mov movsl and les pop andl cltd pop lcall pop fiaddl push push mov test xchg les andb cltd and and add mov or out jp sub cmpsl and adc push (bad) fs push imul xor push xor add mov cmp fdiv sahf cld fwait pmuludq mov push shl pop jb out sub sbb mov and and pop ss dec out adc dec pop ret cltd or call les cld rol rol pop sbb pop mov lret lods int push sub gs call push (bad) adc int3 mov sbb nop (bad) mul shrl dec push stc push push sub subl pop (bad) aas in pop fldt ret faddl mov sub xchg dec add and adc xchg push cmovne and les test cmp clc inc push or loopne mov lock daa imul lods clc or nop mov add or decl mov inc nop into jmp add inc dec fwait int3 fidiv idivl nop (bad) fisubrl mov and gs mov sbb sub xchg hlt call add or cmp cmp ret xchg dec scas leave jle add push jne inc and decl lds jecxz jae inc fnstcw (bad) push adc sbb dec repnz push fist repnz (bad) sub pop or or push mov xlat push pusha cli and sarb ficoml adc xor subb loopne loopne jp (bad) fdivrs jl cld inc movsl (bad) pop push pop inc pushf inc xor adc and mov js fwait daa outsb push push jle xchg jp fsubl xlat mov popa jecxz int3 loopne fistl iret fwait bnd ljmp xchg xchg sbb out jo sub (bad) lahf add (bad) mov or mov (bad) pop mov rorb dec dec inc xor inc or bound loopne insl in lret loopne das jge rclb inc sbb (bad) xor imul idivl stc sbb push cwtl (bad) notb sbb pusha push push (bad) pop or je decb mov sub xchg clc ret mov inc jl mov mov cld ds inc mov jmp dec movsb lea ret test cld out insl (bad) shlb (bad) cltd mov mov jge sub sbb inc call outsb nopl xchg sbb loop orb inc xor dec arpl test insb xorb add dec cmovo fsubl or arpl scas jmp imul stos decb sbb mov stc jp sarb xchg lret in sar cmpsl fs sub lahf fiadd mov add inc cld add aad popa popl out dec cwtl push rorl push (bad) push xchg outsb test bound popa pop adc xchg pop jge add or divb or (bad) xchg ret or push push imul mov cmpsl push mov pusha xchg add sbb or (bad) xor xlat push mov fistp jp stc movsl sahf ficompl lcall sub xor int inc xchg daa pop nop add inc loop je dec iret cli in sub pop pop pop mov pop fwait movsb test mov add (bad) (bad) shlb lods xor cmp mov mov pop insb stos dec push negl aam inc push cld (bad) out rolb lret inc pop adc call aaa push mov aas lock (bad) cmp mov pop push mov movsb fsubrp pop notb mov insb test mov les jge es iret insb inc sbb movsb out repz mov test pop jl outsb xor adc mov mov xchg push aas sbb xchg mov push shrl icebp lret insb popa out idivb repnz sbb jp test mov jb or jmp (bad) sub lock adc ja fisubrl add clc insl mov dec sub dec in mov add loope mov ja insb fdivrs popf (bad) jne inc aaa sub mov jno adc xor mov xchg arpl jno mov fbstp fildl cmp jae out mov jno js mov fidivl int lret loope mov enter andl lock jne loop stos (bad) and pop or int rsm call xor cli adc int push fstl add clc ret ror cld outsb hlt les adc add pop (bad) je mov pop mov rclb cwtl sbb ret out into sub out push das popa insb (bad) incl test pop or fistl and jae movsb push (bad) mov lcall imul es mov in xchg fisubrl mov mov dec pop aad and pop insb out mov mov or push jns aas jmp idiv into rol repz lret stc enter roll push lahf dec mov (bad) push inc pop iret aaa sbb bound xchg test fwait inc push repnz xchg jp pop add or push loopne subl lcall dec arpl leave adc push test aas dec jae cmp int rcr xor push cmp (bad) push add movsl scas sub push mov push jne js adc or mov sahf inc mov shr push jp push cmpsl icebp ret repnz xchg xchg stos aad or dec mov pop mov push lcall das (bad) xlat test adc out push in mov sti pop sahf out or push test and sbb xor jle xchg test sarb mov and mov mov cmp imul mov add cmpsl sub and lret mov mov jns repnz loop jae mov je lret jae mov adc mov repz lret jae fbstp shrb cltd shr repnz sahf xchg jp enter add jns rorl cmp push jp aaa xchg mov jl mov mov mov scas cmp out and add out mov outsb ja jns not inc rolb mov shl mov into dec jb out cmpsb into jecxz mov repnz sbb inc xor test cmpsl cmp out inc icebp (bad) ja movsb aas out das out mov adc cwtl imul add mov jecxz in test inc testl inc rcrb dec push mull push div adc cmp imul mov inc cmp in and jns iret div dec test sahf lret fwait dec outsl addr16 ljmp outsl test repnz inc cmp out cmp ja pop push xor jae xchg (bad) pop test lret les push mov sub repnz mov sahf add jg das pop cltd shr addb push cmp pop pop sub xchg sbb lahf out js xor jb lock jl push shufps sub sub or ret push or imul cmp mov pop cld push sbb iret scas out sub out sbb inc (bad) pcmpgtw push nop xchg dec in icebp idivb idivb data16 notl cmp mov ds dec repnz ret dec cmpsl repnz (bad) imul pmulhuw ds jne,pt cmpsb push mov rclb push stc (bad) out sbb neg bsf sbb clc mov mov loop pop pop add test data16 mov test std ficompl inc mov ss jnp rorl push xor adc jg mov cmpsl sti push (bad) movsb push leave push adc push stc mov xchg rol cwtl inc cmp xchg iret repz cmpsl loopne cmp dec sti ds ljmp fidiv loop jge mov mov test inc pop cld fwait shrl or out loopne mov loope aas repnz test or fildll sbbb push stc cmp add aad fisubrl xchg mov loop stos pop incl sub mov fwait fs mov jl sahf jp jecxz mov push std sar dec shrb aam call repnz dec dec push scas push js int dec ss fistl cltd add loopne jmp inc cmp sbb xchg loopne outsb nop pusha mov mov cmp xchg mov ss in push dec sar bnd cli sbb imul xlat decb and adc cmpl jmp cmc mov jb jbe daa dec mov jmp inc repnz rolb rcll jg std or jae mov push sti popa icebp add je es inc mov cmpsl sub or sub pushf out lret xchg mov in (bad) mov jmp inc dec jp sbb pop adc getsec mov cmpsb mov fldt dec sbb loope insb cmpl lahf sub es fcom or (bad) (bad) cmp (bad) js adc push arpl inc shll scas and jg cmpsb shll int ret inc adcb cmp pop adc xchg cli or mov (bad) mov or fistp mov jnp xchg pop cld call (bad) xor mov ret or push mov in scas jnp mov add clc gs or sub adc scas or movsl das push fcmove xchg cld (bad) in bnd es popa cld leave lcall inc sbb push inc sti stos test xor push jle mov mov push (bad) pop mov shrb imul loopne pop cmp shll jb sub lcall sub into sub adc dec sbb or jg push sahf in (bad) dec xor push fwait jmp cwtl clc rcrl stc inc jo xchg (bad) fimul and in rorb jno and out pop ret les or test inc add mov add rcll nop sbb les cld cmp adc push push mov add xchg ds mov pop pop unpckhps movsb pop mov ret cmp pop fsubs bound enter lahf or fwait addr16 scas or and rclb aaa xchg lret jg bound mov mov int repz outsb mov xor mov push sahf loopne mov mov shlb into jecxz inc xchg sarb mov cs (bad) je adc push inc es (bad) xchg push (bad) lea imul dec in sub movsl insb (bad) pop inc loop fisubl inc pop push ljmp in shr loopne inc das jp sbb add add pop call test test dec jnp cli mov cmp aad loopne sub push dec jl mov cli scas add fidivrl (bad) xor adc ljmp xchg incl sbb test inc aas jb negb loopne push cmp mov mov add mov clc mov icebp cmc dec std insl jge mov push jge shll rclb xchg xor sbb pop pop popf push mov in or and inc movsb sbb iret ja sub jp inc pop jbe add inc cmp push or add sarb push jb loope fwait cli dec (bad) or das loopne (bad) mov std push in test push in (bad) mov inc ret or pop inc mov das mov sti xchg mov xor cmp mov ja fs loope push ss pop scas ss lods test sub jl pop rol pop mov jmp mov loopne inc in lods cli repz ja cmovns jle pushf push pop sbb orb mov push push jp sub test jl cld and imul cmp cmp ss pop dec rcl inc cli (bad) jge clc decl sbb dec sbb or dec mov pop std pop xor test pop out adc add adc adc or xor push cld ret pop fild sbb cld sbb ret int3 push inc fstpt clc fnop jecxz stc inc in add adcb inc sarl ds mov movsb pushf ss test mov cmp pop and push or lods jecxz or dec outsl adc mov or mov scas xor dec jp sbb ss xor gs ja jl push inc ljmp adc inc cmp jns mov mov ja aaa sbbl xor xor jp push inc outsl jg popa cmp outsb clc xchg mov xor fisubl adc aad mov daa xor push aaa out or or (bad) jbe mov sbb jl and loope popa loop mov adc das leave xchg add inc mov sbb orl add (bad) sbb jns or inc mov in (bad) imul add adc aaa ficom push test fisubr sub and cmpsb sbb imul inc (bad) xor rolb sub sbb fwait or jne pop mov and jmp xchg pushf and pop sbb in icebp lret stos lea pop jb,pt les mov and in xchg jl push test das adc sahf std and xchg pop jb sbb cmp int3 test pop jle and mov insb shll pop push lret aas loop mov nop stos sbb adc cld mov inc and (bad) xor out lret adc mov sub adc adc (bad) pop (bad) jp lods jnp test push sbb fwait aaa mov jns neg inc or jl fwait aaa loop dec fwait push xchg imul fistp mov push lahf fwait aaa outsl fidivr scas and out leave xchg sti cmpsl repnz ret les sub (bad) aaa outsl les cmc loop ds dec cltd sub stos xlat adc aaa jne popl js mov xor int3 and push jge inc add int clc out outsl mov sub add push inc dec mov cld fldcw insl add or or stos lahf icebp lock test dec mov pop jae pop inc mov xor jo and mov jg scas mov (bad) lcall inc dec ficoml imul rclb sbb push jecxz sbb loopne mov stos (bad) into or lods jg sub mov xor xchg ljmp mov ljmp push insl call and dec rolb xchg icebp rol rcrl push std add xchg xor mov imul inc lcall pop inc and dec or adc dec js cld ja xor inc ss mov scas add aam mov out into iret inc and scas loopne and xor xor push jnp sub pop adc cli mov test inc pop pusha sub mov (bad) popa inc orb in xor in mov and popl lods out jg adc repnz lahf fidivrl in jb mov fwait clc lahf test in (bad) cmpb pusha clc scas push out push (bad) adc dec mov mov test push imul inc sbbb shll or sbb mov push fcmovb adc and ret clc pop enter int les icebp mov or add lret pop mov out repz pop scas mov or and push push js xchg fildll cmp mov dec (bad) jmp push out add adc leave imul movsl or ja js cmp lret xor rcrb xchg in or mov repnz call sbb test sbb (bad) fwait cli lea ja inc dec add xchg idivb xor pop (bad) mov or stos pop adc lods stos repz adc add or add js shrb add shrb mov clc fcmovbe rorl jmp sbb push lock out xor inc sub xor and test mov or stc inc fist and adc mov push xchg icebp push insb adc divps outsb inc (bad) out adc sbb push lods cmp incb sub add int pop inc xchg jp add mov test lret jp loope pop dec add pop add or ss mov and stos xchg mov add push lds inc add (bad) dec jns into in adc lahf das jbe push hlt mov xor js jp push jle (bad) adc sbb ja inc push sbb das jb push leave jp jge sub cwtl pop push xor add lahf ljmp fiadd imul je adc fsts mov cli aas cmp pop inc mov jb or pop dec fcomps negb jb push adc push mov fcomip inc sbb xchg cmpsb cli pop rclb clc dec mov movsl outsb jns inc add lcall lods mov push or repz insb ja cmpsb jp ret xchg and jb xor mov pusha jmp sbb push add ja cmp add mov rcrl jg sub lods mov or (bad) js hlt xbegin or inc and mov fisubrl add lock mov mov out and pop push cld mov cmp je mov jmp sbb push mov inc mov (bad) in icebp inc sub push frstor icebp scas out push ds mov clc dec nop push add adc fdivs cmp jno fimull inc (bad) sbb sbb lahf ret lcall std ljmp cmp popf loop call fiadd mov cmp inc mov and loop push mov sbb mov push xor inc sbb add fiadd pop (bad) add mov push push push push repnz inc inc mov sub enter push add sub ja (bad) sbbb es mov ss sahf push arpl cmpsl jmp jae cli push fbld jg cmpsl mov sub sbb xlat mov mov roll loopne es test cmpsb ss mov (bad) xor pushf xchg mov sarb push mov and fucomi mov mov cli add loope ljmp pop add lcall dec mov ja stc push clc xchg push mov in shld pushl frstor fsubrs or clc cmpsb dec inc push imul out mov clc adc sub insl sarb inc cmpsl sub push addb or fstpl push xchg imulb lahf lock aas mov cvtps2pd rolb clc outsl ret psadbw in push or xor sub push ss sarb andl lahf lock inc dec inc xor and cwtl (bad) cmp pusha pop lea mov inc in ja add sub add or and inc pusha cmp cli lcall (bad) lods pop rcll inc push xchg pop iret negb xor push fidivr adc cmp sub les (bad) cmp jmp add xchg pop cmp into test xchg dec sub int cmp cltd and test inc outsl jg subb adc xchg addl xchg pop sub jmp in jle fstl imul inc jmp pop sbb inc stos test sub inc loope push (bad) mov pop adc xchg jnp pop inc (bad) push xchg movsl pop or xchg jae push sti dec lock push ret xor (bad) imul ret add adc dec add push ss add das (bad) jecxz xchg jecxz (bad) ja xor mov jg xchg dec sub test xchg jbe and jg (bad) stc cmpsl pop xor ret inc sub fstps mov xchg pop out lcall mov ja add sti shrl adc xchg lods pop jle idivl sub xchg addl test jg aad sub icebp test pop jmp xchg push test addr16 pop call fstps adc sti pop dec sub lds repz rol xchg hlt jmp dec pop cmp cli and xchg data16 outsb (bad) popf push xlat jg inc xchg (bad) outsl jb ret pop push stos mov sahf inc hlt sbb push jnp repz loop jne cmp loope lret dec sahf push push cmp fildll cmp dec (bad) lcall adc or test xchg pop sub fisttpl icebp inc pop sub dec xchg sbb adc xchg stos scas fildll aas push xor adc pop loopne lock out test xchg bound fs adc enter iret test xchg call sub out add or test xchg dec sub (bad) adc xchg mov push imul (bad) incl inc pop jl nop cmp das jns clc jns shr mov xchg cwtl xor insb jno pop and enter aas push addr16 imul jl aad outsb aas out (bad) jge pop add pop cmp icebp in (bad) incl fsubrl pop push js lds repz ja test je outsb ror cmpsb xchg pop or (bad) sti jg xchg pop sub (bad) adc push sbb mov xchg pushf pop jne leave xchg inc adc jbe xchg call xchg jae jnp lret push enter into push testl add daa fisub (bad) lahf inc xor call push clc rcrw (bad) gs inc sbb add pusha cmp loopne neg arpl dec pop jno les data16 pusha ret loopne xchg (bad) dec insl xor dec (bad) push out jl mov fadds loopne aas push imul add (bad) jae outsl outsl mov mov data16 bound cmp faddl inc fs sub xchg out or (bad) fdiv sbb call inc pop jl lret jle negl jo pop and jbe dec cld (bad) daa lock inc daa fiadd call aaa into pop xchg push lahf mov jae out fs (bad) inc sti dec inc insl sbb ja loope push push inc loope inc jp cmc fs incb mov loopne dec and pop ret cmc inc inc push xor adc scas movsb xchg pushf push inc clc scas mov pushf jp mov ja icebp pop mov outsb gs adc test aaa pop hlt scas fisttp fstps sub cmp test pusha lret insb imul adc pop lea lds lret adc xchg mov lret push adc ja adc imul pop or cmp les ficomp sbb ja push and jno sarb imul test xchg inc jl cmp pop stos or dec sub js or jl cmp push xchg mov jg imul popf pop std ds popf mov xor testl adc fisttpll adc pop xor rep pop cmpsb xor mov test mov add out test push cli rorl fisttp imul pusha jl clc lock (bad) cli mov inc push in pop cmp mov push sahf loopne loop repnz inc aas push dec loopne cmp push push rcll jo cmpsb xchg test test (bad) cmc lea sub ret mov inc xor push sbb inc and iret adc and jne lahf dec sub insb lods dec aas mov (bad) xlat andb sbb in push jo inc mov mov lahf or mov mov loop fwait push xor addr16 and in push mov sahf push js mov mov jo (bad) dec sahf aam test pop sbb xchg xchg jo ja enter sub ds subb xchg ss cmpsb repnz roll cmp jne xor sbb xor jno out lds sbb sbb or in xchg cmpsb fstps out dec movsb jecxz aas push pop shr cmpsb clc jl ret adcb sub jge mov mov mov fnstcw sub sarl ss pop repnz js leave add repnz ds ror into jns xor xchg loop jl dec cmpl jmp mov or mov ret enter ret pop lods push inc xchg ljmp adcl push adc iret cmpsb scas call daa outsb or sbb pop push push cs (bad) lcall adc mov push les mov das mov add and sub rorl rcrb mov out scas fmull adc xchg adc jl jge ficom out bound push fxch jnp dec inc jnp jae incb inc repz dec pop daa fistpll loopne call inc (bad) pop outsl jp iret cmpsb add jmp (bad) push out pop cld pop sarb stc pop out testl xor and xor inc aad repz imul inc (bad) loopne fld xchg out jnp push or das enter mov scas push xchg bound ds mov inc and out insl push pop mov aas mov lds jp xor out ret (bad) add dec add je (bad) test mov enter or pop pop cmp call aas cli pusha mov mov inc jnp mov insb (bad) push out jmp fs fcoml jg insl xor jae neg daa ds lcall into fimull and push lret popa and lahf jne and inc jp and jnp or ret mov movl push mov mov negl dec inc xor or js (bad) sarl jo sub or leave pop add iret jl loopne ja insb leave (bad) ljmp pop inc imul jnp fadds dec jns xor xchg cmc mov or subl test xchg inc cmpsb stos push pop dec xor movsl lds repnz gs dec sbb rcr sbb (bad) push in mov repnz sahf sub test jl or fs int lahf cwtl add (bad) mov jne mov mov push push stos jecxz (bad) sbb jg jecxz out jb cmp je jp inc out cmp inc sub push pop jae or xchg mov jbe out ja outsb aaa mov imul addr16 ja dec sbb or push cmpsb stc test add lcall loopne loop inc push fisubl sub sbb out pop add jbe mov pop mov cmp fisubrl loop ret lret ficoml inc punpcklwd (bad) loopne adc cmpsb add adc jbe pop popf je jecxz push repz rcr adc movsb mov dec cs or sub xchg (bad) das and insb pop mov mov push repz in mov xchg (bad) loopne jo mov xor xor ja sbb push push xor ss sub jecxz xchg rcll daa (bad) cmp push or fimul outsl xchg jp pop and jmp mov (bad) xor pop mov (bad) push inc negb jp pushf mov mov sbb jl pop repnz (bad) mov (bad) imul mov inc iret xor fcoml mov int3 jg inc sub jp or and or xchg insl add popa pop leave and (bad) mov arpl push test inc push jno sub arpl push insl imul dec add and scas push stos inc movsb das mov and pop push sub cwtl jg sbb jnp ja test lahf push sbb ret in cwtl mov rorl data16 scas push inc leave ja,pt int3 xor add xor xor and ja aad xor inc bswap je xor scas aas jbe mov dec jo xorl jb outsl arpl add push scas xor pop inc xor lods pop adc inc mov leave test sbb sbbb inc mov dec push push mov push mov outsb dec add push sub pop insl or dec xchg adc loope jg sbb push ljmp xchg test pop aas inc fwait adc lods adc sub aam jae out cmp pusha jno ja cli fwait scas mov jle dec aad sbb push (bad) ds lock imul int imul out xor sbb jp out push bound ja push aaa out xor ffreep push (bad) popa dec jno (bad) jge repnz push (bad) out out push out inc (bad) dec jp sub shrb bnd data16 jno out icebp out lods xchg xchg add out ja sar (bad) (bad) pop jne pusha ja leave jns loope jne push pop mov (bad) out je push adc movsb inc push push jmp push mull cmp cmp scas sub insl jo push cli les push xor mov cmpsb adcl xor fdivrs in pop pop iret cld in (bad) fldenv sti test push lret rcrl jb jbe pusha fxch rorb lods xor pop dec inc addr16 insl add add push jo jl (bad) jg fcompp pop loopne pushl bound cld (bad) xor fisubl loop jne push fistpl or fs fidiv int sub (bad) js test and and and pop flds or mov jg call (bad) ljmp mov (bad) sbb push pop or call jg mov xlat dec jae adc les sub aam addr16 jecxz nop push sbb out pop push jecxz sbb add or in inc ret jecxz mov cli out sbb into pop push mov pop xor cmp sub xchg insb mov pop stos pop jae or xchg clc cli test sub mov cmp jo ja adc adc jmp jge sar cmpsl cmpsl adcl inc inc fadd shrb stos mov jmp rcrl xor nop ljmp std sbb xchg fistp ds sahf jbe inc ret sub pop jle sbb mov cmp add mov push or jne mov dec ja sbb loop cmpsl sub jp jmp xchg rcll jecxz jl,pt add xchg dec ret (bad) repnz iret pushf fiadd fsubs pop bound pop push cmp jbe cmp rorb push imul adc fimul clc dec xchg test ret repnz dec push arpl mov push movl loopne bound adc xor mov jl pop fcmovbe ja mov pop inc lds lock test push jne loopne mov and push inc lcall mov push call inc push add push xor xorl test ret ficompl movsl outsb mov cmp rcll fistpll addl xor into ret stos movsl push adc mov gs push dec sbb aad lods add ja and outsb mov jne mov outsl ja adc stos pop repz xlat and (bad) or gs aaa dec xchg adc xor outsb and pushf push lods xchg (bad) mov rolb cmp das mov ret add jne fisub push or imul sbb imul loopne cld mov inc outsb jmp bound jge popa xor push lret sarb ds pop addr16 mov aam pop pop cwtl ja jg and fiadd loopne imul dec push pop xlat xor inc push ja sbb loopne ja jns jp out call mov das pop ffreep push rorl jp fldenv push push loopne stos test jge push jno jle popf dec cmp dec (bad) (bad) (bad) cmp cmp mov lret pop adc push xorl ja (bad) jae insb and dec xor lcall js out sub inc call push mov cld jecxz cld cmp int3 int or lock pop loopne mov lock insl pop outsb es ja jge push int3 ja mov push push fistp add mov and (bad) add or push adc fcmovb jg scas call sti pop scas sub test cli test hlt lods inc das lds test inc xor test negl clc lret mov popf orb cmp cmp ret adc jmp dec ds xchg fiaddl push es jnp out xchg sbb leave inc repz and sahf pusha jo loope nop int in pop dec dec addb popf icebp xor lea shl add out pushf cmc lea loopne imul mov mov adc out or push pop adc xchg cli push jg xchg dec jge rolb sbb inc and xor ja add (bad) leave ja xor sarl int aas mov test pop or pop int mov es imull dec add lahf add ljmp subb xor imul fisubrl dec sub mov sbb or pop cmpsb jp push cli inc into js xor inc add fcmovne push je rcrb ret dec pop fdivp xor lcall and movsl push leave mov cmp icebp dec cmp pop fisubr repz in push imul sbb sub mov push mov pop xor dec or (bad) js cld data16 or jmp sub sbb daa jno aaa mov push scas cs ljmp mov cmp lahf lret push fs data16 pop popa mov dec mov sub adc ss sbb lock popa jno mov popl clc stos xor imul stos outsl mov jns and loope push and nop inc sarl push in into xchg ffreep leave jbe xchg mov out call or rcr push pop pop sbb add dec adc ja adc xor sbb inc push aaa push jp jge cmpsl mov sub lock jno test clc fstpl pop pop mov cmp imul sbb cmp out iret push pop scas or cmovl sbb shlb outsl (bad) loope mov jle mov add fistpl addr16 idivb addl adc loopne xchg jo dec popa sbb push cmp cmp popf movsl fidiv nop pop aas loopne ja adc or dec mov repz (bad) mov and fisttpl subl push jecxz mov fnstsw ja push in fisubr xorl add jbe or ror fcoml loopne imul dec jae repz inc mov lret jnp mov xchg add roll inc flds jo pop loope pop xchg push xchg stos rcll scas pop cmp mov loope inc bound notb push or aas ja mov or addr16 (bad) jmp push outsb inc ret mov xchg iret jge arpl scas out dec mov lods fs addl adcl decl mov sub push stos repz jnp adc sub sbb add test (bad) sbb repnz push and mov bound cld push pop or orb rorl dec insb sbb inc jmp or adc sub pop and xorl out cmp sbb lcall pusha push ja jge test xor insb pop inc scas test (bad) cmp test (bad) mov stos aad arpl dec push inc das sbb cmpsl pop mov sarl (bad) and dec mov mov repz loop dec dec and sub test js adc jg dec adc adcb cmpsb inc cmp icebp aad ja jae dec subl enter cs mov mov enter loopnew (bad) mov aad iret test rorb mov xchg push add jg inc je out pop pop xchg mov inc daa lock test sub clc cmp (bad) or lock and data16 sbb cs fistl and pop or pop fs inc or dec js pop or xlat lock sbb or lcall xor ljmp xor or sbb cmp ja mov sti inc sub xchg loope rolb sub pop inc jg sub imul popa or add fdiv ja outsl pushf inc sbb fisubr pushf cmc add (bad) mov cs sub shl pusha mov stc hlt pop loopne sbb mov jo fs test mov mov jo int inc inc outsl xor stc outsl cmp fdivl out sbb dec clc xor xor sub mov fiadd jg cmpsb cmp sbb mov push test faddl mov adc stos dec movsb aas adcl aam je mov into notb xchg (bad) js add cwtl andl test pop cltd jge xor ficompl inc dec sub hlt jo xor adc shrb test mov test dec inc ret inc ret mov dec test insl emms test mov mov dec inc (bad) xchg inc movsl xor dec xchg xor inc inc mov mov pusha or lahf sub or and call xchg adc bound pushf jnp sbb sub push pop sub pop inc js shl adc add ret push pusha movsb and fwait stos imul adc jbe add sbb push shrl dec push dec stos adc rorb lea mov dec jg jne pop mov sub aaa xchg sub or adc push cmpl (bad) repz sarb xchg sub cmp imul ja jp fcoms cmp lahf andb push mov pop jmp movsl test push inc pop sbb aas sahf je aam sub mov ja jmp pop mov and aaa lds cltd fdivrs mov pop ja adc add addr16 movsl push pop cmp jmp push mov ja ja scas les pushf mov nop jge movsl scas (bad) add xlat add lds sub sahf pop aad inc mov jg mov push xorl imul pop inc test pop iret fisubr iret ja pop outsl test insl dec fiadd test ja push outsb cmp add icebp add cmp and jl es rclb or shlb aas cmpl pop sub jle and movsl jnp xchg push lret mov arpl xor test mov xor repz xchg les adc add mov cmp outsb add jp pop lds inc pop mov outsb rcrb add pusha jne out pop outsl xor adc aad jmp push sbb xchg ret xchg fisub ret jne jo adc or jge jno dec fadds sub lods cmpsw pop adc inc push add aaa dec out sbb jns (bad) fcoml lret xlat sbb in jns loope ret push mov cli mov jle outsb inc call mov mov insb xchg sbb inc sub xchg es mov push js xor push (bad) (bad) gs mov pop and push jbe mov std fistpl ficom (bad) ja fadds pop pusha pop popf xchg arpl stos adc jae inc outsl dec jl repnz push ja inc sarl fisubr das sahf jno inc ja lock mov rorw ja (bad) sbb outsb inc das pop pusha aad cltd adc mov popf out jecxz insl adc outsl imul ja aam mov leave sub imul adc or sub push andl push in loopne inc pop fadds ja xchg push adc mov add cmpsb lret int pop outsl mov pop dec in inc imul subl jl mov in or adc and jge xor call xchg pop sub adcl add ja cmp xorl sbb ss sbb rol leave xor outsb xor xchg sbb (bad) mov pop ljmp sub mov mov (bad) sti xor sbb pop rorl inc cld lds movsl mov ja arpl ret stc mov mov add or xchg ds jmp xor dec pop iret mov pop and push add sahf rorb fistp mov daa inc outsl (bad) sbb sarb insl ret or movsl push insl lcall hlt mov imul jp leave or ljmp (bad) xor xor test add inc jl syscall scas nop fsubrs ja sub cmpsl pop fcompl inc mov pop and imulb jne jns std pop sbb jl leave pushw repz mov roll je xor inc pop push js jno pop xchg rcrl aam push cmp sbb pop inc shll testl inc jmp jle xor repnz xor popf std movl out sub je cmp hlt or pop cli jae loope push test mov and xchg mov cwtl dec add lods jmp and and mov sbb rorb cld and mov inc loope shll push fs mov ds push jne pop push orb and inc stos jp mov fs sahf ret add mov push mov push sbb je popa xor rcr add cmpl call mov mov ss lock fwait imul imul stc sbb push sbb sti cwtl rorl addr16 orl adc daa and sub dec or into neg inc aas ja cwtl imul xor sahf push nop push push sahf push push pop sbb xor fs jbe push (bad) js and cmpsb or pop ret cmc or and loope cmp pop ja ret mov sub stos xor test sbb jnp add add imul sub pop subb pop emms sbb mov inc ret add test jle cli and (bad) call inc cmp jp dec aas icebp pop cmp cmc push jg rorl sub pop sar pop shrb jmp ja mov push and or mov xchg mov (bad) dec ja mov (bad) pop add cmova pop inc or pop out sbb xchg jbe mov ficomp adc or insl iret loopne or mov ret pop out sub pop jp pop jo out adcl xor scas adc das mov loop icebp fwait xlat add js imul adc sti lcall sbb cwtl add sbb and mov std or in scas push xor fwait repz scas lret insb inc outsb jp fnstenv (bad) jmp loope cmpsb ret (bad) and adc pop hlt ret movsl jae call push lock xchg in xor sbb pushf xchg add adc mov or out test push (bad) out dec rorb sti (bad) (bad) jns and nop test jg aas xchg xchg mov clc call xchg xor sub adc (bad) xchg out lds js addb in (bad) (bad) (bad) fistp mov into out add rclb jmp cwtl jp push dec leave emms in imul pop arpl ljmp (bad) lcall xchg bound fsub cwtl call jae nop pop mov adc (bad) lcall mov pusha (bad) push dec mov fnstenv pop sbb lahf ret push outsl lock pop popa push mov and ret inc int3 inc lock (bad) (bad) cmp push xor jb fcomp adc jmp (bad) loopne sub mov xchg cmp adc out push imul xchg mov jnp cltd leave jmp cmp (bad) lcall and jnp ja mov (bad) inc jno clc jle dec or test arpl fld push mov inc imul std ja mov outsl jecxz,pt (bad) (bad) mov jl pop pop rcrl iret pop out add mov imul xchg test jg adc push or pusha xor imul pop mov jnp icebp decl jae sub int pop insl and lahf cli dec xor enter dec inc jp lret cmp sahf cmp inc test push jg ffree mov bound inc into inc in pop insl push pop cmpsl nop add dec mov (bad) (bad) call xchg fdivr pop stos ja xor andb mov (bad) (bad) incl push dec push test inc pop or ret ss and pop mov or ljmp ret or out jmp rcr and addb aam in (bad) (bad) fisttp sub paddsw xchg pop in adc mov mov (bad) (bad) (bad) call push (bad) roll (bad) jnp fdivl cmpsb lahf aaa sbb pop notb push inc (bad) (bad) call pop sbb dec adc mov cmp xor fdivrp (bad) (bad) dec push xor xor xlat lods add aaa or (bad) (bad) ljmp mov ljmp cmp hlt in xlat in ficomp pop (bad) incl in ret stos js mov out sub insb add jecxz out sub pop and (bad) (bad) lcall sti pop and xor mov xor xchg jbe incl cld jg fldl2t xchg xchg sub addb jge (bad) ljmp mov test (bad) ljmp push xor mov (bad) (bad) decl xor xchg pop lcall xor xor leave pop mov sbb (bad) ljmp pusha sbb or add std (bad) pop addr16 insb std inc test (bad) (bad) incl (bad) lcall in call lret xchg data16 (bad) (bad) jg inc arpl xchg dec and inc mov test cmp (bad) push out inc lcall dec push jno cmpsb insb mov xor sub dec mov mov (bad) (bad) (bad) in arpl dec int3 jbe pop pop jmp add sub pop pop aad xor sub outsb push (bad) (bad) pushl incb mov push mov push sub inc loopne incl icebp pop jle push rolb or outsl cli decl lock jecxz leave inc mov add loopne aas psrlq add loope dec call or ljmp gs add call add xor add mov mov push stc jg cmp (bad) pop or scas sti lods push cmp iretw push adc fs (bad) decl outsb adc cmp xchg (bad) dec and jo rclb pop (bad) cmc lahf fcoms std (bad) jmp lock inc mov xchg mov repnz xor sarb clc (bad) jg loopne fldl pusha loopne lret mov das mov fisubrl sub shl (bad) decl call lret (bad) xor cmp clc ja cmp idiv inc cmpsl data16 lods cmp jl cmp mov push cs arpl lock gs inc xor lock or dec cld (bad) (bad) (bad) cmp int3 test mov into push clc mov pushf loopw mov mov ss aas setb mov mov (bad) aas nop pop add xchg sahf cmp scas dec sysenter mov dec in mov add mov imul ja (bad) aam mov mov out dec out (bad) (bad) (bad) call lcall cmp mov sub push in push pop push sbb shrb jmp adc and sbb cltd ds decl (bad) arpl out fnstsw test aas inc jle or push call xchg and pop mov popa (bad) gs mov repnz (bad) (bad) (bad) jg and push pop sub mov push out add out in cmc out in (bad) jmp push pop sbb out cmc xor pop add adc cmpb jge mov pusha sbb cmp (bad) (bad) (bad) cmp mov xor or mov aad cld orl cmc int out rclb je js sub movsl insl mov fcoms cltd daa lea push clc div xchg ds xor data16 shl cmp data16 push icebp js push mov fdivrp (bad) bound mov xchg jo push mov push mov push inc mov scas notl loopne cmp mov sahf jecxz cs (bad) (bad) (bad) sarl pop cmp fxch push negb data16 jg or xchg xchg pop ds int3 int3 push loopne inc outsb sub (bad) (bad) add cmp or ficom ficompl push jmp in inc stc jg inc loop xor mov or ljmp data16 test nop bound in pusha aaa sub or int or dec insb xchg inc imul xchg ja out jmp jmp outsl cmp incb gs (bad) jnp inc pop popa daa mov jnp push popa xor jae sti pop dec jmp add jno imul jb sub cmp int add (bad) incl insl jne cmp (bad) pushf pop adc call sbb and jle fisub nop (bad) inc daa incl add imul (bad) cmp into and imul xor push iret ja push xchg popa jg push and or pusha fist adc add addr16 jecxz pop test inc pop orl jne pop adcl insl pop or insl aad aad ficom cmpsb jle into sbb pushl adc data16 jge loop ss pop or push push loopne lods sti pop (bad) mov (bad) icebp movsb xor ja incl add out stc fcoms orl (bad) lahf xor cld (bad) sti jmp xlat xor (bad) ja cmp pop mov fwait (bad) ds orl and xchg add jecxz and stos sbbl jg call push inc xor jecxz push inc adcl push les pop push inc pop leave add mov add push push push push dec sbb pusha leave add sub inc inc jne dec (bad) cltd xor inc add push (bad) add add xchg dec mov add mov data16 gs add add int3 add scas xchg xchg mov ss (bad) pop jg lret add mov icebp lret add (bad) loop sbb jb testb (bad) cmp sub (bad) (bad) jg push lea xchg pop inc movsb int3 add push fidivr add fisub (bad) in adc mov nop mov inc push push inc mov push popa mov pop mov adc or dec (bad) or fiadd push out test arpl (bad) fildll jb jne or inc imull not dec insl or push es sahf not out sbb dec and push imul mov fs jae out sbb imul es push sub adc nop (bad) push jbe inc jo imul adc popa outsb insb or inc scas jns mov add insb arpl push or push push (bad) fdivrl dec dec push jbe mov push push pop repz outsl xchg push adc insl (bad) loopne push or addr16 cwtl and dec mov inc aas lret add cwtl and cmp jb add ja cmp popl add jbe xchg sahf add shlb inc push arpl jae popa xor jno add js es dec pcmpeqd push push mov sub lahf pop addr16 fisubr cmp out mov mov sti or mov inc sbb cmp (bad) jo dec popa out xchg jmp arpl fsubr sub inc pop adc mov xlat ljmp into (bad) jb gs cmp mov and fistpll lds xor bound js sub out sbb sub ljmp push jecxz (bad) adc jbe mov or jg cmp dec pop sbb jecxz add bound dec mov out aas push jnp outsl ss or call jb mov (bad) push arpl cmp xor clts or imul mov (bad) pop jo xchg mov (bad) fidiv ja jns push insl jmp add lock cmp imul jns sti cmp push lret das inc out jne mov push push outsl push pop loopne and add repz faddp add jo push shll scas dec outsb mov div pop ffree daa dec sub push stos clc pop mov insb sub iret pop icebp pusha ret sbb je insb shlb jo popa popf notl clc jnp ss outsb sub fisub jne outsl xchg jnp mov push or add jmp jp jmp divl je arpl xlat pusha sarl jae dec (bad) jle shrb das daa mov lret je ja add fs (bad) ja (bad) jecxz inc bound popa xchg clc pop xchg pusha push push push pop mov repz daa pop pop je stos push xlat add aad sbb pop popa ret inc and pop jb outsl dec setg adc out inc fidivr push sub icebp cmpb fildll or insb sbb cmpxchg or icebp ror es (bad) xlat sbb jle pop sbb addr16 cmc hlt jmp or lods pop outsb inc push and or jae cmp insl pop pop imul mov arpl jno add out xlat cmp inc inc push and stos dec dec jmp (bad) adc push add push cwtl adc outsb jecxz or push mov push mov push fcomi cmp lahf dec add ja or insl cmp and pop push pop outsb jg sti mov sbb fisub dec ret jo or out adc pop rclb out scas arpl push lock add arpl lock mov adc sbb call mov jb jbe lret and jecxz nop scas add push loope int adc and ss add sbb lea xor xor mov pop or pop inc mov jno ret out fs addr16 sub (bad) sti push inc gs mov insl xchg imul daa das xlat xor packsswb outsb sahf loope,pt ucomiss inc dec and jo (bad) xor shrw sub dec adc adc xlat jmp or (bad) jae lods mov out jl push and push outsl mov adc (bad) adc push cmp lret push roll fcom or lret (bad) rep pop lds pop cmpsl and dec (bad) mull pop scas add fwait icebp (bad) andl sbb ds stos jmp fmuls xchg mov shl ja adc ss pop mov ret sbb mov cs mov push out call dec jl sbb jbe imul or pop insb inc jae sbb jno fwait shrl repz movsbl insb cmp sub inc addr16 jae les out dec rol outsb mov fisttpl cmpsl (bad) xor les imul cli hlt outsb push push and cmpsl loop sbb (bad) sti stos jo push jp push jns xor cmpsb adc jb pop xor cmpsb fmuls push sub arpl sarl inc push sub add cmp mov loopne push xlat sti call jmp push ds (bad) repz add aas jae jb xchg lock cmpsl dec pop or or push ret imul lahf insl jmp dec or fisttp mov addr16 xchg mov xchg xchg dec sahf scas xchg mov mov lea inc daa sbb mov pushf mov adc xor out movsb add sbb push imul pop mov adc bound dec mov dec hlt rolb cmpsb inc mov adc mov movsb xor sbb xor mov pop arpl ja adc test mov or push lods or jg and jne jae cmp or inc sbb sbb mov and js xlat lcall adc lods and mov jo inc sbb divb inc mov push or imul inc outsb test shlb out loope mov adc xchg push (bad) xchg ss out mov inc ret lcall and add push push xchg jne aas fs mov out imul pop xor daa lods bound mov fildl jnp outsl loopne icebp pop push add push sbb dec mov mov sub pop cmp xchg rclb pop add jne inc (bad) push push iret jp jmp ss mov pop push mov mov jae or insl (bad) aas iret jl imul push imull mov sbb into dec andb aas test jne pop pop pop insl add dec jae sub popa pop adc daa (bad) imull mov (bad) in mov mov inc jbe lcall jb lea pop and cwtl inc pushf (bad) xorl push sbb mov dec cs fistl or mov push add outsl arpl dec out lds pop pop jne xchg inc cs loopne sbb and ljmp jecxz loop ds jnp adc or aas inc adc or jo (bad) out jb jmp fndisi(8087 mov jbe inc rcll pop or add rep pcmpeqd mov imul ret lret push push (bad) loop iret das and outsb jb aas lcall imul fs push xchg push and xor pop in imul mov pop lahf xlat xor xchg idivb inc cmp pusha mov (bad) jmp xchg pop inc xchg xchg cmp cwtl and cmp sub adc pop adc mov call jno add add add mov es shll jecxz out popa imul mov sbb mov ret jbe (bad) xor or aam mov outsl push and xchg and lock dec loopne out sub je xor sbb xlat pop lahf outsl cmp loop data16 imul testl pop add dec adc scas rcr adc je shlb das or sbb imul decl jle outsb inc fcmovbe idivl push notl push inc jae cmpsl neg mov dec fwait das mov cli xlat and pop bound ret test adc pop mov scas sbb mov daa outsl jmp pop dec sbb dec leave (bad) arpl push and push ret jmp adc push stos call ja ffree lods or push int3 add and iret jbe or test mov mov and xor xchg jl mov jo pop and push mov cmp call jae mov mov (bad) (bad) jnp les sub or (bad) jne pop and mov jae adc sbb add xchg push add mov mov or fisttp gs sub xor test or or loopne mov clc pop int3 repz mov mov jmp imul fisubr lcall les aaa pusha enter push imul dec sbb outsb pshufw pusha mov or imul xor arpl mov push adc inc (bad) pop (bad) xlat ret jp outsl aaa cmpsb pop dec ds arpl adc dec sub (bad) mov daa push xor sbbb fs pop add jbe jg (bad) call fbld cmp aaa mov pop fwait cmp adc jb push mov jbe gs test mov dec repnz inc (bad) outsl jg mov adc imul cmp dec add or pop out cltd or push push cmp or adc das mov jo adc mov adc mov ja sbb dec or shll adc cmp popf and mov mov adc jae pop adc test cmpsb and xor adc add pop cmp adc cmc and mov fisttp adc loopne imul pop ret sbb push pop xchg aam mov dec sub jns mov mov int mov push adc mov xchg lret jp outsb jb int dec imul adc adc fisubl mov adc push rclb dec cmp andl adc sub rolb adc pushf sub lock push add addl add cmp outsb int3 or xor jo mov loope ret fdivrl push adc into pusha pusha jns mov or fadds sti push js xor or jp lock and push enter and mov fcmovnu int out scas or xorb in add dec pop add push mov pop dec or insl add pushl or or push insb push jae jo jno sbb xchg and sbb inc ljmp pop movq test fwait or addr16 mov (bad) fisttp xor add or fs xchg cmp jg inc mov pop and aam loope mov sbb or lds xor adc lods mov ret add add inc mulb add insb jnp loope push cwtl add adc xchg in lahf or sbb jb subb sbb sbb or rcll rclb inc lock inc mov sbb sbbl fadds or enter jns loopne and and add cmp or sub test push dec adc sbb aaa mov dec adc mov sbb push shlb stc inc scas dec mov sub mov inc ret cmp add xchg xchg or pop dec pop ss movsb jne lds adc dec pusha mov pop adc outsl push or popa aas and xchg dec in in add or add xchg pop leave add push pop xlat inc or push std imul insb aam jo inc adc faddl popa dec sub or or fstpl aad lods pop inc sbb gs add jno sub jmp mov subl and icebp testl adc pop (bad) jg out outsb fs sbb movsl in mov lcall jl mov in inc int3 sbb sbb jb jb or or sub push inc popf fildl push addl add adc imul ret mov and mov ja and pop jg push sbb inc js mov pusha sbb or out and sub sbb (bad) cmp xor push and int3 dec inc and aam xor push mov fstenv addr16 and xchg daa add cltd pusha push cmp push (bad) jp push mov or and mov inc lahf xchg xchg in pop (bad) loopne in add arpl mov pop sub inc push push push inc shl scas push dec and mov movsb test fisttpll jg int xor jmp clc (bad) or (bad) cmp pop shll sub sub xchg lea xchg inc sbb jnp add sbb xor stos lret or iret shlb mov lds sub inc jno and inc add test repz cmp dec push mov movsl (bad) jne or mov sub popf adc fidivr mov jns hlt cmp int3 (bad) adc pop push pop loop (bad) adc mov sbb inc xor add sarl test push cmp jnp push pop icebp mov add jnp addl imul lock test outsl push je rcrb ja adc pop arpl fiaddl adc lret xor xlat jnp jp pop sub add sbb sbb fcoml sbb imul pop imul stc and outsl mov adc mov popl leave or sbb push mov push inc dec add lods add stos sub inc das push inc jp sub pop inc mov ja inc xor pusha adc shrl pusha push fistpl sub outsl in shlb cmp invd or dec mov add movsl inc jl sbb sbb pop cmp gs dec add mov imul ret inc insb (bad) and cld add addr16 pop push add test daa mov nop mov orb movsb fldl ret pop push dec push xor add jg mov dec inc lea loope sbb fmuls rcll lods cmpsl push push or inc (bad) jb sbb insb sbb outsb sbb mov loope fmuls scas inc inc push jo xor enter sub adc lock call and lds roll outsb xorb inc xor jae repz and es pop fcoml and jbe nop inc lds pusha sub and push dec adc pop inc xchg lods dec mov (bad) push cmp and in fldcw and scas add stos sbb dec xor mov sbb pop sub pop inc outsl lret js cltd sbb mov pop imul je ret push nop (bad) xor iret fisttpl mov pop sbb pop pop and (bad) and inc divb test imul (bad) xchg sbb dec inc push inc push mov adc lods or shrl sahf je dec sub daa xchg fwait inc hlt pop sub outsl jo xor mov add hlt sbb lds dec je pop dec xchg pusha sub out ss inc jmp dec add rolb imul push adc lods pop dec daa dec and nop ss mov jns pop bound dec inc sub sbb je add (bad) adc loope pop inc jge sti test mov jno sub dec jns xchg inc leave mov pop dec adc add outsb xor lea outsl and xchg mov push enter add pop outsb or sbb xchg lods nop mov test jo in sti (bad) mov pop mov inc cmp inc and es xchg sahf test push lret popf mov lods (bad) mov xchg sbb add stos lds jo mov push insb push test dec fisubl (bad) pushf into push sbb jmp add mov arpl out cmp lahf orl sbb loope mov jmp outsl mov jl imul insl movsl call loope sub or cmp xor mov call je jne xchg push xor and push je sbb (bad) popa pop pop data16 dec jb xor xor sbb xor and mov cmpl shrl sbb sbb sub xchg imul and iret sbb cli mov dec jae add mov enter aaa and and (bad) adcl arpl mov in and adc ret adc imul and inc mov push inc mov popa push jmp imul loopne mov inc pop xchg movsb or mov (bad) pop arpl or inc and stos in insb sbb push popa inc test in inc inc dec outsb add xor das pop sbb and push (bad) and popa (bad) daa jmp ret or aad and pop and jmp flds lds xchg leave aaa data16 stos xchg mov sbbl (bad) xor and jecxz ret dec cmc add ret mov sbb inc jb inc mov dec (bad) sub aad cmp xchg sub add sbb mov push xchg test pushw inc sub mov out sbb and push loop cmp dec sbb loop sbb jo adc das and jne xor lret fs test cwtl fildl ret xor push fs sbb sti fldt push sbb movsb ficomp pop ret mov and mov push clc stos andl and icebp int3 sbb ret push jb pop jnp push sub and nop mov test jne and push into popa inc adc fwait mov pop sub add or jb and fs jne push roll inc movsl imul (bad) int3 push fldl push sub (bad) int mov cmpsl sub lea push adc pusha inc pop daa movsb xor je lock inc dec ret jae int adcl mov mov leave dec rcll push ljmp test add add popf sub loopne popl sti sub push push daa jo push xor adc adc inc pop add nop/reserved dec popa push inc (bad) stos adc push and aas dec xor shlb sub sbb dec inc inc les sbb mov push pusha inc inc push inc adc notl iret cmpl push push sbb dec fisub or jo push pop cs aaa shrl popa add orb arpl lahf je,pn jae mov outsb mov sbb dec add mov dec gs loopne seta xchg loop jae dec pop add dec in fimul nop into xchg xchg inc test and xchg test add add add add add pusha mov lea movl push or jmp nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp ror dec add int add 