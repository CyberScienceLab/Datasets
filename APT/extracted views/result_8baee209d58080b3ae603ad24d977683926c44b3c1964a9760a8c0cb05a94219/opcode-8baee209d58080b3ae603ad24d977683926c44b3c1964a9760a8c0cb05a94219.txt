rolb adc add add dec add add add add push add add add pop add push subb cmp add lcall je mov movsl xor notb jg xchg xchg pusha and sub jbe faddl add scas out stos mov movntps jle fild and xchg ret pop add sub xor bound popa cmpsb jmp js scas adc xchg in mov nop push sub cmp jae or outsb push cmp xchg outsl push inc cmc push in bound fcmovne out xlat push neg cmc bound and movsb out or push dec jp notb lret cmpsl and inc xor push xchg mov xchg in mov or movsl (bad) out push or vorps mov gs (bad) imul or push jg sbbl and int call xchg inc xchg mov les sbb je mov add jns mov inc std pop mov mov int3 pop daa lret mov into fcmove cmpsb fwait ss lahf dec bnd out cwtl jb dec add insb (bad) cmp pop ja mov addb and mov or push xlat shrl outsb cmpsl out lret ss es (bad) repz enter mov add les in bound sub std xlat in add test sbb ljmp (bad) xor adc or jnp loop pop popa daa sbb or aam mov fwait std or adc push or inc leave cmc cs pusha jg mov push mov push jg pop push loopne in inc iret and les stos mov not mov jne ljmp mov aas in inc pop fwait and sbb (bad) scas mov fidivrl add aad cwtl jl lahf jns fs xchg pop lret mov or sbb push cmp jge pop dec and bound std pop push fs sar pop mov arpl aam xchg xchg mov lock mov das or or push jno sub js ret inc loop push lahf call push or cmp sahf mov lods xor xchg mov (bad) test aad mov adc dec or leave jo pop inc xchg out je lods or jo testl lock xchg movsb dec mov lds dec sbb adc negl add and (bad) xor lds mov push lds aad cmpsl (bad) or adc xor cwtl jle cld push cli push inc cmp ljmp repz loop movsl in lods mov stos jge out and push (bad) jle (bad) and push insl xchg sti adc das dec repz sub adcl sbb push adc loope (bad) mov test mov insb jae sub sbb mov pop push stc fidivl fidiv clc cli iret and jl lret stos add add mov mov dec pop ljmp adc sbb add std push and adc pop fidivr repnz sbb dec ret fidivl mov lock lock jmp cld (bad) leave enter pop pop rcll mov xlat jb (bad) dec xor (bad) cli cmp in incl or fistp xchg mulb subb dec roll add loop or xor lcall jns lods dec sub lret aaa mov xchg fs pop lods xchg xchg push mov lahf xchg ret out xchg movsb sbb adc dec xor stos sarl flds adc seto mov sti popa jp in cmp les push in lret mov es jle push addr16 repz push push adc adc ret cli sbb or bound (bad) aad xchg repnz push xchg sbb push xchg mov push and mov pop or clc les add dec mov push xchg test rorl push lret insl in add xchg imul jae jl movsl int3 sarb lock sbb rcrb mov xchg js repnz das fcmovnb sarl push mov test adc test loopne into sti push (bad) xor cld sub leave ss and nop int3 ficoml mov jge ljmp or sub jecxz add call and mov rolb enter gs out xchg mov lods mov int xor out sub popf inc and jo mov xchg jb mulb dec cmpsl dec dec pop cmp fcompl push fldcw jbe jg (bad) jae push fs inc (bad) out negl ss cmc inc (bad) mov xchg shrl xchg jbe in iret cld push jle xor mov (bad) xor test mov pop in loop and movsb mov sub sub mov (bad) mov fdivrs cli sub scas dec aad jg pop sub cli jmp cmp mov ret in test xor ficom mov bound adc dec lods lock adc fidivr fldl pop inc int jbe fnop cmp andl test or adc push ret int3 jl cli adc (bad) xor fwait or mov lret cmp xchg aad ret push (bad) cmp shr xchg adc fs adc inc dec xor inc or out movsl inc shll fisub stos pop mov and std (bad) ds inc lea das pop xchg pop stos cmc cmp sub popl cmp mov dec jno in jmp inc icebp mov fcomp dec popl add mov movsb sbb ds sbb cmp insl lcall sub pop adc les xchg or clc push inc mov dec lcall push jbe xchg imul sti or je xor jbe push movsb or mov neg cmp jno insb cmc rcrb je je pop mov dec add rcr sahf xor mov or pop (bad) rcrl popf loope and int or int3 mov mov sahf fs or cmpsl dec adc inc xchg sub push xchg pop mov pop jns xchg aaa scas out fs and xor push (bad) sbb into (bad) xchg nop loopne sti fwait lret in sbb dec clc mov jb xchg mov out adc and push pop (bad) aas sub inc pop sbb cmp push mov cmp ljmp xor push xor and mov icebp imul push inc cltd mov sub mov add jecxz xchg js stos jo repz mov outsl ss adc rcrb add inc fstpt jmp ret mov dec lods mov sahf imul lcall jmp (bad) lret imul xor inc inc sbb sub out xchg push addb lcall adc aas (bad) aas xor push adcl lahf mov xor ds nop scas inc dec adc outsb movsb fsubrp or rcrl xchg xor mov fisttp xchg pop mov std cmp jnp cmp iret or cmp pop fcomp and test dec mov pop xchg jecxz loop popf ds xchg adc in xchg fidivr mov xor (bad) xchg xchg dec (bad) xchg outsl test mov loope xchg out push sub (bad) pop mov gs cli in (bad) repz dec shrl fbld ror jno inc inc pusha ss rcrb out cltd and mov push outsb mov add xor cmpsb inc hlt subl push mov cmpsl repz and and cmp jmp test push mov adc outsb in out mov sbb stc loopne (bad) mov dec push ret dec sub js call fistl mov sub sbb and add ret (bad) push pop imul jnp hlt sbb push sbb mov je fwait mov xchg cwtl fdiv das pop stos fisub pop jo pop mov xchg pop stc rclb cmp pop std je jno sub cltd dec (bad) (bad) stc push dec push insb shll jns pop jecxz mov fs and mov xchg aam (bad) adc xor repz lods inc sub jmp sub jnp (bad) stc cmp xor push push in sub mov sarb cs cli lods pop js inc sti mov lea inc mov pop xchg sub cltd jnp xorl xlat dec adc xchg jmp js data16 mov enter std ljmp aam ficompl pop lcall data16 mov movsl insl mov enter push jp add into and lret jg sub and test fs cwtl inc push into sbb push (bad) xchg mov mov mov adcl ljmp movsl fbld fwait stos mov pop mov int jo mov (bad) cmp inc jnp fidivl dec add ja or mov dec push xchg xor mov (bad) outsb cmp stos mov sub add add adc dec aaa push xor xchg mov sbb pop add push add out ds (bad) jmp sub std addb xor mov xchg test xchg mov roll ljmp sbb pfcmpeq xchg pop mov mov gs cmp out push xchg mov fiadd mov mov imul mov push pop loope or xlat fbstp pop mov push ds arpl sub loopne jl clc (bad) jb mov jle push scas sbb ljmp fld xchg into push push mov jge pusha inc jmp and in push dec in hlt ret movhps xor sub pop sbb js mov (bad) enter sbb mov les ds cmp aad (bad) enter stos stos pop fwait mov gs ret jmp jecxz dec lods pop lret lcall and pop aas je sub adc test adc mov mov mov addl sub les fwait mov mov and andl jmp leave test and clc (bad) popf mov shll sbb mov mov add addr16 les fpatan and xchg mov imul (bad) jbe jno das adc and fdivl push mov cmp mov push and add (bad) dec roll adc or cmpl adc adc adc xchg std dec hlt xor nop adc sbb out (bad) lock insb jge xor xchg pusha inc arpl addl sub stos xchg push lea add aad (bad) jno hlt dec cltd cltd inc icebp mov fbld ficoml imul add xor xchg inc aad rcl jns idivb pop mov in aam and mov cs sub daa mov insl and movsb aas mov test jg,pn clc js das (bad) fstpl inc sub or stos (bad) xor test int3 pop add mov mov adc test rorl frstor mov insl mov cmpsb cmp ret loop add std add scas roll xor imul sub inc cwtl aaa xchg repz in xchg dec pop je cmp orb aaa shlb and cs sub adc xchg mov cld (bad) mov (bad) push jg jbe test dec lret and out cmp cs out out mov add rorb mov cmpsb push pop daa inc outsb xor fldt lahf cwtl sbb (bad) mov ficomp adc popa xchg fxch cmpl cmp int3 (bad) cs inc lock xchg mov sub call cmp fmuls push es xchg iret sti lahf ss pop sub pop data16 popf sti xchg in pop enter nop out js pop dec arpl cld mov jmp cmp adc lcall mov dec inc jbe and mov cmpsl imul iret hlt cld xor (bad) call fwait sbb xchg and pop stos cmp ret enter add jmp imul xlat imull fistl popf cli fs in jbe ret mov cmp add mov and dec pop mov in jle addr16 pop jbe cmc push mov inc jo fmul dec dec mov idiv mov and insb dec pop sub push jl mov sbb and add loopne je jecxz jle xchg sub jge jbe xchg mov fldt lret rcll fisttp add lret xchg sti (bad) jge test xchg popf xchg sub shrl jmp pop mov xorl pop std adc jmp inc adc sub in adc inc or stc push xor mov xchg sbb clc xchg push mov rcrl dec in push insl and jecxz das jg (bad) aaa push ret outsl push mov insl add pop (bad) xchg xor or into inc dec cmp jae movsb sarb je jle addr16 push cld jno push (bad) (bad) addr16 pop imul mov test push mov xchg sbb ret mov sbb cmpsb inc mov lds push mov and xor sub orl xchg xchg cmp out pusha das icebp loop divb fnsave mov stos sub lret loope sti mov lret test (bad) (bad) in inc (bad) jp (bad) lahf les or icebp (bad) xor js and add mov roll lret fbstp dec add push mov cld xor imul test inc aaa ffreep mov push jle dec add inc into push push dec jp outsb (bad) xor pop addr16 mov dec loop ja je out pushf int3 xlat and and mov lcall push popa ljmp mov (bad) jp jg inc clc cmc cmp scas add cmp push leave lahf pop les xchg js lock xchg insb push jp mov or pop in fcompl push lea xchg test sbb gs jl int cld inc fstps out xlat call enter xor (bad) loopne mov mov int aaa out sub cmp sbb sub setb scas mov ds das js push inc pop mov test pop scas jecxz nop sub movsb lods jl fdivs aad pop cltd aaa scas insl fwait adc mov or lahf scas inc mov mov (bad) ljmp mov imul lods xchg pusha dec cwtl mov fs or outsl sbb dec add test decl xor ljmp mov jo mov cmc sub sub push pop inc mov sbb sbb lret xor insb out or (bad) xchg jmp add cld jl push imul inc ftst and aas pop (bad) fnstenv cmpsb jo insb cmp push push fidivr mov mov ret pop (bad) int3 lods (bad) pop mov mov ror aam (bad) pushl mov clts mov adc xchg (bad) hlt in mov adc pop push fldcw cltd loope fimull pop sub mov mov outsl pop (bad) xchg nop pop jb divb stc xchg push sub cli cmpsl sbb pop jmp lret mov (bad) shl das sub loope xchg int cs test fnstenv cmc fcomps lds ja mov test lcall adc push or sahf aad sub push insl xchg loope in adc enter jnp lods inc pop negb jg iret jmp ret mov mov push push xor jae pop mov (bad) je nop mov cmp inc and fisubr divl push loop sbb faddp or jle outsl dec mov xor or data16 and sub mov in mov mov dec or outsl ljmp rcr negl js pop jno fcompl xor loope je pop bound outsl fsubl push pop pop (bad) jp popf sbb (bad) aam xchg incl leave cltd or push sar add cs scas fcomps inc pop hlt (bad) je imul and call mov flds jge xor inc lods pop push cwtl (bad) or mov jg pop mov stos or mov outsb push xor xchg pop sbb adc js movsl and lods and jbe jg inc mov rcrl dec fs cmpb stos ds pushf mov or lods add int das cli cmpsl jae and movsl (bad) cmp cmp mov int in loopne sbb adc push mov test aad inc xor lcall cs cs and adc pushf add mov es jo and mov (bad) xor xchg push jne sub xor and sar gs lds notl inc jecxz or dec call mov or sbb fcoms or outsl sbb mov inc fbld mov pop sub push dec push lea xchg inc sbb roll (bad) (bad) sub mov xchg iret in imull movsl bound inc scas xor xor lret push push jg cltd out xor mov cmp stc fcoml ss test mov clc xor mov jle add dec pop mov push enter cld in ljmp and (bad) cmp ficomp fwait jns xor pop dec adc pusha in mov push cmp fdivl lods add mov std adc xchg imul cs add mov push xlat mov pop (bad) idivl movsl divb test mov pop int fistl aam jecxz mov pop loopne iret es decb mov jge jmp pop sub inc (bad) xor movsb dec das sbb popf stc rcll and out lret adc fnstcw xchg or gs sub icebp je scas and xchg (bad) fstl push xor shrl test sbb jp fdivs mov xchg aam jmp inc fs std mov jne outsb fcoms sbb sbb cmpsl and add xor fbstp cmp mov pop jns sbb out arpl addr16 ficompl arpl fnstsw fcompl cld mov scas and jmp adc in shlb mov call jp sbb inc mov pop mov sbb cmp sahf je aam pop arpl imulb imul aam ds jmp sbb (bad) jg inc mov and jl sbb cmp out add cmp out pop and ret pop out jg,pt adc mov cmp cld das subb nop mov std movl lret je out (bad) sbb xor cmp add aaa or jmp jmp in cmpsb push inc shrb jns (bad) xacquire and adc xchg in test aaa inc or js sarb out cmp mov dec pop jge mov icebp movsl add jp xchg or xchg jle xchg cs (bad) xor int3 xor dec mov pop inc mov subb hlt add push inc mov cmp inc das mov std loop scas xchg push pop dec not pusha sbb subl aad ret clc lds or (bad) cmp in loopne aam andl aaa sub or cmp inc loop or cmp (bad) fnstcw push and jg andl mov out enter dec xor arpl jmp leave icebp dec (bad) (bad) ds or inc hlt in mov jecxz push push and mov ror push repz mov push mov aad andl nop dec repz jb and lret scas (bad) rclb out mov dec ja mov pop pop xorb xchg popf mov int3 add xchg or ret cmc add xchg mov bound ret adc ja std add push xchg mov lahf rcll sbb pop (bad) xor jmp mov inc jo xlat mov jecxz (bad) pop sub stc jne sub adc adc sbb sbb sub stos mov js and sahf pop inc mov (bad) int3 dec pop push ja mov fisubr sub popa pop insb jp add fcoms jnp test cmp sbb bnd fnstcw ret and repz cwtl mov mov mov ret fisttpll sbb or jge cmp mov mov in loop adc repnz daa mov clc stos outsb mov popf cmp xchg rcll sub repnz pop push aad inc stos pop fimul cmp int nop xlat add inc fldcw add jmp jnp (bad) scas insb mov mov cld lods enter (bad) and mov dec cmp and nop xchg inc imul lods lock jl inc out arpl mov lret clc sbb mov addr16 pop call pop imul (bad) mov test les test loop adc xor adc cld js jae mov out push pop mov ja mov jmp icebp fisubr sbb insb andl subl ja xor pop ljmp sub mov repz and pop (bad) outsl popa xchg fwait xchg cli pop int3 cli dec jbe cmp (bad) push (bad) mov lret xor add jp cld mov cmp sbb mov fildl ss out (bad) xchg cs aad stos (bad) rorl inc ss push add cltd stos mov jbe add or rcl nop scas xor and daa pusha ja adc cwtl inc aad and xor fcoml xor mov push or sbb push ret jp nop bnd data16 dec movsb pop cwtl ret dec sbb lods orl cmp mov aam xchg mov xlat dec or sub movsl add adc loope sahf fimull push test mov pop xchg mov nop stos and (bad) int3 inc arpl cmp ret cmp in int and cs shlb mov hlt pop xchg add jle orl ffreep push push movsb mov push imul push ja add inc xchg pop add dec or dec jae pop fstps hlt mov xlat mov popf mov shl scas mov imul sub jg les mov jp push dec adc push out das rol arpl mov or mov into mov out fistl pop fisttpll pop nop sbb outsb addl inc lret or int setp into or inc (bad) (bad) call jecxz or xchg add cltd sub stos jp cwtl mov jns test pop and inc inc cs jl push int3 test dec mov lds loop xchg mov fnstsw cmp insb inc inc xchg addl out or mov fidivrl call jmp jo cmp add sarb les push arpl cltd push jge pop test mov mov sbb push jle gs ret adc sbb lock aam sbb iret div xchg insl mov adcl ljmp jmp sub and sub pop adc jle insb xchg rorl mov test pop iret xlat cs pop test sub mov jno,pn cmp inc push jecxz outsl arpl adc sub das out mov icebp inc lret xchg in shrl mov push outsb xor mov inc jl mov cli int3 lret enter mov and add (bad) sbb or xchg jp jl push push dec cwtl iret iret xor leave sarb add aad push repz iret sub sbb orb inc pop sub jb movsl loopne cmpsl icebp (bad) bound push xchg jg push fadds xlat das mov cmpsl cmpsl adc nop std push mov fs testl pop pop (bad) lock jb mov sbb test mov rcl popa jbe pop cmp shlb leave sbb loop mov out inc xorl pop scas jne pop inc in gs adc pushf mov cltd dec (bad) jno aad adc lea xor sbbb arpl push sub push mov outsl std aaa int3 jns scas push xchg add cmpl leave std jns xor cmp mov pushf pop pushf sub dec add test inc xor dec test jp xchg jne push sbbb add cmp jo,pt ret hlt in add rorl dec inc sbb fwait mov mov push dec sub (bad) repz les or and and stos cmpsb jo mov jmp sbb mov pop xlat add fdivrp mov jae xchg call cmp mov sbb jp jno dec mov dec mov mov (bad) les loope mov out pusha mov cmp js adc negl incl xor add xor data16 add loopne jbe not jae aad arpl add and push mov mulb xor and or mov stos xchg pop jne sub mov mov je cmp scas and dec pop mov and lahf ret mov sub mov mov in popf mov sub mov es jmp pop add lret (bad) leave or std fadd roll fwait adc test and aam inc mov jo loope bound lret pop (bad) mov mov gs mov mov cmpsb push aad inc push sti dec (bad) mov fistl xorl mov outsl jb mov cmp mov or jns or add orl into (bad) lods mov repz pop les mov sub cmp imul mov sub mov sub mov je aaa or fldcw or divl pop js scas jnp jae inc loop mov or jmp xchg or sbb into mov test sbb jl or xorl pop data16 xor push lods (bad) stc roll popf xchg in push jge loope jmp mov lret mov stos inc imul imul sub out xor and ja les fmuls cwtl push xchg bswap jb dec mov pop aad pop mov das pop push jns jne jle sbb jl,pt cmp or fwait sti stos in call dec outsl jb xor xor mov not jb cmpsb or jmp xor (bad) hlt fistp icebp add adc sub fucomi imul mov or jmp scas lahf lcall fisttp add int cltd adc les iret pop dec push repnz addr16 or pop mov and and pop gs sbb jb mov sbb aam scas loop add loope cs or incl lods lret pop mov pushf jb outsl mov mov xchg sub fldt sbb dec jge (bad) xlat (bad) out ret aam lea or insl sbb pop fs int mov xchg cmp clc adc ficom cld addr16 pop push iret push repnz inc cmp lods cmp inc or out add add js stc (bad) bound dec inc dec inc push jle cmp mov mov fsub fs add fcos sahf aas mov or insl lahf (bad) mov inc inc and cmp and add aas jge mov xchg cmp mov mov sbb cs mov dec (bad) jmp out dec outsb pop in push mov push pop dec jmp dec rcrl mov je test cmpsl pop and cmpsl add scas movsl mov mov fnstcw pop je out and and data16 lock jno mov scas mov dec dec cmp and xchg mov insb push loopne lods pop push mov mov or loope sbb cmpsb cld repz dec lret mov pop and (bad) aaa mov push jle add cmp out push mov scas cli test add daa xor mov mov mov (bad) pop inc test movsl mov cmpsl popa xor cmp inc ljmp dec test lds pop add lret out mov aaa out dec lods pop or loope add fimull mov xchg out mov stc jp out mov dec cmp add push jge fiaddl push ds and sti es pop cmp hlt ds lods add inc add pop ja shll pop lea lock push out mov xchg and mov push mov imul push pusha adc out mov jo or jmp mov iret in mov cmp lock (bad) lea cmpsl xor pop sbb xlat cmpsb mov cmp mov enter lret cli dec pop ret or stos lret pop bound in scas jb loop sbb and jmp adc xor pop hlt cmpsb and adc outsb jmp fcoms nop fidivl mov movsl lea call jno jecxz in fcoms sarb mov push cmp mov fchs sti cmp decb pop push mov cmc pop cli (bad) xor sub sub mov xchg data16 loope add mov cmp jae mov imul sub mov sbb shlb outsl sbb sbb push test mov data16 fistp sub mov mov mov mov scas adc jmp movsl fs js mov sub repnz (bad) (bad) mov mov in insl inc loopne and sar xor (bad) ss out sti ljmp jnp pop outsb jnp add push sub cs nop jp xchg mov adcl push dec mov xchg mov lds sub int in imulb cmp rorb aad cmp lret inc add insb (bad) adc sub and xlat and cs mov push lea sub sbb lret xor cmc mov xor sub in xchg fnstsw in js inc mov cmp or ds mov sub (bad) jmp (bad) insb mov xor jl popf clc push lcall xchg incb orl aam in imul xchg cmp mov inc mov xchg and cmp and clc jo sbb lahf adc sarb pusha hlt (bad) leave hlt popaw adc xchg aaa add cld push jno push (bad) push lods faddp cmp aaa adc hlt jle out pop imul in stos xchg xchg lock xor push mov frstor cltd sbb cmp cmpsl xor add stos push loope mov outsb (bad) xor adc cmpsb mov loope adc les iret xchg (bad) shll test in ret repz imulb jecxz xlat loop cmc sub cmp xor jmp clc inc push inc add jae notb xor add push in clc mov (bad) mov xchg mov xchg outsb mov jbe js imul and add test (bad) ss jecxz xorl push shrb loopne mov adc or out ja mov std push (bad) push adc xchg pop scas jo aam xchg insb sbb fmuls pop mov cmp sub push ljmp sbb xchg jle inc repz inc jl jno test test cld ss push push mov mov adc push pop repz test and inc add add pop cmp lock lahf xlat aam push jo push int into mov pop adc push imul cli dec cmp movsl stos loopne fiadd and pusha or lods dec fs sbb inc fwait loop into sub imul jecxz sub lcall mov sub repnz movsl ds (bad) in inc mov sub roll iret insb mov sbb pop cmp iret sbb es lods sub jmp out sbb push fstps push sti inc pop dec cmp xchg jle xor lret fcomip mov imul mov mov and xchg out outsb and mov das xchg mov pop ja xor push das stos hlt loope push dec out lock test add imul inc rolb not outsb pop or cmpsb addl pop mov jbe jbe push out dec mov fimul inc jp (bad) cmc lret ret or test xor mov mov mov mov fwait push loope push push mov adc lds addr16 push jnp push scas mov inc xor cmpb outsl sub sbb das jne adc mov sti mov pop and fld mov mov jle and add int3 mov pop lcall loop fidivr sub ds test cmpsl cld js cld xchg outsb stos add jae or mov dec xlat aad cmpsl mov or xor add cld sub (bad) aas mov out cld or nop push xchg jne lahf loope test mov lahf xor adc jbe clc pop popa mov xchg jnp jl outsb dec add out dec mov jnp fcomi clc or or into fsubrl stc xchg popa ficomp andb stos mov negb in fnstcw ror mov push test (bad) ss dec mov cwtl dec in cmp es and mov (bad) pop lret xchg data16 cmp out inc pop test inc rorb mov xchg int3 in (bad) or jp clc jg gs mov push xchg and rcr inc inc mov pop sarl and bound scas outsl loope push sub inc push inc addr16 jecxz mov add cltd popw into into outsb mov das andl sbb out loope and mov imul adc cmp jecxz (bad) bound xor sub xchg sarb gs xchg cmpsl mov pop pop outsl adc stc or push xchg fisttpl jp dec insl sub mov nop roll mov sub sbb xlat mov dec rorb sbb daa sbb (bad) test mov movsb into test push cwtl (bad) cmp mov rcrl adc jne jl (bad) les cli mov mov fmuls xor sub inc mov ret test sbb jb xchg mov mov cmp std mov (bad) mov mov scas fwait outsl and js setle repz fs in cmp in test push imul pop xchg xchg xchg xor inc jbe xor dec cmp sub insl mov psllw bound das cmp pop adc mov cmp mov jl lcall gs stc pop mov mov aad dec dec das test jne popl (bad) dec add and mov out xchg or loope jno xchg sbb pop mov sbb jecxz pop inc (bad) outsl insl ds push jg scas or sub sbb push sub sub xchg jmp push lret lret dec push cmp sar fildll sbb lods leave push mov into cmpsb dec je imul mov call shrl les dec test fdivrl inc dec test fmulp dec push (bad) mov cmpsl seta iret xor cmpsl pop sti and (bad) adc xchg dec arpl push add (bad) imul jp repz test movsb int3 xor std in xlat sbb in mov sbb jl out mov push arpl xchg and xor jmp mov inc or es dec add aaa in push in jns fyl2x mov xchg inc fisttpl push jmp jae push pop mov int3 cmp jmp nop sub stc inc fs rcrl cmpsl test mov and add pop mov and leave adc push mov jbe test adc (bad) sarb sub out sbb in ljmp jmp mov xor popa ljmp cwtl fldenv cmc adc xchg repz dec jmp shr aas cmp (bad) lock ds push enter pop sbb xor mov sub ret (bad) push mov ret iret insl fwait lock (bad) sti mov adc cmp enter fcompl lea scas (bad) popf scas sbb jg sbb cld lods (bad) imul add jge xor or inc ljmp loopne pop loope mov push inc out enter xorl jmp je xchg inc cld pop mov (bad) jbe,pn dec dec hlt fs cmc or (bad) and mov lods inc es push mov imul and mov jp lcall sbb test lcall adc fs adc mov (bad) aaa lods mov dec dec push dec stc das pushf push inc push cmp inc clc aas mov push cmc jb add popf add pop in dec cld push xor fldenv xor cmpl and xor shlb fxch push jae addr16 (bad) cmp ret and mov jnp hlt sub mov push dec (bad) in pop imul fist aas adc pop pop push sbb lea or mov xchg es push cmp pop pop outsb fwait sbb dec idivb dec push mov inc push inc dec inc push mov push adc xchg mulb (bad) xor ljmp test cmovl loope das aam mov xchg inc cmp fldt add or insb pop mov sub out stc or or cmp fiadd mov (bad) fcomi int inc xchg imul xchg xor outsl jnp stos imul cmp xchg ret (bad) fldt cmc or cwtl pop rcrb ja aaa push cwtl xlat ja iret test sbb aas cmc jae jl ret es test sbb fistpll push sbb push inc or mov into sub mov xor sbb lahf mov dec mov (bad) xlat pop inc jns push ja jnp xorl mov push stos insl inc fimul jns es mov scas mov dec leave push dec (bad) in js ja imul pop sub scas lock and add xchg fcmovu flds inc imul jmp mov xchg jg movsb fdivp icebp add xlat insl movsb push jo stc add rorl inc test add aam xor cmc cmp sti jo mov and cmp test or mov js mov sti jnp pop and push push bound imul jbe test lahf push cmp mov cltd (bad) ds xor add push xor (bad) jecxz pop sbbb hlt mov sub hlt scas pop aaa push test loopne imul xor jmp push mov std rorb movsl rolb mov (bad) ss and inc mov test loop adc mov pushf cmp xchg dec sbb inc negl leave pushf cmpsl scas fnsave stos lock pop stos bound xchg in lds mov rcr dec sub push mov dec stc lea fsubrs popa sbb pushf xor inc lds xchg sub jmp mov xor pop sbb mov cmp mov dec sbb in xchg aam ret add xlat repz pop lahf sub xchg ret lret pusha stos jo fadds push xchg ds imul inc jne or pop fistpl fisubrl sub test in pop scas xchg inc xor dec insl dec sbb leave jae add (bad) (bad) push jge pop nop pop (bad) xchg fmull movsb pop (bad) jg adc fwait jecxz je fistl test xchg mov scas in dec fs aad xchg xchg repnz xor mov popf cmp fucom outsl push push das jne pop jmp loop insl sub dec xor pop je adcb gs push mov (bad) pop mov mov stos xor aas push aaa jmp inc scas mov push mov dec mov add and mov push cmp mulps cltd js jle mov dec pop lahf push cmp stos mov or push fisttp dec fnop and mov push push cs push popl jl cmp dec testl nop jg daa mov leave pop or sub mov (bad) notb imul adc sbb xor mov leave test test popa cmp insl inc fist xchg jne xchg xor dec mov cmp gs xchg imul mov fmuls pop loopne fstpt mov push popa call sbb loopne test pusha out ret movsl pop test (bad) in mov sub pusha lahf jns enter mov pop push insl inc andl push lods cmpsl pop cmpsb lods or xchg fistpl fbstp nop mov aam es es (bad) lds rol add fadds test adc lahf sbb cmp cmp inc push inc frstor lock lahf outsb pop mov xor jb daa jne inc icebp xchg dec rclb push adc or ds fcompl insb pop and or or btr mov xchg subl popa adc xor xor push (bad) je add cmpsl sbbl xor mov mov mov xchg push adc jmp loopne and stos sbb jge inc test or and sub or mov xchg out fsts (bad) and shrl jbe xchg mov outsb test cmpsb inc jg or gs push into pop add sub (bad) aam test push mov fmuls lods enter aas cld xor mov jmp push xchg rcl inc mov xchg and xorl add int mov insb sarl push pusha adc or std xor test mov jmp fcoms mov les mov mov pop adc add (bad) mov bound mov (bad) push pusha test addr16 lret add outsb dec sbb rolb rcrl lea push mov (bad) xlat repz and sbb xchg and cmp in sbb inc add jle or shlb dec ret ja pop bound negl mov xor push imull inc mov sahf stc mov jae inc jno sbb cs test mov dec xchg test jge ret cmp insl lods push lock ss pop ficom (bad) movsl add sub rolb inc mov sbb out loope adc (bad) jne mov lret jo push scas jecxz in xchg mov sbb lds mov arpl fmul push daa outsb or stos aad xlat dec or jecxz mov mov stc lea popf cld ss shrb in (bad) jne inc lods frstor scas (bad) insl pop dec (bad) pop cmpsl fisubrl repz jecxz sbb mov pop xchg mov lahf lcall in sub aam test icebp mov stos insb xor jno outsl xor andb sbbl out cltd daa fucomp push dec push ja pop (bad) shl scas daa stc jns icebp fucomp xchg notb mov mov sbbl test or stos in inc arpl cmc (bad) xor mov loope sbb in sub insb mov xchg mov adc mov stos push rcrb out in sbb lahf aas inc mov sbb mov mov jmp rorl (bad) mov inc xchg roll mov in add aam jg and stos pop adc outsl xchg adc xchg pop inc add fld cmp mov and cltd fisub test shll dec aad sub fdivl add and add push sti pop push and lahf jbe jae insb cmp (bad) push dec int in ds mov or sbb xor cltd fnsave cmp out scas loop adc dec jb mov lcall xor inc inc das decb ret jmp lods (bad) cwtl mov lock push adc lods fidiv xor mov (bad) lods inc cmc popf xor add int and icebp mov jo flds dec lea pop push lds push jbe jb xchg pusha test sub push pop push sub jb inc inc loop inc ljmp xchg xchg pop add mov mov mov pop xor or xor or mov outsl cmp popf mov dec mov scas jl lods pop xchg push enter inc data16 push jmp xorb sti push add lret popa or pop fidivr sbb add jno mov mov xchg (bad) mov xchg xchg call fisubr sarb push enter (bad) and (bad) icebp push into or js js stos and mov loopne inc jg out aas inc xchg stos test sti je cmp jmp xchg xlat inc js pushf push xchg out push sbb cmp adc gs lahf push jns push arpl or cwtl aam cmp jmp dec push (bad) (bad) xor xchg add into pop lahf or push add add outsl rcll adc in adc pushl mov mov outsb mov ds jge test test ss pop pop push mov sbb cmp jecxz dec ja mov es movsl leave mov les mov loop mov adc mov jns shr shll jae inc or sbb jecxz push int sub adc push ret in rclb sub sar xor sti jge push push mov mov pop or std sbbl mov orl in xchg pop in mov pop cmp jo sub insl dec sahf mov loope sub mov pop iret mov mov stc (bad) aad mov dec mov ss fsubrp mov cmp dec (bad) lods adc sub mov mov testb push pusha xor sarl sub sub popl mov dec push mov dec js dec test mov hlt pop mov scas adc fucom mov in push mov je sar inc popa stos pop pusha mov sub aad mov lock adc add adc lahf icebp es test add mov or mov ret sbb mov add inc cmp add jl roll (bad) stc int3 jbe jg and popf pop hlt aad in gs sub rcrb and rcr dec loopne ret repz sbb in into fs mov jge adc cmpsb insb add (bad) fist (bad) mov repnz jmp test andl add jb and gs lahf notl mov and stc ljmp iret mov fdiv jns fstl aad lret movsb sub movsl cmp cmpsl adc (bad) jge sbb (bad) mov in push lahf lock and stos or das xorb sbb in xor dec pop popa (bad) add pop negb (bad) mov mov lock imul call cmp and adc jne mov lret ss xor sbb push inc add xchg xlat out xchg mov stc add ret test (bad) fisubrl ja mov rcrb xor sub mov addr16 in je xor es and add pop scas insl (bad) loop lea sbb in sbbl subl jle xchg leave out xchg jecxz insl lret pmaxsw pop push rcrb dec adc push adcb inc cmp aad adc cmp cmpsl sar push add jl (bad) sbb aam fildll dec push cmp ss fs sahf mull xor pop lret push jb enter adc sbb bound inc scas or mov vmwrite xchg mov and mov add xchg xor and xor js mov rolb sbb inc out push lods add jae pop mov pop push push in sbb in push add cmp js mov fist pop pop xchg mov add inc sbb pop popf and mov rol addr16 insb test or mov aad xchg mov lock data16 sub shll add pop aaa subl movsl lock lock fidiv mov mov idiv in mov clc (bad) lret std sbb cmp add mov dec das leave sub int3 out adc andl add and scas in stos call add test ss xchg pop ja mov add or push cmpsb mov (bad) dec mov pop pop inc cmp and sub jo inc jmp mov push or xor push movsb jbe pushf fwait cltd sub mov jbe push enter xchg test inc lds lock fildll cmpsl fiaddl out sbb cmpl or cmpsb or in test nop aad mov sub insl push aas dec cmc lret ret pop (bad) cmp mov mov sbb leave rcrl ret push mov mov cmpsl (bad) (bad) adc daa fimul mov in cmp inc adc cmp fnsave adc xor push lea dec loop nop ffreep jl mov cmp fnstsw ja arpl cwtl popf or xchg xchg fdivr jmp mov imul cmp cltd loopne or call push xchg push cmp jecxz dec das dec inc movsb or add jge xchg xchg shl push add mov jge rorl xchg dec ret dec jmp test adc outsl mov push pusha loope jg repnz fsubrl add dec (bad) aam dec jbe in (bad) cltd (bad) pop jp daa mov sbb mov lods add dec pop sbb push dec into fildll fs fldcw ret mov cmp pushf adc sub cmp lahf cld jle sbb mov adc dec hlt push dec fdivrs ljmp in mov jns lcall test test mov jle mov jno daa movq loop inc in cwtl movsb mov mov mov sub mov orb das fdiv nop xchg pushl pop shlb push stc call cmp pop pop (bad) cli jns and xchg mov faddl mov daa mov les (bad) jns fmuls mov mov and xchg aaa mov dec mov mov das sub imul xchg scas arpl scas leave xor (bad) push cwtl xor imul sub insb fdivrp jle mov arpl or mov dec enter xchg je in mov push mov add sbb cmp add mov test mov cld ror fdivl bound mov mov pop xchg cmp xor cmp jmp (bad) push push and adc jbe push inc mov (bad) int3 sub in sub (bad) dec lock fldt stos mov out fsubs fnclex sub xchg push rolb arpl mov pop pop mov les test xchg sub jns in sub or push and imul cmp daa (bad) pushf mov scas cmc inc mov xor lcall pop cmp sub and add dec jle cmp pushf dec sbb shll out iret push (bad) push xorl add mov repz enter pop jo fwait cmp xchg in sub lea pop ljmp sarl sbb mov and xchg xchg pop (bad) into dec mov mov pop clc jns mov repnz sub add in popf daa aad mov sub js orl cli jle and daa lods jmp std (bad) sub scas clc push pop dec fs popa adc lods aas adc js aam xchg mov cmp cmp rol lret pop and xchg ret xchg pushf xlat push inc pop lds (bad) imul push int push add jae stos lods imul sbb push cmpl mov inc dec in int sub out mov aam ljmp movsl jae sbb mov fs sbb pushf pop rorl adc or stc mov repz xor inc repnz loope mov xor xor mov aaa and sbb xchg xchg shlb rclb call iret into adc cmp pop and mov adc rcrl mov lret inc push xor jge negb rolb idiv sbb mov into insl xchg cmpsb cmp mov in adc sub es (bad) xor dec mov pop in pop inc pop add jns leave sub cmpsl sub mov nop inc pushf test dec in mov cmpsb ljmp ljmp or into sub mov lods data16 fwait mov or call sub sbb sub pop push out lea cwtl insb mov xchg jg je faddp xchg inc inc int3 (bad) dec insl inc mov push adc loope xchg xor insb mov pop inc mov cmp ret cmc cmp sahf mov mov jno or fisubr inc xchg lock push loop xchg rcll insl sbb test xchg jnp pop clc jmp in call (bad) and imul divl lret and sbb hlt mov into mov dec in sbb (bad) test inc mov or push mov aam fs mov (bad) dec mov push cltd loopne cltd pop into loopne out lahf push add daa fcomi inc sub push sbbl into ret pushf mov jge xorb rclb out mov or lods mov inc stos xchg mov add lret iret dec int enter or mov lds out inc cmpsl insb ljmp inc std mov pop stos jl (bad) divb inc icebp push ljmp aad mov (bad) int3 sbb cmp push movsb mov mov ficomp jl mov lret adc lds sbb mov pusha jecxz jbe loop,pt pushf pop pop (bad) mov (bad) pop sub sbb mov and add int3 jns bound mov and shrb mov cli fs ja add lret xor test jb sarb pop and pop cmp xor adc xor adc fild orb adc jns in push jp in sbb test dec mov andl push sub xchg addr16 pushf cmpl int mov hlt jmp xor lods fs outsb push std or cmp (bad) mov enter (bad) jbe rcr jnp fwait cmp out stos imul pop fwait test mov gs out mov jae insb cmp out jno jae sbb addr16 sbb mov test inc dec xchg and pop jmp pop sarl stos xchg stos cld mov out addr16 ficoml adc push ret push cmp dec push mov (bad) sbb ss jb lods and or dec std mov aam xor mov fwait xor pushf push rclb js xor out lock mov cmp or scas inc lret sbb iret mov ds js scas push push (bad) int3 xchg mov xor mov sbb inc jns aas sub and loope repnz inc (bad) xor or popf mov sbb aad or stos adc pop mov enter hlt mov sahf arpl ds cmp pop dec sub or sub and aas lret jge push scas fwait jne lods sbb out in jl pop lods jnp cs mov lods fwait test scas jp lods addb jnp iret int or (bad) ja push push sub std imul mov popf les xchg xchg or les sbb jp push mov push data16 and lock add jecxz mov pop loop js inc mov mov sbb into adc nop or aaa and sub push imul fwait stc mov addr16 movsl pushf mov int3 jge outsl clc leave xor fadd xchg in adc xchg mov mov cwtl test lods and jl jge sub cmp cmp mov xor jmp scas data16 ror sub cmp notb or cmp clc test std (bad) xor loopne inc shr and jno fstps out mov bound mov fcompl xchg sbb rclb enter out mov pushf dec stos adc mov nop mov vpsubb jne and cmc add ljmp mov jle mov mov pop lahf loop xor insl xchg jge inc sub jb ret push pushf inc jle push pop test pop push lcall and xor cmpsb stc nop loopne adc imul js ss push lret mov insl mov jno add xchg add mov in sub xchg adc fwait sub jne inc jg dec lods nop xorb fwait push fcoml adc push fld1 xchg jg xor jae jg mov mov mov addr16 sahf mov imul xchg mov nop (bad) in mov jg xchg ljmp inc jbe push xchg adc fldpi sbb fstpt lcall sbb (bad) in add ljmp xor aaa in adc pop in mov dec mov divl ret aaa in jle shrl clc insb or jp push dec mov (bad) fistp mov dec mov sub sbb (bad) and outsl xor cmp cld rorl cld aas add cli data16 mov xor andl xor mov sub test bound jb inc xor outsb fs push add dec lcall sbb or inc jg jmp pop out popf jb xlat sub mov adc xlat lret lock push loopne add mov sub push jns pop xchg lods xchg cmpsl jno out pop pop dec mov std jo sub and dec movsl dec sbb mov sbb in or mov ret int insl (bad) mov sub (bad) popa (bad) (bad) es lahf pop mov adc cwtl add mov ret ret adc xchg push out pop cmpsb adc mov mov mov cmc fstpt (bad) jno (bad) sub add xchg ret lahf ja lods (bad) cmp mov cs icebp push sub inc jmp out loope pop jb adc test test xor fistp aad xor pop sub pop (bad) dec int fildll dec adc mov aam inc lahf lock xor cmp ds loopne cld mov into mov dec push sbb cmp aad shr sbb aaa addr16 xor xchg add jnp stc mov dec fs xor scas mov sbb mov add sbb ficoml or and cli fwait mov jns std fsubrs dec mov sub outsb sub stos ds cmp enter popa adc pop mov jo cli or stos insl mov and adc mov mov loop leave cltd pop es popa add mov pop imul scas imul xchg lods push sub sub fistp mov hlt divl in into cmp gs push (bad) ja add push sub test aad xchg clc rcll leave gs push push cld mov jl xor cltd mov sub jmp and fcomp xor and push daa shlb mov shrb and mov je push das mov test sti mov pop fidiv sti cmp xchg mov fisub sbb (bad) or loope stos or dec clc pop scas sub ds push in sbb pop imulb mov jo outsb cmp mov adc dec and mov repnz lcall enter scas mov sbb inc inc xchg xlat inc dec test iret jmp xchg sbb jp add inc adc in mov (bad) xchg or test in outsl cmp test mov out (bad) sub mov or mov test inc fiadd pushf lret shrb cld in stc int3 mov insl sub dec fldcw jg (bad) lods sub push shrl mov pop jne int pop push ljmp loopne shll pushf mov les movsb add std adc xchg rcll out loopne sbb sbb cmc add shr xorl sub aaa jge aam ret adc loopne sub add sar mov lock and fnstsw xor out mov mov xchg xchg adc js aad adc scas movsl pop or and pop frstor (bad) aam insl hlt mov sahf js icebp mov scas pushl jnp in scas (bad) jno in pusha cld ret dec data16 loop xor lods (bad) je sbb inc push push iret fdivl pop gs ss sub js push orl int rorl inc sarl outsb std sbb add rol int3 arpl add push fistp jae fiadd repz pop mov sub pop sub mov jmp call xchg or (bad) ljmp dec mov lock add xchg sub inc adc aad adc xchg jp test lcall inc jns push lds mov mov repz pop jle xchg adc push push enter jne xchg push mov xor sub aad (bad) imul xor iret jb lret mov mov cmp xchg test int adc pop aaa out jae cmp jb push fwait cmpsb jmp (bad) jno mov jp add cmp inc xor andl mov mov jno pop gs cmp mov push jb insb (bad) jmp sub hlt in stos adc push ja sarl push mov pop notb push inc pop xchg mov sbb adc inc aas fwait dec sarl insb mov add lods imul dec pop sub mov aaa div mov mov sti jecxz imul mov lcall sbb xchg loop xor cltd addb mov mov mov mov repz cmpsl xchg iret in or (bad) lea cli mov pop negb push cmp clc cs mov xor scas data16 jo push jge cmp jp mov jecxz test je faddp test pusha (bad) mov xchg mov and adc scas leave jb xchg test movsl xchg into or xor out pop jmp lods push addr16 jp inc lea loope subl xchg arpl sub push cmp dec inc dec jnp enter dec push inc pop xchg pop jne insl sbb lods pop add mov and xor sub pop scas ret iret xor (bad) pop mov negl testb fsubrs clc add or mov les xor lds repnz push leave decb mov inc cmp js movsb loopne mov icebp push pop mov push mov push in pusha mov dec rorb jmp cmp jp inc mov xor jae cld mov or xor push mov add cmp mov shll mov and jmp out ret mov fdivrs cmp dec mull (bad) cmpsl fcomps cwtl cld dec lahf cmp sbb inc or ret mov xchg mov inc popf cmp sub stos inc add lods cmp dec fisttpl inc mov ror inc jne cmc mov or in mov inc mov int3 cmp nop icebp mov dec xchg inc ja push or add (bad) mov dec imul lds cmp test sbb jo or xor xchg pop aam (bad) aaa sbb adc ljmp inc cld cli add dec adc or loopne mov push mov mov jp notl mov xor pop cmp (bad) repz mov decb push in lods lret (bad) notb mov xchg push cld test mov fisubl sbb out pop push bound addb adc std stos clc lock shll mov or out lea icebp mov push xor xor push xor insl sub pop mov jmp push push add jbe and mov and fstpt dec std jge mov lahf call inc inc (bad) jne,pt dec aad cmp pop sbb mov pop int and push rorl out mov (bad) bound imul xor dec inc push inc inc push xchg mov test cld jge test rcll data16 push inc dec dec mov notl je rcrl (bad) jb inc add mov pop (bad) push xor add inc ret cmp jle pop push insl sbb out pop push clc adc sbb and insl push shr xchg xchg cli mov adc push out insl lret push lock cmp jg xchg xchg cmp fwait sbb loop or cltd pop push test fdivr int fs jge cwtl inc or lret cmp mov imul mov fs inc lcall dec popf lods (bad) pusha scas (bad) jno xor jp lods out xorl mov xchg test mov iret add adc mov and shrb push mov les in jo jmp or ret cmpsb pushl aam xor dec data16 inc jmp cs fwait or cwtl push pop sub stos cld dec iret es (bad) test dec mov outsl mov rorb imul xor mov adc and jle jmp cmp cmp pop dec addr16 movsb fcom mov imul and movsb mov xchg ss or dec and xchg lret fdivr xchg lods xchg pop (bad) or out (bad) lea scas mov lret scas or dec push or mov add mov enter imul fldcw js mov pop fcoml mov mov fmuls xchg add pop and cmpsb mov dec mov (bad) push cli mov inc mov dec jp mov jcxz sbb stos sarl fistp inc jle sub dec addr16 mov inc (bad) cmc arpl inc xchg sub pop xor out lea xchg or daa ret push (bad) sub loop adc push mov sub inc (bad) loope es lcall pushf jmp loope lret inc and int cltd fmul pop (bad) addr16 xchg xchg aaa sbb lret xchg sbb mov rep xchg cs das test push bound inc icebp mov pop (bad) out lret xor stos lods mov roll mov ljmp mov int3 lahf nop dec repz xor sbb test xchg lret fsubl ss xchg iret andb insb sti in xorl mov (bad) ja inc loopne movsl sub jnp out js,pt adc ja and xchg nop and lcall into jmp outsb lock icebp fbstp repz das mov loopne int mov jl rcrl mov sub or decb loope mov lods xchg xor clc call sub sbb mov loop imull (bad) iret sub les xor sbb arpl lret pushf dec loopne dec adc movsl cmp shlb scas pop dec xor mov mov je dec jb push pop pop adc sarl xchg stc inc (bad) sbb orl iret xchg (bad) sbb jg lcall int3 dec (bad) outsb out inc push add lret bound lods push jecxz or fdivrs das and sahf mov and mov push fcmovne out or jbe sbb adc test gs in xchg inc pop sti hlt xor js int xor mov cltd dec adc mov test add jbe movntq pop dec xor xchg aad shl xchg movb out mov mov jg mov mov fimull push fistl in imul mov jle push lahf pop sub hlt fbld cli mov or add in jg mov ss add mov cs mov sbb push fucomp add inc (bad) lock sbb out cmp shll repz aas or jae add mov sahf dec lods mov mov cmc xorl repnz jae dec add sub test mov outsl dec data16 arpl lcallw mov mov push push and dec and jo ss mov imul push sub push push push cmp es lods aam popa insb xor cmp pop test xchg cmpsb lods and push or adc imul add sub dec and pop dec pop cli mov inc (bad) test cltd rclb test xchg enter xor push hlt addl cmp dec pop fwait ror ret imul jns das dec inc and jmp data16 pop lods mov popf out nop adc jecxz in (bad) pushf pushf jo xchg aas div dec jbe mov inc js jnp nop xchg outsl pop loope mov add lea int3 imul aaa jmp mov decl and push shrl jg push iret or xor jb lcall jbe js push outsl and sahf mov ret les out xor cwtl (bad) cmc ret je fcoml mov roll push out or xchg sbb mov xchg push in fs insl pop sbb jno and adc arpl mov cwtl xchg mov or push pushf push movlps insb ficoml sbb pop das xor xchg fildl adc inc in cmp dec xchg jl mov stc lret leave mov int sub mov mov addr16 xchg sub popa int pop mov push push mov lods inc dec (bad) sub pop dec out lret movsb movsl test sbb cltd pop or mov orl out xchg cld jae mov outsb out and mov rcl mov mov and or fnsave sub inc into mov jecxz or data16 mov cltd jle mov pop lret (bad) push xor imul dec lcall sub fs adc dec sub adc and add adc jnp mov and xlat ror das lcall and and xchg imul frndint inc add push lds ret adc mov nop fdivrs ja push into shll mov addr16 pushf int jmp pop mov mov orl call out push idivb jmp addr16 xor sub ja pushl test pushf adc mov sub lahf add adc mov iret aad add fdivrp inc sbb xchg mov pop test insb mov adc iret in mov es inc mov stos ja mov pop into mov dec push sbb mov stc imul push int3 icebp (bad) xor mov mov push xor jb and push sub insl mov pop jb test jae out push daa mov movsl leave dec ja mov xchg (bad) (bad) cmp add lcall rclb jne test repz cmp mov xchg out and sub jge cwtl mov mov fisttp jmp jo mov enter mov outsl aad push test mov and pushf sbb add les and rclb xchg add jmp push dec or je mov insb jg (bad) cli pop cmp lds rcl je cmp loope mov mov lcall dec push std xchg neg test xchg adc add mov ret or fwait jb cmpl das sub jb movsl arpl and push inc lcall cmp stos adc inc xchg and (bad) movsb and arpl push out push push and imul and pushf int3 out ja and pop cmp sub fstl xor pop pop xchg (bad) fwait enter insb daa movl outsb popf fnstcw jae xor mov inc jo pop ret out idivb push mov sbb iret mov fcmovb test movsb jnp inc iret add fsubp dec pop leave sbb cmc mov mov pop jns adc fwait lods sti iret (bad) sbb xor xchg jae fcomp scas mov in stos aas fildll pop jl cmc punpckhwd add push out xor cli sbb push inc mov mov dec push xchg lcall call mov mov test fmul shll shll cld mov imul adc arpl add cmp sub jb push add test or mov adc imul sub stc sub cld mov les sbb sbb mov push push xchg imul aaa lcall push outsl aaa fstpl subl dec xor (bad) jnp lods (bad) lock (bad) fldenv push inc pop pusha dec call (bad) xchg in add jmp pop xchg cs or in xchg adc aad (bad) push jb inc dec jmp jmp jno fldt lcall ja mov xchg jns adc and pop fnsave jl outsb leave imul std mov call adc mov ret push or push cmp cmp daa imul cmp insb jbe icebp rol inc arpl lcall push add shll sbb bnd pop test sbb sub cs dec fsubp push push scas aas in ret test sbb gs pop or bound and dec fidivr cmc (bad) out cwtl mov sbb inc (bad) pushf mov call je xchg xor sub fwait js ss (bad) into and adc jl dec inc mov outsl fldenv ficompl push mov jo push aam xor mov aaa sub add mov sub jno cmp sub stos cmp dec cs aam push sahf bsr test pop mov nop jg (bad) push dec ja inc arpl jns (bad) xor push dec xor (bad) iret idivl xchg pusha push shrb mov daa mov cmp ret dec lea nop sti loope lea lret ror jnp jg in test sub pop pop int sbb je loope cmp fucomip data16 out or push outsl jno cmp adc push push mov cwtl mov mov pop cmpsl push sbb sar lods movsl jns fucomi pop mov dec xor adc push inc pushf jecxz lahf add test fild nop add ss mov (bad) add repnz int sbb or rolb jb mov mov inc je iret in xchg outsb lret sub sbb ja inc fnstenv stos xlat ss adcl je add mov and rcrl outsl ss xchg stos out fcoml jo popl stos (bad) mov dec sub adc push arpl fimull xchg imul notl insl pop push test add or ja cmpsl psubusb icebp bound fldenv lahf pop rcll loopne aaa (bad) fildl pop ret es push cmpsb add sub fstpl adc adc add mov sub cmp out and sub xor mov push adc inc or int ror and mov push push mov out sbb pop inc sbb notl cmpl push sti aad mov and inc (bad) cmc es clc xchg mov push mov adc call sti and imul dec jae xchg mov sti xor mov in popf xor in jmp scas cmp roll push (bad) daa lds cmp push movsl insb nop lret jb cmc movsb cmp (bad) fcomps mov adc nop xlat and xor add cmp (bad) (bad) div xchg ret outsl clc mov gs mov push leave mov dec sub notl inc lea dec adcl test aam stc loopne fistpll gs xor inc scas push xor add ret sbb mov xor lret out jecxz mov ja es push mov insb jbe mov insb xor aaa (bad) xor xchg jmp (bad) jno add jl jb mov push arpl aad stos jbe mov scas inc pushw pop movsl jmp inc mov lea add dec push and inc push jne sbb and stc test xchg mov mov iret fcmovbe xchg xchg cmp push xlat arpl add mov adc cmpsb xchg pop and and sarb outsb cmp clc push sub stos or enter jp out push ds push cmp sbb push or roll insl pop inc pop or cmp outsl iret mov jle js xchg add mov lods push mov fsubrs stc jbe aam lods mov add lcall inc movl sub push movb insb cld mov push jl movsb cltd pop fucomp int sarl xchg sbb fwait push outsb dec and or and sub fnop jo sub inc xor cmc hlt xchg xor dec cmc sbbb data16 iret movsl and outsl call and sub and xlat sbb xchg sub lock icebp mov jb xor mov sahf fmul dec mov pushf inc loopne js mov movsl push cmp add xchg insl das adc out (bad) in push xchg dec loope (bad) xor popa scas dec decl in xchg xor fcomps sti jp outsl dec add std loopne mov xchg scas adc (bad) out or pop sub in lret sahf and dec std adc xchg fs sub xor mov sub pop xchg mov daa nop call stos pop scas outsb add fldl leave dec inc mov je mov mov pushl mov sub push jecxz mov cmp sbb xlat dec mov adc add mov xchg jmp ljmp adc mov pusha or ss fnstsw pop sbb inc in ja inc pop dec movsb and jo imul test loopne add test (bad) mov xor std push inc or imul pop sbb xor sarb mov imul add or cmp leave (bad) jmp rcrb inc pop xor xchg imul pop cs jle xchg icebp imulb cli dec add inc mov jae sub mov sub xor cmpsl lahf push mov repnz push jb xchg cld lret push fistpll out xchg sub mov sbb xor xor pop std popa push (bad) mull mov bound loopne add inc pop push xor call int sbb cmc xor or sahf idivl or lcall rcrl mov rclb mov or lcall sbb mov ret mov xor loop cmp mov sbb repnz shl jbe (bad) into jns mov and inc int aam jns mov xlat daa lret add iret icebp cltd and sub jmp andb inc leave adc push jnp and lock outsb pusha cmp (bad) and xor pop inc jl enter adc outsb or arpl push mov add sub inc jg sbb mov (bad) add xchg aad shlb mov add inc popa xor push dec movsb pop push push loope adc aas adc cltd xchg test mov xchg pushf or lods in jecxz cmp stos pop lcall dec popf dec int mov dec mov inc lock bound push stc push pop push pop cs push xor int jnp mov cmp ror out mov push inc aaa aam mov jp gs mov pop icebp ljmp gs aad lods dec (bad) lcall mov pop sub stos cmp adc push ret cmp inc jo stos loop,pn test sbb mov sub hlt in sbb add cmp xchg mov pop xlat pop cmp test adc lret cmpsl pop xchg std add test inc rcpps mov fldl (bad) push or repnz or lret mov pop lods push hlt nop xchg xchg add jp or cli push rcrb bound mov fcomps test xchg sub ret adc aaa cmp pop (bad) je out rol and xor xchg sahf rorb inc (bad) xor pushf jl mov and lods add mov fxch sbb lret fcmovnbe nop cmp xchg xchg (bad) mov imul outsl andl mov sub or sub lock cmp sbb xchg imul pop sub add adc test adc sub jo les out lahf sbb push fcomp add cmp btc mov addr16 fcmovnbe pusha icebp sbb mov pop dec fdivrs cmp daa sub ret push xor into call movsl push stos push sti rol ret pop adc push cmc (bad) out ror daa xchg push jnp (bad) mov ffreep or inc addb repz in leave addr16 leave shrb outsl fcoms mov cwtl adc sub movsl mov pop das pop (bad) flds mov jae insl mov es in jne xlat sbb mov aam out cmp dec loop aad add mov jo cmp std sahf repnz inc mov stc scas sbb in stc flds inc out xor push test je mov xchg pop movsb push mov in push xchg enter mulb cmpsl stos out xchg jl ret imul insb push push xor cmpsl scas or push adc inc and popf sahf sbb vandps lahf data16 add out add xor je mov dec gs inc aad icebp pop pop int sbb je imul sbb mov xchg mov push lret cmp pusha les push out cmp cmp xor pop enter jmp add (bad) fstl push dec cld xchg push cmpl fisttpll and mov enter jb adc movsl test sub repz bound xchg imul pop xor jle jg mov pushf cli xchg push stos movsb rorb or lds adc in out mov int3 loop mov out fiaddl inc pop cli mov mov fcoml clc hlt and cmp movsb xchg pushf adc movsl mov sbb sbb xor inc (bad) dec roll and mov cli pop sub inc pop sbbb pop push jp out std push aam ret (bad) jb xor negl in dec fldenvs add fist mov sub mov push ss and cmc mov fsubrl (bad) repz pop sbb adc psraw cmp add outsl cs aas push sub or inc mov or scas iret out repnz sub and (bad) dec or fild cltd (bad) lods ret pop or inc fs xchg mov scas lods out lret outsb pop rcl fisubr int xchg incl sarl jno enter lock ret mov js aas push jnp jnp lods inc push cmp push je das add rolb sti mov imul cmp push push leave dec nop repnz call insl imulb sub add hlt movsb sarb scas ss insl xor cmpsb sbb adc inc jne mov mov pop les push mov sbb mov popa ret sbb sbb enter dec leave in mov jmp xchg dec xchg dec xor fsubrl and mov or cmp shll jp ja jae clc xor pop xor btr sub faddl dec (bad) jnp insl sub push sbb movl and outsl test mov cmp inc mov jns jb popa adc lds cmp inc nop out ror hlt scas push addl mov (bad) mov test fidivr jne daa xor arpl mov pop fdivp fadds ljmp cwtl leave inc in (bad) je cmp out cltd enter mov sbb aad mov pusha pop std lahf sub lds cmp xchg fsubs arpl pop int xchg jb pop (bad) mov outsl lods repz add arpl shlb leave cwtl ljmp inc or test movsb and outsb xchg adc pop cmp xchg mov mov call lahf mov insl jg movsb movb ja or mov add ja sbb or das dec lock push push rolb (bad) xchg loopne mov lret call fiadd xor fisub sub fwait les add dec (bad) pusha cmpsb lahf sbb lds inc aaa sti jo add push (bad) and mov shrb mov loope sbb inc pop mov (bad) ds mov pop aad add pop pushf test rep ds aas aas cltd pusha mov push xlat mov iret arpl mov sub xorb aam inc xchg and jmp cmp mov pop out repz xor popa sub in enter and das arpl or pop or scas push pop dec imul adc data16 nop mov hlt out mov (bad) lea imul ss clc into xchg shr lret mov cmp repnz lods aam ljmp mov outsl mov push in lret mov push mov (bad) shrl mov cmpsb in jp sub mov divl and sub push xchg inc mov jl sahf xlat pop adc js jmp jno les pop pushf icebp xchg aad cmp (bad) hlt or (bad) arpl fdivr sbb pop jl fs xchg lock sub xchg scas je mov sbb sub or pop pop rcrb xchg xor cmp sub mov inc movsl and mov inc mov ja in adc shrb fidivrl fsubl cmp insb nop rcrb mov (bad) shll mov adc fstpl popf xchg stos push jle mov sti jae into test (bad) sbb xchg jle add xchg or and xlat xchg scas mov inc mov cmp jg adc push jno or or inc dec in addr16 cmpsb jnp add (bad) and fstl leave pop pushw pop sbb dec inc mov xor adc nop lea shll and nop sti pop and (bad) push and mov divb out dec pop fidivrl cs aam dec sbb loop add shl (bad) je cmp mov repz cltd jge fstl xchg cs insb xor aam (bad) sbb fwait push cli dec push js mov push out stc stos (bad) adc out mov push je,pn pushf vmread jp adc bound shrb sbb in aas popw push dec sti cmpsb std lock add imul or cld data16 out sahf lret popa cmc push mov inc rcll ljmp mov mov rolb adc lret cmp push xor push rorb and jl cmp mov into jl sbb xorps shlb inc js rcrb mov cmc xchg lret (bad) mov sub or fstpl xchg xor addb cli xor mov test ds jo cmpsl sbb out pop xor pop dec cmp and sub pop (bad) push jb outsb popf sub push jg xor psubb cltd mov sahf add pop add je mov enter sbb pop sub cmp mov mov loopne sub icebp mov into imul arpl cmpsl imul jno dec mov fstpt or and and hlt xchg pop or out jl xchg andb mov fs cld scas jno into jl add dec dec mov mov sbb push iret jge adc scas gs loope popf xchg or repnz lods pop pop push sbb out fimul pushf into mul loop mov (bad) push mov push inc pop inc cltd dec xor loope mov ror std lock xchg pop divl pop push test ret cmpsl adc xchg jl cmp inc mov popa ret and fsubrs les rcll into lahf xor push shl fsubrl adc or invd adc jno xor outsl out gs cmc bound and xchg sahf cmp mov enter jmp aaa mov mov rcll psadbw jl mov pushf adc pop in mov push (bad) sbb data16 pop cli inc mov mov cmp (bad) xor pop dec dec push pop xchg jmp mov cmpsb push inc mov sarl and xchg cmp repnz mov aad inc into std jne sbb out mov xchg sti dec ljmp out les push dec mov inc xchg out jns mov cmp add das iret negb mov fwait jo push fcompl mov xor scas sbb jp sar and sub inc scas or dec rcrb xor xor add aas insl das int3 mov insb sbb mov xchg dec xchg int3 dec popf jnp push mov lods mov mov icebp daa fdivrl push push mov xor pop sti mov dec rcll mov jno rcll add cltd call push (bad) dec inc out addl jae lea aas dec add popf rorb sub sbb mov lods add mov outsb in push mov push and pop xor jns gs dec lods jp jmp jo (bad) out jecxz adc out adc addr16 aas (bad) or lret jecxz pop in dec push insl push xor jns sbb repnz roll adc cmp and jne adc push imul xor faddl jl jle out cmp fcmovbe push adcl and jbe int dec (bad) fstpl push or xor (bad) outsl idiv mov test incl (bad) repnz insb sti mov mov push sub fsubr jae (bad) insb jecxz mov aaa outsb mov and enter pop test popf adc or aaa lahf mov dec jo outsb mov pushf pop mov (bad) aas jecxz inc xchg fidivl pop add push stos and jge jo xor test iret daa inc and fcmovnbe pop xor (bad) in sbb or add xchg xchg or rcrl and bound aaa aam jo lcall add inc fsubrs push (bad) jl add int3 div jbe ljmp xchg inc cmp test nop loope or pop data16 enter cwtl sbb fs cmpsb push scas loopne push and out loopne movsl movsl iret ds je popf ljmp adc mov into pop repnz push xchg out fs push mov dec dec xor cmp scas stc push jecxz pop adc mov lret leave dec lock xor in mov mov movsb in mov sbb insl xchg mov sub push sub sub and jb or das jp xchg xlat inc inc test jno mov aam dec xor pop shll lret fld (bad) push repnz cs fcmovne cmpsb insb (bad) call cmp xchg or xor pop jecxz ficom ret pop test xor add adc jl movsb out mov xlat xchg jae hlt movsl mov pushf imul shlb pop dec dec fldt xor pop mov mov movb xor push xchg xchg bound dec std imul mov pusha jns stos js scas and fs das mov jecxz,pn hlt aas and mov mov fdivrs movsb es xlat push pop cmc xor insb movsl into jmp add cwtl xchg xchg xlat sbbb (bad) (bad) jmp div bound dec test pop cmp push outsb mov xor pop jl prefetcht2 or sbb inc call add xchg lods jbe stos loopne bound ret add and xchg pop push popf xor fisubrl adc xor mov repnz push mov aas xchg das nop xor mov jne mov addl scas jnp divl lock fiadd dec push inc fiadd add mov repnz mov mov xchg leave mov pop add fidivr mov fcoms leave data16 xchg sti int mov sahf xor xlat inc sub inc push jae add inc xor int3 pop xor sti out addr16 addr16 dec call pop syscall call fwait mov loop mov sbb mov sbb int3 jns lcall in bound jne repnz popa push xchg mov sbb popa lret mov imul or leave ss std adc lret mov or sbb mov decl pop rcr (bad) ljmp in dec push sbb lret inc cmp les or outsb fwait test inc ret mov mov shrl loop and mov lock xchg pop aad jecxz shl mov xor lods xchg adc mov mov and lahf cltd insb clc jmp (bad) push es mov cmc fwait lret mov call and adc pop sub je jno mov lcall leave adc push movsb jno mov lahf adc (bad) stc dec jmp inc add sub jmp int3 push (bad) mov ja or xor icebp mov pop pop sbb pop xor push mov xor mov leave mov sub pop sbb icebp pop mov jo mov jl mov gs rcl mov lds (bad) cld push imul push hlt jb jno mov (bad) cmc sti icebp inc mov sbb in jae incb daa jl div sbb popa out xchg push dec mov imul xchg ret lock inc pusha sbb (bad) push rol test ss repz mov lock movsb push fisubr and adc pop fs dec stos adc mov add dec daa pop fisttpl jecxz (bad) out sahf sarl add mov and test adc push adc call push mov mov jb pop jge mov (bad) mov jo ret and xchg out and loopne fs or ja dec jae sbb aad pop jmp sub add cmp adc sub cmpsb (bad) in push push (bad) movsb fwait sbb dec cmp pop js mov cmp push mov mov xor push add outsb inc jecxz and jmp xlat adc dec push loop xor mov xor je aam jb lahf enter and jecxz nop mov call push data16 out movb pushf adc (bad) xchg es (bad) jne sbb fimull data16 lods out sub inc or mov lds xchg sti jne jns ljmp lret mov push push pop sub rol push xor sub sbb out mov jp jno cmp push and inc in jge mov mov addb push (bad) fldcw xor push mov jb inc push jl rcl mov jl daa out fistp cmp js sbb gs xchg je imul push xchg xor jne push test jo icebp insb movl lret mov stos ss iret adc (bad) jno dec inc and fdivrs push loop xor push jbe leave dec icebp adc cmpsb jl fdivs pop mov gs mov mov gs popaw jle orl push mov add fcoms dec or jno lcall xchg dec xorb outsl aaa xor sbb arpl into sub mov cld jmp jge jne jecxz pop (bad) cmp mov jno jo inc push les mov fsubrs mov lods mov mov xchg imul xor or clc pminsw and lret mov add movsb sub ds jno insl push dec push mov push (bad) fdivrp out pop fistpl stos dec cld bound icebp dec in mov xchg arpl cli mov aaa mov mov pop fisttpll sub xor in xchg int mov hlt lret lock movsb cmp lret cs jne into sbb jmp xchg loope psubsb sbb call jg cld adc pop mov mov dec and subb call dec daa in out adc cmp repnz repnz sarb mov sbb movsl andl pop mov addl jecxz push push pushl in pop and or mov pop inc out leave mov sub adc pop out push sti sbb lea repnz sub and mov (bad) int3 mov adc adc pop cmp adc cmp sub loope dec and or adc fnop mov rclb into jo mov (bad) daa sti mov insb rcrb xorl test shl (bad) ljmp adc mov shll shrl mov jnp (bad) (bad) xor adc push xor (bad) (bad) sub sbb cld dec and push or and loop mov test scas imul lea ret sbb ss sahf mov cltd push loop add hlt mov (bad) loope fistl insl fistpll daa inc imulb cmp inc mov and and aaa or mov and addr16 (bad) enter loop (bad) xchg push call je mov adc pop lcall sahf adc test mov popa outsl dec hlt arpl mov add les mov mov imul lret lahf pop sbb pushf sbb jg pop jle movsb aaa add mov test mov dec xchg jbe inc xchg adc xchg in pushf sub sub rcrl jmp test fstps (bad) test out jecxz je jp and mov jnp xor data16 dec pop pop cwtl repnz fmull in adc mov rolb mov push jle lods scas cmp lock sub sbb cmp aas push pop das je and gs test mov je push lods or loopne test jae adc (bad) fwait loopne sbb (bad) inc (bad) fsubs sarl lret ret jno subb or fsubr ds ljmp gs fnsave xor sbb (bad) jns and and scas mov lret mov pop mov mov pop sarl pop push dec ret cmpsl imulb lahf sti xchg lret jns je lods stc stc adc xlat stos add sub sbb pop cmp adc decb mov xchg lcall sub (bad) in cmp push mov dec cld out cwtl xor call xchg sub xlat icebp mov cs and mov cmpsl mov xchg xor mov test or cmpsb repnz gs nop add in push out popf movsb inc mov and sub pop sbb sahf push insl push pop push dec rcll popa fimull jb jg mov mov or lods (bad) jecxz sbb test pop inc (bad) loop xor in ret mov push adc data16 cld push pop insl inc jne xor jmp xchg cwtl and test call iret sbb popf test lahf mov lods fstpl pop add int3 cmpsb dec (bad) loop lods aaa cmp rclb fldln2 ljmp cwtl fwait inc aas or ja ja inc mov into lahf je cli xchg xor cmp mov ret mov cmc mov sbb cmpsl add or or mov in xchg mulb cmpl je movsb sub loope xchg dec out pop push out loopne pushf sub fldenv test sub inc sub pop xor xchg inc jl xchg and and stc mov mov les out sub inc stos mov stos addr16 or dec ljmp dec adc xorl and pop dec (bad) fmuls int dec ss loopne cmpl inc icebp sub out xor jns fsubs mov push int insb mov ds arpl cmpsl dec xchg lock repz js stos jns (bad) les push add into and mov movsl xchg outsb aaa rorl shrb lock pop cvttps2pi movsl mov xchg pop hlt popf inc mov or paddb pop xchg movsl jmp hlt pop adc dec fidivr jno ljmp cltd jmp fsubrl jno out in or cwtl mov jne pop outsl push out push jmp scas and xchg push stc sub arpl pop test sub scas add rorl adcl movsb mov cmp js pusha pop sub pop dec fwait repnz sub add push sub in (bad) fist cmpsb xlat add mov (bad) rcll push test xchg (bad) loope insb fstl mov cmpsb shrb movsl mov (bad) lcall lret cmp out push (bad) jl jno adc scas rcll outsl mov icebp or addl mov scas inc mov dec mov movb movsl repnz pop jns jecxz push jne jne mov push fisubr fcoms cmpsb sbb test or sbb lret (bad) mov dec pop aam int sub sbb jb jbe fnsave sbb sbb out cmp jbe inc lahf jbe repnz (bad) jo xor lret jle xchg (bad) movsl push cli mov jle jg clc mov shl dec pushf sti int3 mov fwait loop jg pop fbstp movl insb mov cmp rclb cmc jae data16 flds push les and and repnz (bad) cli outsl xchg fmull mov incb push or cmpsl fdivl sub inc (bad) xchg xchg xor mov xchg (bad) das pop xor ret mov call fldl in add lea mov ljmp add fwait popa xchg and mov insb or cmc jmp adc mov (bad) call mov mov xchg cmovbe cmpsl xchg mov lahf mov xchg mov adc adc jle mul mov bound int3 fwait push mov test or fst xchg rcrl mov dec cmp int sbb (bad) movsl mov adc inc lret adc pop icebp inc adc in pop rorb xchg aaa and scas inc and jns stc addl inc add cmpsl or jb and mov inc aam sub pop popf jge es xor xchg push arpl lret into fldl or or lods xlat icebp jg clc sbb ret test test ja mov ds jl push (bad) adc add fdivr xchg sbb pop sarl adc lcall aad mov add (bad) mov hlt sub ret pop xchg dec aas jbe fwait loopne or cmp dec out sahf enter add adcl jnp add lods jl movsl out jb or out sti sti movsb add jb stos call dec sub jmp mov insb enter jno pop inc jae in jbe dec xchg and cmc pop sub dec sbb mov sbb cmp in mov pop aas loope push cmp icebp xor cli dec (bad) jmp mov or inc jp pop push mov mov mov mov out mov add sub xchg pop xor xchg jle,pn jmp mov iret dec dec push xor loop cmpsl rcl hlt (bad) sbb jno rcr inc in adcb outsl push xor add fcmovnb xor inc aas xchg ret dec pop sbb (bad) in jge (bad) mov sbb sub pop xchg loopne jl rorb test aad cmp xlat out dec xchg xor mov test incl pusha rcrl inc mov dec sub jmp push cmpsl mov cmp (bad) pop adc jo xor xchg imul inc in loopne dec sbb push ret mov rorl push push add daa push adc hlt js pop inc jle or push pop loop cmc ljmp mov inc push pushl pushl push test pushf push hlt js jno out push xchg jl stc imul mov in out les xchg sbb arpl push mov add fmulp leave mov xlat jnp (bad) out sub in stos add sbb sub es jbe cld add jns aas inc fnstcw mov lahf push (bad) (bad) mov pop jbe ds cmpsb insb adc das in cmpsb mov or int stos mov pop lahf test iret push aas add ss cmc das and lcall sub out push push ret jnp dec out push jnp sbb cmc push mov cmp popa stos or sub jg and sbb insl pushf adc imul and inc sub push inc push sub pop mov jl inc in dec cmp pop add sbb xchg add enter das mov (bad) mulb xchg or push loope out cmp mov mov loope add adc hlt call loopne nop xchg and bound xlat fisttpl stc sub xchg inc hlt sub or push adc fdivl lret arpl jmp hlt ja repz add test nop lret divb pop lods inc sbb into icebp pop stc (bad) ss mov or test arpl xor sbb aam clc sti adc push xor leave jp (bad) adc jl int sub adc add lcall mov mov sbb aad daa add mov bound stc mov icebp dec call pop mov lea mov movsl hlt or test subl ret sbbb adc dec dec push or (bad) sbb xchg push mov movsl test fstl addr16 paddusw lods call mov in into int3 cltd outsb int3 jecxz in push repnz test shrb inc fcoms aaa gs (bad) or in imul adc or xor test xor pop movl pavgb add jge jns ljmp mov aaa mov inc int3 sub lret clc je cltd jge jge lock dec lahf dec add or orl jp mov stos mov repnz mov enter jns jge mov mov test cli cmc les xchg insl sti dec pop lret clc xor or or loop les mov outsb ljmp add test leave or je jb or inc imul and lahf imul dec sbb insb loopne xchg (bad) aaa xsavec mov rolb (bad) int3 lret divb push lcall mov hlt pop lret in xchg sbb test dec add test test sbb mov pop or mov and pushf test and xchg pusha fdivrl mov jmp js sbb cmpsl es loope xor cmc inc aaa lods mov mov cmp cmp ffreep xchg (bad) in sub mov sbb cmp add in sub sti pop lock fisubl fcoms into enter pop dec mov jbe jb push and fsubs aad mov xchg lcall xchg cmp cmc test xor sub ret or fcoms sbb lods inc hlt std andl dec bound cs and clc movsb or fs mov pop sbb popa loopne aad adc mov pop ljmp mov dec stos popa inc sub lahf call push iret pushf stos cmp lahf and pushl mov add stos add or jp mov fsub lds insb fwait mov add aad int mov mov leave mov mov push sbb xchg adc rcrb pop jnp jmp std mov cmpsb ret fwait cmp pop fcmovne cmpsb lock in xchg test adc mov test xor or sub mov cmpb (bad) push repnz (bad) dec call sarl cmp cmpl add mov pop mov loope cmp mov or gs mov cmpsb inc in notb lahf adc jo,pn arpl pop sahf mov lds jb lods jg ja aaa sub pop js out cmpsb mov lahf ss and lock xchg in (bad) mov jle (bad) sub inc loopne add imul or sub mov push push inc lea iret push dec xchg or mov mov ljmp xchg in cmp sarl mov jb dec sti sbb gs mov fldt cwtl mov jecxz movsb ja dec repz sbbb loop sbb mov das loopne (bad) and xor mov adc lds fwait cmp ljmp cmp mov cmp mov pop jbe lods mov push sbb fstpt add mov mov inc jne mov cld aam enter test ficomp pop les sbb ljmp ret xor adc jnp fstps repz sbb pop lcall cmpsb mulb jbe sti (bad) jno ljmp fs adc rcrl in ds inc scas adc dec or stos data16 fbstp adc and xor sub imul or lcall push cmp and sbb push pop sahf and aas sarl fadd fcmovu flds jns mov sahf mov mov es jne fwait ret or add in imul lcall pop notl push repnz pop clc insl pop addr16 dec mov push enter call mov sub dec jne enter loopne imul push xchg lret aam xor loop mov sbbl and jmp idivb repnz dec pop mov add jno or out inc fimul dec cli jmp imul shr hlt out les ss xchg pop bound punpckhwd std xchg mov jbe shr dec lahf rol std xor movsb jno rol lock push adc ret sahf aad jne dec inc xchg push mov test pop add xor mov outsl shrb adc xchg dec scas sub mov mov test sbb je,pn mov mov fisttpl dec xchg pushf out cmpsl inc nop inc push js xor cltd push sarl (bad) pop imul jns scas clc inc sbb inc mov push sub es call icebp push repz in jb pop mov loop daa jmp sub push add sbbl push sbb xor mov das test push jecxz scas xor push xor pop lds mov fwait out sbb fcomi inc cmc add jae dec adc sbb mov mov xchg mov jno mov divb cmp xchg loope (bad) cmp xor add xor insb push xchg movsl repz inc inc es or loopne lock aaa jle test mov dec mov mov mov stos fistp push mov sbb sahf or es mov mov xor inc add insb inc cwtl mov call or jle inc pop je test jl or int insb lods xchg mov cmp mulb mov adc rolb ds push fdivs lret adc cmp js insl (bad) mov scas repz test cmp xor into sbb lahf pop shl jne in (bad) insl aad xlat cmpsb jae xchg add xchg xchg pop or mov xchg (bad) frstor popa dec sbb lods jnp mov jns gs lods push cmp mov divb repz adc out dec cmp daa (bad) fnstenv cmpsl fwait push lods push shll pop out xor sahf push dec int dec mov andnps repz mov shrb mov inc repnz inc sub pushf mov mov mov xchg jne mov xchg dec test jne fstpt fist leave repnz xlat shlb stc mov lcall inc lds sbb jns push outsb xchg pop lea push mov (bad) mov sbb mov in das pcmpeqd test lcall push adc movswl imull dec dec insl sbb ljmp inc push ljmp mov fadds mov xchg cmp psubsb jecxz insb daa jno inc fmull dec xchg push int ret pop stc lods mov in lods ss sub cwtl scas (bad) insb xchg fcompl xchg xchg pushw mov xor pop test scas cmp je int3 add push jo movsl cmp sbb inc pushl ret lods cmc mov enter xchg sub add (bad) mov sbb test xchg mov (bad) cmp mov scas roll and inc push xchg dec mov test aam std lock das jge stos icebp cmp rep jnp pop cmp inc jl push adc (bad) repz mov cmp xorb popf and call fisttpl les gs cmp repz dec sarb and xchg in xor lods mov arpl loop jmp dec clc jmp lret sub fild (bad) cmp push mov xchg mov mov push jo leave pop pop imul jno and call movsl fist push xor imul inc lods and lock sub sbb adc loopne or nop add cld xor adc (bad) mov jmp dec lock test inc mov ss fucom stos imul mov in jle nop in fwait jge ds jno ss scas cltd fsts sbb lods add fsubrs inc mov aaa add xor adc ss push fisttpll andnps pop pusha jne aad add pusha inc mov cmp mov out setno add in pop lret ss push gs clc out dec scas aaa mov mov xchg inc out xor out mov (bad) sahf aaa mov aaa out rcrl pusha inc mov inc rol or pop lret xor ja push jmp mov (bad) stos push sbb pushf loopne and inc xor insb cli mov push mov arpl sbb pop xchg imul mov int repz xchg dec inc push xor pop mov in mov mov sahf push jg pop scas pop dec inc (bad) and jo pop jo outsb inc lret std je jno xor outsl call cwtl add fs int3 incl outsl scas lea in dec ss rolb inc test fisttpll jle jmp faddl xchg outsl mov hlt aaa jb xor xchg adc imul cmc xchg nop jns cs jmp (bad) xchg cmp cltd jno out cmpl mov or jmp popa les aas jne jp imul adc fisubl cli fildl or ss (bad) insl outsl add daa adc movsb lods out cmpsb add bound and adc mov lea es mov mov mov adc jne fisub aad (bad) xchg mov pop andb mov mov add mov sbb ljmp pop movsl xlat sub lret push push stos jae push loopne jmp cli cmp pop mov hlt inc fscale lock or mov sbb cld jbe and bound push jmp cmp fisttp push jp or push push or cwtl movsb (bad) dec add adc mov adc bound and sarl loopne jecxz fistpl lods mov dec xchg fmuls addr16 testb popa mov movsb sti xchg (bad) sub fild adc sub sti mov (bad) sbb mov ds popa lods xor dec lret lret jne aas add subl fwait (bad) xchg and jmp xor or sar and sbb and inc pop popa out lret sbb add in out dec jmp lds ret ret adc aaa rcrl scas adc lret and out push mov push jmp dec mov sub mov jno push fwait jl jns mov nop pop dec inc int sub cld xor xchg (bad) repz jl,pn cmp push or (bad) lock icebp jecxz xchg sub pop sar incb out mov outsl cmpsl les and hlt mov add push or fnstcw mov inc fisttp (bad) into and mov cmp js orb ret (bad) into push sbb cltd jle addr16 pop fcmovnb movsb xchg sub or in dec push sub cmp out out xchg dec add out in insb xor push (bad) pop enter cmp push cld imul sbb in push std ror aaa adc push add cmp cmp mov pop adc bound or inc or jge sahf mov mov push repz xchg dec jnp fimull cltd bound shlb push push lock sub fcmovb cmp icebp pop icebp out into scas xchg push pop sub insl mov jae sarl data16 adc dec fsubp popf stos rcrl mov sbb and (bad) xchg inc sbb add pop js sub es xchg outsb repnz mov icebp repz adc xchg xchg xor lea pusha in push xor subb nop outsl pop push or imul cmp mov in and movsb dec shrb bound mov add mov std lcall push mov cmp lods int3 mov sbb mov sbb xor fdivrl or mov cltd jl jl leave mov push jnp and (bad) sbb jmp xchg inc jae jno sub leave sub lock int3 fistpl jle jl outsb dec mov sub stc in or xlat sub push jle push xor repz xlat cmpsl and add add push pop xor mov adc cmpsb adc clc and pop repnz jmp movsl cld add nop push push pushf add es lret lock div inc data16 sub cmpsl out es movsb sub jp sub test xor add mov fcoms fsub jg aas incl pop dec cmpsl movsl pushf arpl into xlat scas jmp sbb jmp lods dec aam cmpsb andl int3 jmp xchg nop fnstenv outsl jne stc xor jle divl inc lods sbb fwait addr16 push (bad) cwtl cmpsb jae jnp or xlat loopne lea xchg test sub in jne cmp pop dec mov inc aad push sub pop pop mov jns rorl inc out arpl lret sbb or outsb xchg (bad) fs int int3 nop mov sti xchg repz adc fwait push inc and xchg xchg mov mov mov push pop sub roll jle push into adc pop mov sbb rorb scas add adc nop pop lahf dec jne mov insb cmp inc int3 xchg es lds (bad) test scas inc fsubrp jno in shll mov sub xor sarb add sti in adc jo add adc xor movsb xchg jmp sbb leave mov cltd cmp stos jge push xchg (bad) adc add fsubrs sub out rcrb fptan call jg push inc fnstenv jb in cmp lods rcrl mov lea xor dec mov aas insb xorb gs xlat (bad) mov cmp dec sarl add and iret jbe nop bound sbb and adc fs push or lcall cmp mov repz inc out nop sbb xor or push rorb fcmove xor lahf or (bad) mov jns cmp mov mov (bad) cmp mov idivb aaa lea idiv mov push gs dec pop pop or pusha pop mov aam jg push inc sarb push adc mov fnsave ret or mov fist fisttpl in mov aas sbb push jg sub push pop mov push ja pop out in adc (bad) out pop lret insb fadd mov fidiv jl mov lock jmp imul mov scas adc les out mov jne inc sub adc mov jne ds xlat mov ds lret mov dec xor popf pusha xor (bad) mov aaa (bad) jno jge xor add or sbb sbb jbe clc rol insl arpl dec xchg cmp inc aaa inc jge and xchg sbbb push jnp mov mov adc mov xor out mov mov lock cs mov cld fldcw (bad) sahf inc push loope (bad) lret add in lcall lods adc cs dec xor add cmpsl jae icebp les icebp cmpsl pop and push mov ss lahf (bad) cmp xor pop adc xor and sbb aam loope add push movsl loop popf fsts pop mov or xchg lods pop imul sub int jbe xchg mov clc out clc push fcmovu xor mov int3 adc lock inc ffree cmp mov mov addr16 cmp out iret mov outsb add ds or push int imul loop cmp and mov daa jno pop outsl hlt nop mul je add int fwait cltd jmp imul mov test add and xchg mov lret xor xchg mov aad repz fadd add bnd sub pusha in lods jp pop (bad) fmull push jo jnp,pn aas jne das shll mov lahf in cmc mov jno push cmpsb sbb les mov mov xlat jl or mov into daa xor push xor dec or pop lods mov mov mov add adc arpl cmp stos lahf mov js push das cmp pop je adc inc xlat fdivrs mov add add mov bnd jbe ss adc mov mov mov sub or outsb ljmp smsw jge test and sti push (bad) mov jbe out sbb jecxz xchg clc out fsubrs icebp dec push inc cli sub daa jl adc mov inc arpl pop aad mov sbb mov jnp cmc and jns jecxz int3 mov in out scas lds xor adc ret pop adc lods pushf inc add jp cmp mov pop or fadds popa mov cmpsb mov pop pop push pop pop ds dec (bad) lods cmc stc mov loop shrb or leave pop sarb (bad) and mov sbb addr16 cmc addr16 jp xor cwtl mov pop mov push sarl in stos cltd notb inc cmp mov mov jecxz inc dec mov pop add or cmp sarb lahf aam loope bound stos inc ret mov mov imul mov lret sbb gs mov orb fwait xchg jecxz pop jbe jo testb jb push mov and xor mov mov fidivrl push xlat xor cltd into mov das push popa add repz inc pop fldl jmp roll and jle leave add subl jbe scas cmc stc mov push cwtl aaa and mov xorb arpl rcr dec mov aam mov xchg (bad) cmp andb inc stc push xchg pop imul outsl movb or xor das in repnz cltd pushf fwait je dec dec add lea cmp arpl sahf rcrb dec pushf jmp add icebp jnp (bad) mov shrb sbb pusha movsb aas jb jl out mov movsl loop aam jne sbb ss popa insl pop sub push enter cmc fs sbb sarb pop jp mov sbb shll loope stc fwait popf cltd xchg jne sbb fisubrl aad pop and xchg js jle pop push fsubrs inc push xchg cmpb sbb pop jae int fsts adc popf mov (bad) jg xor insb sub test (bad) jbe popf inc addr16 jmp out pop xor lods scas pop sbb xrelease push cmp aad iret insb lahf lods aas (bad) lret outsl xlat rcrl sub (bad) enter jmp test adc add push stc dec xor push xchg pop add inc nop bnd mov dec leave push out and data16 pushl (bad) mov outsl sub (bad) jecxz,pn push (bad) icebp jnp mov nop cmpsb or mov lahf mov inc sub jp cmp or push push bswap jp sbb add jne mov aas cmp int inc lret add pop int sub inc lcall loop lcall push shr mov ffree xlat mov imul outsl mov in cli sbb fdivrs mov mov inc xchg pusha rol cmp loopne aaa fsts sub popa push add and enter bound mov or hlt jp lds das push mov jge in adc popa hlt jno ja jmp lea enter data16 adc daa rep in out sub sbb aas lods out mov adc insl (bad) stos imul cmp xor fwait int xor pop mov add push pop xor sbb leave popa ficompl cld dec sahf mov fs lods sub loopne rcll test sub sbb pop mov inc aas jmp inc mov adc int3 mov push add and xchg (bad) jmp sub mov stos loopne xchg inc insl not sub cld add mov jmp lret mov aam lods dec push or xchg add adcb int sar mov dec ficompl xlat fwait xlat ja adc cmp pop (bad) xchg lods mov xchg and adc das dec jmp int3 fdivrs out xchg in ljmp in or stos push dec xor jae add jmp mov xor xchg jge das pop jmp mov pop push xchg test fimull repz add sub push jnp xchg mov xor out into and push aad push pop xor push push aam xor mov adc jae,pt cld ss ja mov jg pop fnstcw enter aas and (bad) jbe push ja pop dec stc inc xchg push jbe int loopne or rorl ljmp fldl cmp fstl mov pmullw scas inc cmp mov leave sbbl scas subl ds pop aaa lods test jl mov mov push out rorl cmpsl mov jecxz mov jno mov add pop das push mov (bad) xor je scas lret mov (bad) testb pop das push pushf and jmp cs imul jbe mov fistpll jmp and and push stos mov push push insl ret fisubrl lods xlat pusha sbb push mov xchg imul popa jmp aad data16 mov or out mov cltd arpl xorb cmp mov repz (bad) lcallw out add movsb cs (bad) mov inc sub (bad) nop adc enter shll jp cld adc or xchg rolb mov (bad) cs dec mov pop or cltd adc mov (bad) sub xchg outsb (bad) repz sarb pop js xor xor adc fldl imul xchg gs mov mov and or ja in mov fdivrp fwait (bad) pusha popf jecxz daa cmp or je js mov or dec or fdivrs (bad) insl mov adc cmp outsb imul jo out sarb daa lods mov repnz sub xchg lret jbe jecxz xlat jp imul (bad) int sarb mov fwait (bad) cs dec sbb rorl fcmovnb daa fldln2 out sbb mov adc mov test pop dec movl add sbb lds daa lea dec pop mov push mov sbb cmp fimul aam pop pop dec outsl adc xlat xchg jns xchg jbe je daa mov push mov sub pushf pop into outsl adc jbe js dec mov xchg aaa jp in xor jo cmpsb arpl jo push dec pop inc add movsl sahf stos sbb jle inc push pop jmp sbb pushf (bad) not test push stc aas test mov test sub mov sahf xor adc wrmsr aad sub push aad lret jge js cmp adc xlat inc je pop cmpsb push inc or mov cmp mov or push mov mov fist sbb mov or mov cld adc divl add test nop movsb jmp or imul outsb add notl rsqrtps (bad) aaa movsb jecxz shll mov ds xor daa inc fdivl mov sbb or mov aad xchg mov gs int test add je lret mov cmp mov incb bound adc in gs push xor frstor lcall mov pop cmp jb cld xchg aas dec sub push sub (bad) scas daa mov sub and std and popa into cmp lods fistpll in fadd pop test inc out cmpl xlat jle add xor fwait xchg arpl addl addr16 in push insl push pop ret out test bound jge insl pop fdivs aad mov mov lahf iret sbb sub pop lret pop call std lahf dec popa mov fsubp mov mov clc fimull cwtl mov leave decb test sahf fwait inc adc jb pop loop inc imul lods or xchg mov aad lret sub xchg mov loopne lret pop and add mov nop loop cli repz sarb mov scas or inc cmc pushf addl jns mov jge mov lods insb xchg adc data16 cmp aam gs xlat inc imul inc push sbb mov dec insl repz icebp hlt es or xchg cmp sahf ret mov xchg sub jp mov lods mov dec lods mov inc sbb mov out imul pop (bad) jbe mov jmp jns jne and pop outsb or push fs push push cwtl fs inc adc mov pop inc push cmc push pop jmp lret mov mov xor sbb xchg mov jge jbe xchg mov inc mov aaa ss (bad) push adcl jbe sub jne shrl js sbb in das push aad xchg mov push arpl mov mov stc mov lret dec aam sbb ds lcall scas in js mov mov inc fcoms pop adc sbb sub call ja push gs inc jno ss push into pop clc test adc cmpsb imul pop sbb mov mov fadd rcll repz add push adc mov into imul lret xchg pusha inc gs int jbe push imul (bad) ljmp mov sub arpl lods xor (bad) rclb imul push shlb mov xchg jae jp and popf in inc stos mov jp insl or cmp in mov jno bound rorl repnz mov mov aaa push clc inc xchg test cltd push pop cmp mov (bad) xchg dec hlt xor cmp test adcl pop pop mov loopne daa pop adc lods cli push mov fwait test xor sub in fbstp mov xor mov mov inc and dec ficomp mov mov sbb out out pop xchg xchg mov dec jecxz pop jae ja inc push or insb add sub icebp pushf addr16 shll stos or adc aas (bad) gs and addr16 sub push sub sbb movsl stos jecxz into xor cld xchg push mov inc lock std lock popf loopne xchg mov dec cli push jbe push int3 das mov pop mov push repz dec and jmp mov movl xchg cmc pop or sbb mov pop fwait or sbb jle popa ss cmp icebp push stos lret cmp cmp xchg mov enter mov mov fisubl jnp cmpl xchg or jp ljmp cli cli repz stos shrl cwtl xor movsl xchg pop ret shr (bad) pop lods add mov jge loopne out xor jns mov out les cmp xor aas testb adc inc ss imul iret sbb ret lds ljmp xchg lret jno test int mov mov push stos (bad) stos pop popf sbb and clc cld jae push dec push orb adc popf and jmp mov into push sbb push mov or ja adc xchg cmp outsb xchg mov mov fdiv adc iret hlt push daa dec mov xchg repnz into pop es adc arpl ja jl sub and ja in sub fistpll xlat insl dec jp rclb lds xchg setl adc mov push pop lahf xor adc sbb or xor mov insl andl jnp nop fimul xor ds push or and adc in xchg ljmp mov push inc cmpsb mov ds stos in dec adc mov loope aam xchg add lods cwtl push lock xchg lret pop das push test jecxz adc or pop push int cltd ja adc lret jno jbe add push push outsb ds or cmc jl push add mov sbb or mov lea pop clc test cmp jno add ja das push push mov pop cmc rcrl cmp sub cmp fcompl or jae inc andl cmc dec push (bad) (bad) jne adc pushf enter call jae mov addl (bad) xor mov aas xor xlat out test adc inc roll leave push adc pop loopne adc es arpl push push sbb test inc sahf add inc dec xor inc or adcb push fcomps hlt ss inc out test jmp arpl shl pop test inc xor roll cmp mov cmpsb mov pop scas xchg xor mov pop popf dec sub cmp pop lahf incb xor adc mov sbb jle sahf lock push mov andl rorl stos cmp xchg fdivl cld daa push repz jno loopne sbb push aas insb push and xlat mov sbb jae adc push ret (bad) outsl test loopne cmpl stc ret inc scas mov mov pusha mov ljmp xor adc lahf jmp inc iret add and scas lods hlt push mov sub clc mov mov clc sbb dec fistl jae or cmp mov std outsb mov inc xchg cmp (bad) lock sbb pop mov lds ja mov loopne and lret jae or mov insl into inc inc ljmp jb cwtl mov cld push mov sbb (bad) stc andb ficom add repnz pop clc bsr in ljmp (bad) push xchg repnz ret mov xchg pop xor dec fwait imul pop and inc mov ljmp push gs fidivr js cmpsb xchg add aas mov jne (bad) ljmp insb (bad) mov leave fsubl jbe xchg insl outsb xor ljmp push movsl jp movsb cmpb adc cmp es add mov pop dec imul dec fsubr add scas mov push jb xchg cmpsb movsb mov arpl cmp mov xchg jae jle xor cmovne xchg xlat xor add lret or sub jle fnsave (bad) fcmovnb mov sahf pop xchg daa jmp movsl sbb ficomp cmpb add hlt pop les xor call add cmp jns sub (bad) cmp std mov pop xor es sub cmp es pop mov mov pop fs add mov mov mov push jp dec shrb sti dec leave push fdivrl lahf into jae jmp adc push in inc xor arpl jae mov roll xor xchg sti or lret popf out scas (bad) mov inc push push or jl or mov hlt stos sub xor push mov les das sub and mov add and pop dec (bad) mov xchg sarb xchg (bad) jbe jle sbb cmp dec cmp (bad) fsts sub mov in cwtl cmp setle sbb loopne daa (bad) dec mov inc xor fmuls cmpsl inc retw and mov pop fcompp call and loopne inc repnz mov push add stc xchg mov sub jge pop nop pop jl push mov jmp inc popf je push push data16 out mov stos mov pop enter jbe push xor jmp cmpl sbb xchg icebp enter test icebp hlt nop popa mov pop sub xchg push pop icebp call sbb xlat mov int3 jg jns pop pop stc xchg cwtl mov xor inc cmp dec or cmp xchg xchg aas xchg (bad) jae out (bad) fiaddl stos fwait push xchg xchg lock pop push loop jmp jae leave pop test sbb sti cltd js dec adc ja or sub ljmp adc and xchg in leave je es cmp frstor ret add divb xchg pop (bad) jbe sub push mov xchg lods inc lea push stc cmc mov aam pop pop xchg popa lds xadd fsts inc push sub jecxz pusha (bad) jae mov repz sub xchg jg jmp std jae xor cmp pushf sub sbb xor ja xchg out mov pop popf out and call xchg lds lea mov les movsl fmulp fwait cmp cs push (bad) rclb dec shrl push pop add or jge pop aad rcrl pop sub xchg bound push js cmp dec aad or pop push jg and subl test js sbb test mov pop mov test push std or and xchg data16 inc xchg stos sub loopne dec xchg jecxz mov aad xor and sti push jbe movsb fwait mov popa loope mov push ss fisubr mov nop cwtl pop rclb scas mov mov enter xchg and call dec push mov pushfw xchg pop bound adc cli xchg out (bad) (bad) sbb xchg push xchg jbe mov ja je (bad) push insl xor mov repz shlb (bad) cli or sarb popf mov and leave mov hlt ret dec adc sbb in stos fs fiadd xlat lcall fiaddl xor mov mov sub loop cmpsl fildl mov push ljmp sti cmovle inc jle cld mov sub xchg (bad) fwait jns stc into sbb aam mov (bad) and (bad) xchg loope and lods sbb and inc and cmp cmp push sbb cmpsl das lcall pop sbb mov arpl insl idivb dec rol lret leave push or mov mov ret lea ret (bad) aas fwait xor xchg push outsb iret push lods adc (bad) cwtl out ror mov fdivs cmp rorl scas lea and int3 mov pop hlt sbb lcall sbb enter pushf sub out hlt pop int out cmp dec ret push cld inc xor test sbbb xchg jo (bad) movsb stc push mov dec out mov and movsb xchg roll push add loop mov ljmp sbb and dec jae and and inc xchg (bad) fs hlt pusha lret and cmp lret test lock js pop and mov ljmp push cmpsl (bad) mov push pusha nop in xchg sbb sbb test or (bad) jb ds add out lods sub add ret sti push mov ds (bad) insl mov ret loop ficom arpl test mov loopne popf and lods adcb call outsl jle sti cmpsl mov movsb or and xchg ret popf sbb data16 mov push add push int fsubp lcall cltd cmp orl and (bad) push loopne,pt push insb fnstcw loopne lock leave pushf jns push xor xchg lds inc test test fstpl aaa jmp clc bound mov arpl js outsl shrl in lock aam xlat faddl or das sub push in pop ja enter test add pop lock or lret push push pusha sub inc push data16 pop mov push test stos mov imul pop out jbe adc mov mov movsl xor fstps ret imul pop add lock inc mov std mov mov adc xchg lret fs movsb test leave fldcw imul sub and lcall fbld stos ds out lea or mov out in jg addr16 out in in test pop ljmp mov mov xchg js xchg jmp push xchg xchg inc sahf pop push clc insb lahf pop xchg into adc lcall jle fs pop mov lret fs jnp adc or sbb cmp mov push dec dec ljmp add sbb rorb xchg test pusha add jle sub je inc adc xchg dec and repnz pop decl rcr and mov cmp ja nop fwait sub cmc jno pusha lock mov (bad) je out hlt imul pop fs mov mov xchg movsl dec outsb fninit push rolb cmc xchg mov cmp lahf outsl jge js pop not pop fidiv and dec test mov and (bad) fsts pop inc jne pop shrb cmc or push stc add cmp outsb lret xlat or cmp cwtl pop xor push cmp sbb add pusha sbb mov movsl pushf lods push mov imul xchg xor mov out lcall adc js and push ss mov call sbb pop sbb sub cmpsl jo pop and xchg inc dec rep shrb dec test adc pop addr16 inc mov lock imull or xor mov mov mov sbb sub inc adc mov mov jge add bound lret fcomps add insl das pop dec pop out pop ja mov xlat lcall idivb fisttpl sbb aam fstpt pop rcrl ljmp mov jns fisub mov mov sub push sbb mov push mov movsl (bad) repz scas inc stc mov inc (bad) and scas shrb xchg jecxz icebp add lahf cwtl cmp in pop pop loope xor les sbb sbb int sub mov or jl insb inc sbb mov mov mov fsubrs mov mov (bad) addr16 push lods or xor aam in or add std in or mov xchg popa mov cmpl das and push pop dec jb lods je pop aad lret push clc sub rclb lods fstl pop test mov rolb popf sbb iret jae mov flds sub push inc loopne sub or mov (bad) out pop mov loopne push add or sub sahf xchg imul inc and xor and cmc (bad) pop sbb adc fcoms add mov mov push or mov adc hlt xlat shll iret in (bad) mov fbld push xchg cltd js cmc lds jae adc (bad) xor jne addr16 xchg (bad) ljmp push lea in test popf inc cmp bound lds push clc fwait movsl ds stc enter add (bad) loopne push mov and pop in xlat mov int mov fistpl stc xchg inc mov stc sahf inc push push enter out push cmc rorl clc fnsave movsb out ja pop cmp add jmp push jmp mov subl (bad) push cmp ja mov fbstp loop dec ljmp fcmovu xchg dec push inc dec scas movsb ss and pop adc push (bad) repnz lcall test divb xchg sub aam adcl jne inc rcl dec sbb dec mov ret repz repz jb push jl add enter xchg imul jno jl pop sbb push (bad) loopne push ljmp mov push stc (bad) ds nop and outsb add sti jbe and add int3 sub incb aaa scas jnp std push lds dec mov test int3 mov in xor xchg (bad) cmpsl jle lcall cmp dec arpl mov popa cmp sarl xchg fstl sti inc mov outsb jl btc mov pop cltd cltd loop and mov jne mov push je addb dec out fwait mov hlt dec (bad) fstl push xor jb jmp pop mov lcall xchg mov cwtl fldenv iret dec imul testl jp mov stos movsb loope jae push or cmp pusha and data16 mov cs sahf push mov movsb mov in adc (bad) and xor icebp dec (bad) test lret aaa pop popa jnp daa and sub jle pop pop jbe imulb jo aas gs push inc adc mov cmpsb sbbb sub ljmp mov (bad) fistpl bound lods (bad) cwtl leave xchg cmpsb hlt mov xor test mov dec mov (bad) out xchg push push in outsl int3 mov xchg aaa scas rolb leave push imul ljmp adc cmpl mov nop addl aaa push pop mov testb ficom or outsb push gs pop inc adc cmp xlat imul andb dec cmc mov pop cmc loop xchg mov sahf stc xchg jmp mov cmp daa mov (bad) loop sub xor (bad) (bad) dec aas (bad) jge add stc icebp (bad) int3 dec cmp ljmp adc mov sti (bad) pop sub mov pminsw cmp sbb sbb xchg or jmp in insb inc fldcw data16 in mov clc pop add movsl fnstsw out sbb int3 jno push test dec cli fs xchg pop pusha jge xor lret mov jle sub imul dec outsb xchg xor pop iret je jne cli loopne test (bad) insl stos cmp frstor jnp in mov xor xlat adc aaa push xchg aad jmp add jmp jnp xchg outsb adc lock popa xor pop pop sub fs hlt sub cmp cmp jg cmpsl cmpl out movb pop (bad) cmp test cmc jmp push movsb popa in (bad) cli icebp in xchg inc inc push daa aad ja ret push std outsl jnp xor xor test divb pop adc rcr lods in insb xchg mov fadds xor enter push flds orl in or out sbb andl int js (bad) xlat fwait cld outsl inc outsl push mov les fwait insb mov pop xchg ret and pop cmpsb scas sahf pop mov mov dec (bad) out adc in mov mov dec sbb lahf int3 and cmpsl push loop (bad) (bad) sub jb or (bad) je mov push lcall pop (bad) clc ss pop mov and xor cwtl adc mov mov sahf (bad) lea jmp inc stos daa (bad) sub fistp xchg es adc stc xor cmp ja daa jmp pop mov lea mov add push cmp roll fldenv sub (bad) jnp mov lea shrl xor xor sub inc movsb dec push pushf fild cwtl movsl push jb adc or aad add popf inc fldl lock test sub ss add mov sbb xchg adc addr16 mov adc (bad) call loopne cmpsl dec or inc xchg inc shrl iret addr16 add fsub test add xchg sub jb jle jno fild aaa and sbb mov ret aas push sbb in lret sahf popa mov outsb pusha (bad) icebp xchg adc mov sahf adc inc or mov sahf sahf (bad) hlt lods add aad pop loop dec call add inc aas cmp jnp addr16 add cmp sub mov insb cld push add adc xor mov leave cmpsb pop in lods mov scas and mov cmpsb jge cmpsb jecxz adc adc adc cmp lds out enter jne mov jl xchg or sbb push (bad) mov sub or hlt mov push ja outsl out xor mov sub mov shr stc inc and cld cmpl inc (bad) jle gs cmp pushl push imul rcll mov jno mov (bad) mov jg (bad) mov adc mov mov or stos mov push jp flds (bad) mov jge mov stc out cld xlat cmc ret lret movb fbstp ja xchg dec in clc movsl (bad) xor lods clc (bad) lds fidivrl lock inc push fwait (bad) dec cmp pusha sti jae cs (bad) je,pn cmp sbb xchg test dec cld sub das adc or mov dec aad cmc clc jo in in movb cld scas or in rcrb push and push push movsl mov jp push push xor push out mov lea cmp jg stos (bad) (bad) xlat ret (bad) fistl (bad) js add les inc pop add orb call adc dec adc sbb ret lret push cwtl fild sub fs adc sbb scas inc out int mov pop sub outsl js dec mov loop jne push cmp scas xchg dec jne arpl jecxz xor outsl add lahf inc add lods sbb je dec int3 xchg jne stos xchg mov xchg add stos xchg mov mov push leave movsb sub pop fistl push stos pop pop sti aam xor roll jl xor (bad) int ljmp enter inc cmpsb ljmp xor popa and and and pop inc and push pop stos jle mov xor cs mov insb pop fwait addl pop sub fiadd out lahf es sbb fstl outsl fidivrl mov rorb popa fwait roll fs xor out mov arpl lea stc scas outsl aad repnz scas xchg mov mov adc and arpl mov inc xchg (bad) or jp ja and mov dec mov sahf pop ds js shrl xchg mov out mov xlat pop cld push andl push mov fwait adc ret pusha mov add pop push aas cmpsl and sti or jb sbb push ss dec pop std test addr16 pop jp stc adc fsub loop and lret push and mov icebp divb dec ret pusha rolb jmp out inc xor mov insl pop dec rcl stc test sub sbb pop push cs nop das cmp mov jge jo iret out mov adc cmpsb arpl imul mov fisubl mov sbb xor testl mov sbb lcall mov jp jb insb loopne aam jns notl cmp jne out cltd pop mov or movsb out iret push push das or cwtl xchg sbb push rcl addr16 insb lock xor sub es andb shr lock (bad) dec call mov jmp int3 lock fisttp add imul ds xchg test push mov pop push mov xchg add sub fisttpl sub bound mov or fcoml fdivrs dec jl jmp lahf dec test (bad) mov dec ret or aad lock adc sbb xlat gs cmp (bad) add hlt aam xchg vpcmpgtb or cmp jne ret fbld sub dec xchg mov js popa loopne or dec sahf and lds push and aas insb cmpsl imul push mov lcall mov inc aaa push pop inc ret sbb insb mov fisubrl cmp sti cmpsb fwait mov pop mov mov enter sbb adc pop daa or xor shll clc xchg es jge sbb (bad) adc pop push out (bad) lret shrl ljmp out push mov jns call les mov call add dec popf push test push mov pop test nop rol (bad) std push dec xor clc repnz xchg sub xchg sbb in sti lea dec sub and movsb cmp mov ljmp cmpsl push sub inc movsb xor push (bad) jecxz cs lcall fiaddl out nop stos mov dec sub cmp in xlat les push add test and fstl in in test dec add xchg sti movsb dec cmp outsb (bad) or xor (bad) (bad) gs mov ret adc mov fneni(8087 mov scas sarb add add mov rolb test adc sub fwait aas ror push movb mov dec sbb pop inc xchg dec negb lea enter cltd push xor stc aam insl xchg xor sahf cmp mov xor out or mov push les sbb mov lods into inc jmp pop mov push mov xchg ret mov in mov cs jmp cltd push cmp adc (bad) xchg ljmp jns int or aam mov jp aam or insb push mov cmp addr16 mov sub sti push cld jae pop cltd sti inc sub insb test test in jmp pop rorl aaa jecxz xlat add loope stc and stc and push (bad) or idivl movsb popa icebp and jge sbb pop jl popf in cwtl and cwtl pop or out adc loope cmpsb push scas sti or test inc or rcrl incl into mov (bad) popa andl pop sub and sub rep push cmp push aad fimull or add inc sub inc add sub frstor sub shrl cli jecxz dec repnz inc pop push sub push mul pop scas xchg pop lret dec xor daa mov jmp test dec lahf pop inc sbb pop outsl and push int mov fiadd xchg rcrb mov cmpsl je cmpb cmc cs push pushf out in mov or aad jo sbb in movsb cmp sti into xor (bad) cwtl inc push ds mov add stos pusha mov fstl mov mov sub ret lods (bad) jmp popf and dec jns subb repz sub add push std jle sbb inc scas inc jbe gs in loope mov repnz ss cmp cmp sub dec stos mov jae imul loop nop (bad) push pop xchg pmuludq sbb test inc dec es imul enter stos mov jae hlt nop out ret sahf pop dec iret stos (bad) sub test pop lcall ds mov mov sub mov and mov jmp cmpsl in jae push mov inc mov and fdiv xor gs ss adc pop std cmp xor insb sbb pop aam adc dec (bad) push mov xchg jbe je mov inc xchg mov outsl inc sbb dec test push fbstp add push jle mov bound sbb or pusha mov jmp bound mov sbb and push jg add fild lods lods mov xor or ds cwtl cmpsb cmp mov sub sub repnz sub jmp addr16 push jbe push sarb mov dec pop add cltd add in jno inc cmp jmp sub call (bad) or repz sbb leave jmp (bad) jb xor inc push mov loopne aaa fwait adc divb mov arpl (bad) out adcl out mov dec pop jle mov push push pop out push in out (bad) cmpsb aam mov push sub leave addr16 mov sarb xor sahf lods arpl or pop mov ret push dec (bad) lret lock mov sub (bad) xor stc jmp jl xor push outsl lods mov dec mov push cmp cmpsl outsl pop fisttp ss add or or pusha mov sbb add mov rolb and movsl mov scas jno dec add xchg mov daa jle sub fcom dec lods jno push fisttpll loopne mov jo mov test and dec loop push jp ds xchg mov mov and lret (bad) lock shrb pop mov jbe stc testl or inc mov xor jae pop jge and xchg mov sbb mov push push test stos aam mov call jb rclb insb lds neg repnz adc rolb or mov jb dec jg jge pop jg mov dec push dec loop pusha insb lcall pop lret xchg pop popfw jns,pn movsb (bad) ljmp (bad) mov dec movsl rcrl mov jne jmp lods jo pop mov lcall test pop dec pop sbb int3 and pop data16 mov add shl mov mov (bad) push dec js sbb cs xchg repz imul cmp fs addr16 movsb adc add sbb dec push roll xorl mov xchg xchg mov mov popf sbb gs cmovge dec pop pop fdivs mov scas push outsb je inc dec fstps add mov xor pop adc popf lahf aad cwtl outsl jae pop add mov xchg divl fiadd (bad) sti nop xchg leave inc xchg mov fidiv rcll pop lret sub pop inc pop into test icebp jmp inc or adc cmp adc lret mov arpl pop idivb out add jns add push pushf mov jg xor andb jecxz sub push mov icebp cmc mov shrl jge nop in dec jae outsl or jl test jbe (bad) push int jbe lea shll xchg rclb pop jp jle jge fimul jge dec pop pop clc or push and sub test int3 not adc jl or cmp ja cmpl insb in rorb insl push rcl jb push jecxz into jb push in (bad) jb mov push mov push popa jo ja dec jmp mov fisttpll (bad) mov aam (bad) cmp fiaddl fmull jmp ss sub mov lds xor mov or stos mov mov test daa ds in pop fisubr sbb aas out scas mov xor sub xchg pop xor test xor popf popf mov or adc dec hlt pushf mov fcmovu mov cld cmovl gs jg jo and dec int ss pop not sub ffree xchg or mov loope sbb jne in mov mov push xor pop and in sbb inc dec sbbl ret rcll add lret clc add adc jp addr16 mov mov mov leave push gs mov sub push or cwtl (bad) scas cwtl inc jns mov (bad) pusha sbb dec xor add lods mov out jbe loop je cmp call jl mov fcmovb inc add inc jmp daa enter pop push cmp iret mov icebp dec adc push pop scas out sbb lods repnz xchg sub pop aas xchg and fwait jge adc cmp and ror add loop and push cmc mov in and or movl sahf add inc xchg sub int inc mov or in in add arpl insb movsb in repz jno in and push sbb mulb push outsb add sub mov fwait scas clc jmp pop add xlat inc arpl mov mov cwtl leave sbb jmp xchg aas aam loope sub jp cmp mov jns jmp cmp stos push jbe pop mov mov je scas bound decb pop jns cmc js jns mov and push arpl mov jbe adc mov ret mov cltd aad cmp (bad) mov aad movsl inc stc daa (bad) and mov arpl popl and cmpsl out sub inc mov jmpw add mov sub aaa stos dec jo dec mov cmp sub outsl cld aad or lret inc pusha inc ss out stc push sub adc cmpsl iret (bad) or bound inc jle (bad) inc sub add push xor shrb insl gs xchg shl and adc std and dec push adc push sbb xchg stos push addr16 jl rorl je xchg mov (bad) das jbe test subb push cmp dec xor (bad) push xlat rcrb pop inc mov jmp imulb imul stos pop pop js,pt jne lods xlat inc outsl sahf lcall push outsl negb hlt or xor lret xchg xor rcll lods cmp stos (bad) jo push mov cld sub addr16 pop aad dec fcomi arpl shr and dec or test push lock jb push bound lds mov mov pop cmpsb xor push push (bad) jnp scas loop int3 sub adc outsb or cs cmp aaa and (bad) cmp inc pop jmp in sahf push mov sahf and lods cmp in test sbb testl mov in cs mov dec mov mov lds out jnp adc stos xor push sbb xlat jmp scas or jo (bad) jno cmpsb rcll mov adcl cmpsl clc aam inc cmpl and cmp mov sti mov xlat mov push out jns and or lea test sub das xchg push sub ja cmp out repnz sahf scas and aam cwtl ret dec mov pop pushf xchg xor shlb int3 or sbb cmp mov (bad) adc mov jmp roll in push pop repnz mov (bad) jecxz sub mov pop adc cmp lret xor out cli arpl add dec mov and and xlat mov in icebp (bad) ds xorl and inc xor clc pop (bad) pop cmc push sub cli pusha aad in xchg xchg xchg iret mov jg in sbb stos dec mov mov rolb cmp mov sbb aam xor iret and stos scas cmpsl fidivr pop in xchg jae mov loopne incb adc xor cltd sub inc leave insl (bad) push push test mov push out rol sbb (bad) adc pusha ficompl call sub xchg push sub lcall or mov fldl inc out mov pop sbb xchg add (bad) stos rorb pop xor rcrl jl or sbb fisubr xor inc or lods stc repnz xchg xchg jge push inc loope call out add mov jle cmp mov xor sbb lds or iret (bad) mull mov into cmp add and pop add sbb (bad) sti aas hlt pop (bad) push enter lcall pop mov mov pop sbb insb inc pusha movsb in jbe out dec cmp lahf mov hlt cltd cmpsb aad setge fdivs mov out das and push mov cmp pop imul mov and rorb jbe push mov sub cmpsb nop mov daa xor mov mov repnz push or sub sub test lret mov mov and or leave stc mov stos (bad) jp je fs cmpsl and outsl loope xchg lcall dec sbb roll mov xor sbb xor pop jbe aam fist cmpsl pop cli sub punpckhbw arpl mov inc mov jmp sub mov mov out inc movsb jecxz jp cli bswap or lret call dec outsb jne xchg ficomp mov adc cmp aam imul fidivr test (bad) pushf xor lea das xchg enter cld and mov cwtl pop in stos pop pmullw push lret push cltd jge mov test icebp push push shrb sub or add mov (bad) fadds aas lods xchg and dec add aaa je push sub lret mov mov xchg pop cmc sarb jle push xor fs dec or in (bad) or dec les std push sarb iret mov mov loop subl test outsl and xor rorl jno call test push mov es pop pop lcall xchg adc xchg andl mov add lea inc sub lea in dec xchg shlb (bad) dec lock repz xchg (bad) pop movsb jle popf pop add je js mov push ja (bad) and push icebp add (bad) mov mov mov add fst adc cmp (bad) lock add scas movsb shlb cmp fdivr push call (bad) cmp push daa mov dec and push push (bad) vpshaq iret iret pop xchg inc loopne push sub cltd jbe pushf jns jmp popa pop ret loop (bad) fsubrl pop rcll stc mov dec mov pop lods scas push fnstenv int sahf add outsl hlt ljmp xlat dec pop and out jecxz icebp cmp in mov leave dec lret add xor inc lock addl pop mov jmp test das dec into jbe mov mov pop dec jl (bad) add or test mov mov xor inc jle mov sub cmp push hlt aas cmpsl mov sub xor imul push fcompl lds lock and or sub inc (bad) icebp sti xchg in in cli rorb xchg hlt xchg fucomip sbb call mov ja push lahf add dec lds or xchg sbb dec push inc aam pushf dec and (bad) (bad) icebp in bswap pavgw js out stos test mov es fsubl xor ret mov adc pop mov pop aaa xor lock repnz xor push repz pusha inc arpl insb jno lods aaa iret pop inc lds mov adc mov xchg sub test fnsave in mov icebp jae cmp mov js xchg insl jle push xchg aad les jbe iret push push inc lahf dec xchg (bad) mov adcb jl sbb lahf push scas sbb jb nop fsubrl aam mov dec sbb xor inc pop cmp jp shrl int test pop test push clc lods pop inc fnstenv xchg jmp outsb sub repz pop jae mov sub daa daa cltd sub test sub push mov pop inc dec pop jns dec scas test xor inc mov lret test es enter add mov inc je insl lret out out or imul lea mov sahf into lahf push cmp stos sub sbb xor add push (bad) jae push scas pop lret les mov jecxz cs movsl pushl push jbe lret int3 popa sub jge test pop fstpt bound aad test (bad) cmp in enter hlt or mov xor shll stos popf mov lods dec cltd push femms jae push aam call mov loopne,pn imul jecxz imul imul xor (bad) loop iret inc dec addr16 jmp sub or ja pop jge test mov (bad) inc jbe lods add cwtl loop mov xchg push and mov test enter mov jg ja incb add cld fiadd jmp ljmp ljmp (bad) xor faddl rcl sub add xchg in mov jge push andps mov inc jg or ds scas sahf push loope outsl (bad) shrb xchg out in adc test mov xor in lods add mov cmp adc std add (bad) je or imul pop hlt psllw sub jo jns rol mulb or push add not add mov jge xchg mov jns test push ret jns and push loopne enter imul and inc faddl xchg pop sub bnd xor push mov or mov mov dec sub jl or mov fldt scas inc lret adc hlt fdivrl in add movsb or loope data16 (bad) cmp in cltd jnp test fwait lahf cmp push xchg int3 (bad) xchg stos lock frstor dec mov int3 or fdiv mov lea je out lock jae,pn push fldt loopne push jg test (bad) fnstenv out jb jle ds loope stc adc adc mov inc pop sub icebp dec jl fucom fwait lcall (bad) in cmc movl mov lods loope outsl outsb loop mov (bad) cmpsb mov adc dec or cmp mov sahf mov cmp mov lret jns xchg jle pop sub mov in xor lds movsb adc lret xchg sub flds out jno popa mov and cmc sbb subb or mov pushf mov jno arpl xlat mov int xor mov aam sub xlat or loopne icebp xorb pop mov out xchg or cmovb cmpsb in adc lock and (bad) mov xor xor mov sub mov or std and or fs mov xor mov int (bad) mov mov add sub in or or mov das sub fisttp inc jge cmpsb movb mov aas rcl addr16 fimull and and iret pop outsb xlat ljmp sub bound pop or (bad) cmc movntq out xchg mov inc ret in das sti push scas mov imull nop ljmp pop aad dec rcll mov mov (bad) adc lret or push inc iret mov movsl data16 les sbb std stos outsl jl push rcl and insb push sub xor das icebp inc cmp setno (bad) ret (bad) cmp mov jnp sub jnp push cli pop adc jecxz cmp push sarb (bad) idivl mov mov imul popa bound jp iret xchg adc ficompl or lret dec test push movsb pop xor dec out (bad) cmp repz xchg lret push outsb pop das push adc add cli add pop and dec or ss pop iret pop mov and cmp shr frstor call (bad) cmp add test sub insl mov pop and inc fdivrp sbb test test cli xor cmpsb cmp dec xor adc mov adc xchg rcll subb xchg lcall out (bad) sub je mov fstpt mov pop outsb inc in rolb les add scas push mov mov pushf jle fiaddl popf push xchg jb adc sub add adc pop mov jae sbb jo,pn icebp sarb nop fsts out scas mov add xor dec cld data16 loopne sub lea pop cld scas jnp mov pop push jns mov stc mov and sub sub jp push repnz cmp testl lahf inc test stc push in sbb jle push cmpsb xor mov mov dec outsw cmp daa out dec clc je insl les jp arpl xchg dec xchg leave outsb add or (bad) cmp sbb cmpsb (bad) dec add xchg cmc loope cmp repnz shr jne mov pop xchg push mov mov cltd inc mov push sub push mov jp lea push adc adc and mov sub push (bad) mov sti in dec push nop outsl ret pop sbb movsl push sarl and scas dec add or in fs rorb call cmpsb out lret inc mov sub jmp push out out aaa imul sti call ret pop clc lahf cmp xchg xchg out xor cvtps2pd jae test aad adc scas pop adcl and loope pop xchg andl and ds adc add or bound (bad) mov adc insb mov cs cmpsl repnz loop mov jns pop xor int3 lcall pusha fdivr lds xor xor (bad) xchg mov in sahf sbb sub push inc insl mov and arpl mov pop add faddp outsb fimull cmp lock xchg mul mov mov ljmp cmp movlhps push xor push mov adc leave lock xor scas daa je out pop adc inc pop in adc or repz not scas and xor call and repz pop hlt lea push call pop repnz push cltd out scas (bad) xor sub push daa movsl bound test push and jo hlt test or pop mov cmp pop cmp stos xchg fdivs inc pop pop xchg cli lcall gs insb xor enter xor cmp mov mov mov mov jg icebp je add loop nop xlat and loop (bad) lds mov sarb lods xchg sar mov add xor lahf jnp dec xor push std faddl clc mov dec out push mov stc addr16 inc pop push js xchg or jge xchg leave push ds ljmp jb scas lahf push mov pop repz mov mov mov inc xor stos mov repz popa in pop mov xchg cmp popa imul data16 repnz mov or mov xchg insl sbb jbe pop sti and call inc pop les cmp mov insl js cli cmp popf sub (bad) add dec das adc pop shrl xchg cmpsb xchg int3 and lea insb inc lret lods int3 xchg mov push lea mov xchg push pop and aam xchg xlat cli roll jp push cli xor outsl add push inc dec imul repnz popf push or push xor test out lods jp lret lcall out rcrl testl cmc aaa lods add scas mov fildl sahf js lahf js test bound (bad) cmc es mov ret xor push ja add imul sbb mov mov xchg mov popf pushf shlb push (bad) test sbb stos imul outsb (bad) mov sub (bad) mov lods push (bad) sub into subl lret daa not mov test popa cmc movsl or std rorb cmp pusha iret jae loop or cwtl call addr16 lds mov pop push xchg push dec push pop and and xchg xchg mov pop cmp fnstenv push test sub xchg sbb sti popa inc stos test dec xchg call cwtl mov (bad) inc pop xor dec das gs pop aam or mov mov lahf (bad) jo out lea mov sub pusha pushl stc jp nop mov (bad) movsl dec jns sahf enter xor cmp cli sub xchg inc popa insl lock (bad) adc dec icebp std or cmp test xor xchg sub sub push jmp enter pushf inc jl or outsb add iret cmp inc pop dec push iret aaa push or pop jle mov jb iret mov cltd push mov js das mov cmp cmp sub fidivrl stos imul in push scas mov cmp int sub xor jb xor lods sub iret push test rclb xchg mov insb lret outsl push sub push xor aam hlt out mov (bad) mov test (bad) lock mov ljmp mov fidivr and push in push add mov sti repz out mov pushf mov mov ds dec push jge (bad) in movsl push xor and mov cs out push incl push test fild ljmp scas loope sub push gs mov inc cwtl fdiv jo mov sbb mov testl les loop jge xchg insl inc mov xlat sub pushf outsl push inc pushf push pushf mov xlat sub adc jmp (bad) cmp jb adc aaa adc daa jae xchg js cli add call cmpsl fwait into mov clc sub int3 imul jg mov pop cmp sub imul cmpsl sub pop movsb insl mov inc mov int3 mov push pop test xchg out subb and cmp xchg jp in mov (bad) pushf mov jmp fwait aas pop xor popf imul std add aaa sbb push sub and outsl lahf jmp pop xchg repnz movsl cld inc andl push push push std or (bad) xchg xchg mov sbb fnstenv inc inc dec push loopne or xlat dec jp dec cli pop inc out push xchg cmpsb xlat push lock shlb cmp cmp sub imul aaa inc lods dec xor fidiv loopne sarb inc pop cmp mov ja dec mov movsl sbb sbb add rorl push sub stos dec in cmp cmp jp cwtl add mov pusha arpl lret ret fistpl add push adc pop icebp mov aas mov or subl mov jle ljmp cli js cltd out sahf mul ret (bad) dec mov int scas xor fimull jp cmp pop push mov sub loope sbb xor scas stc cmp das decb ret push mov cli sub loope imul jnp dec jp mov push cs gs lea sbb pusha dec cld insl dec fwait lcall push loop cli pop add pop and cmp repnz jno push or xor add dec xor pop int3 push ret xor add cwtl lock arpl push (bad) mov adc lods push sub out adc add mov mov arpl pop mov jmp xchg push and fimull shlb jp mov les sahf test pop je idivb or jns and bnd mov xchg ds xchg add lods adc mov addr16 add sbb xchg repnz mull int rolb imul pop sbb movsl dec fdivr inc aam fsubrs add mov repz lcall fmull jl iret adc xor push imul mov (bad) dec nop ja loop push cli (bad) mov bound mov test mov inc mov xor lret test mov adc cwtl push cmp pop push jo stos add fidiv sbb in daa movsl add mov fisubrl cwtl sub rcrb icebp mov sub lock shll in inc pop add and or dec nop dec pop or cmp xchg (bad) pop adcl sub ljmp xchg lret enter lods pop cmp arpl stos ljmp into cld cmp xchg dec ret or lods add jo mov jno push leave mov and out nop std push pop xchg push les js sub sub (bad) ss daa ret pop cmp xor (bad) icebp dec sub jle mov out sub cmpsb aad dec jecxz push enter test lds jg dec mov cli (bad) cmp cmp push mov jno or data16 lock orl lea inc test jg rcl leave stos cld repz negb fimul fwait test push inc lahf pushf sub fsub fidiv mov out sub (bad) xor mov sbbb mov mov aam sti lret jl xchg stos add dec pop pop mov loope mov stos jne outsl das push dec cld add sub and gs cmp sbb loop in lea sysret and mov ret sbb int cmp mov or sub aas or pop jle xor cli add jge dec (bad) jbe mov lea cmp (bad) lret test xchg sub out and inc rolb aad gs leave xchg test inc addl and and repz mov inc dec push add and arpl lret xor mov xchg mov dec lds fsubr mov dec dec xor outsb in popa pop and cmp out cmp mov push gs repnz sub movsl pop test cltd loopne cltd mov inc inc lret or mov dec addr16 xor popa sub jle in out sti cltd rcrb iret test sbb fs int3 jb xlat mov sub pop stos mov or (bad) and cltd jmp stos loopne jno clc mov cli sbb cmpsb cmc push pop push pop and sbb mov mov out cmp ds cmpl int mov hlt sub popf out or pop shl cs stos push (bad) push or dec daa test add jno pop push mov int3 fidiv popf mov mov mov sub jae push cmc (bad) push xchg mov cmc leave sti repz cmpsl dec fdivrl pop push scas ljmp test mov push fisub mov xor (bad) pop shrl ja mov pop (bad) test pop js pop add or repz sbb loopne scas xor xchg imul fstpl (bad) jns cmp mov stos shrl inc cwtl xor xor cs push pop lahf sbb mov (bad) and call or pop leave add out push fwait out add (bad) and pop jo xchg mov popa imul sub outsb mov in sbbl sysexit movhps rcl lea cltd inc (bad) (bad) ja mov xchg mov clc das cli pop movsb lds jbe dec lahf incl cwtl mov inc cmp add ds fwait mov xchg test lock (bad) cmp sub xor jb cmpsl jge cs xor push mov fist cmp push pusha sub aaa shrb jne add adc and popa push and std lds stc cs xchg adc negl imul aam sbb xorl call movsb cs xchg fs sub gs arpl mov call fadd cld push mov cmpsb fmuls jg mov lock jle icebp or lock add mov jo in mov test rorb xchg call fs inc stos jo dec gs mov dec or jae fbld dec mov dec jnp and push inc test mov sbb insb inc out (bad) call push hlt cs sbb push cmp loop cmp mov inc pop popa dec inc add cmp cltd ret daa test popa aad (bad) bound or and adc lods pop pop fdivrl (bad) mov sahf inc xchg jnp or sub push xchg xor mov push dec outsl pop dec lahf add (bad) cs lcall and or and fidivr and cmp dec loopne sub pop fdivr inc inc addr16 (bad) jo data16 push insb lds mov or pusha mov xchg jmp ja addr16 mov cmp aad xor mov clc iret ljmp cmp dec arpl bound sti int3 scas aaa xchg add add pop (bad) out jle or aam xchg xor push inc ret or pop std push in in sbb mov pop cmpsl mov inc stos mov jp adc mov les movsb xor sbb data16 xor scas xchg shl adc jle in rcrl mov push lret xor test rclb push mov out mov xchg adc cmpsl not lret pop sub lea pop mov inc cmp or push cmp xchg sub popa or mov (bad) rcll add xor adc ja imul sub js mov xchg and mov movsl insb hlt adc xchg test je subl mov pop cltd sbb aas in mov js push das pop int push jmp pushf fwait push xchg stos mov dec mov inc dec out push in xchg cmovl xlat test sahf push aaa inc inc mov mov loopne jb jne nop movsl xchg lcall daa pop dec stos or and mov xor fcmovbe ljmp jecxz pop imul sub (bad) (bad) push test inc xor cmc or stc scas sbb movsb int xlat outsl fwait and dec aam sti (bad) or inc fbstp mov or loope pop sub xor cmp push pop fist adc (bad) int3 sub test inc pop sbb clc daa lcall sbb dec pusha les aaa std push add fs push pop scas daa fwait and pop dec (bad) hlt int3 add loop ret ja daa push clc pop sahf sub aaa out js outsb leave cmp inc xchg (bad) jns lahf fistpll cmp push std and pop nop jg jno sub daa in xchg and je or jl sub nop addl je and xor aam outsl sbbl push aaa adc dec cs lds lods xchg push in mov sub xchg inc shll xor mov divl imul movl jecxz xor lret and fdivl fstp inc imul (bad) std cli push fnsave jge shl adc cwtl push je inc or lcall add sub mov movl push cld (bad) movsb das inc aas xor lds pop sub dec jmp sbb cmp cld cmpsl mov push loope pusha dec and fisttpl inc xchg cmp xchg pop stc jle fmul sbb mov repz mov sub shrl inc and ss out sub arpl popa and ja test mov (bad) (bad) fildl xchg adc test loopne lret lock imul es rorb (bad) scas mov test pop jno cmc or add or adc push lahf orl ret scas jge scas shrb sbb mov add stc add faddl cltd mov dec mov cmp fldenv mov mov add push popf rcl outsl rcl (bad) scas outsb cmp dec out mov repnz adc xor popa fistp js xchg jo insb movsl pop and xchg ja xchg cwtl or js loopne loop and jb (bad) repnz movsl sub data16 (bad) sbb mov gs outsb shrl cmpsl in les xlat add dec rorl sahf aas jecxz mov leave jo lds int3 push fdivs sub lds aas js mov and xor aaa data16 xchg lgs adc stos inc jecxz sbb sahf pop nop test adc sub sbb jl and std sbb (bad) arpl pop pushf ds jnp adc outsl ret fistl addr16 adc adc jns adcb jne push (bad) imul or fwait cmp cmpps std ljmp ds cli adc negb jecxz and add ret dec mov push pop jae lea add push jns,pn and mov movsb cmc pop mov shrb jecxz scas and pop dec rorl pop fimul and jg clc xchg (bad) loopne clc mov inc in leave inc fnstsw stc nop mov ret cs xchg (bad) dec test xchg mov xlat dec sub fist or ret xchg lea jg (bad) cmpsl or sub mov mov into push int out and jo jge fldt jecxz cld test in sahf cs inc in out push testl adc sub pop cmpsb insb jbe and add fnsave push pop cmp ret ja or std xchg add lock ret ds scas adc xchg push lods push jp,pn add add pushl inc test sbb aas hlt push sbb cmp clc jp add xchg pushf mov cmp inc imul lock mov sub xchg sti cmp xor insl gs sti lret inc add cmp cmp xor fwait cmp adc fcomps fs dec out cmpsb in nop add push ja inc aam dec mov ds xchg (bad) sbb ds mov jg jo mov ret pop push add jg and cmpsb pop pusha push repz sahf divl sbb mov sbb test fldt aad in jnp adc getsec sub push insb lret and jb inc incl lods cltd data16 jp cs lods mov rolb adc pop sbb stc bound (bad) mov nop fwait add inc in leave or shrb insl cmp adc dec imul mov fwait sbb lret adc inc in push cld out cmpsl cmpsl leave enter sbb into push in inc dec and jmp cs fld das orl cmp push iret mov (bad) pop dec jno ret aaa xor cli test ja,pt sti cwtl mov sub cmp pop ljmp ret sahf movsb pop dec ret dec sbb sbb push mov or sbb andl sti mov pop std fstpt int3 xchg pop popf inc pop sbb mov push jo ret ret jb stc and lock loop or fadds mov int3 xchg out pushf cld je scas shr je and mov data16 test int3 insb orb aas pop xchg (bad) xchg sarb and (bad) mov fnsave mov mov jnp call sbb mov pop aaa dec mov movsl mov inc scas cmpsb test js fidiv icebp (bad) push push aad mov or aas mov adc sub aam mov cltd pop adc aaa dec dec mov add dec leave jle dec mov cmp in into mov push imul cli stc jp test aam xor test sbb mov sbb mov rol push scas pop or les ds lret or and rorl insl clc (bad) fmull sub sub xchg lret push sbb rorl pop cmp in push dec pop imul fwait and ficomp test test or sub add gs js and adc in stos push repz add mov jecxz sub je push cs (bad) or adc ret mov daa leave aaa xchg jns aad nop in pop popf out sti add aad add pop (bad) mov xor aad mov in (bad) cld divb das mov mov punpckhbw loope ljmp in mov lret shlb repz mov fcmovne xor je fimull arpl stc cmp cmp xor outsb push shl fldl2t (bad) dec cmp mov fwait (bad) push in daa jecxz mov xor insb decl xlat scas ret or or lret test loop shlb cmpsl jno lahf cmp sub and xchg inc outsb cmc adc push xchg pop dec movsb mov mov mov mov jae add cmp iret push add gs mov cmp lea mov xlat sbb fnsetpm(287 dec mov mov rcll dec cmp data16 mov (bad) (bad) pop roll push cmp dec add nop out leave push arpl out imul cld cmp xchg push push lea not xor orb lds leave mov stos icebp or test add jg mov in add imul int std into or and out xor outsl add sub xchg mov mov dec fs sub or ret xchg mov add xor jo sbb rcrb daa pop pop stos imul or jno dec xchg add push jb mov ja xor pushf and cmpsl adc mov aad mov test sbb mov push push mov jg and pop inc je sub mov cld mov test loopne push insl shll fnclex int3 or rcll xor fildl jge push jge divb fidivrl xor fnop pop (bad) xchg sbb lcall call ljmp xor jno cmp imul in je dec mov mov in inc pop push mov test mov std mov nop popf mov or dec adc (bad) imul arpl inc es push in mov or (bad) xchg and mov xor or clc dec scas ret jae dec or cmp rcr push mov adcl enter mov xchg mov mov jmp xor push sbb popa dec xlat lret or sub mov popf inc sub add pop jl,pn test adc inc jp dec dec enter mov add lods data16 jb inc push test data16 (bad) int push call pop sub idivb stos inc pop push adc dec (bad) cmp lret out and push jo test fucomip lods and dec dec mov dec and sub lret imulb daa add adc xchg bound sarl (bad) mov mov lcall jl cmpsb inc jp or fnstenv sub addr16 scas lods out mov aaa fcomip hlt push mov aam aam int3 cmp arpl xor lret mov add inc xor add sbb cmp inc cmp xchg mov inc fild loop inc mov add in repz mov xchg mov inc mov inc not pop ds stc jecxz pminsw int3 mov jg mov (bad) and mov xor pop mov and xor int lret adc aam xor push lock xchg iret fwait xor inc adc mov daa sbb dec xchg mov pop icebp mov gs mov push adc mov mov xor sub stc gs je fidivr mov mov or lahf lret mov clc sbbl push mov pop cmc mov xor (bad) insb sub pop add lret lcall fs popa jmp and jns pop cld cli xchg and test cmpsl add divl adc test cld (bad) xor loopne test scas roll out dec or mov or icebp xchg dec mov ds fstpt scas lea stos mov sub sbb xchg je shlb rol (bad) mov rcr imul pop push xchg cmp lcall arpl cli mov int cmp inc das inc mov bound stos data16 arpl es mov xchg popf ret lret mov movsb or xchg pop leave cltd push jmp jno mov imul xlat data16 in mov inc out iret xchg jl (bad) inc test dec pop outsb lcall pop and lret add loopne loope or out pop mov xor es outsl stc add popf test dec push adc sub add (bad) xchg push in add pusha xor cmp and push test imul push xchg aad stc lret xchg fidivr jg,pn xchg pop aam sub add outsl shrb loop scas mov lods xor add cmp mov fiadd mov inc outsb jecxz dec test mov jns call dec sbb cmp push movsb and cmp dec aad adc inc lcall jns inc ds sbb adc pushf fnstcw incb pop bound rcl rcrl dec fdivrs sti cltd lds lock std leave dec fstpt cmp dec push into jl das ficom or and xor or sbb sbb push mov cmp out and gs fwait daa in add or inc insl test outsl cli (bad) cmc imul ret dec loope cs xlat int3 inc xor xor cltd in daa sub popa lds insl das test pop sbb imul pop insb aaa adc push push loop mov jp (bad) push or mov push insb cs add mov mov mov or imul mov into jmp rep nop rorb inc mov pop hlt pop pop cli xor outsl loop divl test or btr xchg addr16 fisttp push mov cmpb mov mov xchg inc inc push xor add cmp xchg (bad) xchg std repz ss and jge hlt mov int pushf pop jb cli lret clc mov inc repz lret (bad) in lods into xor (bad) cld and rcr aad scas sub imul pop dec and lods jne and xchg push mov repnz xchg push push daa bound or jbe call and (bad) movsl mov inc and or lahf push negl cmc mov pop xchg xchg ret lahf cmp or punpckhdq cmp lret loop fwait add push icebp imul pop leave imulb pop addr16 ljmp sbb mov jns and jl sub shlb pop xchg sbb pop stc jecxz sbb in in mov jns insl stc ffreep jbe xor insb les adc movsl dec sbb cs xchg sbb lcall subl movsb push jp stc test jg dec dec stos imul jle push icebp adc scas popa cmp repnz pop and push cli dec ja sbb ljmp outsb repz push test cmp mull mov fwait aas out loop sub (bad) (bad) stc testb (bad) stos repz add mov clc out push dec adc (bad) pop push insl pushf fistpll mov outsl lea arpl jg sub lahf mov (bad) sbb pop inc daa add pop test dec cltd push pop dec or mov rcr mov int dec mov ljmp add repz xor cmpsb icebp (bad) sub test dec pop rolb mov ficompl or stos mov pop mov pop in dec ficomp lods sahf stc shlb inc les mov jecxz lock inc insb psubsb lods xor scas jns or jecxz inc mov add clc mov ss fldcw roll pop pusha loop pop add xor icebp sub fmul adc dec into xchg (bad) xlat call and xchg and call arpl adc icebp nop (bad) repz lret pop xchg test in inc dec lahf cmp ficom (bad) xor dec cs sbbl mov mov es movsl jecxz push fdivrs mov mov mull cmp or adc add push xor int3 add in adc test mov rcrl xchg xor sub stos negl fildl (bad) ljmp dec bound xor in mov (bad) mov xchg scas mov sbb negl dec movsb pop int aas push mov and sub mov testl fld clc data16 and iret dec fidivrl sbb call ja mov int gs add aas mov in xchg mov out push insb nop (bad) loopne out hlt or std aas cltd xor pop dec pop inc insl fstpt xchg or mov popf xchg mov mov push cltd cmp push lods push (bad) fldl jae sub lahf ret insl pop lods dec ret scas mov (bad) mov pop repnz out sbb iret add mov or test jg outsb (bad) sub pop std rcll dec xchg lret add loopne pusha pop adcb mov inc push xchg addr16 daa push test cli cmp dec xchg jnp jnp inc out insb ds dec push jge ljmp call xor cmpl add test dec stos fdivl mov in mov and fnstenv adc jo push push out xchg lea jb dec imul and adc sbb dec cmpsb xor insb dec sbb adc das jp xchg jmp mov jb add jge insl xchg xchg jecxz pop (bad) iret or adc dec jb lods fcmovu shll pop lods outsb mov mov out fist pop xlat sarb jo xchg cmpsl cmpsl xor and inc add add cwtl push insb adc add out cmpsl pop fsubrs jne or pop and mov test hlt and mov sub mov fstps inc mov (bad) aas in (bad) js inc mov test inc xor xchg dec inc sbb xor pop jae in inc pshufw jge dec scas push cmc pusha mov jbe idiv mov pop or gs cmc mov push ljmp hlt movzwl ret movsl gs iret jbe jge ljmp in test inc cmp pop xor (bad) mov push lods iret mov aaa popa outsl dec inc or int push notb scas lcall inc call add call nop and jge lock or out data16 cmc cmp scas sub std ds add xor fsub dec inc pop pop adc mov int3 lods dec push jnp mov inc movsl jne scas loop outsb push mov mov test xor inc cmp push pop xlat or adc and stos xchg jp,pn jg js mov and das jb push rclb mov pushw mov (bad) into inc clc sbb iret mov mov sti decb pop xor sarl sbb (bad) mov sub jae lcall ret clc ret sahf in add xchg mov push scas aas cmp rclb clc cmp je push jb fldl dec inc dec adc int3 js jo cmp jns cmpsb jbe and (bad) xchg (bad) test (bad) and push int mov popf mov scas push mov pop cmp and adc imul and cwtl into mov mov bt aam xor addr16 aas sub cmc pop dec xlat mov jl cmpsb xchg fist or push icebp push xor lds jnp (bad) movsl aam xor in inc jns mov lcall pop xor nop mov lret ficompl cmpsl aad jno mov sub xor in fldt imul ljmp mov in mov call or outsb cli scas jae test mov jl ret dec lcall cmp xor dec adc or xchg inc andl cmc sub movsl js insl dec addr16 add push (bad) test (bad) push and mov jbe ret add mov inc jae outsl (bad) (bad) aam pop out int3 inc lods iret into aam es mov leave add leave and enter iret jnp in popa jg shlb jb mov addr16 notb jno mov push or adc fwait sub sub mov xor and sbb xchg xchg pop push mov (bad) test jmp xchg aad hlt stos cmp jge sar pop sbb jbe mov cmpsl popf pusha jmp pop into fsubrl pop and repnz popf ret sub sti mov mov aad xor out jcxz mov lret and test icebp cli scas push fsubrl xor and lret jp adc iret push fisttpll xchg xor cmp sahf (bad) jmp jnp jne daa out xor mov int3 push mov push add test js dec loop pop cli stos test mov ja enter out ja jno push scas test stc xor jmp jg pop push or push dec sub ja inc pushf xchg push mov sub cwtl jecxz push in movsl inc test into cmpsb pop jmp stc lods sbb sbb jnp xor cmp incl mov mov fstpt insb repz aas popf inc (bad) push mov (bad) gs xlat dec cmp pop push push (bad) xchg jg add xchg push pop jne mov (bad) add aaa or fldenv cs add push push (bad) aad mov mov mov cmpsl (bad) xchg add andl prefetch in je jb add scas xlat scas and into and xchg mov cmp mov shrl pop out dec sub jae push aad popf call movsb loopne mov lahf inc sub sub addl jge cli addb or push dec cli push and jae jne mov imul xchg daa inc aad dec fwait es pop sbb les mov pop sar popa mov repz mov popf hlt cltd vunpckhps outsb dec arpl sbb ret fdivr rorl leave jnp xor mov cmp dec popa sbb mov xor adc jae push arpl pop outsl sbb addr16 es adc sub shl pop andb inc (bad) fwait test dec xlat (bad) mov cmp cmc pop fsubl ret (bad) aad push xchg push or xchg push cld mov es rcl in leave pop xor jne sub lea out xor rol outsb das sahf xchg mov mov mov mov idivl sub sub int3 mov push jnp cmp inc (bad) out psrad fnsave adc push jg fmul or xchg jg test test cmp cmp fisub and ss and shrb loopne imulb movsb stc mov in jge dec push xchg (bad) jge inc mov xchg inc mov push cmpsl insb gs sahf subl (bad) cli mov dec lea data16 sbb (bad) rcr popa ss sarb movsl test jecxz mov mov das test fidivr mov sbb xchg and hlt mov or cmp fmuls (bad) mov xchg or mov enter inc neg mov mov das iret and sub xchg push loopne cs sbb mov sti xchg push add ss in inc cwtl adc mull loopne xor xor push sti and aaa jge sbb pop imul sub and outsl mov cmp sub xchg jo cmp out sub insl jle sub add sub cmp into fisttpll adc mov in insl inc dec and shlb xchg lcall dec jg fisttp sub leave popf stos bsr sub js je aad ret mov mov mov inc aaa sub sub push mov xchg adc cmpsb pop out mov cmp pop adc lcall rclb pop popa mov pop stc or sub inc ffree cwtl repnz mov cmpl (bad) popa inc mov xchg addr16 cmp jnp mov push test lcall daa or aaa add sahf nop data16 push icebp in lods (bad) scas ss adc dec loopne mov jg (bad) mov mov aad sbb leave test inc popa cmc mov enter push push and hlt mov jecxz outsb mov xchg fidivl push jno test iret dec push inc mov pop shlb adc sti in mov jmp dec nop aam mov xor shll jns out dec fsubrl in bound (bad) fisttpll push cmp push fwait push jge aaa inc mov dec shrb enter sti in data16 jge mov jno (bad) hlt rcll or fildl stos mov repz xchg push fnsave or sbb mov loope sub lret hlt or dec inc xchg push rorb lods mov and or lock sbb in push cwtl pushf in dec fisubr mov mov jp lret (bad) ss mov rcrb sarb test (bad) fldcw ja scas cs inc cmp ljmp pop adc and popa (bad) cmp mov cmc pop dec mov mov xor mov lret insl fmulp cmpsb out or xor js repz xchg dec cmp enter cmpsb sub (bad) jo push cmpsl mov inc adc jl mov fsub jecxz mov dec popa repnz enter push jo and xor sub into or test pop cltd cmp sub push (bad) xchg sub jno (bad) jle lcall xor std xorl lods xor and pop inc inc ret or push or shlb fucom or cmpsb jns stos mov leave sbb mov or cmp and sub push mov sahf in jb popa push xchg and aad add pop pop jne pop in daa in add imul outsb cmp pop pop cmp mov clc push pushf xlat inc mov inc imull (bad) in movl adc adc mov popf or push outsb xor xor push sub insl inc lock in subb lret inc jo mulb aad push daa pop mov xchg dec cld out jge push mov sahf xchg dec and mov hlt sub sti jp jo mov adcb xor inc shlb mov jo rol jo push and and lahf mov mov movsl lock inc cltd and mov lock mov cmp dec push cmpsb divb xor jle or xchg and add inc and lgs movsb pavgw das leave les and outsl (bad) into hlt sub sub mov pop shr add add add inc mov cwtl aam xor andl ficom cmpsl sbb mov xchg pop repnz outsb rorb fldt push ljmp cmp or pop push and mov shlb jne push int3 add and cltd sti lahf outsl (bad) or jp inc movsl fidivl out inc mov lods stc mov push pop fadds mov test jo mov dec mov js mov adc mov ljmp jns pop scas dec or lret inc shl pop sbb inc fidivl and add cmp call stos lds and sbb pop push jmp and outsb ficomp mov inc push mov js push cmp int3 repnz add push loop xchg mov in out lds xchg inc cmpsl adc lea add mov in mov lods sbb sbb inc pusha jns push jne sahf jl (bad) xchg mov das sbb jp (bad) (bad) push inc cmpsl or incb xchg mov (bad) cltd movsb pop jge decl xchg int and cmp xchg mov fldt sbb mov cli stos cmp imul (bad) cmc sti int3 mov repz adc mov (bad) xor jo pop push sti xchg jmp mov in push xchg jbe mov into sti rolb adcl idivl repnz adc aad adc repnz lcall aas pop mov sbb adc outsl mov xor pop mov ficompl jmp mov mov lock mov test popa sub aam and movsb sub adc cmpsb mulb fwait das pop push aas xchg icebp call pop push int3 test fwait push and insb pop xorl sbb aas lds mov lret fldt fimul stos push flds (bad) fs into inc add add cmp xchg pop mov adc xchg arpl xorl dec xchg out sti int3 mov cmp jle pop fbld dec in in ret (bad) nop adc mov hlt xchg mov sbb xor cmc ljmp (bad) mov pusha ret mov inc enter aam jecxz sub pop clc in pop in jnp test and adc fdivr arpl in xor out stos in adc add jecxz xor adc adc xor pop push or ja pop jae xchg in jecxz jno jle mov idiv mov cld lret test add mov xchg jge mov pop mov sub push push jno,pn cmp loopne cmp in addl or iret cmp stc push xor adc sahf lcall jbe xor mov enter loope push je test inc sub jmp std adc xchg sub jg dec fcos dec inc sti orl rcr cmp ds loopne,pn push sub popf or xor mov mov es xchg in jmp mov pop xlat es mov mov pop sahf fcomps fsts xor js call dec mov scas mov sub sub in sub out dec sub inc jmp xchg or adc pop int3 arpl inc jmp insb xor inc outsl jge dec mov pop addr16 addr16 mov adc xchg sbb mov push mov sti jnp ljmp pop xor inc and sub icebp das sbb inc push mov mov addr16 cltd daa add (bad) lahf fst and mov xchg decb fwait out inc add stos xor sti mov iret xchg mov mov inc mov inc gs out sub xchg pop jae dec mov popa add clc jp mov in fldl popa (bad) fcoms pushf pop xlat sarl jbe jns pusha mov movsl mov sbb mov sbb jae jge pop movsl leave test (bad) lock ds mov test (bad) and rol jge xor mov jne lcall fdivrl lea mov sub sbb and lret fs dec sbb jmp cmp sbb push adc rclb or inc aam xchg or lods jle (bad) mov push (bad) ja sbb push (bad) and push fild push xchg mov mov sbb out inc jge adc ret je in movsl stos add jl dec xchg pop inc popf push (bad) mov test aad into xor jge jmp std lret in cmpb ficom (bad) daa (bad) in cmpsl in test sbb sub fwait int3 outsb xchg aad popa jno mov mov addl xor jno mov sub xor sub int mov mov dec enter das sub push in cmpl adc dec orl and sbb es je jae jne mov sub cmp cmpsl and out ret popa pop mov into test fild int3 dec imul (bad) xchg add sub mov loopne movsl mov pushf cmpsb mov push xchg fistpl jae pop lahf mov mov xchg pop stos add mov push shrb out popf (bad) jg jae and push addl cmp sti rclb int3 push imul daa stc bound add mov pop or cld je push cmp ffree mov or fstps call cmp arpl pop addl mov jecxz sbb push stos push dec iret xchg push jb mov mov hlt popa fisubr addps mov addr16 movsl js cmp cmp into loop push insb fs sub (bad) sub repnz les pop cmp inc test xchg icebp mov push cltd mov aam imul lds stos jmp scas mov pop xchg (bad) test fnstcw mov add orb cs xchg pop dec lods cmp clc lock data16 lock dec push int3 jbe pop nop call pop icebp add daa mov cli repnz daa inc xchg popf jp daa idiv pop jl scas add push ficompl cmp sbb (bad) push imull jmp push cld mov xlat aam leave jecxz and xlat daa push test and mov fiaddl mov add popf insb adc fidivl or mov dec xor xchg ffree (bad) mov mov pop cltd rorb dec std cmc fs mov into pop xchg cmp in call rcrb rcr pop cmp int insl jl pop dec sbb das cmp aas and xor jns inc mov jno fcomps inc (bad) xlat fdivr or dec repnz inc push adc (bad) decb (bad) es andl pop adc mov cmp push add mov and ja dec cltd add std mov jne test ss push repz dec aas mov pushf push mov test lret gs mov mov jle leave push dec ret mov mov sub loopne in mov loopne cld cmp ss std xlat xchg (bad) clc mov imul add int3 loopne call mov js loopne pop or mov sbb xchg cwtl adc test icebp test loope loopne and ja xchg or out sub dec addr16 xchg xchg subb or mov je scas adc aaa add add inc xor fs mov dec push or sbb mov mov in or icebp icebp rorb jle sbb mov or rclb stos ds inc cld adc push dec daa or jne dec jge sub in iret dec rcrl cltd sub insl pusha or add sbb mov push lahf hlt mov ret movsl dec mov dec dec fdivs lcall inc mov sbbb inc lahf xor pop mov mov mov (bad) insb dec jno cmp adc sbb gs addr16 enter push sub jecxz mov push ljmp dec sahf xlat push push fcomps setb sbb mov ror mov dec pop mov enter dec adc in cwtl clc inc ret imul inc mov nop xchg sahf xchg mov jno decl insb cwtl idivl addr16 in sbb add arpl sub je cmpsb aaa jge imul test (bad) (bad) jmp mov stos add adc js xchg pop xchg leave jne je mov mov jns pop sbb push inc aam add icebp sbb add adc into dec pop adc mov cmp in mov jno ret sbb pop gs cmpsb inc mov xchg mov inc lcall cmc test lods daa fild insb mov lretw (bad) xlat inc hlt aam stc cmp mov mov add ss sahf add addr16 dec dec in and idivl push mov sub mov (bad) ffree add int3 sub call andnps or ds mov xchg or mov mov lods push pop (bad) xor pusha pop mov repz adc pop loope,pn inc aad mov cmp mov inc add in test stos add adc pop repnz int and addr16 scas ja cmp xlat or notb outsb dec push push out fstpt jne aam lcall ds push lret mov rorl scas inc (bad) cmp imul lods mov jae cld loop sbbb push push (bad) daa mov es fucomip scas clc out push jo jecxz arpl pop xor xchg aam lcall enter pop cmp mov add push lods rcrb mov je jo jmp jbe dec mov adc (bad) xor call roll repnz jg ret cli jecxz (bad) mov adc jle movsb mov push adc jae,pn in xor mov iret add out push jae pop xchg shrb mov push mov jp mov jg xor add cmc sbb es aam push add inc jns dec xchg out mov lret (bad) jae and pop jns lcall lods add xor fucom mov pusha in jecxz (bad) sti jle jb das sar push scas fild cmc mov ja loope in pop pop iret mov sbb mov mov or nop mov push clc mov aaa andl in sbb es mov sub jo dec inc mov out les and sub js jnp pop dec adcb xchg mov adc cmp mov (bad) out xor pop inc cmp xchg bound sahf dec add insb cmpsb mov fst dec mov mov lds daa push cs mov mov jge loopne nop add mov push cmp xchg dec inc lea mov sarl sahf nop xchg mov and xchg pushw call pop loop jl adc daa sbb into jae ret sub ss je or dec lock xor jne inc pop push out jge int3 push xor in push repz xchg inc data16 mov inc mov cmpsb fdivr jp cmpsl xchg test jnp nop cld neg jle mov pop lock inc push xchg mov and dec inc pop in xor and add iret test jmp call in sbb out xchg pop bound push pop lods stc lret xor xlat push or cmc mov movsb push fisttpll sub dec ss cld push cmpsl sbb rorl xchg cmp inc pop sbbl sbb xchg movsb xchg mov xor push add and lods xor cmpsb cmp mov mov loop inc mov pushf dec pop test add cltd sub in rcrb adc outsl sub fnstenv push sbb test mov cs dec xor cmp (bad) repz cmp daa jmp mov push jno add push jge popf mov (bad) lds cld cld dec push mov cli add xor dec jno icebp sub out lahf in iret int repnz xchg dec push or test sti roll jne add mov pop push aad jp jge mov xchg push in enter or cltd fsubl leave pusha aad add mov nop adc push lock inc pop and vpmullw mov (bad) cmp movsl and or push pop sbb sub aaa and xor jmp fs lods bsr pusha mov sbb lret jmp into ret add scas fsub cmp dec xchg xchg mov jmp test stos mov aas and mov mov jmp idivb data16 push dec aaa outsl in sbb sub pusha adc dec xor inc movsb (bad) xchg arpl sbb popf cli mov repz xchg push pop mov repnz loopne cwtl push inc dec mov popa adc jl cltd frstor sub repnz cmp mov icebp sahf fwait dec dec lods test negb sub cmpsb push mov (bad) rol js xchg test and cld fdivl xchg dec fsubs in xchg push dec jbe mov rolb loop in lahf cmp sub pop push daa insb push sbb repnz inc dec mov nop adc push inc cmp (bad) lds rorl out ds (bad) fsubp mov sbb or push xor sub frstor mov jmp iret adc xchg sbb lahf and data16 repnz mov cltd pushf adc dec fmuls xchg fdivr fstpl lahf pop lret dec enter (bad) int3 cmp ds pusha push in test movsb aad lahf movsb cmp fsubrs leave js cli sbb sub test ja mov ret movsb xor sbb or sub stos cmp mov sti and cmpsb sub add punpckhdq roll scas rcr xlat movsl icebp xchg dec shrl fwait (bad) jae rcll mov xor fiadd sbb ds sahf jne mov xchg push fldcw xchg mov cmp mov sub jg aam or fdivrl lods mov jbe xchg mov clc push daa notl mov std daa jmp (bad) aas pop fldcw (bad) or (bad) mov push repnz cli jae nop mov pop out or iret in mov rolb outsl add xchg sub adc loopne ffree xchg xor cltd xchg sub mov pop je xorw nop pop push test test aam mov adc cmp lods cmp (bad) ljmp xchg add (bad) (bad) lret fucomi mov inc or lods je jecxz enter mov lahf cmp jnp int out xor lret test stc xor sub repnz sub out addr16 popf icebp ficompl test mov cli jnp outsl test and (bad) negb scas mov into and sahf mov jne fildll lcall mov xchg sub fsubrs lds mov jp arpl sbb pop xchg aad adc pop mov xchg arpl aas adc out push data16 mov mov (bad) add lahf adc or outsl popl dec pop movsl adc mov fwait popa in add add sbb in fs das inc call sub inc pop adc or shrl mov aaa cmpb out jge xor pop daa mov pop into aaa or sbb pop or addb mov mul movsl ljmp stc pop (bad) or pop daa cli and cmp sub cltd push mov fsubrl ret insb xchg push push and mov push mov pop fcmovnbe (bad) push jmp js xchg and adc push add std enter popa cvttps2pi loopne,pt test arpl ljmp jb popf lods out ret or stos aaa pop in cmpsb movsl scas cli dec jns jg stc xchg pop push dec push shr insb leave out outsl scas mov popf (bad) dec push loopne pop loopne mov lock ficoml fcmovne int pop nop sbb inc fstps cmp cmp fdivl daa sbb inc sti push shlb rcrb xchg iret dec rorb adc lret sub sub jmp sti call xchg call out sub pop lock sbb in mov outsb ja (bad) jle (bad) or cmpsl jg add addb push push shlb test sub jge roll sub adc lods leave adc loopne or inc xchg sbb inc jb add fstpt inc les mov and sar int sub push movsl popl inc cmpsb das mov dec sarl jmp gs scas mov mov dec mov cmc xchg add dec jae stc fisttpll adc loop std daa push dec adc (bad) movsb add dec repz fs adc iret and movsl inc jae mov cmpsb js mov cwtl leave and mov cli inc cmp pop aas ffree inc stc aad jecxz sbb add lock cmp ret outsl lret inc mov lds psadbw cmp shlb in inc sbbl sub jl sub jecxz pop xlat adc mov adc jns (bad) and fdivs test mov pop movb add push pop orl outsb sub idivb or xchg imulb push xor fsubrl lahf xchg repnz sub out and pop (bad) xor outsl sahf rclb rcrb dec dec adc (bad) mov test inc cwtl aad xchg jbe nop inc push test dec fildll mov xchg mov sbbl adc or bound fwait pushf or push mov outsl push aaa call lcall pushf pop (bad) xor jp fnop sti xor in and cmc push push fisubr and daa and sahf insb add sub jne xor lret ret adc xchg arpl push xor inc xchg (bad) jge aas mov mov add jecxz push jmp pop mov xchg lock repz frstor ss xchg mov and scas stc or popf mov insb rcrb mov cld fidiv pop mov rcr jg cmp mov or mov lea test ret lds push arpl push mov fsts push stc stos daa into test scas subl push sub imul xchg sub jmp out or push lds sbb mov pop stos add scas dec mov nop mov mov and fsubrl xlat repnz xchg mov pop xlat popa lods pushf andl (bad) fldenv lcall mov add or mov in sbb mov pop cmp sub and mov xor or ljmp sbb or mov jno mov inc pushf cmp pop xor pop xchg popfw pop out adc lea sub pusha mov xchg cmpsb outsl mov xchg int fdivrl rcrl push rcrl scas mov addb xor lahf mov sub ljmp int push add adc dec mov lds adc fisttp in cmp cmc stc cmc lcall and fcmovbe mov push pop in je jne sahf enter jns xor scas dec fisubl icebp stc mov lahf jle repnz cmp adc cmpb or jle in pop rclb mov or xchg adcl cmp ljmp test inc insl in cld cmp rorb test cmp inc jl dec imulb rol pushf orb or mov daa mov xor push mov cmc lahf movb mov lods and dec pop rcrl jnp add mov mov inc jns dec jae adc jg int3 repnz mov iret aam or (bad) mov cmc jbe cmp sbb nop sahf stos dec stos scas adc pop dec xchg or inc jae pop jp inc add addr16 sub cli push shr and jae pushf push ret ds lret or test jb pop (bad) mov ja pusha pop and lcall stos adc aad pusha sti or dec addr16 fdivrl mov in cmpsb fisttpll addr16 fwait pop daa fsubl sub addl cwtl js inc inc add rcr pop shll push mov sarl ss cmp inc jns pop les mov xchg push shlb (bad) aaa pop jle xor jl or outsl mov lods imul fisttp fs nop jp (bad) loopne jb (bad) adc push push adc mov out mov ret stos loope mov push mov test mov test push data16 adc (bad) inc cmp jno xor int3 outsl clc jmp lcall mov cltd xchg inc xchg (bad) inc xor pop push fcmovnu sbb jmp mov mov in push or nop xchg and arpl and adc movsb xchg jnp dec jp xchg dec scas arpl cmpsl call mov mov cli out cld push fs test push xor xor lods xchg sbb xor xor mov mov mov icebp leave iret mov mov xchg fidiv cmp add das adc es cltd push scas test push adc movsb test lea les loopne or xchg cmp sahf cmp xchg movsl mov xor pop sub xor sbb (bad) cmc or push ljmp (bad) jae xorl call test loopne stos dec fstl int cmp out orb xchg fnstcw or jecxz int cli test int3 popa int3 mov ffreep iret fmull fdivs mov add aaa xchg bound mov pop mov or int3 mov out or cmovno mov (bad) clc xchg and scas push leave aaa push jae loopne fwait das push insb negl or js cmp pop aas test icebp daa xchg daa in or and or fcmove xor (bad) adc mov adc mov jle sbb jno mov mov es push frstor sahf (bad) mov mov jae xchg mov dec cltd sbb mov fstl add leave xchg adc leave xchg xor adc sti xchg cmp sbb int3 ljmp sub out nop (bad) push mov insb push fwait sbb add sti jecxz mov arpl add mov es xchg test mov lea in out mov lods inc loope cld push push dec push vminss rorb xor xor cs (bad) xchg std push icebp push cmp cs sub jp xor cmp jecxz xchg mov sbb add pop inc and mov push lods or adc cmp ja sbbl sub int3 cwtl inc je test (bad) mov and hlt mov (bad) rol mov inc push add push pop cmpsb add mov cmc xchg pop jmp dec test sti and aad sbb (bad) divl dec adc ficomp mov sub loop adc cli inc dec pop dec push sbb pop push lock xchg fistpl cmp nop cwtl push xor mov add in add pop xlat ficomp mov fildll inc loope and dec sub dec leave out lods ret jl dec inc stos (bad) pop test sbb out sbb adc aad in ficompl fucomi dec aam es (bad) js cmp inc jb enter adc out dec arpl stos (bad) mov pop orl mov mov dec rorl push push enter gs das insl out pop dec test test pop pop sub lcall pushf loop int3 adc out pop rol fstps jb adc jo std frstor dec mov ror cmp (bad) adc std lock clc loopne dec fwait mov imul add inc mov dec pop lcall lds movsl xchg sub jb (bad) repz arpl or lods pextrw in and adc sub push inc data16 out cmp dec clc int fdivs pop faddl and cmp insb rclb popa call add ret pop out fsubrl aam or stos push call push insb mov push push mov mov and imul lahf lcall push sbb inc or sbb mov xchg add cmp sbb aad xchg lock add mov mov subb mov pop aaa in jecxz add (bad) xor je mov jae xlat sbbl rcl fwait pop push dec shrb jp fcmovnb in insb fsubl cmc aas (bad) lock pop xor jne and nop pop mov push or out (bad) jno xchg jnp adc mov pop xchg fnstenv mov gs xchg pushf mov into lret inc inc call dec jb mov lods bound push lea pop fdivl mov loope mov cmp or arpl test std (bad) je andl enter cmpsl fldcw int mov or pop mov fnstcw flds fbld shr inc pop gs push scas mov pop rcl pop pop push out popa mov cmpsb push negb xchg lods loop inc xchg push cmp lds aad mov pop add lret mov inc arpl and jns sbb and scas loope mov mov xchg jl test and int3 cmp imul inc sbb in and es pop mov movsb daa mov es scas popf out xlat mov xlat xchg mov aad (bad) mov aam outsl neg lods into xor xor cmp mov mov inc add add rcrb jne mov jnp iret ja or or and in int3 out cmp pop rcrl pop mul bound popf es and push movb adc in aaa pop mov add movsl inc je into (bad) shrb add stos jge fstpt mov popa hlt sub int fildl std jge data16 aam xchg les std mov xchg out repnz lahf nop cmpsl push sub and ja out and mov jge (bad) in mov cmp lds pop pop xor or cmp add call cmp pop (bad) bound sbb mov adc mov and cmp inc lds popa mov cld push adc mov inc clc jp mov or inc cmp xor cmpsl pop loope sbb mov nop dec jmp negl repnz pop mov jle jo add loope or pushf fisttpl push popw lds mov ja push fwait lcall scas mov std imul cmp pop jo lods fstpl push loopne lock jp lcall cmp ja sbb lea sbb push mov ss dec cli cmp jl sub jnp sub repnz aad outsl cmc fstps push fs or jo adc adc loopne xchg fwait mov jl out cld or (bad) xor mov insl sub pusha cmpsb popl cwtl inc pop outsl ljmp addr16 les xchg mov cs sub cmp jp or into mov push ret testb insl jbe xchg xchg inc add lahf cmc fwait jge xchg push fwait xor sbb stos xchg or imul push stos pop mov pusha test sub ljmp cmp mov ljmp xchg (bad) lret fcoms cmp sub mov addr16 xchg fbstp addl clc (bad) xchg sbb sahf push lods push xchg cmp cmp cld leave or xor xor (bad) iret loopne jo loop imul and adcl adc mov sub lods clc mov ljmp jg sbb inc pop sub mov sub push pause or adc ficom pop pop mov adc loop lds mov or push hlt int xchg jnp inc adc lods out mov dec icebp pop das test rcrb mov pusha std cs rcl outsl (bad) fs cltd repnz ss loopne xor mov cmp mov and jmp pop inc add (bad) (bad) (bad) mov dec dec mov sarl add lds imul push fcoms jle movsl pop ss aad sub lds loop stos rorb arpl mov inc mov out jno or push and push xchg jo xor aad xor fwait data16 repz in mov arpl jbe cmp inc add dec es popf inc jge sub shr mull mov xor icebp xchg mov mov rol push (bad) sbb xor dec adc ljmp dec sbb pop mov mov inc (bad) lret xchg adc iret in sbb ss in xchg jl sbb dec ja repz imul dec dec push addb imul mov mov or fisttpl xchg push test nop mov push mov jle dec out ret out (bad) jnp insb test or out (bad) scas (bad) das cli mov fldcw loopne scas push in addr16 adc mov jb xchg sub movsb ret adc and jbe out scas mov faddl inc pop loopne push nop inc xchg test sarl push add inc aaa rcll std lea fstl in add xor xor jns pop fs data16 fsubs shr mov (bad) daa adc cmpsb nop jp adcb insb push sbb xor fadd call pop pop add jb xlat jle addr16 test push rcll je (bad) xor mov sub out inc mov (bad) int lds lret adc inc mov xor cmpsb add sti dec inc insb scas loopne (bad) push jns pop sar mov xchg inc and jp and pop mov sbb test push in fdivs lods cmp in xor sahf das js mov push adc std xor push mov or mov outsl xor pop xor stos add jbe xor sbb cmp push dec lret popf mov imul scas inc xchg insb pop in push js sbb aas sbb sub pop pop push sub pop cltd sub jo lcall (bad) into jns cltd js faddl arpl (bad) xchg data16 cmc imul das fcomps inc mov sbb or rdmsr clc call adc fwait push jl lahf mov and fiadd sub inc xchg mov fist xchg sbb xor xor (bad) int dec addl jg fmulp inc std loope into repnz jae mov dec es xor add cli cmp lret int3 cltd and cwtl jo cmp sarb in dec lret push sbb in pop js insl mov or jb jbe pop and cmp (bad) leave pop pop pop jne push dec xchg mov testl pop std cmp pop adc mov (bad) out mov push jns jmp iret inc mov dec frstor dec dec xor cltd cmp mov pop dec mov sbb jnp repz add push inc jnp fstl sti pop jle test test imul push xchg jmp pushf adc add push mov fmuls and rclb imul inc fiadd test mov insl push aam mov cmp mov rolb ret jo mov xchg mov fisttpll pushl ds sub inc and inc decl lock cmc mov xor fpatan xchg cwtl aam ljmp in (bad) jmp xchg cmp lahf aad inc sbb loopne sti push int sub xor shrl mov add push cmp sub push sbb lcall or repz test int3 insb out ljmp pop jnp int3 dec jge pop xchg test add (bad) arpl ja add enter outsb jmp sti add cmp push push das in cmpl fs ja ljmp xchg adc rclb push mov sti dec fsubl mov mov jge xchg sub push ja inc jns (bad) in inc fdiv add andl (bad) xor xlat dec mov mov cmp xor test outsl cmp das push dec ss or in push pop sbb mov icebp dec inc inc jbe (bad) icebp pop mov inc pop enter pop test movsb out jl std inc fstpt xchg adc sub mov insb xor cmp (bad) xor xchg xor cmpsl pop int sti in add sub jae and fldcw sbb jl inc pop ret add pop jge rorb hlt jg jge xchg or jg push ret scas fwait xchg and sub mov or ficom xchg les negl cwtl adc sub mov mov xchg jmp nop (bad) mov push arpl (bad) int in jb lods ss fild jge fildll pop push jp out test imull push popa adc pop xchg xchg pop mov fnsave add fnstcw xchg in jmp or lret mov loope (bad) aas fcompl and pop adc mov pusha sub xor mov popa (bad) imul add xor in mov adc (bad) int and sbb jmp pop sbb adc cmc pop add sarb daa push mov inc fwait or jmp jnp mov xor jle (bad) out push je mov sahf mov mov notl mov aam js dec mov fnstenv icebp inc les popf xchg (bad) int sub fnop in and outsl pushl pop lret push mov mov mov subl jl or mov mov cmp cmpsb insb lods or sbb fs add stos jne push fsubrs fsubl cltd xchg inc pop or mov mov mov sahf int3 jecxz movsl aam addr16 fdivrs pop sub inc jno mov xor cmp (bad) loopne and pop (bad) mov xchg xchg push loopne out out rolb (bad) and push js pop faddl sub loope inc xor loope jl stos (bad) imul (bad) in stc out fldenv xchg jle imul push push cs push and mov jne pop mov in xor push fdivs inc (bad) mov jne fld in daa mov adc mov xor das push sub jecxz loopne mov nop sbb pop fwait pop imul insl outsl adc int rep sti shrl mov pop insb (bad) or mov mov in mov xchg test xacquire pop mov stos xlat add out (bad) jnp inc add lret fsub sub (bad) add lret cmp sub add cmc sub mov int3 in xor jg test or sahf insl loop xor sbb leave add mov dec out icebp push hlt lahf hlt adc bnd lret sub in xchg add call push sbb mov xchg popf pop pop ljmp jmp in nop pop lods jmp adc push cld outsb push insl sbbb push cwtl adc inc and xor movsl or mov loop insl mov (bad) cmpsl push jbe arpl push mov add scas fsubrs inc xor adc mov shlb subl (bad) adc jae sbb imul js pmaddwd pop sbb movb jp dec cmpsb cltd and in sti mov push or mov mov mov sub mov inc xor mov inc add in addb jp call std sbb es (bad) scas jmp shll or cmp fisubrl aad daa sub nop loop int xchg xor xlat pop jg iret pop cmpsb push cmp test sti scas imul sbb sbb leave subl adc in cwtl inc mov push mov jno push test sbb jns sbb xchg pop and jb pop test cmp leave sbb je lcall mov sub mov pop fwait in in or push aaa pop push (bad) je xor rcrb pop sbb jae mov adc dec mov jp clc (bad) ss mov fnsave sbb cli bnd lea sub pop stc (bad) dec and call inc nop shll or mov lds lret divl das or or mov xor push sbb inc mov and mov iret xor pop (bad) jo lea mov xor mov mov mov jle cmp mov cmp and gs and cli movsl push pop cs jmp lods inc por fisttpl xor fdiv xor int3 mov cmp or aam lcall push sti lock mov xor cmp es pop or icebp inc aad fadds adc mov hlt arpl add mov xor fisubl xchg mov dec out adc sbb pushl fsubl push add cmp jge inc mov add fstpt inc mov lcall fistp mov ret ret daa in xchg (bad) mov test sti pop loop pusha push es mov out mov xlat push mov xchg cmp mov cld dec fwait cmc sub cmp cld insl jb mov or arpl fcomi sbb jnp sbb pop push lret daa mov mov sub or ret aad lods inc jl scas fistl mov cs data16 dec jns fnsave pusha (bad) dec popa and leave repz sub mov jne test idivl pop clc addr16 test jecxz sbb (bad) ljmp dec cmp ss out scas mov lods test adc push movsb push insl xorl cmp sahf dec mov into fs call dec scas cmp pushf sbb push lret dec stos push sbb mov sbb dec test cmp inc orl bound xor in bound xor pop add mov jle inc sub pop sarb cmp sub aad inc or inc insb fs ds in push lret stos add xchg stos cwtl jp ljmp loope mov js (bad) aas iret repnz mov adc jmp sti xor rorb mov push cmp je cmp fwait data16 int loope dec int mov xchg push adc push add popl ljmp into icebp outsb fs loope (bad) lcall inc inc mov (bad) leave stos lock es rcr or dec fmuls sbbb dec or sub cmpsb aaa ds or pop fcoms add cli (bad) jae jae cmpl cmp and in and insb mov mov mov aam movsb and xor mov sbb mov adc inc dec and movsl icebp jne shlb push pusha les mov test lds lods jmp in inc rcrl (bad) ss imul lods push clc iret mov fs jecxz push out sbb and jo dec add decl adc loope aam test outsl mov push adc add sub cmp mov ret cmp clc mov scas jl lahf adc cmp ljmp arpl dec pop inc fidiv push pop push rorl push (bad) rorb fbld jge add out cmp adc push clc pop rcr sub jno jbe push test ret insl faddl xchg scas movd lock pop mov xor sbb ds jo icebp sbb jae loopne fildl mov imulb push xchg mov inc pop sub test cs xchg mov jns aad pop call in or mov sub cmp call out pop mov inc out jnp in shrl subl or stos addr16 adc mov adc jp adc xchg jns gs es jns shlb mov push notl leave xor mov call out movsl dec add cmpsb mov hlt add out xor loope add mov sub fisubrl xchg (bad) sbb fist in test pop arpl inc jle fld ja (bad) cmp push movl push ud2 nop xor inc jb push or push (bad) xor jb mov int3 sbb int insl aad out sbb cmc xchg int3 sub fmuls aam pop jno les adc xorl inc mov maxps divb repnz sbb in (bad) xor in jp pop fs fwait sbb leave fldcw xor (bad) movsl outsl push sub (bad) aam shr jmp cltd adc scas xlat and pop jg xchg lods pop or xchg dec add push sbb xor cmp push cmp mov leave mov in dec push lahf xchg maxps stos xchg jg repz jo insb jmp test gs mov xchg adcb fstpt in stos adc shr loopne roll sub (bad) push fcmovbe mov add ja adc pop cwtl or sbb xor dec mov add (bad) add movsl cmp cmpsb push cli push movsb out scas es pop fs daa lds sub mov and add add lock hlt xchg push mulb push sub outsb icebp mov ja in and (bad) addr16 jbe lds lcall and jge mov out js in xchg out outsl lds in dec sub lea and mov push int cltd add shrl jge ficoml aam lahf dec gs pop mov mov int add in cmp out jmp test mov pop jb pop inc fnsave ja pop nop or pop div xor sahf adc adc je mov sahf push imul (bad) negl add aad adcl jmp test push test jg mov mov push stos mov rorb lret pop inc in xlat and clc dec aaa dec cwtl imul add test cmpsl hlt mov leave cmp fisubrl lcall push iret adcl data16 loope js and rolb sbb sub mov mov addl aam daa icebp or cltd cmp mov sbb cmp (bad) push jne sti and jp pop hlt stos cmp jae jne insl jmp outsl jne push (bad) lea and mov or fwait jg dec add pop repz inc xchg lcall mov scas iret push xchg jl jge iret iret lcall pop outsb mov pop mov loopne fstcw push mov dec loope arpl and in outsb stos std add and imul xchg out sbb sbb push push mov cld mov mulb sarw loopne (bad) icebp push push sub push stos loope in imul pop loopne push sub pop pop dec ret mov jle scas sbb cmp xor jnp cmpsb sub addr16 xchg jecxz xor jno pop call or xchg out xchg push (bad) adc mov (bad) fdivl fstpl cmp cmp and sbb into scas lahf imul or add orb sub js adc cmpsb loopne cld inc lret aad jle xchg dec scas xchg sahf sbb mov inc jg rcr adc mov xlat lret adc adc mov jmp sarb fs (bad) fcomps xlat and insl neg scas std mov call cltd mov jl lret add ret inc mov sub fstl jno xor enter and dec shrb sub icebp insl pop jmp push pusha or sbb mov test or aad mov mov mull into bound mov push cmp jmp push adc out or aas fdivrp in test push cmp (bad) ret iret jmp jle push int bound ret sbb cmpsl in add jns imul pop or sbb mov ja out mov test jg,pt mov mov jb and je and sbbl sbb push mov mov (bad) mov xlat daa add aad mov mov mov lret mov (bad) in jge es mov push jmp push jo and setae sbb shll (bad) lock add sbb pop add inc stc sbb cmp push dec mov cmp mov mov mov mov shlb sub (bad) int3 ljmp fsts (bad) cmp push or sub test lcall mov or pop jo lock add test mov pcmpgtb lcall jmp aam push popf dec fcmovbe sbb dec cltd cltd and repz cmc cli push xchg fidivl pop pusha inc jmp aaa inc sub outsl loopne ja inc cmp pop sub std lds mov aam nop adc sub mov ljmp xchg push iret jle jle gs cmp lret sub jbe add fwait stos adc jg ja ret std rcll mov dec or (bad) adc shrb ja test jle mov jmp outsl popf stos xchg inc cmc in jbe (bad) jmp out push lods movsl mov imul cli push hlt add imul loope popl adc mov jg and mov lea jge lods mov mov data16 popf mov in cmpl out sti out or scas out jae or jl (bad) adc jmp mov push ja and inc dec (bad) out jge (bad) mov rcll lea fs inc outsl mov push mov mov lret sub call or iret aad add outsl cmp xchg cmp fldl add mov adc inc inc cmp sbb in cmp lret pop ret push sbb adcl stos mov ret push and inc push pop xchg gs xchg out lds out je add mov fisubr inc pop clc push sbb fsubr inc or decl sahf and cmp in sahf lcall or sbb or xor jo sbb int3 cmp mov outsl mov in iret imull push bnd pop mov add lcall fbstp loope shrb xchg cmp adc repz and je xchg mov push jo cmpsb dec mov jg dec jae inc jae addl sarb fmul leave mov ficom jmp and and mov mov add xor push lahf add jb jb cmp jl in adc sbb inc das stc mov test push xor mov scas (bad) or push stos or add (bad) lock push flds mov pop inc cwtl and (bad) xchg iret add (bad) fisubrl xchg lods xor jnp pop in loop sbb adc sbb push sbb inc and and mov inc inc fmull mov repnz mov in mov fisubr data16 jnp loop adc roll mov jmp cmc cmp lret (bad) dec mov jbe idivl ljmp (bad) enter stos mov into add jl cmp (bad) out je pop sub (bad) xchg mov xchg cmpsl jecxz out sbbl repnz xchg ss pop imul loope fstp sub mov sub test inc mov lcall jmp call enter pusha dec cmpsl das and negb sbb repnz mov add xchg daa add xchg (bad) mov jle fs sahf popf fs mov sbb movb push movsb out xor or outsb push pop insl call dec in je pop mov add fwait mov mov hlt (bad) mov orl mov leave dec sti jb dec lds push adc out or mov push push and dec pop mov ret pop sbb push data16 xor dec into outsl cli mov shr mov pusha imul xor jg pop pop jae pop (bad) dec and sbb stos jge (bad) fistpll dec repnz lds mov mov dec ror or repz sbbl adc cmc xchg xorb sub adc repz (bad) out data16 cmpsb xchg jns imul movsl imul orb and les je xchg xor jg les mov (bad) mov jb inc or mov jp movsl mov les mov das testl das sub inc push fistl int3 lea sti mov mov lahf arpl push xor xchg ror stos mov (bad) and fidivrl sbb mov jmp std xchg pusha cmp and icebp mov cmp pop sub mov cld test enter cwtl add in insb xor inc sbbl inc rcll jne (bad) sub inc or mov or jmp addr16 fs push dec pmaxub add jecxz gs dec sbb xor push (bad) lahf int (bad) imul mov fs scas cmovno xor pushf or test adc imul jmp je adc lods cmp xchg mov mov jecxz push fs nop push bound jbe std repz rcrb sub xchg fcomip and xchg sbb mov in cmp aam rcl or fcomi in push out loopne repnz push or movsl and (bad) stc mov call inc into xor fbstp add and jle div mov pushf lock pop jge push xchg stos pop xor pop jge scas or fisttpll push lret andl push add in mov stos xlat and hlt or mov nop mov lahf adc pop int sarl adc (bad) dec scas mov mov xchg sbb lea hlt clc loope data16 dec sbb jg test or push adc push je (bad) lock loop fdivl stc or dec xchg aad arpl jnp mov push cmp js int jno in pop icebp es sahf lret inc nop inc xor frstor les push jns push push mov enter in xor or repnz and (bad) arpl int3 sbb shll andl dec cs ja pop inc sarl cwtl mov cmpsb adc adc les jp lret rcrl mov (bad) pop cmp dec and out mov mov mov cmp imul inc loop dec (bad) sarb js mov notl les xor or repz outsb add test mov in lret movsl sbb lods insl stos fwait dec jae inc push xor test sub mov mov inc inc mov imul mov les aam mov add mov or ja icebp jns add or lea push add aad in mov cmp adc insl fcomip jg cmp push call gs sub fnstenv jle push cli push dec scas loopne das stc jmp jne cmpb dec pop lock dec cld and clc into and cmp ljmp jge mov inc jg jne arpl mov dec or in out pushf icebp and xchg inc dec test fwait mov (bad) sti sub pushf fcmovu and ficoml out test adc aam jo push and out add cld sub std int xchg xchg jb dec addr16 pop fist std push fwait imul aad movsl in dec mov push out loop xchg test stos adc outsl fisttpl nop xchg lret int3 xor cmpsl mov pushf inc adc sub pop cwtl enter xlat cmp jle gs stos fxch (bad) inc or fadds in push outsl lods (bad) stos test pop test push mov xchg std cmpps mov in dec and sbbl mov insb hlt rolb mov jg movb sub adc repz jecxz xlat decl jb add inc scas loope jecxz js add mov mov jmp ret push sbb rclb std (bad) pop mov scas lods das insb xchg sub dec dec cli pop cmpsb and mov loop dec les lds movsb push je mov sbb cmp mov pop xchg cmpsl jecxz sbb imul jnp scas loopne mov adc xchg push icebp mull stc jp or or bound inc icebp into (bad) sub sbb xchg shlb or scas icebp sbb xchg addr16 mov dec xor sub mov cmp into mov fcomps sub jl std dec xor pop pop xchg (bad) xor (bad) or mov ret scas dec fwait add sub sti stos popf sbb das test imul std lretw cmpsl (bad) xor xchg pop repz insb outsb movsb repnz outsb jmp test jnp jo mov sbbb sbb insb cmpsb bound sbb rcrl add xchg pop xor sbb mov xor js (bad) jmp movntps data16 push in dec decb pop push leave loop sub lahf adc jg,pn bound mov pop push (bad) lret (bad) arpl es mov (bad) dec stos notl adc nop (bad) pop test aam jae leave std repnz sub fwait es or into mov fldl dec movsb cs add adcl mov test enter inc loop xor into dec arpl int3 push leave add lods aad xor cld pusha cmpsl jecxz and sub hlt shlb cmp xor insl push xorl sbb lods loopne sub fdivrp mov jg arpl into mov mov fist cmp leave enter rcrb and scas mov repz fisubl insl pop mov or xchg jge pop mov pop movsb cli xchg push sahf aaa test dec dec xchg jge pop ljmp fimul imul push dec mov rcrl shrl dec sbb push pushf and mov icebp pop xlat mov mov aaa std ja mov push inc xchg adc xchg mov lcall icebp pop or jle xchg pusha jo repz mov dec mov cmp lcall push inc sbb das push data16 and pop mov jmp mov pop jle int pop mov sarl insb bound pop xchg and daa or cmpsl insb ds repz rorl jmp rcr lret mov lcall lret pop mov cmp out daa xchg push ret mov mov jge test mov and jl cmp call sbbl sub adc sub stos out sbb popf pop bound dec scas jo imul je repnz and dec popf pop mov call cmp adc into xlat (bad) (bad) ds fdivp mov rep jns add enter dec daa in mov repnz dec mov (bad) mov imul cmpsb mov push out pop (bad) scas mov dec cs jecxz loope (bad) jne pop sbb sub mov push pop cld cmp xor xchg xchg std orb stos and scas pop (bad) sub lock imul push (bad) sub (bad) insl pop mov dec in fsubl push fidivrl mov and xchg jge push push push scas or sbb mov pop push sahf xor ljmp lret mov push lret lods push loopne jo lods fmuls mov lahf xor push sti sarl or in mov bnd shrb inc mov dec jge inc jae ja inc and xlat shlb pusha (bad) dec jge fmuls pop mov push inc inc lds push ljmp cmp in dec sub xchg inc jmp inc in push out xchg push gs lods fmul dec js (bad) jbe adc lds fldt gs outsl or xchg imul imul fwait cmpl jmp sbb stos adc pop scas icebp mov pop mov xor nop jecxz pusha movsl dec callw and imul pushl add cmpl mov pushf stc call ret data16 ret sti mov cmpsl jae push xchg (bad) mov fisttpl lret jnp push jno mov sub pop mov push mov push out xchg mov inc sti imul cmp andl int test inc (bad) fstl fwait add ret mov lods mov sub dec add cmp roll test in clc mov or icebp insb cmpsb les fidiv add cmp mov mov test int3 ret lods jne sbb movsb xlat adc (bad) mov inc lret cmp xor adc add fcom dec jno cmp pop std outsl inc push pop mov mov in out push arpl mov test fdivp ja (bad) into mov dec mov jno cwtl adc pop or push push dec ficompl xor lahf mov xchg adc out pop and sbb fmulp add test aas push cmp cmc dec inc daa sub mov push dec imul mov lea mov xchg push pop pop movsl xchg inc mov call pop adc nop and and add sbb nop add pop stc xchg je push fisubr lds test mov xchg (bad) adc fwait pop cld push dec jns cmp subb push mov clc jno ret (bad) mov mov mull cli sub mov pop dec pop inc outsb test (bad) adc jp pop insl repz std mov pusha sahf nop out lret mov sbb pop jns in xchg dec movq in dec pop call faddl adc lea inc mov enter pop jmp push rcr (bad) mov (bad) int adc stos adc xor cmp sbb sbb adc shlb sub or xlat cmp push pop stc mov das dec lock xor push jl jg xchg call adcl (bad) push outsl cmc pop and mov or mov xor insb mov sub sub arpl (bad) mov in mov pop mov sbb dec sub fidivr xchg jmp frstor inc dec movsb into and out push in xor jl dec jae push and push (bad) repnz frndint cmp jle in test sub outsb stc shrl inc push enter fdivrl cltd sub or jecxz mov jecxz lods fldenv adc lret dec inc jmp inc adc mov mov cwtl push mov imull movsb lret scas inc cli cwtl hlt mov inc dec and add out cltd xor xor lret cmp out pop inc push aad arpl mov stos bound nop sub jecxz into mov fstpl fs sbb dec std call lret and stos (bad) xlat and stos push mov dec or inc adc dec fxch int3 lods cmp sbb mov jns dec sub int3 (bad) (bad) cmc stc or adc jle dec cli and outsl cmp ljmp push mov xorb inc cltd incl push test repz dec pop and shll popa mov loop dec inc fs adc or inc lea sbb sti pop or push push out xor (bad) pop mov rcrl test negb pop jmp stos negb (bad) leave mov inc pop aad mov ret (bad) pop (bad) lahf inc int mov or push and inc dec aam cmp adc int (bad) imul push cmpsl mov (bad) cmp aam rorb pop addr16 push or xor sub jg dec mov mov (bad) push jl stos fnstcw sbb or int xchg das fs js mov test movsb setae xchg pop leave mov in pusha std or cmp mov mov fmul mov mov pop adc push sbb int inc add mov sub push push inc jns inc dec xor (bad) mov mov aas lahf imul (bad) xchg ds mov jl call stos xchg push (bad) add std adc ljmp pushf mov cmp out xchg cmpsl jns xor or lahf sub xchg dec or jno test stos sub scas pop mov shrl jno mov cmpl mov mov test cvtps2pd cmp mov mov jle jp jmp mov outsb inc pop and jg pop roll mov loope xchg sbb mov insb fprem dec (bad) aad dec sbb mov push sbb pushl or add lcall adc push out push test adc push pop divb add jno mov (bad) xlat scas (bad) jb adc pop fsubr dec mov mov ret scas bound push inc fucomi sbb push out mov lock mov push mov pop mov sbb scas fstl mov mov pop scas add test mov pop js cmp sub dec fstpl popa jo jne push push pop sar repz sub add cmp and out test mov aam lods je mov imul sub push pop lret adc mov mov es ror mov lock mov rclb mov in pop loop,pn gs cs inc out jo mov xor push inc adc push and cli (bad) xor int out cmp addl sti xchg imul lret lock shl xorps and cwtl push call jecxz into (bad) jp pusha pop pop jns jmp insb pop sarb in sbb cltd iret adc (bad) cmc xor xor xor rcl pop fwait mov sub rcrl out adc push and mov dec test push enter ds mov mov movsl fwait pusha jo aad test cmp ret movb pop (bad) sbb (bad) xchg or aad fldt jbe cltd sub mov xchg add outsl repz out ljmp and jo jae inc je lods iret inc fldt pop pop iret mov sbb jae pop ja sti xchg stc dec add ficoml das lret insl and fstps cmp loopne mov and andl push stos enter testb shll idivl mov pop rcll push testb inc insb add testl in fstpt pop push xor pop mov xchg es and mov hlt gs outsb adc ljmp lods push das or jae aad aam inc sub (bad) ds push mov hlt cmp lret lahf jns add sub call nop xor cmp fwait xchg lret imul inc pop (bad) dec add rcrl scas hlt pop mov and bound outsl cmp rcll movsl push add sbb lds or pop mov and and icebp das xchg (bad) push inc je (bad) std into jbe dec add inc ret jle mov jp lcall xchg subb mov hlt ss mov sub inc loop mov ret scas loopne (bad) xor cltd jg cmp mov pop xor xor and adc ljmp cs test popl mov fwait int or xor or jecxz or stos fstpt mov rcll pop fs xor adc dec pop mov je xor int3 sub and mov fistp imul xchg xchg adc and lret pop (bad) mov dec xor sbb adc inc and (bad) mov outsl stc pop shlb adc inc lock stos adc or and or dec js inc or dec dec push fildll dec jecxz jno pusha or les jp cmp mov or sbb ja fptan mov mov add jns aaa cmc test popf pop (bad) dec mov test (bad) js fcomps in xor aas sub dec test xor push mov test sarb int3 mov xor lret daa sbb (bad) xchg mov xor mov lret and rorb cmp lea scas push ret (bad) sahf out sbb add movswl and mov push in mov outsb push mov lret dec rcrl sbb cs and and arpl cmp sub popa xor std cmc dec mov aam add (bad) mov test call pusha jne mov or out stc push jne imulb mov shr jle sti jbe push imul sub sar ds mov lods ret xor mov cmp and or repnz pop or mov adc mov pop pop iret ja cld mov into in mov adc data16 push mov aam lahf and xor add fsts push and or xchg mov cld int3 gs xchg pushf outsb push outsb pop jp jb ja jl sbb xor xchg subl lods icebp (bad) sahf pop or andb push clc xor dec jbe repnz stc mov imul pop (bad) insb push add mov push test or cmp lock xlat call stc int3 addr16 inc pop aam mov mov jp aam mov cwtl pop addr16 ret dec ljmp jae pop outsl div pop leave fisubr aad sahf adc mov aam lahf dec and mov cli imul mov jbe jne and push stos inc or ss in out mov rol adc fcmovnbe pop nop ss sbb mov xor cmc int lds loope sbb mov jae cmc mov out inc mov outsb mov adc cmc push add je repnz sbb add ret push outsb pop test xor fcomps popa (bad) jecxz hlt adc (bad) push or push incl test shll adc fxch sbb out je add out cs in adc push or and adc pop dec cs xchg (bad) repnz push add rol adcl shrl outsl pusha xchg outsl repnz xor add xlat xor testb sub xchg pusha or pop out pop pop shlb stos inc sub adc inc dec add dec pop pop data16 stc mov das sub mov cs sub ficomp lcall test adc stos jne in (bad) mov fstpl repnz cmp add je push out xchg mov mov inc mov push in int3 lret sbb jl es dec mov fdivrs insb or mov push xchg push mov rclb loop bound jle stc mov mov jo xlat mulb jle mov jbe lods inc int jns ja pop test mov mov in lahf popa push or inc pop sub xchg insl insl out ss sbb sbb push idivl or out inc das mov cmp mov pop out xchg adc in mov pop mov andb cmpsb std dec cmp dec cmp fs sbb pushf jge cmp mov outsl pop cmpsl setae cmp add or fsubrs js push jne popa outsl fadds scas rol roll and and sub outsl adc movsl pushf (bad) fstp mov stos jmp mov dec outsb aas insl and adc pop aaa push dec pop or sub pop sbb xchg mov mov mov aad outsb sbb stos out mov rolb lods addr16 xor ds pushf lret test clc cltd es outsb iret jmp add (bad) lods ss in and dec lret sbb dec and cld inc xor inc aam mov xchg clc js cmp fsub and inc inc mov mov cmp push adc (bad) cs inc add cs enter jg out adc rcrb jb jb popa pusha mov jg stc mov out rorl test push add push fs mov xchg jl pop inc outsb pop pop push adc fsubp mov les xlat pop test nop iret add xchg push jg stc push push outsl call jno es xor popf roll push mov outsb mov push dec mov jmp ficompl and sahf dec cmp sub pop jne pop inc and mov push push pop dec stos ret popa adc sahf cmp jne test xor shl out add mov mov jle aas repnz mov mov jne or std add fnsave sub lock movsb test push adc lock push dec sbb jo lods cmp add xchg mov jnp cmp xacquire inc sub jae and decb and icebp aaa cltd mov cltd iret (bad) sti jbe testb pop outsb aad int mov cmpsb jmp xchg in xor or pop sub xchg push jae push (bad) insb stos jle decl int fnstcw mov push jns push lret mov adc add mov fsts sbb pusha xor jae and test movsb mov xchg sub and (bad) outsb in hlt push out hlt jg push add out push mov clc test adc flds add fisttp stc sub mov push das ja,pn fcomip lea test out jno sahf es (bad) testb inc int mov mov cmp dec and or cmp ror lock dec xor sub push (bad) jnp cmc push (bad) fldt and or inc mov icebp std outsb xor mov inc xchg into push push or repnz lahf aaa int pop xchg pushaw xor imul jecxz sahf jmp fstpl je inc cmp add ret or sbb and or es cmp xlat test mov scas popa xor pop (bad) push cmp (bad) xchg mov mov sub cwtl jns fstps mov aam and and xor xchg inc mov jmp or xchg sbb stc xchg xor and xor push mov mov in stos mov inc mov loop,pn mov into pop cld stos shrl jne pushf fidivr push cwtl dec pop lock icebp scas adc (bad) data16 call fwait jbe fs jns mov test mov add pop out fild cld lea and mov jp lods push mov fcomps out or push sbb lock (bad) xor mov stc les leave inc cmc in ljmp mov push mov mov sub xor cs lods in and adc jecxz push adc add pusha test cmp shlb testl rol pop lods outsb dec pop sub mov xchg push fdiv xchg daa das jns bound push sub pop (bad) jecxz pop mov adc ljmp sti add int pop test or lods insl push das int3 sbb pop fnstsw js xor mov loopne clc stos movsb adc div loopne mov lcall jno jg mov pusha imul jne dec hlt ret jmp fnsave repz inc dec cmp jbe in push inc mov mov push inc int jl jae call or (bad) int3 pop sub mov add clc push pop addr16 outsl xchg lret sbb and aaa dec pop push fimul mov (bad) aad das push push lods cmp ss loope or int mov xchg and xchg (bad) aaa xchg sbb add vphsubwd int xlat sbb push into cmp std push stc cwtl fnsave mov aas stc push sub mov sub sarb sti xchg push ss pop xchg das in push mov sbb jl out mov out popf movsb insl jecxz movsb stc push push xchg insl inc fs pop (bad) xor fistpll xchg rcll sbb stos cli arpl xor adc xchg add mov xor lock cmpl adc lret outsb mov mov add xchg js inc test inc xchg lds js insl push cwtl ss mov push cmp hlt xlat sbb (bad) icebp (bad) loop add repnz je,pt mov push jbe popf cltd and aaa (bad) jbe mov cmp mov data16 addl mov mov jbe mov sbb jecxz jmp sbb pop lret cmc xrelease adc outsb add or mov mov add or sbb clc inc sbb popf (bad) adc mov sbb movsb rcr popf add push std loop sub fucomi (bad) loopne mov add mov mov pop enter jle mov cmp popa add and or cmpl arpl and mov enter lcallw sub fisub movl push mov (bad) sbb mov fildll jb mov or fnsave or in popf fbstp mov je lret icebp pop repnz test pop push out cmp test mov xchg (bad) in (bad) cmp pusha cld xor inc pushf and scas push sub adc sbb inc sti out sbb repz hlt xor ds pop shr lock xchg mov xor dec sahf into jmp cmpsb cmp (bad) push lods popa pop (bad) ficom xchg adc pop xor mov imul gs test pop fidivl fstpt lods repnz outsl hlt sbb jp sub mov test jg lea and (bad) mov or ljmp (bad) pop sub nop aam outsl xchg push jo push fiadd aad or (bad) cmpsl lock movsl inc (bad) test repnz and into push pop cmp ljmp add jmp pusha lods data16 movsl popf ret std pop insl xor imul pusha inc add out (bad) mov sahf loop arpl pop and imul orl xorl out sahf jb adc sbb loop add outsb (bad) imul adc subb pop fstps es xchg adc jne sbb or or mov xor push (bad) iret dec pop xor in pop out pop cmp ss insb stos call scas stos mov sbb loop out jbe (bad) cltd cmp cli or adc jo mov and pop or aaa into ja mov xchg adc sarl and mov dec xchg mov dec mov (bad) dec cld iret sub repnz mov ficoml jl mov pop and (bad) pop out decb adc sub imul out outsb in es ds or mov push cs cmpsl (bad) lcall imull sti repnz js adc fninit and je test jne mov insl dec pop (bad) adc lods push loopne cmp je and lods jmp jp in orl (bad) int mov addr16 sbb nop popf test insb inc push fildll sbb xchg pop inc xchg bound or les mov inc das arpl or adc ss push xchg dec or add xor in les mov (bad) cld (bad) int cmp mov setbe xor lret sbb lods fs sub ret mov into testl dec lcall sbb jmp jbe (bad) in mov inc mov mov dec movsb push xor shl sub xor out clc push sub dec mov fwait xchg jecxz fdivrl sub and adc out nop (bad) sbb mov fistp pop rorl rorl dec cmc sbb sbb pop jmp jl sub mov inc (bad) pop loop daa push adc xchg inc sub inc jnp mov in push or test scas (bad) pop out icebp fsubl ficoml or (bad) sub jbe pop js ss repnz sbb outsl mov cltd aas lahf clc xor cwtl push es and push inc pusha scas stc je mov lahf jg out fsubs jnp loop mov jecxz,pn pusha outsl dec cld les jnp fstps dec aam ret inc pop int aam test fdivr xchg sub ljmp inc dec push mov push adc push icebp clc cwtl sbb fstpt ljmp pop out fxch dec mov ja mov xchg lcall xchg push sti out mov and cmc outsl sub dec jl xchg push jbe mov jnp lret mov stos out lret rorl fstps js add xchg ret cmp pushf push aaa in push adc bound (bad) std gs (bad) or ljmp mov or sarl sub inc clc xchg mov mov rcrb test dec push xchg cmpsb sub shlb mov lods inc sbb arpl subb sub lods test fidivr andb in add out popa mov icebp dec imul jmp call cmp shr fisubrl xor sub inc pushf fsubs xor add mov mov dec xorb add fidivr mov and push xor and or leave push (bad) into loopne adc push lahf ret bound sbb nop push xor pop loop lret xchg outsl pusha std push icebp dec mov out push imul in xchg lea loope mov cmc pop aam xchg push mov aaa xor int mov and adc jg adc (bad) repz xchg pop jnp mov ljmp xchg stos pushw imul std push jbe xor enter push push dec gs pop mov sub mov enter sbb mov xchg jns scas fild lret fcomp imul imul (bad) imul mov jg or cmpsl in call into mov (bad) in xor jecxz pop test and fisttpll ss push mov xchg sbb xchg inc mov inc stos fmull fldenv add negb notb insl stos cmpsl xor ljmp add negb dec inc cmp adc repnz pop push push pushf pop fimul mov pop lock xor ljmp dec jecxz cmp orb gs repnz scas pop mov dec pop lods jb rcrb cmp out aad xchg js int3 jg mov jae cmp nop rcr mov adc lret xor in mov xchg jmp sahf pop aam int3 leave cmpsl outsl movsb mov icebp fiadd mov dec pop and push jl jp ret sti xchg insb mov shr test icebp jle jmp into push data16 loopne add jno jno jae or hlt or inc insl sub stos mov or notl pop mov xor daa xor rolb xchg daa and fs jg jb inc sarl shrb pop decl setno mov pop or cltd inc cmp fs jp jge,pn mov es and loopne mov cmp push out inc mov and cwtl adc and mov pop or (bad) jno sbb daa xchg scas lahf (bad) pop pop mov jbe in icebp mov loope repz ret lcall adc or out repnz insl mov mov cmc dec (bad) sub cmp adc xchg jns cmp test mov xchg adc push mov xchg mov (bad) fcomps or lcall out xchg xchg dec fcomip ret loopne lock xchg jnp sbb out jle scas pop aas add sub xchg cld xchg jno ror pop push dec mov cltd xor (bad) push sub icebp jae out mov test (bad) sbb cmp xor sub xor and cli std test adc jns mov insl sbb rcrb push dec icebp jo out ljmp push push daa shrl add and (bad) enter push adc inc mov shll xchg daa arpl test adc aaa fldl add lahf rorb jge inc add call inc out dec push cmpsl mov add insb dec cmp inc jnp and or ret leave (bad) aam dec add add mov mov fwait dec aas sub push mov inc inc push inc aaa test cld in std (bad) pop popf (bad) xor cmp or ljmp adc push mov or cs arpl and pop lret cltd pop (bad) aas imul xchg loop sbb push loopne mov call int rorb mov scas mov and xchg int3 aaa inc daa jne xor jne add xchg lret sbb lahf out js in in fsub xor je insb rcr nop cmpsl fsubr in pusha js jl xchg (bad) adc fisubl mov in add inc dec mov mov clc shrb sub pop mov push loop enter adcb sahf js and xlat mov mov jecxz cmpsb mov (bad) icebp imul leave pop out mov (bad) addl (bad) fadd sti pop jmp fisttp xchg cmp clc push adc in inc lock inc sarb lret push pusha jnp test pop jl xor add shrl (bad) fcomip xor ret pop movsb mov cmc std adc sub and sbb mov arpl adc repz sub sarl into jle xchg je (bad) es and cld andl adc or pop dec mov push call mov (bad) pusha jbe (bad) sti sarl or add inc pop xchg mov lcall or outsb push mov inc mov push adc mov cmp insb ljmp xor repnz fprem and or mov push iret dec xor add mov pop sub sbb negl inc push movsl cmpsl push stos and add pop add xor push jno rol inc inc adc js cmp test lock in xor pop rcl mov in cmp repnz out cs jp leave xchg fcomps adc and mov sahf add or adc cmp in push mov int cmpsl xchg mov xlat in cmpsb lods mov inc push dec push test aam fs xchg and xor inc cli stc push xchg adc jo (bad) jbe cs jp add mov jl fstpl rorl call sbb xor arpl mov cs test ja mov dec sti fdivrs (bad) out add sbb int std fdivs and lods pusha sbb pop pop (bad) out mov rcr xor (bad) fadds (bad) mov cwtl fnsave movsb pop iret jg pop scas or divb jne mov jp xor and gs push test into jae enter stc jnp add mov push cwtl dec leave aas lahf push loop sbb lods mov xchg mov hlt loopne mov addr16 test pop or aaa iret mov mov pop pop in loop pusha bound jp int pop es mull jae pop (bad) std pop sub pop dec clc das leave mov sbb std cmp fcompl mov (bad) popf push inc xchg in pop adc dec pop stos pop jno hlt in cmp jge xor pop jp xchg push icebp xor out mov cli push sbbl aaa insl clc mov jmp mov sub orb (bad) sbb add (bad) xor in sub fstps cltd cmpsl loopne xchg movsl jle outsb rolb pop movsb data16 iret push les mov daa nop inc inc mov pop pop push pop mov push ret sub lods inc clc xchg out mov push sub sbb inc (bad) or mov jne mov jb ret dec push ret pusha fadd les test fsubl (bad) mov fmull rorb push sbb ret add push stc in add repz sti outsb enter aaa cmc cmpsb mov push sbb test mov insl cmp aas and push or add xchg nop lea and and (bad) mov aas insb add push out jnp shlb daa xchg or dec (bad) mov loope push dec popf pusha mov sar stos aam adc ficompl aad pop inc adcb push out and imul lods fcoms gs pop and dec push scas mov jo jb outsl icebp xchg jmp adc ljmp dec sbb adcl xchg sbb xchg es into pop adc ja ret scas cmp xchg push popf mov in in lods xchg push push adc sbb add jle xor pop or fisubl cld jo test int3 or mov je pop pop imul cmp inc mov repnz ss loopne aad inc xchg adc push sub sbb test adc stos jnp std push mov mov lds jae inc enter pop jp rolb and mov dec adc les pop push adc push pushf bound mov fildll loope rcl and pushf mov xlat nop stos or adc cmp cltd in inc pop movsl leave mov test pop lret in sub and or in das addr16 pushf push aad push xor cli (bad) jae jns sbb dec imul mov xor lods or push loopne lcall (bad) jp cmpsb iret sti cltd repnz pop cmp sub (bad) xor or push add sti inc push cwtl stos inc ljmp loope jo mov jb xchg push push imul inc pushf popa jnp cmp cmp mov add push inc repz mov scas sahf mov mov fstl enter dec mov out and add daa cmp cmp aad adc sti fcoms lods push lcall bswap adcl loopne or and jge aas aam test ljmp rcrb (bad) or jle jmp lods add xor lahf dec out int3 mov ror je scas fsubrs inc pushf sub inc sahf xchg sarl xchg (bad) es leave inc and inc dec imul jae jecxz mov into xchg sarl pop mov decb xorl mov cmc lods rorl orb lcall std fisubl dec adc shlb addr16 frstor or cmp jg aad inc cmc subl mov mov sbb pop scas outsl mov push jle cmpsb (bad) in aas sbb xchg mov adc pop inc out repnz ja jmp stos imul cmp sub mov sub pushf mov jbe daa imul xchg std (bad) xor sbbl lock es adc test push push push push adc and pop xchg add inc pop mov dec (bad) sbb lea pushf pop and xchg fiadd lock out rcrb dec push xor shll inc jns ficompl pop imul outsb push jge mov rorl xor push fcmovu std stos gs push dec mov xor xor mov cmp insl (bad) jbe mov sub das or mov push popf jno jns fdivrs fs mov cmp and push jecxz push adc push mov subl push aad adc pusha lcall and mov xor andb sbb fstps sub dec mov cli jecxz das (bad) (bad) mov mov mov jbe lcall jl push add xor or pushf iret mulw sti xor cmc mov push popf scas jl jecxz jnp push and leave jb addl pop or xchg inc inc jae,pn push jmp mov or cld xor fwait jno lods insb fcoms bound movsb test int movsl int sbbl jp lea (bad) push (bad) jne jne (bad) mov pmaxsw je jg add xlat in xchg push mov jno mov mov push dec aas ss int3 mov mov add inc push adc aad imul cmp aam getsec aaa fwait xor in jl or adc cld cld movsb enter mov sti orb or int pop imul mov loope mov xor inc dec add cltd mov and cltd mov mov int3 out sub mov inc sbb popa clc dec cli fildl int cltd pop scas enter outsb sti test push ds or mov stos mov out pushf jo ss outsl in jae fwait xor jne cmp pop sub fsubrs xor xchg dec cmp jmp mov (bad) mov xor push push and inc jg dec mov out or add mov adc les scas dec cmpsl jbe pop xchg or xor dec (bad) dec xchg fistpl movsl (bad) les jb sti or aam push out rol push aas pop in fiaddl (bad) in test mov push cmp ret iret inc leave dec test sarl lahf iret pop inc pop mov lret pop and idivl push mov cmp lods mov mov aam inc aaa out or out lea jge pusha push aaa mov lahf cmp mov cmp lods fcmovb push mov aad rcl add insl mov mov mov mov call in xor cmc scas cmp sahf add out outsb sahf pop or in shll mov lea fdivrs mov jecxz and push mov shll (bad) ljmp mov nop ljmp pop or in movaps xchg xor movsl orl lods ret add rolb xor cmp stc cs xlat sub repnz les das movsb shll sbb pushf mov push inc lock insl jnp loop (bad) stos test xor call push lods push and orb pop lcall es sbb xlat sub ret jge add cmp int3 adc lcall mov jbe sti lds sbb movsb add sbb insl push xchg fisttpll pop (bad) jo (bad) mov lods lahf add data16 jno sub (bad) mov clc inc or mov jno sbb ss and cltd int (bad) outsb xchg cmpl xlat sub and jle mov scas mov in sbb or (bad) xor scas adc xchg xor pop stos xchg arpl jns inc mov xor xor xor inc outsb cwtl movsl cwtl cmp lcall sbb mov and sbb lods mov (bad) rcrb mov and mov shlb insb pop in push pop rcrl jno jb push (bad) and int3 cmpl or gs cmp pop sbb push lods (bad) mov pop mov pop cs aaa cmp inc (bad) xchg jne aad jg rcll push jnp push or iret inc data16 repnz and adc pop and icebp or dec xor outsl and cmp divb xor (bad) int nop xchg or sti mov sbb push (bad) (bad) pop (bad) push scas xor xchg cmpsl sbb sub ret repz cwtl push mov in xchg sub mov mov sbb clc sbb loopne aaa popa cmpsl cmp (bad) dec cmpsl xor imul xchg dec dec adc pop pop or sub push sub jmp data16 enter out idivl mov and data16 mov cmpl and mov inc sub xchg adc jg fidivr cmc jp into push ds pop mov movsl adc jae bound arpl or repnz popa int3 xchg jns sub jae mov sub test cmpsb hlt sub icebp mov sub inc add lret add inc into cmp enter adc cmp popa inc (bad) jp push mov jge inc xor xchg mov out nop lret out push je mov enter cmp das cmp js or mov negl mov fucomip jns add jmp mov fist ljmp repz mov int3 pop mov (bad) das jle shrb aaa dec inc push (bad) xor cltd lea xchg neg ja gs dec pop ss lock xlat sbb jns cmc mov mov shl aad or ds hlt andl and insl insl adc or (bad) divb dec xor push ljmp lock ficomp cs fidivl lret lret mov cmpsl dec ja hlt add mov stos and mov lcall mov xchg cld pop pushf pop cmp cmpsb inc and sbb (bad) (bad) out adc loop (bad) mulb dec sbb jmp cmp test and clc xor jmp ret adc pop dec js xor inc mov cmp ja ret cwtl loope (bad) cltd mov fistpll negb scas loope frstor sarb ffree pop cmp xchg repnz ret cld loop xlat mov mov jmp lock gs and mov stos mov pusha scas inc popl std and pop mov ret int clc in andps fildll fiadd adc fisttpll sub push gs enter cmpsl cmp push cltd push cmpsb popa out ds push xor and cmp sarb push nop mov and adc cmpsb mov jae add bound add fisubl jg fsubs mov inc mov shll jmp inc stos in repz in aas test int3 rorl fs jne inc add sbb iret and jg dec or and lods test xchg popf mov mov push in dec sbb jp cld cmp lods lods and adc cmc or or gs call push adc lcall (bad) ret aam or jge sbb cmpsl daa jae adc imull jmp divl into pop cmc repz dec add pop bound jno aam mov jo repz lret ss aad pop ljmp jnp loope repnz and outsb adc mov or bound outsb fldenv daa leave in popf lock mov nop stc inc jmp mov popl pop and cmp orl mov (bad) ror inc inc xchg sbb dec mov jge fnstsw jb mov sbb lret or dec jmp test pop les and mov sti mov mov aad xor daa add lret jo and dec mov daa lock pop idivb and mov mov cmpsb pop mov adc clc push jb sub dec mov push inc mov mov stos jecxz (bad) dec or jl pop (bad) or pop pop jmp sahf into mov fneni(8087 adc xor or outsl pop popa scas xchg pop insb cmp sbb adc test pop sbb add jb mov orb sub mov (bad) pop imul and and fidivrl or add lahf jno (bad) mov cmp pop pop cmc sub sbb mov mov (bad) into mov fucomp jmp (bad) push sub mov or cld es push idiv pop (bad) cmp addl cs jl iret push adc and add fst xchg cmc pop gs mov jle idivb sbb mov mov addr16 setae in (bad) stos in aad sbb add insl mov dec jg or push add and cmp es mov imul cmc inc pop ficomp in movsb xor push and push dec daa push int3 clc pop lea enter ja xor push mov and xchg in jge out push xchg test jbe xor or inc cmp sar int3 out lret sub mov or jmp mov lahf jecxz icebp out cmpsl push lret nopl iret ds loope xor scas jb ficompl mov aam icebp pop xlat xchg icebp leave adc cmpsl sbb out and push iret test jge (bad) adc add cmp mov adc jns mov or xchg orl movsb xor and jne mov sub popf stos adc pop test fsin lds jno shlb call mov xor pop xor test cmpsl xchg (bad) xor mov mov xchg push cmp mov pop lcall xor mov pushf cmpsl xor das jbe xchg inc mov and cmp (bad) push xchg push and mov xor cmp inc test dec push lret jnp dec push mov mov sub (bad) (bad) xor loop xchg mov mov push pop xchg fiaddl pop cld mov pop nop dec adc dec sbb out jl in xor push cs test push lods and or mov es pop scas std or stc jae sarb dec inc shrl and fucom mov (bad) xchg dec cwtl sti imul mov jmp int3 xlat add sub fcomps fwait adc dec sub mov jo out lret loopne and or movsb sub in loopne xlat gs popf pop jb movsb mov mov lock (bad) pushf les inc xchg jmp push mov (bad) aaa in stc and out dec sysenter pop insb addr16 fisttp pushf sub addr16 es add xchg jbe adcb pop inc add push lea xchg mov push ss mov push sub mov aas lar (bad) js sub mov sub xchg sbb cmp nop aaa icebp adc leave pushf jo ds (bad) mov xchg or xor cmpsl mov cmp cmp cltd rcrb cmp add jl mov xor inc sbb ja mov xchg mov pop shrb push stos inc ds lahf std mov sub xor xchg mov jnp xchg push add insl push mov push adc xor mov sbb enter movsb mov fxch xchg sub cmp adc es or popf out xchg pop xlat adc mov add mov xchg (bad) cmp pop push cmc add sbb mov jge sub shrl sub sti and inc push out sub sub clc test push ja in daa sbb sahf xor sahf mov in mov pop push adc inc jns add scas pop inc mov mov lret dec pop out es scas adc xchg js adc sub popl test mov ror ret jp mov scas lods mov lret out in cmpsl fwait or mov mov cli out mov and push adc mov cmp rorl add addl push notl jmp lar sbb sarl ljmp mov test ret stos sbbl jg and mov cs pop shrb cmp cmp gs jmp inc xchg lret imul mov in cld scas xchg inc out mov ret mov in mov out (bad) lock cli insl xchg aad scas outsl in sbbb inc lcall pushf loope xchg call push adc aas jp xor xchg pop mov push xor jo jp push fdivrs iret jb in je hlt xor ds mov loopne cltd outsl mov je jb int adc ja xor je pop not push jo push jno adc (bad) sub xchg add popf ret xlat cmpsl mov add rcrb aas repnz dec jnp sub mov imul (bad) xchg xor inc sbb and test inc cmp push push aam dec test sbb sub neg push cmp (bad) mov push dec sub mov incl ss jbe xchg push ja cs lcall ss mov in jb,pt fwait (bad) dec or xor stos lcall jl (bad) repz mov mov mov lds pop popa adc xor insl push sbb and pop xor dec addr16 insl mov loopne nop pop out or popf pop test ja fiadd add data16 and aad cmc xchg mov cmp xchg or mov sahf mov xlat nop xor push lds mov xchg outsb andl nop arpl xor jmp or dec pop and sbbb add mov sbb mov rcll jnp cmp mov out out ljmp push mov and dec adc xchg mov clc jg mov adc add sahf loop mov cmp mov ljmp loope loop jbe add jp inc jnp in dec and sahf mov cmp lods cmp adc mov mov addr16 cwtl in sahf push sub inc add inc leave mov leave xchg push out out add lea in jmp pop mov pusha pop orb push rorw inc ljmp outsb pop lea shr out push adc sahf cmc movsb jno xor pop pop cmpsb (bad) sub fwait mov add pop and sti scas fdivrp stc insb mov cmp sti out inc mov pop add cmp pop fld in lods movsb (bad) mov rol (bad) sbb mov jp adc or into pop stos in rol negb fwait jecxz insl daa push add jp mov int3 sub inc jl pop adc dec pop hlt inc inc mov xchg push and push scas loope das aam repz sbb cld xchg fmuls cmp pop aam adc mov mov nop adc orl nop cwtl sub lahf fs pop dec inc stc mov outsb pusha mov jecxz stc mov sub dec mov stos cmc gs xor roll pop sti arpl (bad) pop xchg addr16 xor rcrb mov imull aas (bad) insb sahf push scas cmpl mov inc xor leave (bad) fnstsw push mov cmpsb popf push rcrl adc jae outsl inc inc mov jo mov xchg mov test mov jecxz xchg jne jmp add cld jno jbe lahf (bad) inc lea test sbb push lock mov xchg inc and mov cs std inc movsb mov adc or repz cmpsl mov xor jmp push cmp imul mov jp pop xchg push test les out pop dec xchg lock mov adc (bad) adc jmp xchg jmp insb pop push xlat add jo movsb jge pop fsubs lahf jmp jno in shrb int loope pop insb adc loope das mov mov in xor and sub lods lock xlat jp push dec xchg sub add mov lret in cmp mov fdivs xchg push push fs ja cmpsb jg push stos mov cli test and loopne outsb loope rcrl aaa hlt add scas sbb jbe push fdivl jae scas test loopne,pn mov aam sub jnp sti test (bad) ljmp and lret outsb scas adc lods (bad) pop dec in mov push out lock in fnstcw ss test std cli (bad) aam adc add fld sub cld call jl fmul icebp mov aaa sahf in cmp or sarl dec ljmp xor cwtl icebp stos or sub jmp repz jbe dec push push mov or and stc mov (bad) adc arpl in or hlt stos cmp push in std fisubr mov adc aam inc add push fwait adc setl sub leave cltd xor push pop pop pusha add pop ret inc popa in fstp mov cli into mov inc in cmpsb cmp push xor (bad) lock enter dec popf cwtl in (bad) pusha flds mov xor xor in sbb pop push lods mov lcall addb mov cmc addl leave push cli shll mov and cmp sub mov hlt dec daa mov cmp xlat sub pop int3 inc outsb sbb dec out out insl add sub push mov xchg mov xchg mov mov jno mov cmpsb int3 jo jnp in std lock (bad) std inc xchg xchg lea inc sbb jne inc jae out arpl lods cmp and mov lret push inc jnp dec aaa sub stos mov jns dec and sarb inc fcmovne outsb xor or pop and push mov jae mov loopne cli data16 add xchg imul xor mov pushf notb daa lahf and clc jecxz xchg jno inc sub fdivr mov fucomip jmp fstpt sub pop es fistp lds push push mov push in imul test repnz loop ds adc rcrl inc xchg dec mov cmc mov mov movb aam in jmp add mov add jl jmp jae movsb add adc (bad) lahf das add cwtl in ja cmp sub push xchg shlb dec popf push test mov pop (bad) push fistpll lmsw ret inc ja xchg pop cmp xchg (bad) imulb outsb out pop adcl outsl pop das mov pop in xor lods or jl not and flds xchg cltd xchg pop mov lret (bad) mov dec jns xchg movsl sbb push mov mov inc iret mov shr sbb cmp enter mov inc ja imul add dec stos je popf mov xchg das aas ficompl (bad) xchg lods and enter xchg rcr cld adc outsl (bad) mov iret sahf (bad) aas rcrb jl mov jle (bad) mov mov cmpl sbb imul mov lods pop or cmpsb in shl sub dec lahf rcr das pushf lcall jno icebp les pop fldcw ror inc std jmp mov xor sbb adc push push add sub mov loope cmp jmp (bad) shll jae dec je jg sbb icebp push adc ja hlt rcrl popa popa mov mov daa pop mov insb stos and inc adc mov out inc fdivs push xlat mov rorb (bad) scas bnd out xchg lds (bad) cmc pop dec push sub fistp call adcl orb out outsl mov xchg push mov repz std dec icebp iret inc andl sbb sti xchg xchg or je (bad) popa lock (bad) inc jne inc rep rcrl mov sub test imul mov add push iret xchg dec jbe mov flds add pop xchg js push mov test mov inc imul jp xor call mov and push lahf inc ds rcrl dec adc cmp cmp jmp lret adc fiadd testl push lods dec cli fwait dec jg add stc pop stc sti in cli adc adc adc (bad) aam jo stc ljmp into add sbb mov aad mov pop fs lea lea mov jbe (bad) out movb pop bound jbe xchg mov sbb dec test mov and popa loope fisubr fwait sub jae xlat or dec dec sbb inc mov fisttp cmc sti pop xor cmp in jp (bad) jne pop or xchg pop push xlat aam and xchg mov test out jecxz cmpsl mov adc lcall mov ljmp dec lods dec fsubrs or jecxz mov insl adc in dec cmp fsubp mov sbb rcrl rorb dec mov jbe push sub jl fsqrt sahf (bad) push add out int3 cmp jnp sub lods les iret aam add loop mov fcoml add push push test and push stc lret sub (bad) repnz jmp push repz int adc in imul dec int3 insb mov imul rolb jge lds stc jb mov lds addr16 xor pusha push imul ret dec dec inc or sbb stc and sahf sbb fistpl aam dec mov pop test imul push mov test rcrl aaa adc pop ja and adc loope lods sbb int3 out pop jb int3 ficom xorb dec andb loope test loop mov adc xchg insl imul in ret nopl pop push (bad) enter repnz adc sbb les push jmp inc adc popf push fidivr xchg std rorb mov mov insb mov fidivr adc nop scas aam mov mov mov je jmp jl jne mov mov dec pop (bad) in jmp add adc clc xchg ds adc pop out push add push add sbb inc push jne repz mov mov psllw xor and movsl push adc fidivl insb movb push sub insl jo push cmp add sub (bad) mov scas mov sbb xor jg jg xor push or (bad) movl ret repz popf or cmp out ret jne xor push out ljmp outsl bound (bad) push mov fwait lret mov prefetchwt1 jle lds call cmp sub ljmp test js cmp sub mov lock test pop ret jo xchg sub jns enter test int push push lods mov (bad) cmp xlat adc (bad) divl add shll sub lret lods jl cmp mov mov repnz cmc inc push mov or push cmp xchg xor adc sub pop aas lahf lods jmp (bad) add fwait aaa mov ja jbe or (bad) aad pop scas call pop mov mov or mov fs pop in sti out add ss sbb inc add lods xor stos (bad) push repnz nop fsubrs cmp pop les test daa cmp roll std lds pop xchg add or sti add fwait rorl mov sbb mov fcoml cltd out dec mov scas shr mov ljmp cmpl xor jecxz in jo cmovnp lds bound xorl cmpsl push mov xlat ret lret shll mov pop fs pop push test aaa out cmpsl mov fbld inc movsb and stos in xchg xchg (bad) push test jecxz in test lds js outsl frstor outsb push cmp ds xlat inc jp mov mov sbb test lods fstps xchg pop jmp cld and cs les pusha xor add divl or ljmp push jne fistp jns call ja push adc or xchg gs movq mov mov outsl jmp or dec (bad) out aaa (bad) jo xchg mov or (bad) (bad) push loopne jle nop aad dec into rcrb (bad) (bad) int3 lods aad mov repnz dec stos cmpsl imul notb mov sarb jns cmc aas fistl mov push outsb xor or orb cmp rcrl adc dec outsl mov xchg es push adc mov and push call sbb int mov fnstsw loopne add fisttpll in mov add int3 mov mov inc orl dec and inc cmp roll mov inc mov add mov popa add xchg mov mov lret dec mov in cmp (bad) jge ja mov inc jle lea dec sub dec mov (bad) shrb inc das imul int3 mov test or inc cmpsl sbb and cmp or mov data16 sub lcall scas int3 aad popf test mov lds cwtl jo faddl sbb mov sub fdivs push push inc scas outsl clc bound xchg (bad) push test ret push fimull pop jmp xchg adc push pop lds icebp jnp mull push xor out rolb out push xor insb push push push cli xor fstps mov push mov xchg xchg outsl popa or sbb popa fldl jne into enter mov or mov icebp int test push iret jecxz dec adc fisttpll mov cs jno pop pop cltd and pop jns int3 pop lcall fsubrs iret clc pop inc ret jno push inc hlt jg mov add pop bnd push mov inc push push mov into rorl adc inc mov lahf imul add loope push cmpl push icebp imul pop mov pop xor fcmovbe mov lea pushf mov into cmc out jnp sub lods jmp ret xchg andb scas jno add pushf and push sub cs dec stc movsb dec mov imul cmp jns lea lret loopne mov adc loopne out popf int sarb daa mov jge cmp pop sbb outsb and call xchg mov fwait cmp int3 or mov cmpsb lods mov cmpsl rcll mov mov and gs inc in pop push sbb add sbb mov jae or mov push fimull xor pop jmp xchg test repnz or dec dec mov inc xchg pop add sahf loope inc sbb lcall iret dec fcompl cmp cmpsl scas or (bad) xchg jmp jmp xchg jns pushf negb fidiv xchg pop push das mov lods pop jne adc adc or jmp cmpsb sub push or sub test jl cmp lods xchg xchg mov insb cmp je incl aas fcomps sub ja cmp cmp les or xchg cmc mull xchg jae xchg sbb push stos clc cld push fwait lret loopne and sbb test sbb insl test mov dec add pop js pop (bad) or in andl arpl les aam ja jmp stos pop cmp jmp add dec std jmp js outsl cmpsb push iret mull xchg jno pushf adc xor xor push fmul mov lods pop test lret dec (bad) stos push add push cmc jp sub or dec in fwait shr cmp dec imul cmc mov add pop xor fwait sbb repz out mov lods jl add outsl ret ljmp jbe cwtl out or data16 jg stos daa lds xor movsl add mov lret xor and pop out xor in pop mov ja cmc xor and add sbb jae,pt pop inc and loop scas movsl or push cmp pop test inc movsl insb mov adc sbb (bad) enter cmp mov in inc jmp jle adcl out sbb or cld test sbb xor jge pop mov icebp push bound fwait data16 xor pop (bad) (bad) rcrb adc stos xchg mov fidivr pop push sub rcll mov out mov fs je xchg jecxz into jp cmp adc sarb popa and in mov das fcom sbb jae jge or pushl sub stc out lods fdiv mov stos orl adc jnp fist lea (bad) sbb (bad) out outsl sahf hlt push add lcall arpl mov and sbb pop repnz jne (bad) in mov cld mov (bad) scas or push inc lahf aas mov fisttpll mov repnz stc inc add rcll pop xorb sti insl mov in jge sbb lea enter int and sub loope adc call test push (bad) push lods scas iret ret push mov mov adc inc mov sbb fimul lods or xchg push jo mov add rclb (bad) mov insl inc or mov xchg adcl jno xor pushf sub js mov adc shll enter dec cmpsl jae inc cmp jg loope adc lock pop or inc add ret ljmp mov sbbl icebp mov addr16 imull mov sbb jo or adc into shrb (bad) (bad) push addl out add out jle int3 outsb push test xchg ret stos push mov dec pop out lods sahf xchg mov push scas neg and or push add pop inc lods loopne inc xchg pop cmc xchg pop inc cwtl aad (bad) add add xchg mov add xor sbb test cmovp lea pop (bad) call xchg or inc mov dec out xchg cmp rcll nop push mov or cmp mov repnz mov cmp mov pushf push shrl lahf ljmp popf push pop inc sub and jae sub jno xchg cwtl sbb (bad) gs push int lahf dec fsubrl push dec mov test xchg das sbb rcrb cmp sti sbb and or call ja and (bad) jl mov fnstenv cmc mov (bad) xor inc aaa adc mov imul iret dec cwtl out sqrtps in out (bad) mov lods (bad) cli mov mov mov sbb sbb adc repz (bad) pop push scas stos dec imul pushf stos mov jb (bad) loope mov jb jne fwait test cmp mov pop popa (bad) jb (bad) aaa xor inc xchg lods cmp mov sti or test inc pusha icebp pop mov pop mov push mov jecxz inc mov out ffree icebp lret lock verr in push jb or cmp cli out je stos xchg adc mov imul es dec cmpsb es (bad) dec sbbl enter pop and vmovd popa inc dec loopne cmp dec adc mov jecxz pop mov add push mov loope jl pop mov rep std out jecxz mov (bad) mov out mov sub add call (bad) dec outsl mov in fidiv aaa inc jmp pop pushf ljmp jbe mov mov loopne sub pushf pusha and pop cmp dec mov inc out imul mov leave ja sub jne sbb inc (bad) repnz inc subb test ja cwtl cld iret xchg (bad) ljmp test sub pop loopne mov rorb cmp stos or sahf out outsl int and sbb imul fnstsw (bad) sbb cli pop and xchg (bad) and ret mov insl movb jne inc xchg fnstcw adc and je xchg or jno jnp xor adc ljmp push hlt ret mov xor sbb ficompl xor popf cmp sub dec (bad) push scas cld cs fmuls enter and pop xor dec lods imul cld push in hlt cmp scas sub jle mov stc xchg cmp test aas xchg popa aas mov mov jge or adc aad mov aas xor pop pop xor push adc jns dec dec subb dec xchg call je pop push jb or and imul rclb cs scas call dec add pop or add jge aad push sbb adc roll sbb cld mov roll fidivrl popa test xor cmp sub push js adc xchg sbb adc add imul push pop cmpsb inc mov rcrb out pop aam dec scas mov inc cld aad ds imul in cwtl push (bad) in mov add shlb cwtl adc sbb xchg imul sub sahf xchg (bad) clc ljmp out lea negl stos jae cmp movsbl dec aas sbb add dec out sbb test dec cwtl xchg and std pop mov out enter fwait ja cmpsb in push imul cmpsb dec push lahf fsubrs repnz pop xor jle inc sbb dec into std xchg add sbb add (bad) hlt mov xchg ror fild hlt bound push les cwtl sahf jp scas cmc xor sarl lahf add pop into jo adc dec jmp sbb lea cmp andb aad hlt inc push or nop in push mov sbb jge mov xor (bad) mov mov repz lea mov pop clc pushl pop adc jmp jp pop lret cmc mov pop (bad) lock lods lret test cmp push aas mov sbb ret jbe,pt and and sub add aam gs jg stos pop and movsl push ds in mov call cmp push ret arpl lods scas jb dec jnp jae fwait aad mov push adc add inc inc inc mov sub sub shll gs push jg jae stos dec pushf inc pop xor test je sbb lahf dec shrb mov cld jo jge or mov jns add lret pop cltd rclb mov pop subb push jp scas cmc inc frstor adc push push xchg jp mov push lods adc inc xchg js ss push mov pop pop mov xchg fdivl mov push out adc subb jns iret xchg (bad) out hlt loop insb fsubr add test (bad) add in bsf repnz pop push mov sahf jnp xor jae call addr16 mov inc pop aad aad xchg icebp pop sbb mov xchg sub fnsave scas or divb mov dec fistpll scas subl iret sbb cmp enter and fbld jp and and jg clc out in leave sbbl xor sbb addb (bad) js xchg cwtl jp adc push (bad) aaa sbb inc dec cld jecxz push dec dec adc nop and les lahf sub icebp add orl movsl mov addr16 roll mov imul and or xor (bad) fisttp mov sbb stc pop test rcrl pop xorl or jle mov pushf sub cwtl int3 mov dec and les dec pop fwait push loope aas adc or js xor in pop addr16 adc std xchg scas push dec mov xchg loop lret ds decl mov cltd clc in xor iret jl js aas sub fnsave movsb and lods jae lea mov addl in pop cmp ret xor popf cli cmp add or pushf loop mov or pop jno loope imul jo inc jecxz add es push loopne rcr iret loopne aas add scas and add ss dec mov or ds test xchg das (bad) sub ss test cmpl cmp fcmovne movsb jl cli jmp test or jmp push jecxz inc ja cltd push cmpsb add push aaa mov mov cmp sub sbb xor inc xchg pop loope out mov in fldcw adc cs pop sbb int3 cmpsb pop sub dec jno jp pop sub imul cs jns sti jb cmc add pushf lods test jg (bad) test jnp jle dec sbb rcll aad add mov cmp push pop cs clc dec add ret xchg lea pop popa sub pop pop scas jbe dec or xor pop push lret (bad) mov lock mov jl (bad) jnp push push add xor in sbb (bad) mov stc pusha cmp jno adc mov add js pusha dec cltd or adc outsl push xor jle sbb bswap (bad) pop aaa mov jmp imul cmp jbe (bad) jnp mov mov mov insb (bad) jg sahf andb in xor inc scas mov (bad) xlat xor lret pop (bad) xor xor iret xor mov mov xchg mov sahf add sub out sbb (bad) mov fistpll pusha or mov xchg mov cli sti add xchg aad inc das sub dec in enter insl xor je or xor mov jp ret loope mov (bad) out pop sbb cmp test jo jb jnp mov js inc lcall inc (bad) cmpsb fnstenv jo jmp adc pop daa jmp mov sub push and outsl dec mov (bad) push push cmp cld push xchg add jmp in jl fldenv mov sahf fsubl aad push (bad) push fcompl pushf jle hlt repnz and and push mov out fnstcw cmp subb fs pop cmp ljmp cmpsl fcomps fistp mov addr16 addr16 mov stc (bad) std mov inc cmp cmp inc adc jecxz jnp inc ret jbe ss dec mov aas mov mov out or icebp lret jl push adc cli dec xchg (bad) fxch ss mov out lahf dec dec call dec (bad) repz xchg add std or data16 jbe pop jne cs mov (bad) pop je sub dec push out sbb mov cld add loop inc mov add inc mov xchg stos test cmpsb rorl xor mov ljmp shrl pop imul (bad) in cmpsl xchg cwtl fcoml cs mov aad and or xor adc mov xchg mov mov cs call leave gs in mov sub out inc mov aad insb mov mov lods cwtl enter cs mov mov rolb inc add cld xchg fistp enter add mov or sbb aaa or scas cmp aas out adc loope cli dec jmp lods icebp push adc cltd shr daa add sbb neg (bad) and pop mov adc inc (bad) cmpl and dec in mov notl cmpsl mov jle sbb push cltd xorl pop out push push test adc loop fidivrl sbb pop ds test sub sub push test xor test sub xchg lods mov adc sub jl mov subl lret and mov add mov push adc iret test leave cmpsb jno xlat and fwait dec push shll stc loopne xchg out adc lret pop ss arpl mov cli xorl fsub jbe push lret sbbl cs stc cmp bound out jne insb pusha mov xchg dec jle dec jle mov mov push xchg pop cmp fmuls roll sbb in push dec jmp in mov pop or dec in push sbb iret shlb or push dec sbb imul dec mov outsb fsubr (bad) xor out clc (bad) lds pop sarl pop push cs push icebp add cmpsb cmp hlt mov pop dec adc jno jl scas cmpsb xchg add sub and (bad) pop jae out sarb mov pushf testb popa stos mov and aaa cwtl push xchg mov enter std jl push push push mov and pop fucomp mov lret rolb push mov std push ds add and inc loopne pop out xchg inc in push mov loope int3 pop out sahf int sub fwait mov cmp xchg bound jae (bad) push mov ljmp push aad dec movsb ss cmp mov fwait push add xor cmp mov fstl xor sbbb sti jg mov into cmp gs out in xor sub test daa mov or and jg stos js push mov ficomp xor into lds loop inc imul cs jle push nop add stos cltd add gs add adc mov or cmpsb xchg jbe sbb mov movsl (bad) out fsubs xchg sbb add aas subb cmc sbb sahf cmp fcmovb ret movsb and sbbl gs imul fwait daa xor (bad) sbb nop data16 cld pop rclb cwtl push pop inc int3 leave push hlt in sbb jg sbb or fs jmp iret (bad) cltd sub mov mov inc xor push jmp mov adc ret pminub (bad) cmp inc sahf push outsl (bad) shll popf orb (bad) jp mov add pushf or xor mov xorl inc hlt sbb popa or push negb jle aaa cs and pusha pop aaa mov lret unpckhps aaa push xchg movsb sbbb jnp int3 test jmp aad stos pop push scas adc and jne daa imul js enter adc test push hlt inc jge mov stos fildl icebp push push lods lret mov rorb or mov test dec sbb dec std adc push clc outsl test enter cmp sbb xor pmuludq dec pop push add sahf (bad) gs adc pusha cmp (bad) lcall xor iret loop push jmp mov add notb pop fimull lahf push and call jnp (bad) vrcpss mov mov cmc and (bad) mov xlat in leave fisubl (bad) cmc popa aas movsb lea lods add sub add mov enter jmp aaa lds xchg jae mov inc push outsl sub xor push mov leave add push js cld (bad) (bad) mov lea movsl pop xchg pop xor xorl cs and mov mov nop insl xchg outsb and xchg enter iret dec cmp mov cmp popf inc aas jne mov int3 outsl popa dec out dec push jp jl adc mov push lock gs pop pop mov mov cmp jp mov inc (bad) dec adc leave cs and xor jae in xor (bad) je mov and push lods xchg add sarl mov out adc jge mov push jge les imul push es outsl pop mov jp pop cmp add sub lcall adc and jno addl mov cmpsl adc cmp aaa aaa inc xchg add xor ss xor bound sbb cmp push pushf push dec mov and adc jmp xor xchg push in outsb into mov ja icebp cmp cmp sub cli fcoml cld rcl fidivr mov xchg jne sarb sub pop jge int sbb and clc faddl mov cmpsl jb mov xchg std imul cmp loopne nop push dec subb ss insl push repz pop test mov push pop iret lahf xchg (bad) in adc adc inc inc sub jnp mov (bad) jae add jb cmp cmp faddl push fldenv mov sub stos xor pop fdivs pop push and mov mov and sahf insl xor cs icebp movsb lds jp fsub push fs add jp movaps mov pop loopne push push popa push push jmp les inc dec movsl (bad) jmp loop in mov lret repnz stos arpl out adc arpl mulb dec cmpsl mov jb xor (bad) call mov es sti and cli dec (bad) mov jno daa mov (bad) js call mov adc lahf mov mov (bad) cmp ficompl mov mov cltd aam and js xchg and test sete into jl sar int3 xchg fcomps mov and jne (bad) xor in and adc movsb loopne cmpsl loope jge fistpl arpl sbb rcl sub xchg push add xchg sub fwait xchg es sar hlt mov in mov das cli mov aaa xchg push sub rorl cmp adc jnp (bad) mov jg inc push rolb mov or fldt es fsubl mov pop add sbb adc cmp xchg mov imul ret xor outsl (bad) fadd xchg aaa xchg (bad) clc and or je sbb (bad) sti call mov push idivb mov daa and cmp insb mov pop adc dec cmp int test sbb (bad) test (bad) push xchg add sbbb aas xor cmp sti push pop sub clc imul stos lods leave outsb test notb mov jbe cli jp mov mov in leave movups push xchg sbb inc pop loop leave lcall dec test or pop aad scas aaa and dec pop and push jge sub push mov cs scas mov cmpl cmp outsb add pusha xor cmp xchg ret xchg addr16 arpl jo fmul in add and xchg (bad) std inc mov inc fwait push (bad) sub mov dec sub aad sbb dec imul adc mov sbb push cmc and jge inc ljmp gs jmp data16 pop pop inc enter add lcall into cli add mov xor out movsb inc pop cmp fwait outsb outsb push pop int (bad) xchg mov ss pop lds ss cmc jae popf and aaa xchg fmuls jl,pn inc or add adc mov aas pop jns incb outsb push movsb (bad) cmp sbb mov mov push ss cmp lock mov xchg sbb jnp scas mov jp push repnz push cs in (bad) mov lcall bnd lods push sarb pop outsb into dec aam out dec stos sbbb iret stc scas add push jg add test push mov and (bad) lret adc cltd cmp adc inc xchg addr16 push (bad) jno mov jle sbb xlat jae fdivs push xor sbb push fcompp out hlt clc add xor rclb sti mov pop mov mov repnz jo std fisttpl iret (bad) ror rclb es mov pop pop js sbb in mov cmc hlt aad outsl test sub jecxz cmp mov notl mov push jno out out jb pop add ss mov lahf data16 out mov mov lahf jns mov cmp xlat loopne inc out pop cli insb imul into rorl nop jno lods test cmpsl pop mov sbb aad sbb es shl dec inc adc into repz dec shr xchg cmp adc lea jno loopne xchg in or push xor cmc loop sbb insl addb cltd out pop js pop cmp cmp jb sub hlt imul sbb xor mov gs ret lret pop jl jnp lock mov xor cltd call and cmp or stc lock xchg fdivs jo xchg pop aam (bad) jo mov push mov (bad) inc (bad) scas jg dec xchg bts rcrl cmp mov xchg fucomip cwtl insl sti cmp sarl lea rol pop call jno jae xor js push mov je pop fwait bound lret and mov inc mov mov xor or inc xor jne pop fisttp mov lret rcrl cld mov cmp push aas sbb andb jmp pop xchg clc fcmovbe insb jge xor sbb mov cmp jmp out mov and jbe cmp pushf lret mov mov mov into sti mov out xor xor or stos dec call cmp inc and cmpsl mov (bad) into jle aas add mov mov repz or daa jmp es jl std mov xchg incb push inc dec gs (bad) push aas or sahf xchg (bad) inc imul xchg test or or dec jmp insl jp es mov lock call lret pop js jmp add ds in rcrl cli push adc pusha pusha leave int das mov popf iret faddl push arpl xchg pop sbb adc les rorl lret xor xor repz push sub sbb stc jp loop push fcmovnbe or inc imul xchg (bad) cmp sbb cmp push sti sub push pop arpl cmp inc adc and pop sub popf sub inc mov cmp ds mov mov aam lock push cmpsl arpl push lret cmp mov push mov lret jns gs (bad) movsl mov mov xchg dec push orl cmp std cltd mov and loop jo loopne (bad) repz nop xchg (bad) iret pop pop dec sbb sbb or sbb dec cmp ret mov jge adc addl cmp (bad) mov jl movsb les (bad) mov dec sub fisttpll push dec imulw jp jo jne fldcw lds data16 in add arpl test (bad) (bad) out mov lock out add sub movsl inc mov pusha jmp repnz movsl movsl mov out mov jne negb dec xchg adc aam mov adc push inc cld or sbb adc movsl push xchg int inc sbb test jmp fbstp arpl pop fs pop mov iret mov inc (bad) cmpsl add mov sbb and or rcrl cmp push and (bad) outsl jge lret push movsb adc (bad) jnp fld1 sbb fadds dec dec dec popf test jecxz inc gs ret mov inc subl inc xor cli push test cmp addr16 rcrb xorl fsubs sahf fcmovb inc add push lock out imul mov sbb mov sbb mov out cs jbe clc lods jb rcrb adc xchg sub xor xor imul loop sbb gs adc rol into mov mov cmpsb sahf sti inc in dec popf xchg xchg inc pop inc xchg call sbb stos movsb jge adc (bad) lret out push lds xlat fcompl stos arpl stos and mov stos testl mov dec repz enter sti fucomi xchg inc mov leave leave mov lds jp and sbb xchg and dec fsubrl and sub loope cmpsb cld enter (bad) into inc insb and mov jo mov jge into stos dec push inc ja mov inc xor dec add jae fidivrl jb push lahf xor cmc or mov cmp xor sbb lds mov sub das pop cs inc push inc or bound nop imul or insl xchg in mov ss pushl mov or add dec push jbe cmp out dec les sbb cmpsb (bad) mov sbb es or or dec xor rcl outsl imul movsb mov (bad) stos lcall pop fildl popf xchg sbb cli push adc bound inc in and dec loop mov mov lods aaa pop adc push repnz test jp (bad) repnz insb mov pop clc xor sbb mov xor pop jo or dec lock pop mov lcall testb cmp dec inc (bad) loop mov (bad) xor xor roll fistpll add push sub out inc (bad) dec jmp mov pop pop test (bad) lret push or push sub push outsb pushf loop movsb mov xchg xchg out xor sub sbb test pushf fmuls or jg sub ja jecxz movsb sbb jmp popa lods mov inc jle (bad) sbb das (bad) sub clc or jge aas cmp push (bad) shrl xor xchg dec test pop cwtl cli ja xchg mov or mov iret jg push fistl adc test or ret aas add mov inc pop xchg movsl mov scas dec sub subl xchg jo or sar cmc out xchg lcall dec xchg or mull pop outsb push lock fmul sbb stc jb add lock jo out ljmp pop enter cmp jns mov dec mov rorl aam (bad) jo cmp cs mov imul bound bound mov rorb add pop out out dec cmp ljmp sub nop aam cmp push orl fildl xlat cmp test shll mov mov shll xchg inc sbb lods or push (bad) cs jb add pushf icebp mov xor enter aas iret stc or jecxz dec (bad) add inc (bad) jnp rcll or jbe pushf jns das fmuls sub fxch mov adc scas adc pop (bad) cmp push cmp mov xor insl cmp lahf sbb jno (bad) sub insb sti dec out pop es ret and (bad) popf mov mov inc lock xor mov neg pop dec cmpsl push add bound cmpsb pop push or insb lock vpaddusw js xchg sqrtps sti outsb imul imul lods and daa nop sbb jmp mov mov xchg test ror pushf test ds dec lds daa gs test hlt aam xlat jmp pusha jne stos pop lahf xchg mov paddb (bad) lds jle (bad) inc pusha mov mov adc cli dec out push sbb and insl xchg jb push mov mov mov or and insb jmp outsb cmp hlt mov or xchg lods dec xchg sub xchg int xchg ja iret mov jge bnd jle lret xchg cltd fidivl ds lock fildll aam repz out daa xchg mov mov pushf push insl xchg pop test mov or and or mov outsl xor lods sbbl in pop fdivl mov cmpsb pop mov cmp fistl push xchg ret push mov test pop out fmull pop jge add add movsl push jbe or fisubrl in sahf es dec ds movb in jp lods xchg mov rcrb push imulb mov xchg nop mov out call adc add lahf loopne dec jecxz (bad) jne repnz (bad) mov lret jbe rcl ret sub adc xor dec jns xor cmc jae cld cmp mov (bad) fs cwtl inc sub or push and and ret push (bad) dec loope lea aam stos hlt es mov in dec pop or dec (bad) jae arpl andb mov orl pop jl jne cwtl and ret xor lret push repnz popa xor fisttpl adc cltd jno stc add xchg or push mov xchg adc sbb xor adc leave or sub idiv dec insb aam jg dec cli jecxz out mov test faddl push fdivrp gs outsl imulb inc push cmp or pcmpgtw sbb aam push adc xlat popf (bad) and push ret call (bad) pop add jle data16 insb push repnz inc sbb mov loope pop jp aas and int adc cmpsl push inc mov xchg callw das pop icebp and test lock cmpl xchg push lea cmpsb stos loopne xor and jecxz daa adc lret decb enter ljmp in or dec test out cmp jmp insl jle dec or adc mov jne pop sub inc ds lahf lods jbe mov rcll adc int xchg jp push cmp test dec gs pop cs ret dec pop es jg clc dec push shrl xchg (bad) (bad) jle movb sub mov stos mov jl loop insl mov dec lock push xchg cld cmpb addr16 testl popa out das add fidivr inc mov xor fisubrl jne int3 cs and inc lds mov scas dec sahf insl dec call imul sbb fsubrs aas inc sub data16 mov sbb pop (bad) add gs mov (bad) sub shlb cmp or insb mov sbb adc rcll push aad mov scas (bad) and mov mov scas mov lods push push in (bad) or ja insl in in (bad) sbb cmpsl jbe adc xchg ficoml js push mov js sub fwait test adc ret and aam xchg jnp mov jmp mov mov aad push hlt jbe dec inc push xchg jbe pop mul js and jns inc call sahf sub sub iret push pushl sub push or bound jns push dec mov jae pushf cmp test sub and insl and pop fdivl rol imul (bad) jb jae xor (bad) in sub jle lods xchg loopne mov sbb adc push push test jae jno xor imul ds loope nop fstl jbe jno xchg std bound lods push shll or inc mov cmp push pop pop ds and push aas and jecxz push clc test data16 add cld adcl aaa adc and adc dec dec pop test pop cmp mov xchg xor ret dec scas jl pop push cmp sbb jns and pop aam ret ljmp imul sbb sarl lret fs sub (bad) ss (bad) cmp pop out and fisttpl out stc pop test jmp pop xchg mov arpl insl rclb or test mov mov cmp pop ret inc jb pushf adc cltd (bad) xor add (bad) sub lods xchg test cmp and xchg dec xor pop inc nop fidivr and inc sub (bad) xor dec jmp fisttpl mov cmp arpl dec ret sbb fisub roll sbb movsb mov lret push fidivr fisttp icebp sub jp dec jb test push sub sub repz cmpsb mov xchg aas pop mov mov jne lods mov ror mov push outsl sub aas lahf mov jo test (bad) (bad) mov dec scas and repz dec dec (bad) loop insl in fldl2t xchg mov sub bnd scas iret or test rcl cmp movsb popl inc sti push (bad) sbb push sbb icebp loopne cmpsl pop movsl out cwtl push outsl lods mov jmp aas push (bad) leave sbb std cmp push lea add jbe mov jnp or sub jp out insl push mov fistp jle enter flds jg in sbb xchg mov sar pop (bad) outsb stos sub push mov fsubrl adc mov cmp xor sub lock dec addr16 mov cmc pop (bad) rorb scas or jl scas push rcr test icebp cs je (bad) ljmp mov cmp jg repz enter or push mov cmpsb (bad) std adc xchg fistp hlt inc call mov test adc scas push arpl aas insb mov lcall cmpl (bad) adc sbb fwait xor shrb pusha sub inc ret aaa jne (bad) clc mov or pop mov test test (bad) sti (bad) mov fstpl push xchg push pop mov mov push int3 ret pop sub fs (bad) ret push pop enter mov cmp lock bound dec xchg mov cmpps pop jecxz fcmovbe clc hlt movsl cltd sbb mov mov (bad) xlat out mov das inc sub pushw pushf test (bad) imul pop cli ret outsb xor cmpsb cmpl mov aam mov lock (bad) mov jp test cmp jns neg lea js in into or pop xor lcall jg mov jb (bad) adc xor dec insb mov xchg dec int cmp dec xchg mov divb data16 cltd test dec xor (bad) push cmpsb xor inc ret fimull pop pop scas xor rsqrtps inc mov hlt sbb sbb or xlat stos pop addr16 add (bad) pop (bad) mov imull fst or xchg xchg js (bad) repz adc inc dec push or mov faddl rcrl and push pusha leave xor jae std mov rorb je mov arpl inc push lds sub sahf mov test jl mov imul into stc and add add xchg adc repz stos xor clc (bad) cmp enter add sbb mov lret jo adc (bad) in or fmuls jp adc mov and xor in sbb mov cmp push outsb add inc frstor aas mov sub add ja adc xchg je incb lods call mov cmp inc in leave lds adc out cmp fldcw enter xchg std push ljmp jg dec in push cmp lds and adc pushf shlb or xor push xor rcrl adc add out xlat fcomp cmc loop sbb imul std mov adc aaa out pop dec mov mov dec mov dec pop jne cmc push aad in movsl jle scas fisub icebp inc fisttp out sub ret mov pop push cmpsl aas jg adc std bound (bad) mov jmp lret sahf xor data16 test rcrl (bad) mov fadd pop mov mov add push or xchg dec lret jg sbb pop jb pop jo fidiv bound or aaa mov outsl dec mov (bad) testl mov push out scas out sti cmp sub ljmp push out inc loope mov mov gs pop push js pusha daa insb rcrl add push jecxz daa ss xchg mov mov mov movsl and clc imul mov lods xor inc lds xchg ja (bad) stos add jl fisttpll stos adc xor xchg or push inc into fcomp out mov and into sub pop xchg push xchg and mov mov sti jns icebp push cwtl out js insb jo in jb int push or cmp push int ds arpl xchg (bad) inc inc outsl imulb loop fcoml icebp testb aaa jp inc sub (bad) repz mov ds fwait rorb xchg rcrb nop lahf cmp xor xchg cmp and fldenv xchg push mov bound call add icebp jecxz xchg pop dec xor or mov fwait add xor cmp jno push bound sbb fidivl mov insb repz shll arpl jge jbe inc inc or inc mov (bad) das test iret add or mov adc movsb mov mov and ret pop movsl jns pop out push popf xchg xor or icebp insb jp mov or pop adc test adcl test sub jns movsb or inc inc jo ss std (bad) lret dec xchg xchg lods scas dec push rcrb xorl mov loop xor mov mov sahf cmp dec movsb lcall sbb pusha cmpsl aam xchg jmp clc cltd fisttpll mov sbb outsb ficompl sub add mov sbb or pop les nop fwait es sarl push les aaa add and inc pop iret out jl pop bound movsb cmp add sahf add inc push aaa jns or pop decl jb test (bad) repz js or mov lret pop lds repnz fxch pop je orl movsl jo out and fsubr add and xor cmp es test mov jnp lea mov mov test test adc mov test or mov aad ljmp and dec push pushf out push not sti cmp jb cwtl or adc jne fsubrs (bad) add mov adc xlat sbbb jmp xchg scas dec jge in xchg ret xlat dec (bad) test out bnd dec test outsb and cmp cmp mov xchg cmp inc jno out pop push in sub or xor enter std jp push mov cs push xor jnp dec or ret xor inc call sbbl mov ja loopne aaa xorl add or xor mov sbb xor jo jl xchg cltd or lret adc pusha das addl and xchg icebp mov add inc std (bad) xchg dec sub das sbb dec addr16 int movsb mov mov lock cmp iret faddl inc negb inc sahf mulb xchg inc sbb jp push add cld push jg xchg rorl inc sahf lds push int sbb (bad) arpl dec cli push sbb insl clc inc add xorl scas fwait and xor cs (bad) or repnz lds add push cltd mov movsb test mov add fdivp pop or negb lret lods jmp icebp inc pusha jne push out jns andl fidivrl mov or add dec icebp mov xchg shlb fildl cli push stc int pop leave xchg pop out pop or mov inc adc lods sbb dec xchg and dec lea dec ret sahf dec icebp repnz jne mov sbb or fidivl mov pop and pushf mov ljmp lds js movsb mov mov cmp fcmovnbe sub push dec cmpsl adc jno mov push mov pop (bad) cmp popa fsts fisttpll scas mov adc into loop add fildll and aaa dec xchg xchg data16 pop push clc insb cmpsl js inc aam cli daa lahf lcall hlt insb out scas es (bad) jno add pop cmp iret stos enter out (bad) fwait inc mov mov cmp pop sahf dec inc in outsb push and mov cmp ja cmp das add dec cmp (bad) insb mov scas sbb stos xlat xor nop pop sub inc lds clc jnp dec add stos (bad) icebp inc clc movsl iret cmc cltd xchg fldenv xchg pop pop sti jne movsb dec clc loop push and mov loope mov push xor sub subl adc xchg test rorb lock pop add mov pop adc dec pop inc sub aaa dec ret icebp mov in repnz pop xchg push mov push imul stc (bad) fwait test in mov lods xchg mov mov or pop mov sub (bad) loopne pop push hlt dec push popf add xchg push pop sahf push dec stc out add test mov xor lock pushf in jg pop test insb imul xchg imul pop dec fldt or ljmp sub into cmp pop mov stos test sbb push mov je sub and mov inc cltd or mov popf scas mov nop rorb cmp dec cwtl int imul js jne js out cmc negb mov pop outsb fstl xchg loope bound js mov and (bad) out rcl ret es push mov mov or xor pop xor adc cmp and mov outsb out mov call sbb xorl jp stc push jnp cmp xchg mov aad sub inc adc push xor xor adc addr16 sub add dec popf jo in xor sbb xor xor repz xor sub dec test xor movsb sbb jbe daa aad push jb or pop jb xor adc out fidivr stos mov jo lock inc test imul pushf push jle imul and test sub leave mov mov jo pop cltd cltd add int ret xchg adc insb popf xchg ja lds jecxz push iret mov and pop pop mov cmpsl mov subb iret ss lds fdivr cmpsl mov icebp ss push cmp xor mov xchg lds arpl dec inc sti aas or or xlat sub inc es lods xlat adc rcrl call mov push dec xchg jl clc cmp cmp sbb out ja add in loope mov (bad) xor cmpsl jb call ret sbb jb lock imull jmp cmp sbb (bad) vmovdqu sub push mov xchg cltd cli das inc add cli clc jg in sub xchg pop lahf adc jno push scas daa sbb adc mov dec lods xchg and lahf mov ret xchg push fstps in jne repz mov dec mov sbb add ret sub stos loopne fsubrl mov test out outsb or adc inc xchg mov add jg xchg cld cmp insl lock push loop,pt or pop fcmove xchg pop and dec sahf mov insl adc lds lods lahf clc jo pop (bad) push pushf iret sbb hlt xchg push pop addr16 stc sti sub insb bound test mov pusha int3 or xchg mov or cmp push jns mov pop pop push rcr rclb jmp xor dec push iret inc cmp in xlat clc inc sbb lcall gs pop push cltd xchg test cmpsb rcll popa pop pop or clc push addl mov ret sub lds dec or imul fwait enter sub mov popf mov jle cmp lds adc push adc repz push adc cmp push (bad) jg or rcrb xor jp pop stc and dec and mov push lret aas sbb push das mov rcr xchg test sub xorl pop hlt fldl jle fadd lock push xchg mov sbb das sub pop push out mov (bad) sti (bad) out push or or cli leave xchg mov pop dec pop in aam shll jl cmp mov aas sbb addr16 leave fnstenv jge jb and jmp and test xchg popf aam daa rcl mov mov lcall into movsl inc test push sbb stos xchg push xlat mov inc jmp jns cltd bound cmp jne addr16 leave mov jle sahf push aas push cld or xchg xor cmc mov and sbb inc repnz adc insb fnstcw sub ljmp mov data16 dec or insl jb sub rcrl add dec mov dec push or mov xor sub mov scas cs ja mov push loopne arpl xchg lea mov sub arpl mov fcmovnb and (bad) jno divl sti pop mov sahf scas insb cmp std jno ljmp xchg stos int ficom cmpsb jl (bad) dec push adc push or mov sub cmp outsb shrl nop dec xchg lret not adc stos sete push loope test rclb lret (bad) aaa adc ja mov leave aas mov (bad) stc mov stos out pop mov rclb out cli test cltd fsub jnp jns or inc xor cmpsl int3 or cmpsl lcall push lea lds sub hlt cs fnstsw dec dec and mov (bad) cmp push or mov adc add xchg gs ret (bad) ss xor push xor popa loope stc mov mov shlb fwait push cmc or xor (bad) xor cwtl sbb cli jb push lret dec dec jnp add mov fwait aaa inc insl push shrl add out outsl sbb and cmpsb add xor cld jge js mov das adc in push xchg cli pop sbb mov push dec mov mov gs out dec out fldcw stos inc pop add jno mov jl push stos das in jmp (bad) dec jno jnp dec pop js cmp ror sub xor arpl dec pop jae sub daa pop xchg mov stc cmp dec adc inc mov out pusha xchg cmp adc push sbb mov je test out clc fadd jl inc loopne mov repnz ja mov loopne out (bad) jo repnz xchg or andl (bad) push dec loop sbb stos popf mov mov xorb enter jl stos fdivl lods and cmpsl add add out sbb sub jo sbb xor xchg iret cmpsb dec sbb scas xor pop pop in pop in mov pushf or pop xor (bad) mov fs mull ret stc mov fildl dec pusha add addr16 outsb push xchg inc sbb or aaa lods adc fisttp mov mov adc lds mov das ljmp aam std adc pop add push cltd push aas daa addr16 popf call ret lock push clc jp adc jo aaa out out dec out sub das outsb sub mov ficomp jno jne mov out clc sub sarl pop dec movsl adc xor jle ss fcom xchg dec add jle lea push imul sbb es or sub (bad) fbld mov jne pop in dec xchg xchg add push adc scas fimull push sub int3 mov test mov mov adc lds xchg ret xor das pop imul js std jmp and lahf push push sbb out dec (bad) mov dec pop (bad) xorl sahf mov add in test jl jg pop popa adc add (bad) xchg mov nop or fwait jb jne push mov pop (bad) pop andl or (bad) outsl inc test jbe sbb pop sarl adc dec push in std inc cmpb (bad) pop (bad) inc mov lods jnp cvtpi2ps cmc push sbb inc cs fdivl stos insb xchg jecxz aas aaa xlat test aaa sub insl dec aam push inc das mov loope cltd push xchg inc bound inc fisttp sarb jge cmpsl push les ljmp fstpt shl aas rol std adc pushf mov cmp mov or lods jb push jo call out push xor pop pop jno pop pop push jns stc test orl ret daa scas scas or addr16 outsl mov test test jg xchg inc pop (bad) add sbb mov xchg mov fwait or ret push sub inc and or in test scas stc xchg (bad) push stc aam mov das push cmpsl jmp cmpsl (bad) mov inc enter (bad) or and adc add mov out pop out cmp cmp sub mov cmpsl pop outsb sub add pop in add clc pushf dec and jecxz sbb mov mov addb xchg add jmp xchg fbld nop scas mov repz lods or jl jge,pt cmpsl or in loop dec popa imul sub insl xor jge sti push or (bad) aam ret aam jns jo bound and inc adc jbe lahf xor push dec pushf push sahf pusha dec std xchg pop into add aad sti shrb and popa cli mov cli cmp test sub test rcll (bad) ficom es cmpsb mov mov adc imul in scas cmp xor push jbe test pop fucomi out push es sub pop out scas in inc std rolb negl mov sub (bad) mov les sti add clc mov sub enter add ret hlt inc je mov xor (bad) daa jne repz push push and (bad) inc ret jle add jg xchg int3 mov mov cmp repz mov dec xchg add inc jno imul cld (bad) push jae in add cld test cld in lods js cwtl sbb movsb jg dec and popf xchg pop mov int3 add dec and pusha daa mov repz sahf push mov loopne loopne jbe fldenv mov xchg imul or mov scas lahf sar xor popa jb stc cwtl mov and and mov fidivl pop mov cli pushf jo int3 outsl popa and mov xor cwtl xchg cwtl lods fdivrl or and inc les leave scas mov push sbb pop fidivrl pop rorb in mov inc pop and push inc cmp sbb xchg cltd jb fidivrl loopne out stos scas jmp out mov mov push fs pop jae jns or xchg and inc and pusha adc push push mov xchg (bad) pop pushf ret lret xchg leave push add stos inc popf (bad) push cmp jge loop lcall clc xchg pop (bad) imul loopne fiaddl xchg out dec stos fcmovbe dec push leave and inc jp mov stos lea inc mov jbe (bad) jp cmc mov xchg sti std mov xchg sbb xchg comiss test inc hlt ficoml (bad) adc mov cmpsl xchg not cmp dec dec xchg mov lods or sbb scas je dec (bad) (bad) int3 sub mov xchg ja xchg adc jp jecxz out cli popa xchg out inc mov mov mov sub stc mov jle dec dec jbe inc repz lods leave ret sbb (bad) mov jo cmpsl xchg nop in ficompl jae test fs push cli pop rorl xor add nop push int add rcr outsb dec add push and pop xchg enter xlat hlt les movsb sub (bad) mov adc in jecxz nop xor sbb pop cmp mov jae iret pop iret dec sahf push mov jbe mov lret push sti push dec dec pop sbb jg and mov mov jmp inc dec xchg fldl push xchg xchg adc les ljmp das pushf or je lods pop mov inc dec dec rcrb adc sbb fisttp fcomps xchg in dec faddl lods cld jbe dec and jo mov shl inc fwait lret into jg adc sub sbb iret call push rcl dec fisttpl mov sub cmp pop inc test test mov fisubrl pop and xor inc mov iret xor sarl stos or sub push imull sub cmpsb and pushf xchg fstpl rclb (bad) scas mov (bad) push sbb jl adc in push xchg imul repnz dec loop mov jp es cmpsb out push jnp and sbb mov push cmp out xchg adc (bad) repnz pusha mov and cmpsl (bad) test int3 ljmp sbb xchg divl shlb inc lcall mov xor in and ss jnp icebp mov imul dec insb and cmpsb push mov push int3 adc lods add jecxz mov adc mov iret popa xor and divl nop xchg loopne cmc in int mov aaa das mov pop and mov mov out insl xchg pop call cltd cmp xor pop inc test dec xchg movsl pop popa data16 mov rorl cwtl (bad) (bad) or cltd popa imul scas ds jne movsb out hlt pop mov sbb adc push (bad) fdivl adc mov fldcw adcl xor dec pop jl sub rcrb ss inc out cs jmp xor push push mov (bad) pop rcll or jecxz lock push pop jl inc push pusha (bad) inc ficoml mov scas out popf push xor sbb psubq fucomi mov cmp movsb mov sub pop sub add mov popa sub adc call fucom sbb xchg fmull mov daa add cmc sbb jo pop lods pop pop xor sub cmp and or ljmp dec sbb aaa cli fistl icebp (bad) dec lds dec rorl lds push sti aaa or into jl jbe jbe cli out arpl ljmp xor fimull movsb mov leave jne dec cmp push jns jmp and clc push mov stc cmp in push repz or pusha sbb shrl push call repnz add push scas jae cmp push fcoms aas push clc rcll sbb pop add test sub rorb fildll push pop and mov out sbb ss shrb mov popf mov rclb mov fmull cmp push xchg mov xchg subl push fistpl push divl inc inc int pop pop jg aaa std int3 (bad) mov vcvtss2sd int3 and lahf xlat popf mov lret jb mov xor pop push pop or sti mov pop sahf int out scas in or insl push mov mov cmp sub cwtl and ret and push enter stc rcl hlt popa xchg add pop mov stc mov lods lahf mov mov dec add xor push lock lds stos es mov adc in mov cs rorl or dec roll sbb adc jbe lea lcall (bad) data16 std mov daa arpl pusha test loop mov inc div sub push add enter dec out (bad) ss push jns sbb xchg inc test lcall rcr or sbb mov dec jl fnstsw fildll out pusha and popf sbb dec je mov rclb arpl ljmp call fwait xor stos hlt repnz adc adc subl sub xor ret out xor and push (bad) lahf dec jo jmp ja push (bad) (bad) dec dec cmp loope jo lock push out dec imul xchg mov push lds stos push pop sbb mov jl jg cmovle cmp stos push test sbb aas jg push mov or add mov jnp cli outsl sbb hlt nop stos and push movsl mov out cmp and cltd js sbb cvtps2pd inc cs sbb dec fprem add push lret cld lods cmp xor mov pusha jns cld inc jmp pop pushf je and mov fisubl xchg jmp into je fld or dec sub cwtl hlt popa aam pushf sbb fbld out jne ja mov dec push xchg jns or pop in mov (bad) jne (bad) sub jl xchg xchg in cmp xchg lock pop mov divl push movsb mov pop or in mov xor int3 lcall or inc adc aas cmp in sti lea add pop inc mov lea xor mov dec ret mov cmp push mov xor stos and ja ss das or leave xor fisub sarb add inc frstors xchg bound jne push dec (bad) inc dec bound sti fwait pop and outsl stc nop scas lods ret lahf setp mov pop pop out popf ret cmc jle fidiv (bad) push adcl fs sbb std dec inc dec cmp jge lock sub test dec sbb or bound unpcklps mov icebp xor daa sbb dec add mov leave pusha les push cmp adc movsb cmp pushf (bad) cmp pop xor or pop lea (bad) push fildll adc decl dec mov sub sbb xchg xor and add stos mov mov in dec (bad) sub pop pop inc fs sbb popf stc aam mov add inc mov mov adc (bad) pop mov cld mov inc and cs mov mov jno int xor cld movl jecxz xchg adc (bad) hlt fcomps sub icebp gs xor add aaa sbb callw (bad) loope dec xchg or mov iret jne xchg pop (bad) in sbb nop iret jno bound cmpsb pusha les cmpsl stos (bad) enter cmc dec aaa xor or adc cltd jns shll inc jp sbb or dec push mov or sub aad jno addr16 loopne xor je and sbb out xchg ret jns or xchg rol or (bad) xor ret in cmp in inc cmp in sti std jne mov sub leave ret mov loopne (bad) sbbl push dec addr16 int3 mov mov dec loopne jo sar movsb cmp dec rcrb daa outsb cmpb adc nop shlb inc in push lcall add test pop push xor xchg addb outsl (bad) mov mov xlat xchg xor xchg push cs xchg mov (bad) movsl mov push repz test push push jg pop movsb mov cmpsl pop cs gs pop loope mov loop enter rclb fcoml in rcll and scas repnz leave ficomp mov sti bound add xchg cmp jl int3 aaa pop les test sti sub adc in in pop xchg lea sub ret ja and or xor push jbe loop push lods xchg (bad) xor or gs mov jo insb movsl in sbb loop pop push cltd dec addr16 push ljmp xor lea les out mov xor jbe in mov jne adc (bad) mov pop xlat xchg add enter add fldcw (bad) mov adc xlat mov fcmovnb pop push ljmp pop push mov dec sbb ljmp jne dec sbbl sbb or jl ljmp mov cmp cltd pop movsb hlt scas pop dec xchg xor jmp dec cmp int mov adc xchg xchg mov jle rcrl das stos push loope push jl cmp cs adc std ss push push (bad) cld aam (bad) push out push add test pop fs fwait lret ljmp icebp xchg pusha inc mov mov shrb aam sub push loop xchg (bad) inc jle and jb adc fcmovu sub inc rclb stos push inc dec test push inc sub dec push push and adc lret scas sbb and inc mov mov xlat es xor mov mov fmull add inc sahf outsb adc adc sti adc cmp (bad) jno std scas cld aaa adc mov adc mov sbb cmp xchg shl repnz ret mov push xlat lcall ret inc mov xor jmp push hlt jns out adc lea fwait imul jns and rclb adc jp shl scas cs sbb das cmpsl mov inc arpl jl cli (bad) sbb cmp inc invd lcall rol rep and pop mov jl outsl adc cmp jg popf mov fmul and mov jmp scas xchg dec and xchg (bad) mov mov scas scas cmpsb (bad) addr16 jmp mov inc or shrb sahf je outsl sti pop sub fwait dec inc scas bound mov xchg lods xchg rep jno adc add push sub xchg stos mov xlat lea mov orl or push pop sarl mov or mov fwait cmp inc xchg daa cmp jmp jmp sbb aaa lock mov xor in and loop pop jb cld xor sbb aas jae xchg push xchg sbb cmp sub sti cmp cmpsb sahf out repz push mov mov add test (bad) jae stc call push jg data16 inc mov push decl adc (bad) push sbb repnz push in in or dec mov mov cmp test push jl rcrl aaa mov addl lods sub sub stos or jge lret xor jecxz mov ret add stc or mov int3 lds xorl in fwait or mov adc xchg sti outsb mov (bad) add xchg mov mov lock call fidiv cltd mov push imul out and mov add repz inc aam mov dec push stos test fsubrl sbb data16 arpl fmull dec add adc addr16 icebp outsl jnp in add decl push xchg xchg jnp or scas push loope repnz ljmp in dec aam or test clc xor sub divl fsubrl idiv pop cmpsb scas cmp test jbe addr16 (bad) inc adc faddl pop scas rolb lea mov aaa lods cmpsl (bad) leave imul icebp xlat dec or pop xor cwtl or (bad) into cmp adc pop int3 push jg outsl fadd orl test adc aas (bad) sbb jp and sahf add arpl cwtl mov push incl dec fsubrs scas lea insb xchg js enter add lock cmp mov sub fldl ficomp mov outsb icebp dec sub lret sbb dec pusha int3 xchg bound add fstps lret or cli loop jnp push mov push imul pop sub stos jae and insl or (bad) and jp push jmp je fbstp add jnp cwtl out mov pop mov sbb jne aaa jmp add loope sbb js rolb pop mov lret add sub mov sub or xorl xchg xchg fidivrl jp ror cld (bad) dec js pusha inc jmp xchg push mov mov loopne jne insb cwtl inc pop divl sub inc cmp insl fstps (bad) shl leave test cwtl mov push imul push add xchg icebp js shl (bad) jno nop leave outsb mov hlt scas test jne push and lcall and sbb lahf fldcw roll mov sub add add decl push xchg dec aam data16 xchg inc adc mov sub jg push mov dec xchg xchg clc sub pop xchg mov sub xchg adc inc and and out or jg lea leave stos push xchg outsl sbb pop jecxz inc icebp call lcall test mov mov sub cs repz dec xor mov xchg dec std pavgb mov popf mov xchg fsubp pop ljmp fisubr jo dec adc push sbb ja dec scas push aaa xchg jecxz sub push pop adc cmc int icebp dec adc ficomp cli fstps popf mov xor rolb lods icebp je jb or sub dec push jle imulb mov scas fmul mov mov xchg push jne sbb nop pop or inc xchg fsubs and pop push inc mov xor jo pop bound cmp movsb stos pop jl scas les clc (bad) mov pop push jg xor inc xchg xchg cmpsb cmp mov add dec test rorl hlt mov mov or les sub add loope pop adc inc fmull je outsb and pop jb cltd outsb sti cmc pop mov test rcrl movsb call mov xchg ret mov dec xor inc imul xor rolb addl lods pop nop xor xchg andb push inc jmp push jnp (bad) pop xlat or lds mov ret jle popf lahf xchg pop add jne bsr pushf loop mov sub leave icebp push divl cwtl push into or dec inc sbb push push and sti fs out cwtl push xor dec lods leave cmp sub addl aam scas mov sub inc push pop inc stos adc pop pop lock mov call addr16 rcr lods insb mov outsb rolb cmp stos adc sbb jns rolb mov stos loope mov dec lret xchg dec hlt mov (bad) popf adc lret insb stc sti add ljmp rorl bound (bad) jp,pt push outsl adc dec xorl fstpl int3 mov addr16 aam pushf push das add test repz (bad) adc mov xchg dec movsb jne enter sbb nop pop and jecxz sbb push sub xchg cmc pop mov jmp test pop xchg dec clc inc sti aad dec or arpl xor adc sbb (bad) addr16 repnz mov jns cmp add jae ret mov jecxz dec sti fldl jns cmp cmp shrb mov xlat push pop mov pop pop iret jbe push pop pop mov mov push popf xchg outsb mov fcoml int3 inc push push insl cmp ljmp int scas (bad) test add mov xor insl out lds mov cmp jnp xchg data16 push push push jo jge sub jmp push repz lahf subl scas pop inc insb mov pop in in mov inc mov mov enter popa daa dec rorb jmp fdivrl addl xor in mov repnz out jl mov aad fild dec (bad) push xchg dec rcll jno mov pop jp ljmp push xor xchg add mov rclb sbb mov xchg push mov les jne leave pop cmpsb cmc aam es out cltd add jbe mov in inc popf push mov sub push push sarl mov outsl cmp adc mov mov nop mov xchg pop and pusha popl ret and dec jnp movb pop ljmp mov dec lea imul fmull xchg xchg fnstcw xor test adcl pop out sbb loop add push xchg mov gs (bad) int mov rcl jnp pop jns lahf add ret int3 in mov jl add ja (bad) test cmp pop inc mov jge (bad) repz scas mov aad out cmpsb xor xchg stos ficomp fxch push mov jo frstor fsubrl mov loope cli rcrb dec lods jb add (bad) and arpl popf jnp push mov mov xchg pop insl push (bad) push jg mov sahf (bad) jg mov pop pop std or mov xchg fcomp push int movsb add rolb sbb dec lods (bad) or (bad) ficoml gs out jmp orl sub icebp scas mov pop adc dec popf scas dec jns aas outsl clc std xor mov or push mov ficomp or out jl insb jg je sbb and leave imul lcall rolb sub out movsl xchg loope ljmp mov movsb sbb push in lret jnp jmp gs jbe lods mov mov popa push daa jae hlt pop mov sub aaa sahf es lods dec lods adc cmp and iret adc nop xchg inc push jecxz int3 aad pushf insl imul int sbb adc sti jle xor ljmp xor add fsubrs pop mov mov mov xchg pusha lock stos push jae sbb dec daa rolb mov rorl jmp rcrl lods pop lret mov or cmp pop push fdivrs inc cmp sbb in jge and loop adc imul ret mov fdivl inc push fdivrl mov outsl lods adc ret xchg js sti imul daa inc lock imul outsb jle cltd gs jnp cmpsl mov or imul mov das mull int call jns je inc pusha loope lock shrb imul pop push dec aad js addr16 stos int3 mov test insl mov loop loopne pusha (bad) fcomp aas test or ss pop dec cmpsl mov (bad) adc movsl int3 mov (bad) cli ds jecxz out adc dec out repnz mov sti dec xchg push sub dec jbe cli mov jle sbb add lock out mov sub sub dec ds or jns fisttpll or sahf into pop addr16 xor data16 dec sbb mov int pop sti xorb popa mov cmp dec push nop or int repz outsl push or dec jns and cmp imul mov sub sbb push dec mov jle sbbl pop in sbbl sbb das mov adc push fildll mov sahf aas mov adc loope enter lret rclb sbb cmp push enter xchg sarl in ja loopne mov jns add dec lds sbbl icebp arpl shrl and and loopne fimull jb rclb roll dec insl pop mov jg arpl addb (bad) int cmp outsl adc pop adc mov add pop fadds add xor scas imul xchg sub sub cmp push test jle or lea xchg inc add jmp inc dec pop sub fwait cmpsl push xchg scas jns and test mov xchg cmpsb cwtl jns sbb (bad) xchg or xchg mov xchg notb add jg hlt or mov and cli add stos jno push sbb xor sbbb xchg jge pop add inc imul push setle (bad) xchg int3 les ljmp in pop push jmp idivl dec aad pop jb out aam mov lahf mov into aaa aam cmpsb jge xchg inc je xor pushf stc jecxz jnp mov repnz pop mov (bad) js xor push out dec iret or les call lret inc shll sbb dec push outsl mov sbb icebp mov jb push test movsl xchg add pop dec cmp es test add jmp pushf dec enter sbb adc cs adc cld add mov (bad) loopne sub xchg add dec cmpsl rcrb ror dec and xchg pop push clc jae and pop mov sarl inc xchg (bad) dec pop lcall aam fnstsw and push aam push jbe sbb add dec clc ret xorl push adc test ss pop cmp fs mov add popa fdivp arpl jmp cmc lret (bad) mov and mov (bad) out cmpsb xchg pop lret rcll js movsb add inc test sub push je aad outsl or lcall mov nop mov out lret in loopne xor cmpsl sahf mov jle in mov pop movsl dec orl scas mov inc imul pop push push aam adc jb mov mov add mov lock mov bound fs popa notl add and (bad) mov in sub jns out sub push inc jb popa xchg aam leave or sbb cwtl xchg gs mov enter les mov imul and pop or add in jns dec vmovapd jns fistl orl xor mov (bad) notl imul dec fldenv mov xrelease ror xchg jae in test ljmp mov rolb ret negl jnp leave mov insl addr16 push sub rorb jge xchg sbb mov into add insb roll inc xor dec and lret (bad) cmp mov jmp xchg rcrl sbb cmp insb repnz fldenv repnz xor mov pop xchg mov sub out xchg bound pop divb cmp and lock movsl out push cmp ss or mov lcall xlat nop jl cmc ds cld mov push mov scas jb push sti inc jns mov jnp adc sub fsubrs inc mov iret sub pop (bad) cmc dec add or popf or or mov sbb mov jge mov fwait jge aas fisubr out add jp push sub testb pop aam cld out jnp leave pop imul dec das xlat cmpl pop jmp std cmp test loope fmull lods pop (bad) jno out mov fistpll pop fcompl xor xchg adc in ja or fnstcw adc pop sub xchg adc jmp aad mov mov (bad) scas ljmp push cmc dec mov or sub mov cmp jmp mov mov pop push pusha xchg mov dec jmp repz lahf sbb test xchg iret xchg aaa aad jb repz cli int sti cmpsb push cmp jl sub cmp sysenter mov cmp jp mov icebp jne push aad paddusw pop (bad) and add sub or les in mov cmp (bad) dec (bad) fild cmpsl jns push leave inc sub mov fxch into lret mov mov fcompl xor mov inc jge pop sub jno mov pushl add jb cs stos imul loopne mov inc (bad) fnsave jge mov push pop push cmp pop xor jbe pop mov mov add jp aam out leave cmp rolb mov stos sub (bad) pop stc push out add pushf mov dec pop push (bad) ds lea mov or ds stc mov in ss cmc xor mov and mov insl addb xchg out mov push int3 dec (bad) lret cltd adc jl shlb pop jp jle push xchg fimull out cmp add dec movsl dec out sub mov add add cmpsl pop pop popf loop and push and adc (bad) movsl lock in loop and int3 mov jne cld repnz add scas enter add int rcrb jmp jae or dec jns jne adc dec pop adc push sbb hlt sbb out jbe mov pop out mov repz dec outsb mov mov cli mov and pop inc xor repnz aas fxch cmp pop aam adc (bad) repz xchg dec stos call inc or jle sti mov mov (bad) dec (bad) and push add dec (bad) pop rclb xchg or push cmc mov mov cmp out cmp outsl lods cmpsl aam scas xor mov in iret push jg sbb and sarb into add push dec int3 (bad) ss cmc sub ja xor js stc aam movsb imul adc cli das sub movsl repz cltd (bad) icebp scas das jp (bad) icebp push lock ficoml mov (bad) or mov aam outsl inc or and dec mov push inc scas in int3 xchg ss push (bad) pop (bad) push fisttpll daa push aaa mov cmp negb mov insl jp into dec sbb jo cltd (bad) std les mov aaa scas cmp das insb mov mov clc lds adc add popa ret roll rcrb xchg data16 jno adc mov sbb jnp icebp fsts adc les movsl push adc inc sbb scas pop jnp mov insl pop fmuls pop pop jl mov pop jecxz sbb in or in add std sbb gs pop jnp stos sub sbb mov xchg adc pop es adc inc insl mov incl push daa arpl or adc push icebp insl jbe jb and enter cltd cmp iret adc mov pop and cmovp movsl lahf mov sbb ds pushl imull mulb pop mov das lods dec sub cmp je cld mov cmpsl mov dec cmp or jne jne jmp scas sub xor stos shrb push rol and pop jl ss mov jb pop mov (bad) xchg std out mov pop lds icebp mov mov (bad) rolb add xor in in xor lods jle dec imul iret je pop mov and pusha shrb jne popf jecxz jns mov add je icebp xchg push xlat mov and jecxz insl dec mov repz and gs jge and mov push mov shlb nop jp aaa push jbe,pn push out inc jp inc xlat xchg pop sahf jmp fs call dec (bad) int nop adc mov aad out addr16 movsb and xchg add in out pop fcom (bad) mov sti xchg cltd test jnp shr mov jb dec sbb xor mov adc adc int3 xchg enter add mov jp push fwait xchg adc or inc jecxz test (bad) dec arpl or xlat sbb arpl pop xchg decb adc mov or cmp lcall int incb rclb scas mov movsl pop jg rcr loop out loop or fsub jp ficom push insl add and or push adc xchg add (bad) jae push gs xchg pop jmp cmp into out (bad) popf xor int mov jne xor (bad) out outsl add push jl notb jl call aaa andl ss xor sahf sbb (bad) (bad) mov rclb or mov loopne push xor mov jae mov insl inc cmp jb inc rcll rclb pop xor sahf pop popf inc cmp es stc lods mov cmpsb sarb fild test insl jle and mov mov rep xchg xor dec cli daa faddl nop int dec aaa fnstcw andl mov loopne int jmp pusha js sub clc dec aam mov mov jecxz stos out jae int3 lret dec hlt dec and aad add out lret jno (bad) punpckhbw imul or (bad) out inc mov loope inc add xor mov xchg xlat (bad) scas and push je sub inc dec xchg cld pop sbbl mov sbb mov sti push stc jb fildll inc mov (bad) push jb cli cltd fstpt or lea shrl test mov sbb test and int3 and sbb jmp (bad) scas test scas mov mov loopne mov std clc jl test es xor fmuls mov arpl add sub mov rcrl dec pop das nop or add cmp sub cmp jmp fisttpl mov pop mov xor outsb rcrb lods or push add cmp idiv mov (bad) insl xchg lock inc sbb stc mov daa ds add cld add jge aam cld cmc cltd add loop fnsave orl xchg sub stc stos js inc inc dec adcl mov mov jne or fs es adc lret mov imul adc adc fnsave (bad) stc or sbb adc lret inc fdivl mov adc (bad) add xor pushf cmp sub xchg jno repz rcll sub lds xor aad loope aaa rcrl gs stos rclb scas pop add mov sbb data16 in pop call leave not addl mov mov mov outsb iret jbe mov clc pop adc cmp xchg outsl (bad) mov data16 inc mov hlt jne cmp xchg inc jl test xor test bound ljmp lcall cwtl cmp hlt arpl and imul rcl inc and in aam (bad) shll pop pop fsts mov push in mov in cmc stc sub mov inc xchg cmp arpl or push pop rcr (bad) jp into mov pop cmp stos or push mov push out xor imul jecxz hlt mov mov xor rcr sbb and mov out add sbb mov and jge mov pop push jle fist in out mov rorb inc aas fldl2t ds or and js and out xchg mov inc sbb push mov inc or mov adc cltd mov pusha cmp not (bad) mov test or pop cmpl mov call and rolb jb movsb jae out adc int3 inc (bad) iret push lcall fsubrs test cmp inc jle or rcr or jnp jbe in push pop jg sub ds pop lret mov mov jb loop (bad) sub sarl sub ret (bad) fsubrp leave shrb ss mov mov lea jne lret sahf pushf aad cltd stc cs jb and inc aam add ds adc pop rorl mov scas fldt in cld lds std adcb leave push fisttp fldenv sbb mov jne daa sbb adc pop lcall sub xchg sub mov mov fbld pop or push dec into imul push push xchg sub fidivl mov dec mov jo and jne call fld repz pop dec (bad) or xorb dec push xlat jnp gs cmp sbb insb xchg cmpsl sbb out push fst (bad) mov jno add fxch mov cmpsl ret adc inc int3 sbb mov es jp incl and add jp stc or es outsl inc frstor pop out cld pusha cmpsl idivl mov test stc jb,pt or jno mov (bad) (bad) divl incb cltd fxch jb aam insl push les xchg dec lret jl or sbbb cmp lcall repnz adc jg in int3 jge pop jp sub mov (bad) fnstsw iret xchg cmpsb cmpsl xor ja fsub mov dec push xchg loop and lcall inc leave arpl ss jbe (bad) pusha repz cmp popl aad mov adc mov sti cmp sub jbe (bad) push push jnp repz pop xlat jbe addl mov mov mov sbb (bad) and adc sar ss sbb js or dec pusha xor movb mov mov sbb xor inc fldl lock or lret ss bound in push push (bad) pop adc mov stos add pop fnstenv arpl int enter inc jno mov les cld nop in push std out push or and je (bad) sbb out in xlat test and inc rep les stos push mov es or sub jg or fisub test arpl sub push jns cmovb loopne call fwait adc mov sarl aaa push or (bad) lea out xchg ret jbe out ljmp ds gs ds mov pop jno sbb push jle jg call clc xchg mov outsb jle fstps pop push mov sti lds and cmpsb mov lcall inc jl push fdivrl xchg cltd outsl cs mov add in fwait lret mov xchg pusha cmpsb sar mov xor aam pop inc inc cmc sti push jne ja out ljmp cmp cmp (bad) pop mov cli adc fistl dec xorl add mov stos ret in push jecxz pop push inc das adc repnz pop add ja xchg icebp cltd loopne add add neg ja pop adc in ljmp mov xchg je jnp stos pop cmp in jecxz cmp sbb std or in (bad) out in pop mov test mov dec xchg dec cmp lock int3 and push (bad) xor mov jecxz mov enter xor jecxz shrl push jae cmp dec mov cmp test lcall dec mov jbe mov mov xchg (bad) icebp sbb xor lods stos scas mov xchg shr cmp push push roll iret dec or or in enter lcall mov lds or cmc sbb xor in mov std jne lods push xlat in aam stos pusha (bad) jnp or scas push or push xchg xlat and fs cmpsb popf ss popf sbb add mov lock (bad) sub sbb mov pop add mov xchg mov out shrl jg mov std (bad) mov dec shlb mov adc into test aad mov in cmp sbb (bad) xor lcall sub mov dec andl pusha or clc (bad) push pop lea andb div lahf mov leave inc push adc outsl push stos or mov in sbb push int pop add fisttp or push or lret adc hlt (bad) fcoml sub fs sbb cwtl inc scas mov ret push sti mov outsb cltd imul dec (bad) mov (bad) mov shlb cmp mov push lret lods loop insb aaa push mov dec loop loop inc mov repnz mov inc testl cli pop fmull push cwtl or push fsubl je dec xchg repz mov clc (bad) js outsl inc xchg xchg xor cmp paddsw test in clc test stc xchg out (bad) mov pop inc adc push movsbl inc xchg fmulp jge out cmp push ret mov pop dec cmpsl sbb cmp lahf cmc std cmpb je aas in xor stc dec add jae xor push dec out mov or pusha jbe (bad) iret dec or loopne xor and outsl sbb xchg xchg rcr xchg rol fistl jl ljmp testb jo lret fdivr xor sbb lds pop hlt lods lcall mov bound je push fdivrs ja or (bad) hlt nop popa fildl or addr16 pop push and arpl pushf push sarb lea lret cwtl sbb lahf push sti int push adc loop popa flds mov notb es movsl scas mov shrb ud2 out js xor inc add push das ret jno sub (bad) dec push shl mov mov vfrczss rol inc xor dec (bad) or mov out shlb das adc andl ljmp mov add mov mov mov mov andb stos stc dec and les mov push lods mov xchg sub jle xchg mov mov fiadd sbbl xchg xchg mov adc push fs cs lods push inc loope insl sub dec push lcall dec test sub imul cmpsb and in in js push sti jae add lds lock daa lahf and icebp inc xchg fs pop xchg in adc xor fs add popf cmpsl or clc and mov pop and dec mov daa sub push xchg dec test inc in idivl add push and cltd jno dec sub push push push mov adc lods pop out pop in mov adc fnstenv rorb sarb or sub adc pop cmc cs (bad) negl pusha enter dec ficoml jnp lea inc cs adc rcrl push cltd lahf xchg pop or mov loope jge mov pop sub cmp jmp cld shrl popf sub fimull in dec mov std adc push adc pop sbb cmp and pop xchg pop mov cmp push fnstsw or cld cmp je ljmp je fxch pop dec (bad) aaa fisub test loope jb add mov push pushf test jmp sub pop push adc or dec rorl push jae or mov xchg sub mov (bad) hlt out mov in adc les inc xor jg inc fmull inc cmc popa and pop roll mov icebp nop int3 pusha movsb pop mov rcr (bad) in mov rolb (bad) add jp mov push (bad) xor pop lods jns insl and jbe out fdivr and cwtl scas sbb cmp (bad) test mov jae mov sub cltd cmpl (bad) mov fistpl adc jp jno fidivl imul shr pop (bad) mov roll lcall in mov iret cmp adc lcall cwtl cld push dec xchg inc iret lahf rcrl jnp xchg negl movsl aas jmp in icebp xchg and cmp mov scas jae ret (bad) int3 (bad) jb mov mov sbb inc scas xor inc jmp jbe scas and cmp es or fdivrp push andb xchg mov add stc or ret arpl adc mov sub dec rorl jns imul jle xor mov mov clc add jmp pop aad nopl ror cltd xor testl add call fbstp pop jp add or scas out mov sub mov jns mov loopne ret rcrl int3 and rep adc pop jg mov push add pushf sub sub or mov dec mov in jb ja lret lds mov repnz inc xchg ficompl sbb insl fs hlt jl xor out (bad) mov inc push pushf and pop daa sub pop lods sti (bad) insb (bad) inc pop in rcll faddl jne xor sbbl (bad) jmp jns cmpsb cli fildl adc insb aas subl popa xchg js andps mov cmp xchg mov push rcrb dec inc and mov arpl sub xchg clc cmpsb mov cmp pop jbe cmp xchg jmp mov dec mov push (bad) aas adc sbbl push outsb loopne dec sti fs int adc or or fs cs adc pushf xchg sub mov push jno insl and mov add add (bad) hlt jns push push inc pop dec push in xchg adc hlt int stos push ds jl out js pop ss fcomp mov dec cmpl lret xlat stos ljmp dec sbb mov fiaddl imulb cltd mov std inc adc push mov inc mov jae fdivp jge (bad) cmp stc push xchg es popa dec jns ficompl ret add dec and or pop iret clc aas movl int3 push pop in dec insb cmp popa enter xor mov pop ljmp out repz mov xchg cwtl outsb push xlat and sub xor insl xor bound jp int3 cld dec fldl lock lahf bound mov jl mov sub mov or aas push jmp fucomp jg mov sbb sub dec add mov mov dec ret pushf jecxz jae push aas cmp mov fcmovnb pop addb scas inc js mov inc push pop mov dec adc inc sbb aam (bad) push inc mov and jb or test cmpb mov and ljmp into cmpsl xchg lret mov and inc push cmp fnstcw xchg xchg sub out shl cmp and cmc cmpl pop pop and inc mov sub fmuls mov jbe lock inc cmpsb cmpsl xor push stos inc jecxz daa cmp adc push adc (bad) ficom repz jns dec xchg cmp xorb mov push (bad) cmc xor iret test (bad) jae fmull (bad) cmp pop xchg data16 out loop add leave and push mov xor pusha mov bound nop inc das aaa (bad) clc out jno imul cmp (bad) and stos enter and test jg cs fisttpll add xor pop jmp sub scas in sbb mov and push fidivl jbe shrb push lods adc sub push pop push sbb inc jne pop jmp fisub rorl jns shll mov cmp and xor xchg rcrb mov scas je div lahf inc pop cmpsb ja icebp jne stos in (bad) (bad) insb xchg mov in push xchg mov push and adc pop mov gs push jl cmp xor out push push push scas and mov movsb sar mov ja cwtl fist or stos int pop mov add les pop mov popa out flds jae mov sti scas mov call and in mov mov add adc push ret repnz rcr and xchg shrl and rol xchg cmp (bad) jne push (bad) nop imulb push pusha jo into xchg dec inc outsl add repz test sti (bad) pop das jp jne push psrlw dec mov ss das mov xor xor nop adc xor fwait dec mov int3 (bad) mov test or cmp pop cmpsb rol cmpsb mov cli (bad) mov sahf mov int mov pop inc inc daa dec loope in in xchg cwtl or pop xor lock xor mov (bad) mov (bad) jae jmp sub daa jno rcr jge fstpl cmpsl aam cmc (bad) push (bad) or inc cmpsl out orl sti out add adc or mov and cmp addb insl xchg pop (bad) loop iret inc bound fcomps ljmp adc iret fist mov pop mov adc int sbb cld pop inc les mov repz add inc aam jmp and dec pop mov fcmove ja imul sbb cld mov and insl cmpsb jmp adc pop aas mov inc add sahf imull pop fcoml out push fwait sbb (bad) jle imul sar sarl add into add inc or push out inc outsl outsb (bad) clc jecxz mov jmp and outsl lret cmp test mov outsl lods loopne cmp push cwtl rcl sub mov jge push das adc add mov int repnz mov adc or insl adc adc jnp pop in loope pusha sbb pop cmp xor in sbb in mov xchg mov out clc sub jge lahf mov lods out icebp dec and pop lods gs loopne lret jge mov mov or adc mov adc sbb xchg push pop test push mov mov inc add int mov cli pop or jnp lret xchg pop mov xchg addr16 sub loopne test add cmpsb rcrb lea (bad) jb add sub mov lahf pop cli mov sub leave frstor mov or movsb icebp cmp int inc shll inc mov and inc in insb in pop xor mov pop cltd sub xchg xchg je jae (bad) lock push and mov xchg xchg xchg lret (bad) rclb sbb lods int es jbe (bad) sbb mov loopne inc out and dec rorb jo add stc (bad) insb pop xor push adc mov cs jl cwtl dec arpl push pop jb fimull out xor pop mov flds daa hlt insl add notb jae add (bad) mov and xor inc cs sub test rcll in in lret inc sub inc or leave xor push jmp in xchg dec stc arpl ficompl jecxz push nop sub mov fisubrl cmp jle stc mov ja mov cmp (bad) lock pop xor incl movl sbbl call xchg fistpl faddl ljmp adc fidivl pop dec sbb adc pop pop scas int adc jmp and jecxz loop (bad) mov push leave add loop pop fwait rclb in add jle imul cmp fcom sti aas (bad) cmc or (bad) mov scas dec in imul nop lret insl adc cs mov or lock mov inc cmp je sub jbe fiadd pop jb pop push hlt scas aam lcall aam xchg inc jne sub xor dec mov cmp movsl fwait mov add mov inc mov scas dec addl cmp mov aam icebp inc mov and jmp ja jle cmp movsl cs cltd (bad) mulps or xchg jae mov or inc xor sbb into xchg lds test push xchg das (bad) fldcw fistp and push push rolb mov xchg cwtl inc sahf push xchg dec push hlt xor (bad) mov adc dec adc outsl js addr16 mov push push sbb push or in mov popf xor push pop ret mov sti ficom loope cmpsb mov leave fild mov stos jge or (bad) pop lret imul add dec outsb xchg insl push push mov mov sahf dec jmp insb and sub xor test pop add aad fsubrl xchg fwait ss push sub push pop cmpsl mov cltd scas xchg push mov add or ret sbb mov or xlat push or adcb into inc cmpsb jo stos push out inc sbb outsb (bad) or pusha pusha jl (bad) stc inc in add (bad) push jo push inc dec adc pusha testb xchg je test inc jl cmpsb test sub mov inc aam lret out sub push adc in mov addl adc xchg jno push mov jecxz int arpl push jnp add fisttp cli jne push adc insl call int3 jp push push (bad) xor jae leave inc xchg loop repz add movsl pop xchg xor pop xor js ficompl mov mov jp pop ja jae frstor mov cmpsl sahf aas mov icebp sarl fcomp rclb cmpsl clc (bad) jb fs bound sarb stc push out or icebp addr16 pop and mov (bad) or outsb inc data16 in adc ret xchg fs das out (bad) xchg inc dec ret or subb test sub sti or js jmp (bad) negb in outsb xchg hlt sahf scas sarb call cld pop dec divl stos push pop roll add vpmacssdql mov xchg xorl psadbw cmp rorl pushf shrl inc sarb fs (bad) inc testl mov mov adc aaa test xlat popf mov fcompp pop sub cmp jae xlat mov pop inc jnp xchg inc push sbb lods fistpl jb mov mov mov fsts cltd inc xchg inc cltd xor je nop cmp fistl leave xchg ljmp xchg add test xchg sbb cmc and aam scas in push mov inc mov sar out repnz push imul test jl sbb mov pop cs add sub sar add mov fiadd shrb mov aaa lods (bad) fadds adc sub fxch mov pop pop and mov inc aam inc stos fstpl push rol insb out xchg dec fcompl inc push pop inc inc pop pushf inc ljmp adcb loop leave out lret pusha adc inc aaa push loopne jno adc bound mov push sub lea cld int daa daa lahf call mov repnz cwtl push cmp pop int3 add enter xor cmp dec mov inc sbb loopne das das push pushaw fmull xchg mov les or or aad cmp test call aaa mov pushf jnp jnp aas stos insl push or es cmpsl js and ss push push ss xchg rorb mov pop jne cmp mov push fadds leave (bad) pop inc mov mov test mov pop stc ret (bad) mov cmp pushf movsl insl fwait mov adc xor imul push movsb in push add addb in in sub aam gs pop (bad) out ja mov notb aam xor push add popa and aaa sahf inc fcoms into outsl mov cmpsl adc scas push xlat cmp xchg cmpsl arpl jp sahf aas fwait dec lcall bound fisub mov pop out aas pop pop sub cmp push lea lret dec push mov sub dec mov pop lea pop push and out gs push inc and mov pop push jmp pushf leave inc pcmpeqb fdivrl mov sub repz lods lods (bad) icebp fldl dec (bad) mov sub movhps hlt xchg out int3 push xchg pop xchg mov imul sbb sarw sbbl fst add adc sbb cmp cmp popa fimull sbb and pop movsb arpl xchg lret std pop sbb iret cwtl aas cmp lock test push inc sti mov cld sub arpl xor jg orb mov loopne dec shrb stc nop jne dec jae scas sti push inc imulb lret push push je movsl ficompl add cmp test lods adc (bad) or cli mov out xlat aam pop jb out (bad) xor sbb or (bad) mov pop mov or stos rep cwtl mov cmp mov cmp inc fimull pop cmpsl test repz jne stos ret test ljmp in loope push adc inc enter sbb mov jbe mov fisub mov cmpsb adc push stos cld fmull jmp or add add jo inc fsts jmp fbld xchg fcomp push push movsb outsl movsb fidiv aaa mov cmpsl das in lods jle and jge popa cmp test out cltd cmp (bad) mov loop pop js (bad) je push repz adc ret jb push dec jnp cs mov outsl pop lcall andb mov mov xchg rcrl fadds test dec push pop sub outsl (bad) loope shll popa test push sti ret sub addr16 push into in jae sub ror dec fnstcw and adc sub jmp or jmp push jmp jp pop adc out lods mov mov inc jmp (bad) daa fisubl jbe mov mov push add mov sbb push outsl pusha fisttpll cmp out pop pop pop iret jo lods jae xor icebp jmp push and jl xor mov jb (bad) fdivs icebp pop dec imul push dec jns push in sub push dec fisttpl in roll stos adc mov mov sbb mov adcl mov lahf add xlat fsub and or jl and lret mov out sahf jbe out daa in ja fldl mov stc mov jae (bad) or aad imul stos (bad) imul cli (bad) mov sti jae and xchg jae jmp aaa xchg inc and ret mov adc pop ja jns fidivrl sub mov pop (bad) cltd mov dec mov and pushl dec fstl push jnp cmpsl dec xor sbb insl test adc adc push jne rorb jno sub mov add jae jo mov xor xor cmp (bad) lods fcmovnb sbb (bad) lds xchg inc sbb mov push pop dec faddl cld inc push shr push outsb imul pop and and xchg movsl aaa push jmp lods aad and movsl push inc fwait pop mov jecxz inc out aam and std jl push int3 add lds arpl sub arpl stc loopne pop xor (bad) cmp lock xchg (bad) loopne mov scas mov icebp mov daa loopne pushf stc test dec fiadd cmpsl mov dec neg or popf leave repz stos aas pushf cli cmp test sub cmpsl adcl jb pop and shlb fistl mov or adc xchg xor mov fwait nop adc lods mov aam inc ds fbld nop mov fnstsw leave (bad) push and or stos xchg adc enter sub sub or test push jp xor mov push lcall dec lods scas je mov sahf push gs outsb sbb dec daa (bad) in add mov push mulb sub push cli mov sti pop lret pop pop icebp js stos pop pushf sub in pusha sbb hlt in mov repnz ss fs and pop divb push push sbb lods jnp loop mov imul push test cmpsl cmp mov xchg xor jmp fwait and enter mov rcr mov imul pushl dec scas mov push negb fsubrl scas cmpsb popf xchg ds xor mov and xor adc addr16 mov fisttpll mov push push pop ds fwait dec (bad) or bound and adc pop enter ret add fcomip mov loopne lret jecxz xor adc (bad) sub btc out in pop jecxz push daa fist xchg iret data16 adc nop cli mov (bad) shrb push repnz (bad) mov (bad) hlt scas movsb push into test mov xchg test mov add fstpl pop and push pop mov jae arpl loop inc mov mov xchg jmp sub push insl inc loopne mov xchg and clc stos adc (bad) jo (bad) push inc ljmp clc cmpsl jns mov or sub adc xor push dec loop inc imul mov add pop pop mov outsb pop xchg fisttp repz dec pusha pop cmp test pop pop mov push notb stos mov dec sti mov push lods cltd pop ret dec lcall loopne jp xchg and cmpsl jnp pushl and scas add xor sub ds sar push push add push dec pop nop fidivrl out push fmul or in clc push jnp int3 sahf pop icebp mov cmp (bad) xor or (bad) rcrl or in loope cwtl mov insl imul push cld sbb push cwtl lret insb test rcrl cmp aam clc shrl push mov lahf fcoml xor test out add mov dec mov mov inc std lea or add ja and jcxz pop mov fildl jbe jecxz test xor fcmovnbe sub arpl sub or loope inc movsb dec or loopne push xlat and adc mull mov cmp ss shlb mul out or sub add test push jb mov stc mov addr16 jnp (bad) cs xchg cld mov movsb dec jmp adc clc stos xchg (bad) out pop mov push repnz pop je fisubl aam dec leave fistpll fcoms jae repnz xor mov adc lods cmpsb sbb adc pop test popf sarb dec xlat sbb sbb pop clc xchg cmp mov iret inc mov adcl mov cmp gs mov push jns sub pop dec pop pop xchg stc jnp lds adc pop and setno jne in mov lcall sahf call dec xchg jl jnp cwtl scas (bad) hlt dec imul sbb call call mov sar pop inc sbb adc mov mov (bad) jne or pop sti sbb out push cmpsb xchg aas imul fildl iret inc loop ret add or or shll push mov sti add jp movb xchg inc add xor iret repz (bad) xor fistpll jns mov icebp je mov imul test call in pop stos mov mov cmp out pop dec push cmp popa xchg (bad) nop push mov xchg push inc mov mov lods mov pop jmp mov jns and outsb mov jb mov dec mov jg adc mov jge or adc mov nop es dec add cmp cmp jl jge cmc icebp cli movsb (bad) outsb and sbb mov mov mov adc xchg (bad) dec cmp cli movsl (bad) push dec inc sahf pop leave lea fiaddl fistpll iret fisttp pop cld or pop mov test call dec (bad) in push in mov addr16 fdivrp imul lret data16 stos push dec shrb scas test test leave sbb testl sbb icebp test stos pushf xor (bad) je adcl adc push cmp (bad) in (bad) add roll xchg dec cltd popf jmp lea popa in push or jge rclb lret jle xchg mov dec sbb sub dec dec and sti dec in lods mov xor jecxz sbb adc pop sub (bad) scas das sub or call bound xchg and mov xor xchg jnp mov sti mov into adc xor dec inc ss jo mov ret xchg sub pop subl pop and repnz cwtl stos clc inc mov or outsb sub pusha inc xchg cmc cwtl insb cmp or or iret imul xor movsb mov scas int3 push xchg xchg cmpsb or scas xor les lcall (bad) subl and loop test sbb push pop inc ds mov push sbb mov lret jb test pop imul hlt cs xor push and lea xor pop fildll inc scas add scas jmp push lock fwait push pop inc les inc repz stc add xchg cmp cwtl outsl and mov test push loope cmp and lds sbb adc fsts push mov in push mov jb xchg fwait or sti cmp loop in mov out lahf lock dec jno sbb loope jb inc adc dec sub jbe xor rcrl scas pop pop loope adc mov (bad) or cmp insl pop test sub push xchg int push es inc (bad) xchg lock in cmc mov leave jle aaa scas cmp repz daa rclb (bad) arpl xor cltd mov lods mov add outsb cmp push dec ror rol cli xor imul lcall outsb push les xchg pop push inc scas mov dec (bad) idiv test or lahf outsl in adc sub mov mov jb movsb imul pop pusha ret add mov iret in xchg movsl pop jb push daa sti push es adc arpl out xorb or repnz dec fstl (bad) pop cmpsb jl shlb bound rorl add mov push sbb or lret cmp ss lods add mov out xor sub xor adc scas dec push xor nop out sbb rorl dec sbb sbb insb xchg movsl inc jnp fucompp lcall jg pop mov repnz test out std (bad) sbb or sub or sub add (bad) cs pop leave in jne mov mov cmp rorb out push push jo adc xor fnstenv fnclex jge jp std fistp dec jmp insb in (bad) icebp fisttpl repnz enter adc out or cmp add or rcl iret in cmp leave xlat (bad) scas dec cmpsl adc stos inc ljmp xchg out mov loope cmp fdivl mov inc enter cmp add frstor sub or out jge adc ds dec xchg mov jmp jns prefetcht2 mov sbb sub jmp push stc (bad) das push jecxz jnp fnstcw outsl jl mov or inc out adc and rorb or pop cltd into xchg into gs sbb mov and cmp jae adc cld cmp or aaa frstor jb mov outsb xor sbb cmp popf scas mov sti push sub add xchg dec sub mov lcall mov leave or push dec sbb mov or xchg ret pop icebp push mov and cmp outsb and cld aad or mov xor inc clc lods out and movsb das push inc sarl xlat mov sbb jo ja data16 sti lods aam gs out mov push xchg imul fdivl loop jno idivl dec fdivrl insb mov (bad) xchg sbb incb sub inc nop inc lods add jb movsb lret into xorl clc mov scas or pop mov push xor push and ret lds ljmp adc jne cmp mov mov aam pushf lock leave pop ret xor bound pminub add xlat mov mov lods mov xor add jne insl sub jg pop rorb push jbe add clc add std cmp icebp sbb inc cmpsl dec adc (bad) and int and jg xchg inc adc xor test (bad) pop push push fidiv call pop cs sub adc (bad) jecxz mov iret xor adc out daa add cmp cmp inc xor mov movsb in mov je sub je scas pop xchg mov outsl mov sbb fstpt sub arpl lock pusha dec push mov jmp add lock dec push push ja jns (bad) push and shr dec mov pop fadds jo gs sub insl test mov jb loopew mov mov xor lods dec mov add mov xchg add pop lods sub add sbb dec jbe push sbb pop pop adc lcall stc mov outsl cli cmpb pop dec jne (bad) enter rep addr16 dec sub xchg fisub out jg adc mov lret jle push leave jo stos mov dec inc lret jbe adc jecxz into sub jbe into in push stos pop hlt pop mov adc outsl pop test mov inc cmp repz push sub shl push adc or insl add sti pop sarl mov ljmp adc leave aaa fsubs rcll cmp pushf mov mov push andb mov fiaddl push mov test inc cltd shrb cld mov mov cmpl cmc pop jge jle (bad) rcll cmp imul bound (bad) clc pop out mov dec sbb cltd mov loopne scas jmp aaa cmp mov rcrb add std or xlat out shll arpl pop fwait xlat push lcall add adc pop sub std int3 adc inc sbb mov (bad) pop or and js dec cmp stos sbb add frstor std push out cwtl cwtl push loope std iret cmp js pop sbb sub mov dec fadds arpl or sub push sub cli aaa xchg (bad) inc das cwtl pop mov push push in mov xor dec outsl mov sub jp pop in mov and push mov imulb add or adc jecxz (bad) push xlat mov adc (bad) pop popf push inc cmpsb enter adcl lcall push mov jmp aam iret movb rorl rclb xchg cmp jno add mov negl xchg jae fcmovnu sarl xchg fidivr pusha stos out mov cltd jns imul push inc inc icebp lods ljmp adc cld loope inc sbb dec push dec lcall (bad) fcompl and xor xchg jns lods insl lahf adc cmp (bad) adc movsb pop lahf aad jno gs xchg test sti rorb aaa mov cmp adc mov data16 or lahf out push or lock dec into xor imul (bad) out inc dec andb sub imul inc mov cwtl mov pop and xchg mov fwait mov xchg pop pop popf push jae sbb inc jmp inc push add and popa jns movsl sbb pusha push pop push into mov push dec mov mov push mov loop fnstcw lahf inc sub push mov inc push inc divl adc leave or push fisubr call or mov jb dec data16 dec pop movsl sub push cmp decb std dec jmp (bad) fldl dec mov andb fcoml pop mul dec dec rcrl and mov ret sbb lret out sub jb bound pop cmp lods push adc mov xor sub pusha mov ljmp xor jle stc (bad) pop xor xchg inc jle leave aaa jle push sub adc mov icebp push gs shl (bad) pop test icebp adc xchg lods inc (bad) fisttpll push out lcall out inc aaa or cmp sbb pop inc sbb lret incb sub insl stos lock pop lods jno push mov (bad) outsl rorb push sahf sub lea mov xchg push ja or hlt (bad) mov dec js loope nop jno sub aam sbb pop aam loopne je mov hlt mov outsl cmp pop inc adc in (bad) xchg ja add lods adc xor or ficompl popa mov imul dec sbb jno fcom das and test movsl dec mov xchg push cmpsl cmp test out sbb into add call je dec mov out mov cs ljmp adc daa shlb (bad) adc dec mov dec jne mov xchg (bad) (bad) xor dec lods xchg and rcrw ret sub mov xlat je pop (bad) xor fiadd and rcll (bad) sti cmp or push cmpsb mov repnz inc test movsl mov or pop out inc xchg je imul mov into push mov shr lds pop imul jge subl adc and jg cmpsb mov and and (bad) mov icebp add lea or cmp lds (bad) leave and negl pushf mov push sub xorb push out movsb in inc jb stos insb mov inc mov test mov cmc push cmp adc lds sbb inc lret dec (bad) mov in fisttp call inc mov ret sub fs add sbb xchg popf stos (bad) jb rolb and hlt push (bad) lret jnp movsb xor in stos mov sbb (bad) js mov xchg notb adc aas scas jb mov stos shll mov inc lea mov mov and add push cmp fsubs ss test inc jmp cmp jl inc mov mov dec add icebp inc lock sub ss and aas sub pusha xlat xchg add data16 and (bad) shlb fwait cmp mov sbb mov mov adc sub mov dec inc incb cmc in pop mov cmp in fisubl adc mov jno and push jle sbb or jl dec add add push cmpl aaa cmp pushf mov sbb (bad) idiv rdtsc inc out cld (bad) push daa add and (bad) fsubl or jl lods xor jecxz cmp out cltd jmp rorb push movsl xchg mov dec fwait push jge movsb mov orb decb dec sub mov xchg adc pop sub sub add push in sub jno add or or ds mov push adc aas mov mov rolb cmpsl rorl xchg (bad) push ljmp enter push mov cltd movb mov jo and inc mov in cmc jnp mov jecxz or lret addr16 das pop gs sti sub stos fwait mov lret xor adc mov out in mov jns leave (bad) xchg mov inc scas cld sarl call cmpsl paddq sub ds mov jle jnp ss andb lea add dec std jp xor push dec bound faddp ss (bad) data16 adc outsb (bad) popa push jae jl out dec mov xor adc lds dec loopne (bad) jmp lods inc xor jmp pusha arpl in adc mov outsb xor repnz push mov jl lret fisttpl xor mov pop (bad) mov dec lcall outsb cs ret jb bound movsl mov stos lds loop cld jo hlt xchg pavgb dec (bad) hlt push loopne mov dec insb stc xor xchg jmp cltd or cmc (bad) push dec lcall fldcw jo xchg pop inc add hlt ds js mov test js inc scas ret arpl call fsts jae mov dec out (bad) (bad) lret pop cmc cmp cmpsl dec mov xchg in jge mov mov (bad) jae jecxz movsl or dec shrl sbb sbb sbb xchg out pusha push test setbe aam and out fwait (bad) mov mov outsl mov and notl daa jno aam xchg das (bad) repnz mov clc loopne sbbb and push out adc cmpsb stos loopne mov xchg push testl ss or aaa adc adc outsl ret dec or sub sub adc lods add mov lea int dec dec int mov push mov inc sub dec mov dec addr16 hlt mov mov bound dec std push rorb fcmove sub mov inc jle (bad) mov lods cwtl cmpsb lds int3 int3 and push aam add dec movsb repz inc out popf mov cmpsb sbb loopne adc aad fidivl das lods aas stos sbb jp hlt mov adc clc dec or cmp pop lret (bad) dec addb insl sbb insb js insl lods sbb into bnd xlat aas (bad) (bad) xor fs stc call lods cmp pop and inc inc and movsb or push jo mov sbb push mov test lea mov aas mov repz movsl push pop adc inc add mov aaa add cs sbb push in mov popa dec out mov outsb jecxz push (bad) dec pop pushf enter jp rolb push xor test std cli mov inc ret lret jo xchg xchg pop fnstsw (bad) mov sbb sub xchg (bad) xor hlt and (bad) dec sub mov fldcw pop xor cwtl jecxz,pt add jl in lock dec adc dec (bad) cmp cmp push sbb pop fldcw mov adc je dec inc (bad) pop sub fwait xor adc push mov (bad) stos push sub lcall inc mov dec inc mov out call daa arpl repnz addr16 lods aam mov (bad) fdivrl insl inc daa sbb pop outsb jle aam adc or push xchg jbe or xlat sbb dec xchg jmp into lds ss xor mov mov add push and int mov cmp cmpsl sub mov imul jle add push cmp dec jnp addr16 leave sbb aad (bad) lea cmp mov cwtl pop jno out dec add push int jecxz mov cmp test pop cwtl loop fmull int3 ds adc push and inc mov push stc sar dec aas add or loope in push cmp lret fs mov add cmp nop mov jno jne icebp or inc stos jbe mov nop dec (bad) aas ja (bad) mov mov pop fdivs (bad) jno sbb push ss mov inc mov push push cmpsb push mulb cmp lret sub sti popa bound ljmp xor imull fbstp pop scas cmp aad xor inc aas movsl movsl or sub inc xor mov data16 jo mov je scas icebp or push stc fs hlt or sbb hlt in iret arpl jb std adc sbb jp das jecxz stc out xchg inc lock loopne hlt rcll iret adc clc out mov ljmp and mov mov (bad) mov push pop adc adc ljmp push push adc loop insl and lea pop mov sbb into loop fstps sub jae add dec inc (bad) mul jp sbb sbb mov jl dec mov hlt test xchg (bad) add mov pop and repz dec inc jne out les xchg test dec int int3 loope cmp pop jne mov xchg rorb sbb addr16 ret pop cmp dec (bad) jno jb stos sub (bad) movsb mov es or mov adc and jo adc loope dec js in xchg test insb idivb inc mov dec (bad) dec lcall stc loop lods adc pop push out add mov bound adc mov sub jmp or and loope sbb xor sahf stos loop je scas mov into movsb lock jno movb repnz dec (bad) pcmpgtd sbb pop bswap loop mov cmp push in dec push mov iret push stos sub jbe xchg push adc xchg fwait fs or mov dec sarl (bad) sti (bad) push pop cmp jg or imulb fstl and data16 test inc por aad ss cmp rcrl shrb (bad) cmpsb push xchg push and and data16 dec je sbb mov ret sbb inc adc popa push je lret arpl ret cmp mov add popa inc inc leave in (bad) jb or push and es add or jae aaa loop jne movsl aaa sarb jnp (bad) or sub adc cmovbe bswap fwait mov out imul inc loopne bound mov mov push cmpsb scas int aad loop push and mov xchg fsts andl and jmp aas call lds pop push loop les js xor ret out leave pop mov (bad) int jbe stc rolb add sahf stc push addr16 sbb pop xchg dec add push inc sbb (bad) nop pop ss mov jbe adc call notb subb jmp xchg push mov inc sub sub ffreep cli clc out xchg mov xor arpl std and and roll jae in and ret pop outsb test cli fwait mov pop xchg xchg mov aas pop fisubrl sbb leave sbb push push xchg push into dec jg (bad) mov jne cmp push inc xor cs mov sbb popf scas fadd mov dec movsb aaa shrb mov sbb (bad) ficom lret dec dec sbb ret ss mov pop dec mov sbb cmp out sbb push cmp xchg stos pop pop cld ret or not insl mov cmp arpl js jmp push jle jp insb fsubrs test xlat ficom inc cmp repz idivl add repnz xor sub add insb popa pop and movsb icebp dec xchg lret gs or xor mov jl pop (bad) inc stc add (bad) mov fisttpl add dec pop sub jnp lods inc (bad) jbe mov mov pop shrl and shrl cmpsl mov push int jno scas xrelease nop out xor es gs lods xchg dec jmp jl jnp add mov out std arpl mov movsl shlw loopne movups mov pop test dec add push xor ss jle mov push push adc (bad) dec pop xor push push inc pop or movsb push xchg cltd xor movsb push test add (bad) rclb mov cmp push sbb mov (bad) test int3 mov lcall push pop rcpps and pop sub js jle push inc push bound loop clc sbb cmp test frstor mov dec inc or lret dec rcrl adc rolb adc popa xor mov jb pop jb addr16 popf (bad) fnstenv stos dec leave push dec mov pusha and cs xor add sub (bad) in out mov mov xor jns dec lods lcall adc inc mov cmp fisttpl in mov out ds dec outsb loopne sbb popa loope jp fldt pushf jecxz bound xor (bad) or stc stos inc sahf fadds sub (bad) out addr16 jno in adc push pop leave sbb stos ja,pt or scas gs or rolb or imull int3 loop pop jns jnp mov xchg push clc add or pop sbb mov mov imul test inc or aaa jnp inc daa scas out cmp dec lret xchg mov (bad) and fimull lock xchg ror jnp or repz mov and pusha inc mov ret jg movsl fcoml and pop rorb mov outsl dec cmc cmp mov push cld or scas adc jbe data16 sbb dec rcrl iret out test daa push fisubr sbb jno pop xchg popf mov lods ja jmp idivb pop fsts mov hlt mov dec fcmove and lock push subl aam add push xchg mov pusha jecxz cmpsb enter xor push add stc sbb cmp stc sub clc or jp and sbb xchg adc xchg push add cmp leave cmp roll outsl push lds lahf fdivrs add xchg loope mov cmp call std or and and lods cmpsb mov mov cmp sub in movsb sahf or add addr16 lock jno add inc mov loopne fadd jl jg and pop jno in inc in insb loop pavgb mov push mov add jns imul cmc inc in aam xchg cmp or and insl mov or push cmc repnz fcompl add adc std sub jl dec loope jmp aam jbe add cmp inc je call sub cmp ljmp imul out (bad) les inc xchg lds mov rcrl addr16 stos das pop (bad) cmp fistp andl jbe dec fldl xlat lret cmpsl xchg jg add sbb xchg jle imul cmp jp mov int3 js lods addr16 or gs adc sub inc ror shrb push shrl inc add or mov mov jne cmc sub cli outsb sbb or lds fdivr pop int3 pop mov push ljmp xor mov and xchg packuswb rcll cmpsb mov and add arpl add iret push jge scas js call jb scas out lea cmp movsb mov pop mov test outsl sub mov lods jge pusha or decb xchg cmc loope aad (bad) sub push call outsl scas inc push adc cltd lcall ret mull dec aam das cmp insb mov mov xchg cmp stc test repnz dec xchg mov loope push leave ljmp mov outsl xchg in pmaddwd inc jecxz sarl pop stos nop leave mov inc imul add dec ljmp out pop sub rclb pop sub sbb sbb lock dec lahf (bad) xor scas and inc push pop pop (bad) (bad) push nop inc ret xor push pop inc les lods int cs outsb ret loope (bad) hlt imul cmp jl jecxz mov cwtl push xchg xor mov adc mov insb cltd add (bad) inc movsl ret xchg jp push push sti mov fildl sbb inc (bad) fldenv les pushf cmp fsubrl ret sbb iret or or mov push fidivr push lock scas pop xor in mov lods (bad) aaa incb inc int3 pop mov jp (bad) xlat adc dec lahf inc adc mov js xor iret push jns imul add imul in xor (bad) pop sub mov xor push scas scas outsb cltd jo movsb cld lea inc lret or icebp test and or pop addr16 and and add adc mov mov jl push mov inc sbb sbb movsb icebp out ja pop aam mov in xchg fisubrl xchg dec mov push and and aaa lahf sub add repz fdivrs pop addr16 inc push cmp daa aad jle jo mov es xchg push cmp (bad) jecxz push cld mov mov push xor jno push push mov lret add (bad) ja sarl ret jge (bad) repz mov clc sub jmp ficoml lock das cltd out pop or insb cmp sub int3 in fbstp lods jnp dec mov popa mov (bad) push lahf lret pop inc xor insl daa out clc inc fnop lahf iret jp shrl xor js dec das adc xor mov add lea stos pop xchg inc fwait cmp inc shll dec or daa aaa cli insl lea hlt fdivrl push gs mov test rclb das mov add mov inc aam outsl roll dec fld jb repnz push jp lahf (bad) adc out jge jne mov pushl popf lods push push not stos inc rcrb mov shl cmp (bad) fbstp jecxz cmpsl int3 push lods mov out fcomp jp movsb (bad) push fsubl lcall int jne addr16 cld arpl cs pop mov push cmpsb mov ret stos inc arpl arpl jmp cmpsl push add lods loope mov xchg adc or sbb test xchg stc sub mov (bad) ret hlt dec jbe sbb out pop cmp imul pop sub jmp rcl dec dec fisttpll and shl mov leave or add mov mov push mov bound or pushf jl jbe pop jae sbb push lods in sbb xchg sbb inc add cltd jno sbb sbb inc lock adc sbb inc adc arpl lret push ljmp cmp pop in movsl sub lahf je inc popf in sbb les ss mov out mov pop cli xchg ja xchg sbb jmp add jns (bad) adc push xor out fwait xchg iret lahf movsb fisubl cmp inc xchg cmp aam cmp je (bad) bound pop mov add jne inc je sub mov mov repz push mov addr16 fyl2xp1 push data16 insl call (bad) aaa xchg cmc xlat inc ret pop mov loopne xchg lock cltd ficompl and or mov cmp fwait pop mov lcall dec and das mov jp,pn cmpxchg loope push aas push push and mov mov sbbl iret cwtl dec push cmp out push xchg popa test in (bad) lcall hlt jns mov xchg (bad) dec lcall xchg repnz incb adc pop sbb clc jbe lods sbb mov out jg cltd pop jae js scas sbb inc ja nop push inc pop jmp adc fcmovbe sub xor bsf cmc mov cmp (bad) int cltd js add (bad) jg idiv mov std sub popa jo mov in sbb int js pop aam or out sbb xchg xlat leave rolb jb inc jp mov out dec mov aaa adc iretw leave inc leave outsl dec test add jmp aas lcall sbb insl mov leave stos jmp fcompl dec test (bad) ss jo mov sbb xor dec mov lcall inc outsl pop jl sbb mov sbbb mov dec repz jmp mov pop and mov icebp cmp mov pop cli out imul lea mov jl or cmp dec test mov xor (bad) and mov push add pop xchg mov jmp xchg pop and std jle lahf sbb out mov lods lods jno movsl or popf fcomps mov push pop daa in out repnz and or lock pop dec xlat insl mov add push adc push inc inc sbb sbb sbb or pop xchg xchg cmc inc scas xchg mov data16 cmp repnz ret das mov mov cld sub (bad) fdivrp scas adc xor adc imul (bad) loop xor cwtl (bad) mov shlb mov adc stos sbb push mov fstps mov pop xor sbb in lret adc dec and frstor hlt rorb popf fucomp fistl add (bad) jns sbb lret movsl cmp mov (bad) cmpsl sub jno imul out pop insl pop stc mov mov xor ja iret int and inc add push lods ret test xorb mov xor fidivrl jmp jb mov dec and pop pop dec fidivrl inc cmp adc mov icebp push jo mov add pop push das cmp fsubrs and jg push cmp mov popa pop mov out mov jns (bad) push cmp jl xor test mov push xchg xor mov and jno mov mov sahf dec dec mov ja pusha gs or push lret enter adc repnz movsl mov jbe je xchg test popw push leave pop andb sahf and and sbb xorl sbb das push pop gs add insb xlat imul mov mov clc jnp and (bad) ss mov lds divb lods ret test sbb les xchg push (bad) jne dec sub imul out jne cmp scas out inc icebp in adcb or adc mov scas (bad) cli add fs test sbb jle data16 jecxz (bad) sub repz lock jnp rclb add sub adc mov xlat mov int fptan imul cwtl jmp imull sahf popf sbb jmp in mov les mov les outsb daa cmp dec jnp aad push push lds sti xchg and (bad) data16 inc xchg out or dec insl test pop popf dec test pusha lcall ljmp and push jl xchg inc push pop xor sbb xchg mov es sbb pop mov inc es popl cmp mov xchg sub fimul bound iret inc insb jg and jp decb mov lds xor pop (bad) dec push xor dec in jp xchg stc mov adc (bad) jp icebp jno mov cmpsl addl dec mov movsl int sbb aas xchg dec adc add and or add inc cmp mov push xchg lea mov jno sub xchg xchg jne xor jecxz mov mov xor lea pop test mov xchg jb lods in lea jno movb movsb loopne cltd adc pop leave mov xor mov dec repz adc ret dec jo notb cwtl cs add (bad) (bad) (bad) in rcr add inc dec and cltd add mov or out stc les fnstcw daa or into pop (bad) push mov out adc ret xchg sbb cld (bad) ret (bad) pop bnd cs jle and popa or repnz rol (bad) and fstl ja jae adc jns inc icebp ja adc lret cmp sti scas xor jo sbb pop mov rcll push in rcrb add mov call inc rcll push int faddl stos mov xlat dec lds data16 inc daa test cltd mov sarl loope lods sbb cwtl inc roll movsl repz ss enter or pusha xor jg mov mov outsl clc and cltd push jg out cmpsl pusha test add jbe mov push jl fs cmp sub std incb dec lock cld ljmp inc sbb les xchg sbb mov jp cmp imull outsl push (bad) sbb jb ss in iret clc ret mov in and cltd push push pop cmpsb inc push data16 fsubr pop push ja sahf sbb outsl jp fildll pop sbb cwtl mov lahf mov xchg adc and mov add xor sub sbb (bad) into mov icebp lods xchg inc mov (bad) cmpsl mov mov std (bad) and adc outsl or mov mov insb cmpsl or lods (bad) into (bad) mov cwtl ja and in out cmp cmp lret push jns mov cmp jl add cltd (bad) dec xor test call sub jle push fiadd push (bad) insb jbe cmpsb fsts cmpsb (bad) mov int3 lods and fstps and mov int3 mov mov mov push mov and repz negl mov es arpl jbe stos add sbb scas fwait push mov out data16 xchg sbb fisubrl dec imul mov mov cmpsl ficom mov mov (bad) jecxz imul outsl xchg push add fsubr adc shrl (bad) and xchg add ret mov pop and pop and es call movsb (bad) out cmp rcll sub shlb stos jnp aam mov pop subl or adc addl daa lahf fcoms std pop add jl scas push add pop mov push and pop pop xlat cmpsb int divb or jmp fdiv movsb insb xchg addr16 mov dec jle pop ficom (bad) loopne push jecxz es sbbl lcall cmp stc cmp arpl and std addr16 cmp pop icebp movb (bad) adc and pop mov iret and mov addl mov das mov movsl fbld loop lret and ja leave and das insb fucomp push mov and push or nop sbb xchg into sub je xchg inc fsubrl or lcall and inc (bad) js sbb shll out and inc fidivl adc xchg mov xchg out sti ret cmpl xor (bad) ltr insl jle repz xor mov xor push or xor push lock lret popf xchg pop sub mov inc testl ret jg fistp mov inc in movsb dec outsl push cmp ss lcall outsb out aaa ljmp xchg imul int cltd adc sbb int arpl out sbb bound dec addr16 lahf lahf (bad) sbb xchg mov or das lcall sub sbb mov xchg fwait xor scas mov cmpsb push cs outsb jecxz jmp cwtl mov xchg es mov push stos ret fidivl fiaddl idiv out push fnsave out sahf dec adc and push xor aas aad or or movsb cmp clc mov das out cmpl mov testl xchg loop xchg js add mov add dec out aaa (bad) sub xor int3 and out std (bad) repnz mov xor or aaa lret mov lcall ss cmp inc dec aaa fadds push popf push test pop aad fstp pop xor das stos pop mov jns or aam mov mov mov outsl call leave push mov jle js inc cs or outsl push add xchg and cs jb pop sbb ljmp outsl add xchg (bad) sub in xor pop icebp push sbb cmc jno shll adc mov push das xor push ja mov jg mov adc loop cmp test jo int3 push sub and and (bad) fsubl icebp jno bound and push sbb inc or ret test and push inc repz fsubr out test mov sbb or je pop ljmp jns sarb fwait jg push xor leave jnp test cmp fsubrs mov call xor aas jmp jno inc and movsl cli aad out hlt inc mov sti std addl dec xlat sub dec movsb movsb xor lds pushf cmpsl dec movsb cmp inc int3 loope lds inc and or fildl subl test and or push lock icebp pop mov xchg in cmpsl push rep lea xlat pop xchg pop push xchg xor xchg inc lock xor (bad) jbe dec movsb inc fmulp cmpsl or aaa stos clc and dec jb pop adc mov orl push push sub bound loop sbb es mov shll repnz sbb popf rcrl popa push daa popf or push stos xchg pop mov add sub xchg sahf rolb pop sahf sub mov sbb repnz iret repz les push jnp sbb pushf es push shrl sbb dec push push jle in imul neg dec inc jo jno les cmp fisub dec mov fildl adc (bad) or hlt jo xchg test fldl imul test mov xchg insl loope popf mov push adcb lock mov inc push jb jne repz mov dec pop cld mov or dec popf jo pop mov iret or outsb loope fcmovnu jo or lret outsl inc xor dec sub (bad) ss jmp out jno xchg mov emms aad and lcall or in dec pop repnz push or lds jo mov adc popa pushf add loope arpl adc mov cmpsb (bad) jne mov test retw dec xor sbbl rep mov scas pusha mov mov cmpsl shrl rcrl insb lea fs xchg sub lret cmp cld cs pop fcoms pop pusha pop pop arpl add lahf fnstcw pushf sbb or ret inc aaa jae lret cld pop gs icebp repnz fcoml loopne nop loopne dec jae (bad) fistpll pop mov stos dec divb cmpsb rorb xor ds out int or push jmp pop fwait int dec cmpsl test je xchg xor arpl stc xor and mov push dec data16 push scas jl sub cs fildll repz jl popf fstpl xor dec sbb arpl int3 jp adc stc add xor loop sub lahf inc cld pop arpl stos iret dec loope push and dec push mov lea in pop jb xor (bad) fwait es fiaddl xchg mov std adc pusha push pop dec imul cmp xor enter loop jle jmp repz xchg mov or or aad add sti pop iret mov add out add push sti test out cmpsb aam mov cs scas jmp das mov push xchg (bad) jmp cwtl jns mov test xchg xchg out insb fistpll aad mov adc fldl loopne mov hlt sti jns pop push int3 and daa out es data16 inc insl cmp leave mov out add andl outsl inc jmp xchg push and xchg dec fwait push fnsave inc std fldenv cmp cmp push mov cmpsb fdivrp sti jb pusha sub dec outsl cmpsl pop mov cli dec lods cmp sbb sti test ja lods push ret mov out pushf cmpsl out pop cmp sbb cmp mov lret inc mov xorl jg xor arpl clc sub rcrb adc sub pusha and arpl aaa test mov bound mov shll inc jns out daa pop add (bad) fimull test sub add dec arpl int sub inc mov das jne add test xchg hlt mov in mov rcrb lcall cltd stos jns fs xor das (bad) stc (bad) orb mov mov jo sarl sbb xchg push jg push inc mov xchg pushf cmp jl lods stos push icebp insl inc sub inc dec or lahf loop xor cmpsl xor inc add and pop out insb pop xchg sbb mov jp xor mov mov lock and int leave xor push jnp sub add mov movl mov cmp mov push int sbb cmp pusha mov out and pop sub xor cmp sub outsl aas pop out push dec adcl idivb call jmp lret push fs lock (bad) mov push mov cmp testl js jg rclb (bad) aaa sub dec sbb ret das (bad) movsl cs lret push (bad) in inc xor int3 addr16 jge (bad) icebp lret std (bad) fdivs adc rcrb pop das dec mov xor fmulp leave leave fidivl int and lret cmp movsb jns into inc scas jnp cmp mov xor sbb add or sbb jmp dec popa xchg pop imul dec lds movsl clc imul cli movb lret adc (bad) lret push push (bad) dec xorl in pop cmp adc cmc cld stc out jb sub jmp sahf enter fimull xor je jl xor cmp sahf mov dec xlat test add mov sub cmpsl loop sub ret sbb mov int mov stos cmc das out jb mov mov cmp mov shll cmp int (bad) lea (bad) hlt sahf adc popa ret jmp loop in sub es mov or shlb jno (bad) out xchg lret in repz aaa mov in test scas push cmpsl fcmovnb adcl popf scas out or mov testl mul jne ds in cwtl push sbb cltd fwait js aas hlt fmul push push inc push ja push aas cmp ja cmpsb cmpsb add in inc push leave cmp ljmp daa dec push sbb (bad) int jb xchg in jl (bad) mov fimul xchg ljmp add imul mov lods xchg mov jno inc xor test sub or stos or lahf fcomi xchg jecxz jmp movsl mov (bad) cmpsl outsb sbb and mov icebp rcr out popa xchg cmpsl (bad) iret mov cld xlat rclb cli pop imul test adc and jmp call adc cmp pop push inc movsl mov dec dec int fistp mov es hlt (bad) jge dec js mov add push mov xor add insl add push cmpsb and jno mov loop cmpsl popa fldt bnd int ret je outsb loope adc inc dec mov cli inc jmp mov xchg lret push add dec xchg stc jl insl xor mov push sar cmpsb adc xchg popa fcoms es jge mov or movsb inc das fldenv pop rcrl or mov push bound test push jbe cld fidivr or xlat (bad) test jge fisttp cmpsl lock in and repnz lret mov push cs sarb sti inc das loop pop xchg xchg adc and or pop loope aaa fs divl mov roll pop pop pushl and or aaa out inc xor lret jl pop jb mov cmp nop jge xchg sti xchg mov adc push (bad) adc sbb in push pop pop pop loope jns (bad) cld (bad) repz pop cmc or cmp sub jb gs pop xchg movsb loopne fcoms mov adc test adc xchg push add lods (bad) mov fimull fistpll and push mov test cmpsl scas daa and xchg les imul xchg fimull mov int mov orb jg adc cmp inc mov sbb xchg lea out les dec xchg in nop call xchg fxch sub (bad) cmp dec push xchg push inc stos cs add jg lret add loope and jg mov jp bound in addr16 pop fisubr cwtl das in jae ss sub pop insb mov lcall outsl shl hlt ljmp inc xchg cmpsb sbbl adc inc inc xlat fidiv xchg aam lea xchg push test cmp je mov roll repz ss je movsb popa mov jo rolb cmp cmp and test mov out fsubrl pop jg mov cmp icebp mov bound mov mov xor test mov jbe push fisub adc stos movsb pop sub pop fstps (bad) ja adc outsl sbbl inc pop testl pop xlat mov mov loopne pop xor or cmp sbb adc ret pusha lret cltd jb lahf xlat jb mov pop dec pop xchg cmpb adc in (bad) in (bad) lods sbb scas xchg insl and adc (bad) cltd push pop xchg scas dec push jns cwtl cmp aaa mov xchg rcrb cmpsl push mov iret into scas mov data16 add sub push cmp xchg or mov add rclb cmp jle movsb pop push xchg inc mov cmp cld pop outsb and outsl add lret jbe dec loope rcll cmp scas rcr ds xchg sbb popa out fidiv shl xchg cmp cmp out out inc fstl sub leave pusha stos imul jns xchg mov out mov or test mov push (bad) ret sub jecxz std test cmp cltd jl and movsl pop mov sub rcll mov add jbe lock mov test outsb jns nop and stos pop sbb hlt mov mov mov int jns shrb into (bad) outsb xchg leave ret cs mov daa mov ja jmp rorl or insb jb out cmp (bad) (bad) testl push test mov repnz popa mov jae stos mov lds mov ss xor movsl pusha loop cwtl push sbb mov fwait and jnp cli inc sbb adc cmc sbb lea rcrl test cltd test push mov (bad) int loop fwait adc stc push in cmp repz aaa scas scas outsl aam stos and add mov test lds add add iret adc jecxz decb in mov imul aas add add outsl movsb insb cltd sbb cmp hlt outsl jmp fldl or mov loopne in cmp mov fnop add aam and iret mov sub fcoml cs fdivrs xor sbb cmp rcrl stc xchg dec mov adc (bad) and mov out (bad) xor test outsb or mov jnp or xor gs imul shrl lcall lret inc jg push lods cmp push cld mov inc jmp jmp xchg cld test lods or scas aaa sbb (bad) js mov jae adc mov pop sbb iret sbb inc xor les and sub dec and movsb faddl jne sbb mov clc lahf (bad) mov stos inc (bad) in jo cmp hlt loop rolb insb push pop xchg inc repz out jg jmp fild cmp pop ds push and pushf inc arpl int3 mov (bad) sub and mov sub es mov xchg and out jecxz in ds cld (bad) jp cmp fcomps jae add sarl sub scas sub dec mov cld test sub aam mov sbb jle test cmp (bad) int cmp push (bad) mov ja cwtl push cmp lret mov out pushf sbb leave aad dec lcall add pop mov fist jmp (bad) fs scas adc mov dec adc repz mov insl mov loop adc outsb loopne jb push stos ret mov addr16 sub xchg add push lret in sub loop sbb in pop jle cs jge xchg push repnz pop mov or push cmp mov push movsl hlt add xchg or lret mov dec or adc roll mov push xor dec dec aaa mov test mov cltd hlt jmp fucomi rolb or mov ds sub or movsl jl push leave or dec xlat fadd push hlt loope xor pop std or dec jae mov psllw adc aaa jp jle push jge mov mov subl leave data16 mov mov pushf lods inc (bad) (bad) mov aam jno pushf fwait adc add mov mov and iret mov negb or xor push add int3 add call push xchg movsb sub pop lcall fs ficoml js pop pushf movsb mov push fldcw insb inc cli insl and sahf fs mov and shrl mov and iret mov cmpsb xchg mov rorl (bad) mov sahf (bad) xchg adc xor fwait and jns stc sub test jg mov (bad) int fs rep jmp stos cmpsl ret dec nop in mov stc xor mov sub or call lret roll mov push lret pop fs sahf cmp jbe sahf jo push aas stc out and pop je in xor dec (bad) ja xor add ljmp xchg popa test or lahf test mov bound popa sbb and fs and fnstenv (bad) rorb and wrmsr in jno and popf call shr sub mov push adcl or sbb push shrb aaa (bad) hlt and (bad) repnz mov (bad) cmc pop (bad) xchg cli lea dec jae push shl sahf ljmp push stos nop push cs sub aas stos (bad) mov sbb mov add mov pop addl add mov dec dec aaa popf cmp jmp loopne dec fdivr and xor mov sub movsl pop dec pinsrw dec clc hlt out dec cmp xchg push jmp mov mov pushf icebp loopne xchg sbb jbe std xor adc mov cmp push dec js incb out enter xchg test xor fwait lea mov dec xor in sbb into cmp mov mov xchg addl xor mov mov mov (bad) and push lcall gs mov jae (bad) dec and cmp cmpsl rcr and pop pop push mov bound sbb or and fnstsw lds push orl fimul adc fs mov push aad jno sbb fadds cmp sbb outsl cmp hlt popf sbb out loop and jb and cmc int jbe mov adc pop jbe lcall push lock imul std iret in popa (bad) out pop test dec cmc pop or adc dec inc lods push cwtl pop movsb xchg inc fwait dec mov xor aas mov push jg pop fdivrs and lea leave or or mov in mov mov insb in push repz inc fldl inc inc xchg pop (bad) iret adc push mov pop iret icebp dec sbb push pop call enter pusha cmp cmp push add fidiv jae loop mov xorl add fdivrs (bad) mov arpl roll add mov pushl mov in out or lcall cli fbstp fwait push insb push or das or scas into fsubs sub sub sti or jge mov ret push bound pushf cmp (bad) mov cld mov pop dec add ja push orl cs adc cmp jge push add icebp imul dec mov adc dec xor iret mov pop xor cs dec jg sub add mov (bad) inc pusha test mov jl mov pop cmp inc cmpsb out in jge mov jno cmpsb movsl loope inc jae cmc ret int3 iret in stos fsubs aam xchg pop and es mov pop (bad) sub into mov cmp xor ror call outsl jne dec roll (bad) (bad) aam cmp repz inc adc aam pop (bad) in (bad) cmc stc imul sbb xor mov ret mov xchg fcmovb xor dec mov or xor or sub outsb mov adc mov sub inc inc cs (bad) mov mov cmp inc test pop out shlb cli idivb aad insl push mov stos fcoml jbe movsb addl jmp outsb push push mov in scas addr16 daa out mov adc jno in jns push int dec inc lods sub outsl cmpsb imul ss xlat jns movsb add mov cmpsb gs fistl jb push mov fstpl xchg lahf fnsave sub movsb (bad) pop in sbb fs pop test ret addr16 sub jg fcoms ficom jno aas xor push out aas sbb test mov pop ds add push fisubr sbbl call movsb or out push adc mov jns lea ja dec mov adc bound std loopne cli and lahf (bad) jns mov mov les xor and stos outsb push lret jle adc jle inc dec mov sti mov adc gs xor (bad) mov or mov xor mov ss push std adc and push gs cmp mov sbb repnz dec sbbb std imul fsubrs aas inc aad mov xor pop repnz adc xor xor xchg dec mov stc sbb (bad) in mov mov cmp push ljmp scas outsb loop mov pop mov xor push jmp cli pop cltd xchg lcall jle negl or in cltd mov dec sub arpl inc push sbb push ret or pop push jmp andb sbb mov adc xor sub add ret ss adc (bad) incl in das shrb mov jl sahf add push dec popa sbb add or and or imull movsb jae sub cmp jnp std lahf mov sahf sbb mov ret cltd and push and icebp pop jb add (bad) or inc pop (bad) js and (bad) cmp dec cmovnp popa es jno adc test aam loop lods push jnp mov or xchg shl add adc in adc adc jne cmp popa in adc xchg or insb hlt mov mov sbb and (bad) mov pcmpeqb movsb ds rol mov (bad) xor jns and or sti flds insb loop inc (bad) sub jns dec int mulb js sbb in cmp sti jl and hlt bound fimul fwait cwtl jecxz sti lock mov cli inc sbb pop sbb add and jge fnstcw add (bad) jae out sub aaa vmovlpd or xchg inc ret inc mov mov ja mov jns sbb fwait lret adc mov (bad) fdiv add sbb push mov repnz cmp or adcb (bad) repnz imul xchg adc push ret jnp cltd and mov sbb xor addr16 out mov push jmp lods pop scas push mov mov or aaa add push inc mov mov insl mov xchg push jmp sub dec adc xor nop bound bound inc mov add mov dec fisttp inc outsl dec inc adc xor es and mov sub dec push cld (bad) mov loopne fcomps inc cli sub loopne pop out jecxz xor inc ret lods cmp addr16 mov jns andl shlb and addr16 (bad) push and das lea jle je mov mov sbb aad pop jmp xchg (bad) stos sub popf popf out push add push sbb mov cmp lret cltd jge cmpsb je (bad) mov add pushf push push sub (bad) (bad) notb mov lock outsl mov pop dec inc je jnp test lahf cmp or mov dec cmp rcrl mov push sbb sub dec cmp out pushf adc sahf push leave sbb mov inc inc dec hlt aas jo sbb imulb inc orl (bad) sar jne mov cwtl fucomp xchg mov jne adc xor js insl push stos lods add lods shlb cltd lods out hlt sar dec inc enter push shrl addb jo lods lock sbb jne int3 test ret mov cmpsl mov inc mov sub cmp cld es dec movnti cmp sti and aaa xor xchg jmp dec gs sub cmp mov hlt idivb xchg int3 xchg xor inc adc cli sub iret dec insb fcomp xor mov mov cmp pop sub hlt imul jno fcoml loopne dec es pushf sbb or (bad) push or jo mov and adc aas mov cmp call pop xor jb xor pop rcrb xchg out dec icebp sarb mov imul cmpsl dec lods movsb pop call push push xor add dec pop cltd mov in dec ja mov pop ljmp push jb pop cmp imul into sti xor in idivb mov lock push dec (bad) xchg sar jb repz mov sub stos jecxz sbb out mov xchg decb insl aaa xchg hlt (bad) jnp inc es add mov mov es xor push (bad) jg push loope movsl (bad) jbe adc add mov xor stc adc xchg mov popf scas mulb add push cmpsb or aad stos lods push sbb jecxz jle sbb push jg inc jne popf gs inc jge movsb jle iret push jb sahf test fidiv and jae pop ficompl jbe fwait mov mov mov cmpsb mov cmc and iret or imulb mov fpatan cmpl jge mov xor mov les hlt test cmc pop inc jne (bad) xchg enter sub xrelease hlt (bad) sar aaa mov cld gs in decb mov pop push negl loope mov imul pop or fisttpl add mov pop lods jp push mov imul fnop fstpt sub add (bad) popf or jo lds test adc fstp mov rcl in jo rcrb mov push push mov inc in addr16 (bad) in (bad) and clc xchg xchg movsb jp push lcall pusha add mov mulb pop xchg dec sub (bad) lds aaa int3 jnp add pop adc inc inc movsb test (bad) adc (bad) int jg pop inc lret cmpsl ja fnstsw jnp test lods mov sub mov sub sbb jmp and mov iret ret xchg dec xchg mov test jbe sahf lret inc lcall mov sbb or mov cmpsb mov std lds and pop cmp cmp mov (bad) icebp cmpsb (bad) int rclb loope ss mov cwtl xchg xor fwait call or ja jecxz pusha sbbl xchg jl aas pop or fdivrl ljmp insl aad addr16 push mov jb dec sbb sub dec icebp adc sub sbb scas clc adc gs jns jns add (bad) daa (bad) adc push leave add leave pop pop aas ficoml fisubl jns aad lock xor (bad) (bad) shl and cmp outsl pop sbb mov (bad) pop inc (bad) mov mov insb lock out out sbb and das out pop lret (bad) jo (bad) xor fsubrl stc cmpsl inc and rclb sub xchg mov sub and adc cmp mov ss jns add mov mov or je in mov into mov dec test rorl mov outsb scas xchg jecxz (bad) xchg in test test daa push sbb or loopne sub jmp nop mov daa sbb rorl stos je cld (bad) mov pop pop jle hlt lods fiadd addb rcrb jo shrl or fbld repz imul lds pop or mov out xchg xchg mov adc (bad) pop int mov nop pop mov dec adc jle mov int add fs xlat jo aad jl push into (bad) adc mov xor rcrb push inc or pushf add mov js in pcmpeqw loope cmp xchg jg push out pusha add imul sbb repz jl fbstp push jge leave or insb and mov pop mov and cmp add sub rcrb jae add add loopne adc aad sub add push or inc daa lret xor lods push mov rclb pop les call push pop jbe in and outsb in dec or (bad) xor cmp ljmp addr16 in pop push and sub push je xlat out test sbb sub xor scas push imul sbb test int sub gs pop push xchg out fcom loopne push aas rcl ret icebp loope mov js mov jge hlt jmp aas pop push out mov shr jle sahf cli mov xor sub test ja jg sub loopne adc pushf jb ljmp push fwait xchg cld jmp sub dec into int3 xor dec pop sbb inc cs dec xor jp fist popf pop fistp shrb loop dec cltd xor loope jle es xor lea or sub jg (bad) jns lods add popf adc sbb and in lods lcall in or out ss movsb hlt push cmc in mov mov notb jno call push xor mov leave inc push mov insl pop lahf fwait sub cmpsb pushaw or (bad) repnz lret jmp pop sub hlt push mov inc add push sub pop enter mov sub pop xchg shll leave lret test inc aas jg mov in mov or dec (bad) lods imul movsb sub and ficom push dec (bad) fcomps lds lcall and inc push mov cmp inc pop out or fnstsw lret inc das sub push lea xchg add fisttpl int sub lret jp add lock inc (bad) fbstp mov push out cmovs repnz stos xchg nop clc enter mov call push daa push lea mov stos pop pop pusha in scas mov xchg call sahf lret mov jmp sbb dec push cmc leave rorb sub pusha xchg pop js add jns cmp lret dec sbb or inc mov xchg lret cltd pop jb pop push lahf xchg xchg jnp inc mov add mov jmp dec sbbl jb jnp js aad lea outsl sub pop xchg hlt inc jo jo pusha mov push lret adc idiv jp pop add fidivr imul sbb pop xor sbb stos lcall mov and (bad) inc ja lods and or arpl test out push ret (bad) outsl (bad) (bad) jae (bad) add mov lods in or xor repnz push in pop aaa enter cmc cmp pop pop jle ret mov sub pop pop push daa and int3 lods je mov scas pcmpeqw sub call mov mov jle adc dec jnp les adcb dec andl test xchg and icebp push push adc add sbb loope fistl push add dec es dec mov (bad) mov ret dec dec dec pop sub or fwait sub lea fucomp sub das jp xor mov int3 pop pushf fs dec push push outsl pop and jne sbb mov pop imul andb adc push pop and faddl and in mov adc push push sub xor imul scas enter out mov fsub push sbb ss (bad) mov dec xlat push cmp mov hlt dec cmpsl insl int inc or and icebp xor fdiv mov jno inc xchg xor xor mov adc adc pop xlat inc jb fnstcw int jl int3 inc push add iret push mov ss adc out dec fwait cwtl dec mov sub sbb inc leave inc loop inc and push jp jo es bound shlb mov mov cmp faddl sub icebp int3 daa jle sarb call in xchg rol jno bound sub nop push add popa xchg and in loop orps inc clc add je push idivb push add cmp cmp mov fdivs in das sbb lods lahf adc push scas mov pop and lret and sahf repnz (bad) inc push inc mov or mov mov pop inc push pop dec mov xchg mov in jne mov sbb pop jne in and adc imul (bad) loopne pop call cwtl mov (bad) shrl aaa pop hlt stc pop pop xchg stos sbb imul xlat cltd pop xor cmp ret andl mov inc push mov mov outsl push test jl push (bad) mov dec mov mov outsl es rolb mov sub xor push or add adc test and stos movsb sbb or jbe cbtw pusha jecxz call icebp insl sub stc mov das pushf push negb outsl lret mov mov jae push cmc push outsb gs adc xlat mov pop sub lcall int3 cmp lcall inc push in into xor dec cmpsb add fs sbb push scas cli sub lahf xchg ds push shll sahf (bad) out jecxz aas into cs sbb mov sahf xchg es mov (bad) popf jnp test add imul ss je xchg popa pop mov ret mov push jle sub repz shld push dec xor in pusha cld mov lret add or rclb outsb shll (bad) inc das mov negb sarb push xchg cs mov shl into inc xchg xchg or inc and and mov stc xlat and daa rclb aas sahf popf adc xchg loope idiv sbb cmp (bad) jb jno inc or xchg xcrypt-ecb cmpsl dec ja sub rcll push ljmp sub lods repnz and movl add mov cmp mov les pop in mov mov xchg repz inc ror cld sub les xor pop sub jmp stos sbb mulb loope push data16 int fildll test xchg mov xchg sub or clc or push jle insl xorl movsb incb or gs test sbb sub lret xchg dec lods les hlt movsl dec ds fldt add xor push adc jmp xlat jbe scas notb in push int3 scas add std mov scas push push inc (bad) xor out das xchg aam inc lods (bad) ljmp lea outsl es js outsb insb jbe pop or hlt and mov add out or jno and jbe pop and xchg add sbb adc pop sti icebp icebp push push movsl out cmpsl inc jp mov sahf or loopne fiaddl push dec push sub xor mov sub mov icebp jle adc jmp push cmp ret (bad) pop sub fist or (bad) xchg jb mov jle sub xchg mov loop bound cmp and int3 daa pop rcrl pop les cmp jmp popa mov bound push fidivl cmpsb movsl imull cmp lods push mov mov xchg loope ja daa stos xor ds lcall jmp jge push ret pop mov roll out xchg (bad) push jmp fs lret aam (bad) xlat mov and push jne,pt mov jbe pop std hlt xor outsl xor mov cmpsl shrl jno test adc jl jbe sahf mov cli loop adcl xchg imul iret js xchg xor loop sarb adc clc test or das lcall loope jl fwait pop cmp (bad) out fdivrl xor stos adc push test cmova test ret imul add mov (bad) loope pop pushf repnz xchg testb data16 enter mov (bad) adc add dec cmp xchg or test mov and daa fcoms (bad) in testb mov icebp aas push pop jae,pt fsts sbb lret mov or clc imul and jnp sbb dec xor sbb notl xor lahf mov out sub lock setno jo cs sbb ud1 mov hlt cmp repnz int3 (bad) ffree jmp ds rcll pusha pop daa lret mov add aaa clc test dec mov (bad) cwtl pop xor out mov rcl pop rol neg stos jmp adc xchg cld arpl xor lods mov dec orl fsts (bad) dec mov aam and out icebp scas push mov and inc js fwait inc fwait in (bad) mov nop scas pop inc push dec push cs or (bad) sbb (bad) (bad) inc mov jecxz mov xchg scas xchg mov jnp (bad) scas xchg (bad) mov add repz pop add test dec sub jne mov outsb dec int3 cmp fidivr push loopne movsl jle daa ss pushf outsl hlt cmpsl mov mov adc pop push mov adc push mov mov add sbb jle es xor lock sahf dec mov push popf divb pop push xchg sub xchg pop dec mov shr test mov dec out cmp adc nop daa xlat icebp icebp ret rorl idivl addb push mov imul jo ljmp fidivrl sub loop cmp mov adc or fcmovu xor outsl pop sbb ja push mov sbb mov les sub jno and xchg inc mov sarb fsubrl fldl aas dec cwtl pop ds xor push sbb iret (bad) rclb repz cmp mov adc jbe mov stos dec ret and xor jmp lcall test mov inc out cwtl and add andb punpckhbw add int3 mov out lods sysexit leave mov movsb mov cmc jle or in popf fcmove mov add jns aam lret mov push in push add (bad) mov or int3 jge jae jno outsb mov xor cs hlt mov and (bad) xor push std xor mov ja (bad) in out mov cld int sbb in add scas mov xchg lret inc jnp jno adc push xchg pop insb jge aad dec dec inc es (bad) ljmp test cmp and jmp lods adc insl nop mov cmp sbb stc and pop and jmp jl imul cmp imul xor fmuls pop mov mov gs jg (bad) js sbb add push faddl jmp test (bad) mov pop pusha dec jb rclb jne and mov lods cmp jne out pop out loope sahf or jo inc pushf cmp andl out sahf scas jmp pop ljmp dec loop hlt mov decb (bad) xor mov sbb cwtl push lods push sub mov std and push popf clc inc icebp mov pop xor repz cmp sbb (bad) ss dec mov xchg xorl xchg (bad) mov test push or loopne mov dec stos xchg mov idivl decl mov sbb jbe mov repnz jns out mov (bad) mov mov test adc js jne jecxz or cmpsb mov sti pop cmp fcompl stos outsl lahf mov lret aam mov pop popa xor nop and dec cmp andl mov cs je cs shl adc mov (bad) jb jge scas jns (bad) cmc (bad) push dec int3 mov scas ljmp dec xor lds pop jb rcrb push (bad) ret mov jb ret (bad) sti sarl adc repnz gs inc or add mov cmp (bad) xor sbb push stos jge loop imul mov pushf fwait dec in sbb movsl ds add icebp mov pop jae rorb shlb jg push (bad) dec stos sub fadds add (bad) lea adcl pop shrd inc ja in jmp enter je sbb mov jp xor sbb pop test les sarb sar xor outsl add sub popf jno pop dec ss sbb fdivl or rcl mov lods ss cmp jecxz stc std push aam inc sub test insl pop out enter imul and (bad) cmpsb pop shrb jge jge adc pop pushf test pop inc xor mov and mov in inc out bound xlat into sbb sub insl sbb popa (bad) pop cwtl push pop lods ret or pop mov rol sbb negl adc cli dec popf mov fcom inc and mov mov mov das cmp in jno,pn ret fnsave mov mov mov push test adc fnstcw xchg push adc icebp cs cmpsl xchg mov cmc outsb or jle push sbb or pop sbb lahf mov fisubl cmpsb sbb ss js jnp call dec mov mov jae adc mov add push loopne sbb jns xlat adcb lea jns jecxz call sbb ss lcall lret pop xor push xor or adcl enter fs push lds js pop test jg js int3 stos cltd sub loop pop mov cmp movsb cmp pop testb xchg cmp outsl mov arpl fadd adc pushf (bad) aam rcll fistpl push and mov ret jmp lea sbb mov ret inc mov and roll fsub push cmp lret sub and fstpt add repnz inc sahf bound (bad) (bad) jle mov or jae push jns lds mov xchg xchg iret mov ficomp stos arpl jg movsb jl cmpsb pusha fistpll sbb pop mov aad cmpsl fdivrl ds add (bad) inc dec lock fcmovne mov pop push sarb hlt cli mov loop add xchg mov xchg pop xchg push xchg imulb stos cmp jnp push push jns dec bound (bad) pop fdivrl iret pop jp ljmp or scas out xchg rcrl jl cs adc icebp outsb inc je inc xchg mov push push jge ja mov sub sbb mov push lret fnstcw jle iret in sbb jae movsb enter das fiaddl (bad) in xor pop orb hlt pop add adc dec mov mov and incl pop jnp repz stos xor pop iret or test pop jmp fcmovbe adc lret adcl sbb sub and in adc push fwait daa mov es inc dec roll inc dec jle xchg sbb sarb add xchg add jecxz call mov mov mov test test adc mulb pusha lret scas pop je mov jg (bad) ja (bad) jae lret inc fwait sub pop push dec and stos imul mov xchg sbb mov mov scas std sbb sbb sbb inc mov or mov mul push aad out mov (bad) xchg into iret imul inc (bad) jecxz pop dec xor (bad) call pop push sbb sub int sarb push and dec mov lods push push mov insl adc lret sub orl aaa pop arpl stc and push pop xlat jmp add add in loope jecxz or popf outsb mov imul and mov or addl bound adc sbb xor jge std shlb pushf pop pop lock or mov (bad) fdivrs add push adcl add call jecxz cld (bad) mov imul mov mov xor shlb loope add incl (bad) inc inc pushf pop fidivrl mov pushf mov ss mov repz movb or xchg and dec add mov negb outsb aas into in roll sub shll cmpsb lret clc cmpsb (bad) ss outsl icebp sub add adc dec outsb insl jp int adc mulb insl cli mov cltd stos push jp xchg xor scas cs mov inc xlat cmp loop shr ss mov add cmp mov mov bound (bad) in mov mov sub cmc pushf dec or sahf rcll or arpl (bad) in jge xchg mov or loop and or push ljmp mov clc bound data16 or adc pusha add cmp fs jp inc test sbb mov fiadd mov mov mov cmp mov pop mov push push hlt loope negl adc outsb daa and push push and sbb mov test clc outsl mov push mov aas mov sub test in mov xor or sub cwtl lods fdivr push (bad) out (bad) mov stos fistl and dec dec stc enter roll jmp sub rclb sub fdivrs sub pop aaa sub rorl ret popa in test dec jge xchg mov cwtl jo mov mov push gs rolb pop rcll xchg fimull in mov sub push shll outsl mov mov push sub jmp or xor jbe mulb or aad rcrl cmc fucomip addr16 pop xlat push out sub sbb into lret mov (bad) mov xchg xchg cmc add enter js xor xchg and sbb iret mov or mov push mov mov ret jnp insb (bad) movsl jo jae popa inc (bad) fadd ljmp and ror xorb aas scas lcall pop jns lret and out out adc dec xchg jo (bad) mov cmp pop push and push out sbb mov push cltd add inc inc sti int3 clc call jp adc push mov ret pop mov xchg (bad) std mov dec cmp jno mov add pop das adc in test cwtl jno jl dec push jb loopw test and xor sub dec stos jp push (bad) dec push dec lock insb mov jmp (bad) xor and repnz sub cs adc jns cltd clc xchg mov int3 test loopne xchg lods aaa dec mov mov push mov xor dec (bad) pop pushf mov pop or std xlat xor in add jmp mov xchg into es sub ret cmp repnz andb inc xchg push test std cmp add mov jno cmp cmpsl enter and lods (bad) jne and insl andl lods rcll outsl nop and ret dec add or mov sbb sbb sub xchg xchg pop sbb stc pop mov xchg rcl jle xor fs fwait lahf or out push cmp cmp out inc sbb (bad) adc sub jecxz add jns test sahf jg mov call jns in cli loopne add dec xlat iret or or jne sub add sub xchg cmpsl scas mov icebp fucomip lock fs jnp incb lcall int cmpsb xchg jl test mov cmp (bad) sbb push (bad) rcrb mov (bad) iret inc pop imul xor test rolb cmpsl scas jp jb adc cmp das cli addl xor cmp cmc xchg push fnop mov mov test mov (bad) cmp test sub daa scas addl aas push add cs mov shlb mov adc test js leave cmc cmp dec loope addr16 rorb mov rclb mov sub inc popa gs sar insl xchg pop cld pop mov push addr16 js dec push mov mov out cmp mov (bad) dec xchg iret cmp sahf sahf lret pop sbb test add scas aaa shrl mov lock mov popa outsb mov test fcoml lods cmp hlt mov std jno xor (bad) xchg stos cmpsb int3 push push xchg scas inc jle or dec cmp movsl loop roll jge daa dec mov push mov shrb adc jg sub imul add js jne cli daa jg test cli popa loopne icebp testl mov hlt mov jmp add sbb or inc movsl xor or leave fsubr jb or scas insl adcb jb xchg xchg fs lods push adc xchg in das aas (bad) or in xor push add push (bad) out mov sbb (bad) stos mov cmc std mov adc cmp cmp sub sub gs mov fcomps or adc je and in push adc push scas shrb (bad) sub movsb jle ja dec inc pop add arpl dec jo leave dec dec (bad) loope (bad) mov cmpsb out in out lcall xchg dec (bad) dec or in add test dec out and test jno xchg lods ret rol stc enter and sub outsl test dec mov mov aaa dec mov insb and or dec dec out xlat mov sub jno in sub push nop add jle push cltd popf pushf fldenv push (bad) call or inc hlt ljmp adc xlat les or cs jg (bad) adc in dec popf fstps xchg pop push xchg pushl arpl mov push test ficompl and xor xor xchg push test push dec popf test xchg xchg aaa mov ret clc inc mov mov popf xchg add addr16 in adc fstl mov fwait xor mov or rcr stc into test xchg nop sub inc mov mov or sti movsb in test movsb mov fldt adc in push push adc mov cli xchg push fdivs push add stc icebp and cmp dec loope dec pop fs pop icebp pop sub or push pop and scas into add enter pop inc xchg aas add inc or xlat pop mov pop add out inc test and push pop ficompl xchg add adc jle cmp sbb pusha adc sub out inc cmp push pop mull cmp daa cmp adc flds xlat and shlb nop aam inc loopne andl jp ja das ds sub cmpsb cmpsb xor (bad) fs xchg xor xchg cwtl sub xchg subl pop rcrl add mov jge adc nop mov dec jge nop arpl fisttp js cmp adc shrl loope insl outsb pop and mov pop mov cmpsb cmp mov jecxz adc loope std pop lds sbb enter fimul jns aas sbb inc xor addr16 pusha (bad) cmp scas mov adc fsubl cmpsb aas mov addr16 pop or inc aad addr16 ja xchg mov dec call into mov lcall jle xor repnz gs push sub push push pop cmpsl pop mov jp xchg in rorb cmpsb jl repnz lea fisubrl or jb pop les call test sub mov pop call sbb scas repz xchg pop call mov dec (bad) xor std (bad) lret xchg sbb xchg aad inc push ljmp mov insb fadds fistl std in (bad) cmpsb mov stos inc cwtl xor cmpsl fstpl xor stos add lcall idivl push addr16 adc fdivrs xchg in aam dec cmc mov push int3 push inc xor orb push mov test sub and (bad) push push xchg sbb jmp mov aam and push push pop stos movsl jp jmp xchg jnp mov inc hlt cmp inc test hlt movsb add test repz pop ret jo loopnew mov aam pop lret insl aaa ds and int iret mov psubq loop add je out outsl loop mov pop scas sub stos into (bad) pop xchg sbb sbb adc push fdivrl repz or pop repz movsb scas or (bad) lahf mov loop ds outsb out cmp movsb sbb lds inc out jmp inc dec jnp ljmp inc xchg xchg (bad) cmc dec fcom repz jbe arpl push pop sbb adc (bad) test test dec popa mov stc sub out mov cltd fst mov addr16 push pop aas bound xchg xchg int3 add sahf mov inc or and inc test jne loop cmp add mov mov cmp imul sbb outsl dec cli xchg je xor sti xchg cmpsl mov sub xchg adc cmpsl and mov movsb push repz test test jbe daa lods (bad) push sbb imul xor push es inc pop in xor cmp out push or addl push ret mov cltd movsb mov or add movsb fsubl pop cs call clc fwait dec inc ja notb sbb inc lret enter mov push sub mov sub scas (bad) je jg xor ja scas jne pop call pop movsl in or add mov mov jmp push push add cs out inc jno sbb in jae fbstp xchg mov mov xchg es jb sbbb cli cmp sub das pop or jns cmp cs inc pusha aas mov xchg sub and sub dec cmp jb pop mov sub add xor inc repz pop std cmp or push and test push dec int pop mov xchg cmp ret xchg cmp cltd xorl sub jl icebp inc imul enter or inc scas pop iret jno add sbb and lds (bad) scas inc and ret scas push in cmp jg shr leave xchg (bad) outsl adc mov nop lds iret out sub jb pushf and adcl cmp lods or cld or icebp sbb fcmovu sbb sub xchg xchg lahf lahf pop dec jecxz dec shlb repz icebp das (bad) aam jecxz or push mov clc call outsl sarb xchg adc inc outsl fisub iret (bad) nop xchg mov xlat push iret lods xchg (bad) ss cmpb pop push roll jnp mov les jmp imul adc xchg xchg jbe mov dec sbb out xchg push aaa in out test inc dec in or insb mov jp lock (bad) jge sbb cwtl pop lods repnz sti pop and test ss or cmp jae daa (bad) (bad) adc dec lcall sbb sub fwait pop popa mov dec cwtl loope push jl jmp (bad) xchg jns mov fcmovnbe push aas or push add adc cmp lods push outsb pop call repz sub int3 rcl lock inc jecxz mov cld stc imul jno xchg aas jns fistl imul in jo scas mov mov jmp xchg shrb clc xchg nop xchg jg fs add mov xlat (bad) iret rcll push mov (bad) xlat cmp jae int3 les arpl jae jbe or pop leave icebp sbb add aam pop (bad) in mov das push gs cmp lds rcr out movsb pushf out push arpl xor pop data16 xchg cltd or shll push les inc pop mov jbe (bad) bound xlat mov std stos add inc mov sbb adc stos add sbb mov and xlat adc ffree jecxz call inc into xor xor arpl aam fsubrl dec in jmp int3 jecxz aam xor jge push sbb mull (bad) out loop repz sbbb cmc cmp loop ja add repnz out mov push inc jne lcall or pop insb shlb aaa and iret or jge dec pop push popf push and pextrw mov or in xor leave jmp cli adc mov xlat cltd in pop mov mov pushfw lock mov cmp into ljmp xlat mov decl mov idivb mov mov int xor cmp pop mov inc (bad) leave loopne mov loope js ja jbe mov (bad) mov (bad) xlat enter hlt or pop insb xchg out roll sub xor sub jl fimull mov push decl mov inc ds jge pop mov test aam lock add push sub push cmpsl inc lret sbb cld sbb dec mov setbe in mov jae int3 cmp cmp sahf and stos or mov jbe push loope shll sahf cmp lcall xor outsb jmp fisttpl arpl fmuls mov imul fnstsw xchg dec ret in cwtl inc push pop scas sarl mov ljmp test jg jmp cmp sub push sbb cmp mov notb inc adc ja dec btr jbe cmpsl (bad) sbb xchg mov fbld outsb ds std mov cmp ljmp cmpsl mov clc sbb xchg sbb push jmp pusha (bad) dec dec icebp fcom xchg std inc cmp sub mov fnstenv test lret or xor addr16 sbb aaa dec daa pop in (bad) stos push mov ss loope add test mov sarl mov fidiv jge fild arpl cmpsl aad xlat fnstsw aam adc repnz or aaa test push cmp sbb mull dec xchg fs cmp movsb ja add gs dec lahf mov mov loop lahf fdivl sbb cmp and das sbb outsl movsb jne and inc xchg inc into cltd sub insb cmovge jge mov pushf leave rcrl mov xor adc or out loopne mov mov lock pop xchg loopne xor pop inc ja out leave sub mov and cmp test inc push bound outsl mov sti sbb add scas xchg fist mov push popa pop fldcw in lods lcall jae mov push pop cmp mov dec lcall scas adc pop push dec jl enter cs imul data16 adc fcmovu push sbb sbb push xchg mov fisubr dec sarb xor push cmp (bad) pushf cmpsb cmp cwtl outsb mov imul out fsubrl cmp pop sbb call dec fisubl sti js xchg push movsb push xchg pop movsl inc addb xor pop jo pop fcmovu adcl sbb pop mov je and xor pop scas fmuls jae iret out ds into add adc gs xor shll mov cmp arpl push lret mov xor iret pop stos stos add mov sub inc mov test call mov and cmc sarl lods mov add cmc sbbb lock dec adc divb push fidiv jo jg (bad) pop mov xorb xchg repz mov ja mov sahf lret test (bad) jbe and insb push ljmp int xor imul push mov pop (bad) ss ja jbe cld xor test lods pop dec lock call mov mov leave sub jnp mov fsubp mov xor pop fisubrl loopne sti adc (bad) aad mov sub xor pushf cmp loop mov sbb jno and add mov xor dec repz iret loope sahf mov pop ja test sbb and ljmp icebp add xor jp sub jbe jbe inc adcb mov pop pop jp stos xor (bad) sub testb data16 sbb clc jae mov lret ss les test iret sub add xor inc pop shrl mov sbb jl lcall aad cmpl or lret fcompl enter xchg cmp or mov mov cmp cmc push cwtl stc popf xlat mov xchg inc fcompp add xchg push test movsb and lods les push out adc sub incb mov subl mov adc dec and gs jg incb xor fwait sub push int3 adc cmc leave jbe mov inc push andl les and xchg mov aam mulps dec push xor sbb in pusha add jo cmp mov lea fsubrs int jbe push xor fidivr xor jns roll sbb inc pop mov repnz insl insb scas xchg or andb sbb adc (bad) fldl jecxz fist xor jae cmpsb push sub outsl outsl inc icebp pop xchg pop inc dec push and (bad) cmc imul jp jno sub dec dec push idivb or int3 (bad) lock out jnp jle and mov dec pop scas pop or sub fbld lcall inc dec mov (bad) lods push and out inc cwtl adc sub jae mov orb gs lret cmpl push popa push andl out adc xchg inc icebp clc pushf movsb fisub out sbb add fs push insl push pop (bad) sbb mov shrl das push inc adcl shl mov lock jb xchg fnstenv mov push std (bad) xor adc fwait stc ss xchg jle mov fs add (bad) cmpsl ret add dec sub pop mov es pop fmul mov dec pop jp add (bad) fsubrs lock sub sbb in pop jo mov jae pusha sahf cmpl sahf mul lods outsl int fwait push fdivs addl sbb sub jp ficomp je fwait push int3 xchg cmp ja leave js test icebp mov sbbb ljmp scas and lods mov lret xchg sbb xchg sub popa inc push sti add (bad) fmull aas cmp sahf add out in rcr sub sub pusha jle insl mov adc rolb sahf leave leave loop jge mov jg out sbb aaa adc imul sub cltd (bad) out xorl addr16 addr16 dec jbe inc push and dec aad insl ljmp mov adc cli push sbb out jne sub enter cmp jno xor enter sbb adc (bad) jmp iret sti (bad) xor add sub push dec scas call imul dec xchg call jge int scas sub je addr16 sub sbb inc cmp into push xlat lahf in ljmp xchg cltd pop mov dec popa fldcw test bound popa jmp in adc mov jo push mov mov mov mov test pop mov dec or sbb int jmp push inc dec sub jne inc xchg xor push inc cmp pop mov (bad) sar dec fwait jae xor insl sbb inc xor ljmp iret test popf mov rcrl xchg cli jbe mov jmp mov faddl or pop gs sbb dec xor sarb js js push inc dec pusha sbbl pop xchg add sbb cmc and or pop pop push (bad) mov lods mov mov cmp in subl or and cmpsl sbb dec or push mov mov add repz dec ja int3 xchg loope xchg mov movsb (bad) inc sub xchg xchg add dec inc xor inc pop addr16 insl mov loope dec ja adc push hlt (bad) sub mov pop aam pop cmp xchg repz dec and repz fs cltd push add in push pop sub or adc shll out jmp cmp jns cld inc sti pop adc add cs xchg adc cmp adc jno aas negl push data16 mov xlat or xchg (bad) shld out test sbb pop mov (bad) in cld outsb push push fwait aam into or cmp inc cmp push icebp push xchg test stc scas rcrb sbb ljmp push cmpsl movsl push addr16 jbe xor xor sub mov lret cli sahf pop adc or out push into int mov mov in jmp sub rol jp clc loopne mov ret dec jne out mov (bad) fcompl mov jnp mov ljmp aad jae test lods mov test mov cmc xor and daa jle mov mov cwtl dec ret dec mov sbb xchg hlt sub mov sbb fs daa mov loop movsb mov test repnz addr16 push jmp stos in mov push cld sbb adc shll sbb xor jns jo lret push inc jg (bad) fadds test dec xchg and dec mov pop dec cmp dec jns jbe loopne mov rcrb mov inc inc adc arpl xlat xor cli movsl mov lret insb xchg inc mov cmp dec test notl push xchg mov jle pop stos mov loopne stc mov popf xchg push mov in ret push fsubs push jb in out (bad) (bad) lcall inc hlt jo adc dec in insb jle and and mov pop enter push dec jg (bad) jnp int3 add ljmp sub aas mov jae cmpsb mov mov push gs mov mov rclb pop std fwait mov cmovbe ss inc jo push out xchg loope sbb or cmp xor and mov (bad) fcmovnu aaa scas ds nop push pop sub inc sahf dec iret cwtl push or mov out out fwait mov aad cs xlat hlt outsb cmp movl loop scas int out repnz sbb adc lods xchg xor cmp addw sbb les push jmp out outsb or mov cmp ficompl add dec int3 pusha mov adc and pop mov adc inc lea adc sub pop add pop dec push xchg mov cmc cld push inc and mov mov clc xlat aas pop in mov test xor cmp push cmp ret push out out mov push cmp mov adc js ret mov and xor (bad) and (bad) fsts mov fwait pusha js inc push out test aam loop pop jmp rorb xchg outsb mov sbb rclb inc test movsb ss dec push pop push out loope ret push dec mov cmp cmpsl hlt jno jecxz and sbbb roll inc ss and xchg adc pop add sbb rolb xchg push imul icebp bound pop jne inc lods mov lret ja pop fsubl mov mov lock jle (bad) push mov jo mov sbbb add mov test lret test cli adc hlt test jb stos mov mov flds aaa xlat movsl adc in stos dec mov pushf outsb xor adc repz popf and mov mov mov cmpb jg mov scas test push ss ds sbb ficompl pop mov pop pop shll adc cmp xchg leave adc sbb or test push mov or mov loopne cmc sbb sub mov dec or in icebp mov rcl cmp mov fisttpll or test sahf xor sbb cmp adc inc les insl xchg xchg clc cmp jne dec push adc inc stos jb inc lock xor push fsts mov mov or or mov scas fxch fisubr jge jl int rorb je and addl das in lock lahf add inc adc add sub and rorl es cmp push push dec sti and sbb (bad) aad daa cmc sbb inc bound out daa cli popa jl jle cmpsl or jg push (bad) sub mov pop add and add jno out pop and xchg lea in fdiv into mov cmpsl icebp add test inc jnp sahf ljmp icebp mov (bad) sahf mov iretw popf fnstcw fild mov push insb xchg es adc sahf out pop lret jle dec push sbb iret fs (bad) cwtl mov xor repz inc mov push inc push and lret lods mov mov pop iret mov mov ja movsb sbb or aas (bad) add mov add jb mov adc mov push es test gs or ss adc pop inc lahf xorl and sbb jnp hlt pop js inc or div jbe mov push mov jp sbb das mov sub in cs or mov insb xlat out mov dec (bad) fisttpll sub fiaddl lcall popf outsl sbb or push nop sbb cmpsl rcrb mov pop std jbe int outsb mov inc xor scas sbb dec push movsb (bad) xchg rorl inc cld lret push sub or cmpsb xchg mov incl fbstp jle mov out sbb adc inc (bad) imul fcoms and loopne xor sbb adc test (bad) adc cmp movsl dec mov loopne rsqrtps or shll cmp cmp leave sbb into xchg add dec lret mov xchg sbbb jecxz mov jl inc out cmp (bad) push int3 cld fsubr loopne dec xor enter stc push xchg ret mov imul mov push movl imul xchg les movsb and pop or mov jae mov outsl pop in (bad) ljmp sbb mov popa aad loope (bad) (bad) jl stc and pop xchg cmpsl jl adc mov sub dec push lock cmp loopne mov pushf xor jne pop xchg jae push dec add push push popf insb jl mov add movsb in sbbb repz lods xchg push inc mov ss push inc cmpsb in and push popf scas adc insl inc dec push into sub pop loop jge sub and enter xlat mov nop jae lcall mov loope jecxz dec gs dec jbe xchg jns test or mov xchg mov aad xchg mov js and lds rol adc lds aas test outsl popf daa in add int cmp (bad) scas push ss fwait popa sub or cmc pushf fisttpl and or dec sub push inc fs mov cmpsb push pop jge test xchg sub ror sub xor lds les mov daa pop jno test adc mov dec (bad) outsb push imul arpl inc fnop xchg dec popf mov mov adc test (bad) icebp pusha xchg push xchg test inc mov ss call jb out push jmp dec stos sub pop in stos add aas das negb iret cmp je dec sub lods or fisttp sub cmp cmpsl imul leave roll sub je mov and sub xchg mov mov dec sub xor dec xchg es mov adc dec or dec (bad) loopne mov mov and dec dec arpl orb insb shll pushl ljmp (bad) ret rclb and out push pop lods inc push pop enter int mov dec sahf lds push loop in lahf mov fisubrl cmpsb adc imul mov or lods jecxz inc dec dec mov sbb repz sbb or dec outsl mov imull imulb call loopne int ja mov push push or and ss mov xchg dec xchg mov rorb es mov sub and mov es neg mov mov lret jnp jno or dec pop xchg cld pop sbbl ja dec in pop adc gs inc (bad) hlt add popfw int3 aaa pop lahf jge pop inc cmpsl movsb scas jo cwtl jno (bad) and rclb mov jl dec xchg lahf jecxz xchg (bad) stc in jle pop test es insb and mov mov adc subl sub ds jge add out movsl xchg cmc stos jo ss mov (bad) jne outsb int3 pop inc xchg xchg mov out imul pop dec xor adc loopne dec out mov xor lea mov cltd gs jns cmp pop cli nop sarb dec adc lods xor adc mov sub sub cmc test dec in or mov jo mov out add jg scas into add mov mov into lods and jp push mov into push jl dec mov int in jl dec xchg loope pop mov into fmuls sub jmp inc mov mov test fidivrl and ret in adc out xchg hlt dec and pop out inc dec xor pop nop mov (bad) pop nop mov leave loopne stos push sub dec sbb push sahf fs test int xchg stos bound nop push ficoml adc or push out aaa push bound lret rorl xor outsb ret and xchg (bad) mov xchg cmp mov jmp adc push mov sbb fmuls inc jns les xor popf xor stc sub lahf insb push inc (bad) or pop js pop mov icebp fwait and lds icebp pusha mov ret jmp or int3 xchg push dec int das (bad) loope bound sub shll fisttpll lret sub test ss sbb sbb insl enter imul adc mov pop xchg pop jmp fcomps test cmp pop xchg xchg iret push leave mov push faddl push and cmpsb fdivl push xor inc sbb enter mov pop and xchg mov cltd xchg leave call jle,pn adc mov and add mov jo scas inc mov (bad) notl int3 mov push and (bad) mov fdivrs lds cmp in push add inc test adc test xchg call fcomps repz xlat jbe mov out mov xchg push stc jmp cmpsb cli daa mov lahf mov xchg jbe or jge xchg cmp sub (bad) int3 outsb enter cmp or leave lea mov je xor popa pop pop cmp idivb flds iret inc mov sub add mov cli and mov cmpsl pop adc loope lret push pop jecxz push inc test adc leave dec sub in mov xchg js mov cmp mov ficompl cli int jne xor cmp scas addl and and add cld fstps ror sbb mov ss push ss or push and ds push mov iret sbb xor fwait push in adc enter cmp or lret xchg stos stos add lea adc jns add repnz test cmc inc dec cld inc push cmp push xor arpl and dec fs cli sub add aad pop jne enter outsb (bad) cmp xchg into sub push inc lcall les sbb xor pop xchg and in sbb mov (bad) lods lods (bad) pop lret (bad) popf cli jle inc cmp cmp xor jmp popa mov enter hlt xchg cmp out stos xor aaa pusha fadds popa push push dec dec les out scas cmp pop imul (bad) lret inc imul mov sbb test push add dec scas jmp pop pop push cmpl fildll outsb jbe mov push push fnstcw pop nop test jns jo cld ljmp adc (bad) (bad) int3 pop ret out pop push adc xlat mov mov cmp push mov bound and and jl iret pop push dec popa fs loopne sti sub les inc inc mov add cmpsb sti add sub xor jae and mov frstor imul cltd pop mov jnp mov fldcw adc outsl dec aam repnz lods cmp es adc (bad) in mov je lahf stos cmpsb insl stc repz pushf xlat iret int3 xchg sub adc sub ja xchg cmp ds imul cwtl adc lcall and mov sub cltd ja sbb lret jmp cs cltd aad and sub ret add dec negl fisttpll or pop repz sub cmp fdivl loope aad xorps sub scas mov mov pop stos xchg inc stos xchg add push cmp mov in or mov xor jne lcall notl mov sbb adc jae add jb inc int3 fiadd call fwait mov jg out (bad) cltd gs test push (bad) idivl mov mov jmp lods outsb rcrl jl xchg add dec call ret stos push mov out and xchg pusha lods sub movsl in (bad) sbb cmp bound in mov xchg sahf push jne mov xchg mov repz dec push loope clc fldl push das ljmp push push adc lea loopne xchg lahf jecxz dec cld lds test mov ljmp inc adc xchg mov ret jae sbb shrb mov cmp dec pop adc and jae stos int3 sub xchg ret imul es sub jbe aaa inc lea add cmp outsl int3 xchg xchg xor cltd push jb mov out mov scas out jbe cli adc and cmp ss arpl cmp mov loopne pop and dec in sahf and lods fldcw scas adc adc jb push insb arpl in fsubrs mov imul (bad) jp pop scas xchg lods jg adc inc fmull xor sub and dec or repz xor mov scas cmp movsl or loopne imul and mov in inc add (bad) pop pop fstl imull add mov rcl nop negb ds and mov xchg fistpll xor mov daa enter daa leave lods (bad) fbstp xor and or pop fdivrl jnp fmul lds lahf stc jno mov push hlt or and ljmp lret fucomp lea or sbbl jp in jnp and nop mov jbe xchg enter lsl dec dec sar popa inc rorb adc mov divb inc jmp aad sub jp inc cld sub push sub scas inc mov ja sub push les push push fsubrl insw movsl push insl push jnp jb adc and push fbld cmp ja cmp jl jnp push lret mov sbb mov jmp jecxz push xor pop add jp sbb or into in cli mov imul pop iret dec lret loope mov fnstsw scas mov lods mov out arpl repz mov (bad) mov imul inc clc mov divb mov xchg lret shrl xchg test push mov aas lahf push pop dec or fs xchg mov pop push mov cli imul xor lock arpl dec stos aas fcoms bound inc jecxz fs mov lahf cmp cltd push pop pop xor aas jo sarl pop adc and adc lds inc nop push jnp dec inc push mov insl mov imul cmpsl mov xchg loope cmpsl inc xchg jp mul out mov ds fldenv push out cmp or cltd cmc mov out fildll stos loop push hlt inc cmc mov cmp inc inc adc bound fcoms inc mov push stos mov jne aad or jge adcl loope inc adc lret sti dec stos dec or push (bad) cvtpi2ps dec add jbe fiadd pop imul movsb sub sub push cld jge stos (bad) push stos cs sbb add push stc fistpl cld xor dec inc addr16 jl jb (bad) jg push pop push std out jp mov insl fstpl out fidiv fbstp pop mov sahf hlt jns in clc and in or bound jp dec mov or xorl inc sarl lods mov mov inc out mov fisttp add dec mov aaa mov inc and jnp xchg lds xor stos add xlat call sti adc test mov fs adc pop mov pusha lds clc je push jbe mov pushf jge,pt push add pop sbb call sahf mov fiadd pop pop dec dec (bad) push sbb mov out mov cmp pop stc imul hlt pop xchg dec mov ljmp dec and leave sbb sahf ds lods mov mov sub inc sub lahf and mov push push movsl fisubl inc call popf sbb cmpsb mov sti pushf scas (bad) and and add ss into dec xor pop mov adc sub mov jle or sahf add push mov loopne dec fisttp and jecxz ljmp lea pop cmp lahf and ds lcall cmp popf cmpb insb int lods xchg sbb sbb dec bound scas cwtl xchg iret decb pusha aad leave mov sub popa (bad) sbb ret lcall sub das ja stos or sub gs push adc jmp iret adc pushf shlb mov cmp mov adc sub mov jecxz push sbb dec test movl xchg test pop mov pop mov sbb mull mov rolb adc out dec loop pushf xchg test js cmp pushf notl fwait jp inc push and sbb addr16 inc mov or jnp pop dec es pop jle popa scas dec adc fsubp fdivl xchg cmp push rorb (bad) out push gs cmp sub mov jno mov push jbe fstpl adc push aas push and push mov fst insb gs push sbb out outsb rcrl cmp pop insb xchg pop (bad) popa int3 pusha rcrl lahf out and repz fstpt add lret push or jg es or int es add rcrl fistpl pop cmp xchg xor mov pop adc out jl scas icebp sbb jmp hlt jmp fildl jmp clc scas mov or sbb fdivl rcr sbb lcall inc imul adc mov mov fnstcw jp leave mov dec (bad) mov repnz (bad) imul dec jmp je xchg mov cmc dec pop loopne popa stos getsec sbb out or sbb lds lea xchg rol and xchg xlat cmpsl fldt or jle aas dec xchg and das or stos mov in call mov cmc xor push jnp scas xchg pop add xor sub fdivs stos push mov addr16 scas sub adc leavew pop insl dec and jle std push popf ljmp popf (bad) pop jb sahf and nop cmp xchg fdivl add push lret xchg andb (bad) pop pop jb adcw stc dec jl dec test aad std outsl xchg sbb xchg pop xor mov jbe cmpps out mov mov pusha insb arpl pop imul shll ss ja mov cli cli dec pop cltd insb dec jl into push lret ja js insb sbb pop sub jle xlat ret cmpsl pop jp dec cltd ret inc ljmp out js jae mov js aaa xchg mov sti clc sub ljmp pop ret rcl (bad) add repnz sbbb int3 xor icebp int3 iret sub sub fldl2e mov pop (bad) lods sbb aas imul jg ss xchg clc jno int loopne sahf (bad) std out aad mov dec popf push lea js xchg les into sub mov sbb rclb rcrb cmpsl das adc fwait imul sbb hlt sub stc movsl and popl scas and fcompl (bad) xor pop pushf cmpsb or icebp mov decb inc ret mov popa call push clc test inc inc add adc inc dec mov xor and pop dec inc test mov add dec test stos ffreep cmp pop repnz je nop sbb pop pop shll js pop pop (bad) sbb fstps sbb cltd inc pop mov ljmp subl outsl xor ficom cmp mov cs cmpsb sub add outsb idivl stc cmp mov or idivb dec jle cmc leave inc jae dec mov pop outsl aas pop push adc jno jmp mov daa cmpsl add int push push lods (bad) scas mov cli pop hlt or stc cmp (bad) icebp cld cmpsl (bad) ss lock add cmp rorl pop mov cmp jno and cmp (bad) (bad) notl insb pop imul pop xor test lahf xor stos mov adc sbb and xorl mov xchg js pop lds jecxz arpl sahf ficoml das xchg lock ficoml add int3 mov stc scas imul mov xor ret cmp les xchg fadds xchg add adc mov mov out jb js xor sub fdivrl cmp or out jp inc sarl stos xor sub or xchg data16 inc test test or icebp negl push mov sbb mulps outsl gs movsl fidivrl lock cli mov xchg in shlb mov rcrl ljmp adcl push and repnz mov lods lcall popf jp cmp push lock (bad) mov mull repz fidivl into (bad) imul (bad) xchg dec inc lea lret cmp icebp out outsb jno push jl lock stos call cwtl dec add ljmp shl (bad) repz movsb fs push rorb mov aam push cli jge iret push sub int cmc jle es mov fidivr cltd cmp rcll mov mov jne mov fadd jnp push xor mov enter cmp mov mov iret mov (bad) popf popf add (bad) jne xlat dec jnp fldcw mov stos scas sub push bts and xchg cmc imul sti xor (bad) cs int lahf xchg outsl divl repnz leave in mov js mov dec (bad) jb mov leave push and push add (bad) fstps test xchg movsb mov adc and push outsl stos lcall fisubl cmp (bad) mov loop cs out sbb jl pop rcr sbb mov jle fiaddl mov aaa iret add lret add or cs popf loop je fs daa mov mov or jnp addr16 insb push mov cmp outsl inc push pop sbb push mov add add push dec aas push inc movsl pop cmp fmuls stos aaa stos lods jle andb roll adc cs cs cmp xor icebp sbb stos xchg ja add cmp cmp in bound xor mov cmc mov sbb cmpl and jb into sub jb adc cmp jp pop xchg jnp pop sbb in mov xor daa jno xchg mov sub int3 iret mov shl xchg js in ror mov mov loop rcrl jb mov sbb out call arpl and mov push enter jecxz jge dec ds ja inc sti lods in (bad) and inc leave inc out int mov (bad) mov mov test (bad) clc bnd adc loop push dec icebp jge,pn inc aam push iret add jbe push mov sahf imul or sub or mul cmc popf call sbb or xchg xchg aaa jp mov sahf repnz fist xlat in adc insl xchg xor jp adc insl loopne jmp xchg cmc test jmp gs sub and adc or popa mov repnz and inc out call out adc or sbb adc cli mov aaa mov hlt imul jg dec fsubs fcom lret lahf mov jmp stos dec (bad) xchg push (bad) (bad) or (bad) stos test fldt xchg add mov mov push and lods out jae movsb scas jns gs sub xchg push cmp xchg push ss jle sbb rorl pop push inc repnz sub add push rol je jle gs (bad) call push mov repnz jne cmp (bad) test cmpsl mov push dec inc add pop cmp xor int cmp scas inc pop cmpsb pop es mov mov fimull sbb test pop jo aas lea xchg mov add ljmp mov rorb xchg jmp sub daa out insl xor and adc je add adc sti out mov lret popa stos jae ljmp daa (bad) dec xor xchg fwait push inc sahf mov adc push lret cli mov cmp lahf (bad) pop pxor cs aad pop cltd or lret xlat aas stos xchg inc inc aad cmp jmp loopne or iret xlat jo nop cld addr16 xchg or pushf dec movsl push fwait stc adc adc cs sbb mov stos mov mov and addr16 mov add leave callw or mov sub mov enter scas test ror push leave loope out sub loop sbb jg (bad) mov addr16 or fnstcw inc xchg add mov dec fdivs (bad) sahf mov and rcrl (bad) hlt and pop add rol idiv mov or jno addr16 jo stos ss stc jge ss leave insl testl rcrl add adc lcall mov std popa insb stos sub cmc mov aad push add push lea adc xlat pop lods stos cmpsl les xor push sub pop aaa outsb xor dec adc ja rcrl and imul adc sub shrb pop call out fmuls jae dec loop into decl outsb les lret inc xor aam (bad) das loopne add sub xchg insb mov and aad or push call aad (bad) mov mov hlt mov cmp fwait jns mov sub or and out pop mov gs jbe fadds dec sar sti fild clc mov mov dec aam (bad) pop add ljmp add xor in outsb loop inc adc cmpsl or ss mov fimul cmpsb or ficomp bound in and sysenter lret xor push pop mov xor pushf or xor sub movsb jns mov adc inc scas mov mov mov (bad) sub inc ja scas and data16 fcmovnbe push mov insl jne cmp imul in dec mov jb lods mov adc clc stos lock and mov sub add mov dec cmp cmc fisubrl dec add sub je cmc lock dec mov dec jmp test sarl ret mov call add (bad) xlat jnp xor push xchg loop mov (bad) lcall sub push div idivb cmp bound fcmove gs mov sub iret jae clc and mov sub fstps mov xor roll sbb jno fwait dec or shrl add ljmp stos bound cltd push inc sub and cmp adc push mov lahf insb cmpl and sbb mov mov sub mov call add cmp loop mov (bad) cltd je fnstcw mov sbb cltd popf data16 pop sti add lahf push or addr16 jp sub jns cltd gs imul (bad) loope add xor popf subl inc or (bad) icebp mov cmpsl xchg mov in (bad) push loop xchg pop mov iret or iret rcrl push stc arpl and test xchg es scas inc xchg in cmp jge push int3 push pop cmpsl xor cld int3 pop enter test sbb cmpsl ja or xchg pop leave and ret ds lock scas cs arpl lret lcall xlat out dec xor jmp cs pop cmp inc sub out cmp (bad) enter and pop enter dec jo jno pop stos cltd loopne testl mov sub (bad) pushl insb jg imul jbe fsubl push fstps push aas pop sub jle pop jbe and fst pop imul sub fimul inc lea inc cmp jl xchg adc dec dec pop xlat scas cmp insl fwait or sahf icebp mov nop add in mov sbbl mov pop push sub out cmp es mov dec push sbb shlb lret and stc add repz mov xlat and in sub ljmp mov cli dec (bad) mov test repnz inc push or (bad) (bad) repz scas inc adc (bad) ds (bad) xchg rorb hlt cmpsw (bad) xor sub push (bad) ja popf ficoml div and aas lock in or xor cld mov xor testb (bad) mov sahf call imul fwait push fnstcw loop (bad) and and outsb inc mov cmpsl dec rclb sbb aam in mov outsb incb mov add mov loop divb sub mov xlat pop (bad) es imul in cmovp cmc js shrl mov pop lret sbb push push mov xchg lock lds ljmp xor add lock fcompl neg xchg gs inc lret push jnp enter or sub jmp vaddsubpd loopne push subb arpl adc inc pushl mov and insb stos movsl add jle jae xlat sti cmp jo mov mov mov (bad) dec cmp popa sbbl xor mov addr16 adc insl gs cli inc and lods mov es and lcall rorl xorb or mov push (bad) fistl in movsl sarb sbb loop gs mov fist lcall dec xchg enter xchg and pop loopne add push test test je bound outsl cmp ss aaa jl sub in inc mov and cwtl movb lea xlat cmp ds jmp sti (bad) std push add sbb push xchg inc repz xchg xchg mov iret jle lret mov add in and arpl mov test xor repz push jnp jbe rclb test xchg call pop nop inc add mov push cmp adc hlt faddl push add mov xor pop lahf jg push xor daa xor push rolb dec movsb mov test inc stos xchg imul test fstps iret stos cmp xchg mov add cltd enter mull inc lcall arpl xchg push mov pop adc adc sub out sub lods lods push jl mov packssdw mov inc or dec sbb ret push idiv xchg sbb imul dec and fstpt inc repz cltd jnp (bad) movsb ja pop fwait cld sti in mov push and daa gs or inc pusha adcl xchg mov ss mov stc and aam ret imulb lcall adc iret dec cmpb jnp fistpll dec dec mov pop hlt hlt popf xchg inc pop xchg inc lahf mov jge aad push adc add add fildll in add add cltd cmpl clc push rolb adc mov mov mov bound sub or cmovge cli (bad) or pusha inc pop fimull cmpsl mov mov pop xchg sbb add mov push cmp xor fcomi adc aas repnz lret loopne and cmpsl in push xor das out pop sub cmp xlat cmp xchg icebp xor pop add mov (bad) xor push sbb adc sbb ret cld cli push mov repz fdivs mov test test mov lea jp rorb out sbb out mov jnp sarl mov (bad) dec push push (bad) (bad) testl push sbb lods cltd ret mov out xor push stc push mov pop mov (bad) push mov mov push bound daa test jmp clc sti inc arpl mov (bad) pop pop (bad) mov inc je sbb (bad) jle fimul sbb add test (bad) cmp cmp aam int loop sbb (bad) sbb lret lock push aam cli xchg lds imul cmpsl xor stos sbb shrb mov lds mov push sbb das cmp out mov sub jo pusha add jno mov xchg leave and sub es movsb mov aaa daa sbb sbb jge xor (bad) in fstps gs dec mov dec pop sub pop data16 jle cmpsl aaa fidiv stc es fldenvs xchg sar mov es (bad) test fstl adc mov mov sarl push pop jge icebp ret enter xchg mov or (bad) arpl sub pop aaa or fwait movsl sub aad ret (bad) idivl lret adc sub and das mov fs out or scas and lret or mov and int3 mov loop or (bad) mov xlat xchg (bad) xchg aad stc pushf ja dec sbb dec fimull mov push mov pop leave pop ljmp adc sub jge jno push ficoml adc push (bad) dec mov sbb lcall dec stos push psllq mov push lret jmp into cmp insb push imulb lds insb ja sub roll inc and dec popf mov fisttpll insb icebp loope popa cld stc mov aas jmp xchg jp lods mov (bad) ret cmp mov mov lock mov xchg arpl icebp pop push insl test mov dec popa mov mov cmp xor xchg cmp sub cmp add movsl fcoms jnp lods sbb lods push bound subl sub es nop jg,pn xor aad jle nop mov call and rorb mov pop pop test fsubr xor call and sub push popf sbb loopne mov mov mov mov push mov cli jb push loopne sbb repnz ss hlt mov xlat in mov jmp jge,pt in push push ret enter les push sti sbb icebp jp pop ficompl in mov stos repz cmc sbb mov data16 push push dec test cmc pop psllq mov out mov pop pop movsl aas or sbb mov jno jb fidivl or sahf iret (bad) mov es jmp mov fisttpll mov xchg mov and or scas nop fnstenv push aas inc fidivl dec cmp pop add push stc push das xchg je xor sbb cmpl xchg shrl popl in loope pop jle and mov hlt neg setle jo or nop jae jae xor dec int add popl pop pusha js loop pop dec mov inc cmp adc rcrl sub mov mov pop lahf xchg call pop incl nop cmpsb sbb popa ret cmpsl scas ret sub pop and jne adc bound jns addr16 arpl jp mov (bad) jle ja aad jae pop sti gs push pop mov rorl aaa vpaddq mov mov push xor lock loop jb pop mov and mov cmp clc jo aad pushf push sarl sbb or mov popa dec ja popa lret scas cmp xor add scas xlat jmp call frstor add xchg (bad) and mov insb daa mov sub sub scas (bad) int3 mov sbb pushf mov ret adc add pop jo mov mov out add repz cltd xchg ds stos inc mov ja push fdiv ljmp and imulb cmp negl test jmp or adc cmp fadds nop hlt test dec jnp in repnz mov add rcr add leave mov mov push jp aad insl xor loop push das mov dec ja clc fisub sub repnz push and sbb nop xlat fnstenv stc insb xchg add iret test mov inc fstps sub xchg add out in leave or in (bad) scas add leave lahf push call and push jl or dec lods aad movsl fidiv popa scas inc xor popf pushl mov lock xchg or adc es loope xor (bad) in jo icebp or xchg sahf push mov ret sti mov xchg or mov inc cltd xor fwait daa stos es outsb test inc jg mov xchg cmp rcrb mov lods or ja stc popa and inc test mov add imul es fbstp sahf js pop imul inc adc mov jl fwait dec rorl adc jp mov pop std fidivr divb dec sub (bad) and dec push push dec jp or insb add jb inc andl sbb jbe or adc jo adc repnz mov mov cwtl inc mov sti insl cmpsb (bad) pop gs jge lcall aaa out fs sub int3 in lods insb jbe test insb in mov lahf outsb aas adc inc out push test icebp mov sti push xchg (bad) xchg add test xlat adc jne or pop dec fs sbb cwtl test mov jl xor push jmp fsub xchg cmp imul push cmc mov out xlat fwait pop push push pop mov sbb fcmovnb jae lods addr16 cmp dec test gs and ds scas sbb call scas xchg pop push sub mov idivl gs in scas rcrb xchg xor fdivrl ficomp inc pusha out mov lock and xor xchg add or jle cld (bad) rcl or loop xlat inc cmpps leave cmpsl aam cmp cmp inc cmpsl cmp (bad) jbe std adc adc mov pop out orps or inc add pop push dec fldcw mov or jl sahf lea or push jmp sub pop fwait ss sti cs jmp sbb repz and jle test or addr16 scas mov out int3 xor repnz frstor fucomp mov fnop lds or fistpll loope dec inc mov mov daa fldl push xchg (bad) pop and mov aas out movsl mov pop push imul mov movsl movsb sbbl inc sbb sub mov les mov loop (bad) xor push xchg in push dec sub pop push ret jbe xor jmp xor add rcll pop adc bound dec mov (bad) or pop inc xchg cltd aad jg out lea cld in jle data16 mov sub mov repnz jmp (bad) mov jb push outsl icebp push test sbb pop or mov movsl lock hlt xor xor jge (bad) (bad) xor dec inc fnop inc aam cmp lcall clc (bad) inc pop cmpsl or xor cmpsb inc (bad) aad stos xor sbb mov inc loop int jae mov and push mov sub jl push imul rcl ds dec mov nop subl in sarl ret jbe and arpl imul lods addb movsb daa std or fistpll xlat cmpsl adc rolb iret bound sub xor cmp xchg cli ret mov inc jns icebp test insl lcall lock pop mov sbb lahf adc jle add push jmp dec fdivs sbb mov test mov arpl jae rorb push jno pushf aaa dec ja or hlt lcall nop sar repnz jle rcrb or push sbb jnp jbe int lret xchg ret test out sarb inc jae outsb dec sti jp mov mov out push fs dec scas dec dec mov loopne lock xchg cwtl xlat mov ljmp push into push xor das into mov fcomip in dec sbb mov adc (bad) dec xor popf pop int adc jl aas stc dec sub bound arpl iret out mov inc inc dec adc sub dec lcall test jmp add loopne and push xor inc mov jns fsubr mov mov icebp pusha daa sub cmpsl roll adcb and (bad) jecxz fisubl mov aaa and clc and enter (bad) ja test add dec icebp sbb into fwait (bad) dec xchg popf repnz push sbb sub out insl mov push adc mov sysret sub in shll mov (bad) mov lahf (bad) cld dec stos (bad) mov adc xor cmpsl cs jg movsl push mov (bad) mov hlt addr16 mov (bad) mov (bad) sti pop xor adc and hlt pop das jbe xor xchg jns sub mov cmp mov std xchg lcall mov cli aas mov pop push sub push mov mov stc addr16 xor xchg jo insl mov dec jb or out jp ss sbb fcomps fisubrl mov mov xlat mov cwtl movsb jbe inc nop in (bad) cmc pop in outsl ds orb xchg mov das aam cmpsl es xchg cmp aam aad push jbe nop mov jb mov loop sbb add repz cmp daa inc pop stos popa push lea out push jecxz jb and cmp cltd movsl addr16 jecxz adc lahf cmpsl out sub cltd dec cwtl lds sub jmp rorl and pop jge adc imul xor xchg je push (bad) sbb cmpsb dec in or fcom aam int3 lock repnz jecxz mov pop test test inc mov cmpsb out inc xchg xchg loope or mov pop mov or pushf pop sarl xlat stc adc inc mov push (bad) rcpps andl mov mov adc gs fwait jecxz dec push loope adc and adc js cli (bad) repnz ret xor lods lret add mov mov lock int mov and leave jg leave push xor jbe clc jae in sbb cmp in fisttp sub sbb in and in aaa mov fsubrl out push les add in push (bad) movsl ret mov sub push mul (bad) fild outsb and cmp and ljmp data16 mov dec jno jb,pn add shrb jle or pop rcrl or subb or pop lea mov jns outsl inc push cmp fwait cmp push dec sti inc and test movsb movsl cmp clc mov ljmp stc dec sbb scas cmp dec mov scas push sbb (bad) xchg imul mov mov leave and xchg test jecxz dec mov stc pop mov inc mov adc in mov and pop jg shlb jp outsl or cmpsl adc add mov jp in push adc inc jne jp out (bad) and mov add insb clc (bad) (bad) mov xor bound stos cli pop sub sti addr16 sub mov push mov or jnp fidiv mov fistl nop dec jns sub repz pushl xchg sbb stos lret pop loope loop jns push jo mov adc xor xchg in daa addr16 scas loope jge pop lret data16 or test pop push lds fucomi jno leave and cmp out cmpsl sbb loopne lcall sbb and adc jb sbb (bad) stos xchg fnstsw clc sahf mov js push mov in orb test test popa js pop (bad) lea pop out lods and call jle adc in arpl sub sub iret (bad) stc cmp imul inc pop in daa adc aaa or shlb sahf ljmp je jl dec out test sub into push xor mov test or jl jl pop out mov test popa sbb push fdivrp sub sahf scas xchg push xor insb ljmp inc xlat mov loopne dec mov dec icebp mov movsb xor rcrl push sarb push loop mov xchg pop out and fs sbb sbb ret (bad) dec (bad) mov in jmp xchg pop movsb int3 arpl lods loop mov mov adc loope insb push cmp add insb fisubr scas mov adc ljmp xor test push sbb mov (bad) fnstsw mov adc (bad) ljmp dec jnp mov rcl adc mov adc mov jle or scas stc xor or push ljmp jp sbb fcomps (bad) out in test scas mov mov push test or push add push and shlb add je movsb inc rcrb cmp mov push (bad) fwait in cmp sub insl sar jno inc mov dec dec inc test pop repz dec cmc hlt pop shlb fsts inc jmp xor clc and mov js mov ja xor or push nop pop popf dec shlb cmc imul stos and and (bad) mov adc data16 sub cmpsb sub inc scas leave lret sar jns dec hlt xlat jmp cmp inc data16 faddl push test or add fdivl imul pushf mov fwait or or xchg negb jecxz pop push mov lret test mov out sbb cmp rorl or sub rorl jo jp jae and and enter leave out or ljmp xor inc (bad) scas lcall (bad) in jmp xor mov and push nop sub xor or insb aad add jae lcall ss daa (bad) jne mov push les push or fistp cmpsb mov outsl stos test lret xlat mov fnsave adc std out (bad) push pop sbb mov mov push data16 or mov popa push mov jmp por or addr16 jo pusha sbb xor push dec mov stc (bad) and fndisi(8087 in loop adc repz mov or dec fcmovb stos jo push push push sbb or xchg xor cwtl cmpsb mov sub cmpsl rorl pop lcall sbb ljmp mov testl pop std jp sub add add es jmp rolb repz sub sbbb mov and mov push push add divb out adc test ficomp push out sbb dec mov mov inc pop mov mov or jge test mov fwait mov jbe or cmp xchg pop aam xorl lods (bad) imul mov rclb (bad) arpl movsl push mov push mov mov mov jae loope add movsl pop pushf dec adc mov fcmovu mov cmp cmpsb sahf mov insl dec js iret jb mov js sbb add xlat and jg mov xor (bad) adc lcall in inc push jge enter (bad) js les sub aas mov xchg test and (bad) test bound dec int3 adc nop mov add repz mov inc hlt lods dec ret adc xchg bound mov int3 js sub sbb and fisubr push and and jmp xor fwait pop test mov jbe scas aas sti mov mov xchg lea loop repz imul adc movsl pop cld push lret pusha call data16 subl sahf xchg add pop rclb ret mov insl movzbl dec (bad) rcrb and cmc lods mov es test sbbl cmc pop mov iret sub inc add paddb leave popf fisubr stos js lahf mov push nop xchg das xchg xchg or out dec movntq js in sbb and rep cmp dec xor shrb jle and mov push into sbbl sti js cmc divb loop jmp ret xchg cmp jae data16 lods pop xor js cmpsb sbb push pop mov pop sub hlt mov (bad) lods addl test or sub popa fwait adc add adc daa int3 fucomp lahf (bad) jl repnz pop scas adc (bad) mov dec mov pop mov ret jbe js divb loop mov (bad) xlat jg cmpsb pop and out mov xchg shlb lcall sarb xor clc mov (bad) xor std or lods (bad) fnstenv hlt or push aam jmp jo pop cmp insb rcll popa movsb xor and insl fldln2 dec sahf lock mov loop sub int3 fnstsw hlt pop xor popa out inc dec adc mov mov jge push mov sbb ljmp xlat rep jl lahf (bad) dec imul push xchg dec adc and jo (bad) sub outsb jp pop bswap popa cmp repz fstl push mov mov in (bad) sbb dec fs cltd cli cmpsl adc jmp push test stc (bad) push push dec repnz mov scas push dec push adc das mov pop scas in dec pop jp ljmp fiaddl ja iret data16 lock xchg ljmp mov mov xor or (bad) repnz sub dec pop pop notb push sub aam outsl dec movsl push adc jnp rorl in pop mov les popa (bad) popf notl arpl jb cmc daa ffreep cmp into out cld es pop (bad) mov sub inc fistpll push mov push mov cli xlat cmp and push inc xchg mov lds jmp jg pop faddl fiadd jb fsts roll les xor cmp add push (bad) adc and adc faddl dec push push push pop cli mov loopne cmp pop loopne fsubrs test jp insb loop fcmovbe or xor mov ss ret pop add sub xchg adc push sbb jo inc push lcall mov push mov cltd and mov xchg jb data16 fsts shr mov jl jge sub sbb ss cs rcll sbb add inc push in xorl dec sbb cmp in dec or outsl dec loop ret out orl lods xlat popf push sub mov addr16 insb or mov and and in testb in stc (bad) enter sbb popa loop out pop mov fisubl sub mov enter addb std sbb das (bad) and out ret or mov stos movsb pop stc jp orl and cmpsl jle lcall dec xchg and jle pop mov ds repnz or sbb pop sahf cmp xor pop ds scas test in mov gs sub mov imul pop pop cwtl gs out mov outsb test imul jmp scas ljmp mov pop (bad) jns outsl cmp push sub jbe pop jae shr fwait call aam ds pop les ljmp bound mov pop loopne inc pop daa arpl cmp out push xchg sub movsb push pop lret xchg or xchg or jae push xchg das out xor cmp jae or mov xor ss jl dec and lods xchg jne lret clc adc adc push arpl sbb repnz dec add and dec in jg notl push nop mov xor jl push mov push es lock or xor mov add mov xorl adc lret mov sub bnd pop test test hlt mov stos or arpl pop lret mov or mov cmpsb dec aaa sahf pusha xor add pavgw in jl push loope mov lcall das or mov cmp shld cmp xchg aam xor mov pop mov insb pop rcrb mov jg sbb aas iret push js lods mov jb insl out dec mov xchg test adc and push push insl cld outsl ja js jl add cs mov sub push rcl inc fwait push sbb xchg out fiadd iret pusha fnstsw inc xchg fs jnp dec mov repz daa mov cmp lea add mov cli dec inc inc lahf push dec jno imul cmc add cmpsb add scas (bad) fldpi xchg push std ss xchg lods mov in or xchg inc inc rol test js cmc dec fimul pop in div out or ja imul sbb lds addr16 repnz xor cmp (bad) mov aas repz jecxz or inc rcr idivl xchg (bad) leave popa leave mov test lcall xchg test and lods add xchg push mov jb mov sub dec xchg (bad) mov jno push popf push xchg in loopne push jl test je rolb cmp mov test mov fsincos aam dec ret mov das outsb xchg daa and mov es movsb jo mov subb jp int push mov aaa inc in cs fucom pushf mov dec pushf jp jb fnstcw cmpsl bound dec push dec mov or and push ret cli xor add in addr16 push jo outsb or icebp push dec movsl mov and xor jge mov jecxz ret popf das inc inc push jp push cltd mov sub cmp faddp adc cmp (bad) lret xor fnstenv incl mov (bad) lea (bad) in (bad) xor cmp sarl adc movsl fisttpll int fnop jl aaa xchg (bad) push mov cmp add arpl mov ss dec test repnz dec leave lcall clc roll icebp xlat (bad) xor sub fildl or lods add cmp rorl sbb movsb add xchg push sub sub jg mov fisub repnz mov addb les je test xchg push repz fimull shll lea mov icebp into add popl xor in push popa xor mov aaa insl aad gs adc dec xchg lret repnz daa stos dec mov xor lahf int3 adc int3 inc jg pusha clc rcll mov loopne (bad) test pop adc push and inc popf bound hlt in (bad) cli add pop js push xchg imul mov add cmpsb mov fwait mov pop and mov inc inc jge (bad) cmpsl in aaa xchg repnz cli (bad) pop sbb in mov or test inc lret loop pop sub sbb and test adc ja iret fnstsw adc adc adc mov clc and sarl sub imul jo sub sub and pop lahf fsubrs pop xor hlt fst movsb scas fdivrl pop cld and push xorl test mov dec inc mov and or add add mulb cmp xchg ret sbb pop js and add lcall or cmpsb push push jb es std jae arpl sub add push mov xor jmp scas mov inc or out das push mov movsl add dec dec out stos add loopne (bad) mov shlb cmp and pop jbe out xchg push in add jg scas jle repnz mov mov mov daa add mov lahf lods aas mov fsubr or call jo xchg (bad) sub popf mov out push sub test cmc or test cmpsb clc pop xchg pop sbb mov out hlt fiaddl cmp add cs add movsb adc (bad) out pop in mov loope les sbb jo push loope dec pusha popl mov pusha das (bad) imull push cld and dec inc shrb xchg sub sub and bnd inc push les mov sub std jge push clc rcrl jns jmp xor mov inc cmp and int add outsl push mov cmc ds sub pop jge xor neg loop xor mov jo jno push inc dec inc jb xlat cmp leave clc int jbe jns (bad) (bad) movb pushf xchg bound push aaa mov cmc jl jl fwait and bound sti adc into mov adc mov ficompl cs out add jbe std ret and shrb cld add mov fldt in mov inc push jbe (bad) jo dec inc (bad) xchg xor inc cmpsb or fsubs lock pop and mov ficompl pop in roll jle adc xor add dec sub loopne mov dec jp mov ds test std sbb xor jbe adcl add stos aam mov insl xchg frstor sbb fsubrs ret xchg test jmp mov ja popa std fstl test and ja aaa push mov inc test jle xor adc roll pop jecxz jo (bad) mov sub push xchg jne mov mov je gs rorb insl (bad) pop addl or jo rorb (bad) jo jge inc mov inc jg loop xchg pop call cmp inc pop js loope add push loop sbb int3 lea sub pop pop ds sti mov adc in xor pusha scas aaa mov das mov mov pushf icebp fwait test leave xor sarl or pop loope es mov aad (bad) lods mov xor adc out add inc imul lea inc mov lods (bad) enter cli jb stos sti std ljmp movsb repz (bad) into test pusha popa sbb das imul jmp mov gs lcall test cmpsl jae mov cld stc jns inc mov ret push stc inc or outsb imul clc xor fs jne inc pop cmp mulb inc mov loope icebp lahf jb imul enter push pop add es hlt out imul lcall push in jp jbe sbb (bad) ret adc icebp dec arpl add mov pop mov jmp cltd in insb lods and test inc (bad) loope cmp push add mov nop mov (bad) sbb jno arpl outsl fstl test lock or out add sarl add mov inc inc sbb mov (bad) nop cmc add ss insb or pusha leave pushf aaa mov mov imul ds fidiv fs icebp mov xchg push xchg daa jp popa mov outsl mov xchg hlt and out cli push stos xchg inc xor xchg mov inc cs or jg cmpsb mov mov mov add fwait push and addr16 lods push mov mov xchg mov lcall add dec fldt sbb loope mov in mov addr16 mov and xchg push push mov mov push xor mov lret in dec nop les jecxz xor std orb lcall (bad) lcall fildll mov pop insb out cmp and enter sbb push inc pop xor mov mov movsb insl loop inc arpl (bad) jmp fsubl sub and ljmp rcll and dec jne,pn loopne imull clc cmpsb xor dec rcrl fmull cwtl push lods mov pop jle or mov sub adc jae pop xor fdivrl outsb mov sbb mov ljmp dec nop mov add test fwait mov cld jecxz into push or out or xor pusha out sub mov xchg mov push shlb add hlt clc jb fisttpll sti in loopne sbb popa shrb and lock pop mov mov cmpb lods out leave es mov or sti mov push out je cld jbe test test add dec xor iret fistpl repnz adc mov (bad) xchg out adc enter xchg mov dec negb scas popf and sub sub in js xor jle push push mov fld insb (bad) movsb (bad) cmp add xor into cwtl ss popf pop jnp and out jp mov cmp jmp pop popa sbb mov adc mov cs cmp dec push pop fildll push mov pop adcl pop jle pop popa (bad) mov cmp (bad) lock stos repz addr16 push (bad) dec mov shrl in roll mov fistpll mov sbb or not mov cld push insb inc test mov push (bad) and mov add ret (bad) pop (bad) xchg sbb stc push mull stos das mov sub les jo push ds scas inc mov shr ljmp or (bad) sbb or ja mov loope sbb jbe jb adc xchg fstp scas jns int3 adc (bad) cltd pop out xchg push xchg insb stos js push pop pop int3 pop insl jecxz cmpsl sub sti shrl xor (bad) adc cmc dec mov xchg pop add push pop arpl jp cs in cli ret lret cmpsb dec test mov movsb cli imul cmp push pop xchg or cmp jns adc mov fild mov (bad) jge adc (bad) jnp and insb xchg mov ds mov xor jmp mov inc mov xchg pop inc nop push mov push or pop pop rcl mov mov aam (bad) (bad) and sub imul lea xchg imul cmp sbb sub pop in inc xlat jecxz adc pop dec flds jb outsl outsb add ret sub fstl adc pop gs inc sub xor mov enter popf stos decl xchg ss inc xchg (bad) jb cli cmp popf fwait lds xchg xchg dec aam not loope inc int3 imul lock lods ljmp imul or cltd jns lea mov mov jb test imul bound std dec cmp jmp jmp jno out stos (bad) mov mov outsb stc push (bad) xchg nop stos rcll or scas les add pop imulb jne xor sbb bound xchg inc sub mov jo jb (bad) or inc ret (bad) js mov mov outsb mov popa aam into out scas aad push cmpsl fidivr xor mov out add mov xchg enter das pop cld sbb xchg or mov pop iret ret or jns daa lock pop jp and fidivrl mov cmp mov repz pop adc add dec out push (bad) out xchg dec jbe iret ljmp les sarl pop (bad) std push (bad) xlat adc xchg cwtl sub ds mov andl stos dec lods and icebp push ror cmp outsb mov insb sahf out xor push add add popf push (bad) jo fdivrp adc jne mov pop adc lods leave rcll sbb and xchg test xchg push adc push jo pop scas in mov jbe xlat test pop pop jb jge int lret mov (bad) cld xchg dec adc lods mov call scas in mov pusha jae add adc ficom cltd into std mov arpl push mov movsl dec dec dec loopne mov cmp or test cld inc out and subb sbb cli xchg adc push fldln2 in fildl pop out dec jmp lods out sti out cmp pop add rcll out pop mov sub and inc push insl ljmp cmpsl adc inc pop and mov arpl scas xor cmpsl push or jl mov dec cmp ja adc ljmp rorl adc js mov push mov mov adc sbb adc jae adc ljmp mov sbbl push add in inc mov outsl imul jbe cli xchg xchg xchg mov test ja cwtl cltd aaa test push hlt add pop mov hlt dec and mov cmp add lods loope aaa shrb or mov addr16 scas fcompl inc mov push call outsl out outsl jae xor push adc cli jno into mov xchg xor fistl test std cmpl lret stos jecxz rol test xorb ret stos lods and sbb inc push mov adc shl nop jle push std push bound push pop int3 fdivr ljmp ss sub gs dec mov adc stos ret dec pop xor and test pop std enter fdivrl scas sbb in (bad) pushf dec and sti out into sub add les and cltd insb test cs lods popf cmp mov mov fbstp inc xchg jnp aam (bad) pushf (bad) into xchg shrl lods cmpsb loope lcall shrl dec xor add sahf mov push jecxz mov shrb or and xchg and fscale push pusha movsb pop and lea stc shr aas inc xchg and pop cmp out jecxz add dec fnstenv mov bound imul (bad) imulb pop in fistp jle and std sbb insb bswap mov movl inc in mov shlb (bad) fisub push push mov add sbb sub movsb mov lcall push lret scas add cmp mov jmp jbe (bad) mov cltd ret mov xor stc lahf pop push outsb xlat ljmp mov cmp bound scas jne fs dec mov mov inc ds adc push cmp insl lcall push ljmp stc lcall out test push xor push icebp les mov pop lea cmp mov ljmp ret dec fwait test and icebp inc pop test push add cmp scas sti lret mov sub outsl andl mull mov jge inc imull mov sbb out loop aam (bad) mov dec push lcall stos pop pusha outsb and jbe pop int3 cltd ja push adc inc pop mov push sub xchg jno dec mov xchg mov and mov bnd jp rclb leave add (bad) sub imul mov lcall xor add push rcrb ljmp (bad) push idivl popf dec ret cmp fwait or or test push xor mov mov sub push je push or data16 ror adc xor pusha fldenv call xor push mov xchg aam or or or in xchg in adc push pop dec jecxz addb jbe xchg sahf or lods jmp inc or stos in iret mov mov outsb push daa xchg add stc in jmp and jg repz popa jno arpl nop (bad) mov adc (bad) movsb aad sbbb imul mov cmp cmc jne jmp or leave lods add push push data16 ljmp (bad) (bad) das enter mov int3 pusha scas fdivrs push xchg dec mov cs nop cmc fsts cltd imul lahf ljmp ds xchg mov lcall std inc cmp add push and daa add mov pusha int3 pop mov jl dec adc pop mov cmc pop sbb pop lods sub sub jecxz clc push sub call (bad) cmp repz icebp mov (bad) jmp or mov es cmpsb jmp es test mov shlb aaa rcll (bad) xchg cmpl (bad) movsl cld push pop jo js das lahf ds repz inc popf mov push and sub xor sarl or xchg xchg mov mov jbe and das pop fdivl daa loop cld bound add sub add pusha sahf push jne sqrtps outsl sbb cmp testl outsl xchg or jecxz push pop loop adc mov dec lret popa out push push insb aas inc sub xor shrl adc fisubrl dec hlt sub test sub ds ja (bad) cld in arpl (bad) sbb jbe sub cmpsb pop jge stos cmp repz add push fadds xchg jns pop mov jbe (bad) int aaa mov fidiv cmp jns cmp (bad) pop (bad) xchg adc inc inc ss out mov test insb pushf xchg cmp insb mov shlb push test add pop outsb pop mov test sahf enter push push xchg mov mov pop jns (bad) fdivrs mov out push or loop inc iret xor inc xchg call mov xor sbb outsb push fxch repz or add push das (bad) or cvtpi2ps stos pop (bad) inc pop shrb and jae lcall or lods adc imul cmpsb test xor pop xorb in test mov sub ficoml cli fucomi popaw ffreep lcall inc gs out mov xchg dec mov data16 popf jmp lahf dec add cmpl and sub ficoml dec sbb cmpsb push mov xchg inc mov ror push push sub mov mov sar daa rorl jl cwtl push movsl das mov xchg stos dec cmc repnz cs cmpsl (bad) aas pop cmp int jp xor pop stos rcrb lea cmp jo mov int3 lret xor xor sub ror cwtl push xor xor xor push xlat xchg and inc sbb popa inc ja jb cmp lds jno push mov call insb into push movb or pop mov sbb push add out popf in dec iret test xor leave pusha jne rclb loop or pushw mov sub dec cmpsl mov aaa fistpll xchg pop inc lea nop jl cwtl inc lret pop test dec adc cli mov (bad) aaa push out iret (bad) dec enter pop mov or dec mov pop shrl sub stos rcrb cmp cltd ljmp lret movsl push mov mov jnp and mov ret xor mov out mov inc add movsb out sarb xchg add loopne out xchg or lods or pop pusha xchg out (bad) adc lcall mov in lahf mov scas or test rcll ss pusha orb enter inc push stc sahf cld je push xor int3 dec pop xchg es loope call mov repz sbbl add test stc outsb jmp mov aam insl push test cltd mov xchg not mov out jmp (bad) jb sbb cmp inc lret (bad) cli mov push out mov add insb (bad) insl pop pop sbb mov jl push fisubr dec dec arpl sbb mov cwtl in insb push jbe popf dec icebp mov pop adc xor jecxz mov mov fisttpl (bad) fistl mov into (bad) mov xchg or dec out pop cs addr16 icebp subb sti sbb daa dec cld andl inc push jo jg cmp xchg test xchg push fdivrl insl xor mov out push adc lods xchg repnz out push inc mov mov cmp mov xchg gs ret imul mov fs call sbbl mov imul xchg push lret test dec je das cmp inc and dec lcall fadd sub mov (bad) (bad) or icebp (bad) cmc jmp adc sub sub lcall mov rcl jno push xchg mov fs mov push mov xchg pop fldt ret cld cmp cwtl movl popf jmp push push push mov add (bad) ss mov add dec jns lahf fnop sub dec (bad) xchg mov dec shrb loope ljmp js shrb leave and int push jo (bad) or repnz and add mov faddl and pop rcrb dec xor in sarb xchg or popl outsl andl pop mov subb pop pop rcrl loopne xor enter sub xor pop sub rcll mov fmulp arpl or mov adc lret adc and mov xlat jmp cmp test call not les jge arpl mov scas xor lret stos pop xor outsl int3 into xchg adc jae dec xchg lahf adc mov cli cmp das xor jbe cld lock dec fstl (bad) mov call lcall outsb and dec ss ja das (bad) mov xchg inc sub mov bound shll xchg dec mov jno (bad) xor pop inc fild cmp les loope and pop into or sbbl mov out in fdivrs add inc loop imul adc jg (bad) fisttpll data16 pop jae jns pop imull xchg dec adc mov out fsubl push sub cmc and and inc mov cmpsb popa out cmpsl inc pushf (bad) lods dec pop adc aas mov sub add stos pop cmp sbb repz mov fbstp repz icebp daa pusha negl scas dec pop mov push push stos nop sub enter cld sarl iret add cmc mov push cmp and pop mov (bad) in ljmp arpl test adcb ja in mov out cs stos mov or ret fimul cltd pushf jns cmc call inc ret mov daa mov repz push mov dec cmc lret scas (bad) jp pop shll movsb sbb dec loop les sub int3 or mov push jns cltd mov popf jl sbb into outsl outsl cmp mov je rcrb out mov icebp stc stc jno adc xchg cmp add jmp jmp push mov add push pop out mov pop adc (bad) in mov inc test push pop add imulb out leave lcall push mov daa cmp jb fisttpl test fwait (bad) insb mov dec push push adc jg (bad) cwtl add leave sub push and comiss pop jne mov mov icebp adc iret xchg mov outsl insl xor dec inc outsb mov mov jg les ret (bad) leave dec xchg idiv aaa mov mov or mov xchg stos mov sbb lcall (bad) xchg bound add clc pop pop ljmp out xor push ds data16 aaa aas ret (bad) out mov test fs xchg cmpsb inc mov sbbl xor mov out mov or pop jp dec in js (bad) leave es addr16 inc jne add scas lcall loop ret arpl test sbb (bad) out js test jnp notl mov push adc in inc hlt rorb loop les popf test xor xchg lds js outsl push cmpsb js cmp and adc movsl ja mov jmp pusha sub daa pop push and sbb mov mov rcrb enter dec fistpll mov xchg mov std pop pop mov mov insb movsb xor rorb adc dec test add fistl cmp leave fisubl pop inc push push cmpb cmpl jp inc xchg xchg lcall or mov push or cmp out xor mov xor cmp mov and into cmp xchg xor gs push mov inc aam mov pop cmp adc cs adc cmpsl lret mov inc icebp lods in stos cmp mov or cli add repnz insl loop xchg push mov mov data16 mov pop outsl push sti add inc in sbb clc or sub movsl pusha iret dec mov inc fsubrs push sbb pusha mov cmpsl into sbb test add addr16 mov and mov mov pop xchg sti xor aam iret dec lods test arpl push push cmp aam mov xor sahf xchg push dec orl push push xchg xchg dec and mov lds xor addr16 bound xcrypt-ofb cmpsl scas xchg out popa and scas ret pop xor dec adc pop sbb dec cli hlt imul pop dec rorl clc inc jmp jle push adc mov and sub push inc sbb sub out xchg pop mov xor cmpsb jne pop lea rol ffreep outsb or push gs inc fmull xchg rolb xchg cwtl xchg pushf aaa pushf test fcoml ret aas das pushf sub insl jno lock ret pop mov xor repnz leave dec imul cmp add (bad) scas ljmp insl decl pop pushf js xchg jno cwtl out lock das push lds cmc (bad) fs sub movsl xchg pop or jecxz out in dec sbb (bad) mov iret (bad) (bad) pushf lods sbb js shrb xor test (bad) or fcoms xchg push pop movsl add mov ja ret jno sbb mov push ret (bad) jmp out xor xor mov outsl scas (bad) sbb bnd imul test sub or cmpsl push pop aad add lods dec sub add (bad) fmuls xor dec out cmc jecxz mov repnz incl pop scas mov mov lds mov js bound mov in lret outsl test (bad) loopne adc cld sbb cmpsl ret insl cmp xchg lea test jne cmp call lock mov jmp clc fldenv xchg mov fidivl sbb dec clc or xor rolb popa aaa stos repz inc jle mov std imul jmp inc stc cmpsl imul mov sti js movsl lock push add and fadd repnz test dec dec test jge adc add orb mov imul in sub mov pop sub cmp das push fwait dec xchg pop aaa push mov xor into fnop std xchg add pop (bad) ljmp cmp jno cmp lret stos lcall in jg mov xchg pop dec ds decb sub in pop dec ret or mov test inc pusha rorb scas or (bad) loopne (bad) ds xchg xlat mov sub test and aad dec (bad) enter scas push scas movl or sub sbb cmovl cmpsb pop sarl pop lods mov test je xor xor (bad) cmp (bad) lea push jb push push xlat sbb cmc xchg mov mov int3 fs and push (bad) sbb ror and movsb cmp pop mov mov pop lods mov cmp mov xlat xor lret (bad) mov push pop add aad repnz lods pop push dec jnp into xor dec adc (bad) lahf mov mov cmp iret xchg daa stc pop lock adc xchg dec ss (bad) and inc sbb push test cld (bad) adc ja and scas sbb jg arpl ss xor adc (bad) std out mov push jno in (bad) mov mov orl fst mov aas and pop ds mov addr16 jns add cmp pop inc xor aaa loop stos xor sti mov js popa nop test js sub inc push lods cmc jns xlat sahf cmpsb and lret xchg sbb push test push pop movsl insb push mov arpl dec gs into mov in daa fildl nop cmpsb icebp xor arpl push dec mov lods xchg notl pop ret cmpsl ljmp outsl mov or test pop cmp test sbb xchg xchg ljmp ja lret push lret pop (bad) xchg sub inc mov in inc arpl dec cs mov cld mov inc or mov les mov adc sbb imulb sti (bad) lret in mov jne pop dec fistp insb jp xchg push pop lock dec in and jnp loop dec cmpsl cmp ljmp cld push xchg jecxz mov sbb arpl or ds mov imul dec inc addr16 lock inc (bad) adc ja dec mov in push insb inc sbb inc (bad) ja loop xor add stos jge outsb cmpsb xchg adc mov push inc (bad) xlat (bad) ja jno xchg push mov xlat inc (bad) pop daa fld hlt aam cmpsb test add scas or mov in and pusha adc lock and (bad) mov stos cmp rorb jo sub mov mov cltd xor jno sbb fidivr dec loop mov xchg loope insl and add (bad) stos cmp hlt mov pop jns dec dec icebp dec mov push add push cmpsb xlat adc out mov xchg in inc and mov jge (bad) mov aas pop jge xchg adc (bad) sti mov notl mov and jge nop inc shrb outsl mov lahf mov inc jae add xchg out test stos cs movb repz inc inc dec sbb repz xchg jo daa shlb xchg fisubl mov cwtl inc inc enter xor dec cltd jo push and add fnstcw cmc mov xchg (bad) cmp in jmp into xchg dec fwait insb pusha imul inc stc sahf clc sbb negb jbe cmp (bad) pushf jg ds les bound (bad) dec mov ja xchg (bad) ret aam in sbb repnz pop rorb rcrb adc movsb sahf fs orb jl cmpsb dec pop jmp cmp and mov roll mov inc fnstcw mov mov adc or add aad roll add scas lcall aam dec mov sbb pop inc aam cmc mov push sub xchg imul sbb add and (bad) pop jne mov and xchg or push jbe xor and shr stos lds dec xor jnp test xchg cld sahf bound pop (bad) out mov enter insl adc dec pop dec pop mov mov movsl xor (bad) pop fwait pop xchg cmp inc inc scas cmp mov insb cmpsb fsubrp mov sahf cmp adc push shrb mov xchg xchg (bad) mov imul clc sub insl cmc ficoml pop enter outsl ret lret push aas jl dec mulb iret xchg (bad) (bad) outsb inc or pshufw sbb add scas xchg leave mov sub es xor push rclb out fisubr (bad) and pop mov push and gs sbb cmpsb jnp dec sbb (bad) jb shr jnp lret sahf outsl add pusha sub cmc out inc sbb sbb jecxz jno les pop lahf dec sub dec and fisttp or out movsb inc sub repz outsl jb xlat hlt xor sub push and sub dec test mov cmp cli in mov push fnstsw push pushl inc movsl add stos js sti mov or scas outsl mov fsts in (bad) jns sbb cwtl push insb sbb or pop cmpsl push dec jge loop pop aaa mov nop add and es jge fs popf jno (bad) pop cmp sbb je dec enter adc add test shll jmp enter scas (bad) cmp push (bad) stos dec lcall xlat adc std test jae push das push xchg xchg adc cmpsl jmp push (bad) inc jle cmpsl lcall mov adc sti push les cmp fiadd int3 (bad) fwait pusha push jp repnz hlt xchg cmpsl fisubr or sub scas addr16 push cmpsl shrd add rol inc and sbb jg add pusha jge add shll xor dec shrl cmp (bad) mov inc cmp loop (bad) adc fcoms xchg adc pop lea or jnp rorb rorb cmp addl pop and cwtl jg push xor jmp pop in stos rcll fisubr jp jae dec jns mov mov fwait push adc nop les mov negl fnsave mov psubsb pop imul fdivrl sub mov mov jmp loopne mov sub mov lds sub push das cmp nop scas cmc lahf xchg (bad) sbb adc cmpsl add xor js cmc stos or and shll out lock rorl ret and jp cmp lcall call cld nop xchg dec data16 jle inc mov pop outsl inc ret lret sub imul sar push popa outsb or movsb push push rorb push mov call leave pop pop dec je push push outsb pop push xchg jge sarb sahf jbe sub mov fsubs loop inc jb movsb jnp xchg test sub jno pop leave scas cmc push call cmp xor mov fucomp aaa loope lods icebp mov rcrl xchg repnz add push addr16 fstpl inc cmp (bad) and inc loop xor mov lahf test je popa repnz imul dec adc cmc in (bad) fwait lcall push jne push push jmp cmp jns jp outsb dec cwtl outsl mov test cmp sub jl jl scas mov jp adc xchg fmull outsb xchg loopnew jmp jns sub loop xor sbb (bad) push out pop int (bad) aad jns nop push pop bound (bad) adc or pop aas dec (bad) xor scas outsl inc cmp add xchg pop xchg mov dec adc loope mov fcompl pop lds adc sahf jp xor negl mov and rcrb and xchg hlt cltd cltd fcoms ds add scas sti (bad) daa divl xchg cmc bound fmul rolb (bad) js aas pushf cmp pop imul lods xchg adc out out ret sarl leave push adc call in or xchg fwait push lds and add arpl cmpsb or popf lock xchg nop repnz cs lret lahf mov jb fucomp cmp dec in fmull cwtl dec jp (bad) out outsb xchg lret adc or mov aam in enter rolb inc in xchg adc inc outsl fs addr16 int outsl cmpb pop fnstcw mov add dec jecxz pop insb test mov insb jl push sub cmp daa (bad) pushl pop (bad) dec xchg (bad) enter push push subl dec jae daa les dec xchg mov lock shr jb xlat bound stos xchg and arpl ljmp xchg adc stos push dec and xlat sub mov cmp out insb in fst mov ljmp (bad) outsl jbe gs mov mov inc out push dec out adc movb lret jb cmp dec push loopne pop inc (bad) adc pop insb lahf pop ret (bad) loopne inc popa pop loope mov std daa dec aas roll sbb insl fcoms sbb loop xor pop xchg push jecxz in outsb iret xchg fisubr fcomps mov cmc cmp bswap adc jl xor out rol jle (bad) rolb (bad) mov daa shrb test and pop testl movb ret push (bad) mov dec rcr pop mov cwtl insl push ret jecxz pop sub mov int sbb xchg pop and shrl in push test imul mov (bad) and dec adc mov inc cmp or mov adcl rclb push xor jecxz cmp out mov jae add lea ja (bad) mov aas inc mov imul push addr16 ret in ljmp jp (bad) rolb cmp data16 jno xchg pusha fldt and cwtl cli jns iret out gs (bad) xor jno inc addb das push lahf push lods pop sbb aaa mov xor inc outsl out and clc rcrl push push cmp dec inc cmpsl adc cwtl (bad) dec in or mov inc mov xor push add inc mov repz pop add inc shll sub mov adc nop xchg inc sub std (bad) (bad) sub mov (bad) sti jb adcw pop popa cmp add add mov or xchg xchg xor das imul or inc sbb xor out jno fwait popf mov movsb dec adc fistpl xor push dec jae in adc pop out loop (bad) rcl std mov xchg aas fstp mov aam pop arpl insl js loop and dec push shr call dec daa sbb jge xlat xchg les jb dec je jne fs mov popa imull aaa movsl scas orl cmpsb push pop cmp lret test push cmp xchg test repnz imul jmp daa aam sub pop lds push repnz xor dec clc sub sbb adc xchg hlt fdivr aaa lods push sub (bad) pop clc decb popa popw js push into insb mov mov stc je dec push stos jg inc cmp lods shl or dec pop aam push sub xorl mov fwait mov push ss pushf inc xlat adc jb pop or popf xchg mov add imul sbb dec mov fcoml int out sti xlat mov fcmovu (bad) inc scas and ds pop repz sbb push inc icebp pop lea dec mov (bad) nop pop xchg loope jne push cmp aam out hlt fisttpll mov or dec (bad) leave mov jo xchg sbb pushf (bad) jne out (bad) hlt gs jle (bad) hlt sahf pop jge insb mov cltd jmp mov and sbb lcall cmpsb mov data16 mov mov xor (bad) mov gs xorb adc sbb cmp inc adc pop lret les repz add (bad) push aad arpl inc pop cmp and mov je xor sar aam or jb cmp xchg jne xorb or outsl adc lods mov cmp fistp loop jns (bad) (bad) add imul les and cmp pushf loope imul dec mov pop ja cmp lret xor jne out and int xor push leave ret jns lds dec mov cmp fldenv out and ffree shl mov jb xchg addr16 push adc sub gs pop pop in cmp imul out mov inc in imull mov sar outsb cld jns call inc push sahf dec call dec pop lret dec in dec into inc sbb pop shr mov sbb es xorl pop xor push jo jb adc lahf and lret cmpsb mov mov enter mov adc mov jns js ficom xor aad repz das jmp lcall dec insb lret dec iret pop inc pop jl enter sahf (bad) push ret xor leave sahf lods addb in popa jge adc repnz repz leave push jne pusha pop pop test cld mov popa adc adc stos out cmp xor dec and inc xchg cmpsb push cmpsl sub lds adc or mov popf mov push lret mov jbe xchg and pop mov (bad) lods and cmp push inc fidivl push xor adc adc ret push sub fstl test hlt (bad) cli (bad) or fldl dec in adc call jecxz rol movsl inc xorb mov mov sbb mov cmp test xchg mov ror out or fstps mov divl cmp jmp stc es in shl (bad) je inc pop adc imul jne adc push cmp xor push or adc ja,pn sub jle and mov movsb mov (bad) xchg push sbbl test test fcompl mov aas les ss cltd sub and dec add in mov movsl dec ror (bad) test jmp loopne push aad jg mov int3 std inc rorl out xor (bad) push sarl ljmp push jae jo xor dec out cltd cmpsb xor aam cmpsb ljmp daa dec iret mov call dec std (bad) mov push add (bad) aam push lret adc cli dec or mov dec hlt mov (bad) add or stos sbb jns mov jae loope divb mov jge sbb and sub shrl cmp or lret xchg mov add scas xor enter insl mov push aas xchg outsl cld loop cmpsb insb ja lcall dec mov jmp lods stos dec dec arpl jl jae popa inc xor out sbb rcll mov cmp jae sub daa in aaa xlat out clc add xor loop mov pop movsb pop and adc mov nop inc aam cmp mov and or stc js outsb mov sub stos std sbb (bad) les dec add lret cmp lcall sub pop das sub pushf mov fiaddl adc sbb push fs xor rcrl repnz add jecxz fdivs out js sahf jns movsb dec xor shll inc xor out jns lock mov mov mov fcompl fdiv dec adc imul mov mov (bad) popl icebp js enter mov ds inc insl jb jo cmp xor cmp xchg fimul clc jns adc mov lahf (bad) ror mov or or or aas andb cmc je sbb out arpl jl into dec es aaa sbbl sbb cwtl push or inc test into add out mov adc popf pop std out push lods mov sbb sbb lods scas sub enter popa jmp pop (bad) inc push dec pop dec enter xchg mov rorb fcmovnu rcl and lods push (bad) sub mov fmuls dec or push add lock loop mov movsl loop jns sub jne cmp mov xor imul pop xchg cmp sti dec jmp adc jmp xchg gs mov sbb and int loopne push mov mov sbb sahf testl xchg scas jns dec pushf clc mov scas mov inc add (bad) (bad) ficompl incb subb dec inc hlt dec adc das dec insb fs jno andl not scas mov lods movsb mov cltd imul out or mov in rorl inc and flds sub imul and inc mov sbb pop xchg addr16 xor pop jnp sub outsb cmpsb loopne sub mov fwait jecxz or lret sti arpl lahf cwtl mov mov add xor aas adc mulb add jbe je hlt rclb push mov add pop jno pushf push ja movsb (bad) int3 shl daa mov xchg xchg (bad) mov les inc pop adc mov cli movsl lahf (bad) mov cwtl mov push sbb test ds mov sub aaa mov (bad) iret daa mov dec arpl push add and xor mov bound xchg (bad) scas sahf psrlw jnp out icebp xor pop dec idivb pop and movsb jo pop pop cmp adc (bad) lahf outsl or iret cmp add fldcw out adc or xchg psubb sbb push cli mov xchg fisubr adc sub or mov jbe rorb mov sti inc aas je incl aad jp jg xchg sbb mov out xor int sbb push test sub xor jno pop addr16 cmp or cmp add xchg in adc mov xor push ss fisub mov sbb dec pop lret das (bad) jl in mov pusha cmc push push fimull or sub ja (bad) sbb mov cld popf in jmp adc and mov push imul xorl cmp dec lock shrl sbb fdivr arpl and popa dec cmp sub inc push pop lds mov mov sub call dec jmp mov push bnd dec insl push jl,pt jbe lock ret mov push std hlt mov xor mov mov xchg (bad) inc sahf arpl mov gs test insl sbbl outsl ret leave mov or icebp lret lcall iret and push jp inc inc das add mov adc pop pop insb cmp adc xchg icebp jbe cmc push int aad mov dec addr16 call lret and aam mov cmp sub loope and fmul jecxz (bad) inc jbe ds loop std (bad) push jnp inc push gs add movsb jmp insl sahf or dec push cli mov ss hlt push or add mov stos pop inc jmp lahf int bound ret push jle mov xchg mov mov les jle mov fwait insb rorl mov adc ljmp and outsb jae jge push xchg in ficom xchg dec (bad) and into rorb jl xchg sbb ret les xor gs ljmp push xor flds imul push (bad) sbb dec sbb insl inc inc mov stos sti (bad) test dec jg jnp sbb idiv mulb ret xor fldenv or pop (bad) mov adc lcall jmp ljmp ds add xchg inc cmpsl push out mov and cmp cld iret out test dec inc xchg ja (bad) jb test ficompl mov push (bad) fnop inc dec lods add add add sub cld add ffreep sahf movsl add cmp mov movsl test and mov push xchg loopne aas sbb mov insl jmp mov ja enter mov dec mov jle sub sub (bad) sbb mov or and sub mov repnz xor dec mov push mov add clc mov pop inc pop int or dec pop jae mov pop call ss in in out sbb xchg cwtl adc (bad) test and push int loop pop hlt inc nop inc test pop pop push mov sbb inc es das and pop xchg xor mov test cli fdivl xor nop lret pop pop jp jbe mov in cmp jle movsb in std push jp inc je and sub hlt inc and loop pop lock lcall mov shrl sbb and sahf adc in popf in inc xor xchg mov sub aad loope inc pop sub fnstsw rcll (bad) mov fcmovne sbb stos in iret in fisttpll mov and add inc sbb jnp loop mov loop int3 hlt pop in sbb inc mov mov dec enter xor cmpsb test (bad) jae mov cli scas push stos adc jecxz fcomi mov outsl ja push sarl das mov std mov cmpsb mov ds jnp xchg mov in (bad) scas xor fidivl enter hlt xor daa insb pop (bad) out push pop pop aad fbstp aad sbb ret dec fildl call push inc aaa sti aam mov and jne fmuls js or cltd (bad) rcrw mov sbb lds fstps xor pop cmp cmp insb bound sbb pop xchg inc pushf or mov popf idivb adc popl mov dec cmp push sbbl test jnp xlat cmp aas xor pop ret xlat pop les into or xchg jns repnz push test or jecxz es (bad) (bad) inc push jmp (bad) in lea mov cmp mov int cmp cmp pushf sub mov xor mov xor ret adc adcl out xor out mov pop js or inc std dec xor (bad) adc in sbb mov hlt dec outsb sti cmp or mov cltd fistp inc lret cmp xchg movsl (bad) mov stc pop cli (bad) xor or xchg pop fidivl push fisttpll test data16 sti jmp sub adc in dec inc mov adc mov mov and out push dec pop stos pop and cs inc xor std call sbb adc and shrl and inc loope ljmp orb mov push aam aad jle or cwtl aad jle push in out hlt daa pop fwait or adc jb cmp xchg xchg fildl aad shrb dec and bound mov (bad) int xchg jl shrb cltd sub decl ds or inc adc (bad) mov ret popf sbb cmp leave test dec cmp bound fmul (bad) mov dec jne xchg out jmp clc stos imul jb setle adc outsb pushf ret aas ljmp adc add dec and aam out test shrb enter mov jge push dec and and std in in sub push dec jle add and rorb xchg xor adc sbb add sub (bad) and adc fisttp ror js jae cmpsl xlat push sbb leave jl sbb idiv cld cld pop mov add jge dec add push push (bad) xor adc mov lret pusha sub shrb pop (bad) imul inc ja std pop cltd dec lock cmp pop sahf in cmpsb cld int fcoms arpl repnz and pop arpl mov jecxz mov lret outsl mov jmp popf cmp adc popf push out push mov dec xchg fstpl mov sahf test sbb mov in add jnp cli notl pop mov mov adc ja dec scas repz imul in jl jo cs (bad) mov adc popa jge adc sbb iret mov rorl jp,pt jecxz add or or out cmp add pop shlb mov shlb mov bound inc mov fwait and cs imul ret xor imul imul sub in jecxz mulb inc xchg or xor rcrl (bad) fistpll repz lret fmul mov xlat adc ss pop movsb or shl and mov or or stos outsl divb (bad) and inc ret lock mov mov fsubrs mov dec sbb sarl das cmp adc adc pop xchg fs xorl insl jbe rorb add scas int3 loopne dec fstpt pop mov push jno sub shlb mov rorb mov pop out mov push ja in xchg data16 xor pop jns or or or and and (bad) jp pop xchg xchg int or cmpl (bad) mov or mov ljmp hlt add in xlat loopne pop jnp push repz ds sub jle add (bad) rorl jmp inc lods lods pushf lock inc mov mov xchg (bad) into xor out mov mov testb pop push pop push add stc dec and inc (bad) jne jns cmpsb stos xor pop in xchg xlat cmp mov aam sahf rol mov or jge stc cmp mov (bad) sbb loope stos add insl addr16 xchg pop cltd testb lods lcall cltd pop xchg ss xor loop dec (bad) mov cmp sub sub subl mov fcmovb jb repnz rclb mov repz loop jo or lds out xlat jle mov jg loop mov push dec jle scas rcrb scas or enter jnp adc add lretw bound xchg ljmp and inc aam ljmp ret pop loop and int sbbl fstpt cmpsl xchg xchg pop cld fxch call outsl inc addr16 outsl rcrl inc stos inc imul rcr inc in (bad) out sbb xor mov mov in pop loopne mov fstps fdivl pandn push mov or jbe mov pop cvtpi2ps (bad) mov cmp mov cmp fmul out imul pop mov inc adc iret jo mov mov (bad) adc arpl pop pusha divl mov mov mov adc into inc mov jae repnz sbb mov pop add sbb movsl inc data16 movsl sub sub ljmp test int stc jg div pop mov dec popf (bad) jbe pop (bad) pop mov inc xor loopne loopne jne fildl push (bad) xor (bad) shl rsqrtps sub cmpsl xor inc (bad) int3 push cld pusha cmpsl jnp sbb aad es dec aad xchg adcl pop jl jbe pop pop inc mov add flds dec cmp cld movsl jns xchg jbe mov add or jp mov mov shl pop (bad) iret push dec ss adc pushf mov mov (bad) mov cltd inc lea (bad) xchg arpl cmpsl subl jno arpl scas adc in adc sub jg xor lret mov xchg sbbl cs fwait mov ja jecxz mov mov and dec adc xor mov popf mov cmp pop inc or push cmp mov sbb xchg out push fisubrl lret sbb jp sti sub xor int aaa das jnp iret or cmpsl (bad) shrl fadds sub or adc xor cmpsb cmp push (bad) stc pop dec (bad) sbb jb mov fs fsubrl lret inc or imul cmpsl jp and pushf jno sti sarl xchg dec pop dec out push jp inc sub imul int3 pop adc (bad) mov or in in pmulhw inc pop leave inc xchg daa or mov lret dec sbb outsl xor mov mov adc fisub and nop jecxz jge cmc inc jae enterw shlb mov (bad) fistp cmp push inc dec cmp dec pop bound loop sbb sbb repnz inc stos cmp cmp and (bad) xchg or ficomp rcrl adc sub push mov add insl cmp ret mov insl movsl jae dec lds push cld fs push mov mov adc push xor das lret movsb pusha xor cmpb testl js add nop loope mov push loop xor shlb rcrl push cmp xchg xor adc cmp jbe xor mov lods cmp fs cmp dec lret nop xchg add repz testl add adc pop aam cld sub ror shlb push mov xchg sbb push lret or jge adc add outsl (bad) icebp vmovd xchg arpl jge les sbb or ret test fldl leave inc call or add out ja cs in xor cmp fistl mov dec mov jb (bad) ja jns ss jmp les hlt mov addr16 inc pop test fsub pop and jae ds pushf ficomp fldcw cmp or jle dec sbb pop mov mov and inc shrb xchg scas push movups mov hlt orl cli fs bound sbb dec pop daa mov or push (bad) mov dec jne repz ss in dec dec scas mov adc mov mov pop stos icebp loope pop cld adc add aam int3 test popa dec repnz push int3 fwait ja mov fwait sub dec jg repnz xchg int in mov in mov mov ret scas or out push jmp lret mov or push mov std xchg mov jle mov xchg aas aam mov decb adc cltd imul hlt push lcall mov cld xchg iret inc daa mov lret es sub fistp push xchg mov or and lea inc enter cli mov test imul popf out cmp jb add enter rorl js and hlt dec mov mov stos xor sbb sbb adc out popa add xchg repz jo mov (bad) sub ret pop in iret loop pop xchg stc ljmp jbe ljmp das sub push idivl cmp stos scas int daa add aas fwait inc adcl nop int cmpsb mov sbb in cmpsb ja mov hlt inc mov ret aad mov jl pusha sub jmp mov and push sahf push imul mov jmp (bad) loopne sub push pop in pop mov clc xchg xchg jo pop sahf pop jp out hlt xlat movsb xor aad mov out je mov shr movsb pop push int lret (bad) dec add cmp mov enter xchg cltd stc cltd inc lods mov xchg mov iret mov lcall popa and push js in dec es xchg into test and xor ret xor jbe aam push fs mov js xor mov (bad) jmp das dec jne mov movl pop hlt dec shrb and lds or scas (bad) mov mov cwtl fnop sub cmpsl imul xchg enter xchg mov mov inc je cmp push adc (bad) jns push ljmp cmp jle pusha add xchg inc sbb insl xchg shll jecxz loop or rcrb andb jne xchg stc fidivrl stc gs jl shrb mov and push jecxz xchg push pop imul mov and ret (bad) pop inc arpl test push hlt pop js dec sbb sbb mov cmp xchg rolb cmp scas or or pop stos lods ss cwtl scas xchg push mov insl test out adc iret mov mov and lods je into inc cmp push (bad) js (bad) add xor pop or in push xor pop gs fxch push test dec call cmpsb test jp (bad) fisubl out fmulp popa or int ss popf dec rcll icebp mov jecxz add rcll test and or ss add mov and mov (bad) inc imull xchg ljmp ret adc adc nop loopne mov jno test cli mov sbb stos or ss mov into inc jns jge gs dec fwait repnz jg push mov out pop (bad) stos incl adc loope cld je popl sar in sahf je sti mov mov sub in or rol pop in add mov jle gs xor cmp ds push cmp or orl jbe jno insl push push add adc pop inc cwtl xchg and daa or push adc add aas out xor movsl arpl shr cmp cmpsb push push add adc xchg call adc loop sbb (bad) sub xchg arpl iret mov addl jge mov pop sub stos add pop sbb ds es adc rorl or mov popa cmp insl sti scas (bad) adc or sub fmul cmp pcmpeqw imul and mov push call popa mov dec insl mov gs iret cmp mov pop lret adc lret pop fsub in fildll aas sti test jne push jne and cmp jle lock clc mov int3 sub or jno or dec mov insl in jns inc cmp inc adc dec cmpsl fwait add mov cmp pop lret arpl xor push loop mov mov jne mov xchg insl (bad) sub xor test fdivs jnp ja xlat shrl test jl add rclb cmc aas sbb in test adc cltd inc dec pushf mov mov pop push cmpsb dec cmp dec popa int add out pushf and ss pop sub ret xor aas test inc xor test daa jbe mov sub int3 jo (bad) loop lds rcrl adc repnz loop (bad) scas inc xchg test (bad) sub fisubr pop inc mov fdivl sub into mov loop pop xor mov xor (bad) jmp jge mov xchg add (bad) sbb hlt mov insl imul push mov ljmp cmp mov lock das lcall xchg mov lods add data16 cmp mov inc and jno repnz mov sbb wrmsr enter insl pop movsl jl dec test les ficomp mov add rcrb js push push pop leave xchg push pop add imul repz ret jle rorb divb or (bad) cli cmp test xchg adc push inc (bad) sar sbb dec inc ljmp scas ja jnp lcall hlt xchg call sub mov (bad) inc sub sti mov pop mov (bad) cwtl aad (bad) jo aaa jnp xchg or je repz in mov cwtl outsb mov xchg xchg jns pop or addr16 aad popa movsl xchg cmp stos adc enter jo jmp aam jmp das hlt nop in lahf cmp adcb sub aas mov jl add mov (bad) outsl xor or or cmp ret jge in mov arpl ret dec std or dec push dec push in adc loop rcll xor popa js orb arpl ds dec push mov and scas outsl pop stos sub adc out cmp lods and or mov mov xor xchg in inc mov add movsb out cmp in adc leave and aaa fcmovu fimull jbe stos sti shrl insl xchg mov sti fwait into sub inc enter adc fwait int3 push lock xor pop nop insb js or or dec xchg hlt or adc and stos addb jle push sub xchg sbb fmuls jno fcmovne sti cld das scas cmp xor jne pop dec shlb je lock pop cmp nop cmc cmp add sbb xor fstpl mov or cmpsb jge pop aad dec push lahf mov jo out popa mov mov and sub inc fild movsb ret lret stos push arpl or and mov js in push mov cld mov mov test sbb xor add jge pop es and insb out xchg add jl sub enter scas mov jns mov (bad) push out sbb scas pop cmp cmp pushf nop jmp xchg sub pop (bad) xchg or scas lods sbb stc fucom icebp (bad) repnz sub dec (bad) adcl out mov jge mov dec rolb jmp sub loop xchg add xor into sbb pop and outsb repz jp cmpsl pop in adc xchg arpl push divl xchg pushf mov jns push jge or pop out rorb mov cld roll push in pcmpgtb aam insb sub mov int3 lods add cmc sbb xlat sub pop pushl push or (bad) fst pop enter mov aas cmp fild sbb test mov rol mov mov add xchg pop inc in xchg pop decl out ja es pop repz ret pop xchg adc or xor shrb xchg (bad) and lea movsb mov in sahf lcall or sbbb in lods sbb faddp (bad) aaa ljmp lods or nop or or les mov ret sbbl (bad) daa sub sbb dec push out je xchg sbb jo and xchg call jge pop jns ljmp pop sbb mov insl lods mov lods lds lods rol int imul xor xchg mov mov cmpsl shlb xchg popa aam std cli sbb inc cmp dec xchg cltd jne xchg std xchg addr16 push cmpsl push imul adc iret add lods cltd int ss xchg and movsb pop push das xor stc sbbl (bad) jns stc mov add lret add pop popf sarl mov arpl inc loopne push bound dec xlat decl out or cmc int aaa ja popf (bad) and (bad) cwtl xchg push fmulp leave dec in addr16 into push mov mov cwtl inc xorl andl mov mov imul jmp sub (bad) push push into mov sar push and notl mov (bad) gs dec dec pop push push pop xchg lock out ret sbb xchg popf dec aaa sub and pop sub cmpsl xchg lea mov sahf fildl dec jecxz xor adc xchg cmpsl hlt jle (bad) aaa or mov aam mov lcall hlt sbb in cwtl and in into mov pop xchg decl aad imul cmp mov stc adc inc or push xor dec sub add sbb scas lret sub (bad) movsl mov pop stc adc pop inc jg ds cmp call pop stos test sub mov test cmp mov mov clc imul sub imul iret stos jl cmpl sub xchg mov jno push adc or loop mov pop sahf dec hlt loop xchg loopne (bad) mov cmp out or fwait mov setno sub add sub add xchg fbld or in ljmp cs xchg mov cmp daa add jecxz sti and push mov inc mov outsl and mov sbbl xor cmp or stos cmp push sbb outsl push or pop (bad) pop adc mov push xchg aaa xchg pop ds or cmp ret stos xor sub stos or inc (bad) lock mov cmp xorl mov mov es scas mov xlat jno jg pop push mov or push mov or inc mov xchg dec cwtl jge imul icebp lret pop or jae mov cmp dec pop pop in jg mov cwtl test sub mov push out test add in add imul lds pop jns addr16 mov rcll fsubrs (bad) jo (bad) push pop insl les bnd fs cmpsl div les or pop std in iret pop adc lcall ret pop addr16 cli xor lcall loopne and mov ja out jae stc sub push test jns lock push fwait mov out std into mov (bad) popf int3 jmp pop ret xchg in out xchg in or call cmp xchg ret in inc jno jnp xchg cmpsl fs jbe pop aaa adc add test xchg insl push adc fsubr repnz mov mov adc cmp outsb scas loope in mov mov or dec cmp dec inc pop scas push aaa lret adc stc cmp push adc jmp repnz stc push test test (bad) pusha jae push stos (bad) pop xchg adc int3 cld or cmp inc xchg mov and inc xchg ret sti dec mov lock mov dec mov sbb cld les daa inc adc or and es fnsave mov adc push ret mov cmp (bad) pushf adc push aam inc shlb pop mov xor (bad) aaa dec add aam sub xchg je add (bad) xor adc mov in fisubrl pop sti mov inc sti jl inc dec into (bad) push mov adc push cmpsb cmp sahf mov xor push mov mov xor ret and addr16 scas enter push ret lods outsb ja (bad) je inc imul (bad) jecxz mov inc (bad) popa jbe rolb lock repnz adc (bad) repnz xchg jb lods adc scas pop lods aas mov mov mov adc or jle aad inc add cltd sbb or mov shlb jns frstpm(287 loope cmc fsincos or fs push xor mov arpl push cld mov pushf push es rorl ja add xlat mov les (bad) and pop out cmc push sbb cmp rclb mov jae pop mov movsb push cmp test sub out xchg clc shl test push xchg iret jecxz jecxz dec push repnz pusha ret lret mov dec cmp jecxz dec add dec lds imul les push adc jno mov inc bound pop aaa inc sahf iret mov insl mov iret adc into push leave out aas sarb (bad) and call adc lret fdivl popa fidivl or mov out xor mov movb xchg idivl cmpb mov call dec xchg or xor dec ljmp sub iret pop sbb mov gs jle push inc mov xor xor inc pop mov and fstpl pop jo flds and jbe (bad) (bad) insb sbb daa pop adc (bad) imul repnz inc movsb fs (bad) pop xor test mov rdtsc cmpsl ror or push pushf rolb pushf popf mov cmp and sbb adc jno push mov mov lahf mov xor cli mov pushf pop pop add sub mov sub in push ret xchg and call mov icebp test cmc test fiaddl lret lret sbb add gs out out push pop (bad) aad (bad) pop or ret int cmpsl xchg loopne movsl xor add insb out xchg loope rolb pop fldcw sarl adc (bad) jmp bound sub jns lds cs push arpl xchg in insb jmp add leave lahf mov add cmp dec outsl aas xchg test and mov pop and adc fsubs add jge jecxz mov addl mov cmp shr add cli inc push jle ja push insl xor mov push insl pop ret sbb add pop jb in bound fnstcw (bad) xor js cmp sbb push push sub test sub aaa out cmpxchg jp adc iret push push mov incl xor js dec jne pushf cmp stos andb addr16 fbld in lock ret sarl mov in aad pop sti (bad) mov add fmulp insl pop in adc addr16 mov jp ror iret xor daa mov and clc jp ret pop cmp mov (bad) xchg loope inc (bad) push dec (bad) jp push aaa inc (bad) mov pop push in sbb add xchg push inc or lock (bad) mov mov add push popf inc xchg ljmp fisttp les add push adc or mov or add mov inc int or mov push gs pop stc sbb inc lret push cmp sub add or ret cmpsl out pop repnz ss sarl sub pop or or daa jns ret nop xchg xchg ret mov inc test push insl fisubr jle and xor pop mov repz jg sar out sub int3 ret pop inc icebp add test repnz push out push and std hlt push aaa mov pop jno xchg mov rclb es popf or lret or and movsl outsb sbb std jne icebp push (bad) (bad) dec lea lahf pop mov fimul jo adc mov scas push jne ljmp bound fwait adc adc (bad) shrb out lods icebp int enter mov add xchg js push mov sbb addl stos sti pop nop movsb adc lea call mov pop es loop,pt lret lds jnp jge sub mov inc lahf and mov (bad) ljmp pop or cmp aaa sub mov loope and (bad) dec sysenter fdivl popa xchg popa fucompp xor sbb pusha andl fs cmpsl les cli pop sbb add push and xchg xorl push ja sbb ret inc xorl jns fnsave aas mov inc mov mov xor mov lods push aas or sbb mov mov jge xchg sub mov stos pop aam pop rcll push adc (bad) scas cld push push stos sub sarl je loope cmc mov push push add bound sub and (bad) cmpsb push dec ret sbb pushf mov push movsb arpl and dec popa and lds (bad) adc mov mov stos and (bad) out loop into mov scas mov lret cmpsl cld das ret mov cltd leave nop cmpsb cli aam sub addl jbe scas imul and sub xchg sti xchg fdivrl adc testb pop push push cmp pop mov imulb push xor out or jl enter das jecxz test mov out iret jle mov lcall sbb (bad) dec add cli pop or mov pop mov push movsl out jl (bad) xor xlat xor push popa (bad) cmp xchg shrl sbb inc in std push shrb jl aam and (bad) xor cli push addl xor xor xchg int xchg lret lcall (bad) (bad) xor popa sahf fadd mov inc popf dec mov jg ds push (bad) aam mov (bad) cmpsl iret inc dec scas pop xor cmc dec jo or push jb decl push dec aam aaa push jns mov pushf mov add jne add mov dec jno and (bad) jg jmp aam add fstpt (bad) aas pop mov mov cmpsb dec or (bad) jg and jmp jb push xchg mov inc adc leave loopne fsubs ss shll sarl pop cmp pop or call out sbb dec imul add icebp ss test add cld push fcomps add aam fsub pop and cmp ficom imul cwtl test clc inc mov mov dec xchg pushl xchg mov sub cmp adc pop in rcrb sub andl mov pop or in pop stos bound cmp push aam enter dec mov push mov in jle dec mov jne or cmp (bad) inc aad push fistpll js out stos sti mov out pop mov je xchg mov lods cld push mov xchg psrlw mov popf pop rcll xor (bad) dec nop xor xchg sub xchg mov adc fcompl mov test ret gs push das add xor aad mov sbb stos in xchg add pusha sbb test pop adc cmp fisubrl adc (bad) push sbb add pusha ljmp mov and lds dec or roll push xor push dec sbb xor xchg sbb adc (bad) sbb call inc stc xchg and adc enter lahf cmc and sbb mov fisttp cmpsl repnz xchg or call pop mov das mov mov sahf fwait jmp jne cmp hlt lret sbb jecxz cmp out in and cmc cwtl push mov cmpsb push repnz sbb mov pop sbb out out testb pop add inc jnp shl (bad) or mov xor dec (bad) jnp,pn adc and std mov sub mov push stc mov loop enter pushf fwait inc xchg je mov ljmp xchg daa push jb cld sahf jg sti faddl les lea ret movsl fs sub outsb loope daa or outsb fs mov cltd add in stos and cmp mov enter dec push lret or cmp je outsb mov inc imul mov insl lods scas outsb mull mov adc and pop mov add ljmp out fisttp xor or imul push pushl mov in test push mov leave addb mov xor mov jbe inc fcomps sbb bound dec adc nop pop mov jl push cmpl cmpsb sar aam xor fldl stos mov dec inc (bad) pop pop lods testb xchg sbbl sub lock sbbb scas or imul xorl enter (bad) lahf idivb push aam sbb mov mov test push enter fwait cmpsl jo sub aas ljmp xor jmp push outsl pop and inc dec add fcomps pop mov jmp cmp jl pop sub jge aad jno das and push cmc mov jmp in je push repz dec rcll jo sahf hlt and pop xchg fsub mov mov dec mov cmpsl dec mov out adc and dec ljmp pop sbb (bad) (bad) jbe push pushl xorl aas call in out xchg or mov jb andl iret (bad) shll dec test in (bad) lods mov adc cmp add sub outsb xlat loop jg add xchg icebp pop dec into cmc test or jno jmp sbb mov out ljmp cmp pop fild ljmp jg je xchg sub and imul jno and in ja in shll xchg cmp pop inc in mov sbb aas sahf jmp iret xor xchg popa fcoms lock dec in xor cld enter cmp cwtl dec dec int push jg les lahf fisubrl cld mov jnp and dec and aaa lret inc scas aaa rcl push in aam adc mov out les mov mov jecxz xchg (bad) mov xchg shl scas add inc adc push inc addr16 mov push pop fs xchg push test cs inc fbld cmpsb push idivl and push cmp je or jmp mov (bad) and jns cmc mov push mov arpl dec inc xor inc xchg sbb clc mov add (bad) jo outsl (bad) xor js inc cmp pushf jmp or dec (bad) sub scas lret inc add or pop addps insb sbb push add add add insb dec (bad) repz cld xor (bad) mov push and jae ficoml fwait inc jnp pop cmp mov stos sbb pop cmc jge,pt adc xor leave into jns cmpsl push lods rcll fcomps mov (bad) mov mov or mov cmpsb adc sub insl mov pop push subl mov mov popa jnp mov hlt test pop push stos ret and mov sbb (bad) ljmp stos jb mov sbb push xor adc push fcomp sub mov sub mov pop lods sub pop int3 outsb mov inc leave sbbb mov mov xchg inc ja xchg out or sbb cmp push clc inc loopne loop jae or stos cs std sbb push (bad) gs out adc loopne adc push mov xchg insb ja adc data16 sub mov xor xor pop or aaa lock pusha mov pop icebp mov jge add sub es fsubrl xor jge push arpl (bad) inc rclb sbb outsl in outsl or lds out mov ja dec inc ficoml js dec jle xor leave xlat pop dec orl out imulb xchg dec inc xchg dec inc fadds fistl lods xlat push (bad) aaa cld push imul push dec pop mov or cmp push out and xor mov popf test in jecxz dec cmp jae mov rolb (bad) push movsl mov pop cs cmp xor add jmp sub inc adc sbb add mov (bad) inc mov fcmovb mulb decb test sub cmc (bad) rcrl adcb test mov cmc lea (bad) sub or inc push gs stos call cltd jge outsb xorl xchg mov jne pop inc rorl out fidiv cmp adc jns stos lcall xchg iret rclb xchg fiadd notb or mov or faddl mov mov and arpl fsubrl pop mov ret pop outsb xchg mov in in int and rclb mov xchg mov push adc push dec cld push hlt pop push out mull rcrl arpl outsl sub dec xor jle incl out js movsl push arpl sbb addr16 adc testl cmpsl mov mov pop add iret pop popa (bad) mov mov shr adc jb in and in adc jge dec jbe mov test mov sub add out cmp mov sub shrl and outsl out xor cmpl pop imul jg adc les shrb adc mov push cmc jbe fcmovu fldt push leave jle cmp lock xchg push pop std jae ja inc fldenv sbb cli or rolb inc mov push mov cwtl stos mov decb xor shr fsubrs push in bnd addr16 pop and insb incl adc clc mov (bad) in fiadd add jns jmp sub xchg lods sbb ds mov cmp scas mov mov lea and xor lea mov fldenv cld inc sub cmp jnp mov and or push mov decl fistpll (bad) mov pop sub push test iret dec inc sub inc xchg pop push adc sub xchg andl fucomip sbb xchg sbb ds mov mov and repnz rolb rcrb ret sub add and push mov out mov call dec inc adc xchg imul fcoms pop cmpsb das andl inc movsb mov inc cwtl nop xor mov and sti add push out movsl fistpll inc insl cld (bad) (bad) fnstenv add popf inc pop mov push lret pop repnz int and lds ficomp push mov hlt lock lock cmpsl test jno dec out insb shl mov ja in inc js js pop add (bad) clc push push fiaddl push xchg lahf xor pop push mov mov jno fdivs cwtd pushf test mov sbb pop cli stos cmp xor enter out scas mov ljmp inc xchg mov xor jg dec mov repnz int add pop add push popa (bad) fisttpl (bad) cld jnp xchg leave fwait cld addr16 adc repnz mov push jae mov call mov xchg push push arpl mov xlat rcll xchg in sub jl aad lea dec cmp cmpb cli les xor fisubr pushf dec xchg mov ds dec push (bad) addb push imulb and inc sbb repz lea scas sbb das cltd cmpl testl mov jmp sahf insl mov ret mov mov pop loop out pop iret and mov jbe andb insb loopne sarb cmpsb ljmp fwait ret push fistpl inc repnz (bad) pop into iret adc aas and mov dec cltd sub push or cmp sub adc jnp or (bad) jbe movb popa xor mov lock sbb into (bad) xor (bad) out sbb add rclb xchg pop and mov cmpsl lds outsb jo and outsl stc pop add lcall ret inc and into insl mov and js gs (bad) sub leave xor sub or mulb cmp jmp push sub test cli aam hlt je mov dec scas pushf dec xor gs and into pusha adc popa lds fstps aas pop sbb subl cmp adc lock cmpsl pop pop dec rcrl test xchg push std loop sti ljmp repz pop sbb adc out movsl fcmovnu mov mov and popf mov stos movsb mov lahf pop adcl bnd jb mov rep fsubrs gs subl push inc mov jmp pushl add adc sarl and (bad) mov push cli pusha jnp (bad) jns andb repnz cmp sti emms ljmp sarb and out cmp jno testb test or inc cmp pop stc js aad xor add dec xorl inc sahf in lret sub je jp jnp gs and jge jno dec and inc dec fnstenv dec out xchg loop dec out dec stos or pop cmp cwtl shll sbbb std xor in push aad das jge or jl sbb loop idiv or shl xchg fistl or psadbw adc xor fsubrl leave call cwtl addl or js sbb stos mov cmp cmp fadds inc imul add sbb or js cmc sahf stos lret push cs sub sbbl std scas aas and adc arpl xchg test push cmp (bad) mov inc mov add jg call adc and and adc sbb sub bound push sbbb mov stos je mov das fwait inc push pop fldenv ja pusha pop dec dec xorl cltd push xchg jns inc int arpl and push mov push pop pop faddl imul xchg inc mov cmp dec adc xor loopne xchg push movsl in mov lods es jecxz rolb js roll push mov clc and data16 outsb pop test fstl pop andl fsubp pop mov xor rolb popf int mov or xorl aam mov push push sub in mov (bad) lcall push add mov outsb cmp push xchg fiaddl push jl sub rcl push fwait lea scas sub inc push mov xor sarb pop dec inc mov cmp std fbstp js pop xchg stos call (bad) in test and stc jne xorb cltd out outsl or aas dec int3 and pop pop jmp dec sub cli add icebp repnz xchg int3 leave mov or mov xor out ret sbb mov dec xor je out test cli sub clc mov loopne cmp xchg jne push int3 imul (bad) daa ret cmpsb jmp std test pop ret mov int3 test mov xor out mov cmc pop jnp xor cmp fbld out adc cmp xor pop mov ja dec mov out cmp cmp pop lret lds imul out lds mov (bad) mov xor (bad) pop inc and dec or (bad) adc and seta scas movsl loop pextrw jnp jle ds lock add (bad) xchg pop enter pop (bad) mov xor sbb add jae ss stos ss sub pop sub fwait dec lret xchg dec cltd cmp jecxz mov cmp mov popa test jmp sub (bad) mov ds hlt xchg and mov jne dec mov dec shrl or jecxz fxch fcmovnbe cmc push sub pop (bad) scas pop adcl push push cmp cmp jb pop decb or and adcl scas or mov icebp addr16 push xchg hlt mov fcompl xchg shlb sub add and add out or aad cld pop lods dec mov or dec sbb push outsl movsl lahf in enter rorl or sti jo cld mov add mov call je mov sbb jo popf outsl (bad) leave mov sub push in shll ret push nop or mov int3 mov addr16 pop fistl mov stc pusha cmc dec addb mov stos dec and (bad) pushf push adc mov jnp ret mov mov cmpsb mov out fimull ljmp loope xchg push jg mov and ljmp js xchg inc stc pop push hlt mov inc pop cmp add std jmp or push and jecxz out ret mov jmp or imul or clc stos jp lret pushf mov xchg pop repz inc dec cmp mov adc mov xchg (bad) jmp es mov xchg loope push idiv notb lds push xchg mov xchg inc hlt bound or and push lret stos mov lret loopne insb inc fldcw fisttpll lcall ror push or sbb popa or xchg or popf mov dec jne imul inc in testw ja pop adc cmpsl shl adc sbb stos jns or out cmc jae inc cmp sbb iret and mov adc pop xchg loope dec mov push mov cmp shrb lcall aam lahf adc and imul pop or rorb sbb xchg jb mov jno mov lods inc cmp (bad) mov and or (bad) inc aaa dec imul arpl sub ss hlt lcall dec lret outsl bound popa push les push jne dec xchg and adc cmp rcr dec mov in mov vsqrtpd lods (bad) ss rcr lret in or rcl out or into cmp loop mov or (bad) push rolb jne mov push or jb mov or ret cmp mov mov mov mov out adc mov jle pop xchg xor repz aad scas push and dec cmovl mov (bad) std in xor aas jne xchg jb iret orl in jg ficomp pusha sarb add cmpsl jb mov lret push int icebp fsts jbe sbb mov cli fiadd xor test data16 imul push push popf push hlt fstcw xchg mov and std sub gs movsl cmpsb xchg jge dec pop lretw lock lods adc sub jbe cmp out sbb jbe mov mov mov cwtl xor push iret adc lahf push lcall sbb loopne xchg sub iret push or test loopne,pn lahf cmpsb daa push mov lock pop pusha mov loopne mov xchg movsl popa pop imul loop xor in mov fsubrl data16 mov (bad) pop leave daa imul sub aaa add insl xchg test sbb hlt cmp add xchg dec jle lret (bad) fidivrl arpl pop mov jg mov jecxz sbb push aad mov lods movsl pop aaa inc aam mov out inc aam inc cmpsb push je lods cmp push dec (bad) xchg jg icebp pop jnp andl scas popf fidiv dec in pop mov mov aaa mov pop cs sbb sub loopne in icebp and std jmp push sub loope sub and adc rcrl mov xchg loope xor push aas leave sub jbe mov xchg repz pop cwtl aam out (bad) push rcll sub je out push sub insl jb lret sahf mov cld sti fdivrs push mov lret test adc dec inc sub addr16 mov add and xchg sbb fisubrl scas add aas cmpsl int xor jmp insb push data16 sub or jne xchg mov enter xchg inc (bad) nop movsb (bad) rcll ficompl fnop jo pop aas fstps outsl xlat push xchg cli nop in push push mov xchg lcall das dec cltd xchg test sbb jmp jae (bad) arpl daa push dec lea loopne mov adc scas mov fadds and shll push push vmovsldup imul (bad) movsl imul xorb in stos in jecxz dec test mov js fsts add cmp enter fcomps lea (bad) nop rcr lea inc pop nop pop mov sbb js mov mov inc or lods ljmp mov lock aas test je ss mov stos xchg push add dec pop jp add pushf (bad) mov test popf frstor xchg xchg mov ss mov popl push add push xchg movsb pop popf (bad) push scas push jp mov into pop and xchg ja leave dec clc clc (bad) cmc test (bad) jno add push adc xrelease out pushf and mov (bad) cmp repnz jg,pt rol pop adc popa ret lods dec arpl dec stc mov cld std inc popa fs sub fstpl rclb jge mov scas add mov sbb mov lock out cmp test in push dec pop cmp gs jg,pn jns mov xchg xchg outsl sub call mov and and mov lock loope dec or xchg xor pop adc mov pop (bad) jne,pn or dec gs or popa ret pop iret sbb ret push cmp mov test mulb inc jp pop pop push add in mov mov xor push xchg dec mov data16 mov xor xchg dec incb mov push cli lret push ss xchg or pushf jmp cmc cmp push adc mov sbb dec stc (bad) fs cli loope adc das fisttpll mov and push push icebp pop cltd add pop pop test fidivrl mov cmp or or inc sbb push imul out push int3 aaa inc cmp mul xor popa pop jno pop jp call mov jle mov outsl fcoms mov pushf push xchg push xor incl cmpsb aaa mov loopne divb nop es pop or jmp test jmp test (bad) iret rcr pop xorl test inc xlat xlat addr16 and adc or jbe loope push ret std mov stos loopne xor nop sbb xchg loope daa mull xchg push loop dec movsl orb sbb xlat mov insb out dec xchg imull push push mov push mov inc into cmp cmc nop insb icebp jge cltd (bad) push inc ror notl loop mov sub cmpsb popf ret mov pop lret lock aad mov mov iret jge imull or cmp pusha arpl es jecxz xchg cld mov imul xchg rcr mov imul lret mov cmpsl xor cmp inc dec dec lahf mov dec pop shr jns arpl push test ljmp fisub lcall fimul mov and or jbe lahf or ret dec xlat jb cmp push aam repnz push jb xlat mov int3 popf jnp xor pop scas jecxz rclb inc pusha and out mov sub mov int3 test aad fcomp aam (bad) jns xchg clc int sub pop inc fs call (bad) lret aaa popa daa rclb push and decb cmp (bad) xor outsb mov xor sbb push jbe lret add jmp push sbb addr16 inc pop shlb movsl mov mov cld ret mov push mov ds push pop fs adc outsl (bad) sub cmp add or pop add xchg mov xchg jb popf rcll out fistpll xchg adc lcall mov test sbb jge cmp pop push das outsl jnp mov jae cmpsb enter hlt mov aaa std mov fs jb popa push test adc pusha or loop xchg out aaa fdivrl jmp sbb jmp (bad) sbb xor push push push push and push ljmp fs or push or movsl aaa mov iret cmc data16 movsl scas rcll outsb repnz and xor jno push or call sub loop push inc pusha faddl adc testb cmp add cmp lahf push push (bad) xchg xchg in js das (bad) xor enter (bad) and xor pusha xchg into adc fldlg2 or mov in imull sbb (bad) cli lea inc mov ljmp ja cmp mov xchg inc fisttpll aas mov (bad) xchg pop clc dec push sbb popf divb sbb xlat xchg test mov (bad) out mov jp pop cltd lret and jecxz sbb ljmp inc push lea movsl mov push dec cmpsb add aaa xchg repnz push jl or in mov add jge mov fldt sub and xchg mov adc sbb cmp xchg dec inc lret pop leave aaa jns mov add cld repnz sti mov daa mov push ret ds pusha mov movb lahf aad ja lods (bad) and popa pop sub push jl ret mov dec mov rcll call and test leave lahf mov or fcomip mov decl cmovne jo stos orl jmp stos orl and call (bad) pop std daa std xor xchg xchg jmp mov sub loop lcall or icebp std mov fninit or dec cmp mov rcrb jns aam pusha mov inc jb mov jle cmp out fidivr sbb jnp ficompl insl push (bad) stc adc leave jnp xchg arpl push and fadd jmp and cmpsb clc xor inc nop xchg (bad) (bad) mov push addr16 movsl pop fstps adc push lret (bad) js push movsb fstps sbb xchg nop aas insb mov sbb ds out lods aad sti add dec jb je es xor and jge cmc insb push or mov shrb cwtl dec imul sub int cs cwtl aam push lods lods mov loop pop dec rcl mov or xor gs pushf push pop stos dec and jl lock push and test addl xor xchg ret inc or mov xor push neg test sbb add xchg rorb cmc push in sub repz xchg fstl mov or call inc inc sbb dec cld (bad) cld lods inc lods cmp shll adc iretw or sbb and aaa movsb addr16 cmp jle idivb pop ret insl cmp pop sbb inc test or inc cli mov sub jg iret pop fwait push stos sarb xchg data16 pop stos cmp push mov or shrl andb mov les mov cmp cs cwtl fidiv dec sar aas popa lret jno fidivrl (bad) les mov xor push mov xchg cmc popf sti in mov or add pop mov int3 sub (bad) add addl mov sbb aas lods lea mov shlb lods mov jae sbbl addl lahf lods cmc xchg adc cld dec (bad) jmp jmp in (bad) jg mov adc hlt mov mov enter mov xchg cli js pop and push mov mov pop arpl js pop movsl gs adc xchg adc fimull inc imul daa mov cltd dec pop inc push mov insl push scas or inc and cmp dec inc call test std xor mov mov enter cmp enter push mull inc add aas jle hlt xchg adc movsw jno pop mov push dec cmp xor xchg les mov hlt loope cmp dec icebp cwtl test punpckhbw stos int3 sub loopne dec or cs sub cli stc or or orl cmpsl ljmp hlt fstpt lds and push sub ss imul (bad) jmp cli movsb mov dec cmp cmpsb mov xor sbb pop sti sbb es bound hlt sub or push jns cmpl ljmp inc movsl jg pop cmp push mov mov adc mov push jbe push and (bad) test or dec or jge sarb insb into sub ljmp pop sti jmp rcll sahf aad or scas jmp jns lcall les leave xor ss mov jge push stc das ja,pn cmc xor sbb mov les inc popa int repnz lahf and (bad) je imul adc in jp iret cmpl jle sub stc lock lcall (bad) pop adc imul xor (bad) cmp xor mov pop test aad and jg pushf xor dec inc jns test jecxz shll push das (bad) aam jno inc mov xor and pop dec (bad) fsubrs adc jae push and push popf and (bad) dec pop push pop loop stos push in adcb fistpll and in push mov ja out mov adc jbe jbe add mov and push out adc negl (bad) xor dec iret or mov int3 nop inc shrb fwait mov mov stos incb inc sbb scas pop mov (bad) mov in loop sbb fcom out sbb outsl push add lods pop jl scas dec test (bad) push xchg psadbw movsl pusha or sub mov adc lahf cwtl pushf test sbb lods nop insb sti inc sub mov imull jl mov fist in cmp (bad) into dec (bad) push stos (bad) sbb loop cmp stos xor sbb or iret add movsl stc les cmc pop fwait xchg xchg paddb pmullw xchg fldcw pop dec sti dec jb fwait xor pop lret pop stos jnp xlat andl and and aas cwtl dec jmp jae out sbb dec scas mov lahf or add cld adc sbb shrl jno dec aas xchg push mov (bad) aad lret dec xchg ljmp lea inc push adc cmp and add rcrl (bad) scas add sbb push add shll int cmp lea dec xchg (bad) lahf add lods or pop sub push jmp fildll sbb into push xorl xor cs sbb cmp mov repz in inc fnstenv dec std adc outsl cwtl mov ss loope jae inc xlat push add jns pop out push movsl pop ljmp jle mov aaa loop andb lods sbb xchg mov sahf mov outsb xchg loopne sbbl (bad) cmpsl mov addr16 leave sub pop dec lahf cmpsl fldcw out movsb scas pop das test enter pusha cmp and sarl mov fidiv cmp ret out pop (bad) adc lods jl scas gs scas dec adc insb add mov inc aam pop and mov cmc mov push daa sbb sbb cmpsb fs xor (bad) xchg fildl dec icebp imulb (bad) inc xchg pop cmpsb add icebp adc cmpsl (bad) mov bound outsl cmp loope push dec les iret mov movsb push inc dec or data16 int mov ljmp repnz or sbb push nop notb sub push or dec mov xchg and sbb jae mov jl outsb xor cs adc stos pop scas std bound in jns adc mov into adcb lcall fist cli fidiv mov repnz sbb mov sahf push icebp lock sar neg pop push jmp scas test loopne xchg addl out rcrl add inc sub aaa in inc sub int add fbld mov jmp (bad) add cld adc push stos adc dec push subb les xor mov outsl mov sarb pop ret scas in stos popf or out jge rcrb ss cmp cmp cmp add ss inc daa lods mov cs mov mov ret pop (bad) insb adc stos into and adc xchg push and sbb mov icebp jg movsb mov xlat in scas ljmp xchg jl out cmp scas mull push mov mov into cli pop add rol (bad) cmc insb (bad) fnstenv out push mov xchg int3 dec xor jle mov insb dec into adc sub call jl and add sbb (bad) lock fimul jnp xchg out mov push fistpll xorb or ret shll bound ljmp mov lock pop int push mov cli jns test cmp cmpsb scas fcomps fidivr sbb iret sbb popf js xchg xchg negb (bad) dec lcall cs mov loopne add out cld mov cs dec fmull xchg cmp inc push (bad) mov cld xchg mov fimul jo inc cmp cltd add es xor pop mov sbb dec test sub push xchg xchg imul je jb repz jp rclb pop push aam push cmp mov es sbb sahf sbb cmp pop shrb dec shrb adc mov inc xor aad pushf stc bound xchg cli add cmp movsl in adc jb mov dec xchg ror adc fsubl pop jle stc mov iret dec push cli adc lea arpl and mov in cmpsb mov stos sub mov jne test (bad) cmp pop mov cmp cs jnp mov inc push add lock pop mov outsb cmp push rorl xor sarb jno icebp and inc xchg punpckhdq pop xchg iret repz mov scas mov xor pop push xor push dec add insl jge and (bad) xor (bad) cmpsl mov loopne cmc fbld cmp aam jnp test jmp hlt cltd fbstp sub jmp inc (bad) cmc pop or ja xor sbb dec jnp lret xor jne negb adc xchg mov das cli pop cmc daa sub call xchg notb jg scas lcall lahf push in push mov add sbb int3 push or pusha out add inc and popf fmull (bad) xor mov ds cli mov fidivrl in aaa and out mov (bad) mov mov aas jae out fsubrs cmpsb fistpl dec or and lret rcl mov mov (bad) (bad) hlt popa sbb mov into sub jg xchg popa fisubrl jle,pt sbb lds lods ds push inc pop mov add aas inc sub sbb iret loope in call mov xchg adc xor iret pop add xor xchg stc sbb xor mov mov movsb or push inc mov (bad) cmp pop bound pop cmp mov sbb je or lock sarl or inc jl arpl lret push fucomi int3 sub jne (bad) stos push stc cmp xor addr16 push rcll aas xor inc jno out jb ret mov mov fisubr or je int3 into cmp sbb daa mov (bad) cmc hlt in add dec push sbb notl insl adc pop cmp mov and mov ds ret notb sbb sbb adc jge test ss and or inc inc inc mov cli fwait dec and push call push cld cmp or test imul jg sbb xchg or jp cmc dec lock push imul scas mov jno mov sbb ljmp out lock mov or test or xchg sub bound push imul sti jno pop movsb mov pop outsb nop out outsl jge lcall or mov (bad) (bad) xor dec mov (bad) jb adc jge adc or fdivrs inc arpl and rcll int inc pop aam lods mov data16 fwait sub mov mov scas xchg std in ja loope stc or cmp fildl push pop arpl xor aam insl jle fidivl jae sbb cmp xchg loop pop dec nop xor inc loop jae inc into data16 rcr mov icebp ljmp daa mov or hlt pop adc mov stos out (bad) je (bad) and push jns mov sbb in lods jl or cmpsl pop scas cwtl sub out into fbstp push mov cwtl mov scas movsl scas jne jno pop push ds sbb inc aad jne out mov stos cwtl lock cmc scas out test cmp sar gs adc in cmp popf mov int pop add outsl ds into fidiv jmp sub into fincstp cmp imul sub inc out lcall ja xchg jno arpl xor push out leave (bad) cmpsl or enter or loop jae mov xor in mov (bad) (bad) andnps xchg add pop testl mov mov dec insb mov xor call mov test sti pop les js sti adc stos xlat insb mov or les mov fs test lahf inc daa mov aas push leave sbb inc sbb stos icebp sub nop loopne in int3 daa sub sub push and push arpl jle in pop gs je cmpsl movsb lahf insb in stc add fldcw cld fcomi cld xchg test into ss aas sahf movsb arpl ss cmp mov std xor sti or ljmp dec or int3 cwtl mov enter xor out xor (bad) in adc insl stos adcl gs mov lock repnz imul in cmc out xchg cmpsb cmpsb pusha fsubl mov and xchg pop xor icebp xor inc mov xor xchg shlb xchg enter lret mov scas icebp ror popa (bad) dec mov sbb lret xchg cmp ljmp (bad) jp and fdivr mov (bad) fistp icebp (bad) cmp shrl adc (bad) in sbb aam jge push pop jle iret inc fdivs mov fcmovne mov dec add outsb inc jne movsb xchg loopne cltd or mov mov mov rorb roll lahf pop mov xor aas xor das dec shrl js lock cmp mov push (bad) cwtl pop das ret shrb pop jg mov popf mov aaa aam movsb imulb add push push xlat push push mov popf loop mov js cmpsb cmp push dec pop stc gs lods add jecxz xchg shrb daa fildl jno je jno call clc push mov (bad) or stc or ficom out pop movsb push mov leave and inc out add aam or push stos ljmp mov jp sbb mov mov mov inc in push mov cltd or add jp push add cmp mov mov inc ja xchg dec push pop push mov ds imul mov je fdivs clc movsb or xchg or (bad) mov sub xor popf ret andb arpl dec xchg mov fwait (bad) ja mov std xor fisub jnp mov cmpsl cmpsb les je and roll dec lcall add jb xchg jmp lahf xor inc pop pop and cli cmp or (bad) stos repnz push xchg or cmp sti stc rorb mov xchg popf lcall add or jecxz sbb ljmp mov sahf int3 fisttpll dec ret adc or out outsl lods (bad) jle xrelease mov sub jmp pop in shrl outsl sar pop (bad) iret fs nop mov xchg loopne in push jle push int3 out jmp mov in mov pusha xchg xor fidiv mov jl out pushf mov mov (bad) push sub cwtl mov dec sub xchg cmc inc nop or pop je mov push or imul mov cmp cwtl push mov pop in aaa data16 sahf add pusha les inc mov and adc mov add sbb pop shrb sub push arpl js push mov lods mov pop push inc xchg shlb jbe xor cltd call inc rdtsc aad jl xlat and mov xchg (bad) mov fistl or xchg mov je pop push int3 gs icebp dec rorb and sbb pop jne sub push dec dec rcrl dec out test jo pusha mov mov xor in jae jg cld orl jp jne arpl dec pop push or repnz dec (bad) das or lret sub es add dec and add mov add out mov fild pop (bad) jg sbb int3 jge dec or and fisubr inc mov jge mov mov add sbb mov in adc stos jns scas dec mov inc cmp pusha cs das pop fbstp addr16 out dec cwtl fwait add adc clc sub jmp scas add outsl dec cmpsl mov loope or lods add pop cmp mov xor scas push not (bad) lret rorb (bad) mov arpl or lods movsb inc or stos bnd xor sub in push cmpsl gs mov out (bad) int3 sub fsubs or divl pop dec fs sarl (bad) lahf cli stc push das and mov pop enter ss xor sub pop xchg xor loope xchg popl rcrl add mov push negl jl test xor or pusha add test insl jle (bad) and mov sbb arpl xor sbb es mov ljmp data16 inc inc mov add fdivrl sbb sub (bad) and in pop dec fldz push mov fwait xchg fnstcw mov mov inc and mov iret ret push ret and pop sub hlt push (bad) xor xlat lcall xchg lahf cmp lahf arpl jmp mov inc push arpl scas jns sub lds and push out xor cmp dec rolb mov push loopne (bad) mov fist lds cmp xchg (bad) mov xchg mov adc mov jae xchg pop mov out jl (bad) jnp mov cmp push test xor fld sub lcall test je mov and push xor sub sbb pop jp in popf and or or lahf in sub adc push rorl or push divl pop jnp test movsl sahf mov or cmp shrb push lret (bad) push inc ds or jp in test sub jno mov jl lods pop inc les sub rclb add ret (bad) push xchg mov jge mov and ja sbb pop and pushf cmp jmp xchg pusha mov js mov cmpsb dec std and stc mov mov daa call sub mov enter insb fsubs mov mov lcall out lcall stc adc jmp test out dec les cwtl pop mov mov lcall sub adc imul pop pop loop add cmp les jmp dec adc mov test ficom or mov inc sub pop fnstenv sbb xchg xor dec xchg cmpsb es push mov jecxz paddusw fsub loop jnp jmp pop ds scas dec loopne sbb clc pop loop es (bad) (bad) lret incb xchg aaa and sbb jo inc pushf int mov inc jne out fldenv icebp mov xor cs dec es xchg (bad) lret sbb js xor mov dec fcmovb es adc (bad) dec jb pop mov xchg xchg pop adc push jmp xorb outsl aas rorl jge jecxz negl mov ret stc dec cmp je rorl mov jge jne xor pushf adc (bad) push test andl pop lods inc xchg inc popa rolb leave sbb lahf dec dec (bad) mov (bad) ret dec xor lods loopne mov jae test sbb nop mov int3 pusha xchg js jnp es addb lret int jge or lods xchg push cmp mov stos or dec mov mov jp xlat xchg pop jno inc mov jge cwtl cmpsb out cmpsb adc and (bad) pop xor adc (bad) not xchg xchg mov cmp in and arpl mov test cmpsb jg adc push ret mov mov repnz dec mov and mov addr16 jb mov leave cmp lods das (bad) out push test loop mov xor leave push lock dec or fwait int (bad) mov xchg add dec cmp push cld push fwait adc andl dec sub mov in cs and inc push mov push push jbe sahf int jnp inc or cs loop xor cmp insl loope out aam or aad xchg in (bad) call fnop mov and addr16 test cli fnstenv mov and pop fistpll fimul xor add repz mov dec cld test insl xchg rorl add or mov mov iret or sbb jg pop hlt xchg and xchg and pop jnp mov push out dec pop popf xor dec pop dec bound or ds inc sub add mov mov jb rorl cld pushf push cmpsb or mov outsl stc xor cli lea jno rcrb sub adc adc clc xor inc in jp push mov stc cmc dec add test push sti loope xorl add icebp hlt subl sbb mov sbb lea rclb test or push test cmp lret add adc cltd mov (bad) push and push stos cmc sbbl inc and dec pushl xor pop xor js fist in dec mov jmp sbb add adc push sbb movsl push push mov mov jae xchg mov mov add loopne xor or mov cmp dec jo cmp (bad) (bad) cli outsl std sub ja ja sbb pop in je andb mov loop add jmp inc cmp lcall cmp cmp or jnp in fcoml andb mov inc and iret imul mov fdivrs dec jbe cmpb inc cltd insb dec lods sub jnp cmp decb mov or lret xchg dec push jo mov movsb xchg data16 ja pop dec es (bad) xchg dec cli cmp jno mov mov and jnp test test popf (bad) pop lea in xor sbb cli subl (bad) cmc push jo adc pop jae dec pop (bad) mov xchg cmp mov into popf aam dec movb mull popa test lcall out stos mov push dec push xlat outsl mov push cmpsb jle and cmp jge loopne data16 mov stos outsb (bad) and in jl push movsb leave cwtl adc scas xchg mov or pop inc dec xor arpl mov stos lea movsl xor (bad) fnstcw push pop imul out jp lret sahf les rcrl sub int adc lods in sahf clc arpl add adc add lods test adc cwtl and iret icebp ljmp jo adc bswap add lahf add adc ret jns pop sbb adc pushf popf xchg add pop shrb or mov iret fdivl pop or adc sub imul and lahf lcall mov lods in push dec movsl xlat pop loop mov (bad) repz jmp or stos outsl mov pop inc pop out mov pop add stos adc negb addr16 ljmp mov das mov pop cmp insl push jb inc sti in test and adc jge cltd pop sbb enter inc clc pushf and sub push adc imul mov and xchg adc pop call fimul sub iret cmp xlat and pusha adc mov adc stos sbb orl push cmpsl lods imul idivb xchg sbb das xor dec hlt mov adc in in lods stos dec into sbb sub mov lcall mov iret aaa or push inc xor xor scas mov pop add fnstcw push sub cmpsl rcr pop adc or lods cmp adc cmpsl ffreep cmp out call push sahf out mov push das fstps mov cmp xchg enter data16 decl aam out scas adc in cwtl xchg sti aam loopne jle stc xor hlt and inc scas data16 mov xchg jb in xor xorl loope dec xor adc pop or dec adc pushf pop lods inc sub sub and xor rol sbb pop jecxz popa and jge fcmovnb dec daa fldt icebp loop leave push inc sbb jo dec jmp cwtl sti out stc popa lods cmp out jle int3 lods mov ds stos ja push pop test mov xchg adc jns pop cmp sbb insl scas shlb push push scas jb xchg jle pop (bad) jmp dec sbb mov jb andl mov mov cli dec dec loope das xor es movsb add jge movsb or jmp movsb cmp adc mov jecxz add dec (bad) je adc or jnp mov movsb push test (bad) scas jle sbb outsl sbb cmpsb fmull pushf enter jge mulb cmp dec mov adc and push mov pop mov jg ja bound std test call add dec pusha incb (bad) sete out scas aad movq sbb xor xor sub fildl add pushf out lods sub pop iret sbb cmp xor pop cmp sub gs daa mov leave cs (bad) dec into cmp jns out frndint pop stc arpl (bad) and mov fisttpll add les pop inc out dec xor stos sub cmpsb jmp fcomps or in xorl xchg fcompl (bad) icebp and out dec jle ljmp mov imul pop mov add mov dec add mov add iret subl adc aad (bad) loope movsl scas cmp add fs rolb mov cmp imul or loope lds js insb push cmp pop mov popa mov iret xchg push popa leave jo fstp push pop mov inc mov outsl push jecxz ret mov xchg lahf es push fwait cmp das (bad) pop dec push mov out jae xor loope (bad) mov mov in cltd aas and cmp (bad) or in (bad) repz mov push insl push mov into jmp je stc pop adc insb lods inc push rcl lret out mov jnp xchg jo not (bad) jo mov imul and xchg aas mov faddl mov xchg push mov jmp xlat jge (bad) dec lock xor jb mov inc pop mov or and ror xchg ljmp imul jne pop fisttp aaa sti lret mov push lds push ja xchg mov push push out orl call cli iret pop mov aad mov inc inc in inc insb sub push xlat xor pop jns jne xchg lods sub loopne jb sub dec pop mov or or fnstenv ja xor roll or (bad) es xor rcr xor sbb orl push lret enter mov ja lods pusha dec mov (bad) adc in and dec test popa dec pop xchg fmull cmp pop pop xchg jnp (bad) pop or xchg loop mov insb cmc or jns test (bad) push xchg jge andl test (bad) xchg scas sub adc leave test sub cmpsl (bad) call aam or mov dec xchg push gs iret mov push pop mov pop shrd mov inc inc lods dec cwtl adc sbb mov mov (bad) shrl or repnz jle lret mov imul adc jmp test test sti jl xor push cmp cmc dec or orb shlb (bad) cmpsb xchg or cmp cmp insl push adcl inc xlat or xchg xchg movsb jnp mov repz cmpsl mov add (bad) cmpsb adc inc push daa mov daa push test popa sbb enter cwtl (bad) push add or push js dec pop xchg movsb imul sahf mov mov mov sbb push imul mov pushf mov dec cmpsb xchg and lcall jbe negb stc (bad) into mov es jmp and aaa or cmc sub sub xor cmp jae sbb lock jp sub (bad) pop test add and jb mov cmpsb sbb enter add or sbb sub arpl (bad) and ja pop test adc and jecxz inc jo movsl paddusw inc and mov push test out out insb jp push fsubl push pop cmp mov adc mov sti dec cwtl mov push adc or inc push popa and pop jl pop nop and push (bad) dec cwtl adc test push mov ja push or cmp dec stos dec lods or data16 xchg je lret jnp in sbb lds out jp mov add xor cmp mov inc jmp movsb mov repz andb push mov jmp (bad) xor xchg ja aas inc cli push loopne sahf fcmovnb fchs add mov ret push negb lods sti xchg out mov lret pushf or data16 incl mov mov add mov scas rcll fildl ficom insl rolb sahf push xor add jnp cmp (bad) in lods inc add xor and mov inc cmp mov sbb jnp int and popf lea sarb add sub mov imul dec push inc fbstp aas sub cmpsl adc sahf lret aad xchg xchg xor std or pop dec mov jecxz movsl add push adc movsl xorl mov pop movsb (bad) mov movsl adcb daa push mov shrb ljmp outsl hlt push cmp inc xlat jge adc jle dec xchg (bad) jo jo popf mov pop ljmp push jl sub sbb mov cmpsb lds hlt jns aaa imul xorl mov jb rcr sub test nop mov push ret int3 cwtl movsl dec lea jns and sti iret push xor jne mov rdtsc lret sub addl jl dec cld in and hlt fsubrl daa test lcall mov sub (bad) cmp jns xchg mull fcompl dec cli test idivl jecxz pop (bad) cmc lahf mov inc pop sub data16 dec add out jge xor mov jmp xor roll mov sbb mov test jg push xor cmp pop jmp jg sbb xchg dec (bad) lock dec outsb xchg fisttpl push pop or jbe call loope das (bad) or inc add insb mov xor inc adc aaa arpl jecxz jnp loop,pn test pop push pop lcall roll imul sub lcall xchg xor ja (bad) (bad) cli cmpb movsb sbb into dec jo lahf push mov pop mov (bad) and mov sbb mov andb stc mov sub sub (bad) pop loope rcrb stos cmp push loopne jne pop sub push arpl rclb lea pop jge stos lea xchg adc popa addr16 cmpl pop fdivl or lcall lods sbbl (bad) in loope cmpsb es in mov xchg stc lret loope push rorl pusha push add rolb jbe lret test add and jne sub cltd daa clc sub cmpsb xchg cmp add in mov xor xchg or inc icebp dec jecxz icebp push mov add in cmpsb pop in xor dec add aas xchg add popa xor push push or jmp xchg sbb adc push pop hlt mov gs add es sub push loope arpl gs add xchg popa sbb sub xchg dec mov cmpsl sbb mov je mov jg sbb negb in fsubrs mov ror xchg clc pop cmp lret rol sub push pushf add xor sub jge leave adc ss adc dec dec dec imul (bad) aam inc subl movsb push inc pop and subb cmpsl stos jmp jle pop in push cmpsb add repnz ja inc pop popf fsts pop adc in dec cmp sub loop rolb xchg pop arpl adc hlt cld jecxz jo inc je sbb popa aas jno push mov lock xor jb leave sbb hlt push cmp gs mov inc (bad) cwtl pushf xchg scas pop ds fadd int3 sbb test mov test fs inc jno popf inc pop xchg cmp xchg loopne insl nop fsts scas and mov (bad) sub sahf mov inc dec dec xchg iret sbb xor addr16 int and arpl mov xor cmc addr16 js cld imul movsl or fistl mov add leave pop (bad) imulb inc dec pop cld scas popf cmp divb bnd jp xor sub data16 nop insb mov add outsl pop jecxz cmp data16 pop lret nop sbb add hlt ds iret xor lods out mov xchg sbb out xor mov test scas aad xor and imul ja jbe push sbb popl add mov xchg (bad) scas and call cmp fs rorb add xchg pop xchg xor sti sbb pop dec jge mov popf cmp lahf fwait add pop outsb scas scas mov lret daa (bad) fbstp lcall clc ja sbb div mov push in xchg mov not fldz mov es sbb sbb lea ljmp add in data16 push in subl enter aad fmull out loope enter sti in push jecxz out or imul mov (bad) add (bad) leave pushl in or sti adc popf loope (bad) (bad) shr lret test xchg sahf movsl sub mov push leave bound add pushl sbb xchg mov lret (bad) repz push outsb rcl js mov repnz sub and dec aas (bad) jb add add sub stos rolb (bad) leave adc add gs jno inc lods pop (bad) mov js out jns cmp cmp or jmp mov popl cmp aaa (bad) out or ret clc fimul aad cmp enter jp push mov xor leave push dec push inc mov popa mov std xor push sub cmpsl jle in in mov dec stos data16 dec or inc out lcall push add pop add adc push lea xlat sub sub test (bad) stos jg insb mov loope aad cmp mov pop mov adc out pop xor loopne jp mov sbb cmpsl mov or je add test out daa lret repnz pop adc (bad) push mov cmp loope imul and popf push ret sub dec ficomp and daa ja jg (bad) fcomps shrl add and (bad) lret or xor les fdivs shll repnz mov ss sub sub out out mov ret push cld arpl mov or xor (bad) stc jo fsubl push stos push ss cwtl stos test jg test cmpsb js cwtl (bad) jo push lret pop fsubrl inc pop mov std jg cwtl les cmp stos mov (bad) and mov mov negb cmc incl mov test je rorl xchg cmp cwtl gs xlat aas push xor aad call mov scas insl adc push push xchg leave add mov mov lods rorl inc inc cwtl (bad) mov (bad) inc sahf inc test aad cmp es mov mov and adc ret stc xchg sbb adc or pop or or pop mov in pop cld push fldcw mov xchg pushf aas cmp cmp movsb imul call xchg add scas xchg aad push jb repnz icebp popa jp inc mov aaa xchg inc xor xchg icebp fisubr xchg xlat stc pop mov inc (bad) xor roll cld xor insl pop mov add out sti sub push sbbl xor or jae das into pop pushf sti mov adc cltd mov push sub fisub jb popf or fimull jmp or mov movsb mul adc lahf jp dec dec add inc scas inc (bad) xor daa cmpsl xchg sahf add dec (bad) jecxz push ret test test cwtl and dec test movsl adc inc bound adc in pop pop xor test roll cld mov mov pop cmpsb call roll cli pop dec lcall cmp incl mov dec jns xor clc inc aaa dec mov add ss adc les cmp lods ret mov subl mov or movb xlat addr16 or xor inc out enter lahf mov imul enter pop xor stos mov aaa scas (bad) mov test loop jl arpl jecxz cmc fs jp test gs sbb jbe xor insl sub and addr16 js loop pop imul fs into je mov xchg lcall aaa dec inc into inc insb out mov push push push inc xor imul fcomip adc dec and ja jmp xchg cmp fmuls sbb fbstp hlt mov lea shll in xchg fcmovbe xor xor stos sahf xchg inc pop int3 mov mov incb stos jae es lea pop adc (bad) mov mov cld popa adc fiaddl les leave mov cmc and dec mov outsb nop mov sub cmp popa movsl les push sub mov sarl xor test add mov add and (bad) lret ljmp jmp push sbb je push or out mov xchg dec ljmp es cli mov ds adc sbb outsb scas dec addr16 xor inc xor fs mov imul outsw sub out or cmpsl mov jae pop scas pop repnz add mov repz cltd std xor pop or xchg inc fwait imul aam xchg lods (bad) push dec xchg push or push ljmp aaa pop push lcall sub sbb je adc push sub scas pop (bad) push adc lahf movsb adc xchg ficomp les add pop fsubrs push movsb in movsb push xor jo add jno xchg addl mov mov mov or gs sub xor xor and in dec sub sbb fwait dec test (bad) xchg daa outsb das mov sbb das fistl pop mov pop mov icebp rorl bound fwait pop push jns std arpl shr call dec in pushf lret or mov xor mov xor xchg mov cmpsl push imul jbe adc cmp or cmp leave repnz push push mov repnz sub mov pushl mov jge gs mov dec jmp out rcl mov test jae and std iret jnp cmc lahf daa imul or es ftst pop call ret fwait cmp cmp je insl (bad) sbb sbb cmp mov jl cwtl in dec notl jae adc ds xchg pop fcompl sti outsl pop cmp les leave movsb push enter pop push addr16 (bad) es sbb outsl and in push or addr16 popa push or xor sub push int leave imul xchg shlb and dec dec loopne cmp lcall fnsave aad fcmovne push stc movsb js mov sarl loop add adc repnz fstpl test pop repz inc sbb cmp insl add push loope repz push cmpl push test in mov in cli iret (bad) arpl cltd push gs cmp rol jo or aam mov jne xor jns fs xchg sbb mov call inc (bad) sbb jbe test mov inc jne dec pop movsl fstps jno fwait jb push sub xor lahf lods cmpsb xchg xor xor fidivl mov push xchg dec jne push xor jp cwtl add sbb push push push push hlt loop popa lods xchg aas into nop daa sti pop cmp mov jecxz jmp add and mov scas aaa or insl lods cmp dec enter adc dec add mov push push sub inc or outsb mov mov jne push mov push rcrl cmp imul and adc jg out inc fs add dec not jmp mov repz fnop and cli and and push aaa sbb nop hlt sbb shr insb xchg mov cltd push addb mov jl (bad) cmp mov lods cmp mov jle sahf dec aaa cmp les fs fcomip insb aad cld pusha or push or enter je and jbe or sub clc lea in stos inc xchg xchg mov mov hlt pop mov xchg stos rol sbb adc and sahf dec adc dec dec pop inc xor in lret shrl mov popa int xchg jecxz xor fadd sbb out sbb or lock sbb out mov inc fidivrl xor jne fidivrl push add mov xchg fistpl popa repz fistpll divb jo or pop popa in jae lds int push push lret lahf dec add or pop std lea jmp rcl das clc xor push in mov and lret lds sub push adc mov insb jecxz (bad) sub int fdivrl xor push imul cld sahf addr16 icebp rcr ror sbb insl xlat cmpl divl sti daa cmp cmp mov mov sub (bad) in push aam xor mov test adc setnp clc sub rep in imul (bad) test jne out xlat sub push dec sub pop aam inc stc jge enter fisttp (bad) xor push neg mov in push jo pop mov fmulp fsts inc cmpsb xor in jmp xchg inc dec push lock xor nop sub sbb (bad) cmp mov dec stos pop stos fsubrs cld das jno adc imul (bad) xor xchg in or out das xchg add mov and adc adc dec bound (bad) call les mov xchg arpl out or nop dec add cs xchg pop das sub js cmp pop mov xchg int mov inc mov jecxz push popf fsub push fsubrs lds aaa push adc pop sub pop aaa pushf lods dec es sub sub faddp ja jnp mov sahf out adc xchg and mov cmp pop adc and xor lahf es mov aaa aam (bad) shlb pop push ss cmp mov outsb int sbb mov pop outsl cmpsb sub mov repnz js sarl mov das (bad) xchg test sub add pop enter sbb push or inc int3 dec hlt xor push clc paddq pop jmp lods je test jg imul daa or dec cmp jnp lock aaa repnz loopne push insb std sbb pop lods sub jnp fnsave into lds movsb mov (bad) sbb pop cmp cld mov pop ret insl popl xchg sbb pushf nop rol or pop repz adc cli and sbb lea sbb cwtl int3 sbb inc das int cmp pop enter cmp imul (bad) fisttpll jns and repz mov scas add ds imul sub push gs xor sub outsl xor shr mov mov lcall or movsb fsubs jne pop sbb pop jmp pop pop sbb fstpt jns mov sbb xor add je arpl fwait adc sub fsubr stc lcall pop dec iret out in js cmp adc shrb inc cmp (bad) (bad) jle mov test lock mov shr addl mov or xchg sbb xchg cmp cmp mov rol add inc and sub sub jns xor dec mov mov fs (bad) jo push movsb xchg (bad) adc xor incb adc xor mov outsb adc test mov inc ret pop xor mov or xlat sub mov pop mov ljmp sub sub je push sub negl (bad) ja xor mov push sbb pop je and dec sub dec push loope test ret push inc loopne pop xchg in insl sbb or jbe loop aas pusha fstps popa inc inc int3 andl out sbb jae or popf ret in sbb lea jmp jne ds iret push imul xchg pop jge mov mov stos pop mov js sysret lcall hlt testl loop loopne pushf jno pop shr hlt int push push xchg cmpb repz ja jb loope pop mov test scas add push stos mov sti sbb inc out jno mov inc adc and dec leave in add orl or inc sar or arpl imul mov (bad) lods insl mov add push rolb cltd fwait stos adc fcomps mov push sti xchg mov xor lods and fldt outsl lret jae test mov mov pop iret movsl jmp in cld stos sahf cli jle les lock xchg xchg cmpb and cmp addr16 insb jnp sub or loopne (bad) in outsl popf rcr out pop mov cwtl mov js dec xchg cmpb push pushf xor jle sbb cmc mov dec clc mov (bad) mov stc lods add popf rcrb add inc loopne hlt cmpsl mov add sub adc sub rolb pusha mov call mov dec loopne enter cmp sbb repnz into pusha cmpsl aaa stos mov xchg and cmp xchg and sub jg dec lcall sub inc test les sub js in inc icebp arpl push ret mov insb and mov jno dec add mov loop je or cltd xlat popf jnp push push dec imul jp cli push pop adcl int cli jg mov inc rcrl mov insl push imulb imul mov call lock leave xor pop mov sbb xchg lock xchg push inc adc nop stos cmp cmpsb mov daa push stos in arpl and xor dec xor aas mov popl push sub fidiv divb fs jmp aad sti lahf rorl rcll sbb repnz pop jmp mov in xlat decb jp push fnsave cmp and mov add pop inc push mov hlt fiadd bound pop or jb mov bnd js ja in mov mov or aam pop sub (bad) or jo cmpsl mov shrb jge iret sahf stc cld mov push and in cmpsl stos scas jno (bad) cli mov cmpsb mov (bad) push popf xchg mov fidiv mov out in pop popf dec mov fldl mov outsl sub jmp and mov dec sbbl sbb mov mov push or mov add push jnp ds fildll mov inc sarl push sahf fbld stos cmp sbb mov pop mov pop pop in les rcrl int outsl mov mov jge ja arpl sub add cmpsl xchg xor jl xchg sbb pop iret cmp (bad) int3 sbbb xchg in xor mov or jmp leave cmp in and repz inc gs pop aad jbe mov xchg add cmp lea add push (bad) repnz test mov mov sub push xor add bound sub mov adcb jns sbb in das inc mov flds je popa cwtl test ds cmp push mov or or xlat divl mov mov adc ficomp popf cltd or sub push jnp cmpsl xchg popf pop outsl dec (bad) mov adc test or push inc add xchg dec loope outsl cltd bound sbb mov jnp clc inc cmp mov shrl xor xchg daa push mov iret pushf sub (bad) mov call and push (bad) loop sub pop dec cwtl ffreep mov sbb imul (bad) xor dec lea bound push sbb imul (bad) adc jb into xchg mov sti xchg roll xor fs imul popf sti mov repnz pop cmp mov je test xor cltd push std into or lds xorb sub lcall sarb or pop jnp or jo insl cmp mov mov nop imul xchg mov or in cmp jns inc jl movsb push cmc loopne outsl push add push frndint xchg xlat roll lret fcoml add lret ret inc out insl jle mov incl out push or mov xchg add mov ja pop jg,pt mov pusha js hlt pusha or out addr16 add cmp (bad) lods cmp iret mov test push (bad) cmpsl fld jo xchg aas scas add jbe mov rcll adc pusha adc stos je mov jl push outsb lods xchg sbb lea dec fdivrl or stos repnz mov push hlt jbe pushf or jle addr16 push notl fcmovne cmp lods test clc mov push stos sub mov dec xor mov adc xor sti add inc cmp imul insb hlt push inc scas jne add jae or call inc imul testl add (bad) inc rcr sbb fwait xor inc push xor daa je in sbb xlat pop mov test jle or fisubrl or movsl rorb mov pop adc push or popf mov xor std inc insb loope xor ja push cld pushf dec pushf cmc mov gs cmp aas push lahf sbb jo sbb les sbb mov xchg in cltd sbb lea aad cmpsb mov mov sub fdivrs rcr lret pop aad sbb add cmp xor sbb pop jl int mov fildll adc jne fnstsw les mov out aam imul stc std ds cmp jmp sbb push mov inc aas test pop pop pusha add xchg or or (bad) fisttp inc add aad fnstenv or xor or or pop (bad) dec loopne adcl and insb insb (bad) (bad) lock sub lahf push push xchg and stos cmp sub xchg xor cmp inc lahf xchg and mov fidivrl out jp fisttpl jle insl cs mov xor cs mov pop xchg adc aad sti test out loopne divl imul mov rol adc fisub int3 fnsave sbb in push push ljmp jp adc mov or mov enter xor xchg pop lods cmp dec test dec and xchg cs jle bound ja cmp xor add cmc in test adc xor inc push aas addr16 xchg jno mov mov mov leave or or popa nop dec and add or (bad) inc xorb addr16 pop sbb push lahf push jo mov in into xor sbb ret das sbb mov cmpsl mov orl stc out inc cs ret dec mov mov aad xchg lahf jo mov fisubr mulb xchg jl in mov mov push repnz and (bad) push sub inc mov and pop and push xor mov sbb popf ljmp sub call xchg jecxz dec rcr mov mov pop jmp or adc je sub add ret xlat aaa outsb xlat xor ret adc mov sbb mov clc push pushf out mov inc adc sub push sbb xor jmp int3 mov jno add dec xchg out out aam jle lods daa xchg sbb jl mov (bad) fsubrp and jae push shrb sbb (bad) mov adc popf lcall mov jmp ret test fnop jge test stos xlat xor push cltd or push rolb test or into add inc popa scas mov mul xchg adc or shr jno js insl call aam push mov mov dec mov mov xchg les nop mov ret andb xchg dec mov mov cltd mov mov cmp sub jle out inc sarb and mov sbb icebp outsl mov lods shrl fnop es mov cmp or scas inc loop cld aaa xchg in (bad) jae sub push nop jne aaa lods dec or leave je xchg xchg adc dec cli push test or in scas push testl mov (bad) shl cld out mov adc testl xlat mov sbbl iret insb xchg or jo adc int sbb fstl jb adc popa into mov (bad) and jb inc lods movsl xchg inc cmp dec pxor into and fistpll push inc adc mov lds or iret sbb cld or dec lret cmpb stc sbb dec cld (bad) xchg sub jb lret push jle addl cmpsb (bad) cli sub mov sbb mov xchg enterw cli dec jbe lods mov lock xor icebp daa mov add out hlt sbbl decb dec xchg cltd js bound pop jecxz hlt sub lret nop test mov std jge adc mov fnsave or sbb and insl in push mov out jns ret mov fdivrs (bad) lock insb fucomp bound aad jno inc sub push pop xor aas divl cs jnp (bad) fcmovnu or enter dec dec xchg dec lods sahf xchg cld dec cli cmp sub std dec rclb xlat jge repnz shll in cli (bad) dec loopne mov hlt (bad) je fsts lods subl inc cmp fsubl int3 es mov xlat js mov pop pop inc and push je (bad) out enter in out shll mov sarb in cmpsb movsb adcl lods mov js dec mov jecxz and or nop aaa sub xchg jae das mov jecxz push mov cli scas inc dec je cmc addr16 cmp mov xchg or fsubrl jle jbe mov adc cmc pop add jg jge jp ds clc std arpl mov lret pushf sbb std or in and or add test xchg push and std pop sub fwait jne in popf lcall (bad) faddl fs mov xchg push cld lret xchg fxch sub outsl addr16 outsl dec lahf pop out jecxz in pop push stos fmull imul pop cld (bad) (bad) xor adcl xchg add mov scas cmpsb stos ss jbe aam pop icebp jmp pop outsl or cmp cli jo mov test jle lock mov jp lea push xchg cwtl insb xor jnp ljmp repz movsb divl loopne jno int inc mov int3 (bad) aaa adc sub xchg scas sbb test xchg stos mov jg jmp daa mov test dec insl in ds jl inc mov and imul add sbb push mov xor prefetchwt1 fwait repnz mov or clc mov mov gs fstpt lods sbb mov sub movsb (bad) movsl mov xor mov pop sub jo inc les and xchg pop cmp in cmp push (bad) mov daa jns jnp fdiv jmp push xor stc add popf pop outsl lret mov add inc loop inc add dec mov adc popf adc or repz xchg aas stos adc daa aas inc lds jo push push pop push lret mov jb xchg dec jno adc sub aas mov xchg cmp add jns cmp loope add dec xchg add pop sbb sbb gs mov mov in test jg mov xlat lcall jge adc dec xor outsb jmp lods jle pop loope cmp dec lods icebp nop push test pop xchg push jne sbb or xlat outsl in push je xor mov mov mov and in daa fldcw and and inc add inc mov add loope jge fs lret sub rcrb pop mov jns xor std inc cmp jno and inc xchg push fcomps pop (bad) not adc sbb loopne dec and pusha out push lahf push jge int xchg mov sub gs shrl push xor pop popa lahf adc add data16 addr16 mov jns mov ss add adc push pop hlt test add adc push in fwait cltd mov or fdivr mov inc nop je cmp out ds stos fnop into scas dec dec mov sub mov ja xchg sub (bad) (bad) xor push push xchg lret pop xchg push stc ror subb or stos pop add push sbb cwtl mov out bound add je mov xchg push leave ds add cld movsl addr16 pop sbb movsb xor xlat out xchg mov sub sti fisub movsb add (bad) jbe stos fcom call xchg loopne cmc les and insl stos sbb scas push sbb pop pop sbb loopne xlat xchg adc lock inc lea dec repz push or sbb stos cmc or in aam and sti imul or outsl in pop mov test js mov adc cs movsb cmp dec pushf xor push mov push aam pop mov repz cmp sti or out xor rcrl add daa and xorl pop std lret nop pop fwait es mov (bad) cmp add mov xlat add sbb mov cmc sub (bad) int push mov mov fisubrl cltd add adc mov or xchg pop cmpsb xor std mov inc sahf push push push ljmp xchg cwtl pop push mov or clc inc xchg ror xor inc int3 push jns jp adc dec mov jns aas mov hlt sbbb stc icebp stos jb (bad) and js mov int or xchg fisubl xchg pop mov adc sub cltd mov scas lcall insb outsb xchg sub xchg xchg mov fidiv ficomp or cmp jb ja sub popa scas mov push push xor sub inc push pop scas lahf adc cwtl pusha xlat aaa into fwait mov cltd lret xlat lahf fiaddl mov inc icebp adc jmp ss cmp mov xor aaa xchg ret mov (bad) mov push in fsubrs sahf (bad) das mov or movsb sub adc gs jle push inc cmp sbb mov push mov cmp mov jae push in mov das cmp rclb loope cli adcl push addl (bad) pop sub and (bad) pop mov push mov dec mov mov xor loope sti shlb inc fdivrp stos loope rolb cwtl jne (bad) ds inc dec pop sahf push fildl lret int3 lods pop pop xchg enter mov sbb dec es dec cmp aam push sub leave push lcall sub sbb xor pop pop pop dec sbb lods repz sbb jns fisttpl or stos jp jnp push jmp pusha imul mov test into sub ret into mov pop std das push jle jne inc jne (bad) jb std pop pop xchg fwait pushf add mov mov (bad) cmc in or std mov sub mov adc xchg aas sub lock mov cmp pop jne jp jl add std and fisubr nop add push mov rorl aam (bad) lock (bad) jb or data16 xchg mov mov faddl pop divl in cmp fwait push in test and bnd mov mov test fs (bad) gs inc inc cs gs sbb push xchg (bad) cmc jecxz xor scas (bad) iret (bad) shrl iret add loopne cmp lods mov or cmc shld rcr cmp and (bad) and stc insl dec mov std dec sti ret inc dec ret xchg jnp xchg cmpsb inc pop adc and icebp adc testb xor or leave mov in aam or (bad) mov out pop dec dec ljmp mov jo frstor xchg rorb xchg mov loope aaa sbb sbb or mov outsb rcrl dec lods dec push inc mov test dec sarl dec or hlt jecxz push std mov xchg xchg fmuls adc lock jl loopne sub dec jns lea aad pop sbb sub ds popa outsb pop push (bad) pushf call dec push (bad) dec push cld xchg and pop mov mov clc and sahf fild mov ret notl shrb gs inc fidiv sub js pop lods push popl mov gs rolb pop add movsl sub mov js lret (bad) cld dec pop add xlat fld push push bound rolb vfnmsub231sd ficoml outsb sarl jns fist or cli fdiv mov pop sub push pop xrelease mov (bad) aam adc scas or mov insb (bad) xchg aam xor lds push cli mov adc sti jmp inc mov sbb add cmp inc mov or mov mov out xchg or pushf add mov ja jmp test je scas dec mov mov inc clc stos aam mov jne jg xor in xchg mov mov mov stos push (bad) (bad) (bad) rcrb fwait cmp clc adc push dec rcrl insl out xorb sub (bad) cmp xchg mov add adc jb sub and (bad) mov (bad) jno mov or shrb adc (bad) mov cld jp mov add or aad subb leave xchg mov repz out dec dec aad or cs mov into cwtl loopne mul scas ss fstpt out lahf mov pusha out rcrb out mov jge push addb fnstenv mov or pop xlat ret pop cmp repz lret jmp in mov ss loop inc roll pop lcall rcrb cmp inc adc xchg jno fidivr jns add sbb mov cmp mov pop inc test lahf cmovs cld and mov cmp stos jae cltd sub adc outsl ljmp xchg xor outsl stos mov (bad) test lods mov push dec xchg mov add cmp lods pop sbb sub mov mov popa sub (bad) cltd call mov jp imul std xchg mov fidivl push mov jl xor inc lock mov xlat fmull (bad) hlt mov fwait cmp ja nop ret loop rcrl pushl imul aad fimull lcall ds pop push addl data16 add dec add cmc lea test inc roll jp adc mov stos daa or jne inc nopl sahf rclb push xor es adc jg sti in mov mov jbe (bad) loop push test jp ja push test inc or sbb mov rorb jns pop cmp add push fcomps and rcrl pop das inc sub push test sbb mov subl add addl int mov rcl (bad) inc cmp aam rorb mov push cmp out pop das rcll loop fisub sub arpl push test mov adc xchg das pop sbb repnz shrl mov jl cmp jbe jmp add cmp int3 sub push cmp jo xchg push (bad) call and add inc adc loopne cmp in loope andl lret cmp lds and inc arpl pop cmc mov mov cmpsl xchg push jns outsb mov jle cmp cmp addr16 dec cltd xchg ret mov and hlt cmc xor sub cmp cmc dec lea das fldl adc (bad) jne mov insb xchg ret pushf pop movsl js inc push fcoml xchg das enter into pop mov mov dec mov cmp mov adc dec pop ja hlt cmpb out cmp lods rcrb fildll lret pop pop gs mov xchg mov mov movsb mov cmp loopne popf (bad) repz push inc fwait scas push or sbb cli cmpsb mov flds inc in ja popa cmpsb mov add les (bad) ljmp or mov arpl (bad) in fstpt movsl lret fstpl test leave (bad) and pop inc outsl sub mov pop les fdivp in push lret subl jge sub pop insb push pop add dec cltd inc (bad) mov lret cld add aam jle ljmp leave pop out mov jg mov shrl push lds sub mov push inc aam and sbb lea hlt xor cmpsl jge cmp into mov jo hlt or rcr inc cltd cmc aad push enter add push mov push iret bound or cmp adc and rclb xor (bad) rcrl aam cli inc movsb sbb cmpsb xor test push adc imul dec call in dec jmp int jg fdivl cli loop insl lods sbb dec cwtl sbb aas pop enter (bad) cltd xchg leave dec and rorl jo xchg sti or add loop popf adc cs mov sub lcall xchg loopne lahf and jo sbb mov xchg pop cmpsb adc add adc ret jle rcr (bad) imul jecxz xchg dec sbb dec mov stos mov out scas lds xlat xchg jecxz push xchg std ret sarl lods or mov popa cmp lahf inc adc mov repz out push lds xlat adc cltd in nop jns add mov add imul dec iret mov mov dec lods mov es xor cwtl jbe mov pop loopne movsb iret mov jp std daa xchg imul out inc sub test lcall push icebp lods inc sahf (bad) cmc ja dec popf push loop into mov or adc dec adc pop mov cmc daa test pop mov cmp mov cld sbb lds push push mov cwtl adc (bad) mov arpl xor out jge push jg mov sbb (bad) dec clc mov adc enter dec push ret mov movsb leave and mov or mov test dec mov test into lahf mov xchg test repnz in aam inc and sbb mov mov add ds xor js enter ss adc mov and rolb in fwait sub push clc repnz push lahf ret add ss (bad) mov and ficomp data16 lahf pop addr16 sbb ds ljmp stos ds ljmp jmp push outsl mov test loope sbb aad mov (bad) pop int push fs daa in jge mov pop push out jecxz adc sub pop imul jg xchg sbb and mov test dec pop cmp xchg and pusha rclb xor pop repz or dec shll xor in mov cmpsl add ljmp xor jle push pushf adc jge lret cmp mov xor je dec enter fsubl test outsb jmp test cmpsl dec dec (bad) mov jle and insb pop ret shll push jno mov sbb (bad) cld xor arpl aaa and jle,pn push mov lods std bound cmp cmpsb cmp sbb loope aam pusha adc out addr16 jne std add lret cmpsl fstpl fsts cltd (bad) out adc mov mov loope jbe addb cwtl and xchg (bad) mov sub mov aaa inc cmpb mov sbb push bound push dec repz les hlt pop pop push lret xchg inc jg and sbb cmpsl clc mov and or mov dec or in dec jle outsb jle or cmp sarb jle (bad) push xchg inc fucomi insl xor xchg ffree jecxz push ss movsb cmp jl movsl adc push and rcr hlt dec out stos cmpsb pop push and and aad aas mov sbb inc add in popa or push mov mov int mov jns icebp sbb fs jbe popa jmp hlt cmp xchg xchg cmp cltd or mov test aad adc decb adc cmp (bad) dec and add dec ss ljmp inc (bad) aaa xchg push sbbb lock je lret pop sti insl jle adc or outsb jp lock push bound pop fimull cmpsb fidivr add push mov sub lods (bad) mov clc (bad) add call push push mov stos xor or add insb sub insl jbe int3 lods enter sbb sbb cmp lahf sbb dec pop jmp fisub andl and mov scas add mov inc push rcr out add fwait mov int mov sub (bad) (bad) in adc cmpsb mov in (bad) sub ret rolb test mov out int3 cmpsb mov mov pop mov adc (bad) je aaa (bad) in add mov xor or call in push pop outsl scas ret add adc mov orb outsl cli sbb dec or pop add loopne inc cld pop and inc mov popa jmp js dec fdivl repnz mov sbb dec in lret (bad) loope mov lret add out jecxz push aam shrl pop mov popa popf mov arpl mulb sarl add bound inc loopne mov (bad) out test dec (bad) stc lret or pop out (bad) jp sbb dec mov or cmpsl adc je test jp das jo inc xchg test daa xor lds fbstp sbb ja jno fmuls xchg outsb jle (bad) subl inc jmp js icebp test jno mov cmpsl repz fisttpll adc clc addr16 ficompl jae adc call test cmp mov cmp (bad) jg lods mov sbb cmc js mov (bad) gs lahf pop cwtl adc (bad) pop cld push das lock xor das in push (bad) stc inc in ja sbb repnz adc shlb push inc and mov pushf or icebp js ret adc rorl (bad) add into fdivrs push add sub sbb cmpsb sti mov or mov lcall xchg test nop test adc sbb data16 jne stos imull push push sub stc movsl push loope sahf idivl and js pop nop in out adc data16 and fsubl aaa lods add addr16 rclb jmp ds push mov xchg test ret push pop mov les cmc fbld cltd xorl cwtl out call out popf addr16 mov jae jmp sbb mov and int3 xor cmpsl push ficoml fcoms repz scas in xor sarb jp inc and popl pop ret je push stos jb xor jmp outsb aad sbb and fcmovne pop dec inc fcmovnb jle and test inc je maskmovq cltd inc shrb pop jge xchg int3 (bad) jge cmc xor adc (bad) xchg cmc scas stos mov add rcrl jno (bad) xchg mov mov xchg nop ljmp lock fwait push test loope (bad) lahf sbb pop bound add in sub aam mov pop adc int3 xchg and fisubr fstp or pop (bad) jns cmp movsl cmp cltd jmp xchg loopne scas sub mov fisubr add xchg popf scas scas inc jnp add push js std inc push mov jp stc cmc ret stos pop stos add add cs stos push jg divl inc stos mov (bad) fwait jmp mov shrl cmpsl mov outsb (bad) aaa movsl lcall sub adc lahf xor lea mov add push call int test test pusha lahf pop dec mov icebp ret out aas out xchg xor jns sub or sarb mov mov push (bad) je (bad) sub test rcll ja jp (bad) sbb clc adc lret sbb repz pop cmp sub movsl mov testl cmp xchg daa pop pop jns mov jmp sbb js ja (bad) repz es adc jae ds cmpb out (bad) dec popf mov mov mov ljmp sub and dec mov xor mov int3 add ljmp xlat inc cli and arpl xor jb add out dec jb scas mov xchg mov and ljmp cmp fidivr sbb xchg outsl push mov test sbb dec pushf lahf sbb dec push fldenv cmp (bad) lods fs push iret arpl mov push xor sub jecxz lods fisttp sbb mov dec repz insl repz loopne inc in subl fcmovnu loope insl or pop pushf sar scas (bad) (bad) mov mov into (bad) (bad) test dec or push cmp jg popa jno xor rorl dec test std and or or leave pushf in arpl loopne sub gs xor mov xor fnsave add xchg (bad) jae inc fs bound ss inc push adc pop repnz loop popf enter sbb (bad) or daa out fildll insl mov data16 lret adc xchg mov and jmp jns (bad) je and cmc lret in aam in pop popf mov adc jecxz cltd sub dec fbld cld lods adc popf jle into cmpb pusha int3 lea mov clc test push and mov in jb aad xor ret imul loopne mov (bad) ficom pusha repz mov mov mov test lret into mov add repnz repz and lahf std aaa cmp out or pop cmc out sti (bad) mov es xlat pop sub cmpsb cld mov mov lods add je mov push push leave daa popf mov xchg stos aad inc imul les and mov inc mov jae movsl mov jmp cld pop repnz cmpsb fistpll inc fildll mov stos mov or inc stos idivb mov dec dec or mov jb and fild lahf ja adc xor xor enter out movsl or mov mov lds out inc lcall pop xor shrb jns mov mov dec xchg inc ffree fcompl mov sbb mov adc push and in push push fwait insb and movsb jle nop mov cmp cwtl mov cmp xchg stos inc and pop mov add mov push outsl pop jnp (bad) fprem les sbb pop frstor mov xchg lcall xchg (bad) dec and fcmovnbe push mov xor ds or sub cmpsb testb popa ljmp pop inc xor push mov int3 sbb cld cmp xchg jbe mov enter repnz xchg dec jae inc cmp mov fadd sbb jb mov xchg jnp mulb mov xor adc cmp push mov fs xchg iret mov lcall ss cmpsb dec pop mov in push add fnsave faddl xchg (bad) idivl in add sahf mov inc aam xor mov jne dec dec mov cmp movsb in ljmp shlb xor push sbb movsb addl subb add cmp in dec push fidivr push insb sub les (bad) movsb scas adc inc pop dec enter jecxz mov decl cmp inc idiv push cwtl out xchg mov xchg int xor mov sub and addr16 out jl fisttpl andl adc (bad) or push inc push or lods cli mov pop mov aad sbb xchg nop addr16 insb adc pusha ljmp mov lret mov pop fisubrl ret jge sbb push leave jecxz pusha fwait mov cmp adc sbb and xchg sti xor push push and push and cmp jecxz sbb sbb test and xchg stos int3 add jbe (bad) push jmp out (bad) lods ret je sub pop mov xchg fst aad pop or xor test repz jbe pusha pop push loope or aam push or pop push mov mov test sub mov push aad xchg dec ss int icebp inc sarb movsb fnstenv test scas stc push dec fimul jno lcall sbb movsl insb jno cmp xchg xchg test outsl insl (bad) sub mov push pop int3 movsb dec fwait xchg ljmp pop dec push sbb arpl out and inc lret lcall in pushl mov sub scas xchg adc outsb into test shll add mov sub arpl int (bad) jle xor push or scas inc es add push and enter mov xor pop leave cmpsb cld lods addr16 or in lds inc scas mov add mov frstor lea (bad) out dec scas and pop rcl idiv mov iret jg push out jns cmp mov test and xchg add ds cltd enter aaa sub sub pop or aam jecxz test sub mov cmp jns daa (bad) mov sbb push insl (bad) cmpsb popf mov inc jge sbb mov sahf and lret enter lcall mov inc movsl jno (bad) mov and shrb les repnz xchg and jle add pushl stos push or jp jb cmp sbb loope add mov mov mov push lods jmp push (bad) js,pt cmp inc imul fistpll aam lods xchg push push sbb or mov outsb lock stos inc xor xor lds sbb sbb stc ret cmp imul icebp loop add and in addl test (bad) loopne add mov push movsb xchg ja push adc mov fsubl jmp jg fnstsw xchg (bad) lea pop mov out jg dec gs inc and xchg aas push pop push fs rclb stos inc js (bad) loope dec fs lods out mov dec loop dec jnp sub or lods mov xchg xchg push popf xchg inc (bad) (bad) (bad) mov (bad) or out mov mov repnz xchg fwait test aad jmp adc pop inc or stos pop inc pop lahf xor add lods icebp clc mov sti inc mov int ret mov lret xchg push rcrb xchg jo add jp mov (bad) cli dec or sti mov pop into negb jno xor jnp push and pop xlat jbe add xor inc or pop or fdivl cmovg sbb pop sbb jge or les add bound icebp lock cmp xlat loop cmpsl add cwtl repz or int3 lcall adc adc dec dec nop mov stc loopne or sbb nop fildl icebp cli stc call (bad) xchg cltd dec lea (bad) hlt lods inc pcmpeqw aad (bad) jo imul roll fisub mov movsb (bad) jne pop lahf fistpl push lods fimull mov inc xchg popf aas sbb xchg jo pop fisttpll inc xor xchg push incb xor xor mov pop fsubrl std xchg scas mov loop loop inc dec adc stos mov (bad) test mov icebp mov notl outsb pop enter jge fmuls xor sub and jl inc cmpsl decl pushf ds call xchg mov adc sti aas mov xor or xchg jb scas jbe add sub xchg mov cmp loope les prefetch or jp pop testb pop pop movsb adc inc ret insl dec adc xor mulb shrl lods pop in push dec imul pop sbb cmc scas add outsl ficompl xchg mov cwtl xor stc (bad) out hlt mov bound call dec jo (bad) cli xchg lea ret insl aas inc dec dec test push or jecxz mov stc data16 (bad) mov push out jb xchg xor hlt mov (bad) aaa popf pop fsubs lahf lahf in xchg aas stc push mov jecxz or test pop es sub cmp mov cmp lea lahf int3 repz push insl inc mov fmull mov pop mov (bad) push mov dec addr16 mov push mov sub std clc popf ja xor cs out jns mov notb inc inc pop insb loopne pop sub lcall dec (bad) sbb pop jno jecxz lods outsb push das xor sub lea je push fisubrl push lahf adcl aaa push movq nop jg outsb cmc lods fiadd shr mov pop inc cmp inc ja mov and lcall scas dec push dec cs in dec fcoml or int int push or mov data16 ret push rolb (bad) pop or inc cltd js dec cmp sbb cmp cmp push fsubp ljmp out jp pop push sbbl mov adc fld movsb add or ja loop push cmpsl sub (bad) lods scas xchg stc into aam inc aas icebp mov ljmp adc test mov cmp (bad) cmp or stos xor inc in shrl or sar adc adc pop mov mov pusha cmp sub bound push std sub pop rorl mov mov lahf outsb in add sbb dec into sahf pop sub mov add scas pop sti cmp stos push add std pop dec xor call mov push mov sbb dec push sub fildll adc test ss mov mov mov icebp nop pusha pop jp inc add insb cmp xchg iret push sti ror into add imull push cmp loop adc ss cs js add xchg sbb imul xorl aam and sahf insl cmp dec push xor orl dec dec js mov inc xchg xchg push or xchg xor (bad) mov mov sarl jno je mov aaa add into xor xchg lock pop jmp sub mov jmp and and push or pushl pop test nop outsl fcompl fdivrs pushf lea mov xchg bound dec mov fnstsw hlt call ss pop out sbb xor in out xor lahf (bad) xor fucomip movsl test clc dec push inc aam scas lret nop pop data16 pusha into subl je (bad) repnz fild pop and shrb jge icebp push adc mov iret negb mov sbb jge int rcrb sahf loopne lret lret je movsb push pop roll inc sub mov adc imul dec mov fs es nop movsl sub cs rcrl lahf xchg fisub xor jb in and mov cmp dec mov cmp int add cltd outsl ds lea jmp (bad) dec dec pop sub sbb add xchg jo sub sbbl dec inc (bad) push sub jg and push (bad) test cltd adc add add pop jecxz (bad) movsb cmp pusha mov dec inc inc mov push mov ret in sub test mov mov je sahf (bad) lea sbb xor fisttpl pop sti sub and push pop lret ljmp adc scas pusha in jge pusha xchg inc jno (bad) pop adc hlt in and sub shlb add sbb fwait cmp test enter cli mov xlat add jnp pushf (bad) arpl cwtl xlat das addr16 call (bad) mov or lret inc addr16 popa (bad) jne out (bad) or mov ja push jno push or mov mov mov repz pop adc dec pop sbb test test iret into adc adc or mov sub fwait mov int3 inc cltd inc insl push stos jp mov test adc xchg (bad) fildl gs mov popa dec test bound or mov mov adc jl call cmpsb or in jge repz push pop sarb fwait jl mov add test jne jno int3 add mov stos mov notb repnz or add fucomp sub ret cmp sbb xor in sub loopne mov cmp xchg rolb fistl xchg cmpsb movsb insl daa xchg iret jb jb xor add mov hlt and adc es and movsb stc pop mov sbb dec sbb jbe pop pop jmp pushf fmull testl push push pusha insb jmp not movl xor (bad) stc sahf push fldenv inc mov or jns in inc (bad) add inc hlt inc cmp (bad) fcoms repnz or and add cli aad sub add mov mov jbe in clc inc movsb lea popa and xchg clc and icebp fsubrl repnz adc rcrl adc or dec aas dec test dec imul lret add mov jnp pop jecxz stc nop mov xlat mov cli dec or mov pop inc fstpl sub cmp mov imul cmp cmp mov fdivrl orps repnz lods fwait sub mov sub jne sub arpl pushf jb fimul cmpl ret andl movsl sbb rcl ljmp aad (bad) pop stc andb and ffreep xchg into inc les push movsb xchg (bad) out fs insb insl loope les repz jg jbe cmp int3 sub xor es or inc jbe jge add inc dec sub mov loop dec jbe dec in xchg in cmp mov (bad) je test rcrb xlat lea cltd cmp loopne xchg mov pop sbb xorb mov or jno sub into add inc pop cmp in cmp xor jle imul rcrl mov ds xchg cld stos cs and clc add loopne adc dec in push inc cld inc and loop inc pop push in adc or mov sbb push fimull sbb dec pop lods push ret dec mov pop les or (bad) int xor mov sbb daa data16 mov jo jecxz icebp push or cld cmp jle and call mov xchg jo push clc sti mov test cmp mov stos pop inc es cli mov fs lods mov dec xchg icebp mov rorb push or hlt (bad) xor repz lock addb mov sahf and ds mov loop mov dec iret imul jns cmp push pusha mov push mov push orl into imul fisubr shl and add mov leave faddl gs pusha adc imul push aad aad test push jae pop cli mov mov mov mov mov insl addr16 sahf rorl sahf and iret jl fistp imul mov inc dec imul adc into xchg mov push push pop add mov lods mov mov and mov xor cmp lods pop sbb stos xchg xor pop or jmp leave jne adc aaa pop mov dec and imul outsl xchg mov sbb icebp push clc and repnz rorl decb xor push sbb mov rcrl popa nop cmp sub lods rorb jns ljmp es add sbb xchg cwtl cmpsb push rorl ret je orb cmp jge mov jbe inc scas hlt mov iret test dec jg cltd insl mull fstpl in and mov movl je mov scas enter push inc pop cli mov fnstsw (bad) (bad) int push ret enter ret mov xchg pop scas or test aad nop sbb or nop sbb fs (bad) jno jp mov bound adc aad xchg mov pop mov xchg sbb adc arpl sub imul das sbb (bad) or xchg gs xchg int3 or imul test jno mov (bad) mov mov insb xchg xor cmp pop mov loope sbb cmpsl fisttpl jl mov (bad) jo in pop push insb lcall mov add or mov cltd pop pop or cmp cmp lea pop jno lea pusha pop and pop in out pop push xor popf mov pop cmp pop pop rclb pop pop cmp scas lods mov mov (bad) adc adc cwtl (bad) or pusha or inc dec inc push sub aam nop fs push and and or dec adc je rol inc fdivr pop and push xor das sub adc xchg push inc jecxz iret mov das loopne pop iret cmc mov add mov jmp pop loop (bad) cltd push adc test ja inc cmpl (bad) mov (bad) jno popa sbb xor mov xchg lcall push daa inc loope (bad) pop adc lret hlt xlat jecxz dec out sbb lds fadds push fisub movsb fstpt adc push sub mov and or pop add stos mov fxch cmp add jle or fs sar sahf push in add sti inc repnz icebp mov enter imul mov add ljmp mov js xchg insl divl in ja rcl sbb ret xchg repnz xchg call mov inc mov lds xchg add lods mov aam daa mov and into loope mov lea push popa cli xlat fucomi imul pop fisttpl inc test repz outsb mov mov mov imul or dec xor jle adc sub or and xchg popf xlat push fsubrl insl test cmp xchg je adc insl mov jp je imulb mov fwait out and push int3 out arpl sahf leave sub jnp or fisubl mov in arpl pop gs xchg nop adc push dec inc sub outsl notl cmpsl stos int3 test sahf notl aaa xor mov test sahf (bad) add je xor inc mov cmp stos fs jle pop adc push push fnsave add push lret les insl inc clc and jb loop xor and or xchg out cmp mov cltd pop xchg inc mov cld mov test dec sub and mov dec cmpsl mov xchg xor lret es shl cmp jno push sbb (bad) cwtl (bad) ret out test and or outsl lods sub push push add mov or add es pop sbb xchg xchg dec inc hlt dec (bad) rol or push xlat lods push jnp and pushf mov loope sbb idivl cld out cltd add adcb push in addl mov mov mov pop pop mov (bad) sub xchg outsb (bad) fiaddl iret mov ds dec mov test mov xchg inc sbb in int int3 repnz sub jo mov xor loop movsb aad lret xlat inc imul outsb sub daa pop sti aad adc lds jb dec and mov inc cmp mov out xlat fsub lea mov cmpsb loope adc test movb inc js xchg xor popa inc add xchg jecxz daa pop je or out insl mov dec cs mov mov popa and push repnz gs jnp and nop scas cmc decb pop ficom push mov shrd loop jmp cld jb push lret and ret mov iret jmp jnp fsubrs jns (bad) or dec gs inc insb pop mov das mov cltd inc rolb or mov out xchg sbb mov jl sbb adc in mov or sbb pop lret sbb jge or xlat stc aam pop adc cmpsl lret or jae xor hlt fstl dec lret aad or xchg xor in aas cmp xchg std sahf jge aaa scas sbb adc pop test jae mov or sbb jmp xor imul imul mov and or addr16 inc cmp pop hlt cmp adc ss inc or mov lods sbbl les mov mov fistpl jmp jmp mov addl mov fxch enter lock cmp inc push (bad) scas ljmp sbb fs movsl (bad) sbb push mov icebp mov push xchg cld mov push or sbb jnp dec xchg push push mov jo (bad) stc and popf mov hlt or popf jle inc xchg cmpsl dec hlt lods push movl sbb sub cmc push push xchg fistl enter fcoms addl mov or cmp sbb sbb dec icebp push imul xor (bad) mov xchg aad or jecxz pusha push enter loopne sub pop sub cmp enter mov inc dec std addr16 push xor int xor bnd inc daa pop ret sahf xchg test int cwtl add lock xlat push sbb push int3 stos lea or scas dec outsb xchg ret push fistpl mov fisubr sbb push pop test jnp mov and dec ret push mov sub sbb dec fadds mov xchg push cltd xor cmpsl add popa decb pop xor fmull mov xchg or add add or pop jle sbb lahf mov sahf out stc into sbb xor and aam (bad) fimul in mov addr16 fdivs ljmp cmp add sbb (bad) dec cmpsl fs push dec lock pop dec jns sti mov js movsb stc ret ljmp sbb jmp insl aad pop push mov lcall fiadd sub pop out xchg push lcall fiadd or pop cltd and nop pushf xor add adc sub (bad) inc xchg inc jmp push sub xor sub lahf pop ja pop push pop sbb or inc jo mov and mov rcrl jbe adc push and test sbb fldlg2 sbb xchg scas stos orl xor pusha mov mov pop or mov cs add cmp xlat (bad) sub sub (bad) sbb inc dec add inc rcll sub mov idivb roll cli xor fmuls jg loopne fdivrp leave mov and test fcompl pop sbb scas lret call add pop xchg loopne pop cmp js or cltd iret or leave pop fdivr jge dec outsl sub mov pop dec cmpsb std add xor mov (bad) ja sbb push mov mov sbb repnz or adc and jne ljmp ds (bad) mov dec and xor xchg inc fsts mov add pop into (bad) ja leave scas ljmp hlt fildl jne add scas and jae add mov test call je std xchg mov push lahf adc push push inc xchg mov and adc dec mov or cs xor clc aas mov cmpsb xchg cmpsb out popa mov xor sub pop and mov mov lods pop xor je psraw rorb in lret ss cmp add add jae mov jle inc sub mov popa sti out sbb out cld jle out sub adc popf pushf fnsave xchg push les aaa out mov lret jno xlat cld mov mov pop adc and rclb cmpsl clc ds pop (bad) mov (bad) loope or add mov jp es xchg adc xor jne xor mov sti xchg pop lds sti imull (bad) jb sub js mov decl mov mov clc adc orb mov fsubr xor push xchg iret pop dec cmp icebp lcall into push cli popa mov gs pop fwait into xchg fadds jg push inc (bad) mov mov rorb ret insl pop xor test pop sub mov (bad) fucomp out nop inc or mov push xor adc cmp cli jecxz jmp repnz inc mov pop push jo sbb adc sbb mov and jl repz insl lcall mov movsb scas sbb in shl scas xchg inc add mov xchg ss pop (bad) (bad) outsb push paddusw mov divl in icebp pushf xor jns inc pop jecxz sub push pushf and pop sahf mov icebp xchg test adc loopne test ficoml add js mov add andb sub flds std (bad) mov xchg xchg ret push sbb xor inc cmc xor mov sub dec or out add sbb pop test rcll js xor cmpsl shll insb push adc inc imul roll jl jb jae pop ret sbb jb pop sbb imul in add cmp jno xor xchg lods fistpll (bad) push push mov arpl mov (bad) mov out xchg cs mov sub stc and test rcr lret xchg add loopne xchg sbb scas setae xor cmpsl testb sub test xor push dec repz pusha xlat sti add fs mov mov xlat sbb push pop pop mov push push insl jne mov sub ret jae cmp xchg test push xchg or or jge dec lods xchg jmp clc insl je popa jne aaa mov enter sbb xchg shr mov shrl les popf mov cmp jnp xchg mov cltd fcoms sarb jge push jae cmp adc scas adc sub mov cmp (bad) data16 mov lods sbb bound sbb imul mov test push test dec lea jg add inc jecxz dec pop sbb sub jp pop repnz pop in imul (bad) out sbb stc jb adc sbb mov bound repz stc in pop cmp add pop push or scas fisubrl pop mov in or outsb jbe push cmp jle cli in mov ja sbb mov xchg jle dec or jnp dec lret repz lldt scas jno movsb outsb xchg into jo ljmp cs (bad) icebp mov dec sbb imul arpl out hlt xchg cld dec jge dec and setne cmp dec clc xchg push dec enter inc adc stc push ret cmp pop add lret cwtl fisubl lea add pop movsl movsb (bad) xchg mov jmp and cmp lret pushf pop sub mov pop pushf push or into push and ret pop sbb cmp gs and pop inc movups mov idivb xchg out cmpsb pop fsubs jne jl lods mov xchg mov fmull jno nop pop (bad) dec ret (bad) ds push dec popa pop push pushf mov iret imul call add pop rolb out and xchg jae pop xor lds sbb push xor ret sbbl dec cwtl or test add cli mov test bound movl mov scas push mov dec add dec out push add loope jae jne inc sarb mov xor dec int3 je jae rorl cmp mov cltd ljmp jmp (bad) test rorb mov inc mull repz jle cmc push (bad) pop test clc stc loope inc pop xchg add icebp xor aaa out clts lods xor and cmc fwait fwait es and xchg jg lods into mov les jbe lahf stos (bad) sub sbb pusha in out and stos mov adc add sbb rcr loopne pushl and sub cmpsb or or pop popf rcrl add leave fs test aam rcll jge ret add scas lret or xchg mov xchg insl xor adc gs add hlt mov xor (bad) xchg decb mov mov lcall adc adc push push xchg nop mov je inc push mov negl xor or sbb outsl out and iret dec pop cmp pop js cmp mov push cmp insb in pop xor (bad) mov push mov daa cmp lcall (bad) sub ds jp xchg iret mov icebp push imul xchg mov mov (bad) jns loop mov pop clc (bad) hlt stos push les mov add sub push jle pop cwtl pop pop jecxz lods insl (bad) or shlb sbb pop popa push adc into test leave subl mov imul out mov fs ss and lcall xor por xor imul repnz pushf dec jne mov inc add push jmp test xor or jl lock pushf icebp jne adc sbb jp adc ss mov in xchg push (bad) push jno lret sbb xlat sbb push in mulb mov jg pop (bad) lret in gs test js mov sub (bad) or fdivrs jb cltd mov (bad) sahf pop stos fcomps pop into push test push dec popf xchg push stos sub mov mov add or jg (bad) and lock mov lock dec das sbb shr xor je jbe jecxz fnop jp push dec and lods pop divb adc enter in cmpsb test fisttpl gs sarb mov daa enter mov sbb pushf xchg cmp sarl imul rcrb xchg aad popa int3 adcl sub dec push jmp inc and pop lret outsl aam mov push jns (bad) adc cmp in cmp mov cli sub (bad) rolb sub xor loopne addr16 out adc insl pop jge sahf insb mov aaa mov mov sub push cltd and mov pop mov leave sub and testb les das lds mov lods and out ljmp imul rol inc in xor imul loop lahf cmp pop jns mov mov add pusha out mov jbe stos bound mov and aaa mov je jp les outsb data16 aam dec enter in inc sbb dec lea xlat sbb cmp pop push int3 sbb (bad) mov adc (bad) lret fwait repnz data16 cwtl xor inc repz xor add adc scas mov dec jle mov fnstcw or (bad) pop pop pop xchg repnz jnp push ljmp xchg loope mov call inc inc mov xor sahf notl cmc leave dec cmp mov push mov inc js rolb rcl out test or sbb cmpsl in lret fisttpll bound push xor iret clc jl sub push cmp jg pop fidivl pushf sub mov ljmp mov mov jmp lea (bad) mov jns dec or cmp sub sarb inc ja jecxz shl call mov jbe mov cld mov out cmp int3 mov orb movsb das mov pop and sbb push or in inc sub jo push lret (bad) and push sub push int int3 subb jecxz cmp sbb mov pop jp adc sub gs or push jns divb arpl ljmp mov mov pop lea bound sbb add inc pop (bad) (bad) es pop or cmp pop into lcall mov push cmp cli xor sub jns test mov inc mov jg cwtl cmp cmpsb dec rclb std rcr inc cmovns cmp stc mov stos ret inc pop jnp inc repnz testl and add and sahf test stc or jecxz jp hlt ret dec imul loopne mov push adc mov inc iret repz push lock cmpsl es in sarb test add mov mov sbbl aaa cmpsb mov mov xchg cltd xchg inc mov mov jae add fnsave cmpsl movsl and enter inc icebp mov cmp dec mov xlat add lea pop mov outsl mov pop je pop lcall mov outsb mov push cmp ds mov lods into rorb and xchg daa xchg les scas sub pop add sti lods es test mulb jle loop xchg xchg int xor int add or mov cmp pusha xchg mov incb fstl scas or inc scas push (bad) fistp outsl (bad) push int mov insl fld lock shl xlat pop push popa or popf (bad) ds cmp add push imul dec les mov dec and cmc int3 cmpsl (bad) jnp outsl xor cmpsb add sbb insl xchg xchg fnsave push inc dec cmc outsl mov call pop dec stos jp push mov jge repz loopne xor lcall sarb add icebp lock insl bndstx push push dec aaa not sub mov arpl xchg push xor push insl loopne ljmp pop pop sbb jge xchg xchg pop imul push nop dec imul cli push push lds xchg fstpt push add xor movsl das (bad) shr int stos je das jbe nop ficoml push imul or sarb out push leave icebp cmp (bad) (bad) mov jbe stos sbb mov movsl sbb cwtl arpl in dec pushf cmp divb jg iret imul cli adc cmp dec inc mov sub addl dec test xchg cmp fldl ret mov fs mov loop inc mov daa mov popf bound pop das ret adc ret dec arpl add addr16 mov adc push push rcrb adc mov ds rolb dec adc pop cmp scas jl dec (bad) pushf sbb or fstpl mov mov mov inc pop aaa jne mov jp (bad) pop cmp inc (bad) out push xor rclb and mov dec es dec stc movsb js rorl lahf inc fcom movb insb adc cmp xchg int mov test stc pop lcall jmp sbb xor add popa sub nop xchg (bad) cmc jle inc pop ljmp enter or fcoms jmp push dec pop xchg sbb xchg xchg int stos push lods das arpl or fisubr or fisttpl aas rdtsc cmp mov xchg lock fisubr add cld insl es (bad) xlat test subl lods mov xchg imul push cmp cltd shr mov (bad) in subl js (bad) loope mov cltd push jge xchg ja adc fisttpll pusha pop mov pushf lret std pop insl adc dec pop mov sbb mov xchg (bad) dec mov push fs orl and push loope test clc les cmp push fwait mov jecxz insl sbb push mov jae jle xchg (bad) aam lahf pusha fcoml rolb mov mov cmp inc lret lcall cli cmpsb xchg add mov sub test jl es rcrl lods fiadd cmpsl sbb push mov mov ret push (bad) arpl clc jg push and sub push pop ds cmpsl push inc negl or ss outsl scas inc jns imul add dec mov jbe pop std (bad) outsl mov mov adc repz fist inc cmpb inc pop loope dec xor xor jb ljmp xlat pop fiaddl (bad) in cli inc lock mov sti adcb in outsl adc push aaa pop add push xor mov fwait inc fbld sbb or pop xchg mov and mov icebp iret std mov xor mov cmp scas jbe (bad) imul test lcall xchg fcmovnbe jnp xchg dec xchg jne psllq dec sbb movsb xchg roll sbb scas jl sbb loope cli sub inc fild loop pop bound jmp pop mov cld cmp xor cmp hlt xor push movsb add cmpsl add ds xchg mov add adc cli mov mov sbb (bad) and jo or fild shll stc push jo jge outsl push dec mov fsts cmp xchg das cmpsl mov mov cli mov push testl xor jl xchg cld mov inc sub mov sub in lds cmp pop xchg int3 sbb inc sbb (bad) rcrl in lcall aas ret sbb cmp loop in add stc shll fild js mov mov or or pop subl push mov xor xchg sahf addr16 jg loopne xor mov gs mov das sub loop subl scas xchg nop enter mov arpl data16 addr16 xor test dec xchg cld cld and xor pop pop cmc testb out xchg or mov test mov inc mov pop fisubr jbe,pn xor nop sti in push scas test (bad) je jne test pop outsl js xor or jb pop int3 lock int3 mov xor stc inc jae xchg loope mov loope sbb push test loope sbb add sbb mov cmpsl or ja and mov (bad) cmpsb fwait stos test mov cltd or push daa dec cmpsb push add (bad) leave in sahf test scas dec ficomp add out aad mov dec aad xor into mov notb dec fisubl jbe loope add dec inc out mov dec push add clc mov fucomp cmpsl in ret mov lods jnp mov inc idivl jne pop fldenv psrad insb rclb int3 jmp pop mov cmp fdivs sbb sbb lds mov cmp sub out mov xor mov cs icebp jae jmp into ret mov or fstl stos stc adc push in mov cld (bad) dec ljmp sbb push movsl mov mov sahf sub pop mov sub hlt mov push sub outsb xchg cmp fdivl and ret bound loope pushf sbb xchg test (bad) cmp sbb (bad) mov pop cwtl mov into in repz sar inc insb orl cmpsb pushf push or and int3 enter or fs in fdivrl cs popf pusha out cmp inc cmpsb ds aas in mov pusha fadds add test lods inc inc fnop out sahf cmp stos jecxz fsubrl out dec popa push popf fbstp xchg test pushf jg lods lock outsb adc pop add push (bad) xor fwait mov gs and lds rcrl xchg into mov ds ja mov jnp mov adc insl outsl jle push cmp cwtl clc sub adc cmc loope sbb es stos ljmp shl sbb jle movsb cmp adc push sub fs dec in push sub cli loopne xor push sbb dec ret aad stos mov mov rorb add lea add jno movsl pop aas sbb jle loopne lcall jl jg jmp lods aad inc outsl fldl dec jo fcmovnu lods pop push sti lret jae mov push (bad) jbe pop (bad) pusha iret and mov inc jnp mov rcrl xor lahf test sbb (bad) fisub jmp lahf lock arpl mov or pusha call sbb inc inc gs (bad) dec test inc (bad) push pop xchg cmp int3 xor add mov add inc call (bad) stc lcall inc lret pop dec mov dec cmp clc xchg loope or sbb fxtract mov rcrb fcompl mov and and lcall sbb pop mov mov jle jp stc mov xchg inc adc arpl (bad) out out fdivr in arpl dec add sbb into sub or ret enter cmc in mov pop dec xchg rorl imul (bad) gs sub cwtl sub out pop pop sub jle xor clc inc movsb movsl dec loopne aad (bad) jb sbb or fadds fimul arpl xchg sbb cmp jp dec test add add call loopne ret sbb mov out fsub jne xor int3 pop or xor pop push xor push mov pop adc mov lds mov xor xlat inc xorb insl decb push mov les sbb cs mov into xchg jae push or xchg enter mov enter dec jp push mov lock insb xor fdiv push jo xor xlat adc into cmp or cli adc rolb jecxz mov gs mov adc repz test aas test push xor xor ret xor sbb mov js movsl add sahf lods jmp fstl cmp in add dec (bad) mov mov nop sub mov mov ret xor xor xor mov sbb outsl push mov jmp insl cmpsl dec (bad) hlt adc adc xor ds jecxz movl fimull jnp jns (bad) jne sarl and (bad) cmc popf or mov mov iret jne or xor pop push jmp jl cmp shll data16 mov mov in push push xor icebp mov sbb push leave subl mov fild xorl fs mov dec sub iret addr16 sbb push out push dec in and aaa add test and addr16 mov xchg adc in mov cwtl mov cmp (bad) iret fnstcw ja fistpll xchg xchg popf xchg ret jbe cltd cmp lret insb mov cli pusha add orl xor xchg cmc cltd dec sub gs pushf out cmp add std sub or xchg push lods or (bad) fwait lods mov and arpl shl jns das popa xchg out lods repnz sbb cmpsl mov scas arpl pop inc pop adc test ljmp lret mull shll cmp popf add iret xchg add imul pop fwait scas ret mov pop push imul fs stc out mov hlt push sub lods inc pop and mov push add jnp or (bad) mov test xchg inc test out mov add movsb jns mov mov loope jno jl cmpsl adc pop sub insb add mul push test sbb jmp xchg push push mov mov add inc loope mov (bad) hlt add repnz les and roll lret adc test mov add xchg (bad) fidiv push xor sub and aam and aam aad jge pop and test ret push mov adc addr16 negl push xchg inc lahf std xor mov stos mov test fnstcw sbb and ret adc pop pop sub mov jb fisttpll cmpsl es xor jne mov xchg arpl je pop push cmpsb es xchg cmc daa jl sub push jo xchg aad sub scas cmp inc sbb in inc mov je mov and fwait idivb out mov xchg xor xchg fcoms inc sbb daa loop sub mov data16 dec inc aaa xor test push add add test call loope insb sti fsubl xchg xchg or aas sbbb lea dec mov enter cmpsb cmovle adc roll rolb call xlat mov jnp (bad) dec js inc sub pushf aaa fbld sarb ficomp int test mov cmc ficomp (bad) lcall into xor pushf xor sbb push jo cmc int3 adc or cmp mov xor idivl es out cmp roll imul or xor dec cltd gs fiaddl into fadds add and or out adc xchg xchg sub push jo push imul insb outsb jle or jne scas call adc push push xchg bound out mov or mov jg (bad) jne mov adc insl stc aam sbb dec push cwtl push jmp cmp addb hlt pop xchg nop lods pop mov sbb and popa andl push mov pop or jns movsl pop enter imulb dec jmp mov add pop mov jecxz mov adc xchg mov das (bad) inc sbb and lods jbe sbb inc cmp (bad) aaa mov pop nop xor xchg idivl enter in push in sbb orl mov jle (bad) cmp add sub bnd popa add mov popl std jl loope push data16 dec stos imul subl decb les stc daa mov sbb mov (bad) lock and push ja sub cmp lds out fs (bad) leave mov adc inc add iret add sub shl leave cmp push mov jmp sbb jl jg mov fwait dec mov lcall mov xor dec inc cli cltd test data16 push fcomi daa jg loopne jle pop jns cmpsl dec jne rorb add inc cmp sbb iret jne fldt fcoms mov bound icebp stos outsl movsb adc cmpb add or xor sbb ljmp push data16 inc imul movsl jno sub pop js cwtl mov xchg (bad) xor aam and lret xor push mov and js mov mov fiaddl sti popf (bad) mov je scas js lret lock adc stc mov jecxz (bad) mov loope flds and and adc xchg jmp data16 dec addr16 xor lret (bad) test shll ret or loope mov sahf ror sub jne inc jne (bad) ficomp xchg inc lock xchg jecxz fiadd xor jg div cmp pop adc movsb cld into movsb es mov or imul cmp mov insl call inc int test rcrb insl jg pop movsl inc ljmp pop dec movsl jge dec stos cmpsb mov ret data16 jno cltd cmp sub scas nop in pop int3 gs push or movsl dec in sarb out into (bad) mov stc cmp mov inc xlat mov inc add pop adc mov add int3 daa iret leave cmp call out inc push sub (bad) pop mov sbb sbb or inc inc dec inc popa movsl les ljmp (bad) pop les jbe popf jle dec sahf cmovl scas mov mov sbb call xlat mov cmpsl ret xchg pusha out mov lcall rcrl sbb ret repnz movsl inc push int aam ss xor mov fnsave jge (bad) mov das ret mov test aad lock int3 nop and push cmp rcll inc lea push fdivp cmc push or pusha xchg pushf mov ljmp cli jbe loop es cmp xchg fst and or jbe pop cmc ror add sahf scas inc repnz mov fstl xchg dec into cld cmp dec sub add fwait aad js addr16 push xlat loopne stc insb (bad) outsb xchg pop (bad) addr16 pop lret jbe loopne cmp or pop aaa rcl push aad loopne std sahf or pushf lret (bad) mov pusha cmp loopne imul cmp mov outsb sub das bound mov out faddl cmp push in outsb repnz mov icebp mov adc cmp fwait xor lods lods mov mov xchg fistpl outsl mov add xchg mov (bad) sbbl adc lock pop cmp ds test fnstcw mov pop loope (bad) push mov jp fisttp xor sbb test stc xor and jp jg ret aaa into or xchg pop fimul cmp lods fwait sbbl out or in insb sbb mov sub ror mov add cs stos movsb stos loop inc scas arpl leave aad push push in int in cmp cmp mov or inc sbb mov xchg imul jbe push mov lods stos cltd (bad) mov mov and add outsl out les push sti fbstp rcl ficom xorl add sahf xchg sbb int imul or stos lret rorl mov sti sti stos dec out jl mov and sbbl outsl or mov jns adc movsl addr16 mov mov sbb ficomp cmp mov or jo inc jle xor xchg jmp not ljmp outsb adc mov push pop xchg sarb arpl inc mov push cmp in daa add aam jne pop sub rcrb push ret outsb insl std cltd xlat mov sub push stc jecxz das ljmp dec repnz scas sbb lcall test jl jl mov push push ljmp outsb dec dec imul test sbb jp mov aam jle and sar ret sar pop pop leave leave sbb sarb and aaa out popa cld je,pn ljmp push xchg cltd lods pop (bad) push xor mov shll icebp pop inc sbb lret lea ljmp or inc pop pop dec dec mov push lret xlat notl shl scas out je (bad) xchg pop insl xchg fildll daa ljmp (bad) clc shrb dec ret les scas nop test adc (bad) fstps stos cmp jo popl aam rorb divps lahf lahf or and js sbb int (bad) xor mov jge les jns mov xor cwtl icebp pop dec add ja push cld adc call mov test mov arpl fcoml orl (bad) pop aaa clc sub mov xchg negl add aas in xchg call aam push adc sbb add leave scas rclb mov xor icebp test pop mov push cmp push loopne int3 ja pop cli push add shrl mov xchg inc lahf mov data16 adc dec sub sub pop into push in cmovg out fldl mov jecxz push rcrb fdivrl andl adc mov scas adc mov inc dec lret or push sarl fwait cmpsb cmp adc fdivs mov in sbb pop cmp sub enter mov in insb test jge jb jns gs call sbb fdivs shl push inc xor fwait out xchg popa xor out and (bad) jno push jmp gs cld jno lock sbb add pop in cmp jmp in (bad) (bad) sahf inc adc xchg incl inc cmp and pop cmpsl inc or std push lods push cmp fsubrl sar pop inc inc addl fcoml jp sub (bad) (bad) movsl gs inc push stos and dec in lahf test cmp dec scas lea push mov or mov iret adc xlat pusha inc xchg dec push imul cmp sbb pop cmp sti jge adc pop xchg ja movsb sub (bad) dec sub cmp frstor inc mov ret (bad) stos dec mov cld xor mov adc pop and jmp out jecxz dec out iret xchg lds ss pop xchg mov das and cmp xor (bad) pop pop push sbb mov ja or xor xor pop inc aad inc je mov divl xor mov andl jo mov or aam lods (bad) xlat cmp pop push lcall inc inc or movsl dec inc lahf arpl mov mov mov add bound sti xchg fisubl data16 fdivrs inc cmp rcrl std push mov add es jmp add push (bad) cld ret or pop inc mov ja leave push xchg lea jg sti (bad) sbb icebp lods daa xchg adc je add jae adc and fcmovnb add xchg xor movsb jp iret fnstenv shl addr16 outsl popf jae sub xchg jge bound jmp cs cli test test test lods jns jmp aaa hlt xchg (bad) xchg test dec inc icebp sbbl inc dec addr16 sub sbb sbb pop or data16 lods cmc pusha daa mov adc loopne enter stc pop std psllq add xlat xor inc nop mov or popa push mov stos mov call sbb mov rcrl popf mov bound imul dec or jl fldcw fadds push jmp mov xor xchg sbb cmpsl sub adc jnp sar push push in (bad) sbb test andb outsl and push push insl in cmc or mov clc jg out sahf mov ja lds inc in mov xchg mov outsl mov mov psubsw push add mov jle sti mov out aaa cld pop lds movmskps movsl cmp andb pusha (bad) loope je mov and aas mov dec inc and pusha sbb xchg push sbb jo fnstcw fidivrl lahf mov sub cltd repnz add xchg lock addr16 adc mov mov lret les cmpsl mov leave (bad) sbb xor cmp or and add loopne pop cltd jge mov sbb pop add sub or jnp cwtl (bad) loop lea jl jne push movl gs inc ss or push in scas lods mov repnz cmp add stc or cmpsl clc xchg call in and scas mov fmuls push push out push xchg ret adc add cmp cwtl xchg mov and xor out xor insl add (bad) adc adc dec pop (bad) int3 iret mov sub shrl insl pop arpl data16 in jl sub int sub into out fcmovnb out sub dec outsl stos dec xor loopne lea sti xor repnz nop psubusw shl (bad) inc mov pop daa clc jle daa mov push loopne into xor push adc imul fwait mov and scas push popf jae lret jno inc inc dec push cs in hlt int3 mov jno rcl pop (bad) jb popf fsubs loope jmp and xchg mov mov popa shll jge mov sbb and outsl or leave lds ret push push jl mov lods mov and sub mov in sbb xchg mov js push sub out cwtl mov cmp mov push push movsb mov mov cmp xorb mov push popf pop fstpt mov movsb out nop ret xchg fmull jb dec imul shr cmp cmp push dec pop popa icebp clc mov jmp cwtl lcall cltd mov push sbb push sub fcmove xchg add adc into rcrb jae fsubl aas (bad) idivb push mov mov cmpsl jo cltd xlat scas mov mov and stc pop pop push js adc xchg in out imul loope outsb mov and sbb mov lock and sub mov cmp mov aam pop popa inc xchg jns and xor lods inc pop scas jns ficom pop repz push push jne and (bad) hlt inc push mov mov leave orb insl icebp scas in leave sbb pop insl sbb mov jecxz bnd adc cmp roll pop xchg adc adc in sub lods repz jb aam inc sbb cmp adc ja mov aas sbb lds jge mov int add (bad) int xchg fisubrl lock mov repz pop push lahf subl dec and packsswb sbb jne pop push xchg pushf jo fdivrs xchg pop jmp inc jge lea mov das xor xor dec sbb xchg mov mov stc fld fild mov js cmpsb sbbl aam pop cmp cmpsb push shrb push sub fistp xor aaa or (bad) stc xchg and jecxz ret (bad) test xor lahf sahf add scas or adc xor jge scas lcall movsl movsb dec push fisttpll fmull or jno push sub sahf ja mov xchg pushf in rorb idivb and lret xor adc add jne cmp fstpt daa js fwait enter divl clc mov dec daa jp jle insl adc jns and inc jo mov xor es pop and xlat add inc push mov fs sbb (bad) icebp pop (bad) imul lods fsubp mov testl or xchg mov fdivrs xor fwait je (bad) insb mov mov ja xor and add mov lods (bad) subl add das sub ss cld mov and les push out std cmp xor xor sub ljmp sub push sbbb loop addr16 mov sub imul mov fwait loope xchg dec (bad) in mull adc pop gs pop jbe lcall nop stc repnz pop (bad) fistp ret mov fldcw lahf (bad) call jne pop sbb inc inc cwtl xchg outsl popf in adc jae sub add xor jnp inc les pop stos and fstl rclb fcmovu adc bound int3 sub jbe cwtl loope das inc orb sbb cs lds (bad) mov mov mov jnp add xchg (bad) ss mov inc ror add push xchg ret js arpl sbb (bad) out int3 repz (bad) rcr xchg aam xor xchg out jmp nop dec bound into or fdivr es mov push (bad) sbb fwait sbb pop or pusha repz sbb mov data16 popl rolb jae push push cld cmpsl xchg jbe cmp call and outsb cmpsl fsubs jmp js jae outsb mov xorl jb dec popl jl lret sbb loopne sbb out stc push icebp mov stc inc rcrl cmpsb inc imul cltd cmp imul jae gs cmc pop shlb mov outsl and dec in jg jge xor mov in pop stos ds test xchg dec mov jno notb mov cld mov mov and push or inc mov int cmp sub mov flds (bad) sarl mov fadd cmp jecxz subl aad or stc push fnstenv pmaxub int3 adc jle movsb inc lahf mov cmp mov arpl stos loopne push nop push fwait dec mov fwait in mov jns das fnstenv pop mov loope push mov hlt dec int imul xchg xchg lock jnp stos movsl mov lcall or mov hlt jb mov mov cli ja adc insb test dec movsb dec xchg cmp ficompl test pop pop mov push jbe or scas fsubs fstp inc rclb movsb sub xor dec sub lock (bad) push sbb adc and dec add sbb cmp ret lods jge pop sbb jp (bad) out (bad) test mov add jbe aaa or pushf int3 idiv inc lods or add sbb iret lock stos mov test cmp hlt sub add mov fs jns xchg mov cmp mov push mov xchg xor sub and sbb xchg add mov fmul repnz jae mov cmp or jp mov lods push negb (bad) mov int3 insl cwtl sub popf mov nop call jo xor movsl sub mov mov cmp test mov sub mov adc jno jb test int3 sbb mov arpl fidivr std (bad) dec das aaa sub cmp add push sahf out mov int3 stos in dec pop hlt out cmp mov iret jle jo add into movsl xchg mov orl and fcmovne outsb stos sub pop add push ja mov xchg mov dec sub loopne orl jno pop rcll (bad) or dec add xor jp pop pop jecxz jae jmp jge or adc sub mov sbb pop out ss jmp xor daa adc push (bad) pop mov push and inc push xor push rorb jl or (bad) dec stos sub call cld inc pop ds pop xchg insb and insb aaa add pop (bad) cmp xchg xor in mov lods lock adcl push mov pop inc jl inc adc fcmovnbe dec add and lods and mov sbb jg andl cwtl or ja xor std mov cmp dec xchg and jp sbb adc mov stos fcmovu jge scas stc outsb jae mov cmp push sahf mov inc outsl mov jp jnp in scas lahf mov lahf popa stmxcsr mov fmuls pop mov and mov inc xor stc mov cltd scas fldl mov cmp jns lahf mov add jl xchg fwait cmp dec push sub test rdmsr push and jl jmp and mov lea mov mov push ds jnp movsl jne xchg out xchg mov sub sub and aam cmp out pop incl mov xor es dec or rclb nop popa lret flds (bad) mov and mov cmp scas daa into xor cmp sbb in in mov xchg jl lret test and addl dec sbbb adc push cmp sbb and inc jne ljmp cltd jle dec cmpsl mov out pop mov push shll mov mov scas jge jns ret fildll pusha mov pushf (bad) inc icebp adc or mov stc pop push jae xor mov sti mov lret mov sti push pop mov add mov (bad) mov notl icebp inc leave cltd mov mov scas pop les mov and int3 popf lods lcall bound push pop mov fcomp (bad) insb aad outsl outsl cmpsl js popa mov lahf cmpsl push inc inc outsb into aam or xor imul pop push jne jl mov mov in sbb movsl or dec add daa lcall jg push insb pop fs jo fcoms inc fistp pop enter mov mov imul shrb jbe and neg (bad) rcrb sub (bad) pop add xchg mov sbb nop jecxz das shr je jge lods fnstenv int pop push iret add lret jg inc dec xor fbstp lahf fidivrl push int imulb push adc fldlg2 cmc lds bound fs push call stc cltd idivl sub mov repnz (bad) call xchg inc (bad) mov les cwtl cmp mov icebp lds jbe lahf push in push jge mov fisub pop lahf xlat pusha pop repz xor sbb out inc or and neg mov pop xor fwait je adc mov aam imul mov das icebp sbb clc inc inc jmp out mov loop test mov (bad) icebp add ror jno test xor push repnz mov (bad) fdecstp out jb dec pop call sub inc mov lock call stos or adc fstps fsts jae sbb leave out repnz fwait mov mov (bad) loope nop or hlt add sbb loop dec mov scas inc mov and cmc fwait cmp fmuls jg and add pop shll mov faddl lahf stos xchg sahf sub pop je push fbstp popf lds push (bad) mov push hlt push mov stos dec cmpsb punpckhwd adc sar call aad sbb icebp ror pop sbb adc imul pop mov jmp lds ss aas mov push (bad) adc les mov xchg cmp test fcoms stc mov mov mov out std xchg test mov xchg pushf shl rcrb dec sbb out adc mov pop repz xchg mov push sahf xchg xchg lds and push stos stc pop sbb add bound inc xor cmpsb push pop or or fwait add mov cmp push cli popf mov dec aas popl stos fbld mov cwtd out sbbl and test mov test std xchg cmc mov mov inc in hlt push push nop das call inc into (bad) rolb mov out stos or jb outsb gs lock or cmp scas push mov sbb cmpsl mov bound daa ss in loop cmpsb mov stos xlat xor fbld cli cmp test popa xchg js mov scas ficoml movsb pop and sbb lds cld aaa jge cmc xchg pop testb xor (bad) fdivs cmp insl xor or mov shrb aam xchg inc jae aas into std nop hlt push and outsl dec cmp xor pop inc data16 jbe sbb mov std in adc adc xor in (bad) int3 push (bad) xor add jg daa into (bad) outsl inc sub xchg xchg pop cmpsb sbb pop (bad) pop in sti fsubs inc fistpl das icebp dec sarl test or cmpsb leave cmp mov xchg movsb xchg dec inc pop pusha sub and cld adc rcl fstps jge scas pop dec inc lds bound hlt or push int push lock cmp insl cld mov lods rol adc (bad) nop repnz mov les xchg mov pop sahf push dec scas adc jb mov pop xchg dec mov in xor out outsl out addl or enter js mov aad xor aaa mov fnsave pop adc xchg out inc movl ja cmp add int3 cmp cmpl adc xchg jecxz sub (bad) (bad) xor pop sbb mov movups dec xchg sub cmp and cltd dec mov sahf jle xor cmpsl xchg push (bad) icebp test popf inc add (bad) xor icebp les mov sbb and dec fs push mov (bad) sahf jns mov rcll rclb es insl jmp push shlb js mov xchg or aaa push out popa pop stc adc mov cmp lret aaa inc in or mov or gs mov movsl (bad) ds les outsl repnz je push movsl mov scas xchg fimull lcall (bad) push mov mov mov shlb arpl cli cmc int adc aad das fcmove jge adc enter shlb inc je dec (bad) fild xor loopne pop push mov dec lock pop das xlat test cmp lds (bad) fsubs fild test inc outsl mov xor sti ficom arpl inc sbb pop xchg sbb out dec jo out mov lds into call cmpsb mov jne sub shrd mov sub test mov inc dec adc (bad) imul mov ja out jge outsb jae in inc enter xor mov fwait add xchg stc js jo fstp fcomps clc jmp push mov pop neg stos inc fs iret shlb sub jo pop xchg mov push mov dec aad hlt jge stc adc sbb addr16 sub jl pop xchg loop xchg pop rolb imull and fstpt sub inc and pop fcoml hlt pop je es mov mov cs cmp adc repnz (bad) mov (bad) cmp test jnp or dec test in (bad) mov jb push xchg or out mov popf cmpl add or jg neg movsl scas movsb jo fcomp inc inc sti mov loope inc imul pavgb sahf or and xor mov cmpsl into lret imul incl roll cmp ret jae lret scas jp movsb leave cmp fimull cmp stos andl mov ficompl push mov sbb inc dec xchg mov (bad) mov push sbb adc dec pop jae mov (bad) dec push adc inc sub or jno fimul push xchg xchg lret inc arpl mov sub pusha pop jg outsl jb mov (bad) aas fidivr jg mov sbb rorb mov imulb cs adc pop pop and cs push data16 cmp lock jmp jge dec leave mov loopne and pop push inc movsl pop xchg jae (bad) xchg push (bad) xor dec sbb testb loop or (bad) mov or (bad) in int rcll xor pop paddd add (bad) pop mov orb xchg test adcb rcrb insb cwtl pushf cwtl pop aad pop adc mov fidivrl sub clc lods push aaa push out adc sbb mov pop bound cli std ret cld dec cmp mov in leave cs (bad) shrb mov or mov push sbb pop movsb imul outsl mov inc daa push jbe cmpb and mov sub fs int cmp mov rolb insl addr16 push mov (bad) pushf (bad) lods inc out mov pop lret addb mov mov (bad) or xchg dec jne arpl sbb mov adc adc cmp lret dec scas pop int hlt mov cmpsb sbbl subl add decb sti add out stos push mov adc test fcomps xor lds jne pop jp popa stc test jmp cmp daa sbb in pop negl sbb mov loop mov sti sub push pushf add mov rcll add icebp mov int3 (bad) loopne inc ss mov xor mov fstps ja mov fstpt cli mov ljmp jae jge repz mov ret test clc sub mov (bad) jns fcoms (bad) fdivr mov aad push cmp roll outsl sub mov ja cmp push and jp pop icebp mov call sub sbb pop xchg (bad) out outsl or dec std xlat stos xor push push inc push cmp popf bound outsl dec idivb mov cmp int3 (bad) in (bad) mov mov adc add or xor inc lods pop in add jecxz enter (bad) lret into xchg data16 out pop mov mov pusha in icebp fisub sbb mov imul pop mov inc je nop cmpsb sti inc xor push and test mov xchg nop lods into out popa fisub pop (bad) test int out (bad) addr16 xchg or xchg push cmc xchg adc iret test dec dec xor jnp mov insb loopne pop add sahf lcall loop xchg lock push add lcall pop fbld jae aam adc sub int les test jmp test jo and mov adc lods iret arpl add ja (bad) dec mov push mov jns lahf repnz dec sub mov int out inc and sbbl cmpsb add jnp rolb popa inc cmp fwait mov xchg jmp data16 scas jmp pop fimul cmp call mov mov lods cmp inc jno xor or push cmpsb (bad) xor pop out sub mov sbb dec cmp testl fsubrs jne fdivl push xor andnps test test xor mov push xchg adc sub add test dec pusha lcall popf xor rcll sbb (bad) mov mov mov adc push cmp or mov lds (bad) out enter lock daa divl imul stos pop cmp test jns (bad) in leave (bad) jp std inc (bad) dec or test (bad) (bad) jns scas jnp sub popa (bad) mov test jbe fsubrp or test in jo mov pusha sahf or push (bad) cmp (bad) andl and prefetch bound imul out xchg mov ret stos mov in jo mov inc outsl add loopne xchg push xchg dec cli jp inc addr16 idiv mov mov ss push enter add shrl idivb jbe loope mov mov mov outsb cmc push into outsb jle mov dec lahf xchg sbb sbb mov and fsts lock inc xor sub lods outsb gs ret cmpb jbe clc dec mulb or mov fwait mov lds stc adc je push outsl or and ret and xchg ror mov fdivs scas jae add mov cwtl lods leave push lahf cmp sbb sbb pusha mov (bad) xor mov imulb cmp mov jno cmpsl jae imul mov notb cmp mov outsl ss call out cmp sub rorb mov aam push jo insl (bad) jge xchg aas ljmp call imul xchg aas popf or stos notb idivl jp je push pusha aad or adc sub jge push jecxz push push (bad) movsb xchg pop scas mov rclb ret and out mov inc (bad) xchg arpl lahf lds sbb xor test jge pop rol cmp es pushf movsl sub mov shr add and jb stc pop or pop mov mov ss pop push mov adc mov cmp push mov jo daa inc push ss and jns xor mov xchg lock pop jbe (bad) xor push xchg aam clc jecxz repnz int sbb push (bad) xchg mov inc adc inc popa scas rcl sbb and arpl push movsl sahf xchg jg lret (bad) mov mul mov or xchg cmp ret jecxz or ret xbegin stos inc ja sbb rclb mov push jae sbb cmpsl mov cmp std mov mov push cmp aas dec fmulp cmpsb sahf xchg mov xor xchg loope xor xor nop and sub push movsb xor bnd jo xor inc pop popa sbb jae or fisubr psubw and or es dec cld xchg push pop ja xchg and sbb ja insl lcall cmpsl cmp jmp or (bad) int icebp shr inc shll sti sbb pusha arpl in mov mov into or daa sahf dec sub inc outsl ljmp lcall ret cmp inc ja movsb mov sahf loopne mov outsb das jbe mov pop nop fwait imul aam cmp js scas xchg frstor cmpb push sbb sbb pop mov aaa pop mov dec pop lcall dec mov rcll pop sbb cwtl mov or xor sti sub repnz pop xchg lret outsl pop jae (bad) insl push adc xchg das adc or and out pop enter scas fsubrs ds sbb sbb adc pop js inc cltd outsb or loope push jae sti imul xor and nop out bound mov ja sbb add pop movzbl andl mov mov adcb or inc cld cmpsl movsl sub int data16 mov cmp clc ljmp sub test push sbb mov out xor or data16 adc fistpl es jbe es pop andl lahf int3 int lds mov mov fwait push cli idivb mov mov aad sub inc inc lahf scas mov pop call sub mov mov pop mov inc aam lods stc sub js jnp pop pop or test (bad) jmp insl insl mov fnstenv scas adc js adc aas sbb out (bad) mov (bad) (bad) cmp (bad) pop rorl scas add add hlt icebp jae dec and push les sub push fld add add sub negb insb rol fwait xchg fstl xor in insb mov in or fcoms cmp loop (bad) fiadd and xchg or sarb cmp dec (bad) (bad) jne pop ret stos sbb and fsts fbstp dec (bad) mov cld icebp popw loope pop shrb push add and out outsl adc iret out test and loope aam icebp aam xor sbb mov cltd je fwait xchg out outsb rcrb dec jb jb leave xlat pusha push pop mov cmp inc out xor pop inc mov in cmp jecxz insb mov cli cmc lret sarl push add (bad) hlt adc scas jnp push mov add jo movsb and bound add dec xchg js (bad) je nop and mov push pop xchg fcoml push and loop sub insb repnz cs lds scas pop jno cli mov test and rorb mov test test stos (bad) dec cmpb arpl mov fldenv jae stos loop sbb lcall inc jnp adc xor and (bad) leave or test loopne pop xchg cmc fmull dec aaa xchg outsl ja sbbl test rcr mov sbb outsl icebp int3 cwtl inc lea mov push jg jg enter xor sbb adc adc out mov pop inc or jne sbb leave or fwait xor (bad) imul xchg add in (bad) mov sbb cmp xchg adc or jl out cmp push ret daa mov hlt (bad) mov pop rcr adc pop mov fsub faddp les xor lods and aaa push out loop and ss stos call popl (bad) cmpl add add out mov sbb pop flds sub andl push inc mov int mov cmpl shr cmpsl gs imul pushf pop pop xor jl jae stos shufps loopne rcl inc adc imul jecxz inc and iret push lock fimul and pop fild arpl pop lcall xor mov iret jno and cmpsb mov outsl dec fisubrl in js and nop ds lds dec mov lret stos cmpsb loopne,pt pop idivl ja,pn xor jmp test mov sub rorl ja xchg cltd or and xchg dec addr16 dec inc dec sub xchg icebp inc dec psubusw dec leave cli cmpsb sahf ret out xor aad sbb cmp pushf jns js xorb mov pushf loop repz mov cmpsl mov es adc andb (bad) sti aad cltd push push lret psubb push icebp ds push pop jb daa call lds mov cmp push cs repnz dec mov jb mov inc adc rolb dec scas xor xor into adc imul inc push jp sub add fldenv or movsb xor je sbb imul in jae negb cmc popf mov ret pop xor push fwait mov push repnz sbb add int3 xchg cmp pop mov sub sahf dec adc insb cmp nop repz lcall js add js jo scas mov les ljmp (bad) out (bad) ficompl and (bad) cli dec xor ds shll push popf jnp into jne xor adc sbb xorps lea jne jle fwait repz dec ret addr16 push jp into sbb adc or iret repz xchg mov add or mov adc xchg jne jg xchg aad jae push mov stc push sbb dec rcrb pop inc jnp jno mov mov sbb outsl cltd add add jb movb hlt sub out mov xchg mov mov faddp sub or fwait jl mov push pop movsl mov icebp adc mov popa jp pop lcall inc stos and cltd loopne repnz xor fadds daa in mov xor xlat add arpl dec sti bound push test inc loop imul xor dec jno (bad) cli lods les mov cmp or mov jle outsl sbbb mov ret or sbb out pop push cwtl adc cltd sub jp push test sarl xchg repnz sarb out push inc jbe rclb test adc inc dec pop pop xchg lods lds fs sbb hlt ja mov and jge popa mov std dec shlb or cli mov fimull mov mov sysret pop xchg mov jae mov xor jbe inc hlt xchg fsubrl adc jp ss push cmp dec add arpl pop inc push mov mov push sub aam mov adc mov outsl je scas jo int3 iret fisttpll mov ljmp xor enter pusha stc cmp std mov fcmovu stos dec stos loope cmp test adc sarb in mov adc xchg hlt shll ss jecxz fdivs dec out or ljmp (bad) cli vxorpd (bad) jbe call cmp and jl mov add dec imul aam sub loopne pop and loopne sub in jbe ds popf jg mov jle mov rcrl mov insl (bad) aad pop mov std int loopne inc ror add push cmpsb jae (bad) (bad) jno movsb test mov stos popl mov inc xchg mov dec lret pop sub fistpl mov (bad) rorb scas cvttps2pi mov (bad) repz out jne iret cmp nop adc das xchg sti push dec sarb pop inc stos fnstenv sbb push shrb popa rol cli jae enter inc outsl cmpsl dec dec sub addl cmp xchg inc fwait sarb mov push fcmove cmc push out cvtdq2ps addr16 jns jb jg fwait and mov mov add dec (bad) (bad) adc out dec pop xor push pop lahf sahf out int3 ss andb in into sbb (bad) push dec pop sub xchg jge jae leave gs scas mov les js sbb call sahf aam scas jle icebp pop fistpll lret in xor bound push xor add pushf out add mov ret cmp addr16 rcll (bad) adc jnp mov mulb mov in xchg pushf pop inc inc push sbb daa mov ss ja sub movsl sub bound in add dec sbb mov and jb fiadd xchg push repz jbe cltd lret pop or arpl imul sbb adc scas loopne lea jo stc sahf (bad) in in scas (bad) in cmpsb sarb mov or fmul mov xor mov lea mov sub sbb shr imul xchg push imul or xchg into imul or pop insb shrb fstpt test repnz insb aad bound mov mov sbb sahf xor mov jp mov mov (bad) adc stos inc mov sbb cmpsb arpl xchg dec stc stc fcmovb ret repnz (bad) mov leave popa mov pop add cmpsl lods fistpl cmpsl adc xor dec shlb test out icebp hlt mov repnz mov sbb pushl insb mov popa adc cs loope push sbb inc stc imulb or roll mov movsb cmp jge sbb bnd out cli pop and rolb mov hlt adc sub xor sbb jle sbb rcrb jnp test arpl lds dec hlt cmp adc mov xor es mov into sbb popa inc inc ss repz addr16 out popa add sbb nop inc fcoms xchg scas in xlat hlt fwait pop xor cmp mov xor test (bad) mov jo xor test jno es sub cmpsl xor mov mov cmpsl (bad) call or xchg ja sub add dec test cmp movsb cmp add ss and mov popf insb add xlat lahf inc outsb lret fcomps sti inc cld jmp mov loop dec out enter (bad) jno push pop es jno or sahf xchg and push (bad) scas cmp sbb push je lcall jmp mov and test mov mov les dec or call lock pop jno fucom insl mov cmpl or xchg (bad) jg negb lods cmp rcrb (bad) shll xchg outsl cmpsl push lods jae push inc aaa stos jae add std cmpl outsb and fs push dec jb pop mov adc fldl cld fisubr mov mov into sub push lods inc sahf repnz int xchg sbb test and sbb pop adc dec mov insb push dec mov sub jno cmp push dec inc (bad) sub fisubr mov imull lea xchg inc popf unpckhps test xor and pop push jns movsb sbb clc or lcall jle movsl stos imul push decb (bad) jp jbe addr16 int xchg stos pusha sbb push or cmp rcl arpl aad rorl sahf fwait int jne xlat cmp movsl xor test mov mov mov pop xor fucomi cmp inc or cmc fwait add inc jne addr16 pop lods icebp sbb sub inc mov fwait arpl (bad) jecxz jno insb ret jle cmp stc push lcall mov cmp fcomps xor lods lds mov sbb int int rcr push pop iret out mov lock jb dec (bad) or mov cwtl adc adc push xchg sarl mov aam js in pop call movsb push push jp call stos cli lcall std or divb mov outsb or add repz ret icebp sub lcall adc push insl mov add dec (bad) mov sub shrb out std decb cmp loop mov pop loop mov push jg stos pop stc orl ret and mov loopne xchg sbb loop cmp sbb jne leave imul dec cltd int3 into stc and cli icebp xchg and in jmp or scas lcall jnp jns (bad) mov push cli repz (bad) push xchg adc in sub js movsb pop test sti (bad) mov ret (bad) mov lcall push mov sub dec and push xchg pop pop stos mov xchg fcomp mov leave push pop pop lds fwait (bad) pop sub jg cs mov mov in daa cmp mov adc mov xchg das or dec test xlat add lods fimull rcl stos sti and ss xor aad (bad) adc test aad jns dec mov push xor and movsl cmp (bad) dec xchg cwtl pop into mov jmp mov push std lret push movsl cs rcl out aam push mov ret icebp pop scas xchg jno mov fisubrl xchg mov std xchg push setbe popf pop add inc fldenv sub pop sbb xlat movsb push xor inc (bad) xlat or cmp jl or mov loope arpl sbb add cmp and xor stos xchg sbb pop mov out fadds jl div std in pop out cwtl cltd xchg (bad) mov push (bad) (bad) push jecxz adc clc repnz in sub add inc aas fucomip pop push sarb movsl cmc push test out push cmp inc sbb icebp mov mov lods loope (bad) push dec push test mov jle enter out xor loopne repnz rcr inc (bad) cmp aas ret sub push in repz hlt lret add jp adc ds jae stc pop popa sbb mov lods arpl jb int3 loop push push repnz movsl popf mov and aad lcall mov in pop pop sbb xchg xor jbe jo dec mov xor inc pushf out mov cmp pop js and imul xor es cmp and push adc (bad) cmp lds pop scas lret fstpt imul pop mov int mov mul sub lods xchg add inc scas cmc push adc mov push ds pop sbb aam cmova dec clc inc sbb or jge mov dec pusha stc pop mov fdivp dec dec test shrl (bad) je jmp lret push pop sbb xchg ret add xchg and add cwtl fadds adcl leave mov or jle or shl cmp xchg dec call insl mov sub jge pavgb or lds data16 xchg push call mov lods inc std mov or xchg xchg and xchg inc push outsl sahf mov or jnp jno or dec cmp lret cli enter add mov fistp jle daa or push cmp dec lods adc stc adc inc icebp cmpsl in or jp test dec popf popa mov repnz movsl pop fsubl push (bad) lret fstl fwait ret int int mov repnz push add jbe imul mov movsb cld dec pop outsl sub and jmp mov cmpsb pushf pop add subl movsb loope mov in xchg ret push xchg je push lea and jecxz sbb jo pop out rorb xlat fcomps jnp adc decl inc push xor xchg (bad) insl (bad) and rcl jge mov lods leave mov fstpt cmpl mov repz stc mov pop pop mov jp or popf push jecxz xchg scas cmp stos mov lods xchg hlt dec mov das push cli sub outsb out cmp lock lea pop jg fldt scas pop in rcrb and push sub add lret xor pusha ror jmp cmpsl int3 mov mov inc pop mov pop pop xor sub pushf adc or nop dec scas lods (bad) mov mov movsb xchg ljmp stos jge xor in popf sub inc mov out or sub mov and cmpb mov lock aas jp push leave xchg xlat xor adc out loopne icebp add not lret and lret mov lds xor lea fidivl or xchg dec inc (bad) xor or add ret imul jb mov popf lods mov inc mov out cmpsl fstps pop out int sbb cltd mov into mov cli push loop xchg cmpsb lock aas sbb fist cmp pop pushf mov sbb test jp mov xchg inc push in rcll or bound sbb outsb add xor jmp and add jb ret cmp (bad) out fildll mov or out lods xlat inc push iret mov pop nop mov addb xchg lods mulb cli mov insl xchg in lahf cli repz jmp cmp jle sahf icebp fidiv inc mul dec dec in cmp sbb mov or popf inc lcall (bad) out mov lcall ds xor int fwait aaa ja sbb dec inc mov cs sbb inc push int cs daa in lods std lea aam outsb cs mov test sbb dec inc shl in cmp adc push jbe jmp stc mov xchg jne bound push mov mov inc repnz vpunpckhbw jb push inc jp fwait cmp xchg loopne outsl jno and cmp mov sub fsub or inc adc or xor (bad) mov pop cmpsb das push das sbb lcall fnsave inc xchg out call inc cmp add adc movsl hlt push and add adc push pop sbb outsb jbe adc pop cs lds pop les adc rorb arpl fsts in fnstenv jge sti into gs push inc sub (bad) push cmc cmc aas cli loope iret or and lcall inc (bad) push test scas dec dec xchg inc and push mov push adcl bound les jmp rcll add or data16 jl pop dec (bad) hlt xchg (bad) xchg mov xchg pusha rcll sub mov mov push mov and andl adc lahf roll repnz xor shll inc in dec fiaddl dec or jmp mov dec (bad) cmpsl lcall xchg xchg outsb in fsubr orl nop bound outsb div xchg pop (bad) pop dec sub adc push push das cld sub mov aaa int (bad) mov mov (bad) daa gs cmp push inc jmp cmp movsb in jecxz scas adc cwtl cmc cmpsb pop insl push das mov jne or in xchg mov xor (bad) aad mov scas fcmovnb mov jmp pop aas out or or std mov call xchg xlat mov insl sti or mov fdivl xor jp (bad) dec imul ret jge xlat lret or aad jb cmp xchg shl xchg sti pop sub outsl mov rorl inc add negb pop inc arpl fcomp in cmp out cmpsb cmc insl mov lcall lret cwtl dec es sti adc adc gs nop push mov mov insl in xor ds ljmp and test mov mov imul sti jo jge cmpl mov test inc enter pop and insl pop lahf mov je clc movsl xchg mov fisubrl mov test lret pop aas xchg mov add ret inc ret cmpsl or (bad) out xor add and mov mov int jb adc addl icebp in or pop lahf leave stos jbe ss jle sub test imul inc ja imul int3 xchg inc std loopne std sub adc mov xchg cmp add pusha jno fsubs mov outsl inc mov idivl lret xor jbe fild js mov rorl jg mov insl inc idivb mov ss adc (bad) sub jns aad rolb ljmp (bad) in pop and ss mov je sbb dec cwtl jp adc mov and lods xchg mov xor sbb gs mov into mov add mov sbb add test insb enter mov loop mov dec icebp lahf movsl mov mov and lock dec ss jl mov lahf imul stc adc inc imul imul movsb popf xchg pop pop push xchg loop pop aad cld insl xchg test cmp subb ret cmp fnop repnz test lcall (bad) imull gs jg (bad) mov lcall mov dec add adc ss dec pop hlt jnp out xor xchg test jp out fwait call int3 lcall lea adc push mov add popf mov ret adc pop into rorb lock jecxz push insb push jle mov fwait adc jle inc aaa fidivl fcomps js movsb test mov bound fs xor movsb add mov mov fildl dec jb push popa mov aaa cwtl add push jbe xchg and enter push jb fbld test xchg fidivr mov jle popf cmp sbb mov mov lock cmpsb add mov inc xchg inc lods test fwait mov test pop les popf sub (bad) hlt adc and mov bound popf mov pop out inc inc imul test hlt mov mov in into dec push pop lods inc xchg nop mov insl and pusha cmp jg stos add xchg orb sub jne push addr16 orl mov loop inc scas push stos ja add rolb lea ja inc push push xchg push inc cmp (bad) outsl and push and jg xor pop inc pop cld or fcoml in sbb cli pop push jb into fs pop mov mov inc arpl or out mov lret test lds stos dec (bad) or push (bad) mov (bad) cmp dec js ficompl movsb dec gs cmp jecxz pop lods test imul mov fisubrl ret sub and cld pop and mov pop inc jl mov pop insb rorb lds mov lods fstpt and inc sbb enter xor pop ret dec xchg jecxz out js (bad) pop jns mull xor clc mov hlt jno test test cmp xor mov fnop mov cmp test jno xchg mov lcall popf push push pop aam fisttpl inc fs loope fisttpl inc xor inc lahf js icebp xchg push xchg mov mov popf outsl (bad) mov cmpsb outsb addr16 mov mov js,pt sti cmpsl jno or pop mov mov sbb xor inc and jo mov rcrl mov popa mov and and jbe int insb inc inc pop icebp std cli loope jecxz pushf or fnsave mov xchg fs jo dec and xor aad lds adc mov in out add inc lahf and cmpsl fisub js test (bad) (bad) shlb jl sub inc jno pop lds cld dec ljmp xor xchg dec rcrl ret inc scas mov cmpsl xor call sbb mov gs lods mov xlat fisub mov (bad) or and (bad) ja ret push sbb xchg out fnstsw and addl insb jle adc lds cwtl cli insb faddl pop inc repnz push cmp adc jo push jo cltd or out jecxz and xor or leave mov sbb (bad) lea scas xchg icebp jb mov and sbb pop sbb xor cltd int3 scas aam fdivrs stos nop inc jno fdivrl repz push movsb lcall and out cli sbb xor adc in mov rorl enter inc dec shll and xor inc push daa stos std je dec pop sub (bad) mov frstor ss add lcall fdivrl ret lock fwait dec jo mov pop ljmp mov pop jg cld xchg in out or popf adc cmp pushf int3 test or leave mov lret inc outsb aas outsl jne gs lcall imul xlat xchg mov cltd mov mov gs or ds add cmp dec fdivr sbb incl (bad) lock sbb xor les popa cli rclb xchg arpl pop or xchg inc mov jne pusha push std sub lahf xchg xchg rcr jle mov ljmp mov xor mov ja dec sahf outsb jp cmp ror inc or inc nop push cwtl movsl fs shl in outsb lret push mov in xchg lods xchg (bad) push dec loopne push adc jmp je mov cmp scas data16 int3 test cmp repnz fisubrl add mov xchg xorb nop and or push loope push xchg and xchg push loopne adc fimull (bad) aaa mov mov mov movsl popa outsl xchg in sub (bad) jnp in andl sbb xchg sub je (bad) (bad) cld pushf (bad) push imul hlt test dec mov jl mov and push fiaddl sti mov shlb mov jo or inc push cmp pusha cmc push mov jns and std std push das aas arpl pop ja aaa (bad) aaa aad arpl dec inc std fcoms cltd popa or fadds out std aad pop stos jp pop xchg hlt in dec xlat push (bad) mov push push cwtl jns inc iret mov dec icebp repz rcll (bad) lahf sub out push mov xor and jnp (bad) or fbld jne add gs or (bad) xchg mov arpl jbe inc mov mov and adc xchg mov in cld notl jnp push nop mov fs ficomp fstps fistpll bound dec pop xchg fildl cmp add les pop mov push xchg push jge (bad) loop jge jae bound xor jl push add xchg mov (bad) fdivp inc loope int and cmpsl sub add in popa (bad) push dec int mov lock xor or aad jbe pusha fcomi sub movsl push mov inc or push adc sub jns sub adc cmpsb in push lods fidivrl jecxz add sbbl insb int fisttp int3 pop jbe dec stos lea sbb mov js and mov nop pop je movsb in hlt iret int stos sub lcall mov stos jb mov jecxz pop inc cmp push cmpsb add push push pop fwait xchg dec add fwait inc fcomps mov stc aas jo pop mov add sbb pop rolb in cld sub jmp jmp aaa mov jg cmp xor sub inc dec js and cli pop jns out pop in pusha popa or jecxz fldl fsubl cmpsb (bad) lret jle (bad) mov ja sbb push mov or adc xchg push jge jge mov add fist in insl andb pop dec cmp dec push push pop mov and push lea icebp jb lret lds icebp out push push push (bad) push cmpsb test bound je add fwait push fistpll orb pop mov jne cmpsl add testb adc cld or inc lock mov dec fmuls arpl push inc mov cli sub divb push xchg dec add add push mov or mov add dec ljmp enter inc xor sbb fcompp sbb and cld js loopne add sub xchg cmc icebp cld in cmc cmp push out lock dec hlt gs lret aas jle cli cmpsl aad mov jnp or inc sar lock add pop xor add mov fwait repnz push dec mov (bad) dec jg or mov sbb stos push shr stc adc cwtl arpl psubw dec rorb xchg fidivl fldt fnsave jge les (bad) (bad) out cmp fistpll mov incl inc scas out xlat in jp cmc stc test jns adc jbe ja push in cmp jbe int3 add mov loope inc ss das std js inc inc in negb cmp lea and jnp or pop jl fcmove cmc xchg fisub outsb or scas fnstcw rcrl rcl mov test sbb pop bound insb or pop addl add gs cli test jo iret sub rcrl (bad) pop lds or repz enter mov xor insb addr16 xlat push sub sbb and mov adc nop mov dec sahf jl inc sbb adc sub dec jns jns cmp mov out icebp int3 movsb repz push shl mov stc sti xchg (bad) jmp inc stos jae add inc inc sbb arpl jg xor add xchg js popa cmp sti (bad) pusha testb into mov in or push xchg push je push xchg ret or pop jb int3 sub dec or cwtl add xchg aad fstpl mov dec adc or mov mov xchg add mov pop aad jg lret and push lea mov cmp ss je push xchg pop daa in xchg sbb cmp xchg jo lret out lahf dec or adc repz andps jge imulb mov lods mov mov mov out add pop mov push jmp out cmpsb (bad) xchg mov push lret (bad) into (bad) cld adc mov orl inc das mov push popf or push xchg mov sbb jge adc scas or jae stos cmp xchg mov lds icebp adc je insb hlt fwait leave inc cmp fnstenv outsl cmp aaa shlb loop dec aam pop adc xchg mov insl outsb and or dec dec repnz jo xor inc and xchg enter imul rcrb (bad) mov es jo mov xchg insb xor or adc push (bad) cmpsl adc out icebp and sub mov mov xor fisubrl mov push out mov loope shrl xor fdivrp lea lcall inc aam leave mov xor test insb mov push mov cmp adc ljmp lret negb (bad) out and xor jg lds xchg dec sbb bound xorb jg repnz pop arpl xor push sti adc aas mov out imul dec int fsubrl inc popa push (bad) fdivp (bad) (bad) pop push jb loop push xchg bound lods cwtl (bad) mov mov cltd lods popf sarb (bad) mov and jg push (bad) es add add jns lret loopne sub inc out hlt (bad) cmp jne mov fidivr xchg dec xchg loope call mov dec adc fimull xchg xor inc js sahf ret sbb sti cmc pop pop xchg js push mov jne xchg movsl sub mov lahf add adc dec adc adc xchg jne mov adc in mov mov fistp or pop daa test mov jl pop addr16 push (bad) cmc xor sub mov int3 fs nop cs push aam bound dec aaa (bad) int3 xor je fsubrl test aam sbb inc cmpsb mov push xor data16 loope es insb stos mov out sti les cwtl test (bad) xor sbb sub adc sar sub sbb inc icebp lea jne cld out add jno (bad) aam add sbb divb add dec in or push or sub cmp pop push adc in mov sahf outsb mov pop mov xchg data16 pop jl dec scas push or adc jno call (bad) in (bad) jg sqrtps into add mov or jl mov sbb lret mov dec mov jmp fisubrl scas jno pop mov adc sub jle pop movsb xor loopne pop outsl xchg sahf and sub jae push jp mov mov jbe fdivr mov push push xchg jne cs insl repnz xchg xorl mov popa stos arpl push mov jns lock outsl xor cmp jge je inc adc sar sub jmp shl nop fs pushw repz rol and sbb sub jnp adc sar sub adc test adc pop add fwait add or xchg push (bad) popl nop rorl loopne pop cltd push push mov sbb lret mov jae dec or repnz mov outsl or mov (bad) je adc adc rcll mov subl push ret pop std movsl sbb fldt push out (bad) aad sub sarl mulb repz cmp inc push jmp mov popa xchg lcall inc xorl movsl ds lds xor in push push sahf dec fdivrs jnp mov test cld les mov dec xchg rcrb sarb out jns adc loopne inc addr16 jle lea mov aam pop jmp mov pushf sbb ds jge in sarb (bad) jl fsubl mov pop inc rolb cltd sub xor sbb or sub outsl push jno icebp repz pop inc inc fiaddl sbb or sti xor fisubl xor jle lret cli into cmp jecxz imul sub lcall (bad) and sbb jno aaa pop jecxz sbb imul sbb pop pop sub mov sub mov outsl xchg lods push mov sub aam fwait dec clc ret adc sbb mov ja or cmc sbb push fs shrb repnz push mov jb fwait stc (bad) jge (bad) popf test cwtl movb in imul mov pop call ss inc and xor or mov out mov dec loope pop test lods test dec cmp xor enter jl sbb in jl inc inc lcall ret inc dec ja enter scas push loop pop and lahf push addb and ja movsl xor adc and mov ds addr16 in les mov inc lock mov jae adc sub stc bound sub call and cmovge mov cmp or dec dec mov fsubrl mov test insb in sbb xchg lods mov adc daa mov adc adc jo jno jl xor lea into addl jp cmc lea dec dec xor mov addr16 bound dec dec movsl es mov aas cmp pop sbb cld fisttp loopne imul dec notb (bad) or pop pop (bad) pop imul mov mov and mov jecxz subl shr in lcall loope push gs lret int3 dec mov pop sub lds andl lahf adc sub inc mov (bad) jge pop loopne (bad) in mov das mov xor hlt pop or mov xchg pop inc fs fisubr sub out inc xlat push enter mov mov xchg push mov sbb das lds ja mov mov push cmp js mov repnz sarb int3 mov add push jle mov jns pop lahf in jg rcr cmpb or in cltd lea cmp cmpsb jnp pop dec mov cmp push int push test (bad) lret add inc xchg lods popl mov pop jmp or (bad) pusha aas idivl pop ss add add popf outsl cmp cmp lock pusha mov nop das mov fisubl xchg cltd fcmovnu out mov lds sti xor test cmpxchg mov dec arpl mov lret dec cmp mov mov cmpsb jl cltd and (bad) mov sti adc pop hlt stos or sahf ja fildll push adc adc outsl or cmp xchg mov sub add repz rol push ja das mov push ret sbb jle (bad) sub mov mov cmp iret add mov mov mov fst ss jb xor mov rclb xor mov jbe cld lea adc push lds jb pop or sub shr lahf lret xlat (bad) mov (bad) jge mov xor pop outsb xchg inc mov mov dec sahf add jle xlat mov pop sbb test scas jnp rcll in cmp sub lcallw xor fsubrl xor pop ret or lods fadds mov push sub clc xor setns or xchg mov fmuls sar push jmp sahf mov movsl add imulb or mov out dec and jnp dec test loope mov lds lods lods and and cmp mov inc push add dec and pop repz push cmpsl pushf sub test test jg mov and lcall data16 push ljmp and mov mov jb fmuls rcrl movsl (bad) or leave iret xor es fwait cmp add and mov pop mov inc cltd pop sub sbb xchg push cli inc data16 adc mov jnp jae ficompl pop jnp lods push mov sbb pop push popa adc divb mov hlt ja (bad) push push out pusha push cld in jb sub xchg aas outsb mov les xor aas mov test in je dec call mov repz push dec les (bad) xchg shlb push dec inc je jbe push inc sbb mov jno es dec sti clc pop inc or or scas repz lds stos test aam adc sub es cmc iret repz imul add mov call inc mov pop push subl pop movsl sti jne repnz lcall dec xchg notb inc cwtl loop inc (bad) adc pop cmp sub and loop ja cmp lcall mov loopne fsubs push mov arpl dec sbb jge sub jmp pop or adc bound cs pop je mov sub test or or mov scas xchg shrl push cmpsb xlat cmp das adc xlat out das or sbb dec out sub cwtl xchg mov or mov (bad) ja adcl sbb add pushf stos inc movb test dec push aaa add clc popf popf test ret loopne fcmovnb jne lea movsl dec outsl add and and (bad) je xchg addr16 aas and (bad) cmp push or add mov inc xchg add cli xchg pop loope adc mov ret jmp mov cld sub into test sbb lock sbb je sub or jo and jmp pop cwtl sub mov lods leave lahf cmp ret jno dec out add fstps cld mul sub loope push iret dec mov mov jnp push and xchg jne loope pop inc jne aad or test es fucomp aaa mov mov jnp mov pop or data16 (bad) (bad) loopne roll jne xchg add cltd pop les fsubrs nop cmp and push xchg xchg insb jp out loop fdivl push movsb loope popl scas call pop adc ret push cwtl sbb (bad) movlps xor mov insl sub es cltd in int in mov fcoms movsl movsl push repnz ja cmp cmpsl cld cmp add inc lods push or mov xchg adc inc daa inc xor push popf jae mov inc xor sbb and xchg xor mov mulps xchg or jbe dec stos mov xchg mov cmp ret push test sbb into xor in push sti push cld cli mov or sbb es sbb xor inc ficomp addr16 xor mov sar clc out sar clc pop int3 jmp call mov pop int cwtl aad jne sub or out fild mov xor jge pop outsb or and fisub xor movsl stos mov dec lret fiaddl add (bad) lea pop (bad) in mov lods (bad) xor rorb mov movb movsb or xor insl mov mov mov out inc pop inc lea fiadd and lods mov pop pop ret (bad) std fcompl or nop push bound into iret popf sbbl mov jp cmpsb sbb sub mov push push imul jg fsubp or clc add rcl test nop pushf sahf movsl ret mov aas ss xchg inc pop je dec lods movsl insb push sbb inc push ljmp push cmp es mov xor and xchg inc fnstsw stos xlat out (bad) imull sub dec cmp mov stos inc insl lret stc cmp xchg sub fcmovnbe xlat xor fs lcall in in and dec aaa out stc dec dec fcomp call mov lock push test mov ret fnsave or cld popa add outsb outsb xor inc (bad) push jp xchg and loopne adc insl repnz mov ds inc (bad) (bad) xor inc xlat mov fcmovu pop sub pop icebp (bad) hlt cwtl xlat into push jle lds fbstp movsl push sub iret rcll mov (bad) sbb cld jnp in scas cld addr16 fwait pusha cmp fwait pusha sahf test dec ficomp jg sbb cmp inc in add (bad) lret or lock sub jp test arpl pop pop cmp xor stos pop push movsb mov or lods imul jo roll xchg je out std in dec movb (bad) pop ss push (bad) cmc mov (bad) and cmp xor push aam test push outsl loopne jg pop inc xor xchg dec mov adc out mov dec xchg mov movb and mov adc gs pop fdivs cmc lea fstps jle dec (bad) dec jno out imul orl loopne inc dec add mov xlat nop mov outsl stos lock imul jo orl xor in push push adc cltd jnp adc jg test push adc push data16 adc clc xor hlt loopne push push push dec pop shlb add mov fdivrs mov push cmp les xor ret or sbb add dec inc cs jmp out ficompl movsb inc xor call xor push (bad) push mov or inc pop sub dec xor xchg sbb faddl inc inc cmp sub loope or add shrd lea cmp mov iret clc and (bad) pop xchg (bad) call inc pop inc xchg out and pop push adcb cmpsb pushf cmpl in (bad) mov jle push or rcrl mov mov daa sub mov pusha int3 fmuls push cltd ffree adc jne arpl das xor or jg mov cmp js cmp cmpsl mov es stc mov mov daa daa in (bad) xor call movsb aam mov sub fstl in mov sbb and mov xlat repz dec xlat call lret mov lds or mov push mov fcompl jp sub dec lock mov mov stos ja cmpsb aas (bad) sbb adc clc cmpsb mov enter and and nop ret xchg sub imul std inc loope cld mov mov sub adc mov xchg jge lret shlb jae xor jg inc xchg jb cmpsb sbb add dec xchg sub insl mov jae (bad) sub fisubrl gs pop add les sahf (bad) jb jne iret ja xchg cwtl das cmp cmp mov mov jne inc inc add sarl popf sahf xchg movsb cmp pop xchg xor push enter adc adc sub out mov outsb or xor test add nop push lods imul mov rorb and jbe mov pop pop jge adc rorl repz push xlat xor lds les and ds mov mov or aam out mov aaa push imul mov in cmp mov adc mov pop add xor push or cmp mov xor push xchg push jmp (bad) lods scas pop lcall inc jp and loop sbbl inc push mov (bad) dec jle insb jmp call int mov fcomi inc stos fld call add mov imul jo arpl aaa pop mov das (bad) xchg and pushf mov out stos sbbl ror fucom in int lock inc in adc int cwtl test mov inc or jnp mov (bad) stos (bad) cmpb jne ss xchg inc addr16 push push mov sbb movsb lcall mov loopne fstl push lods xor ret in fistpll xchg cwtl mov scas xchg add push mov shrl outsl int3 in dec and adc pop jno out popa js fisubl mov pop mov stos scas fbld popa push lds dec mov (bad) insb jl sub stos adc xchg movsl xor xlat mov or push es gs xchg push mov arpl pop mov es lods mov pop icebp pop xchg pusha test push xor dec dec mov xor aad pop lret sarl mov mov clc cmpl pop sahf bnd xchg (bad) ds xchg test dec mov pushf pop push hlt (bad) (bad) xor or dec pop mov xor jo dec xchg mov lock (bad) stc lods or dec insb dec mov inc out cwtl lods cmpsl xchg loop dec pop cltd mov inc or sbb hlt inc and fsub enter cmp mov add or and ljmp pop push ljmp mov sub bound pop adc mov mov outsb arpl call in push dec stc inc sti mov push push adc add xchg xorl enter mov mov inc cmp repz (bad) pop je xchg sahf lcall cmp cmpsb push inc pop addr16 jns fidivl sbb mov out outsb and arpl push in das and es js or popf pop cmpsb push int3 inc (bad) dec mov jbe dec dec movsb mov aaa ss icebp sbb pop imul test imulb in push cs bound and ljmp in cmc insb js int aad call mov movb pop and int cmpsl xchg pop adc daa xchg imul ja sub popf adc sub mov (bad) popa cltd lods into mov iret pop mov and push or cmpb pop xor dec fldcw lods adc cmpsb movsl push and scas jle and repnz loopne xchg push xchg sbb rcr out push xchg sti imul fsts jmp mov lret fsubl test popa es fldl2e in jnp pop cmp aaa xchg (bad) mov cmp sub pop inc rcrb mov add aas adc mov clc in inc adc psubsb in push add and mov repz enter and pop cmp fcompl in push xchg lds fidivr or outsb xchg mov mov mov je (bad) xchg pop dec mov mov ret xchg test imul push fldl sbb cmp f2xm1 sub dec out out (bad) negl xor lea pop cmp inc mov out cmp inc xchg sbb adc cli and mov aaa fiadd mov xor daa lds mov fwait rorb jle inc add xchg loopne and mov mov mov xor mov inc adc (bad) popl sbb add ja mov clc cmp add xlat and dec dec or lahf sub or in inc (bad) std push or arpl xchg push pop jnp jp xlat xchg adc sbb inc jmp sub lods push clc adc outsb xchg leave push pop iret shrb nop enter mov push into xor mov inc lcall lods dec mov or push cli cmpsb in out sbb pop and movsl fldl sbb inc add sar add into inc adc ficoml je fimul pop adc les mov insl movsb jmp aas movsbl inc mov ss cmp or mov in lret nop out and jecxz fistpl stc repnz or insb stos push xchg rcrl aad xchg mov nop cmp jbe repnz popf add and or mov push inc test sub mov stc test or and inc fcoml pop xor mov aad or or jg aad (bad) fstps xor data16 insb adc jmp inc fwait cmp subb adc ljmp hlt mov data16 lds cmp fwait inc pop out xlat sbb imul adc mov inc mov push xor pop outsl mov sti (bad) jmp lret mov out in pop call imulb sbb inc mov xchg and lea not mov stc bound xchg jne push or lahf (bad) outsb pop test mov arpl enter inc xor cmpsl outsb jl push cli pop pop ret loope xchg pop mov fadd dec ja ljmp push rolb enter (bad) lock mov push (bad) mov (bad) cmp loop or mov cltd fldl2e gs loope test aaa and fwait mov ret xchg roll or sbb push cli lods dec xor inc sbb icebp adc repz sti call scas shll data16 xchg mov or xor imul mov mov movsb idivb pop xchg xor hlt or inc lcall inc dec sub je outsb jns call insl and jns outsb sub call lock jl sbb ja adc cmp dec push pop icebp jo xchg mov mov inc in push lcall push xchg push dec (bad) in imul mov pop cmp in es popf jecxz sbb lret ret lret mov nop and xor push hlt (bad) or add shl (bad) add sbb pop cmp imul int fistl fcompl stc cmp out jle fisttpll loop pop out inc or data16 leave push fdivr jl push mov sbb push add sub aas sub mov and cli xchg cld mov mov or out lock jo pop mov lods aas xchg pusha hlt mov xor and jp scas and data16 pop ja sahf pop lret (bad) enter mov (bad) or mov cld cmp fcmovnu shr mov mov jp out aaa inc jnp scas loopne jne pop fidivrl in incb pop cmpb xlat xor pop lods add rorl mov inc inc mov movsb ret (bad) or into pop add mov test out adc sbb adc cmp cmpsl dec pop int3 movsl loop push sti movsb mov add adc and jns cld outsb dec mov aaa add or addl push test mov sbb pop insl ds mov addr16 sahf int3 ljmp in idiv and in in push sarl pminsw lds ret xchg jg jo pop pop inc (bad) jecxz jle bound call test fwait sbb js pop jns dec ror push cmp push int3 add adc (bad) aaa mov loope add pop stos inc ret sub cmp repnz mov cwtl into jmp cltd ret and mov aam add (bad) dec pushw rclb jle (bad) divb jo sbb int ss in adc insl add mov cld or popa fmul add fsubrl mov jnp xor test fcomps test xchg jmp dec push or jmp aas push mov in xor out jle sbb test aaa sbb mov dec push mov insl dec push arpl pop adc xchg push in jmp cltd js dec or outsl outsl (bad) ljmp sahf popf mov test imul repz xor test inc sbb in out rclb xchg cmc aas vmulsd xor xor sbb add in push cmc popf pushf rcr xchg lock fstpt out je adc js mov imulb dec or (bad) or ret hlt lods dec roll mov xchg adc pop lods std mov dec sub sar dec push push xchg xor or or shr pop popa out jg dec test xchg dec stos xchg scas iret mov or (bad) pop or je and lret jne stos mov jb clc insl cld in fsts sti xor push (bad) xchg jb arpl lret xor int3 (bad) jb inc inc xchg in and push dec dec or sub fs (bad) loop mov repz add ljmp decl sbb jo dec daa popa (bad) adc cmc (bad) xor andl xchg pop xchg inc mov adc mov pop xor fidivl push mov push mov xor daa lds aaa dec fcmovu es pop shrb add sub mov push ja xchg inc stos imul movsl faddl movsl cld mov adc inc jge jl inc jb (bad) jae movsb imul or fisubl adc in lea sub std pop or push insb push mov push rcrb lods inc add mov dec call inc hlt xor sub rorb adc lods pushf cmpsb push test lea loopne enter inc jo cmp xlat mov mov and or leave xchg cwtl movsl out popa sub sbb cmp cmp jmp mov (bad) or jg into pop xor js (bad) mov les into sub inc outsb sub (bad) jp or fimul mov fisubr loop out push dec or jno nop xchg xchg sub or jl mov imul mov xchg movl add sbb nop outsb mov cmpb dec mov sub daa insb test adc add inc cmpsl and jmp pop arpl call negl mov jle dec xor stc xor out std dec insl or jmp push sahf nop mov lcall mov pop rolb add jecxz push xlat aaa sbb popf or clc and jae pusha mov add stos (bad) cmp fnstcw hlt aad insl shlb fucom xlat popa ja jns xchg add mov add sub cld mov int push std cmp inc jnp jl add cmp aad movsb add mov fwait pop pop lret xchg lds mov add sub push add mov dec xchg data16 lock pop add sti mov addr16 popf mov jo data16 pop jle adc dec lods insb mov xchg stc arpl mov sub enter xlat sti jmp loopne sbb in test js dec adc cs mov pop gs pop call lea cwtl xlat rorb (bad) pop movsl pop divb jo mov shrl mov (bad) mov inc jg imul xor adc xchg mov cmp jmp inc mov addr16 pop mov clc dec fnstcw xor sub movsl cltd test xchg dec (bad) clc jecxz mov inc je pop lret lock fimull lock addr16 mov rcr jmp out push in iret test pop in pop push pop (bad) cli pop push mov je lcall jnp into pop ror mov xor lea sub lcall pop mov sub cmp xor lods jge in pop inc (bad) xor sub jmp pushl cmp mov int in push cs add dec dec repnz rcrb mov ljmp push mov ret and into mov cmp add gs dec ret xchg or cmpb ja jbe je insl aad push mov cmp andl aad fnstcw add arpl xchg je xchg mov daa (bad) lret lret pop sub mov jns cwtl push add aam inc jne push dec jecxz pop das fnop cltd sub jns movsb cmp jne xor or (bad) sub adc into or (bad) jo add es lods xchg lcall ljmp lret fsubl dec pusha (bad) ja jmp adc movsl sbb jbe pop and sub mov adc jecxz loopne push fsubl jbe lret (bad) and (bad) xor adc adc inc cmp dec sbb dec push and cmp xchg repz mov push repz jecxz addr16 fucomi or add mov sub adc aas jg jle mulb jae dec pop mov sbb cwtl cltd inc popf sub add rolb add (bad) (bad) cli lahf les push push push mov int3 pop lods sub jae pop and movb add push mov mov xor mov and repz or call scas in out xchg rcl push pop inc ja inc dec pop ja stc xor int inc xchg xchg sub cmpsb cmp dec fimul scas leave rol jo or jbe fwait je inc sbb imul mov push (bad) push jg fisttpll mov pushf xchg inc mov pop neg sub adc (bad) mov jecxz or xchg js cmp jae xor enter dec mov jl mov pushf fdecstp pop sub movsl xor cltd mov adc and andb push popa pusha dec jno test repz xchg jge in sbb inc pusha fild jl push inc pop and dec add dec add push (bad) mov dec dec popf mov xchg sub or adc incl (bad) in lods movsl in out int pop jmp mov (bad) or sbb inc fldcw adc mov (bad) das push mov add jo dec add pop enter std mov notb ds xor std sbb add lock pop xchg and push aam sub lds mov out fcoml (bad) push mov jl dec enter (bad) aam mov cmpsb clc stos test lahf pop pushf jb cmp ja loopne push pop je sbb inc or push sub sbb iret pop mov push out pop mov sar data16 (bad) je bound sbb jns sub push pushf and rcl stc jmp mov out mov mov pushf cmpsb push inc iret test rcr cs cmp movsl fdivr popf inc ss push insb nop mov insl pminsw (bad) jmp and cmp xchg mov insb dec es test cltd jmp (bad) call or xor (bad) and push outsb cmp xchg cmp mov je cmp and sbb dec jp cmp lock roll outsb add xchg jecxz fcmovb mov push fwait fs pop pop test (bad) cmp inc add mov scas xor xlat inc movsb dec mov xchg dec ss test vpcomub aaa nop mov push xor mov adc in mov cwtl pop adc pop jmp push xchg dec in lock xor lods push int jmp sbb push jg add adc xor fcoml es sub loop push or les pop jb rolb aad inc insb rol scas xchg sub cwtl jne and or repz push adc mov fwait leave jo cmp popf sub or sub movsb push push dec les mov and jae inc and inc test cmp mov rcrl fistp adc rcll mov popa push pop shll cs mov cmp je fldt add sahf cmp cmp ret (bad) jge mov mov iret stc jae fbstp mov fnsave fxch (bad) pop je (bad) fucom sbbb imul andb mov into sub scas and xchg pop aad mov or insl mov add mov inc sub add or and mov rcrb gs das or cld sti test mov and pop push iret jo je roll sub xor mov icebp pop cmp cmp push mov cmp dec mov aas inc or popa mov jle xor imul mov dec insl and je addr16 sahf push mov roll xchg push pusha insl adc mov push dec mov pusha fldl mov nop lahf mov adc lret sti push pop aas xchg mov aas inc xor mov scas sbb call inc (bad) jmp lea inc insb jno xor cld mov cs cmp inc push and push jge jp dec aas xchg ja pop (bad) stc negb ds adc mov xorl cmp aaa das mov add mov mov imul mov insb mov push hlt ljmp jo test sub aad sahf mov and idiv push xchg aad push out mov jp adc fsubrs cmc mov cltd je (bad) fs neg xlat sbb call ret in pop roll mov push lock into or cmc sbb mov pusha out add mov cmp fwait pushf popf (bad) in cltd inc inc sti jle stc lods jl pop fist dec adc jb xchg rol and gs mov mov pop jnp pop jne jge aam pushf rol lahf xchg outsb out jns (bad) es jne and mov (bad) xor or inc int bound sahf int3 pop movsl inc add cmp leave repz push mov and push mov popa jae out inc imul ret mov push in adc mov (bad) jno jmp adc push push push sbb mov fnsave rclb (bad) xor mov stc js in cmpsl lds and std xchg or stos inc or imul popf jae pop mov es mov sbb shl mov pop aas aam sub or (bad) cmc daa xchg xchg push roll es ja call in xchg cmc into aam stc inc std mov pop add xchg adc inc (bad) jl xchg lret jne adc lret xchg popf cmp call cmp imul (bad) mov cmp push dec xor popf mov insb out int insl pop fistl roll sahf pusha in (bad) xor xchg aad xor shll pop mov push dec div fadds add inc loopnew pop or aaa add adc xchg mov add test call jbe outsl fdivr mov jo (bad) out mov add imul xchg lds lea add daa rcr nop mov mov xchg stos inc adc jge mov xchg lret ret cmpsl inc mov and cli mov lock mov or sarb lret and xlat loop stc add fbld out notb sub mov xchg test sbb inc (bad) out push jne ja and loope push jne xchg xor jecxz in call (bad) xor xlat adc movsb neg nop repz xor xor rorl out imul dec dec std inc jns (bad) mov adc cltd xor cwtl mov int3 sub (bad) sahf cmc lcall cmc test cltd add cmp out pop push mov out mov adc mov (bad) loopne mov out pop or adc ljmp fs inc in dec imul movsl imul and (bad) or fcoml (bad) mov mov std lds rorb rcrb cmp jae sbb adc ljmp std push pop push popf mov dec andl adc in sbb int3 jmp cmp in sub jae jb cmpsl sbb mov fdivrs mull movsl mov dec mov or mov ljmp shll test (bad) dec mov sahf push xchg data16 inc popa hlt mov adc sub dec scas repz jmp adc into pop test repz jecxz push add push jns fmulp pop loopne sub sub dec jmp movsl (bad) popl adc push jmp sub lods cld sti lds xchg mov ja sahf inc dec sbb fstpl clc jg mov shrb aas and cmp xchg xlat push xchg push sbb add pop loope adc mov push sbb (bad) fs jbe sub jnp dec repnz roll mov adc jno mov mov inc fcom pop in dec js insl and aaa inc add sub pop cli jo add sub sub push clc mov cld cmp xchg stos lds jne (bad) insl out inc inc xor dec adc cmpsl (bad) bound (bad) xor pcmpgtd or lret push mov pushf mov loop dec push lods sahf fnstenv cltd and sbb push xor cmpb xchg inc xchg push xchg mov in inc add in jb mov into and ret and cmp scas repz mov test cmp outsb repz sub dec insb push sti sub daa mov repnz push mov leave inc adc rorb ret dec add and xor lret xor inc push cmc jp outsb adc add ss inc lds js lods mov ss sub sub dec mov add ret fmulp test fwait lahf sub mov inc inc pushf sub (bad) hlt xchg ja subb xor cmp sub lcall aaa popf xchg cwtl xchg (bad) (bad) adc jg jns addr16 (bad) dec int3 pop cli mov or fist (bad) jmp mov pop adc sbb test pusha repz xor jl cmp mov jg pop push add add sub movsb imull in sub dec xchg adc test mov mov ss in lret (bad) mov xchg idivl mov dec das inc dec fbstp lret sar fidivr dec stos addr16 ror mov xorb fadd fidivl data16 bound push and bnd add scas mov lahf test mov (bad) addr16 sbb jecxz scas aam sbb cmpsb imul mov mov sub push xchg cmp lahf lret fcomps mov mov push into mov lods xchg and jmp and mov adc inc stos sahf leave jmp gs pop sti or enter daa or dec pusha std shrl addr16 lret cmp or leave outsl fimull (bad) dec jge xchg jns in fisubrl pop pop imul add (bad) int gs pusha outsb test cmp sub jle jge (bad) scas leave hlt sbb push ja lods mov outsb sub xor lcall call popa xchg pop mov mov and xor cmp cmp mov (bad) and test push leave addr16 adc mov std lret arpl mov cwtl add xchg ljmp (bad) test xor lahf xor add sbb adc rol cmp fsubrl insl cs lcall jae adc jl test jp fcomps imul add leave (bad) lahf mov loope and lock jnp cwtl cmpsb and cld movsb lods into mov fwait xchg lahf andl and jb and lods test arpl mov adc or stos (bad) addr16 loopne or adc push mov loope jl mov push xchg mov push lods jae mov xchg in fsqrt sbb in push sbb bound fwait dec cmp pop dec aam es cld (bad) push push cwtl dec mov out cmp adc jne push pop mov jl inc and insb int pop and add es inc mov iret shll mov mov test push push xchg sub (bad) lret sbb call out xchg mov ficom cli out jle mov jo mov xchg inc in adc mov jns in ds (bad) hlt and and mov ja,pn fimul pusha jmp xchg mov and mov rcl stos lcall repnz stos xchg mov sub scas inc aam cwtl rcrl mov lcall sti ja pushf mov mov inc pop pushf push test jmp push or test aaa xchg pop cmp das data16 ja imul out inc bound fidiv inc test jg ss dec js xor (bad) ret xchg scas dec jo cli mov push mov jo jge mov mov mov ds into cmc (bad) in std mov out cmp daa pop add ss mov ficom cltd aam add dec add sub cmpsl div cmp out sub jmp jo inc adc (bad) mov and call dec sbb call lret cmp mov cmpsl popf push outsl pop inc cltd mov xor insl movsb daa (bad) dec js rcrl push cmp add mov pop (bad) mov das inc pop stc cmpsb xor xor cmpsb call xor cmp and push dec or icebp and mov cmp push mov movsb push push mov pop (bad) out sub ret addr16 lods daa inc loopne and mov fstpt add sbb fidiv cmp test call imul mov or mov aad pusha inc (bad) lods inc cltd shlb notb js test (bad) enter push js in dec dec cmp mov hlt mov insb push mov push jp or mov xchg mov push cmp shrl jnp iret push iret lret jo dec popa in insl jb mov pop (bad) adc push jae nop xchg and sub inc add lahf mov data16 fwait mov fs popa ss arpl (bad) (bad) sarb adc int3 add mov (bad) and xor mov into pop imul cmp ret add and inc aas data16 mov icebp cs jmp jge fs loopne pop pop stos fcmovu dec in bound pop insl jle jle xchg mov ficompl fmuls xchg sti fnstcw ret mov mov jge cmp mov add movb (bad) pop fwait dec adc fsub lds dec int3 cwtl and or call fbld je xchg in popa cmpsb ret add sbbl outsb scas or bound lods testl hlt ja mov es rcl or adc push ret es xor imul cs stos lds xchg dec outsb mov ds loopne dec stos aas mov ret stos fdivr inc fnstsw les fisub in shr cs xchg jne mov testl pop movl xor jge out push gs pushf jne cmc inc and pop gs daa push sarl and pop out das push (bad) pop out push int3 xor and in (bad) test push inc sub les add add adc cmp insl pop push pop and lret cmp push iret (bad) jo xchg mov jb jbe outsb (bad) cmpsb ret xor mov push jno dec or test add xchg aad inc sub mov cmp pop mov gs mov xor pop sbb jne into fisubl or dec or mov inc inc clc fcmovne mov gs scas lret ds jbe fildll hlt (bad) daa and ja mov movsl mov and mov sbb sti sbb and adc aad mov add dec or inc pop push out es mov jl cli mov mov je xchg inc js and fdivrl pop arpl dec icebp push enter rolb dec inc ret dec jle nop fnstsw cmpl in dec in adc stos jns pushf push dec push mov lds mov nop outsb mov (bad) dec insl or mov cmp jl cmp dec nop icebp pop clc sbb test sub push mov int ror shl xorb push inc pop lods inc pop jbe outsl mov jo fdivrs xchg xor daa dec adc fs arpl iret (bad) and pop xchg aaa dec cwtd es mov jnp add rorb fistp cmc jae adc std ret push cld leave fisubrl xchg ja push fnstcw dec loop adc lahf insb mov arpl lret loop cltd mov jl xchg cmc dec in loope adc push dec popa cmp xchg loop xchg sbb pop in in clc mov lcall fwait bound sbb sub repz xor jne sbb sub es out jns fwait add adc push (bad) jmp dec dec jl xorl dec mov wrmsr sub fstpl stos or ret inc in imul dec ret loopne sarl mov jbe es adc sub mov cmp cmpsl rolb cmpsb das inc cmp mov cmp ss out (bad) cmc or jl lcall jo xorl cmpb ret cmp scas jg,pn mov xchg xor std jns sub pop out xchg xor inc in in out push adc mov lods mov jmp scas add test out dec sbb (bad) mov js aad dec pop adc das je mov loope call pop mov jg sbb mov pushf mov push es notl dec test dec addr16 push push (bad) xor pop mov xchg lret mov mov xchg xor push gs pop jg jo repz jne nop push sub popa push adc scas (bad) xchg xchg sub sbbb cmp sbb outsl notb rorb inc stc jns pop mov mov add cmp pushf scas enter popf inc rcl dec fsubs or pop imul or dec in mov (bad) sbb int push inc mov movsl or stos cwtl sub arpl xchg out xchg bound xchg and insl cmp jl lds cld lcall enter dec loop int3 mov lock (bad) add fnop add xchg jmp xor push nop es sbb mov loopne or in pop scas jg mov mov repz aam (bad) out push xor ret push mov shr sub push mov jo push (bad) adc jp lahf (bad) rcl insl sub enter test pop jns cmp pop xor (bad) cmc or inc (bad) hlt mov inc roll sub inc and test jae (bad) mov icebp fdiv cltd cld dec insb cwtl dec mov into pop lods jb sub jb jmp sbb outsl mov jne pop stos stos inc add iret ffree aam xchg cmpsb lcall cli mov ror in xchg jmp mov fmull dec jno or shrl pop fisttpll jmp pop lea or mov fnstsw mov les mov test xchg cltd adc mov mov movsb jle aad int inc jnp inc jne fsts mov pop adc movsb inc ds lcall pop dec mov les dec xchg in push sbb out call mov out nop lods sub ljmp ret xor faddl (bad) fiaddl or (bad) sub adc shll shll int fwait jmp mov aam or push adcl inc divb mov xor adc add mov les clc sbb mov dec lahf int or mov lds pop xor lock (bad) mov aas insl aad std jge scas push es bound mov mov or sbbl popf pop lods sbb sbb int3 bound jge and test cltd inc nop jle xchg aas mov mov scas xor sbb js imul adc inc jecxz cmp (bad) je sub div repnz cmpsb ret (bad) out push push mov es xchg mov xor loope insb mov sub cmp jmp cmpsl stc inc stos out (bad) into push pop cmp jns sbbl pop ret leave loop into ja fsts lret in fldenv icebp ja mov jmp insb in into fnsave cmp ficompl cs test sbb loopne fcoml movb pop iret gs outsl xor mov dec inc cmp xlat add inc sbb mov adc pop xchg pop (bad) mov mov or mov sarb mov cmpsb mov inc loopne insb mov out push idivl and adc sbbl sti movsl dec lret outsb cmpsb sub pop int push pop fsubrs sti aaa mov repnz (bad) scas sti add addl sub mov and ret push ret add (bad) dec push mov sub pop jge lret xchg (bad) aam shrl sarb jle xor pop shrl or fnstenv jb movsl cs orl mov xor jmp push insl jb dec hlt xlat int3 test mov push jge leave lock mov add mov jbe (bad) mov mov lret xchg ja neg out (bad) ljmp cmpsl and mov clc jmp hlt out sbb aam stc jmp sub dec xlat cli cmp or xor or dec mov pusha out inc inc sbb mov cmpsl push js mov or aad sub stos fs pop (bad) repz jnp adc pop xor jmp cld push ja or scas mov and dec adc mov cwtl xchg mov shrb and push cli std dec sbb inc jecxz xor ja adc pushf xchg js int3 aas adc push push adc mov dec xchg mov pop lods dec cmp pop push xchg adc addr16 mov aas sub int3 or lcall cltd ljmp jge cmp or lahf dec flds and (bad) jno mov push in pop movl fimull cmp mov dec cmp ljmp push jo xchg out add cmpb mov inc inc test enter (bad) push aas (bad) loope sub adc lods or bound pop insl leave (bad) jmp and cld enter (bad) aam shrb dec (bad) push (bad) push cmpsb lret dec lcall xlat lahf mov add xchg outsl and mov xchg cmc mov enter lret push pop sbb in repz (bad) fild test xorl jbe (bad) add jp sub sbb dec sarl insl mov and test (bad) fisttpl outsl faddl add sahf or push and in sbb cmc and jae repz scas push mov nop lds xor push lods jle (bad) testb cmp fwait push subl cli adc push ficomp cmp xor dec jbe lods cmp adc jns nop cld sub push xchg push imul lods outsl cmp cmp mov data16 out fnstenv and sub cmp call out test test negl dec push (bad) in (bad) lods mov loopne jg ret adc clc push lahf jae ret orl and or je out xchg lods rclb mov (bad) jmp jnp fs mov cmp ret test mov test js mov mov and cmc into xchg outsb adc mov xchg loope xor (bad) push int rcrl fcompl pop xchg (bad) (bad) (bad) mov je xchg ret movsl xchg (bad) into in and or xor push cmp xchg jno cmp jle add inc stos adc fisub add fs outsl out (bad) repz mov mov sub inc fdivrl imul iret ja out sbb loop std adc popf jae in out std or sub pop fwait cmp xor mov call pop pop test dec out and add mov clc movsb sti imul push enter loopne jge mov out push or cmpsb das cs dec test jo decb sub sub (bad) movsb leave dec icebp cltd sbb xchg push mov push push sub sub in mov repz lods jmp xor mov mov add leave push leave or push jg and ret pop lds loope sarb lcall test sar mov ds adc xchg add movsl test roll jb adc in xadd push in sbb add aad mov icebp insl out cmc lods (bad) subl (bad) sbb out add and cmp mov mov xchg xor gs mov xchg push insl cli gs and lock jle loop std int3 out inc pop sub sbb (bad) pop lahf outsb sub mov cmpsb ss loope mov pushf inc mov xor pop mov jnp lahf push or lcall adc outsl (bad) pop push xchg fisubl call mov mov sbb adc pushf push scas roll aaa enter negl stos and aas inc sahf outsl cmc dec cmp inc pop sub inc cmp daa jo xor jmp push cld test cmp rcll shll mov repz mov dec loope (bad) sub mov mov xchg aas add popa sbb jecxz or aaa (bad) bound cmp out fs sub push out dec ret out xchg ds bound xor xor mov or jge ds hlt dec mov jne adc mov push ja ret ss imul fsubrs jmp adc cmp adc ds dec std and xchg lahf testl loop dec cmpsl xor (bad) cmpsl (bad) mov xchg (bad) mull je lock cmpsb inc sbb mov push pop adc imul (bad) mov or and add mov (bad) insl mov mov lea mov jnp pop sbb sahf ret cmp sbb movsb fisubrl pop and (bad) pusha cwtl ret sub push add sbb call cwtl int mov arpl rolb bound dec push lret hlt push notb out pop inc jae clc fadds sub mov push fwait mov stc scas icebp cltd push fnstenv fsts jns repnz aam jb fsubrs or push les pop add cltd push push sarl or lcall (bad) mov mov cltd enter inc push xor cmp cli sbb cmpsb xchg xchg je pop mov or push cmpsb or sahf cwtl pop test mov inc daa jne xstore-rng cmpsl test (bad) mov adc lods inc jnp notl xchg ljmp aaa lock sbb mov pushf push jno ret or aaa xchg lret jb popf int icebp add fs add js cmp xor mov in out xor fiaddl ds test push push outsb push test xor cmpsb pusha or cmp dec push pop pop sarb pop leave push push scas adc std (bad) fistp pop push jbe fsubrl mov lcall xchg push enter xor mov insb jne out cli call adc clc jo outsb lea jnp ret dec mov cmp xor add mov mov ljmp jne mov mov adc mov cmp int3 aaa cmp jmp add mov xchg int3 add cmpb mov inc xlat sbb shrb mov das pop fs xor sbb out lret imulb jb jge shlb fdivl aad (bad) xor mov push es addl mov aam sub int3 (bad) jl cwtl scas std (bad) imulb adcl pop arpl aad lret sti in divl inc jno test mov or in icebp add imul mov ds imul and stos push mov xchg push bound stos push loop into int pop ljmp add cmpsb sbbl movsl and cs out es pop aad ret jbe jmp cmpsl add push jae inc sahf or sbbb xchg sub imul andl mov push add fucom popf pop (bad) cmc and pop cmpsb add xlat inc sbb dec hlt jle push jnp xchg pop (bad) jmp gs cs daa push cmc jecxz mov mov push push call sub imul cmp or jb daa js lock lds add jl jp xor mov je in push fcmovb mov movsb sarl (bad) aaa mov les in xor aam mov ret xchg mov push jg loop cld jne loop pop xchg gs das xor outsb (bad) stos test push sub lods scas jle sti enter cwtl mov inc pushw push into adc outsl sub lret pusha sbb pop mov arpl nop (bad) jecxz cmp adc dec aad lret (bad) jns insl add cmp pop into addr16 cmp lcall rcr or test xor jmp scas dec push (bad) imul adc in js movb aam dec or pop fs add mov fmul repnz and push insl xchg ret sbb sbb add mov lods movsb cmpb (bad) (bad) mov pop xor fwait imul inc (bad) es outsl cmp cmp shl sbb jl out pop stc and pop pop mov in dec cmpsl adc idivl pop jmp stc push add pop sbb testl jno,pt sub negb pop jmp push xchg test loop adc mov jno sahf sbb fs sti lret pop in cmp sbb push cli (bad) outsl daa mov and inc xor xchg dec push pushf xchg sti dec adc and jns dec push leave arpl pop dec xchg mov into mov xor adc in push or xchg inc sbb pushf (bad) icebp xor movsb mov setae or sub xor stos pop add xchg push bound lock in xorl push es xchg xor into ja addr16 push loop jne in pushf decb or fcmovbe mov cmpsl cmp add orb jbe clc sahf pop cltd loope fs adc arpl push dec push add push pop sbb insl nop push movsb cmpsl pop sti jmp add mov sbb jecxz mov adc ljmp pop sarl rcrb mov push jmp (bad) icebp (bad) hlt mov push aam in adc imul in (bad) (bad) lret icebp gs cmp cmp stc adc cmp pop out das mov pushf imul adc xor pop outsb push int jle sub dec lods cwtl pop mov es mov sub sub add fst jge sbb mov sub insb hlt dec xlat add xchg clc push xchg mov bound (bad) fmuls inc fxch pop cmp mov (bad) push in sbb outsb mov dec mov mov xchg and or jns add out xor (bad) push sbb xchg (bad) jmp ffreep pop sub mov cmp add stc cmpsl add in xchg or inc (bad) jmp shll rcrl mov or cmp es push xor jne mov adc sub xchg jns dec pop incl scas jb mov jne insl mov adc and arpl jne or adc xlat inc out test xchg (bad) sub mov (bad) insb sbb rclb sahf jbe cmp in push mov xchg mov and mov or jmp js (bad) scas dec mov popa pop sbb outsl in in into adc or add jge cltd sub mov (bad) mov (bad) adc push icebp push cmp enter aad xchg outsl out (bad) pop mov mov fiadd cld cmp jnp fwait push int3 pop adc and lock mov test sbb pop subl clc fdivs andb sbb push ret xchg dec repnz cli mov insb adc (bad) out mov dec cmp xchg adc out or xchg test or cli cld dec push ja mov sub lret cmpsl aam cmp fdiv imul out sbb push fnstenv push mov pop jmp pop sarb aad daa add xlat inc das inc js stos sbb mov push stc nop sub ljmp pushf aaa cmp mov mov push out or cmp sub and add je fwait daa cmc idivb orb insl outsl lea fldcw repz mov inc jle mov dec in jmp in pop jns xchg pop jb int3 mov mov shrl or in out jae sub out inc cs iret in mov lock sarl xchg jmp add pop cwtl inc or dec jo cmp adc dec add pop idiv pushl or test push andl jno xor lods mov fiadd mov jne jns cmc outsl insb lods gs scas and rcr xorb xchg arpl (bad) jbe jae rcll pop cmp adc sti lods (bad) sbb xor or fs (bad) add sbb std dec in pop cmp and mov sbb pop add inc std (bad) mov sbb push mov adc (bad) arpl fsubrp xchg dec mov pop in out cmpsl stos and mov stc imull cwtl test xchg mov adc sbbl or out inc mov loopne bound mov adc jnp push fisttp jnp cwtl xor test mov fadds push test and ss jns xor pop and xor js jnp pop ret in sbb sub pop inc (bad) pop aad (bad) or (bad) mul push and xchg inc ss arpl das cmc pop push or sub (bad) mov or push inc sahf jmp mov jb cwtl jecxz sbb (bad) sti adc addr16 push xor or jb mov pop pop mov insb pop or ljmp inc xor (bad) sbb ja fstpt cmp in mov mov (bad) hlt adc adc and dec mov leave gs fistl push xchg push movb xchg mov sbb rorb pop fs js test fsubl ljmp pop jl insb xor cltd xchg jo cmp push pusha sub hlt xor mov xlat and sbb pop mov mov cmp mov mov cmp int mull arpl sbb outsb cmpsb jle outsl adc lock ficom iret fmul je pop sub out addr16 and gs mov dec test and in jmp scas jle mov jbe mov ljmp out cmovns shll test push add nop pop adc inc dec lock xchg pop leave into xchg outsl mov or test outsb sub push sbb (bad) call cmp sarb cmp and push fisttpll in pop gs insl adc adc fidivrl (bad) xchg adc in lods xchg scas pop or push push cmp dec insb jmp lea sbb xor mov jo fstl xchg inc jae pop jnp cmpsb sbb shr das stos adc xor lods dec xor mov mov add xchg dec mov test test das fldenv dec cld pusha (bad) data16 sbb or test or mov out scas ds sub add insb int3 mov insl out pop pop jecxz dec xchg push add fmuls mov cmc lock lahf aad fdivrp inc cmpl (bad) pushf arpl shll ret les cld pushl scas test jno int3 mov mov ret in inc fldcw pop adc cltd dec pop inc lahf pop xchg scas xchg (bad) xor jo inc je adc sub xor sub (bad) test jmp in insb push dec lods xor cmc push xchg lret fdivrs (bad) leave ret dec cli mov in in mov sbb js pop dec out ret inc sti or xor sarb mov cmovle cmp icebp aad xlat ret sub sahf hlt pop mov je jae push pop repnz loopne movl mov iret adc dec std imul xor ja stc add aas les (bad) js push test lret scas sub cltd ss addr16 cmp pop xor sub lods sbb in jae xor cmp imul push icebp in lods fild cmp fwait lock add or mov lods xchg cmp lods xor xchg pop mov pop push test mov dec xchg and js ss ds cmp push xorl loopne jb ret hlt les into loop pop nop jge in (bad) movsl push dec fsubs sti repnz and ret movsb pop sbb dec int dec push sahf (bad) ljmp (bad) mov and rcl ss mov mov in test xor outsb js fsubs sub fdivl sti inc repnz cwtl cwtl mov aas mov pop mov subl int call outsl xchg mov pop xchg xchg jmp mov loop std lock and jns cli lds inc pop push insb outsb in and jmp xor mov adc or rol jbe mov push jg repz mov sahf (bad) in cmp lea icebp imul mov in and mov test or shrl pop push ss cmc (bad) cmp mov mov xchg outsb cld fisttpl test lods dec jne add dec mov cmp cltd loopne pushf stos fs add pop fsubrs jl dec or cmpsl sbbl dec addb popf pop jnp sbb add dec cmp cmp jne ljmp adc popf jecxz out lret (bad) scas inc cld jnp int3 mov adc adcb xor jmp fnstsw int mov jge cmp xchg xor push cmpsl push pop out mov pop sbb hlt push or das aaa sbbb dec popf hlt push nop jg adc test imul push aad repz test stos pop test mov popf sbb fnstsw dec out pushw mov xor cld ja xor aad faddl js jns jl imul ds mov push je add cmpsb push pop inc fldenv cmp jge jmp push dec fldcw cmpsb insb xchg add cmp xchg mov enter mov loope or push int sahf dec adc pop xchg mov in loopne inc pop cli add or pop outsl in scas xchg sub inc in xor (bad) sub mov push mov jae xlat add and sbb jnp out cmp cmp add faddp jbe jne adc jp mov stc inc dec scas out insl mov out js push inc iret add or xchg dec out mov xchg mov leave jb push lds inc scas imul nop or xchg sub (bad) lock pop enter pop rolb mov (bad) cmp mov pop xchg sahf loope call dec lahf push mov pop (bad) jle xchg pop insl jmp (bad) iret mov jge inc mov (bad) mull pop xor mov inc adc inc int and sti jle cmp fcoml int and xchg xchg (bad) rorb fwait mov in std cmp jnp jmp or daa sbb lea hlt inc inc or neg movsl shlb sub add or idivb inc fldl lret pusha or mov out test jge sti test mov and xchg ljmp pop iret jbe ljmp leave push jnp iret jg andl (bad) pusha cmpsb pop or xor push aam xor inc jl adc push orb jne xor fdivrl or xor popf out sbb inc aas push sub sub cli loope or mov sti dec adc fsubl dec les add sub pop pop sub clc cmp xorl mov sbb sbb push xchg data16 in cmp repnz inc cmp mov jmp popa fisubr in test push push xchg lret sbb lret subl mov call push out jge ja mov in xchg incb (bad) mov mov sub addr16 mov repnz out movsb xchg inc (bad) (bad) dec jns ficompl lods clc mov xor das das inc fsin out test push inc mull negl pushf ss jecxz xchg push call adc add xchg decl dec add xchg imul push jns,pt mov das mov int push inc jnp test sarl in (bad) imul out cmp xor aad xchg jns push adc inc push loope adc jno ljmp test inc into mov xchg inc mov jg mov and and cmp cmp fsub loope icebp adc cltd rcrb sbb push push ss outsb stos adc int mov adc inc inc cltd lret aad std ljmp mov jne jge js mov pop or and jnp xchg in cs call es sbb add enter leave fmulp mov or jg jmp jbe sub inc xchg and ds shl je nop push ss (bad) daa lods dec add call push out pop jp cmp push push push sbb sbbb xchg or fwait sti and sbb sub push jbe insb xor aam jae cmp dec loope test or data16 add inc add icebp push mov mov pop int3 inc hlt hlt push and (bad) add jb (bad) xor jno jmp cmp mov adc (bad) enter cmp sub sub xchg fbld movsl lahf mov add push and (bad) test fstps xchg repz add xor fsubs jne and scas int jl stos inc or lock (bad) movsl (bad) testb fadd les mov ficompl loop mov cmp (bad) test push nop ret push mov mov fwait lods in (bad) enter push cmc push js cmpsb pop inc jno adc mov mov cmp loop sbb out test jb loope pop xchg ja aas addb push and stos outsb (bad) pop cmp in out inc add fidivl lahf (bad) push sub push mov jecxz adc in or push out mov (bad) xchg add repz loopne fsts pop arpl push push addr16 imull out mov xchg cmp sub div add (bad) test (bad) pop jle xchg aaa xor sub inc add shrl cmp mov fidivrl and stos arpl enter outsl and pop mov sbb lret add loope imul jl mov loopne lcall scas cmp outsl mov cltd test sub cwtl ret or push pushf push (bad) or int outsl in frstor jo (bad) push movsb scas push cmp gs dec push jmp sbb xlat fmuls cwtl cltd ds mov test dec stos push push mov out xor add xor add push inc dec das or mov pop xor sar arpl outsl and out loopne outsl adc sbb (bad) jbe mov xchg pop arpl fsubl pop sti fwait pop movsb daa lock xchg jge mov adc or loop mov push jg dec cli mov push sub and out dec lret arpl imul mov aaa jge mov clc cli jmp (bad) xchg (bad) xor push rolb aas imul jno in jo lahf hlt push dec adc stos sbb popf scas xchg and mov pop lock xor es es add adc push mov bound mov xor add xlat adc xchg xchg jle in in (bad) or dec jbe sbb jns in inc insb add jbe es (bad) and push adcl cltd enter rcrb cmc imulb fdivr mov out and mov popa imul mov fs repnz ret out imull addr16 movsb and ja dec jo add fbld adc cli outsb xor jae scas jle sbb pop inc nop imul add xchg cmpsl loope dec icebp movsb add rorl dec movsl push xor int fbstp das fwait sub subl ficoml lret sti and icebp inc fwait lods aam loop mov insb inc mov outsb and xchg jb push add cs lret or inc leave lret sbb sub and inc sbb fadd test jno rorb lahf push pop mov test push pop hlt loope push sahf notl and mov pop sub jb mov mov mov inc mov xor in pusha lock mov stos cmp or rclb push sub xor and pop xchg insb js cwtl (bad) dec out rcrb mull mov aas lods mov mov dec xlat inc es pop inc xlat lret int sub mov sahf or pop loopne pop int3 (bad) lock sbb and sbb jnp aas sbb divl mov cmp push or or cltd mov clc dec add inc sbb and cmp cmp nop cmp inc xchg jmp flds cmp gs es xor cmc mov stos in xlat sbb fdivs loopne push cld sub or jg xlat frstor inc jb push inc sti shr jns daa out lcall in xchg cmpsl sub xor pop fs pop nop adc jo jp mov sbb loope add xchg cli sahf in sbbb xchg lret inc je insb fwait jnp push and icebp inc cmc push sub mov sbb nop scas push cltd mov mov jae call inc mov mov stos loope ficoml xor adc add das push xor pop (bad) cmp daa leave (bad) xor cld imul or rorl aaa push xor xor pop and mov fistl scas cs out add popf pop pop sbb mov add lods in cmc outsl addr16 in jae xchg arpl jnp stos icebp data16 pop out xor es xchg arpl je,pn sub dec jge jecxz mov push pop mov loopne sahf push jle scas pushf mov out ucomiss gs scas mov inc loop aam adc pusha xor jl mov jbe adc adc adc (bad) lret inc jecxz pop sub sbb movsl int3 push xchg mov xor or sbb inc add clc out xor mul add int stos pop pop stos movsl ljmp mov repz dec dec fnstcw adc ret pusha and xorb mov sbb mov fcomi jg ja lds in inc pop outsl mov js lcall mov jmp mov xchg ja xor shlb add (bad) iret (bad) cmp ds ljmp push mov push lcall test insl dec cpuid fnstsw test push enter pop pop insl mov xor movsb and dec mov cmc mov ficompl movsb cmp out inc cmp cmp push sub test fbstp add mov sub dec cmpsl dec inc test outsb movsl (bad) mov mov or cmc mov xor in loopne cmp in dec cltd cmc sbb mov push out and inc cmp popf inc aam inc push xor repz negb ds xor and push fnstenv iret mov and add xchg xor jge or in xchg or cmp fs aaa sbb mov fstps flds lret or into inc leave cmp xchg mov aam pop sbb pop jl fiadd mov sbb add mov leave inc and add dec fldl (bad) sti stos cmp shrb sub inc sahf dec int loopne sbb sub lcall scas xchg dec inc loop and fwait jae rclb fstpl gs xor push xor mov xor push rol cmp jle jle adc popa sbb sbb lret and push sbb fstl psrlw inc xchg mov dec xchg xchg mov mov cld scas lods loop add ja mov cmpl dec repz ds xchg jbe ds or mov xor dec adc xor sti inc mov cli push leave lret push scas pop roll aad (bad) mov fwait dec sbb sbb imul pop shrb popf loop pop arpl jbe addr16 gs mov xchg mov hlt xchg mov popa mov sbb cs sbb xor rcrl in dec pop cmp (bad) mov add dec (bad) mov out loope cmp cmp xchg xchg mov out int jg and sahf loope mov pop lods das pop inc test adc iret jmp adc rcll mov sub jno sbb movsb in mov je jns (bad) gs icebp std and movsb and jmp push or push and fdivl dec mov ret aad push push pop cwtl test mov frstor fadds fldenv jle xor pusha test sub lock xor sbb outsb jo jecxz mov (bad) repz mov xchg out clc sbb mov in jle loop mov test push sahf push cwtl xchg pop push (bad) es ljmp cmp sub mov iret inc xlat sub cmp push jo iret dec enter dec mov icebp (bad) (bad) popf or into xchg lods stos hlt ss push ret fsubs ret and arpl jmp xor pushf sar bound stos lcall pushf aam pop push popf rcll scas mov or fdiv je out dec test stos jmp sub fwait sbb adc movsl cmpsb push pushf add mov push dec sbb icebp mov fs mov out addr16 inc ljmp mov sbb dec and sbb inc xchg mov lea jae jo test mov sub rcl pop inc jp enter test sbb mov fs push and jp dec push push (bad) notb pop rcr mov lock pop xlat test das aad pop push (bad) ret dec imul fwait les mov hlt enter inc ss ss (bad) xor mov adc pop jecxz repz test xchg jmp push incb xchg and pushf pusha push rcll pop pop pop adc mov mov dec mov or cmp dec loopne fdivrl es or les fisttpl cmpsb mov and jg (bad) loopne and dec roll add addb popf mov lods or or jns iret movb jge cmp jecxz or dec xchg testl xor mov in cmc mov leave and push cmp ja jnp loope cmp mov mov test iret dec sahf push test push add xchg pop xchg inc ja or inc popf sbb mov insl or or xchg mov fsubrs movsl (bad) das and mov inc jo jle test sub (bad) in jge pop arpl mov sub sbb shll mov mov jge insl sti js je test jno push (bad) adc shrb ret aaa sbb flds pop call repz jnp in inc sub std push xchg les cmpsb pop cmpl xchg (bad) mov pop lret fsubrl scas cmc xor inc cmpsb (bad) popa jp sbb hlt sub pop xor addr16 nop aas cs in repnz adc imul lds lahf popa adc fistpl test ljmp inc add or outsb pop cwtl sti (bad) stos pop jp cmp sub xor mov sarl add inc stos dec imul pop sub mov daa lret or imul fnstenv or (bad) sub jecxz add stos test cld dec nop jns pop ljmp pop dec daa ja xchg push and gs inc mov sub in es push dec loop (bad) shrl dec (bad) ljmp sti daa andl mov jnp add cmp jnp mov xchg pop push ljmp (bad) xchg inc mov mov movsb cmovns out test adc push mov sub fwait stos push sub (bad) into imul fld1 push out mov inc jae cmp and pusha les mov push mov loopne inc call fcompl xchg push ja pushf pop jl lcall movsl cmp mov incb icebp add daa cmp inc mov dec popf sub dec pop leave jns jg mov mov jo outsl (bad) ficom cltd jg sub and or mov icebp add inc pop lea (bad) daa mov stc out es in dec daa pop xlat icebp rcr pop jge outsl mov repz pop jmp add enter jo lret or jmp mov lcallw cmpsb mov lcall dec pop xchg cmp cmp test xorps gs rcr scas out fsubs and addl outsl jne imul insl jbe loop xchg daa mov imul pop adc lods outsb cld jnp inc in cs dec call divb add lret and (bad) test jae push nop stos push addr16 lahf sub pushf and div jo push lret out xchg popf test jecxz jne dec lahf sbbb test dec pusha dec stos gs inc inc jno push in std cmpsb gs jo xchg pop call jns popa leave pop fisubl dec pop outsb jo push nop imul adc out (bad) stos loopne jae add aaa insl add lret mov adc das push pop mov loope (bad) call gs fidivl test cmp jmp sbb out push rcll imul pop in mov adc xor sarl mov (bad) sbb xor cli bound pop popf mov roll add push sti imul ret dec inc mov mov adc sahf (bad) outsb aam mov ja lahf jae inc rcrl dec pusha es pop cli mov and ret sbb jb xchg aam inc sbb imul push das (bad) icebp mov mov mov push gs aas dec cmp gs and popl mov mov ret mov stc mov sbb ret icebp xor mov xchg or cld test dec out pop jl icebp adc adc in out pop cld and inc movsb inc jl lods cmp cld out (bad) push int push leave pop jb popl into dec add in into adc push xor adc pusha mov inc lods and jns into int addr16 icebp ret inc xor mov insb jle cmpsl cmc popa or pop popa pop popa push (bad) xchg in jg or pop test sub xchg sub mov xchg lahf dec in push push idivl sahf sar clc pop push scas rcll out push aam hlt push adc sbb jnp inc jns cltd cmp and xchg jne inc aad lcall aaa (bad) imul add pop mov jo (bad) ror xor and xlat cmp sbb pop mov and das jno nopl out (bad) adc or pop and or add roll xor insb stos or das adc out add push out in xchg into fnstenv and xorl adc lock cli out aam and fiaddl and sub cmp clc push jmp (bad) out jecxz les ret imul flds and mov mov or sarb push inc stos (bad) aaa imul mov sub sbb pop repz push test out mov mov jl adc xchg add adc mov push inc add push jl push mov mov add mov sbb pusha rclb scas enter cmp shr sbb and xchg loopne mov mov cmp iret mov push adc lods int3 in gs or aam loopne mov xlat fstp int or (bad) mov dec cmp in fwait and sub mov ja bound orb aad mov stos leave js test aad (bad) mov mov jl sub (bad) bound int out mov subb (bad) (bad) into int cli aas imul inc xor fisubl fldcw int3 addr16 pop fcomps insb xchg adc cmpsl fstp fnstenv push (bad) mov pop jno inc mov xor mov pop (bad) repnz inc ljmp rep pop jmp sub (bad) adc sub inc push sub ja in sub xor pop dec and mov bound sub mov cmp sub and mov xor jae aaa addb mov flds subb or or lea dec xchg dec leave stos sbb cwtl push mov mov inc in scas sbb mov sub nop pop outsb fstpl inc xchg pop mov jge dec push pop gs dec xchg xchg pusha int3 xorl push sub add xchg cld xchg lds dec sub cmp pop or lods pop repnz insb je mov test dec das int push or fmul pushf ja movsl mov nop in ss (bad) inc jo and xor js (bad) mov inc ret loopne aam repnz or ja xchg fisttpl xchg sbb xor dec pop in or xchg cmp pushf jno ljmp cmc loop pop sub sbb jg jnp mov sub in xchg mov jle test pop or fisubl xchg mov lods (bad) jle mov popf add addl sbb push sub aam incl cmp fsubl test test pop lret aas icebp (bad) push adc cmpsb ss mov and add fisub jne jp fist lahf cmc mov lock or mov dec je rcr (bad) hlt scas sub dec and cmp cli inc movsl movsb fstps add mov cmp pushf xchg rol iret pop shll aas out dec (bad) jbe fs or mov icebp adc mov ret stc pop add test addb les fidivr (bad) pop rcr push xchg xor mov mov fcompl popa mov push sbb xchg sbb movb scas outsb xchg jno out das mov ret sbb and negl and pop mov into loopne addb or rcrb jle xchg mulb mov stos pop push int3 push bound dec jbe lock jo dec dec aas sub cmpl loopne iret pushf add sbb fiaddl leave sub mov out mov mov jae jno xchg cltd xor stos inc cld push mov mov ljmp mov scas cld mov cmp loopew ljmp bound sub jl xchg loopne sub pop fildl jnp or repz dec sub dec cmpsb pop lcall fwait daa es push lcall lcall sar cmp stos (bad) scas sub jmp pop mov push bound jp test cwtl jmp out jnp sub inc adc mov jp and mov (bad) into popf icebp and lahf inc es in mov push cld popa xchg aas cmpb push or sub stos rcrl addr16 rdpmc aam loope sbbl and push lea mov repz or fsts mov movsb stos loopne mov stc adc mov outsl scas icebp xchg jns pop or mov mov das xor rorb jle scas mov sub mov add aad ja jmp jle fadds add push xlat jbe or ljmp dec cmpsb lea sub test mov loopne cmpsl xor popa fdivrl inc cmpsb clc daa movsl insl sti cmpsb int nop dec mov mov lea dec (bad) sbb fnstenv ret pop push mov in aad out rorl leave (bad) jmp iret cltd pop (bad) and cmp mov dec and sahf insb jg xchg dec pop push mov in lahf out inc mov dec dec fidivl popf push add lods or lock js or or adc jecxz or and jecxz dec kmovw js fucomp pop sbb pushf mov mov fadds shrl subl jmp lock sbb cmp cmpsl cmp push dec and sar jg jl push add out xor inc adc repz mov push shlb repnz ljmp mov push std in arpl push push dec popl out mov imul (bad) out daa sub pop outsb aad and mov pop cs jge mov fcompl jge mov mov sub lods mov cmp jo movsl in leave cmpsb xchg in jns lods popa les movsl push rcll xor ljmp push movsl push andb adc jno push cmp (bad) int3 dec shll mov mov inc fsubrs adc cs push push sub daa mov movsl mov pusha jg out lods loope popf out mov shr pusha pop dec ss pop (bad) popa stos nop leave aam das add popf jle jns pushl push pop pop in xor data16 test jmp lock enter mov fwait xor adc iret cmpsb dec inc sarb pop les mulb lea mov mov mov fnstenv jp adc out cmp (bad) push dec sub imul (bad) jp inc loopne push or xchg push mov cltd add mov sub cmpb inc dec cmpsl mov pop pop jl (bad) xchg neg cld scas cmp pushf fcoms leave sub sbb insb push cmp int3 sbb hlt addr16 negl scas and int test push lcall cmpsl mov (bad) lock mov lret sbb jg add push xor aaa push dec push jmp out mov sbb adc cmp ret mov cmp dec inc push adc iret out loope (bad) sbb jns fs stos popf (bad) std dec mov int xchg dec shrb push xorl mov pop or cmp adc sete test shlb push push cmp das sbb add inc fidivr rclb sub adc cmpsb adc add ret iret lret jne jb ss add push and sub insl xlat push ja,pn int lret in jbe popa bound iret dec mov data16 je fisttp sbb pop sub push lcall or sti cmc cmp push pop xchg clc adc outsl std (bad) repz mov (bad) imulb push lret pop pushw fs xchg dec push mov and js dec inc dec push repz js sbb mov rcr and sub push mov sub stc dec dec or (bad) into (bad) push jmp aas pusha or loopne pusha adc or mov fwait dec or pop pushf ja jnp inc sbb cltd mov add pop orl push cmpsb aam adc out sahf adc sbb repnz imull mov xlat icebp add inc in ljmp mov decl push loop rolb mov mov adc stc push es pop imul aad cs cmc or loopne mov mov mov dec pop dec sbb sbb sub mov rcrl cmp std arpl sbb xor mov jo lods rcrb push xor or or fildll or pop push fcoms pop pop xor push adc push fwait inc mov pop out enter (bad) cli xor xor xor or xchg xor jae push xor pop xor mov int call jb in or std mov ja jbe pop xor pop clc push or mov idiv mov or je push lds jne cmp lcall adc ret pop xchg adc cmp cmp (bad) in cwtl adc addr16 mov inc out and popf fistl cmp fnstcw or shrl mov and js and je and pop cwtl stc cmpsb js lcall push pop add adc dec cld push std push mov movsl sbb pop icebp xchg and dec in add mov sub ret arpl inc stos or inc gs loopne mov push fisttpll or scas pop cld mov scas bound mov mov jmp das or xchg lret sub add lahf add ret inc cmpsb sub daa push rorb or cli sarb ret pop xlat fwait cmc mov xchg aas (bad) pop lret hlt jge or pop add sar mov dec xor stos sbb mov xchg divb notl ret jbe inc (bad) sub cli mov lea inc inc sub pusha dec jns shlb mov jge add std and aam mov mov mov xchg mov mov repnz nopl xchg adc aaa lods mov sahf jmp fnsave imul idiv sbb sub aad lods add push jae,pt lds leave and mov inc push test sub push into sub outsb daa cmpsw ja or js cs cmc insl in dec mov ss jno push icebp cmp in (bad) mov add call je ljmp arpl push mov jecxz and and loope inc xor test (bad) nop inc loop cs shrl lahf (bad) sub sbb mov test aad cs jecxz aad add addl cmp xchg and fildll test divl cli cltd xor xlat enter lds sub jp adc cmp push imul xchg xchg lret ret inc sub das or (bad) pushf nop out pop and inc movsb xor mov jle lea push ljmp jae ficom xchg add lcall (bad) xor cmc cltd insl movsb push mov and (bad) repnz jnp jg data16 mov stos sahf idivb lahf pop jae mov daa mov (bad) ja or nop stos xchg xchg dec xor sub sub add pop xchg dec ja sbb test lods cmp (bad) (bad) pushf pop or mov mov or adc mov cmp flds cwtl inc stos es jg xor sub xchg popf cmc and test pop pop out cmp in dec fldl aad icebp dec sub imul imul or and in into adc or jnp pop and push adc dec fildl lret gs jno (bad) mov xchg jo mov mov mov int3 into dec push insb ret mov movsb jg xchg sahf add mov (bad) bswap inc (bad) push popa hlt dec jmp inc adc mov loop bound sbb mov add mov fnsave dec sbbb inc xchg jge pop (bad) roll gs (bad) aaa loope leave adc jnp xchg sbb rol insb adc jecxz in mov out pusha cld cwtl xor movsb stc mov dec ds pop dec mov hlt (bad) xor xor jns pop popa sub xchg pusha aaa fidivrl and xor notb jo jo jg mov mov adc jl sbb stc decl jle rcrl cmp sbb je xor push cmp cmp (bad) jnp or mov sbb mov inc push stos adc mov in inc dec xchg and cwtl (bad) pop pushf dec cwtl mov dec jne mov popf adc push mov loopne movsb xchg cmp fsubs cmp push insb xor pop xchg rclb in decb loope xchg popf test xchg sbb sbb push adc pushf pushf cmp ljmp int fcoml std ret add fcoms fistl fdivp mov pushl xor xchg aam pop daa sbb mov xchg pusha add inc in sti ret mov and push insl sahf push mov push nop movsb das cmp std leave xchg arpl pop mov pushl fnstcw xchg push cs lock stc jecxz frstor cmc ljmp das inc sub xor or cmpsl and out scas jno std fwait aad sbb pop je push mov fsubs xor notl adc inc xor test inc cwtl dec mov mov jmp cltd jecxz ljmp push in inc pop mov mov cmpsl inc rorb mov movsl icebp jae (bad) dec rclb jne jmp loop ljmp push mov arpl inc xchg mov pop xchg adc mov add dec daa aas test xchg fisub cwtl stos mov dec mov pop push aam xor into jbe out adc test leave fist arpl mov sbb mov push mov cmp adc fcoml out pop cwtl mov mov stos fcomip dec movsb push shrb mov xchg push inc and or jne dec (bad) fstps jns inc int mov dec fistpl adc test and arpl loopne enter movsb (bad) cmc fwait xchg sti sbb add and mov mov out add loope dec jne xor popf jne xor dec ljmp pop dec pop rorb repnz lahf xchg pop or test stos cmpsb rclb xchg and sub adc (bad) out mov jl cltd mov jg bound jne add addr16 in fnop ret mov adc (bad) ret inc add sbb jl pop iret mov scas xchg movsb push mov fstps fcoms push addr16 inc add pushf pusha loopne loop or dec pop pop or out test mov iret fimull sub cli pop lods negl (bad) dec sub dec int3 push add nop loop (bad) mov xchg xchg add jae mov js cmc lods lods cmc ss and jae push adc pop in shrl cld (bad) int3 inc jnp inc cwtl out loopne movsl xor outsl xchg push hlt lret dec jbe,pn fstpt push pushf jb adc std lahf inc out inc inc sbb push in lods hlt xchg int leave cwtl cld enter sbb lcall repnz sbb xchg sbb adc shrb rclb aam pop popf or xchg mov adc leave sub loope bnd gs xchg in dec or sub dec pop mov mov imul mov lock popa aad inc and adc cwtl adc test stc dec bnd leave push sbb hlt into ss fcmovnu push jns mov fisttpl out xchg add idiv in jp pushf mov xor inc xor xchg add jne inc dec mov inc pmulhuw xor jmp mov fcomps enter push or jb js iret lea ret outsb out mov es subps mov out aaa addr16 jbe fcompl das mov cwtl mov int pop push xchg imul insb call outsl enter mov cltd or mull mov dec shll push (bad) jne nop xchg sbb push mov jl aam cmc cltd add adc pop bound rcrl adc outsl rolb push es sbb int jge int mov iret (bad) pop pop daa ja mov jne into fs lods sahf into lcall rcll stc mov jecxz sti roll dec cmp lds xor popf sbb addr16 xor test lahf mov xchg (bad) fbstp lcall sarb xorl stos je cs iret mov adc loope xchg or (bad) or add sub cmp pop cmp enter pop xlat xor dec lahf lds scas lods dec add mov test mov mov mov xchg fistp cmp or mov or mov outsb mov dec clc into push add lret and popa sub add js or mov adc jo jge and stc in mov or xor cmpb lretw movsb mov add gs loop mov pusha int3 and in fisubrl ljmp fiadd das pop shlb inc insl mov lret sub add out (bad) adc (bad) popa orl cli xor adc push add shlb xor (bad) mov jmp lods jnp leave jnp lods int3 aas insl test cmc ret jbe es pop loop jmpw add cwtl jno icebp test or pop or and add pusha jb inc dec sub mov mov pop cmpsl test mov loop push push push fwait movsb or push lea mov push sbb lods mov sbb pop xor xchg inc pop loop (bad) mul cmp ss data16 je jnp adc jp jge pop xchg inc test mov sbb mov adc iret faddl adc adc pop cltd (bad) stos aas cli sub add out sti dec cmpsl mov and popf out pop sub and mov test sub inc repnz jnp test scas stos add and sub lods fnop dec jns jno cwtl stc mov push dec or mov adc pop jecxz adc rcl mov jge xorl push push sub test and movsb adc lea push dec out rorl adc xchg stc xchg test mov fldenv inc ret or and insb jns les icebp xchg arpl lahf xchg loopne insb call cld call test lret xor mov cmp mov fsubrs aad mov out and test jb enter ss aam or lret jbe mov stos ds ja mov sub jecxz pop inc push sub lret inc pop lcall test push mov sti cmp das in (bad) jl out xchg push dec rcrl inc (bad) push add ss lret test add movsb mov dec int fisubl fs (bad) dec fnsave lods dec into icebp sbb les inc int3 xchg xlat mov cmpsl push xor jp out and fmull pushf inc xor inc shlb idivl fcoml push lods jmp cmpsb cmpl stc dec xchg cli adc fwait mov push clc sbb sbb insl jno and les xor add sbb dec (bad) loopne (bad) loop fistl sbb mov shrl sub (bad) push dec mov and cltd (bad) mov mov leave stc add je sub mov ss into sahf adcl cld cmp mov sub xchg in nop outsl inc dec mov dec fist out adc inc xchg mov imul xchg int3 cld out push inc repnz nop mov sbb test loope shlb cmpsb mov out inc (bad) in popf addr16 pop xchg ja sub xchg pop push inc jns shrb dec xchg loop int3 xor jl jmp lahf popf and jmp sahf gs dec mov push mov xor cmp and stc movsb sbb jmp scas sbb scas out loope mov push xchg adc lods cmpsl (bad) jecxz nop cmp mov sub or outsb jo imul mov push add mov pop into mov add js (bad) (bad) repnz cld cwtl cmp cmc out ljmp sahf repz aam xor sub outsl stc cld push mov jbe ss jle cmp mov push cwtl fistpll ss lods cmp jecxz or pop jnp xchg div js adc xor lret lods je or or mov add jecxz pop mov lahf or mov testl inc mov push pusha mov (bad) cmpsb cmp pop (bad) hlt adc icebp sub mov sub mov fld adc (bad) mov lret out pop cwtl popa dec test adc mov sub push and pop jmp inc lds jns jbe mov fwait repnz dec aaa nop lret sahf inc add (bad) xor and test data16 jns pop stc cld jge xchg sub pop pusha push out inc popf adc mov xlat lds cmp bound shlb ljmp daa gs mov xchg jl inc mov cltd insl sbb popf cmpsb mov sarb (bad) std mov cmc (bad) dec mov out xchg in pop xchg xchg xchg pop xlat jg sbb sub sub stos add xor loop insl mov lods inc sub jge inc (bad) ss in mov adc xchg pop scas aam (bad) sbb out mov hlt mov pop cli pushf std movsl push mov hlt int arpl repz repz out cmp popa out or in xor cmp scas sub xor add and and jns fcompl cmpl insb lods imul adc pop push jg sti loop data16 orl and cmp pop repz daa cwtl std pusha and insl test inc cli loop stos jno pushf ljmp stc mov popa mov mov push aad mov jns je pusha fdiv push mov push scas dec dec pusha adc lret divb add sub pusha or dec adc rcrb jo wbinvd out inc inc imul cmp add popf cmp mov pop bound lahf xor pushl notl xchg out sti icebp sub xorb pop stc (bad) xchg fsubrs fildll mov jge add push and fadds xchg insl addr16 jp cmp lahf std es jne add fcompp lcall divb stos ja loopne and inc aaa fistpll pop xchg jp iret aad sub repnz sub ljmp (bad) out inc cmp xlat fadd repnz ljmp insb and loop clc xchg cmp cmpsb or and iret xchg mov (bad) aam pusha jmp repnz inc xchg lahf adcl lret jp push repnz mov aam cmp ret mov jecxz cmpsb jne xor jnp test iret pop test mov or inc addr16 dec push std outsl push ret add mov insl fidiv dec fisubr stos cwtl iret push and xchg add sub and (bad) fisttpl dec cmc jle inc mov mov dec sti pop mov and add xchg imul insl xor mov ret push dec and loop push shll jg test mov dec lcall stos popa mov fistl jne dec or pop jo pop nop sub lods out or sub mov mov movl xchg int3 addr16 sub inc or cmp stos aad pop test movsl pop dec lahf inc outsl sbb lahf ja lds mov pop cmpsb xchg int3 xchg sti test out mov sbb test dec xor xor sbb add test mov mov mov mull (bad) mov pop les and inc xchg or ds cmpsb fnstsw xor test xchg sbb add movsb repz fsubr je jmp mov xor and cmp pop cmp adc inc jge sub mov call xchg std imul and and mov xlat pop lcall or sbb cli fiaddl dec xor cmpsb ljmp sti dec jp in mov imul pop mov rclb push pop pop pop mov lcall inc cld or fcomp or bnd data16 enter xchg aad mov mov dec clc out pop sub repnz sub ss test test add call negl rol das cmc push lods xchg xor mov jle mov pop pushf push pop mov dec inc mov pop pop loope xlat jp mov add (bad) rorl cmc stc scas stos pop repnz add sbb xchg rorl pop or xchg js mov leave stos xor fsubs inc mull xor shr ret cmpsl and adc stc rcrb bound cli adc int adc pop jge imul in stos data16 xchg negl orl jns sub shr or fwait cmp or mov xchg or dec es not aaa pop sbb popa and sub lret pop sbb ret lods sarl lds inc icebp push movsb cmp (bad) sbb lods xchg sbbl and push mov jle lret xchg push dec pop cmp das inc ljmp lods adc popf sub pop test loopne jmp cmp jne dec bound cmp mov jecxz arpl setno fwait sub into cltd sarl mov sub jb sbb daa xor mov pop adc and cmc cmc mov add cmpsl or inc scas pop mov repnz sbb js push std dec mov aaa xchg mov stos push insl add jle cmp fwait jo pop push icebp insl inc in (bad) enter lods cmp dec sbb xchg addr16 adc jnp adc and jmp or cli je repz pop pcmpeqw inc (bad) fidiv xor jne push cltd fs sub sar mov push popf aad fwait xor push and sbb psllw es repnz dec in xchg xchg xor cmp xchg sbb inc add adc movsb or aam sub mov mov lea dec inc iret or cmc loopne adc dec lret pop in jae dec in lret fistpl cmp jne icebp xchg lcall sbb (bad) jmp das push loop sbb dec testb mov popf xchg push xchg mov jmp das jg loop movsb mov mov jb fistp rclb in flds (bad) or and cltd jbe lret imul or xchg ds sbb (bad) cmp lds iret add inc xor ljmp or jb lea les pop lods sbb pop push xchg in push inc int3 jae mov aad mov popa out mov popa xlat repnz jg cmc pop sarb mov cmpb push adc push xchg loope test mov lock push sarb cmp mov je fisubl sbb adcl ret pop mov adc mov dec (bad) mov push sti jne aas mov xor fdecstp xchg and lods idivb add mov mov into pop andl add in and xchg xlat jp pop (bad) xchg push mov sahf sti jb int mov aas outsb int aaa int3 xor mov push xchg and xor xchg es or test xchg cld or addl xlat sub push (bad) jb (bad) jge test fisubr and sub call inc push dec dec orb vmovq test xchg add je inc and jecxz sti xchg xchg sub push lods loope mov les inc stc in sub inc (bad) jno orb stos dec popa mov inc stos adc mov int3 inc mov mov (bad) or sub out insl outsb lret and sti mov xchg adc add inc mov jle mov mov icebp sub repz add repz mov mov (bad) pop test mov mov pop sub or test rep jb imul sub or enter inc pushf mov xchg (bad) xlat ss dec out rcl (bad) xor mov mov push test and adc leave out test lods ds pop pop jmp push cmp mov mov pop push das cmp cmpsl push cwtl jbe les push cld clc bound inc push subb adc repz xor and int push pop lods or fwait cmpsb xor push stc xchg sub xchg sarb cwtl cmp mov xor rcrl repz sub pop lcall aam mov jnp xor fwait lock mov cmp mov ds out or daa dec push in cmp movsb nop mov sub sub bound push sub push out jecxz and jne xor shr test jo push mov cmp cmp inc dec dec fwait jnp mov jns jge insl jne cmp loope iret mov add jecxz dec fwait pop xor add pop sbb xor push adc mov pusha cmp and imul sarb sysexit mov sahf dec int in xlat push or sahf sub mov lret negb push mov out neg inc mov jnp lods dec mov cmp (bad) ljmp leave ret sbb pop jmp ds andl mov and out jae ret inc dec xchg das xorl pop mov xlat js sbb subb cli inc mov mov jns call mov mov dec add mov jbe pop adc inc adc (bad) gs cmpsw add mov test fcompl lcall outsl test push cld ss jno idivl fdivl push sbb lds les sbb stos dec out movsl imul (bad) push lret hlt ja cwtl or in fs divb and xchg gs push loopne outsl popa adc inc mov mov jnp and jae test das push jg mov das (bad) mov test push imul lahf jb dec mulb inc jle push sub lret loop insl push xor mov gs mov hlt lds scas push add push divb mov xor pop lret cmpsl pop mov fistpl ja out mov xchg and mov adc jb scas addr16 sbb xchg data16 in cmpsb xor fildl mov jmp jns mov imul and imul pop shll addr16 and std lods inc fild jg aad cmp shrb dec fmul inc in sub mov adc add rol test jbe clc call and fnstcw pusha sbb adc nop in pushf call and xor jbe or std popa aas mov push lds cmc mov mov and xor test ja xor in mov sub fildll push rcr gs clc test data16 daa jno add sbb sub pop xor imul push xchg sbb clc mov rcll mov dec dec sbb outsb (bad) cmpsl mov mov lret pusha mov adc sub sbb punpcklbw push adc ret pop shlb ljmp int3 loopne jnp add cmp jnp mov lock dec in xchg (bad) mov mov mov out es push sbb add sti cmp clc xchg test lods aas das ja lods mov jmp adc or xchg (bad) push push data16 jo pop pushf test test mov mov cmp repz jb and ds cltd jnp and movsl imul push mov jmp divl xchg insl jmp popa inc (bad) fldcw mov pop xchg jbe adc jmp pop movsb imul add inc je sbb (bad) into loope push out fsubl mov mov arpl gs (bad) dec in mov sbb test leave adc cmp cli adc mov cmp dec xor sbb jnp ss jge daa xor incl inc xor mov (bad) icebp std cmp and mov push push pop inc sbb xor ss adc enter xor rorl lcall jo inc xor and push push in jmp test cltd shrl add add mov test jmp xchg fwait andl fsubs int3 mov test or jns int sbb mov stos lahf int cs cmp icebp cmp (bad) and cwtl (bad) enter push jb push insb pop subl cmp mov and addr16 xor xor cmpsb les jecxz sbb fcoms lret icebp jae loope sahf cmpsl imul xor mov xor aas iret xlat xchg loop sahf test bound sub push add cmpsb in sti and mov (bad) js fs pushf sbbb jg pop push inc mov sahf notb push insb add enter mov xchg push push and mov lcall mov push ret cmpsb cmp sub xchg call fimul iret mov loope xor dec outsl cmpl (bad) insb in sub repnz jno lahf push ret fwait add adc sub mov cmp rcrl orb jb sbb jns sbb adc es test sub cmp (bad) push inc adc cmp xchg popf xor fucomi fdivrs mov mov (bad) xor test outsl jo adc cmp cli arpl roll inc ret das js,pt and add int adc roll push xchg and xor fldl fwait inc xlat lret mov sub xlat popf xchg popa out sbb and test jbe xchg test push jmp adc mov and inc popf aas stc mov jge frstor in imul xor fwait js adc test aas (bad) pop jb mov push scas inc inc push pop call mov cwtl pop mov ja into fldlg2 notl xchg sahf add pop movsl xchg cwtl es movsl mov jmp fwait scas test out jns jnp mov jae and pushw jne popf mov mov mov shrb bound mov int dec push cli pcmpeqb and ljmp loop pop sarb pusha outsl loop adc ds divl xchg out fwait lea dec out cmpsl out fisubrl xchg cli (bad) es sbb (bad) popa mov loopne daa dec dec push pop pop push inc lods lahf les mov and fadd xor loopne jnp sbb dec or push mov cs dec push shll mov mov popa jl xor cmc aas aas push imul mov frstor sub add test aaa leave jb or sahf lea (bad) mov or jp pop or adc sarl mov mov cmp jle fwait mov arpl orl test mov sub sub jmp aaa push sti aam cmp in cmc fiaddl sub mov dec cmp sahf loop mov mov sbb ret xchg out in fldenv jg mov loopne dec xor mov nop in (bad) mov stc enter mov push cli aas movsb outsl cmp mov xchg xor pop pop enter shr cmpsb sbb sub (bad) movsl pop cmp loopne add sbb mov sub pop std push dec push jno aas push mov out push jbe dec push inc xchg iret (bad) xlat adc push push pusha sahf fnstsw mov jns hlt es and xchg ret jae imul xchg je xchg lock sub cwtl or (bad) std sub push lcall push inc sbb in out movsb dec outsl adcl cli stos adc cmp dec clc (bad) (bad) testb add in in push jle fnop lds xchg sub imul (bad) mov jo js aam aam cmp orl sub jbe add in mov mov pop out scas add sub and incl jle out inc cmpsb push jecxz (bad) jmp ljmp gs lods add pop in add movsb aas adc test rcrl rcl test jmp lret pop inc sub fdivl xchg xor cmc dec cmpsl dec inc or scas lock or push adc and lods sbb aad add arpl jo test aas jge je ja lock pop call stos (bad) nop push (bad) mov mov adc sar push (bad) cli mov pop push cli pop sbb decl mov and jo (bad) mov neg jecxz lods push mov mov in (bad) daa cs dec dec inc addl jp ljmp cwtl movsl fwait adc js sub cmp mov jbe sbb sub pop ja pop gs and dec mov mov xchg (bad) xor pop push mov test inc cmp test cmp fisub push push cmpsb test mov stos mull aam repnz jns cltd inc pop mov ds mov out cli sahf mov pop gs and loopne out sti jae cmc rcr out mov pushf ror leave fs jno mov lret outsb cmp cltd loop mov jbe cmpsb add adc call int inc sbbl (bad) les mov mov stc xchg sub insl lods cmp rcrl push cmp sub adc pop push out or sbb repnz aas enter dec jmp jae je pushf jns dec jo scas or jbe fwait mov add mov out push xor insl ret xchg stos lcall dec inc movl xchg mov add xchg outsb mov pop fnop fnstenv daa aam push xchg add dec out and int fdivp mov andl arpl scas cmpsb jns or cwtl aas jnp push mov pop icebp repz cmpsl cmc pop pop inc pop push scas xchg int3 jns je mov jbe push push push pop push daa jp insb mov out jno xor and std mov mov leave mov push repz scas xor (bad) icebp cmc aad xchg jns inc xor cmpsb jp pop push jle inc bound xchg ss xchg mov mov test cmc jbe out out mov daa xchg movsb daa fcoml add in popl aam (bad) loopne inc mulb dec push mov xlat inc js fisttpll jl or hlt jbe cmpsb push xor and sub (bad) rolb xchg je sub in std aad dec test in (bad) mov mul pop stc cmpsl hlt xlat xchg jae dec inc je mov push cmp jne cmp inc add xor dec (bad) pop cli idivl sbb pop add jl imul push out dec mov into ffreep inc pop pusha cmp cmp add pusha sub arpl xor dec sub mov (bad) xchg cmp (bad) popa in ja (bad) rcr addb push mov shlb push sahf push fadd pop cmp mov push sbb movsl and repz sub mov xor roll nop inc push sub xchg imul (bad) cld movsb xor stos (bad) xor sub ror leave test add cmp fisttpl mov insl pop sub add xor mov ja pop icebp movsb adc cmp cmc adc push sub pop pop jecxz push ficom (bad) lcall jo loop (bad) xor int3 aaa adcb stos aaa dec and jbe cwtl mov cli pop inc adc push clc add (bad) rcrl test push paddsw push stos sbb mov sbbl or xlat lock imul dec ss sbb sbb stos cli test mov ds or push lahf push out add adc data16 loope mov pop mov push loope push insb xor cwtl fsub inc and pushf jb pushf mov xchg push xor pop fcompl insl fidivr ret test popf cwtl xchg xlat lret pop dec (bad) adc clc scas mov lcall jno or bound fsubrs dec out iret shrl add jp add stc jl jno sbb shll or mov pushf (bad) sti mov sbb xchg mov repz sub (bad) stc in ret pop test dec neg incl xor push cmpsb inc jecxz and add call push in mov jecxz ret test mov xchg push jno dec int pop daa inc aad stos movsb xor push in pop test hlt mov add int3 inc and xor rolb mov pop imul std push cwtl fstpt ljmp xchg outsb std inc and pop and jmp cmp xchg sbb xor out mov add mov pop rclb add les push push sub and aaa and adc ffreep mov lds inc arpl cmp sbb negb jge in inc clc aam arpl cmpsl stc inc inc mov or push xchg and sbb cwtl mov mov sub mov stos sub cmp aam inc pop sti bound (bad) and push pusha push test cli stos rcrb faddp cli out lcall xchg test sub cmp xor addr16 arpl and fs pop outsb (bad) cmp outsb pop pop cmp stos test jbe outsl test mov add mov dec pop in push inc mov mov aas (bad) sub int3 pop jbe dec add cmp jg mov add inc sub shr sbb or inc dec and ja inc sbb je jecxz sarl xor jle cmp scas gs (bad) inc ja jns cmp dec dec push nop sbb mov mov (bad) lcall xor sbb sbb dec outsb jbe insl cmp mov or mov dec sub xor adc mov inc fcmovnu jb xchg lds jp aad scas push jnp (bad) test jnp mov dec sub xlat mov jo mov popf mov add leave call xchg lds shrb xor cmpsl outsl push imul test test (bad) imul inc imul cmp inc add outsl cmpsb xor aas popa stc das loopne or sub push mov inc data16 or push mov call and push into fistp mov ret aaa xor mov and pop popa push mov mov xchg mov sub outsb dec or jl scas test push scas loopne (bad) dec outsb lcall rclb sub fs xchg adc fcoms push jo push push stc scas lret pushf leave mov inc cmpsb in pop xor test adcl fild fsubl aad out cmc test pop mov push sbb pop mov (bad) rorl xchg xor xlat sahf push add or out std jmp fcomi jb bswap xor fisttpl subl jbe daa xor pop jo pop dec test sbb push lods js cmc add xchg jle adc fcmovne aam sbb push cmp inc lcall pop mov mov add out add xor int3 jo lret mov bound mov cmpsb sbb into sbb in in call lret and pop daa hlt cli cmpsb sub mov add lods dec outsb push mov les push call jae adc scas fcompl ffree pop shll in xchg mov cmpl mov test push adc and mov dec fidiv and add scas fwait jmp scas push pop jle mov pop jp mov cmp (bad) pop cwtl jae shrb out cmp imulb in xor sti inc les mov adc ret cmp dec or cmp and adc arpl add test fildll stos les cld fsubrs scas (bad) jecxz sub mov and pop mov dec loopne sub cmp aad aad std xchg aas mov in icebp mov xchg sub pop and mov or loop push lea daa jp ss inc sub xchg pop sti push xor popf loope push out ds jnp jo stc xchg pop fldcw (bad) sbb jae addr16 jnp test (bad) adc cld ret push cmp jno (bad) xor adcb (bad) out pop jmp jb aaa fstps dec sub mov adc push push fisttpl bound fnsave pop mov sahf jns mov pop hlt jno rclb or push iret mov and xchg mov imul adc loop lods pop (bad) lret stc push (bad) shrb int jo ds call (bad) adc cmp xchg mov aad push push dec stos mov jmp mov enter rclb xchg mov fwait and or sub cld xor inc dec int3 movsl lock mov sub dec dec push dec fdivrp lods out cli popa bound adc mov (bad) mov push xchg cmp or hlt imul push mov loop inc xor (bad) repnz mov hlt cmpsb (bad) cmp adc xor xchg push jae xlat cmp mov rcl lret push cmc out and fnstcw lock fist adc and pop mov mov dec jb ret mov jb daa or push inc mov roll xor mov xchg into fmull (bad) dec sub rol cld dec js jns fdivs mov (bad) fisub inc add mov push pop lcall or out out aas add aad cs xlat pop jmp pop fsubrl jmp or adc in fisubr xchg pop jg ficomp dec nop ss lods shl push push es pop fiaddl push pop add stos xchg mov adc xchg sbbb push sbb sbb cmpsb fisubr push nop out xchg nop js mov arpl push push mov fmull sahf xor sub jb pop mov (bad) dec jo divb inc sbb aaa (bad) out fstl xor or mov bound push push pop pusha or sub lcall gs sti inc movsl adc pop sbb popa je test test dec lcall insb mov sbb add test xchg repz add cld sbb add cmc mov ja cmp lods int jge pop cltd sub movsl scas add xor push mov and lahf xor pop adc aaa jns push xor popa push jno inc cmc aas (bad) mov and jne je imul mov inc jae aas lret insb pop stos push dec pop out shll in or push mov xchg dec inc loopne dec call in insb xor roll pop pushf pop (bad) je adc aam (bad) xchg adc mov inc loopne dec lret cmp repz xchg mov add insl inc mov movsb (bad) pushf (bad) mov in popf lret inc cmp cs mov push xor xor dec out and push outsb jg lret js cmp cs andl call xor jmp pop mov movsl xchg inc das jo imul cli pusha cmpl cs mov mov ja mov jle mov (bad) sarl into jo scas push mov mov mov or push mov out pop push jbe lret out xor mov xor sbb lods cltd outsl imul jns jnp sbb scas adcl xchg mov not les and jge add pop enter dec xchg push add push icebp push lahf pop mov and mov xchg movsb outsl xlat mov mov bound into sbb push je or cwtl shrl mov insl scas loopne dec scas and sbb notb xor mov xor jmp sub aas dec out scas icebp xchg sbb cmpsb getsec push sub adc mov mov jge decl xor inc arpl mulb sub xchg inc shrl pop jmp push inc aas lret xlat xlat pop pop stc test jno stc aaa lea punpcklbw repz inc fldenv lods sahf push xchg cmpl or and sbb xor push pop or je add dec cmc dec fs sub (bad) lods das mov jae sub ss mov inc sti pop and lods lcall outsb in aad es mov rcrb sbb cmp push mov in iret loop pop dec scas (bad) mov jnp iret fwait (bad) dec adc dec rolb xchg jle mov ret dec cli movsb inc mov push push push lcall inc xchg bound mov cltd lahf lock arpl rolb fnstenv fwait pusha loop enter jg (bad) inc insl push stos ja out sub adc dec mov fst mov lock ljmp xchg adc adc int xor sub stc mov loopne fcompl jbe lret fstp insl xor mov mov rol fnstsw out fidivl pop push xlat jle sbb xchg xchg xchg inc pop cmp mov jo add cmpsb in mov pop test (bad) in add mov push xor inc xchg (bad) lock shll ja shll push test (bad) data16 mov fnstenv dec dec jle push inc pop cmp sbb lcall popa pop pop jno test repz push andl lret in add jp ret mov imull mov xor inc mov cmc cmpsb lods pushw pusha jmp popf ret pop pop adc (bad) jge mov push and imul lahf mov add iret (bad) repz cltd xor pushf iret lea inc outsl mov call ret sub cli pop push dec mov enter rcrl fnstenv in mov rcrl (bad) cli in pop sub loope mov hlt sti enter popl bound mov scas adc lock xor sbb out or sbb dec inc mov cltd pop xor xchg ds add xor mov fisttp xchg test ds lds subl lods pushf gs mov xlat icebp add fcmovnb cmpsl push into xchg (bad) nop mov data16 inc mov cmpsl and sarb repz repz dec cmpsl jne mov pushf xchg lret test (bad) repz fwait push test call fstpl pop jae pop push fcmovbe loopne sub in ds ds mov stos dec pop adc pop pushf mov ds adc daa jge push sbb cmp push adc push xlat out sub arpl sahf in ret jl scas lcall xchg ds cmp cmpsl jecxz in ror add call adc loope es inc sbb leave sarl xchg xchg add and mov dec ljmp mov or mov lock repz repz jmp add mov scas xor dec shrl sbb push inc (bad) std fsts out xor lods arpl add cmc pop sbb (bad) repnz cld xor aam xchg loopne mov cmp or lea jae or adc cmp into repz in jno mov mov fwait push fs pop cltd push or dec jp push es cmp push sub jno out xchg mov mov mov iret loopne add popl lret pushf xor jae dec and pop dec je fdivl push jmp adc sbb dec pop sub jo sarb and xor call and pop out jb mov mov pop xchg pop popa int jnp or fdivrl fwait lods mov sbb jge cmpsb jno or jno std test push cmp and mov mov mov jbe push xor cltd jmp lret push das js cmp stos in mov or rcr clc lcall mov jnp push test ss or (bad) aas adc xchg xchg mov xchg pop pop subl dec testl push inc jo sub movsb dec xor mov icebp ds jle mov lods add lock (bad) int sub xchg xlat xchg pop insl mov lahf arpl pop andb or lcall (bad) mov and cmp mov mov loopne xchg (bad) out movsl fcmovne mov xor or mov nop xchg xchg adc inc fidivrl ret lcall pop cmp sbb aas enter fsubr sti jge int sahf mov and mov mov and ret pop daa fild mov movsb cmp loope mov fstps in in push (bad) ljmp les pop xchg pop xor mov adcl aad (bad) mov enter cmpl arpl cmp or sbb gs stos pop mov std std xor cmp push and add mov adc cmp push cmp mov add fnstenv push pop cmpl into insb shll adc adc dec cmp mov or pop (bad) cmpsl add sbb mov xchg and icebp and cmp push mov xchg xchg lret aam (bad) jge inc pop push cmp js dec hlt out insb cld daa in or lock mov popf pop sbb xchg mov sti cmp xchg stos push mov sbb jns mov fisubr in punpcklwd xchg lods lahf pushf mov jns out pop data16 dec mov idivb cli (bad) bnd adc nop rcrl arpl inc jno pop jbe mov jnp das jns hlt clc cwtl insl stc push add mov ss inc in or pop push xchg call inc aam stc repz js or push call sbb and xchg aas repz popa hlt mov mov (bad) push or mov and in xchg sub sbb adc lahf lea fldl test inc cmpsl cmp xchg xchg jb (bad) sub icebp push loop lcall (bad) pop loop stos imul cmp outsl jp push lock and stc mov dec (bad) jo push movsb xor or mov mov mov neg push pop dec jmp pop or lcall pushf (bad) leave add xchg jno lret in leave jmp adc into sbb inc mov lcall adc pop pop mov xchg testl push jle add dec adc in xor jae push js sbb pop lods xchg inc and cmp xor dec stc into xor sbb push xchg pusha dec inc scas jbe les xor lcall inc lret jb idivl ss inc aas mov sub push in inc push mov dec rcll lock imul int cltd test inc pushf pop pop test pop movsl sbb xchg fildl jb mov les cmp movsb xchg pop movsb dec (bad) bswap sarl enter dec out or dec lods (bad) xor imull jmp insl mov shrd insb aam out cmpsb adc adc push sti inc dec lret fmull int3 fistl sub sub es cmp popf xor xchg lods stc mov pop test jbe aam pop pop enter dec lods fistp mov xlat jecxz sbb cmp pop adc (bad) mov imul or jmp cmp dec cmpsl gs (bad) lret push inc int3 adc push in dec dec mov xor sub fdivl sahf pop in inc bound hlt pop pop cwtl jp cltd nop ljmp inc (bad) (bad) jne,pn ljmp clc push push and popa push pushf xlat (bad) test mov aam js clc jnp,pt or imulb fadds inc mov adc sbbb sbb sti ror mov test jp dec cmp scas cli pushf mov leave jb push sub ja add mov ror push inc and (bad) jbe mov or cs nop adc cltd leave test add mov data16 and add repz pop call xchg repz lods cmpsb sub push fwait adc cmpsb sbb arpl pop sub add push cmp in add scas ss pop xchg inc fsubrl cwtl cld je popa cmpsl mov js and jp leave jp pusha roll and ljmp clc push imul sub mov ficoml sub sub mov fistpl (bad) push xchg call lret out scas push jp jno insl ss xor sub data16 (bad) fs cmc ss stos (bad) jb adc rorb je (bad) fdivrl push aam movsb out pop cmp cmp pop je xor je xchg mov repnz je pop dec loop and in clc loopne cmpsb mov lods mov xchg mov outsl sti cli (bad) xor (bad) faddp mov inc bound xor pop aad jbe daa inc sbb mov aaa jo push sarl leave pop pop mov inc mov lock aaa cmpsb lods jb ss cmp movsl jge cli sub popa repnz repnz scas popf xchg or cltd shll ljmp scas push stc mov (bad) ret (bad) fistpll mov iret insb or (bad) xor pushaw (bad) adc pop int lret adc sub push dec mov xchg hlt jns jmp in pop test imul je adc xor call aad mov sbb loope cmc mov mov adc inc inc sbb sub lods ror jl pop pop pop dec scas enter adc adc jmp fbld ja pop mov adc jo fmul insl push test rep (bad) scas jp pop or pop pop into sbb mov sbb cwtl dec loopne int3 sub adc jbe test clc mov test lret lret daa fmulp sbb mov test icebp ljmp aas aaa rcr xor (bad) cmpsl (bad) popf dec popa (bad) dec sbb cmp rcrb ljmp lahf test (bad) xchg insl rclb cmpsl push int3 and mov dec xor xchg pop jbe cs mov nop mov sub mov ja mov shlb xor lahf sbb sbb out nop (bad) sar dec mov push sbb mov inc jae out push adc sub pop pop inc fisttpll inc push scas daa jne mov xor (bad) jbe jbe mov into std sub cmp mov insb fildl xchg sbb sub insw orl sbb and idivb add lret adc cli xor fnstcw clc daa fiaddl in adc add das mov dec dec je xor mov xchg dec pushl test arpl mov imul fnstenv add push pop call cmc jno xchg dec mov adc xchg xchg insl mov (bad) aaa hlt add leave adc and push mov mov mov sbb loop add fbld addr16 jne adc mov in cmp push test sub clc jns (bad) mov outsb dec sarb push outsb mov push (bad) test push fcoml dec popf sbb push out jg (bad) lea dec xchg dec dec sub inc inc jne (bad) cli addr16 std mov jo xorl outsb decb test loopne push inc cmp push cvtps2pd xchg xlat add out mov test movsl fcomi mov push sbb movsl scas xor xor shlb xor xchg sub mov lret sahf std push jnp cmp and (bad) js sti in jns xor bound push adc and xor jle or sbb scas jle out in fiaddl nop dec mov mov (bad) nop and pop popf arpl inc rcll jge mov popf imul aas into mov sub mov mov mov daa fnstcw pusha push pop push movsb sbb nop inc dec sub nop in movsl lds inc cmp and icebp or jno mov mov push dec xor arpl pop sbb pushf fcomip add cmp loope aas in (bad) gs jb jb xchg xchg mov lods push push scas mov push cs popa lods enter jl pop clc cwtl pop jb cltd cmpsl mov sub mov adc push xchg jnp repz inc and mov cmp jp clc fbstp mov adc test mov push xor imul inc and cmc dec mov int xchg test rcrl pushf mov fcompl push sbb lds cmpsb jnp pop ret sub jl push sti arpl cmp adc stc int3 sub fucomip and pop push pop das imul rcll aad dec mov dec sbb ljmp xor enter into cmpsb dec ret shr int rcrb mov fadds mov mov testl insl call je adc mov test (bad) outsl popa push clc dec dec inc xor stos pop andl lahf fistpll mov xor inc cmp insb (bad) jno mov movsb jo cmpsb scas jb es pop movsl and pop repnz lds xchg clc nop (bad) pop scas orb cmc sbb lods pop xor lea mov sbb or and std or mov ret and mov mov cmp mov mov sub jb lcall (bad) add pop sahf aad sbb cmp (bad) outsl pop ljmp mov mov in fimull (bad) push movsl hlt dec jb xchg sti rclb and and mov mov sub or lret fadds pop add push ljmp or out repz dec cwtl mov rorl bound sti push and and outsb outsl mov imulb cmp mov push jge (bad) not xchg ret or fistpl inc sbb stos push mov lahf out cmp fadds cmpl mov rclb cmpl pop mov push sub mov rcll sbb cmp subb lods fld divb fistl aaa push sbb jnp jl pop mov dec out out test sbb inc ds pop sbb nop mov lret add mov add or xor cmp fcom repz push pop jo cmp outsl add loope mov push lods orl sub repz (bad) call dec (bad) jne or pop subb xor xor and das pop xor xlat inc fmull (bad) xchg test cmc adc or dec repnz (bad) dec adc test jge xchg inc adc lds mov push ficoml jnp fs inc dec test int push mov rcrb add lea mov add pop jnp sub xor push xor add test aaa jl jge test sub shrl jns and xchg push iret test mov and aas test scas mov sbb hlt ret lods or push and mov fisubl sub dec iret pop push mov (bad) std pushf aas (bad) scas lods (bad) aaa mov jnp es es lret pop push test mov je mov add or sti scas jns test dec ja int3 and aas xor push pusha sti iret outsb out movsb into ja rclb and daa enter ret mov in adc lret cmp aam stos cwtl stos cli jo mov push cmp pextrw mov mov jecxz icebp cltd jb jl pop das test in mov xor xlat (bad) std jecxz outsb xchg fs mov jno das popf jp or and push dec push jne inc or pop and sub inc jge mov adc lcall outsb sub add inc lcall mov dec pop hlt adc mov sub ror add rclb in pop mov xlat cmp mov in lock mov bound icebp mov push int3 adc dec in shlb fmull mov icebp or cli gs rcll cmpsl (bad) cwtl add mov imul test popa repz mov rclb mov stc (bad) xchg in or mov pop ds jns mov xlat ss inc inc fwait push jp lcall fucomp cld scas mov xlat xor and push iret (bad) push mov (bad) inc shrl fadds (bad) push (bad) ret ja dec jg sbb lcall sbb cmp repnz shl lret or jl adc adc (bad) mov lcall sbb loop ret arpl jl dec mov add insb scas scas rcll ja fwait pop xor adc dec jno,pn adc push bnd (bad) adc out cli xchg cmp pop hlt insb push or rcr mov sbb fistpl insb xchg (bad) jae mov inc fldcw and mov sub mov jle xor stos xor out test nop mov (bad) mov xlat xor jae push ficompl in cltd xchg dec call sub push sub jne dec mov and aad test popf out or jne daa lock mov (bad) xor and aaa sub inc ret cmp dec dec xchg jns das jmp clc std mov bound mov out insl pop mov or dec sub lret orl hlt lret pmullw dec pusha (bad) push ljmp and loopne pop lods lea mov fsubl jecxz sbb outsl jecxz mov add bnd jmp loope add repnz je mov xor mov int3 jecxz xor cmpsl dec sub jg (bad) enter out icebp aas clc loop testl sbb xor fidiv cmp mov add mov pop adc test bound out sub dec insl (bad) pop movsb jnp lret out jno push fdivr out mull or inc imul sub dec repz cli mov ret or movsb inc or leave jge rorl adc pusha mov mov push xlat mov fsubl xchg test lods dec sbb insl (bad) and push decb mov test mov and xor and or out adc and jle xor sbb ficoml hlt sub mov dec mov sub pop jbe mov test dec add or xor xchg push cmpsb sbb es fstl mov test lret inc orl sahf mov or lods cmp jecxz dec jns scas test test cmpsl jl stc ljmp lret mov mov test dec xlat or mov cwtl mov push stc stos pop dec out jns pushf inc sbb mov subl mov inc pop xchg out fldt loop push sub shlb stos xor adc xchg xchg xchg or inc icebp pop fs cld dec push jnp cmpsb ss push out addr16 mov lcall sbb mov jno sub sub dec mov sub outsb bound loop push test inc jp mov mov jnp inc push (bad) loope jnp call cmp mov xor mov pop push (bad) pop cmc or daa mov pop aam jbe xchg jne xchg jmp fildl mov es sarb mov aam and pop add mov stos or cmp pop pop adc nop mov jmp mov pop cwtl lret cltd lcall cmp insl mov int3 xchg in mov out xchg mov loopne jbe int3 pop cmpsl or inc test and movb lea movsb (bad) fisttp pop inc mov mov cmp call les adc or mov shlb fsts inc mov adc push fwait movsl nop pop es dec mov push nop xor xor dec out adc lcall mov insl (bad) test or mov xor test jecxz cmp (bad) or jp dec mov test push xor pop jae (bad) xor jns cmp repz cmp daa jno cmpsb outsl int3 cltd sub out inc push lock cmpsl add dec mov add mov stc loop daa sti adc repnz mov add outsl mov and jnp je enter cmp push cltd in cmp popa cld and xchg cli sub mov lock cmp mov bnd push outsl xchg rcl mov jo mov mov aad sbb add aam (bad) sarb std jns test dec lahf sbb pop daa into bound mov dec nop push adc stc nop push pop js outsl imul jo iret aaa repnz je mov in push xor cs mov outsl push repz inc mov addr16 jle ljmp aas mov mov xchg testl xchg push loope or dec bound jecxz dec pop push xor jnp lahf loopne xor daa insl xlat and in test (bad) xor mov sub xlat xor outsl outsb aam pop movnti push mov aas fisttp loope je insb ret pop fld xchg pop xchg iret sbb xchg push cmp roll mov out aam or sbb push xchg imull test xchg mov adc aaa cmp jp outsb pop (bad) cmpsb pop lock adc pop out mov shrl shrl movsl jo sqrtps lret scas xchg or shl das inc inc (bad) dec mov fwait jno dec and ror lea push pop aad aad outsb inc pop lds sub mov mov push sbb scas das popa fwait and jo sti cmp imul mov pop add daa subl jl std test mov push push mov xchg ret add cs out pop iret dec xchg test push or pop xchg (bad) imul adc add stc in dec (bad) scas add sub dec or shl scas ret sbb xor out pushf cld ljmp idivb imul inc andl mov (bad) out addl rcl lret adc aas xor sbb mov mov andl movsl lock cmpl movsl dec lds and outsl ret add fcmovbe iret pop (bad) imul outsl sub jns out inc xchg mov test and stc dec cmp add push inc int3 es mov mov loop daa das push test add mov movsb pop mov cmp loope mov outsl pop xchg fwait jmp sahf mov pop pop inc push popa out stc sub pushf cmp push pop pop pop dec sbb or test cmp pushf lea enter cs or jmp scas pop cwtl jg decb not sub xorb jne dec dec cmp mov (bad) sahf loope cmp test outsb pop ljmp (bad) lahf adc push add pop lock mov xchg push adc adc inc inc add mov jecxz in ror push test stos lods cmc or and push lret jb and push and cwtl sub cmpsl sub or pusha push sarb aam and hlt in mov mov mov add push ret or dec jg cmp adc imul pop xlat adc jle cmp inc xchg dec cmpsl adc (bad) inc in mov ss scas adc mov fcom pop hlt push (bad) pushf cmc or (bad) js sub jmp cli xchg inc xchg sahf test lahf mov push std sbb sbb jnp cld mov fcmovbe push cmp lea addr16 and shl stos pop pop or addr16 dec jns jg sub inc jp sbb cmp inc inc dec rep jnp and mov mov cmp add ret (bad) mov (bad) mov popl in lods and mov popa add dec push dec dec pop push xchg adc bound in pop mov scas dec imull scas icebp addr16 cmpsl xor dec sahf jns sub mov andb or (bad) lret sub mov mov mov adc adc cmp mov cltd and dec insl and mov gs xchg xchg inc mov cmp pop xor imul addr16 push pop (bad) mov xor (bad) rcll scas cmp inc sbb jp inc xchg push mov dec adc xchg mov mov ror pop mov out xchg xor push mov inc or ret cwtl bnd inc dec jl iret and sbb and pop lahf adc and (bad) pop rcrb xor dec cmp ficoml or loop add or sbbl push push xchg sbb adc jae ja push inc cmp rclb sub das xor push cmp ja xchg mov add outsb push in sub add or les fisubr call in jmp setbe dec dec mov (bad) out sbb dec push test lods shlb xchg in sbb inc adc inc cmp enter sbb xchg (bad) cmc sub xorb sti push mov popa push or outsb outsl mov icebp out pop add jno push mov adc inc sbb xlat outsl imul xchg or add jg repnz and jp (bad) push ja jns mov pop jge aad jns lods push lret or imul adc and pop rcll dec mov into sub loop insl mov jl jnp sbb sub adc (bad) xor mov adc inc dec push subb enter aam mov jmp faddl repnz sub cmc arpl pop sbb inc pcmpeqw cmp in xchg and pop inc test xchg cmc cld xchg xchg mov ret scas arpl or fwait xor mov popf xor arpl mov cmp jecxz,pn ss insb aaa icebp shrl fwait or js adc (bad) cwtl or (bad) leave xlat test fstl push shr div fmull movsb icebp jge aam scas push aaa inc insb insb xchg mov aaa and adc push test jmp mov cmp fstp mov insl inc sbb inc pusha std jl pop or nop rcrl xor jb fbld sub subl adc jnp mov cmpsb and mov (bad) pop jge add dec add aas cmp sbb insl pusha shrl inc dec adc aas loopne jno and decl (bad) jae sti icebp xor sbb jno mov js mov popa mov pushf and push scas xchg mov jge (bad) jae sbb add shlb xorb xchg mov sbb dec sub out cmpl inc (bad) jp jg mov sbb sbb nop lock ficom mov mov sarl xor mov test mov cmpl dec jae dec loope inc xor sahf aaa jl mov dec xchg loop cmp xchg nop or ljmp insl stc stos test mov mov in cli adc mov xor loop clc cltd cli and push jnp sbb popa sbb xchg fdivp and or (bad) lock sbb xchg and inc lret ret xor lods mov xchg lea mov pusha push mov les sub andl in xchg inc (bad) in inc shll iret jbe aam or cli insb adc xchg jmp add fisubl fwait out fild fsts cltd cs jne shlb jbe fnstenv testl mov ret jo int js ffreep stc aas adc or mov xchg jmp push mov (bad) insl sub sbb push subl cmpsl push (bad) mov xchg push ds mov (bad) xor pop stos cmp mov rolb fstl fs jo test mov xchg inc and test cmp push xchg std pop cmpsl and fcompl aad push cmp cltd push xor mov in loopne mov xchg push push sub jno loopne push repz (bad) push mov and pop push lcall xor jb lcall add ja dec jl xor rcrl mov fist ret insb xchg aaa xchg ret ds dec popa cwtl push jle xchg cwtl pop sbb (bad) nop test push push push push into sub rcll jl push inc or fisttpl ljmp dec mov xchg xor lcall mov sbb jl and mov mov mov (bad) pop subl sub ds ljmp jae mov add (bad) jb lea notl stos clc movl add jns pop movsb call push in addl jns ret lods mov outsb mov aad aas insl repnz clc dec and (bad) push mov out jmp sub or sub seta adc xchg out movsb push fldenv mov fs and outsb inc fnsave mov out jecxz sub xor mov and or jmp or inc lcall scas sbb sub xlat or mov int lock mov push mov into and push sbb lock cmp fbld insl out dec sbb inc iret and not cwtl dec cmp out stc mov push into cld in or loopne test insb inc inc dec inc aas or add mov sub sub shl sti ret cmp xor inc xor (bad) shlb or cmp iret fildl frstor mov xor push cld imul (bad) xlat mov mov pop bound sub cmp outsb mov fwait and daa fcompp ss shlb dec sbb xor and fstl sbb js loope,pn push movsb sub mov aad pop mov lret jmp pop sub mov jno xlat lock pusha pop mov ret int mov inc call mull inc dec pop aas incb mov and mov pusha mov mov addr16 sti pushf pop adc cli sti or sahf call imul neg js pushf sahf insl dec xchg stc mov in inc push scas mov nop push xor jmp push xchg js jno pop pop lods adc div xacquire subl sbb pop jns sub outsl mov mov xchg lods jmp push fisttpl icebp hlt sub mov jp pop xchg push mov fstl in (bad) add (bad) lret out aaa xchg insb cli mov sbb jno aas icebp sub dec dec in mov pushf pushf ret fildl rep jmp adc mov jnp ret pop ret mov cmc jno cmp inc mov push xor fldt daa pop popa add popa inc cmp xchg mov (bad) adc (bad) cmp decl std and and dec sub mov pushf xchg ficom xchg lods (bad) daa lret outsb pop icebp fucom popf hlt clc mov clc fnsave fyl2x in aas inc (bad) xor data16 sbb shlb xorb push popa fdivs cwtl cld int3 mov cmp fstpt or stos stos pop jnp or xchg jp (bad) mulb xchg jbe ret inc mov loopne adc je jecxz inc outsl xchg jae enter inc inc xchg dec fwait lods xchg (bad) out test std fdivrl push add cmp nop or repz jecxz fimul or scas dec pop push inc xor jmp stos add addr16 fcomps inc lahf das adc fistl and test icebp xchg push xor in dec sarb jle inc cld imul mov mov lods push xchg jbe in sub jge mov leave inc mov fcomps sub pop in sub xchg sbb dec sahf das inc xchg repz jp jb add loop cmc inc in sbb fcmovne xor andb loop xor pop sbb arpl inc dec mov jecxz adc push xchg mov outsl int fstps mov cmc dec or repnz sar (bad) pop enter in cmp jge aad add and shr lock mov lea repz xchg test push les xchg cltd mov push pop scas lock mov outsb and push (bad) mov dec pop mov push lcall pop dec jb jecxz pop push xorl sar cli inc push mov or sbb xchg mov gs pop call fnstcw sub mov (bad) mov mov dec push pop div fs xchg sub into fs sbb in out cmpsb xchg out pusha pop fdivs mov rorb or ret or mov loope pushf stc ljmp dec je dec stos jecxz sti dec xor cld cmp fs (bad) cmpsl dec insb stos cmpsl mov push mov loope movsl or xchg xor xor lock mov rorb icebp xlat pop dec push outsb leave pop jp (bad) sub rcll mov add sti sbb sub mov jb pop pop cmp pop cwtl ret sub mov andl test fisubr jge bound out xchg xchg test jne push fisubrl mov loope mov cltd xor and aam es or scas aad je in xor xchg fldl xchg ret in mov leave (bad) jbe pushf xor loop inc ret cltd mov js (bad) nop (bad) iret sar xlat or gs ja not out lea pop lea pop fcomip lds xchg (bad) pop sahf and sahf push imul addr16 test mov inc gs jp jge lods mov pop jo pop (bad) push adc jne adc insl aas adc and rcrl pop lods jmp in in ret xlat cltd enter cmp repz aas (bad) push mov pop arpl ds hlt das out test out sahf daa sub pusha dec lea pop jge jbe sub sub dec loope adc sbb std push push rorl dec inc (bad) jle rol (bad) cmp enter inc xchg adc stc jl out adc pop pop lret data16 push sub xor xbegin arpl (bad) mov scas push leave movl ss inc stc ret pop (bad) stos pop pop mov or aaa xor pop xor mov pop repz mov (bad) adcb push push ret pop lcall push fsub sub shr mov inc popf push add enter enter sahf imul popf in repnz or xor rorb xlat pop popf arpl mov (bad) ljmp jl ret sub mov sub dec adc lock fs mov mov (bad) insl sub movsl xchg jle push mov inc xor mov leave xor test push cwtl inc enter test jg ss frstor and xchg gs ds and aas insb call test scas das mov or push stos dec mov test cld mov xchg movsb mov add and fnsave pop lea je test jb les push cli outsb loop arpl sbb xorb mov cmp xchg clc jge pusha sahf (bad) adc and int mov cmp sub jmp cmp dec dec pop sbb popf or ja imulb cmpsl mov mov mov stos push jl pop mov mov fiaddl sahf clc pusha test mul lock lock jecxz pop mov decl and xor xchg cmp pop cmc cwtl mov push lcall cmp cmp stos addr16 pop sub (bad) xchg js lods lods xor push in dec je dec xchg inc iret push sbb adc sub xor fsts fsubrs cmc gs jnp cmp insb jl in leave scas jl repz shll sbb sbb pop shrl mov pop mov add (bad) push adc jno mov iret ret cli adc out clc fist ret add add in lahf in xchg pop mov pop sahf test push out stos or addr16 mov xor cmpsb icebp (bad) mov sub stos stc les push xor (bad) (bad) andl in jg xor in mov mov inc cmp xlat mov movsb mov adc xor sarl nop mov sbb jnp mov dec pop inc jle xchg and loope cmp scas test imul jnp mov iret lods and sub mov test dec into jg push push repz cmp sub sahf ss arpl iret aas inc push xchg sub and mov fnstcw mov pushf inc lret (bad) mov orl mov inc scas mov jmp (bad) aad loopne iret es icebp or iret in push push or aaa xlat sbb fwait sarl outsl inc cmpsl add popf cltd sub mov stos std push rcrb das jns fldenv cli iret es lcall or cs cmp and (bad) int xchg shll xor in lcall add insb ds add and lahf or clc lea in xchg pop jmp sarw lods or push cli out sub and jb (bad) dec inc mov (bad) xor push dec fisttp lock enter inc fmuls outsb (bad) ss or dec mov mov hlt inc je ja dec js das cltd jge ja bnd and lea clc mov int3 push insb cmp lcall loope add rclb imull sub dec mov cld and mov dec dec or add jmp jno xchg dec xor loopne gs rcrl xchg sbb xor (bad) negb pop xor xlat push pop shl clc push daa in push push xchg dec xor xchg push loop inc pop std or inc cwtl mov jle cli int3 xor lret daa mov mov push add outsl stos int xchg cmp xchg adc dec std or and leave pop cmp push (bad) out mov fs xlat in test pusha xor push sbb push mov fcoms stos roll mov jo aam or insl push cmc add iret hlt ds out mov movsb xchg or push mov aam iret push lahf mov cmp pop or mov insb stos add (bad) dec pop int dec orl pop adc pop cltd addr16 movsb push xchg scas lock fisttpl js add xor sub lret adc add imul jl movsl lahf fidivl mov jns mov lods pop sub (bad) cmc repz or pushf pushf jg stos aaa and jno add pop xor xlat cmp insb inc shll repnz shrb cltd mov cmp cwtl repz hlt jo in xor pop loop sub clc arpl fsts push ss out mov dec cmp arpl jae push lods repnz or xor xlat daa popf ja xchg insb jo rclb arpl rcll or je insb push xchg sub mov xchg add pop in pop aas outsl ret pop mov push stc jnp xchg mov add dec and jo mov mov test mov pop add loopne add lret pop push scas sbb push lret and jp inc int dec push lret pop sub lock shl into sub fdivrl movzbl ret sub lcall sbb mov xchg pop and sub inc out xchg lds inc movsb addl stos jecxz in xchg inc xchg nop inc movsl xchg cmp push rorb mov mov imul push insb sbb cmp movsl fcmovne dec pop std inc cmc je jge out mov or adc jp shll test xchg cmpl add push mov jle pop push or cmp movsb pop lret mov adc pop aad mov inc cmpsb jo mov loopne in push xchg repnz in add cmpsb in (bad) mov int and stos mov pop gs mov icebp ds and data16 movsb repz push iret sub xor imul cmp in fisttpll inc pop ret insb jge sysexit and xor popf stos shr repz fs imull sbbl cmpsl pop rclb int push jae lock adc cmp (bad) ds or push imul loopne push xchg mov add jecxz popa pop in (bad) jb sub mov dec in push mov adc pushf cs or add mov dec fsts xchg fsubs or dec and mov ret jl xchg arpl and add pop push xor outsb dec push in outsl ljmp lods mov mov rclb stos adc jne pop repnz push jg les fdivrs push (bad) jae (bad) jg addr16 shrb sbb sub or push xor lret mov mov cs dec arpl and mov mov fxch or push les pop dec push push call pop push xchg fcmovu lods pop pop xchg sub mov mov cmpsl mov es push dec lock int nop pop out imul mov push mov mov das push shlb loopne (bad) lock or mov fisubl dec ss pop inc mov sbb dec add scas icebp arpl (bad) (bad) xor xor cmpsl adc pop xor fbld ja or jns lret add fadd sub (bad) lods jnp jle into cmpsl mov xchg sbb mov dec rclb adc jge arpl push xchg (bad) in orl in lcall mov or fsubrs pushf mov xor dec mov js mov and mov dec aam imul ja outsb push inc pop jae imul imul fsubrl loope push out pop clc pop mov int shlb fnstenv adc stc (bad) sbb fist scas lods xor (bad) int ret xor dec and fsubr lds out jno sub xchg cmp and sbb dec mov (bad) aam inc dec inc imul movsb add adcl cld stos ret rorb jp sub xorl and aaa xor cli nop sbb dec pop cli pop outsl sub rclb pop adc je or stc lock push mov jne or nop mov xor or inc hlt sbb mov jge mov sub pushw cs cmc int das stos push dec pop and cmpsb cld push xor inc xchg push bound inc mov dec add pushf fsubrl pop jecxz mov jo imulb or cmpsb add pop mov ret inc ljmp out dec loope shrl nop jmp daa std mov xchg xchg push (bad) jmp xchg dec xchg pop daa nopl xchg pop addl (bad) out test dec out shl xchg mov mov iret jne outsb mov or push mov mov mov cmc jb or into pop subl adc jnp popf jns or mov pop dec fnstsw dec cltd lods inc mov inc cwtl enter or jnp scas push mov lods xchg lock mov (bad) loope adc lods addl mov xchg mov notl sarl inc dec fs stos mov adc cltd data16 daa pop test test adc cld movsl mov jo (bad) dec or scas jp fwait sti test dec std (bad) rorl cmp sub cld dec add outsb pop mov cwtl sub or add dec pushf push push (bad) jo mulb cmpsb adc push dec scas daa (bad) or jne mov jo iret sti push inc push aas (bad) cltd test sbb pop jl inc std adc push mov mov loopne dec jbe gs jecxz sbb or xorb sub insl pop repz xchg aas dec pushf adc or dec mov jb sub pusha clc repnz inc idiv mov push jg push xchg fstl sti add jnp jbe pop adc push cmovno xor cmpsl aam cmp icebp jle imull inc imul (bad) mov adc (bad) jp xchg pop pop ja or punpckhdq inc rcrl xchg mov fwait cs mov data16 jne ds pop ja shl jmp subl mov sub notl adc and pop sbb or mov loopne mov loope jle out add pop inc cmp pop outsl xor mov imul add pop es (bad) addr16 fucom inc cmpsl xchg into or lahf ds stc mov mov dec sub les imul insl (bad) cmp cltd js das or mov xor cmp ret jecxz ficompl xchg mov dec aam cmovo inc lock repnz lret mov pop sbb fsubl icebp pusha xchg jge fmull inc sub and js (bad) jmp pop jo insb mov mov shrb je movsb mov imul lds int3 stos (bad) jb pop push stc vsubpd xchg xchg xor aas add pop xlat jp dec and ficom xor ret inc push jg cmpsl dec xor out pop lods sbb fwait cmpsb mov inc into xchg xchg cmp sbb mov icebp jo inc mov sarb adc test (bad) mov std addr16 popf jl ret xchg cmpsb sbb lock stos cmp fistpll xor push push mov dec jmp (bad) cli ret fucomi leave shl les mov bound xlat roll stos xor arpl jb adc pushf stos mov andb adc enter add ja inc add daa mov inc cli fistpl jnp clc xor or stos loop shl jmp fcomi loopne outsb sub das mov xor lret dec xchg jnp push lahf in aas and lds xchg sub gs jns sub push xchg (bad) imul (bad) aaa arpl push mov sbb (bad) imulb jae dec in bound jo lods cmp mov add inc ds push mov push (bad) nop mov or ds sub test shrl xchg out hlt push sub jecxz fstps fnop mov insl xor loope mull push jecxz or push cmpsl mov cmp cltd frstor and movsl mov xchg add dec adc ud1 push das addr16 (bad) and movsl sbb fs mov mov add addl jg push icebp sar aas push mov dec sub mov pushf sub mov test push ficompl jl out xchg xchg cmc cmp in popf aaa push stos lds pop cmp cmp sbb lds iret mov sub mov inc int3 icebp dec stos mull xor es sub in das pop lods adc jmp cwtl jno cmp rcll hlt icebp sti cltd arpl mov test pop fs adc cmp cmp aas stc in (bad) jmp jae cs stos rcrb xor rorb mov into stc pushf sti jno pop cld addr16 flds xabort or es sub pop mov xor push mov outsl sub mov dec loope andl clc dec mov pusha decb add cmp int3 xlat or xchg loopne inc mov rcrl sti adc xchg adc mov dec push daa test jb jns ret cmp rol sub stc mov dec sbb inc into pushf mov push and jle sbb jp imul mov jge lret jecxz adc daa adc cmpsl jo es push and pop mov adc mov aaa dec xchg icebp inc jne lahf push nop xchg mov fistp lahf pop push push pop arpl loopne movzbl mov sbb jns or lahf fs cli cltd (bad) sub (bad) fisttpll lret ret push les inc push arpl lea mov test sub movsl or sbb imul mov inc rcl xchg (bad) pop scas xor movsb sbb rcrl insb mov adc loopne xchg rorb stc pusha cmpsb rol adc mov addr16 pop jp sahf fs inc (bad) push sti inc daa mov sub int dec jnp in insb pop (bad) in mov sbb inc pop sbb gs sti cmp push (bad) addr16 lods cmp pop fistp arpl rol cwtl mov sahf aas inc ss das addl mov enter clc push xorl xchg mov test rorl imul rclb out push data16 and cltd mov mov and push push sbb mov dec xchg popf fs stc repz xchg adc in je jmp mov or (bad) sbb sbb (bad) xor ss sbb inc cmp mov mov js mov (bad) jp rcl jae (bad) adc loope aas cmp and dec dec in and imul daa sub repnz pop jb enter mov ret fbstp pop inc pop sti cmp xchg orb and inc int xor aam es adc jge mov stos scas enter mov pusha aad pop xchg arpl rolb cmc cltd test pop and mov (bad) out dec dec xor jae mov pusha cmpsb int3 pop and cmp cmp adc cmp pop cltd (bad) das sbb inc aad jbe shll jnp add push pop aad aam or mov adc jbe sub add sbb mov push cmpsl push xchg (bad) cmp popf pusha sub push stos jmp cmc fildl pushf js xchg jae push jecxz hlt outsl cltd cmc xchg xchg xchg sub cli lahf cmpl negb fcmovnb imul shrd cmp add add mov out xchg push sub loope xchg icebp mov pop leave test (bad) mov stc or ss cmp aam jmp outsl std inc notb mov out jae insb cmpsl (bad) sbb jmp mov push (bad) mov andl push adc in dec and in adc jae add jge decb mov movups cmpsl fildl xor sbb insl jns in xchg mov push (bad) ljmp or pop test and sbb mov stos inc dec mov or inc pop sub fsubrl data16 stc mov cld add mov mov pop add fcomps addr16 sub cmpsb add xchg cmpsl adc js rorl jbe add push xchg adc imul outsb sub pushf int3 imul aas add aad cs adc sbb fnstenv sbb cmp clc ret push or push bound lods in inc xlat cld pop mov out lea dec xchg mov and mov jge pop ja (bad) sub jns pushf adcb pusha xchg inc out sbb and jno or inc shrb pushf enter mov cmpsb out outsl mov pop in loopne cld push fcmovb jae mov mov out (bad) in mov cmp mov add pop and insl jns mov (bad) es aam sbb sbb inc shl cmc sbb pop and xor orl pop mov daa adc std mov sub xchg sub mov pop ja into sbb mov into add mov cmpsl or lock js xchg les push xchg xchg ds inc (bad) fistpll adc lods scas js shlb (bad) jmp push mov and mov push jle jmp mov in fmuls xchg call jno mov test call nop fldl mov ss lea std lcall sbb (bad) pop rep outsb mov xor push fcomps (bad) gs inc xor outsl rcr movsl int3 cli pop mov sub dec ljmp jne sub sub inc sbb push add sbb iret aad pop and push xchg ds adc cmp cmp and ret cli inc loopne mov cltd rolb lahf sub mov xchg shrl push fs xor or decb repz cmpsl sub xchg negl les xchg and mov add mulb sub mov push pusha inc cmovno out lea xchg and test cmp jo mov ret push cld loop xchg push insl enter je or stos je fisubrl subl sub out fnsave ss scas hlt push dec iret fidiv gs lret icebp push xchg dec mov sarl stc push (bad) test xchg rorb xchg add jo push jg ss jnp popf or mov aad sub fdivrl cmp pop pusha sbb or sbbl ficom cli scas arpl pop jne jae add scas nop xchg addr16 bound fstps push sarl (bad) mov es mov push and cmpsl fimul and nop int3 xor int inc cld rcll (bad) in push out pop shl dec and xchg and mov xchg (bad) jo loope jmp mov div jle push ja cmp jp xchg outsl enter add nop and cwtl shll ret mov pop xor pop lcall jo cmp xor xor xchg dec mov test or xchg aam pop dec arpl adc std lahf xor out test imul xor mov mov xchg lcall push lcall push je pop push mov push cmp inc inc add in gs mov push test jne dec add add std (bad) pop int3 je mov push nop add adc fdivl and lods sbb pop mov sbb sub bound mov push pop cmp das cmpsb sbb jae les mov fdivrl or xchg jbe fwait xor mov ljmp lret (bad) pop fmuls (bad) mov push pop cmp inc or xchg int3 adc enter jb xor mov imull jmp jmp mov (bad) xchg xchg inc pop insl sbb jb test push outsb mov rcrb inc pop fbld add (bad) loopne add (bad) or outsl and sub rolb cmpsb xchg cmpsb mov (bad) push jmp shlb xchg rcrl imul mov scas cmp sub xchg cmp (bad) mov sbb jo pop std je (bad) aad cmp repz push push mov out (bad) mov cmp pop or lcall adc and or xchg push addb jmp dec xor xchg push add mov sub cmp pop mov (bad) outsl stc inc sub fs or mov mov or lods lcall out jne testb add imull js pop movsl (bad) inc rcr jb add cmp fs pop mov lret inc cmpsl jecxz (bad) in lret dec hlt nop into sar pop mov es xchg adc movsb into xchg cmp mov rclb pop mov mov das pop les sbb xchg cmpsl out (bad) in xor and pushf insb xor xor add add mov out add push stos into (bad) xchg int3 andl xlat into pop xchg and cmp icebp sbb adc add repnz jl aaa inc test push popf pop in out pop and into pushf mov jmpw fsubrp mov daa and loopne or xor inc inc cmc push xor mov inc leave jns (bad) fistpll jo or cmp dec cmp sbb sbb mov push js sbb inc call jo xchg or push cwtl mov (bad) nop pop mov lods pop das jae push stc xlat xchg xlat sub pop cli sti jle sbb (bad) leave pop push sbb adc mov cmp mov dec cmc xchg cli mov adc xchg loop lock mov push xor dec js and sahf out inc idivb scas and mov jmp sub mov es mov outsb ljmp out cmc sbb into movsb cli stc in std inc dec xor xchg mov aas adc inc pusha lock inc in cltd xor adc and add push stos jle int adc inc insl fs ss xor xchg dec push adc loop aad std sbb cld repnz xlat cmpsb inc cmp repnz mov xchg jp std pop mov inc je xchg mov lock cli mov clc dec mov hlt gs test jl sbb stc add sti pop ret xlat aad pop sub jae adc fimull lret mov int add out (bad) (bad) mov ja sahf stc jg (bad) lock or popf pop pushf (bad) mov pop pop in dec push inc or jl js test xchg xchg xchg lea mov out mov std xor rcrb inc sub xor jge lcall fs push lret or gs lret dec ss jno fbld sahf jo mov xchg xchg xor add xlat jno (bad) jae jmp int3 stc ja in scas dec jle dec sub push mov mov (bad) pushf mov mov popf xchg sahf hlt sub nop push pushf adc jb mov aam mov mov pushf pusha xchg inc push mov mov push js fildll jbe mov xchg mov or xor or mov cli pop dec mov dec nop cwtl mov cmp inc mov test adc jo pop add push iret mov jl cmpsl out jnp mov adc rorb inc cmc push sub sar scas dec mov and test dec shr push stc lds lds dec (bad) mov xor iret data16 xchg inc sarb pop mov fnsave push mov mov mov nop push lret cmp repz adc mov fistpll movsl cmp xchg xchg dec idiv mov gs cmp pop rorb pop mov (bad) lahf (bad) mov (bad) xor in test and sub sti or test inc push or enter mov adc (bad) icebp in outsb dec push push outsl and sarl test mov scas sbb mov adc outsl or pushl out jmp xor or mov decl inc hlt dec sub lods dec adc add pushf in in pop arpl xchg sub popa not inc ds clc inc fldl inc add adc cmp fsubs push aaa pushf test jnp cs scas test ds mov dec inc cmp insb fisubrl xchg in add push ds mov push shr jns mov jne add and xor scas clc pop sub icebp pop pop out mov out ret push cmp scas icebp stos adc fwait decb fsubp subl iret and in inc and mov push fcomps clc aad (bad) enter jae sbb cmp push pop sbb fs cmp mov fisttp ficom pushf loopne in push push push push cmp ljmp (bad) jne call adc int mov dec mov je out pop aad jbe dec jmp mov sub orps fiaddl push (bad) or and cs or shll enter or dec dec insb ss jo pop add adc sub rolb lcall lret xor mov mul pop inc (bad) xor and stos daa push ret ror les std mov xor lahf popl ss cmpsl xchg ss xchg mov jns ljmp sbb sarl push fcompl loop sub loopne jae sub es clc out (bad) inc test jb pop ss xor xor mov xor ja cltd (bad) (bad) xlat nop movsb outsl pop movl sub xor adcl sbb test jno arpl push push cld leave xchg mov insb jp mov jl sbb cmp jl mov movsl or or adc lods xlat scas xchg adc shrl fcmovnu dec dec dec pop inc imul fs sahf lock (bad) int3 scas adc int shl ljmp int3 into outsb iret jmp rsm pop aad inc xchg pop mov pop leave add mov push sbb stos mov jg out in inc test adcl or and scas imul test popa mov mov cmp cmc mov or sbb push mov es adc inc push adc outsb (bad) jae xchg lods push mov lock dec add adc jecxz es fildl pop lds push popl sub std dec fldenv in sti xchg sahf loop add lds int (bad) jns,pn push (bad) rcrl lock repnz jnp addl sbb add movq fcomps flds lcall push jnp mov popf push jecxz mov sbb ljmp mov sbb xchg mov push xor push (bad) xor dec sub push es pop outsl sub xchg mov lcall mov inc mov adc aam xchg mov push inc fmul mov add nop dec scas test jmp mov nop nop sub sub pop jg push sbb cmp xor sub mov imul xor repnz out jae or adc pop and test mov xor movsb xor jo and fcos xorl shl test mov pop stos negb push ljmp fidiv loop idivb or pushf repz pop sub shrl adcb mov pop pop ds scas xor mov test xor (bad) mov jl or out movsl (bad) mov cmp sub mov enter test inc mull pop sbb pop jl imul and mov fcompl dec insl cmp je xchg (bad) fadd popa and sbb das adc enter sub movsb push xor xor mov sbb pop loop jo mov dec adc in stos mov hlt or jnp jne movd xor inc cmp ret gs repz ljmp xchg jg cwtl dec mov mov jp mov bound dec adc jmp insl sahf sarl das sub rcl and cwtd psubusw inc out jno fisubrl hlt (bad) fistp test push bnd inc out leave or jmp inc ja mov lods pop add jo out push roll fiadd (bad) add sbb dec push mov bound sti pusha lret lods gs adc mov iret imul aad lcall mov mov jg in loop aad cmc mov and sub ds repz and pop sub xchg jbe and xchg addb js jg callw outsl inc sbb xor aaa cltd rolb pop (bad) in xchg jmp adc or ffree jge in leave dec out pop dec adc inc sub jae loope xor xchg icebp arpl arpl sbb xchg lahf adc push setno loope jbe dec adcb jle push sbb xor std push xchg int3 pop xchg adc xchg xchg cmp cmp and inc sbb add cld adcl aas test jl mov cmpsl xchg xchg popa and mov cmc aam xchg mov or insb fmull insb xor cmp xchg into scas xchg arpl arpl cmp push jle inc das std frstor fisubrl mov repnz xlat mov pusha test mov cwtl cmp bound fldl imul add cmpsb pop xor test (bad) test fcmovne or lock inc cmc icebp cmpl push jmp aaa pop xchg dec jnp fiaddl xabort adc cmp (bad) mov test leave add popf out fisubr fcom adc cmp lret addr16 punpckldq rorl ret xchg sbb iret mov mov rorb repz pop flds mov cld ret mov pop xchg fsubs jg sub pushf add hlt dec xchg jae popa adc dec bound push mov push stos movsl sbb xor dec sub dec arpl insb ret loopne arpl sbb jg ret mov dec cmp cmpsb sbb pop sub (bad) decb pop aad ja stos mov jns lahf icebp call test cmpsl fimul test pop dec pop cmp in mov cmp sub (bad) mov imul jne push insl mov jle add test cmp std lods addr16 mov cld (bad) outsb int das mov ds lods pushf andl inc jne jg push xor push or cmp jns push pop inc cmpsl pop jl fs out xlat add je js shrl push (bad) in hlt fdivr shrb xor loop sbb push lahf cmp pop and jle mov cmp push ljmp push cmp loop inc lds call xchg and lcall ficomp pop test fadds cmc add (bad) cmp popl mov out inc fsub or cmpl mov scas and jmp xchg mov pop mov fwait sub adc daa dec in xlat xchg out decl (bad) or jne popa outsb cmp ds imul test sbb inc lret lds leave mov sarb mov sub push mov lds jecxz mov insb addr16 jnp jbe clc fistp ret push sti jle nop call add jne roll repz lcall inc loop stc xchg jb sub add inc inc and scas sahf push push aam daa cmp mov xlat mov push push adc pop sbb ret sti cli xlat out ret mov jecxz fucomip idivl dec hlt stos bswap sub inc pop jns cld push mov mov repnz nop dec push in and jbe fwait mov les stos push shr in add push (bad) minps mov and and ljmp mov data16 sbb push pop test hlt dec sbb hlt lods add in dec fadds mov xchg sti fbld xor or sbb cmp dec sbb call cmp aas nop sub stos mov cmc mov rcll jno inc and mov adc arpl cmp imulb xchg pop add xchg jle xorl sbb scas adc hlt cwtl pop add adc jns mov inc rolb lret (bad) ror in jb (bad) jbe bound pusha popf movsb ror rcl rorl jg jg cmp out invd dec dec ja xchg arpl aam and andl frstor nop cltd fdivr mov mov popa jnp cmc call nop sub movsb or dec addr16 pop pop cli xchg rol or orl ds and xchg or psubb jo inc cwtl lahf and sbb fadds xor mov xchg jp mov xor stc cs in mov ss fdivrl outsl insb out xor in pushf jnp or mov in or mov ja xor in pop cld cmpsb int clc cmp negl mov je call sbb cmp out in ret pop mov jge daa dec dec push xchg xchg ror lea clc fsubrl insl int3 push lea pop cli pop ret mov xchg repz (bad) inc mov cmp mov cmp or pop push cmp jno jne push das sbb pop call test mov pushf es inc or (bad) adc fbld out add push jg fsubrs fsts cmpsl add std loopne in clc adc int sahf cmp notl sbb mov sbb inc xchg xchg hlt adc pop or stos xchg cmp lds pop cmp fs aas jno mov stos insl addr16 mov (bad) cmpsl or push sub inc xchg arpl leave sahf sub or jmp mov sarl push repnz imul aaa xor push and pop and jmp sub fcoms fidivrl pusha mov hlt ficoml inc add mov xchg lods sbb loope js subl es rep dec pop mov adc pop dec cwtl jmp ffree jp add iret add mov mov imul mov mov pop mov xor insb (bad) in cld push pop push sub lret mov push lea jae xor idivb jg clc push jle nop imul std out jge sub in insl inc mov or je cmp pop lret faddl into or lahf (bad) negl xlat rcrb stc adc pop cmc jl xor nop mov sbb xor out out stos lret mov cmp clc lods and pop pop and xor push ss fildl push cmpl lods lcall inc jb cmc enter pop dec cmpsl pop push inc or sahf (bad) mov in or cs fistl orl aas leave adc sub push ss jne js ret rcr loop fwait imul jg push inc mov sarl jge and shll adcb jp das and nop mov (bad) inc mov in add push into push jecxz or mov adc adc nop cmc sbb cmp fidivr sbb roll sub addr16 gs xor dec mov ret out test je mov fwait xor xchg lahf (bad) in jae stos popf cmp and or mov dec in ljmp xor icebp cltd fs negb test mulb and pop rorl jo push insb cmp pop xor pop or jmp push push repz lods aas icebp dec dec lods ret pop or mov cmp fimull pop ret stos mov lods lods aad jg fs lret xor xor insb into (bad) mov cmp int push cmp lock fisttpll push or push xchg lock fidivrl mov insb nop/reserved jp out push sbb lret mov inc fcoms je xchg cmp sbb and mov cmp stos jno shrl pushf scas push pop xor jno or std cmc adc xor or push int jg call je adc das dec clc lret mov jge mov mov fstpt jo scas add lcall ret jg lcall xchg and sahf bound jbe pop ljmp or push icebp lods lods xlat cmp movsb lahf (bad) enter or movsl aaa and (bad) ret enter pop call idivl push adc cmovno mov mov (bad) imul cli fisttp les mov daa fisttp mov nop xchg cmc push mov xchg pop outsl in sub pop das frstor jg jne jns adc xchg aam push ror popa fld inc pop clc loop loopne mov js (bad) and xchg lret ret sub pop sahf js jae int3 jle (bad) mov lea movsl lea sahf in aad cwtl mov fisttp fistpl jmp outsb mov xor mov xchg outsb lods je and jo repz fisttpll imul sbb lret sbb out fcom and scas mov stc popa lret inc sub mov xchg pop or sbb fdivs cmp out pusha or fiaddl dec andb sbb cs test daa inc test ret pop xchg xchg fisttpll pop (bad) pop mov daa lret cmc stos test jmpw inc jo and jns dec sbb in pop xlat cmpsb xor ja sar sbb pop call out rcll push js sub push (bad) rorb out in mov (bad) out pop aam adc lret in or movsl mov fiaddl arpl xor cmp inc sbb call pushf ja adc pop jecxz push icebp mov inc add stos pop jecxz lahf repz iret fistpl outsl das or pop jl out push cmp push adc arpl mov jp mov jno inc inc pushf ss sarb mov cmpsl leave hlt mov (bad) leave mov sbb test mov jl inc cmpsb loope jns ds insb cld testl test in xchg adc punpckhwd mov cwtl dec ja ss je jle lods xchg sbb rcll pop movsb sbb mov mov (bad) sub add fnstcw test aaa sti test adcl rolb pop je ret cmpsb rcpps jmp inc adc jmp popa (bad) sub ss subb sarb inc fldl mov xchg push icebp push jno cmp fidiv pop add cmp jb into int push movb dec and jbe lea dec pop push sbb (bad) lret xor adc inc fwait cwtl cmp xor dec cli ret pop push shl inc mov jae roll in and push xor shrl hlt les sub cmpsb xorl lcall iret cmpsb mov daa cwtl jl pop iret sub mov jecxz dec test sarl inc push cmp popf mov int mul pop dec xor mov mov sub inc and or jno ljmp cmp mov sub push aas mov push in mov gs push repnz add out scas pop sbb inc inc and lds sti ret cmp call shrl jp mov cltd mov xor nop data16 inc pusha mov adc fs push cltd sahf in sbbl push push pop insb outsb sub or sbb ss or pop leave inc hlt jmp inc jp mov lahf shll cmpsb or cmc cmp cmp sub cmp ret daa mul out adc popf nop mov test fsubp stos pop repnz (bad) cld fist rcll jg xor les xlat (bad) int inc addr16 and (bad) pop fwait xchg jno pop lods jae sbb movzbl add jae jnp inc lahf sbb push sub pusha jnp roll sub outsb add inc inc cmc cltd sti lea jae rcrb (bad) pop push add scas adc fldcw (bad) dec and mov test mov xchg out fsub notl mov jb hlt adc imul mov cmpl or add sub (bad) ficompl mov lds mov int xor xchg or jb lcall rcll insb pop iret xor lea push rcr adc xor mov popa xchg fdivl daa xor adc xor lcall push inc mov add pusha xor cli cmpsb cs iret aas cmp inc pop into shrl dec inc xor std adc lret (bad) jb je mov repnz sahf cmp ficomp mov roll loope test xchg popa sub xor cmp shrl or (bad) and sbb outsl and movsbl mov xadd jl mov pop add ds inc lock mov or xchg push icebp nop jbe icebp mov imul andl mov adc mov mov sub or shr stc mov mov mov mov cmp fwait and shlb pop mov xchg mov in mov mov imul pop mov adc pop mov lods xchg inc repz dec fstpl lahf lret imul sbb rorb cmp mov (bad) jnp insl inc cmpsl and bound adc lret adc xchg xchg cwtl adc test xchg in scas cltd cmp inc pop sub lret in in out mov fsts popw jmp in push mov daa inc addl or (bad) mov and rorl adc nop fcmovnb test pop xchg and jg mov mov fdivp scas and les fisub (bad) pop pop sbb mov inc cli push sti jo mov inc and insb dec ret (bad) xchg inc rcl aaa pop mov jo in iret sbb (bad) cwtl mov cltd jmp pop push sub out (bad) push mov adc and call stos rorb scas insl lods sub mov into push xchg pop movsb mov ret xor fld addr16 xor fcomps mov bound stos push mov cmp pusha cltd sub dec jne xchg repnz dec mulb cltd xchg ljmp (bad) mov sti pusha shlb pop mov pusha clc mov jb pop fildll pop xor aaa dec arpl and lods addl cs iret sbb sbb rolb xor push xlat int or mov mov mov sarb leave mov sbb cmp add jnp call lods imull aam mov fsubs ss xor push jecxz inc scas and pop xor and xor fisttp nop movsb subb js icebp xchg push add pop push je (bad) pusha push push pusha pop inc jle sbb or (bad) movsl cmp xlat andl mov jns jns dec ret mov cmp jle movb sbb inc ljmp cwtl sbb sub cmp mov inc add fadd ret mov ljmp push scas lahf sub xorb mov inc das stos addr16 or mov inc insl add xchg bound mov pop das xchg cmp out pop mov mov jo dec and mov and pop sbb lret xchg and cmp les mov cmp and (bad) stos out sub stc out add mov mov test push xor push cmpsl sub ret mov mov (bad) loope (bad) int3 ret pushf pop inc push or je push pusha pop das in cmp inc push in arpl loopne aaa xor push out mov sbb test sbb pop push cs fwait mov popf add gs pop lods jg aam xchg push fwait or add rcll fwait (bad) xor lods adc (bad) mov loope popl jmp push loopne pop loopne dec test in popaw and sbb or pop adc add or gs roll call dec aad int3 mov lahf xor mull and jbe lods dec push adc pushf mov test inc push mov or jbe jbe repnz and mov rorl loop cmp out sbb stc cs in mov test mov mov add iret mov gs dec inc inc aaa ret adc push cld xchg popf data16 xor cs mov add cld pop ret les push jae mov pop into and dec xchg repz mov cmpsl add mov dec jp inc inc iret pop dec or xchg xor xor aad xor jge xchg pop bound iret add and dec test sbb cmp mov insl lcall sub jo ss xor out aad push fsubrl gs dec lock mov adc out mov mov sbb and out mov xchg push inc bound jecxz data16 add dec dec sbb popf ret lds fnstenv aaa orl or (bad) stc stos loopne pop faddl repnz or scas xlat or mov data16 jmp xchg les stos test mov cmpsl sub test icebp shrl jmp (bad) xor mov mov xor jo mov cmp fldenv mov leave mov sbb lods ds popa push insb insb dec stc add (bad) adc in jb dec fsts mov call push mov sbb mov pusha bnd mov lret dec jmp cmp push mov push das mov aas jp in mov (bad) mov std popl sbb and lea (bad) out add cmp (bad) or test pop xorl loopne mov xlat mov cmp xchg mov (bad) cmp std dec aad sti fwait lds pop push sti leave pop clc and mov inc mov mull adc and in je dec mov test mov pop lds movl fs (bad) mov aad dec xchg adc aad and sbb push jns xchg pop jne push sbb pushf mov mov (bad) jo or xor movb popa stc (bad) adc in xchg mov sbb ds mov call repz inc stos mov push mov ds aad sbb add sbb jge incl or out les inc stc bound fbld dec push pushf loopne (bad) sbb add xchg adc mov scas repnz sbbb rclb (bad) fcomip pushf sbb sub (bad) ds mov icebp add xchg xor call hlt imul shl jmp in cmc or in add movsb (bad) xchg xor inc (bad) dec popa sbb das cmp enter mov out loopne lret test jae mov sub shrl in cmp push test dec mov push add mov mov mov stos xchg xchg (bad) repnz adc cmp fmuls pop sbb std xchg sbb sbb push (bad) cli out out fwait sub adc (bad) dec sbb dec jmp inc push push xor loope sub insl and stos cmp stc (bad) mov and sbb inc insl mov jne test (bad) cltd lahf sub add pop inc xlat push cmp cmp or cmpsl std (bad) inc (bad) jo loop lea xchg xlat fstl imul or fwait add cmp out mov cmpsb (bad) pop xor and outsb inc jae orb jmp in add dec pop push jp addl lods popf out ret mov push (bad) jmp jecxz xchg dec jmp add pop mov cmp push aad enter xor cmp cmpsl xchg imul (bad) aaa pop mov xor lock outsl sub addl rcrb push sub dec jmp stos inc stos mov xchg mov or loopne push add push xchg jmp mov imul fs lods in int3 (bad) mov mov ret jbe mov ret push stos push adc imul ss out mov inc pop adc rcl leave xor push mov (bad) dec push test xor hlt cmp jo mov loop insl iret push or fiaddl (bad) and lods sub fisttpl stos inc rclb fcoms xchg push and mov mov cld test int3 (bad) aam sbb mov mov sahf lods test (bad) mov adc test sahf lcall pusha jecxz subl add xor bound mov jge xchg dec xchg in (bad) arpl in sbbl mov (bad) adc or cmp adc inc push frstor fwait mov mov lahf cli in outsl out (bad) jl rolb popf in ficompl insl pop pop mov push rorb lret jmp inc or f2xm1 (bad) push (bad) push in mov xchg fstpl mov loopne mov cmpsl jmp xchg dec ret or add iret ret enter lea rcll jne mov jnp push jp and jle inc push pop pop cmp in and mov jecxz sbb (bad) xor out pop lahf and into push sub outsb pop mov mov in pop addb sbb repz add sub inc sub push cmp dec in and lcall cwtl aam daa add stos jl xchg dec xchg mov loopne mov sbb cwtl xor dec call push jl es adc dec ja aam xchg pop call lock jmp in jo push pop out mov ss inc sub repz orl xlat mov das outsb sub jp fist xor jp pop fisubrl nop daa ss push mov insl sbb out push lds (bad) or ja or (bad) mov js or and test and push mov jmp push adc jb mov inc adc loope fwait push (bad) mov (bad) and lret and inc mov mov sub arpl cld and push cmp and mov (bad) lods mov sub inc jmp push jae shrl stos lds pop ss aas dec push pop leave adc (bad) dec insl inc xchg cmp mov pmaddwd push mov or pop pusha sub sub jl pcmpgtd repz pop push test cmpsl rcrl (bad) fucomi xchg push enter pop xchg pop jae scas sahf sbb insl cmpsb lahf sub cmp mov lds xor mov xor arpl ss das mov (bad) mov das lds shll arpl push iret cmpsb shlb insb repnz movsl inc cmpb lods mov jg mov cltd (bad) in jns (bad) cmp pop (bad) aas outsb inc (bad) out inc in mov push or js mov xchg ds enter cwtl jmp mov xchg mov pushf sub xchg fistp dec lret mov mov push jno adc pop cltd das mov dec imul adc jns decl popl add in mov daa pop mov jno xor pop xchg push sub xor int sub fsubs dec enter aam imul xchg imul jge pop push push push insl fs shlb (bad) in call mov test push in ds sbb test mov ds cmp enter and out jge sbb fisubrl das jbe push scas xor pop jge subl js dec fcompl mov lds jnp add xchg (bad) mov pop mov xor sub xchg lods movsb popa les jno cltd xchg xlat enter xor sub adc out xchg jecxz sti js lods frndint adc or int stos out or jb ret jno lea jecxz scas mov lret mov cmp mov in mov out out loop inc not add pop mov and mov cmp pop negb lock cmovge (bad) jbe jle lds repnz sbb test stos jmp jmp ret cli dec add (bad) and mov (bad) gs or jno xchg adc sti pusha mov cmc adc jmp subb pop dec aas out and aaa jbe push or sti lods jbe sbb scas enter and pop movq sub pop mov push fiadd lcall int (bad) popf stos test jno mov jl sub push push clc lcall xchg add push inc mov jp mov jbe sub adc dec outsl jge push mov add mov negl or inc stos jl repnz push dec jb data16 addr16 cmp paddw push (bad) cmp icebp sbb pop and nop and rorb dec in cmpsb push sahf jmp lods stc int3 cwtl pop pushl addr16 jg push repz daa pop mov cmp and adc xor adc dec push add jp ficomp int mov ss pop out mov mov or push imul (bad) add mov dec decl out sbb lret inc hlt jne pop call lahf mov and xor or loope push xor arpl sbb sahf cmp mov sahf push mov adc nop ss cltd aas push jbe mov mov jge cli xchg leave loopne mov fisttpl jnp arpl or xor js jecxz adc mov xchg cltd and jmp (bad) and idivb mov sub add mov fwait lods fwait jne sub xchg push sub inc (bad) cmp (bad) mov mulb mov iret xchg or push pushf pop lret lahf std fisttp (bad) je,pt mov push sbb cmp push ret std das dec and xchg out sub xchg rorl adc lds lock sbb in xchg mov push lcall and cmp inc mov jmp inc xchg and xchg or sbb mov imul icebp mov or adc cmp push cld outsb mov popa cmp xor rcrb pop lock int3 sub mov push and stos lock push mov jmp mov mov addr16 sbb xchg mov (bad) out pop dec adc stos add and repnz mov ret jno fidivl loope loope stc add pusha pop ljmp adc (bad) sti xor popf jae jo jne push jl xchg std repnz push jp iret stos stc icebp sahf popa mov add arpl cld push inc (bad) mov es jecxz gs xchg sidtl daa mov mov jnp call call pop xchg xchg (bad) cwtl clc pop (bad) mov divl rorl mov scas jb xchg test or and call nop dec jl and aad dec (bad) js dec xchg or sub lea loope loop rcl cmpsb in fwait mov out std sub jne push popf mov pop dec mov adc mov popa out insl popf sub push jnp clc mov fcmovnb test (bad) hlt pop (bad) ss loop sarb sbb dec call cmp or aaa (bad) or push insl add les dec insl imul lcall ret inc xor mov sub addr16 pop inc and (bad) mov sbb xchg dec push lock fdivrs sub fist push add out inc xchg xchg add sahf mov jb fucomi adc (bad) mov cmp cmpsb mov hlt mov cmp outsb sbb mov adc sahf gs xlat fsts jl pop orl fist cld mov push pop mov push aad inc enter cmp loopne das push in lahf subl push push pushf xchg xchg mov ds sub mov fcoml mov add imul mov (bad) sbb addl cmp jecxz ret push mov bound and ja sbb dec pop iret mov movl dec mov dec mov mov and cltd pop adc popa jne lods dec cmp loopne xor ret inc and push mov sub pop dec xchg dec push popl or loope fwait or ja inc ljmp lock add ss jbe iret jecxz xor pop out rcrb add aas dec and sbb xchg xchg sbb cmp (bad) testl xchg aad pop xchg dec push jg and and dec lods ret push push loopne aaa ss movsb loopne mov shr dec fwait outsb data16 cmovne cmc inc sahf xchg jl in fdivrl sub adc fsts (bad) mov xlat imul pop or sub adc fucompp shlb jl xor orl xchg jl mov and test jmp xchg or add mov or inc cmp mov mov pushf call dec bound lret daa fiadd insb dec test sub clc push ss xchg push push ret xorl dec dec push xor lret (bad) mov fldcw fdivrl sub scas dec pusha adc push push cmp mov and jecxz or pop or mov mov xchg arpl ja pushf stos adc leave dec into (bad) sbb fimull and adc jmp xor pop push out push es fs pop push adc sub lret cmp jmp inc adc mov push jge adc jl sub mov popa xor pop push mov int jmp nop es movsb fnsave inc cmp mov cmp pusha mov xchg int js push xchg xchg dec ficomp inc inc mov pop push aad mov fwait popa and push call (bad) jo xlat sahf dec jmp fs popa and test popf inc adc mov jo loopne movsl and sub stos sahf xchg cli out outsb in push push fisubrl push insl (bad) push jg in sbb push xor aaa push push adc and aad push (bad) xlat movb and insl cmp xchg gs aam shlb jb lock pop jb xor aam xchg cmpsl sti cltd mov in stc sub xor (bad) into xchg jp or into cmp aas sbb (bad) ror cltd xor jno lock lods popf pop lds test mov out (bad) lods popf mov lret sbb mov or popa mov in jge or adcl add loopne xchg cwtl pop aas adc sti sub jge adc cmpsb lret loope sti mov jecxz les popf xor xchg stc mov mov mov mov imulb push (bad) fwait cmp sub or sub ja push out xchg xchg lret sub sbb jb adc jmp mov pushf xchg adc ret lret cmp push jecxz mov addr16 xor adc xorb push lods mov sbb jo int sub push mov jg sub in cmp imul test push lea stos jnp fdivrs add push je call popa mov adc out xchg stc pop add push mov lea push push pop ljmp and clc (bad) lock jne mov mov or inc fsubl or add addps divps jge in or mov dec (bad) lods (bad) ss sahf int3 push nop push mov xor cmc outsb jl mov ror lret sbb mov pop inc sub out cmp inc inc insb rcrl cmp scas (bad) and shrb cmp arpl mov cmp loop push imul cltd jnp iret push push fsubl (bad) nop dec nop push stos int3 cli push insl popa nop pop push adcb sub pop lret mov fisubr adc jmp mov inc loop dec ret out mov into ja loop xchg xchg or (bad) negb mov fldt in jne inc adc pop fcoml das sbb aam push loop dec jne push mov pushf gs xchg fwait add push pop sub and mull lods adc mov push rclb int cwtl pushf iret cli xor xchg adc inc pop cmp sbb lods dec in cli lahf pop add ds mov je stc stc and xchg jge ljmp (bad) inc ss fcompl into mov pop nop cmpsl mov sub les (bad) jb or adc fdivl js mov inc xor add xor outsb ja mov push cmp test adc test mov in push cs jmp xchg mov nop mov pusha stc daa rcl jno push std movsl in punpckhdq mov ja clc ret (bad) je lea imul ret cli fcmovu les pop mov or and mov jnp cwtl add (bad) (bad) sbb ja push cmp sub fsubrl aam decb and sub pop jnp vmaxss xchg lock pop cmc (bad) jge xchg jge add or into out fcompl jl int xchg out scas mov test fmuls mov and testl cli inc js or cmp and inc das rorl je (bad) mov fisubr inc popf (bad) aam out cmp mov pop out dec dec adc mov cli push int shlb cmp push jp cmc idiv inc cmp pop dec out loop ret add mov vsqrtsd in subl jecxz iret and ja jo hlt loopne daa shr dec xor cmpsb arpl xor popf shll int3 fwait stos stc adc mov bound jge and aad outsl dec dec fsubrs sti lcall push xchg clc dec outsb js out or sbb adc dec popf jo jmp fisubl dec push icebp jmp leave mov sub mov cs sbbl daa gs pop sbb xchg ss pop faddl stos pop mov mov popa shl shrb dec fadds mov add cmp mov (bad) fiaddl enter das push push dec fidivl and out lret enter loop mov dec lcall push jle scas xor push cwtl rorl push popa mov dec ja add out sub outsl pop lods out or (bad) cmp scas dec lock add dec (bad) cltd mov fstpl pop inc mov mov pop (bad) jbe or cmpsl scas fs std xchg inc add test icebp pop lret mov push mov mov pop lret leave ja mov sub aad ret enter popa imul or sbb push mov adc aas mov lock lahf adc sub dec push andb pusha mov mov or adc jno (bad) fwait ds mov inc mov pop ja and test dec inc dec jbe stos outsb push mov mov push cmp es icebp and and push xchg mov sub jnp mov in and fsubrs pop aas lret jno pop cmp push pop ljmp pop test adc sub mov cmp sub jbe mov pop push push stc insl test pop mov stos lods push into daa sbb aam jge ljmp xchg (bad) je daa arpl add push scas ja stc pop jo inc xlat roll sub scas imul mov jmp addb lahf pop loopne mov imul pop xchg jnp push mov cltd xchg cmp aad and pop lcall push xchg pop mov add hlt mov loop xor cltd ds jp mov aaa lds mov je pop or jmp cltd dec jecxz insl sbb xor cli cmp sub out sub and lret std bound lcall popf (bad) mov movsb cltd push xchg outsl into insl jg (bad) add push mov fildl movsl idiv daa fsubrl lds adcl pushf sub ja out dec pusha dec test lahf pop sub mov inc fstl sbb sub xor in ja cmp aaa out imul test imul pusha sub call sbb mov jae pushf int3 dec cmpsb les xor pop scas es dec mov or pusha jmp pop push jecxz push jo inc fiadd mov lahf test or dec adc jne pop pop xchg fcoml test mov cld bound imul test cmp mov aas insb push daa mov (bad) mov dec in rclb and sub repnz aaa xchg inc icebp push int movsl xchg xchg aaa notb loop mov xlat xchg xchg outsl and subl inc jbe inc mov insb aas fcmovb mov outsl sbb mov dec ret fildl lcall xor mov fdivl stc lds adc outsl out add addr16 mov stos mov pop dec ss ljmp es add iret xchg and rcr xchg stc mov (bad) adc popf sub sub push dec adc dec or stos jne outsl adc inc movsb call mov inc inc fmull call xor push push jmp pushf add std or les push adc dec pop in int leave mov ja sbb fnstsw (bad) mov daa cmp dec inc mov push cmp subl dec adc or test loop xchg sahf jo inc add xor cwtl sub or (bad) mov cs adc addr16 or inc lds push mov mov xchg js mov sbb clc inc popa testb adc mul xchg xor test cbtw or mov cmp test jne scas push cld jg clc xor and outsb push mov scas mov es scas push cmp cli or mov inc xchg mov inc jp xor adc xchg sub pop and push sahf pop xor int3 mov lahf push call pop mov sub dec stos push pop mov ja aaa arpl ss cmp and mov lcall inc inc imul inc mov hlt mov cld xchg add gs sub jp data16 cmc mov sub pusha mov dec sbb push add pop addr16 (bad) pusha mov pop outsb mov popa out loopne ret clc or and inc cmp (bad) repz fiaddl cs cs xchg jo in scas push sub les or daa and out dec or adcl fsub sbb aad xor jg gs sub inc cmp sub xchg cmc sbb fistl xchg mov (bad) and inc clc sbb sbb pop sub pushf adc out mov stos pop lock push (bad) mov or push sbb xor loop sbb int3 adc xchg icebp outsl or in or lds (bad) lret clc inc pusha dec aam fstp je add sbb cmp xchg aas shrb cmp sbb push jle into gs pop add mov js mov fidivr jge shrb mov mov lods data16 mov xlat xchg push jmp sbb pop ss jns mov aam jbe loop adc push ja inc xlat xchg iret jp adc push fs sahf cwtl pop into (bad) fwait (bad) stos dec (bad) jle in mov ss aad jbe stc adc adc int3 jp mulb sub lods inc mov sub mov mov cmpsb imul cmp popf jbe push repnz nop dec jne (bad) xor sub xchg xchg and xchg cmp insl jg sub cmp ficom inc faddl nop sbb pushf hlt test push aad or mov pop lods push pop je cwtl outsl fsubl xor fucomip xor in pushf push test jl mov sub mov insl in out adc sbb popa xchg and push imul test adc pushf icebp rcl loop lods push inc pusha data16 out imul pop stos fstps jmp jne jb orl fs test in movlps mov mov sub push pop push xchg cld ss js mov sbbl push cli xor in lahf je cli std dec (bad) fidivl push jecxz mov std or pop divl (bad) or std xchg (bad) ds fcoms sub cmc sbb jo jbe loope lahf cmp pop mov aas fs lret push and nop in (bad) jns dec clc jne je in jecxz push lret lret aam pop adc and ljmp pslld sub mov loope and pop push loop inc (bad) hlt inc cli enter pop mov sub mov movsb imul inc inc cmp xchg add lds jb popa cltd mov inc leave fildll cmp mov leave fcoml lea push sub mov fdivp adc (bad) orb and and mov hlt lahf fsubl push mov js mov cmp jbe popf dec push sub lret jl xchg div adc ror fnstcw dec push push jnp shlb dec adc or popf icebp lret mov out fucompp out adc mov jb mov mov dec xchg hlt mov (bad) pop push fstps push mov aaa gs lcall gs daa add xor push icebp jno scas mov jb mov xchg sbb jb mov fistp clc mov push (bad) mov nop inc pusha inc add sti push dec cmpb sbb hlt push inc cmp in sub add jnp push pusha insb je xchg push ret clc insb mov fwait scas outsb and fs cmp pop js fisttp (bad) lock icebp je insl mov fistl popf pop xor jo mov cmpsl pop dec nop inc pop xchg lcall jg cmc inc jmp fsub push xlat jmp jno (bad) xor pusha mov pusha push popf push xchg cmc xchg xlat pusha push lret and mov fwait cmp enter lock int3 xchg lock jge inc jg imul outsb mov popa stos sahf inc sbb sti or notb push dec test sub jb ljmp push test xlat adc push das pushf enter mov xchg pop rol inc sbb fidivr lahf je movsb loop lcall bound or jle push dec int scas pop (bad) xchg jle leave pop (bad) std cmp scas test and pcmpeqw add sub imul xor or sub je cmpsb sub mov inc fwait adc pop cmpsl mov xor mov cwtl jno jne mov sbb or adc fs adc mov xor or xor ret cld xor add xchg mov jg mov jne xor imul aam or xchg pusha out cwtl jbe rorb lahf pop stc and cmpsl in iret mov pop pop (bad) xlat lds aaa jmp push outsb scas fistpll ljmp fistl out xor pop add cmp js or and and xchg xor mov out lcall lock (bad) fiadd out cmp shrl das dec sub and fldt mov cltd push outsb jecxz pop mov add push or hlt mov jae pop sbb loope orl or adc sbb add pop sub sbb les test add and push pop inc (bad) or (bad) push into stc jb jbe dec in into add lahf out and fwait int3 daa inc mov (bad) ljmp sbb jge add in lcall mov call sti mov enter sbb xchg stos push xlat xchg pop xor jl test (bad) call sbb shlb mov cltd nop out xchg mov das cmc rcll jo sarl into int3 cmpsb mov leave rolb push dec jb outsl stc pop mov stc lcall outsl loope inc movsl mov lcall daa or mov xlat jbe mov les lea xchg mov and jl addr16 fsubl subl mov or (bad) cmp adc push mov cmp or mov push daa loop mov fdivrs push rcrl or ret xor arpl stos mov aad fucom inc sbb mov sahf iret sub mov pusha sub xor scas mov out dec jp fistp or jno sbb dec mov inc pop scas pop xor sqrtps repz mov cmpsb jmp outsl mov adc icebp add (bad) jnp jg loope cli cltd in push ret add cmp pusha mov push mov cmp sub int3 (bad) lret pushl inc mov mov lcall aas cmp mov mov mov dec lock fildl cmp jno pop cmp mov adc inc aam add stos sbb mov mov gs pop cmpsl adc mov popa add cmpl in aad repnz mov pmulhuw cmp movsl and or lret rorb in fstl divb addr16 loop arpl fistpl iret mov inc addr16 cld add fadds and and jg pop and int jp mov mov aaa int3 scas sbb cmp outsl adc in test adc mov and or jp xor and adc outsl fcmovbe inc in popf cltd inc sti add dec and sbb sbb push imulb out lar pop rorl pop out fadds pop push inc dec (bad) loop std mov bound dec (bad) jmp xor or cmpsb (bad) pusha cmp jg gs in js shrl jns xchg xchg test mov fwait add clc addl mov sarl dec mov adc mov jecxz push add in mov movsl in enter std dec dec dec and into mov loop (bad) mov pusha jnp or mov xor enter xchg xchg mov or stos mov loopne pop mov call sbb push adc lods mov rcll jo repnz xchg arpl mov push arpl fisub lds push dec inc mov push sub ror pand inc loope mov cmp xor fisubl dec adc inc mov adc jno mov mov mov repnz ds daa clc dec popf roll add xor sbb xlat test adc lds add mov and out dec mov sbb xchg jae push xor xor pop roll push sub es and test xor xorl and mov notb lahf addr16 ret imul or cmp xchg cmpsl mov out sub loopne arpl in fnsave (bad) sub call sub pop pop call xchg mov xor mov inc insl leave xchg enter cltd js ficoml loopne and cmc loopne and out jne mov je jge cmp fmuls mov and out ljmp test pushf fwait pushf mov mov cmpsb pop mov push bound inc lret inc pop add bnd mov lock xorb push insl xor fcoml or fsts push mov jbe out mov (bad) xor aam or pop pop mov or lret push pusha xchg jb push rcl or sbb sub fdivl pop leave lds mov test cmp insb pop push sbb pop outsl adc nop sbb loopne xor add lret push sub add in add xchg addr16 sub sbb dec cmp fs mulb cmp aad and jg adc movsb lock xchg lea dec jp int3 movl lahf popl ljmp sarb loopne mov push cwtl jb xchg cmp loop in mov imul lods push imulb push loop push or cmp fistpll sub cmp push fs lods outsl iret repnz dec fidivrl pusha gs ja lock pop push sub mov out mov pop dec jbe adc iret or push add mov fiaddl out (bad) jbe loopne out mov mov or mov loope push popf in test sub mov cmp pop and mul jne dec (bad) jbe sbb sbb and int mov xchg ret mov mov add aad std into insl dec add out inc add add mov and fimull cmp fnsave sbb xor mov cmp aad stos push pop call lock imul mov jmp iret and lods mov mov repnz add ljmp lods or ficom (bad) call enter (bad) ljmp push inc push xor push stos push jge fdivrl fsubrs leave dec inc std repz sarl push mov aas lret stos (bad) mov add fstpt lods lahf pop mov (bad) mov popa ficompl jae insb mov aam push push adc je sahf mov (bad) mov mov xor jne and outsb subl xchg je lahf pop sub inc mov ss inc cmc adc ret and pushf xlat add dec rcl movsl popa mov xor and repnz test jmp push xor add es out or (bad) cmc mov mov push jl pop ret (bad) aam dec sub jne mov rcrl cmp in xchg inc sub rorl xchg pop cs lock mov fbld jecxz imul mov mov addr16 cmp inc insl popl cmp add cmpsl pop (bad) and and mov or fidiv ret jnp sub fcmovnu aad cltd rcrl in add test movsl push and jb xlat push add sub cmpsb lock repz pop outsl and sti mov sub leave arpl arpl lret dec (bad) mov outsl jmp adc imul mov icebp clc xor xchg ret out mov inc pop adc xor xchg adc cltd push lods or xchg inc in add paddusw and xchg mov dec andl iret xor test aas fnstenv xchg xlat sbb push xlat imul pop cs inc and popf repz out icebp inc arpl mov push adc xor (bad) mov test (bad) xchg mov push xor or stos bound hlt pop mov cs xchg in xorl aas cmp pop lret add gs mov (bad) das (bad) pop ja sub mov sbb inc ljmp add adc dec inc jae jae jae mov ljmp or popw cwtl inc lods cmp jle jge jno mov or icebp xor mov jg jge ss mov aaa stos pop dec repz push jmp push inc inc fisubr ja out imul icebp (bad) mov movsl insl inc mov scas xor jns inc stos div mov lods hlt mov scas outsl xor (bad) in ljmp cld adc test jp mov push jge lea outsb dec fimull loopne add lret out mov sbb ja inc mov icebp loop pop in nop inc pushf inc dec adc lret dec sub cltd sub xchg push lret loope out or cmp push shlb in fwait jmp mov gs loopne push sub xchg jno leave insb ds je dec mov push mov mov movsl jge (bad) clc mov (bad) pop mov mov cmpsl and sbb lcall sbb inc adc adc xchg xchg gs xor mov dec shr push pushf push or (bad) xchg imul push add (bad) sub dec push sbb pop cmp and dec fstp adc push xchg std (bad) mov insb pop int fidivl test mov inc pop pop add xchg mov into std addl push push (bad) cmp lock push popf sbb cs movsb loope dec jmp cmp (bad) movsb pop (bad) dec adc or enter (bad) aaa cmpsl pop insb jae icebp rcrb les out sbb add push cli mov imulb mov divb xchg jmp in jle adc xor add lcall push ficoml lock xor test mov mov push decb loopne lea repnz ret insl dec fdivl xor dec nop lods fs leave imul das pop jns jle adc pminsw mull mov leave push or adc lock jle leave sbb push lods dec xchg and xor push fsts aaa pop test sub mov (bad) jne xor jmp mov xchg fcomp adc jnp jb xchg or outsl test sbb jnp insl cmpsl fnsave cmc test fsubrs mov push jo inc xchg mov sub popf sbb dec fldl pop pop mov jo lods in imul popa mov cmpsb add cwtl mov jbe jl fistpll pop xlat xor sti negb add or fwait xor mov mov mov push scas shlb shl or adc cmpsb jo sbb and inc iret push adc fs (bad) fdiv in adc loopne push cmpsb mov fistpl cmc or insl insb sbb push mov movsb mov pop sbb xor inc push or imull imul (bad) ss sub dec mov push xor xchg imul mov push int3 mov lock popa mov hlt stc or mov mov dec add outsl and das js pop roll outsl inc dec xchg cmpl mov stc out jne pop das mov push mov movsl xchg insl aad lds popa loop icebp jns jge in popa adc adc dec data16 or xor and sub in dec shll test nop push push and ds mov dec or test xor mov pop out or add pop cmp lret ss sub mov in pop roll jae rcrb inc in lock adc xchg nop jge in cmpsl outsb mov idiv dec jmp iret jno cmp scas je jg mov shlb cwtl push call xor mov ds jp mov mov jmp fbld fdivrs mov shr ss movsb xchg mov pushl rcrl jo lock mov and js or rcl cmp push sub repnz inc loop sub pop call fimull mov mov pmulhuw inc sbb xchg jecxz sub push lods cmp enter or sahf add mov cmp inc jne push in fstl jmp xor int mov push xor mov test adc cs sti repnz cmp mov or pop icebp cmpsl fdivr mov adc inc jnp adc inc inc mov daa std insb cmp rorb and daa popa pop sub pusha mov popf xchg cmp jae mov or mov leave and add lock fstpt mov mov (bad) fsts ljmp cmc enter cmp div mov sbb sbb sub xor outsb dec jle fistl push adc out or mov pop test or mov push stos sbb xchg test sti sub dec push movsb push loopne and pop repz mov rcll dec mov es lcall cltd iret test mov out dec dec xchg push mov cmp cli insb bound int3 push loope lret or insl sahf jnp mov fdivrl test aaa jns inc cmp or and in and mov cmpsl in sbb adc jb push sbbl addr16 int3 mov (bad) lea cli dec cmp lods hlt mov sarb fiadd push aam ud2 scas mov cmpsl xchg hlt cmp rcl cmp adc setns jne bound inc cmp (bad) fmull or push lock cmpsl xor sub inc jle adc push mov mov and mov movl fdivrs into inc dec (bad) adc popf imulb xchg xlat cmp lds jmp jb mov pop iret adc jns add ljmp xchg lret jno shr dec inc idivl cmp add jecxz push mov push sarb fist cmp pop jge and pop push inc xchg movl mov aas add flds shll arpl and data16 lret out ss jp out lea mov dec or inc cmc mov orl jb dec int jl dec stos es lods or hlt (bad) jo push adc jg push cmp (bad) mov mov push jno ficoml xor sahf jbe inc cmp imul and add xor ficomp sti mov mov inc (bad) aas sarl dec adc xor cld in xlat jne sbb cltd xor fidiv pop xchg sbb movsb inc das aaa mov cmp jno dec dec jns (bad) xor push fnstsw mov cwtl ret mov dec sbb lock int3 aad repnz push push add bound jle out in stc add int3 mov sub out push insl sub adc into lods (bad) into sbb mov leave push arpl pop dec test fwait (bad) in outsl leave sbb in mov xor fistpl jmp add dec ja adc jne inc lret je add xor js mov rolb sbb dec pop out enter xor and into pop popa jnp (bad) fldl addr16 lods jge push mov push pop test or cld push sub and pushf leave jge (bad) cmp and or (bad) enter iret adc loop xchg pop push dec ret daa sub jmp gs movsb adc stos pop mov sub inc adcl stos sbb pop shr push mov mov adc pop repz scas aad fwait adc loopne bound cmp push lds or jl ds ret loopne mov pop and lcall std sbb ljmp mov add fmulp int into gs test es (bad) das xchg scas lea adc jmp scas lods push repz jne into mov popa cli jecxz cmp enter sti mov cwtl cmc add xor lea outsb stc sti ds imul jp mov sbb pop mov or aaa call sub out jae push sub fstp mov out int3 dec stos mov add xlat mov fs call sub inc cmp nop mov ret xor pushf xor mov add push (bad) call jge adcl sub adc jnp xor fldz mov inc or sub lea (bad) jo dec jae mov insb daa mov jmp sbb or cld sbb add rorb jno dec mov jmp jo xchg leave lods (bad) imulb repnz adc cmp loopne call sbb test mov addr16 stc ss aaa loope or xchg aad incb mov in or xor dec fs decb jg arpl sbb xor pop inc daa xchg (bad) (bad) repnz push cwtl adc dec dec std pop stos inc mov out jne aam test jecxz arpl sub cli (bad) nop shll dec rol mov xchg movsb xor aad push movsl (bad) xor xor (bad) jmp mov pop and pushf mov dec cmc fimull int3 mov sarb mov mov jo aas xchg imul lea (bad) sbb dec push inc inc lods popa xchg ss lods push popa ljmp outsb outsl pop scas sarl std add jae mov (bad) jnp push mov icebp popa (bad) jecxz inc lahf jne popa jb ret mov sub inc lods xor xchg jp popa stos jbe xchg addr16 sarl pop xchg jb insb push inc jno lret in pop ficompl (bad) shrb fisubr xchg scas sub ret dec sbb iret mov sarl nop inc push mov pop clc std adc pop loopne imul in mov das xchg (bad) pop lret cmc jmp scas mov out ljmp fcoms lcall pop and inc jl push jbe movsb cmp (bad) adc ds inc pop hlt fcmovne cltd sbb imul add mov lds add sarb adc lods add ja xor lret movsl cmp aam mov leave pushf cli and out xor mov (bad) push and rcr in fcomip fnstenv mov (bad) iret ss push add fiaddl cmp repnz dec nop or mov and addb adc andl inc fiaddl jecxz pop incl fwait fs shlb push xor push mov pop or lea adc mov jb popl in dec xchg jns insb les mov pop (bad) mov es test call test cmpsl push jo xor dec in xchg mov pop frstor cmpsb mull jge xchg lret mov pop jmp test inc xor or mov repnz js add dec xor dec outsb lahf (bad) jmp cli sbb sbb orb sub sub push sub jne mov leave ret out out js jecxz addl and lahf push inc inc (bad) xchg mov push (bad) les std xor int3 loope fiadd cwtl and mov adc fwait fs je inc movsl adc push push sub sub push cmpsl xor push sub movsb dec test dec jo arpl rcrb cmp cmp mov jecxz fdivl push cli mov test fs inc stos les mov movsb cld push nop stc jmp or cltd add sub mov into adc xchg and pop call ficompl test sbb fidivr popa popf (bad) ret inc ljmp (bad) dec std cmpsb sbb ja mov repz bound lods ljmp lods stos dec dec jne or or push loope lods cmp cmc in fisttp cmp mov aad mov call mov mov shrb sbb cmc or std aaa mov xchg mov fdivr mov push aaa xor sbb xchg add (bad) xchg xor fwait mov sbb fild mov bound sub dec jl mov mov xlat lcall mov add repz mov add dec sub ja dec mov cmp test push cwtl call (bad) adc xchg (bad) ja add push jb push and adcb data16 ljmp add or (bad) mov push inc outsl or pop cmpsl push and sbb sbb dec dec mov mov rcll xor imul adc in arpl sbb (bad) insb stc imul outsb ds aam ljmp test mov ja sub adc add fcmovb mov mov lret je xorl loopne in pusha adc lret pop mov xchg popa mov xchg das int3 bound adc cltd into lock loop sbbb outsb mov fmull push push cmp dec xor iret adc jns call insl sti dec insb mov adc jmp jg mov inc and xchg sbb mov jno xor sub or les mov fs dec imul mov jmp jne into shll ret (bad) shrl daa push int3 jle sub fwait shr jg xchg cld outsb xchg sbb jl mov jo cmp mov insb sahf jnp (bad) jbe cmp or hlt mov shll outsb push push subl push jo clts nop mov lods enter mov test push loop in sub push mov dec ljmp rorb repz mov ret dec stos call push sbb cmpsl jb jp js and pop and or jno popf jmp hlt fucomip dec mov sbb ja nop cmp pop les ljmp jle daa (bad) notl push jno out call movsb jne push jge cwtl (bad) pop pop dec xor pop out adc jle mov add dec hlt fstpl lcall aam movsl sub ss inc ffree jno push aas sbb dec dec inc jne ds xor (bad) sahf jecxz mov sbb and rcll rorl mov (bad) mov insl cmp rcrb and jnp mov and adc jge mov jns inc pop dec pop dec imul in shr inc mov lods fimull pushf dec cmp sbb and leave push std mov xlat mov cwtl out popf dec fsubrp xchg pop adcb mov test jb mov push dec dec xchg dec inc add pushf dec outsb rorl call inc and xchg inc pop sub jecxz cli sub lret xchg cld loope icebp shrb loopne clc and xchg cmp xchg fistpl lods stos mov sub lods pusha xchg xor out sub sti add (bad) push push add xchg (bad) in or out (bad) js repnz push push jg pop xor mov sub hlt and jae test scas mov dec jp or inc aad mov push jmp dec cmp aad push inc stos push ja mov push cmp cld sbbb out pop (bad) cli (bad) daa (bad) xchg outsl loopne les iret sub add push fwait and xor lea jmp out sbbl movsb jmp push dec cwtl or mov sub aas jmp pop mov or lea pusha repz cs popa xor lcall xchg xor pushf mov (bad) push sub jge adc mov (bad) cmp adc sahf inc (bad) enter (bad) xor mov mov (bad) and lock mov lods mov scas fdivrl std adc jnp incl outsl push inc push sub pop fisub pop xchg xor decb xor cmpsb dec iret inc test jl add scas (bad) inc ss scas sub test inc mov dec js and and or addl pop add mov in ja sub outsb (bad) ljmp push xchg mov stc lret and xabort jmp stc dec int3 es adc jmp dec and ror xchg fidiv dec mulb ret xchg sarl cli mov icebp mov mov clc scas repz pop xchg and cmc jno or inc imul ljmp les jecxz (bad) mov ret popf jne xchg xchg in insl adc cld int3 mov jl adc mov adc test jnp pop test cmp add mov push add cltd in push add mov jmp ja sub adc pushf fs pop (bad) in mov adc jns or loope add test push int3 adc push ss push mov xchg fcompl pop bound pop adc movsb xlat mov lret add jmp dec xchg stos cmp enter push stc or mov popf xor sbb xchg test cltd movsb ficom jg adc sbb loopne mov repnz add mov push lret sub inc xchg xor shr ret jno in popf pushf lock aas sbb cs fsts negb push out jbe cmp in adcl roll pop pop sbb inc mov js hlt xor fwait inc cmpsl cmpsb jne lds pop fldenv pop pusha add outsb out and dec fs push nop das sub or sub lods adc add mov sub xchg xor add clc (bad) clc xor mov scas addl pop cs ds mov es mov mov jecxz imulb and and rorb adc jno pop test pop ds cmpsb adc jnp or movsl imulb imul push int3 cmpsl insl or stc or fild xor push mov sbb aas test outsl jne xchg cmpsb fisubr movlps (bad) sbb push push mov sub mov cli (bad) xor push enter mov mov jmp dec je or pop shr mov add mov and push mov dec sar push xchg push addr16 xor inc out pusha mov mov adc fidivr dec (bad) jno jnp (bad) or inc je lods push inc rcl out mov pop hlt pop aaa movl out lret pop sarb jmp xchg das (bad) aam out daa lods out insl fwait and cmp lods idivb or pusha scas jno mov aas out xchg inc jbe dec pop adcl stos cld sahf mov mov pop in and shll jge pushf ljmp outsl cmp fdivp or mov inc inc jl sbb es mov mov sbb popa mov mov jmp (bad) mov ficom aad sti int mov xchg fdivr popl fcmovnb enter (bad) xchg xchg inc or fsubl jb sub jb mov xor movsl pop jno (bad) sti add stc cs xchg icebp mov bound pop and xor test ljmp mov fistp mov outsl (bad) jno mov loopne test sbb xchg mov sbb mov fidiv jne fbld ret mov (bad) push gs pop pop push int3 pop fwait out aas sbb adc scas popa mov lahf sub loop or push push jmp add mov mov outsl fdivl jmp in push aas inc lods sahf mov mov out (bad) push cmp pusha mov cmpsb cld cs mov mov std in daa cmpsl negb pusha jno out xor jno cmc into ret mov inc fwait scas stos (bad) shll xor sub fwait mov aad xchg test cmc xorl adc dec (bad) push scas xchg sbb cmp pop mov in out jmp imul je jmp cmp dec mov in int dec sbb int dec sub dec loope pop mov jge inc mov xchg cmp mov or mov mov or xchg sub outsb push mov in pop sub popa pop stos stos repnz fwait dec or push ljmp push das xor popa or jo cmpsl mov ret cmc std cmp cli in out call fdivl mov sub pop xor push fdivl push dec lahf lret mov add jae leave lcall enter rorl ja inc mov loop cli sub popa adc fs sbb mov dec xor xor pop imul fildll fbld fistp jbe mov loopne (bad) xchg mov add pusha aad stos and movsl jnp push push jb scas iret sub dec add icebp mov or and jbe ljmp xlat cmp stos pop sub or cli ds add mov push cmp pop sub and cld pop mov sbb jne fild mov mov jns mov add mov dec in pop jns push mov clc and (bad) or iret sub out sarb jo int jbe xlat test jge pushf repnz sub (bad) loope push (bad) pop lret ret imul lock dec mov push mov jne jl adc enter cmpsb das iret call mov dec outsl mov sub scas cmpsl insl insl cs shll or xchg pop dec xchg test pusha daa push xor cltd lods sub loopne adcb gs xor lret dec xchg mov inc xchg ficom test fisubr outsb iret xchg cmovbe mov imull mov jns sub xchg xchg enter sub out adc lcall add idivl mov adc iret in (bad) iret inc stos dec mov pop icebp dec jo xor mov xor (bad) fiadd adc adc mov (bad) push aam adc cli inc pop mov dec ljmp out lock mov dec out mov xchg cmpsb (bad) or scas xlat jg push daa testb pop sti dec popf popa xor sub xchg dec enter push xor push sbb xchg (bad) jmp adc mov xor mov (bad) lock decl cmp mov pushf sbb in movsl orl xor std pop dec ds in ja repnz inc pop xchg dec leave push repnz cmpsb stos movsb jo add pop fnop jge push cs test cmp repnz mov xor mov or lea fdivrs rep inc sbbl xchg mov out in cmp pusha mov les test cwtl daa scas inc ja mov aam jbe andl jno sub out (bad) int3 mov adc mov sub frstor enter roll loope stos pusha ljmp test xchg insb sub push pop int ret fwait repz adc jno xchg cmpsb mov mov push fsubp lea pop ret int fbld fmul jo sbb vcomiss (bad) testb (bad) leave (bad) mov add ret int3 test cmp push sbbb data16 add test aam adc out jg xlat mov into push mov push inc gs popf or outsb jp fsubl xor (bad) addr16 in mov (bad) sbb cmc xchg (bad) mov mov jecxz aas mov adc cmpsb ss adc inc push cmp es es out lahf and mov adc insb sbb loopne lret jmp push ljmp and mov jbe mov test mov out fwait jno test loop mov sbb jle jnp push mov mov jle push in in cs mov mov inc mov insb pop pop sub push dec or or int mov cli fldl hlt dec push ficom inc mov icebp dec ljmp or icebp insl mov jbe rol shrb push jnp add add pop loopne popl popf cmp int3 cmpsl shll (bad) rcrb das mov arpl insl in push push push cmpl popa call repnz clc jae test adc pop mov mov insl call pop jge adc inc sti jecxz inc lret pushf add (bad) pop mov cwtl pop mov inc dec jp mov movsl xor add cmp rcrl push inc sub or out xchg je adc scas sbb xchg inc int ds pop insl mov sbb out cmp or nop and mov jg sti xchg or lret cltd arpl (bad) cmpsl loopne addl outsb push pushl sbb ss cmp gs in insb xor adc pushf xor jle lds lea enter bound insl inc mov or xchg out imul sahf sub repz test dec pop sbb (bad) enter mov cmc and xchg push cmp sahf jnp sbb xchg mov in lahf mov fldt test movsl fsubrl iret xor insb adc dec loopne push lds outsb data16 xchg mov mov mov xor dec cwtl loop xorl dec (bad) cmpsb mulb in outsl mov clc fcoml mov aad cmp shrl out push xchg adc mov push loop dec dec push push xchg test dec (bad) jae std sub outsl mov shrb (bad) xor (bad) mov and insb aam xchg cmpsl (bad) push jl xchg scas add movsb scas jb sub aad sub ja out mov les cmp out popf push inc mov cmpsl lsl sub lret sbb mov jecxz inc mov jp and cltd mov iret push fsub es test imul add pushf jl or cmp fidivr add and ss cmpsl jbe movsb lret or xchg out dec cld sbb movsb dec jb cmp pusha mul popa xor mov mov es sbb (bad) dec jnp push mov jmp test dec fcoml sub hlt addb lock call push inc cs xor (bad) popf dec clc test ss inc xchg outsl pop sbb inc push jae (bad) pop aas ljmp das mov dec ficompl outsb xor scas stos lahf mov jnp xchg pop cmpsb pop mov inc outsl data16 or test lahf xchg xor or lcall insb js and in insl clc lds addr16 sbb psllw cmp mov hlt xchg cmp cli xor mov xor in sub test mov inc dec fucom and mov mov gs (bad) or and pop sub mov mov jnp pop adc (bad) sbb rol adc ljmp sub (bad) popf sub mov sbb mov fs cmp mov jg cwtl sarb adc mov stc cmc mov mov or adc (bad) mov ljmp xor loop clc inc arpl pop pop and mov mov icebp jno sbb mov mov cmpsb xchg inc xor jbe bnd shlb test mov jae xlat cmp sahf xchg lahf xchg cmp icebp xchg mov (bad) push mov dec shrl das jo pop mov rolb stc push add inc out jno ret mov fnsave cli jle add pop leave push or sbb test fistl xor (bad) addr16 out daa or ljmp push sbb jp mov test sub add je popf pop ds lahf arpl lcall mov incl sbb scas (bad) imul dec (bad) sub or out push push add cld addr16 dec add loope mov fwait ja insl and jg sbb mov push or sub and mov jmp jl add push iret jecxz dec inc cmpb les sahf in (bad) out (bad) leave add lret cmpsl (bad) int adc pop rorl fisubr xor pusha outsb (bad) lock cmp mov lods in push clc mov or test inc dec scas les ja mov mov sti fiadd test xor les and xor jecxz fs jmp ja mov lods jne (bad) repnz mov pop adc aaa mov (bad) loop outsb dec mov pop push dec mov add dec mov push xlat sub inc mov lods (bad) pop cld shrb push (bad) cmp in jp xchg add mov adc cmp int3 cmc push inc and shrl cmp add leave sbb aaa mov sbb push jns lcall fmul loopne lret jecxz nop or call mov xor aam cwtl icebp shlb loop int xor adc jns enter cmc jb in or pop pmaxsw adc and jo ret test sub push pop cmp dec pop or sbb sub xor jb arpl mov mov push dec iret dec mov not xor in sbb inc imul fnstsw jl pop adc loop test push and jle xchg test fldcw imul mov xor iret movq cmp mov ss out iret inc data16 push int inc sahf xorl lea dec inc imul pushf (bad) leave push cmp (bad) mov out ds jecxz cmpsb cli inc gs ljmp testb (bad) sti jae (bad) or cmovnp fs notl enter mov stos inc fwait sub xor test mov popf inc push add out fdiv sbb cmpsl pop or jns daa cmc in leave mov push mov add jmp shr cmp sete movsb inc adc in pop icebp pop loope lret dec fsub mov outsb sub (bad) dec adc out xchg repnz adc pop addl lahf pop fs imul push (bad) add adc int3 shr pop stos ret add xchg xor nop push ret dec out (bad) insl hlt arpl and es inc test stos lds rcl popf jo shlb mov sub mov das jbe jns pop insb das pop pop cmp pop push loopne xchg ljmp aad lods sub test lcall pop hlt std (bad) jbe lret lea (bad) mov popf insl dec inc lock inc xchg mov insb nop rclb nop sub sti popf xchg xor sarl push or incb push lods loop push rclb lret adcb dec stos mov out div out lods imul xchg outsl or out test clc sub inc imul aam pop dec daa fsubl (bad) jb sub cmp shl jecxz out (bad) cmpsb lret imul xchg pop movsb sub lret jo cmpsl addr16 push int3 push mov dec cmp xchg cmp cmp (bad) fdivr inc push adc jb and add int3 cmp arpl shlb clc repz adc add fwait xchg mov sub or in clc xor test mov ds mull divl mov xor add fcoms ret sub cwtl jp push pushf imul jle sbb adc mov adc aad push pop push fstl cltd xor push cli jecxz out pop and fisubrl pop ret sub sub push pop lds loope pop das mov ss mov jle or lock mov cmp aas lds mov frstor dec sbb scas push jecxz dec mov cli in outsl sbb xchg xor dec jns mov repz inc jg inc jbe cmp cmp stos cmp cmp jmp add lret scas inc pop mov adc inc sub imul mov test xchg stos mov sbb xchg (bad) lea cmpsb mov jno xor jg mov insl mov xor pop jge inc lock outsl pop leave add push lods pop xlat dec roll mov fs rclb cmp mov adc lds in mov out dec orb aas cmp insl mov sub jp sub inc xchg std (bad) mov jmp push push gs xor repz cmp aas ja leave xlat fnop push inc inc xchg cwtl in repnz mov dec jmp mov imull fmul and or jmp mov mov stos ret fistp inc mov std sbb arpl insb xor xchg lods cmc and mov dec lods enter icebp popa push std dec xor cmpsl fmul movsl sarl outsb (bad) cmc pop cmp or inc dec aam adc mov mov pop jecxz dec sbbb dec add ljmp dec add mov imul mov pop mov mov imul mov cmpsb idivl dec xchg add jne loope (bad) cmc out and ret mov scas sub fwait outsb xor xlat sahf stc or popf stos jl repz fistpll out xchg jbe dec mov jae lods jb inc cmc pop xlat in push (bad) pop insl sub push lds and jae ret fwait sub iret jb jmp jp out repnz scas mov mov in daa mov movsb sbb loope mov and clc cmp leave mov jge jnp fwait and or stos imul fldcw lods sbb pop enter or incb cmp push dec mov nop sub lds mov enter inc push clc xchg lahf ffreep pop xor imul mov mov or sbb and or sbb shl lret sbb stos ret int (bad) adc adc out jp mov sbb (bad) outsl aaa (bad) mov xor in out scas rorl or jecxz xor jmp pop jge cwtl decl and (bad) iret cmp cmc loopne sub stos (bad) xchg hlt add inc loopne (bad) jg test lret jbe insb push or push sub insb fidiv dec mov jg cmp xor (bad) loope,pt mov popf repz std mov neg xor pop sub dec sub dec mov aam sbb (bad) mov (bad) sbb cmc gs and in lcall js (bad) sub ret loop mov adc sahf ljmp dec and out push sub mov dec sub push (bad) fisubrl (bad) (bad) dec jb dec inc cmp dec insb mov xlat pop je cmp pop mov nop lret or (bad) sarb aaa ss pop mov dec mov xchg imul jo mov sbb xchg mov inc mov adc nop mov insl adc or clc imul movsl sar lods in dec and pop mov jle sbb popf inc inc je lock push sbb mov loope mov stos movsl jne xor add daa cmc mov pusha inc push pop sti test stos mov ja cwtl sbbb sub or inc cmpsl push icebp into out xor adc ret mov push cmp adc jne mov adc ljmp fwait mov or rorl (bad) pop mov cmpsl lea mov scas or adc push inc data16 or rolb mov jmp push rorb fmul and iret xor loope sbb enter sbb dec or ret xor pop mov cmp push pop mov mov sbb or rorl adc into pop std es lods (bad) ja dec inc (bad) push pop es or pusha cmpl cmp xor je or setne les jp mov push call inc daa cltd xor push sub insl int clc jecxz jp popf lock sbb lds lods js pop ret movsb imul bound inc inc test insb mov fimull jp jmp sbb (bad) (bad) dec je cmpsb outsb cs push rorb idiv ljmp inc nop ret jl loop mov std xchg sub iret push cwtl (bad) lret dec (bad) dec in fistpll jbe ret mov shrb aaa mov jnp mov std and jecxz xchg iret xchg sub jns xchg fbld push stc lahf dec gs push (bad) idivb xor pop sub mov popf mov pop cmpsl ds fs mov push cs je mov pusha leave fs mov or xchg (bad) pop push std sub add leave loopne (bad) flds inc xor cwtl jmp pop pop jl xchg not shrb push cmp push add mov in lods aam jns inc or movsb xchg push fildl mov xchg dec xor js add add sub xor sbb stos pop push in jp mov cmc add mov dec icebp movsl or adc xchg pop or xor xchg dec cld sbb push add sub jmp mov inc inc xor jge xchg dec lds sar sbb pop pop dec mov lcall pop push pushf jno xor test jle cmp dec pop dec jle test aad and cmpsl movsb movsl jecxz into sbb scas enter sub and out ja cmp rcll fmull adc mov xor out negb mov xchg add or or mov mov (bad) fistpll pop add jo fcomps ss lods mov pop (bad) sub fwait enter cltd jnp pop mov subl gs mov nop cltd and scas pop pop movsl jbe popf ja (bad) xor mov mov out outsl lret mov push movb mov es lret jmp mov or sarb mov pop mov (bad) insb pop xchg sub jnp push imulb adc stos xchg lods mov adc xor cld scas inc mov fwait imul imul dec inc out inc fisttp pop mov mov pop popa xchg lods lds rorb dec jp add mov sub sub add orl cmp and daa imul xchg push pushf sarb (bad) and pop lods jmp mov fs leave (bad) insb je cmp jecxz adc sub adc icebp adc mov (bad) pusha mov pmaddwd inc add jae lods imul add mov add pop add or lods test jge mov cmp sbb mov (bad) int adc push (bad) ss sub inc bound icebp fstl das inc or rcll movsl sarb xor jp lock in bound jo ror subb lcall or jl mov adcb sub dec stos cmpsb xor mov sbb mov rcrl nop lret inc scas lds xor or bound cld aam mov jg mov mov or je jle push cmc xorl cwtl nop pop clc lahf xchg mov jns out pushf mov cmpsl xchg and push push inc adc aad jbe push imul jne pop xor jmp roll jg pop jg lea jb bound int3 sub jo scas cmpsl and aas int pop out push test std in xchg lods mov (bad) leave adc mov add or neg push cmp push into cmc subl cld ljmp mov inc dec inc out xor nop cmp push cmp cmp sub shll mull jle mov jne into or lods mov aad sub ja push inc xchg scas lcall jg stos loopne mov loop sub mov pop pop mov test hlt jge xor pusha pushf pop or aad iret mov push insb or push (bad) lods cltd aaa sbb fsubs cld xor lret push aas push out sub mov test mov mov mov push mov fistp inc pop sarl cmpsb jmp inc xchg int3 gs pop cmp je imul sbb mov inc adc mov jae arpl js jb lock (bad) std hlt imul sbb pusha lret push xor xchg pop in fstpt pop push imul insb rclb inc inc sub push out mov idivb jp or stos inc int sbb (bad) decb ret inc xchg inc dec dec insb sahf outsl and arpl hlt cmpsb sahf jle or push daa and incl mov or es dec (bad) xor rcl xorl xor xor cmpsb lcall mulb daa movsl inc in (bad) (bad) call fadd cmp mov out sbb push fisubl jmp mov lahf es arpl imul loope test loopne lods arpl mov lahf loope cmpsl adc lock pop imul test mov or cld test push fs ss iret ds aam mov pop dec xchg ja enter mov dec scas dec sbb aas ret inc pusha and (bad) icebp mov loope xchg cld mov add xchg xor test mov sbb test push nop js mov dec iret test jbe popf jge cmc mov stc shrb push lahf out cmp jns aas jns xlat (bad) (bad) int3 xchg shll add pop pop adc push dec sub xchg mov pop outsb mov cltd imul mov repz js test jge mov inc mov xchg nop mov xchg lods xor sbb jne jg test xchg out js movsb add lret push (bad) dec xlat mov mov loop mov cli std mov and in sub loop (bad) fsubr jp and cmp aad fidiv loopne sub dec ss mov add (bad) mov scas push xchg pop fs lock push lods and popa and mov sbb xchg daa pop mov ljmp stos out mov sub lock mov push mov push push decl outsb xor flds test xchg adc jne imul sbb and fimull and in adc data16 ret (bad) sbb cmpl cmp mov mov aad mov stc sbb notl imul (bad) lret fistp pusha in jno mov (bad) call mov fiaddl xor and adc cltd outsb into outsl inc into test mov adc sub mov sbb inc jmp arpl mov mov mov cmp sti xchg jg gs aaa mov xchg cwtl push adc (bad) icebp lret push out (bad) cli push out xor mov sub lret (bad) fist nop leave sub mov loope or add stos dec mov movsl int mov mov mov mov in cmpsb jb repz inc sub nop and lcall rolb jecxz leave aas sahf inc push jb lds dec sub nop mov popw mov outsb mov inc mov sub push (bad) (bad) dec xor push popa or into cmp mov push sarl inc or stos adc aaa mov ss repnz push test stos cwtl mov adcb push fidivl mov cmpsb pop sahf insb lahf scas mov (bad) dec xor cmp push movsl roll psrlw shrl mov lea inc sbb out sbb push jne (bad) dec add std data16 aad add mov aaa cmp cltd sub xor (bad) or push test mov hlt jl js push lods cmovp in arpl pop out roll ret fdivrs les pop push ret mov push and mov and xor mov inc xchg testl mov dec xor fsubr push pop lods test fdivrl out adc int inc movsb mov in fbld out sbb or sahf insb fldcw push pop push stc pop sarb push mov sub sbb das inc cmpsb pop add xor jnp sbb mov jno movsl sub and fsubrl gs loopne iret push sti shll in inc lret lahf inc add popf push jo out out in xchg dec mov push scas out sub xchg xchg in sarb int pop std pop ljmp jl leave pushf or iret fcmovnb (bad) pushf add add popf dec iret pop mov outsb int3 clc repz inc cltd pop cmpsl aad adcl mov ret into mov mov cli inc sbb inc adcl (bad) ret int3 mov mov mov out bound adc cs or pop les push mov stos dec call dec movsb testl dec or call cld mov mov push enter jl push push stos leave cmp xchg inc jle mov stc sti inc call xchg divb xor sahf enter cli (bad) sbb int3 adc mov aaa inc nop jge cmp push xor or inc bswap out jle shr push sub adc jg popf fsubrp in ja rcll mov sub pushl push push xorl sbb dec push hlt popf xlat or ret call mov jle mov lret xchg push stc lea (bad) (bad) mov jae loop dec sbb push mov xchg mov jle in jmp arpl mov arpl lahf mov aad notl lock sub inc cs iret adc sti push add and (bad) in das push sbb lret mov cmp (bad) imul pop or addr16 repnz or mov (bad) lock call out popa call mov addr16 inc les ftst mov lret movb adc xorb push pop adc enter jbe dec cmp dec pop xchg xor xchg sub pop loopne pushf in mov or xor sbb jle rcr dec stc jp mov das mov mov (bad) xor sub mov ja ret dec xchg adcl out or divb sub add sub lock sarb sub test repnz rol into mov and and in lcall pop cs incl (bad) int jbe jmp pop aaa aas adc inc dec loope mov dec repnz lahf mov imul cmc sub mov test fcmovnb loop pop sub rcrb mov repz iret insl add ds cmpl (bad) std lods loopne mov push dec insl xlat xchg inc mov lahf fdivrl mov jbe jo jbe mov repz test xlat and cmp push cmpsl add sbb cwtl and movsl das lret lods dec rcll int3 into nop mov fisubl fistpl daa int xchg arpl push sti pop arpl cwtl pop xchg mov subl pxor xor nop popf inc sub das xor xchg aas xor cmpsl mov lds test (bad) out mov and xchg (bad) lock pop xor sbb sbb pushf into pushf push mov lock mov shlb clc lods in xchg pop sbb and lret mov and xor push dec ljmp int3 daa cwtl gs cmpl cmp dec push fdivrl xchg inc cltd jbe mov inc xchg scas pop xchg scas xchg roll ds cmp mov daa test xlat sub and aas scas xchg mov icebp int3 dec cmc inc stc xchg mov add test lahf mov mov adcl iret sahf test loopne sahf cmp adc adc jmp or ja fidivl lods int int jns sub mov dec cmpsb mov fdivrp sarl sbb out icebp fwait loop out pop std loope sub popa (bad) mov push sub jnp mov je mov es out fwait xchg subb sub and mov lcall sub mov sbb pop (bad) xchg (bad) mov push sub rorb rcll dec jl mov mov cmp dec mov push fild (bad) mov and sub adc xchg aam nop sub dec xchg dec std mov mov ss (bad) cmpsb add adc or pop cld add push sbb sbb popa ds or add cmp aam sti mov nop sahf sub inc popa or test and xlat jmp cmp mov mov aad mov dec add movsl jmp xchg dec inc out jno scas insb jle or test cmovbe xchg xchg mov jne inc xchg mov jne push jne jle xchg pushf das and and adc imul cmp jmp mov jo nop das test (bad) fimull adc hlt pop enter insb sub rclb mov cmp push and ss out mov mov (bad) fcomps add add xchg loope (bad) push pusha push add sub inc mov decb les cmpsl xor add repz clc jnp test mov insb xor pop das mov inc roll dec lea push xchg cmp dec popf xor shll mov out repnz push lret push out pusha gs mov or cmp inc pop inc xchg es and cltd pop or in push or movsb rclb hlt mov push pop imul aaa push sbb jl pusha lock cwtl or rclw jmp int jp movsb mov lahf mov lods icebp shrl movsl jmp inc xor and jle pop stos sbb jge inc jno andb add loope mov jbe mov mov cmpsb jo stc dec mov sahf push out cmp ja je cmp lds test mov iret decb fistpll cwtl and das mov (bad) and ss sbb clc ret push lcall or pop jl xchg in inc inc adc test or repnz out dec pushl xchg (bad) cwtl adc adc ljmp dec and mov mov fstl mov jbe xchg push or inc ret ds push mov pop pop enter mov fsubl add rcll pop and push jmp out and push mov ljmp mov test sub add popa jns lret mov inc in add pushf jno negb fimul imul push and out sbb loope add (bad) cmp xchg inc movsl loopne loopne xor adc js fldt outsb and nop dec push mov xor pushaw cltd ret insb jo push inc mov mov idivb in (bad) jle xchg xor mov and pop pusha jne lea push test movb enter in loope cmpsl outsl inc movsl add aad ficomp fwait jo add adc addb cmp push out xor aad mov fnop in push not rcll dec mov and xchg sub sbb jl fiaddl mov sub or xlat cmp push push xor outsl cmp inc mov ret loop data16 loopne jnp es in (bad) mov or repnz push rcrb sub test and stc dec jg imul cltd and dec arpl fsubrl outsl sahf jne and lods (bad) call iret adc adc inc popf addr16 pop adc push ljmp cmc and pop jp jns pop mov adc insb movsb mov fmull mov mov pop mov sub xchg xchg (bad) xchg fiadd je mov lock bound push sbb mov sbb inc pop dec dec push jl mov pop xchg inc jns adc jecxz inc repz xchg mov testl jne inc mov out inc in mov popf mov fsubrl sbb add scas sub fcoms movsl mov scas fistl divb roll mov xchg fcmovb icebp loop mov fmuls sbb ljmp fidivl testl ret xchg mov push test inc push sbb ds mov mov inc shlb inc je addr16 sbb pop test xor es popa out enter push mov dec fwait mov add push (bad) mov mov dec je mov push outsb fisubrl xchg lret out push jle sub mov fdivs jno push lea repz mov lcall aad lcall lds loop repnz jg xor (bad) sbb pop shrl call mov xchg sub in inc mov imul mov push add loope pushf mov xchg fwait dec sub je jne mov leave jb movsb fwait sub decl test sub scas or loope in or sbb mov test movsb push movsb push mov xchg sub inc xor add seta clc xchg out mov jp,pn cmp and scas (bad) jne (bad) sti add (bad) jne out loop xlat imul icebp inc pushf sbb test and or es xchg xchg enter jg (bad) arpl test inc lods pop or loope test xor adc pop cmp pop nop mov sub mov jmp aas and mov xchg test loop jne xchg jns stos popa inc test popa pandn mov add cmpsl sbb sti andb jne inc or sub int popa xchg xchg enter dec add dec mov lea out rcrl dec sti xlat shrb jnp cli out gs dec in int3 mov sub push adc mov or cmp xchg iret dec inc jg test sbb jl cwtl mov imul cltd sbb (bad) into movsl hlt aam out xor pop vpavgw dec jne inc rcrl (bad) js pop imul (bad) enter xchg ja andb pop add je dec (bad) xchg dec fistl push pushf outsb fwait pop loope stos ds enter and orl adc andb or (bad) sbb insb add cli sub adc clc stos hlt test test ljmp mov fucomip fdivs pushf daa mov lds jnp cmp out push cld aad jbe pop sbb jg notb insl or cs jno je mov jae jge data16 mov xchg cltd pusha stos mov pop mov sub les lods out jge cli pusha gs cmpl or scas jae mov (bad) out fdiv idivl lock xchg jo jae loope push dec (bad) scas jecxz adc jg or pop lds cld mov jb push push ja outsl cltd push sahf add or test sub or out icebp pop daa mov popa adc test cmpsl icebp fnstenv imul mov mov rclb loop into jmp data16 push and fs sub fidiv sbb hlt adc lock cmp divb popa lret push aas divb inc les sti es popf addr16 (bad) or push cld inc mov inc sub repz push (bad) adc sub (bad) test fsubr cmp ja jne sbb movsl mov jl pop add orl xor inc sub push push sub mov daa lahf cmp imul sub push mov xor inc adc scas mulps in mov pop mov cmp test mov divb cltd (bad) cmp mov add not mov popf add add js push pusha xlat sbb pushf test pop testl mov (bad) mov clc insb stos sub (bad) sarb pop adc int3 stc xor jnp mov xor pop call insb adc adc adc arpl (bad) dec and int3 mov push std push pop pop (bad) out adc daa jmp cs repz push (bad) pop cld sti dec aas cmp cld mov popf xchg insb and pop dec je lahf inc sbb push (bad) repz out jb subl and sti sub push dec cmp mov cmp ds rorl popa dec jl sub and (bad) dec jg xor (bad) sbb (bad) test dec mov idivb dec cli mov (bad) lods inc xchg cmp mov xor nop sub sbb add sbb out je dec cs aas sbb jne (bad) sbb arpl mov cmp push out repz cmpsb lea mov cmc adc cmp into dec icebp xorl stos imul inc in loop fbld popf jg pop mov test ffreep xor in inc mov jle xchg mov mov xor xchg xchg pushf mull aad add test jle loop (bad) mov notb jne movsl jp (bad) cld ss push daa pop push xchg xor stc cmp in fldcw enter cmpsl xor in lock xor sbb inc add test jle in xor (bad) test or xor mov cwtl cmp lods xor adcl lods mov mov mov sub int out enter subl cmp add subl (bad) int ja bound ret push (bad) test les int3 xor inc pop and into clc jecxz or adc imul jb mov jo adc lds lcall or jbe mov mov out sub repz je adc punpcklbw jnp pushf das ret mov adc dec fcmove nop adc pop inc fsubrl lds or lret std xchg sbb enter sar push mov jns scas pop roll inc sub ljmp or xchg adc repnz lock lods push or mov xchg shl add jecxz popf loope out iret sbb sub xor (bad) lock pop sbb lds pusha in das insl test addr16 jne sti or int (bad) icebp dec stc mov test mov mov fnstenv fist adc es test les popf loope mov les test xchg inc inc pusha pop sub test gs dec xor shrl lret daa lea outsb icebp pop adc out cmp lea mov add mov xchg loopne sub mov and push xchg and (bad) mov scas mov mov sub push std aaa push je xchg out out or jp add std lods daa scas cmp xor or cmp (bad) xchg mov fwait int nop lret stc out xlat cmp lcall jno xchg push xor pop andb icebp addr16 pop fwait jno jl xchg dec (bad) xlat aam push into pop push sub roll fadd dec xchg rcrb nop js mov loopne imul xor push jo jae mov (bad) sub into lock xlat aad insb mov test dec insb test stos (bad) test popf mulb bound pop fs mov imul pop sti sub and and lea leave fcoms in shrb push adc fistl inc push sub inc pop in scas xchg jge mov ljmp orl pop mov pusha adc cli jmp ret xchg fsubrs ja dec jp adc adc (bad) or pop stos and jnp adc fwait fs mov daa call das cltd std arpl lea or jmp push jge mov (bad) (bad) xchg inc cmp sub pop inc aas xor or ja add imul data16 out mov fldl outsl test lcall divb fldt gs mov cmc inc test std push xor pop in (bad) int3 or or jns mov test pop push jge lcall adc lcall cmp pop imul fcoml sub adc shll adc push push leave ret ret shll orl mov dec movsb addr16 push cmpsl aam mov xlat int add cmp push cmp jb jge sbb in xor inc mov jbe mov test js lods dec (bad) dec xor inc dec fisttpll test insl inc cmp push xor adc xchg add das psrlq js dec push (bad) mov jae fdivr jo cmpsb or loope mov sahf fcmove (bad) cmp lahf or adc push mov out clc jle imul push jge fist mov jno test sub outsl ljmp sub mov aam xor in xor add xor das push xlat mov mov xor iret cmpsb out loopne fwait adc int xchg or xor int3 movsl je pop clc (bad) xor dec jno and xor aas daa pop imul push stc mov jne fstps sbb sbb lea and aas push and das nop ljmp dec xor jecxz (bad) pop mov out ss cmpsb mov inc pop mov nop out ret (bad) std bound lahf cmp mov xor test or jne pop ret jae mov movsl sbb aas hlt xchg int pusha (bad) fcoml cmpsl jecxz xor pop iret cs dec jno fs fstpt xchg pop mov mov out les sub (bad) sbb movsl inc shrl xchg mov fnstsw stos jge cli ds xor frstor lret mov cmpsb out mov xor and xor sub add mov mov mov or shrl jne mov jno lahf mov inc (bad) jmp stos test push cltd int cld jmp push sbb mov sbb call dec push stc mov xchg cmp ror rcl insb enter (bad) mov outsb fst add lret cmp mov fimul movb bound rclb lcall xchg cmp xchg pop stos repz sub dec outsb (bad) sbb lret mov jo add xchg cs aas cmp pop jecxz loopne pop dec mov imul sub sub xchg out mov push addr16 cld adcb cltd xchg inc rcrb xchg jmp clc ss test add icebp mov sub js (bad) mov sbb aad mov sbb xor aaa int cmpsb je and sbb xchg test mov lods mov fcompl rclb lret imul adc lret mov pop xchg pop sarb movl js sbb inc (bad) fisub leave cwtl ljmp push or cmp int3 lds inc pop fcoml push sbb or fcompl mov and dec sbb idivb shl (bad) ja lds popf ret mov rolb ds cwtl mov pop mov in insb shl mov mov jne xor mov sub push mov addr16 es xor lret push cmp and adc push pop lock jns stos in fwait punpckldq sbb (bad) pop in sbb pop imulb jmp pop enter and sub cmp les or scas sub pop xchg xchg es pushf popf mov jmp dec cs push jnp cmp inc xchg pop int3 lea jmp jmp xchg pop mov adc mov fisttpll rcl mov out inc dec pop xchg mov cld fstp xor mov push xchg xchg fisub (bad) lea inc mov jp mov mov enter sbbl mov pushf xchg daa or les into cmp je call mov jns cmpsb movsl add fildl ja push mov rcrb es shll subb lock jp repnz jae icebp psraw lahf cmpsl lcall es cmp cmp push push repz test add jbe cmpsb cmp daa pop cmpsb fbld insb or xor in cmp push push pop push aam mov (bad) call pushf jae mov faddl sbb pop and adc add insb push jne dec outsb cmpsl xchg bound test imul cmpsl mov idivb inc xor inc sub or jbe ljmp mov and es cmp inc xor mov jnp or xor shll or sbb ret push lcall arpl orl enter mov test repz ret cltd adc aaa lock out push cmp xor stos inc cs popa ljmp (bad) aam inc jns cmp xor mov or js rol andl sub in sub icebp inc xchg enter and ljmp fcoms push or mov pushf popa lds and cmp cmp cmpsl cmp adc les dec ss fisttpl (bad) push mov add rcll sub loop inc ja stos aas mov dec adc mov int mov arpl ffreep sub push or jns add mov (bad) out loop clc push movb out or repz xor cmpl (bad) fucomi push stos movsl sub dec mov and inc dec in pusha push imul pushf (bad) idivb mov cmp fisttp vmovaps adc fimull pop es mov test ficompl mov inc xor es fs lods loope xchg mov push scas pop fistp mov outsb scas lock stc inc das out pop sbb jno addl cmpsl aad mov sub shlb cmp fadds scas jge loopne jb repz fstl fs xor sbb lcall into or jp dec jb aas mov clc call cmp rcrl mov jns pop addr16 xchg mov lock scas jg add mov test sbbb jle sub jl (bad) imul push adc outsl movl aad in push jno gs lahf inc pop cltd pop cmp mov xchg mov out inc xor xchg mov or fbstp push cwtl push fadds in leave clc (bad) sub jmp jo out gs inc or js cmp aas in sub stos mov xchg icebp push out mov cmp ds insl jnp mov in je add (bad) sahf mov fwait mov jb mov orb rclb pop out xor in pop inc sbb and scas int3 jecxz mov (bad) push daa cmp sbb pop pop out push sbb xor pushf insl (bad) iret cli and (bad) mov jge push out mov mov dec std mov iret sub push jmp sarl mov ret pop lods (bad) enter add push ret inc cmp sub push jle cmpsb adc lods push xchg gs dec arpl and rcrl cs fdivrl mov addr16 sub pop f2xm1 pop in add aam jge int push sub aaa xor mov mov aaa xchg outsl rclb jmp cmp dec into jecxz cmp ljmp cs loope pushf or mov scas mov cs mov and (bad) movsb push out lret push xlat (bad) mov mov xor sahf inc pop jns clc mov adc das dec ss xchg sbb (bad) sti dec sub data16 call insb ds jae shrb fsubl lock in and sahf sub dec push ficomp lock call dec rep mov movl lret scas mov push arpl xor push pop insb pop popa add jnp push mov xchg test sbb mov inc daa ds nop add jl movsl pop jno insl cmp push sbb mov lahf testb jmp pop adc std (bad) xor pop clc push inc xchg xor pop mov jg cltd xchg mov xchg in dec mov cltd dec out xor lods push add das pop add lods inc mov dec sbb jg jne lods xor jbe inc in sbb xchg dec jg mov dec cltd mov dec test mov test jnp cmp stos xchg sbb adc jb xor dec and mov pop leave (bad) dec out add dec sbb cmp jnp out in jae les sbb push stos xor mov fs movsb sub mov jnp insl pop (bad) leave cmp pop push mov or lock sbb lds pop (bad) cld xor fsubl outsb push cwtl dec pop rcll (bad) lods and jmp sub jo xchg aas call imul mov cmp push mov fs jne sahf add jle std dec scas (bad) xchg jae xlat dec jo out and out leave adc push dec jae and icebp stc push ror fidivrl cltd stos sti sbb jae (bad) insb mov pop dec xor ficom mov movsl rcl pop std mov mov fcmovnbe test dec adc sbb leave les jo andl add xchg xor (bad) fsubs sub pop adc and in fwait pushf jmp bound mov inc sar push fdivl sbb inc (bad) mov rcrl in sub repz jae (bad) stos fsub inc add shlb xchg push fldl ss sub mov mov es mov pop int3 sbb jne xchg pop adc test cltd cmp sub pusha jge test jno xor in divl or cltd and js adc fistpll cwtl punpckhwd inc das in mov lea mov xchg rolb cmpsb inc cs test mov and ljmp lret mov into in inc mov dec push xor popf jns inc push int3 popa addb cmp xchg movsl mov mov xorl movsl xchg and pop inc push es mov mov jbe out jbe sarb jo xor iret bound pop mov mov jg (bad) mov out sub (bad) push xor mov fidiv add dec mov push pop arpl stos stc add ljmp mov fisttp imulb jbe jg incb and into mov xor test xchg or out cs and outsb jl test inc aad idiv cmc shll lds dec dec in lock daa lds pop sub jge sbb idivb pop mov loope jmp fwait imul dec fwait mov xchg push add je lcall xor xlat adc push int or mov dec or loopne iret cmpsl sbb stc mov imul or mov sub cmp aas xchg pop mov mov jb mov and rol mov jle aas leave aad aaa nop or and pop mov mov rcl jmp call inc mov es cmp (bad) loope mov je add mov xor mov movsl addb outsl cmp push rcr test das lds leave pop call pop pop pushf or cmp scas inc (bad) lcall inc sub jno pop (bad) repnz sub push push sbb pop test xor jae dec iret scas out or clc popa and sbb test lds test outsl jg mov mov add pop inc push adc repnz icebp sahf pop (bad) jp stos jae int3 xchg out pop add and movsl xchg fwait (bad) imul imul sub inc mov pop push mov fsubl mov sub cmp out jp or test cwtl sahf or xor jne mov insb aaa mov outsb push clc (bad) pop aad movb call pop pop inc mov inc push enter push (bad) popa loopne imul pop cmp mov bound test xchg fdivrp imul push jae bound cli sbb xor cltd loopne gs mov (bad) daa fsubrl (bad) cmc std jae xchg fldl pop je out sbb movsb jno mov mov inc loopne dec lock ds in movsl sbb push jmp mov rcr inc insl pop bound mov push out adc jae rorb lcall jae sub sbb lahf aam jl inc dec fisttpll ja push insb sub fimul sub xor push fstpl (bad) testl or lcall pop shll ljmp cmp insb mov lret xor ss lcall jle loop test lret leave jae xchg and fucomip jmp cmp pop test (bad) sbb mov mov lds jg push mov jg mov (bad) loop or data16 mov rolb fwait insl xor xchg dec xorl xor out and xchg test fs fsts pop in scas mov hlt push cld test arpl cwtl in jle js cmp jae jge repz (bad) lcall jg ljmp int3 pop add mov mov popf mov mov sub shlb inc icebp dec movsl add xchg xchg shrb adc pop jo (bad) cmp sbb outsb push scas out les inc jno xor out fwait add loopne fnstcw insb scas ret adcl xchg mov negb push dec and adc fs je pushf bound inc jmp sub out popa pop and push andb dec scas (bad) mov jp cmpsb enter dec flds sub not add pop sub adc push jb adc jno daa xor sub cmp je mov pop daa mov add xor leave idivl pop in lods stos inc xchg lock mov cmpsl call dec sbb sbb xchg pop clc add dec loopne cltd decb sbb ret or xchg adc inc repnz adc jb xchg pusha xchg mov stos inc icebp pop mov leave ret and test lret sub iret or repz jo je out inc and sbb mov dec pop sbb adc cmp enter cmpsl lahf (bad) or mov (bad) adc outsb sbb bnd dec aam aad aaa lods test pushf sbb (bad) es test cwtl jbe idivb mov jne sbb icebp mov cmp (bad) js mov out jne push adc scas (bad) pop pop mov daa in movsb loopne dec and push or sub xbegin xchg mov addr16 in add gs mov aad mov or (bad) rorb jge jge jb repz iret push mov sti js and popf icebp mov in sbb ret pop lea adc xor aas pop bound lods mov (bad) test out rcr push loope loope inc pushf (bad) xchg xchg mov in cmc push and jae rcrl sub bound pop inc mov dec xchg lock fwait jge cmp int3 cmp shlb or movsb in test inc les inc aas adc loopne iret jl mov jmp cmpl out mov fwait arpl jge movsb aad jl mov sub lret jns mov cltd sbb xorb mov lcall ret mov call jb pusha sbb mov movsl inc sub adc negb mov push dec and mov or push mov and jnp repz add int inc fadd loop inc leave in add gs sub gs icebp push pop add gs or cltd xor (bad) lods push xor mov and aad sub ret iret xchg pop out push mov push mov add scas mov cmp dec jle pop xor repz andl dec scas ret jg cmp sub out jae jle jg mov mov (bad) loopne loope leave mov shrl ss out in lret cmpsl sub sub sub add or add jnp les pop xchg jecxz mov call pop jp fwait push sbb pop inc push sbbl mov movsl mov mov gs loop or push pop jp in ret mov sti pop xor push push mov ror sbb push or pop or enter (bad) addb shlb nop out lret dec mov dec xchg popf jmp sbb xchg rol inc aaa sahf and sub push pop sub leave test lret cld scas scas dec sub cmc pshufw scas in movsl pop loope stos pusha xchg lea xchg aam test (bad) dec push sub rorl ss subl inc rolb mov cld mov shr add callw adc aam push and lret in sub mov js shll adc jbe xchg jp push sub or in out jo imul daa scas shrl jmp lahf inc (bad) jl sub iret jbe cmp xchg fs ss les mov rcl mov pop cmp fild cld in mov test mov inc clc pop leave ss enter pop cld adc add push sbbb jg dec cs cs xor xor out cmp jmp dec push pusha adc pushf add mov xchg xor lds or mov pusha popf jnp mov or sti fisubrl xchg scas or loopne jno mov in (bad) les and call mov add data16 bound or icebp sahf jg mov lds xchg inc xor iret xor cmpsb add mov xchg xor pop jbe in (bad) jo sbb fcoml push aam xchg mov inc adc xchg add iret dec mov xor movsl enter loope pushw jmp mov mov adc sub inc jnp outsl mov inc xchg jmp frstpm(287 das out xchg mov dec (bad) push por stos xchg jns adc pop (bad) pop xor cmp push test pop sub cmp fstp in nop add jecxz,pt sbb clc jmp std mov jp (bad) ss pop pop cli psubsw push mov or cmp sub xorb fsubr frstor sub stos jge xchg jo fldt pop add cmp sarl sub sbb lock scas aas lock mov mov mov lods sub jne lahf in inc fnstsw or mov add jno fwait pop sbbl cmpl sub or xor adc xor xchg rclb xchg ja pop dec das bound mov in rclb je mov jno push cmpb or mov loope iret je mov xor pop pop std rol cmc or xchg jg pushf sbb lahf push push fnsave or jbe iret bound imul lret aas xchg or xchg push jno mov inc rorb mov xlat push xchg inc outsl es adc xchg mov dec popa scas test cmpl or xchg pop adc je jg cmp push sbb popf push push (bad) xor clc push cwtl xlat and and sub lods mov std push int aam rolb dec push xchg fild pop cmpsb aaa imul pop jmp lds (bad) je lret stos dec pushf pushf mov cs andl mov push sub cmc rcrb inc nop adc push xor xor lock in jl out daa inc ja push inc lods adc fs cwtl mov in fistpll jg call xchg sub cltd (bad) out int mov xchg (bad) loope dec insl lcall mov cmp inc pop cmp inc ds push xor xor aam lods lock fwait in add bound cmpsb jns or call test add jl mov fadds inc dec idivb xor xchg cmp les cmc jp xlat movsl add xchg cmpsl jne xchg orl sbb mov lretw jb push jp (bad) mov cwtl adc xchg cmp push fistpl xchg popa mov movsl pop lock cmp jle lret lret test (bad) jle sbbb mov in sub out lock or leave (bad) mov stos adc and clc daa mov pop push sbb or inc mov and mov leave inc or leave jecxz xlat xlat mov xchg sub or xor stos loop cli pushf adc jo xrelease cwtl cmp mov cmp lcall repz jno outsb shrl add mov pop mov jge or adc cltd rcl je jbe cltd xor ret jb out int pop fistpl xor jmp imul inc ficompl xchg bound sub and cmpsb pop xchg pushf inc mov daa sar mov (bad) mov dec (bad) fiadd clc in sub jecxz jae lods mov jnp fnsave iret jle mov fdivr rclb mov xor sar jae and icebp stc or pushf ret in shr les (bad) neg out movsl dec jmp jns mov or mov push outsb push decb dec outsb in and mov inc ds and in int js jmp push out lods mov xchg add pop sbb mov clc sahf cmp mov loope cmp sbb mov mov sbb nop adc adc test js add (bad) insl (bad) and gs jbe sbb cmp push mov icebp jne xor adc jg into mov stc dec and rolb dec lahf aas daa pop nop and inc jae inc sub mulb (bad) call xor inc xchg pusha test cmp popf xor cmpl gs out mov sub mov jmp add scas call pop int3 stos inc mov mov mov cmp add repnz pop fistpll xor or ja mov pop lea mov cmpsl and adc jnp cwtl hlt sbb das outsb rorb jne jae jge cmp enter mov shlb mov movsl or xlat (bad) out pop adc and ss sbb cmp inc mov fucomi popa shrl ds jl mov insl mov cli stos ljmp push stos loop push push dec imul es std (bad) daa aas xor adc into sbb mov or dec stos outsb loopne adcl mov adc mulb std in lret jmp jecxz arpl xchg movsl pusha cltd inc or inc mov shrb push bound in push aas mov (bad) icebp arpl pop pop leave lods lods int mov enter add jl dec (bad) sbb sub mov les lahf sarl add ffree pop inc insl loop repnz fmulp sbb push mov dec pop xor add dec nop test icebp ljmp push xchg sbb mov in dec movsl sub icebp lret mov (bad) aad xor insb enter fcmove pusha pop jg roll loop sbb mov cmp and mov sahf shr mov scas pop mov adc call ja scas inc out movsb push push pushf pop jmp add lods push mov push (bad) hlt mov xchg inc (bad) mov inc fdiv in mov lret shlb out testl dec popf cmp sbb roll cld jge stos sahf push orl data16 scas jge xchg adc adc adc cwtl inc mov xchg enter mov cwtl xchg jbe xchg jo adc into in pop sahf fbld popa data16 push or lods dec push pop or cmp fistpl push cmp std cmp hlt jge dec mov icebp or lock jnp mov xchg inc sub and leave enter xchg jg jbe mov mov or push mov jp icebp int3 mov lods fsubs rolb mov ret pop mov mov imul cmp divl pop pop jle pop add insb inc push or iret roll stc sbb ret sub push test xchg xor loope cmp and jno fsub packuswb sbb arpl scas fs in lret fidivl jne pop scas push xchg test sbb inc inc test push inc in test lcall xor sbb aaa ret insl sbb fcmovne inc dec inc fwait movsb insl scas fsubl mulb scas xor cmp lds xchg xlat inc and pop test mov mov xor jb jecxz testb int xchg imul push fmuls push popf mov adc in and popf mov mov fsubrs push jbe addb jge jbe fnstsw mov sub push scas mov cmc cmpl add cmpsb aaa fisttp mov cmp cmp add xchg (bad) mov inc pop and rclb xchg outsb popf push inc incb jg jl sub in popa mov daa cmp jecxz mov (bad) popa cmpsb cltd loope mov aad mov das fadd pop cmpsl dec jbe and movsb xor push fst cs mov adc scas push cmp iret vmovdqa (bad) mov in push pop mov push (bad) mov sti and inc fwait mov xor xor push push xlat mov test mov mov lods int inc popa sub mov cwtl repz dec push jb push xor lods jle mov pop xlat aas mov aas inc mov (bad) (bad) cmp clc lahf dec lret stos push cmc sbb mov sbb ss jnp arpl sub mov in sbb jp ss sub mov pop int out shlb (bad) jns mov (bad) loopne daa cs or push mov loop pop add pop mov pop insl sarb insb lds adc adc test cmp sub dec mov jg movl jecxz pop mov sub or or leave (bad) dec lahf or pop xchg sbb and push mov rolb into or xor jnp adc and mov dec add mov jno jns dec push inc stos repz ds hlt ja shrb iret or inc andl adc jne pusha mov add inc xor sbb cs add push (bad) mov push pop xchg lret pop add xchg das xchg in cmpsb ljmp addl mov cmp jne fstps stos in xor jo stc mov and xor cmp aad lahf sub (bad) stos pop aaa xchg test sahf add js shll and sbb mov mov aas test inc mov cmpsb push push bound stos fsubrp xchg loop mov inc (bad) cli mov mov data16 test and pop movb (bad) push adc adc pop lret lods inc ljmp push sbb out mov xor insl in and cmc add jno scas adc mov push rorb imul adcb xorb mov jmp (bad) cmpsl push or xchg scas adc sbb stos adc adc jno mov pop test or mov lods outsb cmp mov cmp jns push push cmp jae in xlat mov cli mov mov push out inc mov es adcl lea mov rcrl mov dec insb repz xchg adc mov (bad) xor xorl lods insl cmp mov or fsubs and call or test xlat mov mov mov sbb mov bound test fwait popa ret mov std or xchg mov push mov add or jbe call imul push mov movsb jno cltd les int3 mov adc (bad) cmp addl sbb das jnp cli mov cmp out jbe mov popa orb lcall outsl imul aad mull adc movsb loop (bad) jge jno mov sbb stc lds jno (bad) dec negl sbb inc pop xchg mov ljmp std adc (bad) rolb popa call add xor lods aas (bad) push xor cmp mov cmp iret inc setne je test adc xchg sbb ljmp imul push sbb addr16 pop les shl jmp mov sahf or adc enter jae inc inc sbb jmp mov loope pusha xchg ljmp add ficompl add xor cmp pushf ja lods sub xor movsl push add dec jb mov hlt aam iret dec and (bad) stc loopne jl ss imul cmp movsb xor loopne mov and inc or (bad) dec fildll xchg popf add push xchg xchg push jno push fisttp aad fdivs lret std pusha pop outsl mov push mov add sub fs test push outsl sahf loope cmc (bad) or fistl lahf jecxz imul mov sub lahf xor test daa xchg lea sub dec push push enter aaa fimull dec pop mov vxorps mov lret lods test loopne mov imul ljmp jnp inc sarb cmpsb mov hlt out into aas stos jo dec fdiv dec mov dec add mov jecxz mov aas or mov es mov mov orl xchg enter rorl sbb stc aam xchg add popf and inc loop leave or jb cmp xchg repz lock repnz scas stos jne fisubl lods pop mov fwait dec cmp gs inc mov or outsl xor pop into pop and lahf push sbb lock sti dec jmp cmp mov push cmp mov sahf cmpsl push sbb and sar push inc jae (bad) sub add and rcr xchg xchg mov out test pop pop and jne cmpsb jns lret cmp mov sahf push lods or push nop cmp lods mov and lock std fcomi scas push jg dec int push add dec mov enter in xchg mov insb shlb sub aam aam xchg push xor outsl rcrl inc mov push or sub adc dec fisttpll ds (bad) jmp cmp and sub push sbb add sar add rcl bound pop cmp pushl push mov dec lret and shll pop enter (bad) rolb and jmp daa mov pop testb fmul sub xchg (bad) xor clc mov rclb jb aad mov jno xchg pushl (bad) lods xchg jne data16 sub aas xlat inc inc adc div dec add add stos xchg hlt mov (bad) jb shr dec sbbl mov incl add add jno lods dec adc mov inc push push xchg cmpsl enter dec cmp orl cld mov add movsb jecxz mov xchg sub test (bad) mov push mov lea paddq int3 loop frstor xchg adc mov push (bad) jae sbbl aas int out or fistpll pop (bad) pop mov pop mov xor jmp xchg lcall lods out and fs in movsl push inc mov inc mov inc pop lods xor sub fdivr faddl add (bad) sub add dec push and mov xchg daa jb jecxz or shlb and push push push push in jle imul (bad) jp outsb int test push add mov ds xor or add movsb (bad) call in adc xor test outsl aad lods mov insb mov popf xor mov xor add or lds iret (bad) dec insl pusha sub inc pop adc out lcall iret insb aas mov xor into jle and fisub out jnp mov fdivl aad xor add and int or pop jns test xor loope or mov fldz movsb cli mov ss cmp inc aad fbld or test jne stos fcmovne repnz xlat jg dec pop (bad) out jp jns mov lea ds dec scas movsl add push cmovbe sub dec or cmpsb sbb dec outsl xlat dec push movsl jo push push mov jmp lods and cmp dec ja ret push cmp (bad) push clc sub arpl xor mov nop add roll daa (bad) or adc jl pushl add inc jcxz add dec mov mov mov (bad) insl push xchg nop cmp in (bad) and mov jge mov pop (bad) iret xchg cmc les int3 dec nop push scas cmpsl jmp out lock arpl add mov in sbb movsl out sbb insb sub lods add ud1 mov mov int3 movsl shlb mov jg stc dec jl adc jns repz push insl xchg push (bad) sti mov (bad) dec loopne pop test dec push xor pop push jno int3 dec push fbld (bad) fcompl gs in push mulb insl sbb or mov push flds xor xor push and test xchg xlat mov cmp push mov pop stos sbb bts and dec pop fnstcw adc or repz call dec mull mov ds jae leave das inc dec jbe in push cwtl test dec and clc rorl push push (bad) dec inc sbb push testb pop and rol bound ja rorl xchg lret xor fisttpl in sbb cmpsb daa arpl jge (bad) xor or pop adc xor sbb sub (bad) push sbb cld adc push xor testl mov dec lock scas mov cmp or push xchg mov pop push cltd das inc ss sarb insl jne push cmp mov push jae popa mov sub loop dec xchg pop mov arpl fwait adc or add mov mov push jnp fimul add mov shr adc loope jle das (bad) enter lret lea cmpsb push and push shr (bad) in ret or rorl push cltd mov jecxz adc jl cwtl xor sbb add mov es aam sbb sbb dec adcb jmp sub mov or cmp jb sbb dec rorb mov adc incb lcall dec les xlat in scas mov sub lret cmpsl lea test ret fstps shrb sahf sbb je sbb pop push mov pop arpl sahf test leave adc sahf jmp call or dec inc mov movsb cs loopne xor imul or xchg push lcall ficompl pop test shrb aaa pop arpl std mov lods cwtl xor ss inc inc (bad) sete lock mov xchg push in std cmp jl dec cmp add cmp (bad) pop mov mov icebp push lahf lods jmp je cmp xchg push pop adc in mov das lods push cmp xlat fwait pop addr16 inc sbb xor xor iret mov cmpsb or (bad) imul or icebp fnstcw sub adc loopne into adc mov jmp pop cmp cmp and sub call mov and and ret mov mov loop loop pushf xchg push jecxz stc mov adc sub aas add (bad) xchg push and pop (bad) jge mov cmpsl and mov lods aas cltd fcmovbe ss pop in cmp mov cwtl xchg out test inc sbb inc fsubrl mov inc push add loopne into aaa int cwtl loope jp popa mov inc repnz popf into push bound fwait inc pop pop xor xchg jge xor and loopne sub test lret mov push xor mov mov pusha stos and clc dec xchg pop loopne sub rclb mov pop les pop pop sbb fwait lds jmp push inc subl pop mov in scas andb mov pmaxsw push mov inc data16 mul xor mov cmpsb jmp test aad (bad) jmp jnp pop or fs sbb inc fdivs rorb fld mov pop cmp pop les ljmp lahf pop outsb push pop outsb cmp js dec and (bad) and out mov add and pop and dec lock imul imulb pusha imull in jno jae dec mov adc idivl inc stc loope ljmp xor cld es xor push nop sub jae clc inc test add pop bswap jge cltd punpckhwd aam pop and scas (bad) xor adc imul scas sbb mov jecxz sbb test jmp inc shrl bound push pop pop cmp (bad) cmc or cmp lea mov dec inc jno push xchg push lds inc mov repnz ror fldcw add jbe xchg inc test jle xchg pop ljmp dec xchg jnp dec and (bad) loope es fld inc jmp fnstcw out mov xchg push cmp fisubl cwtl mov ficom xor lret loope or mov pop out ffreep into xor insl fwait mov or imul je mov mov popa mov enter lret jecxz add pop xchg fcmove stos lcall pop add push popa cltd cmpb mov imul rorl jp mov jns hlt xor pop push add nop ss adc pop mov stos ja mov es fmull xchg sub les inc or sbb fistpll sbb sti leave int xchg push sti pop pop cli lods std push push push mov sub clc sbb (bad) and and inc repz shrl mov sub fistpl test xchg push ss cmpsl bound pushl add xchg cmp adc sub popf cmp add sbb sbb or add push ret lds dec jae test mov stos cmp xor adc cmp leave sahf in inc sub bnd ffree inc lahf and xchg and mov xchg inc pop hlt mov dec inc lods les fwait rclb arpl adc ret mov movsb or mov pop call fisub dec ret mov mov add clc lds jae loopne (bad) mov inc inc out ja jbe cmp int3 sti xor jno aaa jecxz jecxz pop xchg (bad) in mov mov sar inc and dec mov mov xchg test std nop dec iret js pop cmp fwait aad xor mov pop lret mov lea dec enter push adc xchg mov repnz enter inc leave xor add inc pop hlt sub fcmovnu mov hlt or stc xor jle (bad) mov loope insl mov cmc mov or pop xor subl cmpsb sbb jmp scas or adc shl outsl push movsb cli loopne movsb xor mov (bad) cmp add inc int3 sbb xchg mov jno or adc mul xor xor jae mov cli arpl jne mov adc sarl mov aas out out mov scas jno nop pop outsl xor and mov adc push out sbb push pop sub mov insl insb std (bad) daa fbld fdivrl testb scas dec jo cmpl stc cmpb aad cmp dec lret inc lret lret movsb pop out mov add icebp cmpsl push dec shll (bad) jmp bound fnop loope ret pop and das mov cmc hlt adc aad icebp mulb hlt adc (bad) jl into inc dec mov orl jb dec sub push cwtl or pop popf adc addps int3 mov jp mov push ljmp pop daa push xor nop pop aam lcall lock push es push dec rclb mov pop cld jg,pt inc cs negb inc pop pop pop dec and (bad) cmp jne lock or mov pushf pushf jmp out enter sub mov ret or gs mov dec push (bad) push lods adc icebp jnp mov fisub clc (bad) insl xchg clc js sub inc ret jae mov adcl mov lcall pop or jl cmp lcall enter jge xchg sbb sbb dec fidivr jbe clc push outsb jns inc jns fistpl adc jg jb cmpsl shrb in add xchg int cmpb in and ss pop push dec repnz pusha data16 xor adc jle mov adc mov mov dec loopne adc int3 mov or push out jae andl (bad) aad add xchg into lods cmp xor lods dec (bad) cmp push jmp jp inc or lcall sbb lods nop jnp cmp je xor cmp or sub lret and and jnp pop mov (bad) push add test repnz mov mov stos rorb mov or push and int3 (bad) mov shl mov shll mov xor jb cs lods scas ret (bad) jno lods insl aam inc sbbb pop mov mov fnsave cwtl mov into add add pusha or repnz mov (bad) or pop stos xor idivb xchg fstpt jno add movsb out enter jo mov cli pop jg jae push dec fcomps dec mov stc push clc adc xor mov ljmp or insb pop (bad) fwait rcrb lods and ds dec (bad) in (bad) jp jp das rcll mov push mov hlt jns call das out mov jns jo jmp addr16 adc adc fidivr xchg mov mov lahf xchg je push imul fwait sub call xor aas stc or xor and fidivl ret and pop xor xchg aad pushf dec jnp sbb xchg xchg clc cmp test jecxz je bound mov fsubrp ret push pop in xlat scas xor dec adc xchg out cmp je (bad) imul pop imul cmp loopne std imul mov mov mov sub and sti rcrl mov mov jno pop js arpl mov mov test jle es data16 movsb mov cltd idiv xchg pushf mov idivl jns movsb (bad) test mov mov mov sub int3 lods shl jge and (bad) mov loop,pn daa daa jo mov inc lahf xor lcall push cmp pop stos adc and push (bad) sbb xor jl stos mov mov out lods mov dec jmp aaa push sahf testb adc aas call mov aas push push (bad) mov xlat sub lock lahf xchg rcll shrb pop adc cmpsb stos dec out in repnz stos push push repnz lcall jmp sub xchg xor xchg mov test mov dec mov xor andb jmp add aaa in mov lcall adc xchg sub xchg in stc mov mov xchg es sbb or dec fidivrl push jbe add and mov imul sbb test xchg pop mov dec idivl mov movsl popa subb and clc adc enter imul call or cld imul or mov xchg push sar sbb sub aas xchg outsl jb pop sbb rorb outsb je fsts mov lea (bad) jl imul ljmp sbb jb outsl xchg and imul and gs (bad) sbb dec mov push mov inc jo sbb mov push ds adc icebp cltd adc fisttpl pop or (bad) outsb mov icebp or imull sub xchg ja dec out jg cwtl bound inc dec mov adc lret pop neg repz dec (bad) icebp nop add andl fisubl mov aam das cmpsb out fbld idivb jnp push push adc mov out js xchg sbb inc popa mov arpl mov out loopne aas jmp sbb xor (bad) out push lds xchg iret lret push faddp pop pop adc nop lcall pop add into bound sub out pop mov fsubrs shrl ja aad mov jle push mov ffree stos push insl loopne xchg xor outsb and insl loope cmpsb or cmpsb add or xor clc mov add jne cmp jg mov sbb pop adc pop sbb push push push mov add int mov stc jns sbb sub push popa sub ret sub enter mov ljmp pushf sub mov fldl repz add mov jp in bound cmpsl push outsl fildl xchg and fs roll cld cmpsl js add std daa dec test add jmp adc sbb scas push jl pop fsubrl cltd nop cli andb push (bad) es fnsave mov xchg rcll lock inc gs rcrb mov in das xor xchg adc les mov rolb push inc mov arpl aam cmp mov aam test sbbl sub in scas or mov xchg dec fs push or dec mov mov add out push fs pusha cmpsl mov out jo xlat divb mov dec mov sub loop jmp xlat pop or fsubr jg orl mov sbb fdivs popf or add rcl fidivl movsl push inc or inc stos ja mov int3 in dec pop or xchg cmp sub mov xchg inc in pushf pop cmp push pop addr16 pop cmpsb cwtl and inc (bad) pop loopne sbb adc mov pop test push lret imul mov rcrb push das stc sbb jp jbe mov fisttpl mov mov imull cmp test outsl pop and push jle add in in pop loop notl lds push inc out mov pusha add repnz cmp aas ss push or jmp sbb jae pop adc push aam sub cmp pop mov jp adc mov push jg nop sbb imul cli imul or xor hlt pop shlb psrad jno jnp add iret jb (bad) jo xor ss in ror test imul xchg nop repnz dec mov mov xor mov repnz aad sub clc inc jmp (bad) or iret or sub cli in rorl call inc (bad) jbe lods xchg in add arpl dec push rcl inc mov orl (bad) push jnp cwtl mov cmpsl add call push sbb lret lock mov jnp popa jmp and sub xor sahf mov mov lahf lret inc mov out xchg dec sar pop popf mov (bad) repnz int rorb mov iret loopne out inc jnp jp xor in leave and insb (bad) enter daa cli sbb xchg jmp sub sbb mov pop dec push ja ljmp jg xchg or frstor in das push jmp jmp lods mov out jnp dec fisubrl cmp inc xchg decb xchg xor dec pop pop push inc jl fiaddl daa fiadd mov pusha dec inc or xlat jno pop cmp mov js and (bad) lea mov inc mov pop mov mov stos push (bad) dec rclb adc push jns mov or lock add fdivrs or pop cmp cltd pushf and xlat repnz das add xchg add cmpsl jns pop rol sub xor pushf pop in or and and pop add mov ja pop test cmp adc add test and and cwtl popa out jle popf mov aad and dec daa sub mov outsl or ljmp cmpsl fadd xor push add iret sub mov movsl (bad) aam xchg outsl sbb lahf mov (bad) and lods cmpb call jno iret dec stos pop xor loopne mov inc push sbb adc into sub cmp into dec jns dec std sub stos xor jb sbb int in out mov cmp test scas testl movsb jmp push loope or mov popa rcrl rcr pop lods loope lahf jnp pop pusha push sbb adc cli daa xor cmp repz popa dec dec mov jae sub mov push mov cltd adc sarl hlt stos movsl mov and orl dec push outsl lods aam dec xchg (bad) mov cs fidivr out in mov mov inc mov sar pop fild jl mov pop mov (bad) push adc mov (bad) clc xlat mov test xchg dec or rcrl push repnz sbb push mov xor int3 inc shl jge jg cltd hlt insl mov insb jnp mov nop jae pop sarb mov loop (bad) (bad) int inc jg xlat incb into std inc jl xchg pop pop mov xchg pop and cwtl mov popf push loop adc movsl inc push mov test sbb jge sbb mov xchg mov and insl mov mov imul cltd out mov mov mov sbb lds jae add loop jge add sbb in repz jb xor and fwait cmc inc xchg lea inc imulb or js imul mov push xchg adc jle push mov jg test jno inc je mov leave xor adc cmp xchg icebp iret fsubrs cs jno ret jae int mov or mov jbe pop sub sub adc dec cmp repz data16 xchg sbb xor cmp das into xchg mov sbb leave lret data16 pop jns and addr16 pop adc mov jecxz dec add (bad) gs mov pop adc neg jecxz lods test loope aad movsb inc xchg mov jae jge dec repnz jge aad pop mov inc inc jle iret popf stc adc push das or adc sub cmp test std mov adc mov rcrb mov ja jmp push jb pop dec in xor mov daa or mov in jmp push push cwtl jp xchg iret movb add or int3 push sub (bad) ds outsl popf fdivr push jb sbb cwtl dec xor dec xchg js cwtl mov shrl jae leave mov popa (bad) jp in fwait jno hlt pop pop inc inc adc cmp sub sub popf and sti loop pop cmp pusha fcmovnbe fidivr mov rorb push daa cmp and pop test aad or mov pushf (bad) sub xchg push rol out push repnz cltd ljmp lods add imul cwtl (bad) test inc mov push enter scas mov mov push repnz jb dec mov jae push aas jnp (bad) mov pushf jo xchg rorl push pop mov add xor in jmp sarl roll call (bad) pop mov cld dec shrl addr16 sbb cmc int rcrl repnz (bad) mov pop xor cld jle push adc mov bound pop scas mov jg add cli dec ret xchg sub loopne mov add into mov xor xchg movsl pop jmp (bad) in xchg daa clc xchg lret sarb loope stc fistl or mov mov xor lret imul mov pop out pop stos (bad) mov imul or dec pop ja aam or mov pop adc cwtl cmpsl cmpsl add push repnz cmp in pop out fdivrp pop or inc push cmp int popf jno add int3 lret push sub dec icebp shlb ds mov cwtl cmp gs outsl mov push jae (bad) pop jg bound loope cmp gs movsl gs push cs dec adc js jl mov xlat cmp (bad) mov in (bad) sub dec inc scas xchg jb sahf jb pop (bad) out mov cmpl jnp lahf pushf pusha adc lds dec pop pop fcomi mov mov out insb icebp cmp mov pop lods lcall push add xchg add push cmp cmc or or adc sub cmp stos sbb push std pop xchg inc popa cmpsb scas jb jae cli jg push lock mov dec xor mov xor push adc mov mov dec mov ds mov pushf mov jmp dec dec cmp xchg push xchg sbb fucom jne mov or and es sbbl test (bad) mov mov pop jo mov das outsb imul pusha pop pop mov sbb push sahf add xlat pop add mov in xchg inc add cmp lock push push fwait mov out xor lods ret insb dec addr16 jge (bad) arpl mov popf dec mov xor adc arpl mov sti dec clc iret mov pop test into mov mov (bad) push jae jle cmp push and enter cmpsl inc fdivrp nop out xlat cmp and lea xchg das aaa add mov dec and popf aam cmp and (bad) add push jno,pn sbb cli adc mov ja stos mov pop out flds outsl push add (bad) lret (bad) cld sbbb dec mov sub into sbb push cmp ss jns mov incb nop dec lahf jmp or xchg dec jno rdtsc bound stos daa dec imul cwtl adc push lea ss jp adc in sbb sub push lahf adc inc shll or test das les loop int3 xor mov pop xor es mov mov dec subl push cs outsl jl in fcmovbe js xlat scas call lret clc jmp (bad) push movb icebp fldl2t or loope push into mov ret jl or rcll pop iret pop mov sbb jb gs pusha mov lods daa mov cmp fcmovbe adc jle clc inc (bad) inc sti out roll add push int3 xor out pop mov xchg cmpsl push (bad) cmp inc mov push scas jae rorl test and (bad) dec popf dec cld and cmp sarl in daa mov jnp setbe pop and dec pop ret sbb scas aas and bound jmp mov inc mov iret std inc movsb divl gs test call mov orl sbb out call in xor inc push lods ljmp inc sub and orl sarl das mov nop mov lock cmp int3 ja push shll test loop jle adc inc mov jg cmc stos sbb jae scas jl (bad) insb mov (bad) sbb fnop imul xchg in mull dec jg icebp mov test add fidivrl test arpl bound rcr lods jb cmp push mov je mov js adc lret jne mov ja nop jae inc mov shll mov call jbe es mov mov and gs mov ss stos iret mov mov iret jne mov or mov lret jg push leave lret adc dec addr16 cld fcmovne data16 sub lcall nop jmp outsb push xchg xor dec adcl stos xlat mov sti mov aam cwtl aas in imul cmpsb (bad) stos (bad) enter pop sti fwait or mov dec hlt cmp mov push cwtl or fldenv inc (bad) ljmp push mov jge das mov insb and repz jle sub jo roll cmp shlb (bad) pop aaa pop notl adc adcl insb push dec out cli inc pop jl inc mov jbe or mov jmp push jo or jl push rol lret std hlt fst pop (bad) mov lret xchg push (bad) (bad) pop sub inc mov xchg sbb cmp enter loopne dec and cmpsb clc mov inc mov daa lds shll arpl mov sti sub add cmpsb decb ret dec pushf jne lret and jge pop jb add icebp imul sbb vcvttps2dq cmpsb lods push add lock and adc xor xchg jecxz or jecxz xchg sarl in cs mov icebp fisttp push (bad) jbe clc or adc mov fsubr push nop je mov fs repz dec lock cmp int fadd mov aad xchg rorb (bad) sub inc or mov xor sarl mov aam xor es fmulp sbb push movsb mov std cwtl sbb mov sbb jmp sub movsl cmp adc divb push sarb dec es daa test mov cltd pop or int cmpsl sub call das cmc cmp inc aad xchg cld jno out lret test mov repnz xor mov int pop mov pop xchg add xor xor es mov mov lret mov rcr cld mov fdivl dec or pusha test jmp ljmp dec test scas jno aaa xchg mov test aaa mov and rclb (bad) xor icebp inc ret xchg aad stc lods cld pop js imul test addr16 (bad) (bad) int3 cmc and mov xchg inc or cmp fs cmp fildll mov out (bad) fnstcw push les lods insl test outsl imul mov pop and stos mov pmullw mov cld sub push rcll jb mov in jge clc sbb inc scas adc fwait ljmp dec add (bad) notl sbb js out xchg (bad) ljmp add mov add es popf cmp mov (bad) int3 xchg push inc leave xor fisttp inc xlat ficom into addr16 scas scas adc mov mov pop (bad) mov cld (bad) lds sahf and jo sub aam xchg das (bad) lock sub faddl sub pop and or xchg jmp cmpsb int3 pop xchg test cld dec xchg mov add test add sbb jmp dec add out xchg mov jecxz aaa mov cmp imul pop sbb mov jmp pop xchg mov fidivl ret stos mov adc or jmp xchg add mov loop pop sarl (bad) sbb lods inc mov push cmpsl jl adc out xor iret iret rcll cmp inc or sub imul lods inc mov dec adc aad xor and and pop and lds sbb cmp xor insb sahf rol xchg xchg dec push inc shlb jecxz pop test jne jno sti fldl dec loopne js adc bound dec nop cmpsl xor push arpl or stos hlt in mov imul jmp enter rcl (bad) xor jge push ja lcall mov push pushf mulb test pop push mov lret xchg jecxz movsl leave js jb dec loope pop aad push int outsb stos dec enter (bad) dec add push in mov mov fistpll inc mov mov inc adc push or repnz xchg xlat or test sub jge xchg push test and cmp pop mov dec dec in stos adc mov jnp mov pop adc mov outsb jp lcall mov add test mov mov sub lea dec test jnp jns bound sbb or out fwait pop repnz xchg or and aas xor xor test mov xchg xchg out pop inc xchg test mov stos insl call inc outsb popa lea daa pop jge cld sub cs in push insl adc ss in sbb mov aaa rcrl hlt mov cld adc and lcall cmp pop rorb pop rcr inc mul add idiv jmp dec imul lahf sub (bad) lret xchg out push cmp popa jbe xor mov inc push aam sbb mov add inc fcomp leave pop cwtl push sti (bad) inc mov hlt sbbl sahf int3 fsubp xlat nop mov mov add (bad) mov jg lock pop iret imul adc outsl jbe mov fidivr sbb or (bad) fist call mov adc cmp push xor jae (bad) push sbb dec std dec ret popf lea cmc add mov outsb repnz xchg insb mov mov jnp or pop stc push js mov mov pusha inc insb xchg mov nop xor arpl cltd stos stos movsl inc cmp scas dec insl inc addr16 popfw dec fdivrs fcom mov cmpsb and or int mov ds pop sub fnsave xchg push xor je xchg cmpsl cmpsb pop ja pop es fisub into cli jecxz imul jns in enter movd mov into stc fisubl jl jl shrl in ret sbb xor cmpsb hlt cld ret lret sub push dec mov emms insb repz cli pop mov popa pushf addr16 sub repz fwait sbb insb arpl lret jns adc ret lock repz loope iret xor cmp cmp mov les mov xorl jp loop jmp out xorb xchg jo loop bound js out xor sbb out adc cli add ljmp mov mov sarl (bad) jno fldt mov rclb fldenv ret cmp cmp jmp cmp jmp daa gs and push add int push cmp clc xchg cmp rcrl xchg clc jae imul (bad) dec push insl xchg mov test add insl test pop fimull push dec (bad) sub mov in in xchg dec mov rcrl fisttpll inc cmp js adc dec inc mov test inc xchg jno pop sbb lds sbb jno push fstps or mov (bad) adc xor mov pop out xchg cltd or pop jo xchg xchg xlat out mov sbb mov out mov subb adc mov cwtl mov jns push add fild mov lahf roll pop das fnstenv incl insb call movsb and arpl cwtl js std jne push adc (bad) adc mov mov (bad) xor nop mov or push das xor cmp mov lcall out inc mov test pop xorb cmp push xchg xchg mov push (bad) je inc (bad) insl push jge mov in mov xchg inc (bad) cmpsl ss mov iret inc scas add pop push mov int3 xchg push pop inc daa lahf call jo loop pop dec in aas xchg cmp adc mov jo mov int inc insb mov outsb cli loope adc repnz ja lcall inc mov ds stos mov sub and or inc cld pop mov cmp das popf mov ljmp call popl mov add scas (bad) in rcr lahf data16 lret push inc out mov ja arpl sub and push sahf jp sub sub ds sub aam fldt loop enter aam add int xor and sbb xor dec (bad) (bad) aad fistpl cmpsl jne std and shl sbb imulb mov xchg inc rcrb test jbe movsb sbb outsl test jle out mov lcall inc mov mov or lcall int3 mov push sub jne pop add icebp and mov rcrb mov repz pop fidivl xchg mov outsl sbb into xchg and in jae or mov ret and faddl addr16 xor test mov jmp ret pop bound xchg shrb popf mov fnstsw pop (bad) mov xor or push add mov fdivl test jo xchg jnp xchg mov mov adc negb cmp and in jne test sub sbb lret insb roll dec push imulb mov gs or jns cs outsb jne popf cld push gs ja cmp arpl sub lret pop aas cmp mov int mov in adcb adc call pop in mov pusha push pop lods or sub pop mov faddp jmp loopne xchg ljmp jle iret push movsb shlb dec dec iret test cmp mov notb daa cmp pop fwait xor rcll mov push lahf dec xor push push je sbb pop inc cmp jno (bad) mov mov icebp or and (bad) mov add int jge (bad) rorl push mov scas rcll push aas push dec imul adc mov daa mov and cmp inc sbb mov adc push pop sahf cltd aas sar mov rcll (bad) mov cmp or aas sbb frstor lea inc es sub xchg mov int3 pop mov xor pop into (bad) push popf fcmove jle and adc ret add xchg add or lahf dec pop lret inc call mov addr16 sbb in pmulhuw les fucomip movsl lahf xor pop lcall icebp push sti cmp call push pop rolb mov (bad) jge ret leave cmp push pop mov adc cmc das aad mov xchg movsb int xchg sahf mov adcb cmp adc loope pushf outsl cmpsb inc shll mov adc mov sti dec stos inc js mov inc fnsave mov enter ss sti hlt xchg cmpsl int3 push ss xor or pop in bound sub scas fcomps mov pop mov dec jge pop xchg inc mov into mov gs push in cmp pop fildll cld or push jecxz cltd dec mov rcll psadbw ret fmull pop xchg lods mov cwtl rcrl fcompl mov cli sbb mov inc and and fsubl adc les lret fisubrl ss mov sub out iret (bad) mov je add outsb push pop outsb xchg jecxz xchg fbld dec xor pop test movsl dec pop outsl fadds cmc lods xor and dec adc jb (bad) aas mov ret and inc lea add dec pop insb dec gs orb and cli adc test and jle hlt arpl lcall xchg cmpsb lea loope sbb scas mov sub or mov dec inc test lods cld jle (bad) jbe xchg frstor fisubrl pop inc add int3 mov push push pop cmp sti repnz push and mov jae into aas pop cli ret pop mov scas jne xchg rcll je mov jno or xchg xor xchg xor cmp or scas rcrl movb addr16 xchg std push mov mov xchg inc or add in sbb pushl xlat and jle int out push mov (bad) cmp sar dec push push test fnstcw jmp (bad) fwait in dec lea es or or cmp inc lods cmc jge scas cwtl mov popf push rcr sbb add push cmc mov push icebp push mov or fisubl sbb cmp xor inc cmp or lds sbb mov push push jne loope adc gs rorl fcomp lret xor jae fnsave xchg mov mov mov mov ja jno push ja cmp mov hlt and xlat rorl xchg jl insl imul adc aas jbe mov inc pop stos jge outsl clc cld aad inc mov js cwtl int das roll xor testl enter push popa xor push (bad) cmpsb add cmpsl push cmp addr16 out aaa mov and mov cmp pop out ss aad dec mov movsl mov push push jns mov pop cwtl iret sub js inc xchg jbe jae mov addr16 jle jl jg jmp (bad) or dec xchg dec out stos adc clc imul jl pop leave cmpsb xchg daa and cld adc xchg dec daa rcl aam ss jl inc xchg imul int push mov sbb sbb jecxz xor jns or repz or popf mov lock jnp sti mov push mov or jmp ret pop jnp test inc aam dec das addr16 out xchg movsl sub test xchg pop in or push cmp jmp jae (bad) cmp pop cmp idivl loop (bad) dec addr16 into xchg jmp lret rorl jnp cmp jmp adc sub mov cmp sbb xchg incl jmp or jno jae lret shl test div cs inc outsb or pushf test pop ror pop iret je ret push mulb dec test inc rcll cmpsl mov cs in je mov lock and xchg cltd xchg lods push sub pop dec cwtl jnp stc sbb hlt cmovae adc aam (bad) in aaa xor stos and pushf arpl clc stos or mov enter addr16 mov xchg loopne xor in adc sbb lods stc xchg fisubrl pop leave or (bad) or push mov loopne (bad) ja cmp sub sub leave (bad) dec lret or or cmp dec (bad) mov fistpl mov push mov xchg daa sahf ds lahf jne icebp push cmc hlt mov icebp mov ljmp mov xchg out mov daa gs adc mov mov pop adc repnz xlat sub cmp pop fsts int3 test out scas lahf cmpsl inc mov dec mov popa repz sub push sub sub xor in push and jecxz hlt ss fldcw mov imul sbb mov (bad) sahf push xchg mov or movsb mov push sbb push push insb mov mov test loopne mov cli in cmp sbb push mov icebp xor jne sarb xor out daa lret cwtl mov stos lea pushf mov adc sub jno adc test out fcmovu clc xchg (bad) adc sub mov jno pop lods lret dec test jmp daa cmc scas (bad) pusha mov aam in jno dec add (bad) xchg cld adc imul push cmp adc jmp enter mov xchg arpl xor leave inc or pop pop mov cmp (bad) stos loopne push xchg test xor or fcoml lods pop aas xchg push push mov sbb loopne repz pop mov notl jp repnz movsl pop pop ja adc cwtl leave faddl popa pusha push imul scas inc mov jbe lods sub rcll pop enter mov lret pushf pop cmp inc sub mov inc xor adc movsl and and aas lods insl add jmp sbb into sbb mov mov or push (bad) push cs sbb jb outsl xchg push dec xchg fnstcw sahf test sbb push (bad) out push mov mov ds popa dec add adc icebp lret aaa fwait push movl icebp mov stc and ds sub push ljmp dec cmp dec sti mov pop icebp andl iret orl pop mov (bad) jp call pop sarb push movsb sarb idivb cmc mov test das test sub cmp (bad) ficom pop int mov push inc push and cmp cld push pop fwait mov lret add scas push jp mov xchg subl add add or fucomp push inc test rcll xor test jb incb in or out mov push adcl mov jbe pop inc rcrb xor adc (bad) call (bad) adc lods mov stos ja cmp add cmpsb mov pusha test pop sbb cwtl cmp aam fnop and jmp mov iret gs pop inc repz (bad) sbb mov jl xor inc out scas and loopne test lea xor xor adc insl and jne push push sbb mov jg out out push or inc sub aaa sub xchg fdivrl sbb ss xchg mov daa push push ja into push test sti (bad) (bad) (bad) or iret clc clc fnsave mov outsl and out loopne (bad) in xchg xor adc ljmp ljmp xor or out in xchg in add and nop add mov fwait in movsl mov ss xor movsl enter add in (bad) rclb icebp dec rolb mov mov mov cmp adc repz dec sbb jns pop mov iret or cmp (bad) rcr mov mov cmpsl push int3 xor in cli sub popf xor xchg lock pop xchg mov sub fsubs fsubrs imul add dec es sbb xor (bad) sti add xchg inc sbb in fcoml cmp dec sub pusha sbb int leave xor popf adc out sbb xchg cmpsb out mov jp (bad) iret cwtl sbb sbb xor cmp mov mov pop mov lock xchg jg hlt lcall inc pop mov jno inc sbb fs xor push movsb hlt sbb adc mov pusha call divl es xlat cmp dec jmp pop cmp sub pop adc int cs adc hlt mov addps dec ss rcll xor push stos add add mov dec sbb mov bound imul (bad) xor test dec dec gs stos xchg mov inc jmp test mov scas inc rolb push pop jmp ja adc stc push jl lock (bad) sahf dec mov (bad) jbe push les nop cwtl or mov lods fmuls mov (bad) mov and les jne cs (bad) jno mov and imul lahf ret outsb andl xchg sub (bad) loope rorl sbb fcmovnb xor icebp and sbb and add jns xchg lods xchg ja pushf fbld inc cmc in add push mov lods add sahf jo stos stos dec popf daa pusha inc out sti into in sbb cmp mov int pushf mov sbb jns in lods subb stc xor jle scas shlb sbb mov sub int cmp inc rol push add xor cmpsl out cs pop adc divl lds jb lods in pop sbb jecxz xlat mov mov sub or popa leave mov jmp push mov mov push mov lods ds cwtl mov jmp into pop or jo and mov add (bad) jo leave into fwait inc (bad) jo repz xchg ficomp adc roll mov (bad) inc inc cmpb xchg cltd je pop push (bad) sbb js loope dec jb (bad) inc dec xor or jno ss push mov xchg cs popa iret jne xlat ja daa in inc out xchg pop adc jmp sar or repnz sbb int3 jge or add push outsl std dec pop jnp movsl lods insl mov repz push mov cmpsl jecxz jp cmpsb scas adc and and mov sbb inc or xorb out inc push in jae mov mov inc adc js inc pop fldcw pop add sub adcl bound sub adc scas pushf in fdivrs into loope ja jg int3 cmpsl jge xchg mov fs test out jl mov inc xchg cli and adc xlat cmp enter and mov lret or cmp pop outsb adc ret movsb mov dec sub and pop inc out cmp cld hlt sub out mov loopne movsl cmp movl (bad) mov cmp cmpsl aas aaa lea push dec cmp sub xchg inc dec arpl push scas ja mov mov addr16 std xchg pop pop mov popf iret cmp sti jo sub push (bad) xchg inc ret daa pop sbb add sub push outsb pop xchg arpl jbe mov movsl jns div ja inc jmp bound add push fsubr inc mov add dec cmp sub mov adc mov mov scas jns fs aas pop loope sbb insb lds dec mov mov aad add out xchg push cmc bound (bad) dec adc or std cmc pop repnz pushf daa ss add sub pop dec push out jmp ret cltd fmuls daa (bad) jo sub dec cwtl ds xchg fwait (bad) roll jbe pop mov sbbb pop push fwait out inc xchg (bad) hlt fmul sub or sub or pop inc js add imul xor int3 (bad) mov adc inc mov (bad) (bad) enter cmp icebp mov enter push insl icebp add pop add pop cmp fldcw adc jnp or mov icebp sub adc push push add not repz mov sahf dec imul (bad) sti (bad) mov in and push pop adc or sbb cwtl cs int3 arpl fimull insb jg pop push in push clc add sbb dec add jo ret fidivr and jno mov (bad) push push or push pop pop andb add nop cmpsl mov lock out mov and jle mov out pop mov pushf or repnz pop stos ret mov or jg or scas loope mov mov mov mov movsb leave and lret xor mov (bad) mov pushf mov push pop ret inc jge,pt lods repz and movsl jge popa adc xor cs cmc or mov int3 pop pop rorl (bad) pop leave jns xor in pop pusha aad lret or mov push mov repnz (bad) rcrl (bad) lcall mov and mov (bad) sub jnp ret mov insl mov cmp jnp pusha xchg iret pop lea add xorb jbe mov and jl jecxz lahf xlat dec cltd lret mov push insb mov push outsl or out dec add (bad) xor xchg pusha clc pop xor jne inc fistp fs mov addr16 (bad) lock xchg iret popf aam push jg orl or and (bad) mov xor and xchg imul (bad) jg sub lcall add mov jg push and inc ljmp icebp and ror cmp jo aad test xchg call xchg add and inc outsb outsl out lods (bad) add icebp fldl (bad) repnz pop jno stc sbb push lcall cs arpl cmp aas movsl enter inc test add mov fwait mov and in scas cmpsb pop (bad) icebp dec mov pop insl push sbb (bad) jmp pop xor sbb test (bad) mov jg out cmp stc jae pop mov sub sub pop and jbe out lock roll mov aas pop fmuls jl pop std je mov sbb in test pop xchg cltd movsb xchg push pop inc pop mov push jmp xlat pop inc sub imul mov mov and mov fnstsw aas mov (bad) mov pusha stos out jae dec jp outsl test pop in sbb fwait add lcall and adc and stc pop sbb not rcrl out fsubrs test aas sub cmp das incb jl or ret jbe popa pop (bad) leave xlat adc xor and sub pop mov stos ljmp sub (bad) cmp sbb or clc inc dec or sbbb movsl shlb mov dec (bad) out jmp mov inc push xor call xchg xor cld add adc (bad) fmuls sti in cmp icebp sbb sub and or mov (bad) sub dec test cmp fiaddl cmp jo (bad) jg inc cmpsl incl movsb aas js cltd aas dec sti fisttpll ljmp dec mov popa ret outsb pusha mov js cmp je add arpl push add sub adc and mov dec pop mov ss xchg nop ljmp jecxz xor pop hlt rcrb xchg mov rorb (bad) loop out mov or mov in or and mov sbb movntq out dec cmp add pop and (bad) mov mov push rcrl pop (bad) in out les cwtl push ret cmc arpl jge insl nop ljmp cmp and mov in xchg push xchg stos pop mov and cli mov mov mov pop sbb xor test dec testb lds xor add xlat push fsubrs les jnp clc lods xchg test aaa test mov mov aaa (bad) (bad) push out cli ja inc pop lds add xlat cmp lods cwtl enter jmp dec pop mov jecxz pop xchg and repz fdivrp andl lahf xchg xchg pop pop xor data16 jno mov movsl out sbb push loopne push mov addr16 test test jecxz jae pop test loop,pt mov ja pop add sub imul mov cmp scas ss das sbb lods std pop pop jmp cmpsb push mov incb add push lcall xor movsb aas sbb das jp rcrl cs insb jmp xchg sbb dec xor rol je push add lock add in in iret sub lods add sbb jp iret and mov ret push pop out mov and mov fadd pop xchg mov insb adc inc push hlt stos mov je jbe mov push shrl mov pop mov pop jnp stc out sub mov jmp xchg dec jno adc pop dec dec xchg mov loope mov adc add ret shll xor test mov push in movl and mov push push and lock outsb xchg dec adc (bad) repnz movsl es out cmpsb popf and or pop xchg mov fxch push fbstp ret cwtl (bad) popf and dec cs mov mov xlat insb mov insl cmp fild cmp daa ret dec mov push jb int repz mov lcall xchg adc mov mov bound dec scas jecxz lock je sbb lods push pop jns mov jecxz lret jnp or sub and or rcrl mov fistp push cmpsb push and sti sbb or push xchg adc xor ret loopne fdecstp int3 outsb outsb ficom sbbl (bad) pushf fimul dec dec add jne enter dec sbb lods mov sbb lock jne loope pop push repnz xchg loopne inc dec data16 mov mov es dec inc and ret sbbb sbb ljmp sbb (bad) xor sar aaa jb lcall jns push adc stos adc fadds add cmp and fnstsw leave ja nop repnz pop pusha xor call dec lods ds divl jbe loope push in mov call mov pop adc add mov fs push aas loop and push pop shrb call push in xchg fdivrl test sti daa popa out dec adc iret std notl xchg mov dec jle cli (bad) scas int3 mov ror sub outsl sub xorb cmp sbb xor xchg inc cld (bad) cmc scas jo into mov sarb mov bound pusha es (bad) dec mov leave imul loope insb mov inc insl dec inc scas cmp mov cmp cmc jae cmp mov xchg mull cli xlat xor add cli xchg push ret pop scas mov add and (bad) pop adc mov scas pop les (bad) das lcall outsl outsb test imul add or pop push imul test incl scas jae idiv lock sub pop mov rolb dec adc icebp jno sbb scas sbb xor aad mov jmp mov pop (bad) xchg loope mov mov nop (bad) rcr push add jo scas jge popa sub test popa loopne pop adc adc les sub mov jp outsl sahf pop into mov test sub adc xchg push (bad) jo stos sbb lds dec (bad) fsubl in mov xor cli sub or and xchg xchg lcall gs mov inc push popf mov movsb clc fs pop lds lods mov (bad) mov add push add mov sub inc dec xchg fimull es imul inc insl outsb out mov sub push jle rcll aas mov insb inc push call xchg ficoml sbb ljmp sahf and push aaa pushl dec mov mov mov jge dec out jge xor jnp stc pop mov ja sti in fdivs jbe mov jle stc not sarl outsb mov repz xor inc (bad) imul js (bad) dec mov aad cmp (bad) pusha in fbld hlt sahf movsl mov jl xchg inc fidivl (bad) fadds scas add push daa adc push je and inc popf pop into add xchg or (bad) test lock ljmp inc clc sbb out xor call sbb mov call push mov repz mov hlt loopne shl shrl icebp iret subl pop mov adc movb orb jo mov fcmovu cmp gs cmpl xor sti mov mov je sbb (bad) das lds enter xlat jp add xchg xchg push lret das (bad) jmp or outsb inc pop scas test stc inc fild xchg jp xor (bad) xchg dec push ret jmp repz cmp xor mov and mov add cmp mov mov fldenv xchg mov sbb icebp aam dec xorl jo inc rclb xchg mov xor cmp inc lock jbe loope pop daa or test mov ss (bad) outsb xor aam repz mov xchg (bad) jo lock ret hlt (bad) xor dec jnp pop aad lahf enter movsl in sahf push and adc pop into enter and mov leave jb pop js stos dec adc mov je jg jno insl enter xor pop test out std and repz leave mov jb fild inc xchg sti fidivrl movb dec dec ss loopne gs push pop jbe xchg dec das cld ja or cmp enter hlt cmc and lret pushf daa inc inc loop ret popa inc mov pop out add rcrl inc sbbb hlt cmp dec fdivl xor xchg out adc stc stos sahf inc stc xor xor and into lds adc fmuls and fwait (bad) xor (bad) popa fisubr aam dec push cs cmp and push push out mov mov dec into or fisttpl pop add jne adcl popa dec mov pop (bad) xor xchg mov cmp mov inc dec scas pop mov adc ss inc call mov nop sub outsb pop out movsb cmc lea adc sti xor imul mov lret jns movsb aas js mov ret enter sahf or mov push push dec pushf adc cmpsb fiaddl push int3 das jle jne clc cmc inc enter inc sbb push cwtl je mov nop inc and scas sarl cs test cmp (bad) (bad) dec je add mov push fsub aas xor scas loop mov sub loopne push push mov icebp jg movsb cmp orl adc dec out data16 mov and ss ds and sbb out mov add dec add push mov adc movsb out inc xor push mov mov in div sbb or jmp sahf inc arpl push call mov int xchg insl xor (bad) jnp aam jg rcrl jp mov out mov imul lcall cld jmp push movsl sub dec jle ror sbb sbb sbb pushf push and xlat leave int cmp shlb hlt leave xor jecxz shrb and xor xor push cli call dec in arpl jge cmp insl or xor cmpl arpl inc lcall xchg and fist mov xor push sbb push dec jb and imul jnp and cli xor decb cmpsb or inc mov mov fsub sub cld mov lods sti sub fcoms mov pop mov or (bad) sbb adc xchg adc popa mov enter dec (bad) scas jo lds and add mov mov mov sbb pop push hlt add iret xchg dec bound std mov jge jns and scas cmpsl or ret movsb movsl ret dec sbb pushf inc push fdivrs test xor dec roll mov ficomp sbb addl aaa jnp dec jnp xchg test fucom or jne shl pop pusha pop or jmp or repz or pop adc clc test sub mov dec pusha mov cmc sahf ret xor sub jbe xchg mov out xor test cmc mov add pop inc (bad) testl into test inc nop cmc add testb (bad) orl jmp pop cmpsb lcall xchg test push pop outsl and and xchg lret and xchg mov sub (bad) xor sub lds addr16 mov sbb push fistpll inc fmuls push push stos dec rorb call sbb hlt or into cmp xchg pop je je outsl adc jno repz cmp test (bad) or mov xchg daa sub in mov sbb std mov repnz fsubl pushf mov rcrl jmp or mov xorw das sub negb fs mov jmp and (bad) mov xor mov ss stos mov xchg inc fstpl shl sbb jb iret add push sub fstpt push pusha (bad) jg fcoms and jle in loope jne xchg adc inc inc and orb sub xchg lods mov cmpsb cltd push in mov fmull pushf push lcall cwtl jge inc cld ljmp sub push cmp (bad) outsl dec jae xor movsb out outsl mov xchg inc add cli dec movb insl out and aaa clc push mov or in sub sbb pop repnz mov xor push in jns ljmp push cmpsb repz addl jge inc cwtl xchg scas push xchg xor rclb or dec in xchg idivl push inc in jae movsb lock cmp mov outsl mov or dec or je js push aad arpl rorl out push dec sub inc in in out pop out or ljmp xor notl mov call push (bad) (bad) popf mov loop aad xchg (bad) (bad) loop mov sbb or dec out aam insl repz adc or adc sub mov dec in push shr add stos test sub cltd xor xlat inc std repz mov xlat adc mov mov das inc and out mov pop insb xlat out enter cltd xorl (bad) cs sub push mov popf dec xchg mov or xor dec mov dec data16 inc mov mov jne out add jmp lret scas sbbl sbb jl xchg pop movsl lods pop imull xor mov xor pushf fdivl jne pusha jne add pop adc push js adc jmp push pop mov inc pop stc mov inc into sti or mov xchg mov jns jo sbb mov stc leave inc xchg inc xchg and sbb and fstps aas lahf jae lods add arpl push pop sub mov dec fs loope arpl mov gs popf xchg cmpsb mov add and fisubrl cmc cmp icebp aad enter mov dec jecxz mov (bad) fnstsw mov stos push lock pop iret mov cmp push imul lcall scas int3 (bad) cmc (bad) jb cwtl push push push mov add aad xor cld test or out (bad) fucomi dec mov mov jne in (bad) out jns iret sbb mov cltd xor add or mov inc into mov lret loop lcall sbb (bad) loopne jbe (bad) ljmp push pushf call or arpl shrl cltd adc mov clc pop int cmp (bad) gs mov adc sub stos sbb xchg ja fcomi clc decb mov daa mov fmul int out sbb sbb int popf ljmp jg ja dec (bad) dec faddp adc sbb inc xor fsubp pop cmp lods mov ljmp xchg and push aas (bad) out shll imul pop aad iret and push lods repz push int3 xchg add inc jae sti movsb mov jbe add jae les insb or scas (bad) roll mov stos dec xchg loop insb sbb sub js xchg xchg pushf push mov xchg sub mov sub dec lea push xor mov leave decb imul inc or rclb subb les adc mov sub and incb int ret dec (bad) pop pop fistl inc je cmp jmp addr16 sub sub xchg xor test je xor (bad) jnp dec xor push mov dec clc call scas dec lret imul mov lret adc push mov (bad) out and mov popf std sbb (bad) clc push call and or test push push (bad) ljmp mov pusha push inc or fsubl daa stos push sub push test mov in sub add rcrb jl je fwait mov into sbb leave xchg push sub mov ja jp mov dec popa push hlt fdivl xchg dec mov xchg das mov lods adc test dec rcl dec and imulb and fs xor in repz and xlat ljmp iret lahf es jge adc mov cs jae dec in lcall push xchg rcrb rep inc gs shr pushl push cltd or push pop in push mov cld mov pop cmp call imul mov push hlt xor inc movsb add xchg adcb push mov cmp sahf ficom pop sete cmp popa dec mov into cmp xchg (bad) repnz xor imul jmp adc dec pop popa cmp fsubrs push pop and add mov bound adc cmp movsb pop jmp mov ficompl cmp push mov es shll aad sahf insl insb cmp repnz or mov test inc fs cmpsb stos pop ja push aad out add xchg jmp enter cmpsb xor push pop loope cmp dec adc insb fsubs outsl fidivrl clc push jae int3 incl testl push fmull rclb mov push sub jg mov sti in sbb adc (bad) fnsave mov add sarb dec pop loop add ljmp adc xor aaa mov sub mov pop ret fdivr cmpsb add repnz push mov and xor unpcklps xor push mov lret dec jp jl and sbb inc push mov xchg jmp les ljmp add mov popl cld sbb aad (bad) (bad) xor cld sbb loopne adc adc (bad) sub test call jno or int nop mov jle push sbb bts cld sub adc enter sbb (bad) mov adc xchg push jae push out sbb cmpsb gs and out xchg cmpsl inc lahf popa test pop loope in test std push add xor into movsb into push mov imul jge xor sub lret xchg pop adc pushl ds xor aam and inc gs mov cmp arpl ss gs mov mov aas jns or cmpsl popa dec adc sbb ss sti sbb sub imul jecxz mov jmp lahf incb jp pop xchg imul mov sub int movsl push push repnz loope pop mov out xor in test inc outsl scas mov movsb xor js cmp dec rcrb sbb add insl push xchg xor call xchg add out es sbb add pop sub inc mov sub pop cwtl jb pop in inc and decb shl jge test push or call (bad) call movsb xchg (bad) jae decl mov fnop adc (bad) movsl add push xchg xchg push or push push adc and xor mov mov test mov pop lods shl std ret pop es rcr jg cltd adc int3 ss (bad) iret xchg sbb jns xor inc cld out xor cli idivb jbe neg gs aam js cmc rol fs pop or sbb push scas mov push out hlt inc mov mov add add movsb pusha mov sub in (bad) int cmp pusha pop (bad) je cmc test iret outsb inc jnp cmp and fildll push movsb iret rep push sbb int lcall lret std jo mov adc lret out sbb bound dec push jmp out xor inc mov mov xchg fidiv leave test es add mov arpl (bad) pop aas fadd bound cmpsl fiaddl cmpsb movsb inc fadds jnp xchg adc xor pop mov jbe jl push lret inc fsubl mov je fadds adc push push das fdivrs sub mov jns cmp xchg push lcall cwtl sbb in inc cs cld (bad) aad and dec dec mov test aaa cltd fstl mov push movsl jle add add test sti vaddpd push (bad) hlt repz mov movsl pop sbb rol js lret mov popa roll add dec js test ss pop aam cwtl mov jns aaa adc popf or pusha cmp cmp fnsave lods inc xor cmc xor (bad) jnp cs in fsubp sbb out or adc cmp sbb cmpsl js negl pop enter iret mov sbb and adc xchg std sub or mov cli jns xorl cmpsl fist adcl das pop push fistpll add pop sbb inc clc push jmp dec stos xor test dec mov lahf addr16 mov iret test xchg test test xchg outsb fdivrs sbb movl dec es mov fcoml jle add mov out mov sub sbb cmpsl js xchg mov addr16 and lea mov add movsl xchg jg dec fdivrl mov mov inc inc cmp ljmp popf ret loop xlat cmp cld ljmp inc sbb int3 pusha js push in cld cmp inc push jecxz push ds insl les sbb adc adc fidivrl inc int3 in loopne push cltd nop test popf faddl cmp sbb or cli fdivrs negb mov sbbl (bad) adc jmp pop (bad) xor add nop and aam jmp mov out cmp bound stc dec push rorb push ja and push fisttpl sub jns decb sub std pop fmull add mov jae adc mov leave rolb sub mov mov push call aas push mov inc cld jns ficom out stos cmp jle sbb add or xlat or mov jecxz mov (bad) popf mov jae loopne ss cltd je ss dec push jg xabort clc inc xchg add std decb js into push dec mov aam fwait push jno mov imul mov imul mov andl aad (bad) rorb sbb mov ja sub clc repz fnstenv sbb xchg das xchg inc inc in movsl cmp sarb mov push sbb push sbb dec adc adc xchg int mov push push movsl mov pop sbb (bad) ss adc stos fisub cmp iret xlat fidivrl cmpsb call movsb push sbb xor dec xor ror sbb lret lea jecxz mov mov (bad) es dec aaa aaa fisttpl in dec int (bad) rcll push dec outsb stos pop call xor pop js (bad) (bad) mov mov gs mov rolb xchg pop scas mov mov add inc in xchg sub sub test fdivr jle push pop push popa cmp ja add roll xor sbb adc cwtl cmp push bound test cs rcr popf inc sub outsb outsl pop or lret test sti jle nop fsin jns rclb (bad) (bad) cmp jge push pop xor sbb adc int3 mov or int3 xchg mov cmp in pusha sbb dec xor test or xor add call cmc mov mov xor dec lret sub (bad) jle or mov dec stos je repnz notl and (bad) sti int3 cltd xor sbb push mov cs mov test mov push or lcall xchg int3 push sbb dec sti in mov test fcomps je push stos push or fstpl cmp cmp cs adc scas fs es sahf ss dec fldl inc cld or test or mov xlat sbb repz pushf and jmp insb popf frstor data16 fxch jne inc lret bnd push arpl inc dec push movsb decl xchg (bad) imul push inc sbb xchg lods (bad) rclb mov (bad) icebp les adc je lods lret lret jmp mov cltd xor inc inc pop aas in (bad) call sub push fisttp cli push rclb mov sub or cmp jb mov iret and rol push push mov int add aas sub imul into cmp leave data16 xchg cmp fisubl fisub (bad) mov sbb ret mov mov repnz sti or dec dec dec data16 pop call lret push fimull adc push pop jl mov jae add pop jns mov dec jmp addb ret or insb stos jmp xlat pop sub push sub jne cwtl mov xchg cld loopne add and ja lcall dec (bad) out mov cmpsl sbb mov fnsave insb mov ficom adc and int cmc out call imul test icebp fsubrl cmp jo sbbl movsl cmp and or adc sbb sub adc inc int sub dec xchg (bad) adc movsb test jnp add adc push and mov xchg mov fwait (bad) insl clc inc ljmp clc jne outsb stos out (bad) cmp jno push mov mulb mov aam stos roll mov push lcall jecxz pop adc cmp in iret loopne sbb dec fs icebp test or inc ss inc cmpsb fdivrs inc jb push fs rcrl add or fidivl in jle xchg enter xchg hlt (bad) push add jnp fsub sahf scas push sub or scas daa sub or push adc and sub cmp loop xlat push mov mov (bad) mov lea xor mov aaa jb and dec je mov inc clc dec pushf pop mov outsl push cmpsl hlt fdivp mov out sbb (bad) gs cmp mov fiaddl fidiv inc or lea repnz adc mov (bad) jb es ds jbe pushf stc cwtl daa mov scas cmc xchg push fwait adc mov push mov (bad) out jp inc sbbl dec loop subl adc jo sub mov add xorl ds dec xlat dec (bad) shl pop je push dec mov xchg dec cmp lea inc gs mov popf jmp out sbb test mov mov std leave add sbb inc hlt dec and fldl (bad) out mov stos lods gs xor cmp inc hlt xchg inc flds movsb mov pop jl or xor push outsl outsl sbb cli icebp jge dec addr16 or xchg rorl jne cmp adc xor inc sub lret rcrl or pop imul mov add mov sub xchg in inc cmp or pop sahf mov adc (bad) xor andl mov stos pop iret jp fcmovne or scas cwtl push pop (bad) cmc mov lret jae push into roll jl mov inc ljmp xchg das lahf jo push cwtl inc xchg and adc ja jo imul push out push mov inc movsb pusha push iret aam (bad) or (bad) jge or mov fidivl popa push cmp push mov dec test test and das psrlw (bad) mov aas add inc jp in int3 mov pusha movsl and (bad) imul pop jmp repnz cs xor pop adc mov mov jecxz aas cmp hlt aas in scas cmpsl setp jbe pop leave repz sbb jbe daa sbb xchg inc xchg ds mov enter sti je sub jge fsubs rclb jnp fcoml shrb and jp mov ja sub mov jnp add std adc jecxz sbb jns cmpsl push cwtl stos pop ja cmp push test mov push sti popa jge into mov (bad) jo or ret mov jmp pop sti mov cmc and stc clc xchg dec ret fucomi ss movsl jge xchg jns cmpsb sbb mov jbe lahf xchg scas iret repnz xchg cli push dec fcomps rol jno mov and inc adc dec xor dec rolb mov rorb roll cltd mov lret dec inc mov jb (bad) mov or pop in mov ret lods int3 cmp cmp jbe xchg insb pop addl inc xor (bad) cmp or into cmp pop les lret sub fisubr pop fbld imul sub sub ja movsl pop dec mov mov movsb inc sbb and adc push pop aaa jnp (bad) lods test sbb push sub lods mov mov cmp sbb pusha push mov xchg adc adc adc repz push adc xchg fidivrl lds dec inc mov mov or in mov push ficomp mov push jmp lcall cld and cltd cwtl mov jb lahf mov in adc sbb popf push popf push add sbb mov sahf mov test jo cltd cmpsl jns insl push data16 int3 repnz lock pusha movsb in lret cmpl and cs sub movsb mov add xchg add aas ss pop daa ret xchg jmp repnz sbb xchg test or loopne ret lahf xlat mov cmp rcr je or leave and mov and dec (bad) aad in xchg sbb test call notl js mov mov add or mov out std lahf cmc mov fwait add in push test xchg mov cmpl cmc out das xor jge popa dec inc and lret arpl adc xor cmpl inc lods lret mov pusha scas jl or and psubsw cmc inc xchg rol dec movsb inc adc jnp and aas cli push in es in fcmovnbe dec fiaddl pushl xlat movsl ret dec cli sbbl in stos and add sar mov jecxz adc xor (bad) mov jbe shl push adc popf dec pop ds xor sti jg scas sbb retw ljmp push (bad) imul dec rolb xchg mov stc sub arpl push pop sti sti ret pop nop shll xlat cmp ja pushl loope adc cmp mov aas mov out sarb mov jno popf mov add cmp jg cmp mov cltd icebp sahf rcll sub enter lret test notb jns mov pop sbb and adc cmp mov add out push mov test popa fwait xchg adc (bad) arpl and sub out mov ljmp sub mov mov dec nop inc or or ret cmpl in add shr cmpsb sub test pusha shlb xchg test cmp testb adc rolb add int jmp inc (bad) xor xchg movsb mov out icebp pusha rcrl mov cli xchg addr16 lret xorl xor (bad) icebp outsb loopne out mov ret and xchg fdivrs xlat inc popf mov inc (bad) (bad) adc leave cltd add (bad) mov jnp ret out push (bad) xor and mov fildll bound rolb testl xchg cmp test pop cwtl in xor or sbb or ret clc xchg mov les scas and lretw lds cld out ljmp aas outsb pop add cs jecxz jge push sbbl adc cmc (bad) push andl nop popf xor pop ljmp push push dec inc fisttp and sarl cwtl add xor popf push hlt repnz gs mov sub outsl scas dec dec scas mov das int3 xchg xchg dec imul hlt imul in mov ss sbb and call aad inc pop mov into call pushl cld jne mov sbb xor repz and xchg (bad) xlat leave or (bad) fwait sub movb clc add push arpl fwait push xchg xor inc pop cs int adc fisttp jg loop repz (bad) jns fs fidivl jmp dec push pusha and int stc fiadd fcmovbe dec in push dec stos jle std pop aas lds jle mov adc lret (bad) xchg sbb fcmovb (bad) pop jo xor (bad) out pop fcmovbe mov cs xchg inc fwait add sbb adc dec dec popf xor cmpsb mov or add sbbl test adcl loopne pusha push fwait aam cmpb jg loop iret jne pop or mov pop fmul push jle test xchg test push leave lea scas inc imul lcall fcoms jmp repz xchg (bad) stc imul push (bad) mov (bad) pushf adc push mov gs mov orb sub add mov mov push insl mov gs lret fcom sub xor inc dec mov push outsl pop (bad) jmp sbbl add xchg add jecxz outsl xor adc flds icebp mov or mov in dec sub loopne cld (bad) ss adcb loope mov pop push cmpsb aad fsubrs mov dec ret pop rcrl clc push pop push (bad) dec enter jb leave inc dec mov sub mov xor xchg shll lods cld dec jne push je in arpl ror je scas jne add test sbb inc cmovbe pop pop test out cmpsl adc (bad) xorl jbe cmpsb push loope inc js sub jne mov mov enter lock jae fcomps hlt xchg fucomi in addr16 test (bad) cmp xchg fcoml (bad) dec xor push adc sbb test jno mov das (bad) xor cmpsw sbb mov (bad) and cltd push loope adc ljmp ja lret mov xchg xlat push mov jle xor mov mov aaa add or sahf popf xchg imulb jae shlb incl fidiv dec dec shl inc mov leave inc loop int3 add adc bound fst cld in movsl adcl sahf add adc (bad) mov dec sub pushf ljmp pop and adc sub jg adc cmp ds jp (bad) fs sub adc lea jo movb les ret sbb jne mov loopne leave cmpsb cmp std lret leave jmp dec std frstor add decb repz (bad) pop push pop dec mov jb dec xor out xchg sbb and pop sbb inc jge das xor imul ja scas out int3 (bad) mov imul daa xchg push add mov xchg inc fiaddl outsl imul dec test mov rolb xchg jp (bad) jmp cmpsb cld ja cmp ja les fs movsl into dec jl cltd stos add add xlat jne dec mov jne dec call icebp push adc stc xchg hlt jno adc sub aam stos add scas push push test nop or stos xchg negb js mov in repnz or dec mov aaa or leave movsb jge cmpsl or mov lret scas test push ret add icebp scas jmp repz int mov cmp push cltd dec test out lretw ficompl arpl pop repnz or fisubr insl test push mov scas bound bnd outsb push mov xchg push imul jnp add mov out gs and mov xchg lods sub test scas rcrb rolb add lods sahf mov (bad) cmp jp xchg ljmp mov xchg mov testb push sub test sbb xor idivl xchg sub xchg int3 mov outsb xchg mov push out push nop mov daa movb in jecxz repz scas and pop call cmp mov out pop bnd fwait cmpsl mov mov or bound pusha mov jno das call and xor movsl arpl and jno (bad) mov fbld inc punpcklbw stos mov mov push ss or dec dec (bad) or xchg jecxz into jp mov aam cld pop cmc jne,pt sbb jns sbb cmp ss loope push outsb pop cmc xchg inc test ss hlt daa dec fbstp (bad) mov push sub mov mov inc mov sahf scas movsb ja lods xor inc xlat fadd daa lods sbb dec bound or fnsave mov out mov or jnp rclb mov dec (bad) or fdivr adc mov inc fisubrl adc test (bad) ljmp xchg dec xlat adcl cmp mov push or inc xor sbb or xchg push ljmp mov jae mov std sbb pop pop lods bound cmp pop jl mov and mov cmpsb xchg add xor jo mov inc pop xor ficom loop cld notl cmp out adc (bad) mov xchg cmpl xchg sti add and mov cld dec cmp cld xchg push scas push rcr (bad) in cwtl xchg mov inc dec sbb add imulb ja adc xor pop jo cmc sbb shlb sbb insl imul jns inc outsb repz mov sahf imul popf lods lret in or or shl push pushl mov cli cmp int xchg fisttp sahf das in mov out cmc mov into lock ljmp fisubr sub notl cmpsl loope cwtl js mov cmc cli and sub inc (bad) inc in push lcall dec xor adc andb lret test fildl fucompp out test (bad) insl inc out push and adc mov sbb push test mov jnp add ds inc add jns out cmpl mov popf adc jo pop fwait insl xchg dec sub xchg rolb add pop and std data16 scas ja xchg push mov mov push test (bad) mov inc dec sub nop mov lds lds push imul jecxz or das (bad) xchg sub inc cltd pushf lds subl jmp or test stc inc pop lcall and fcompl mov aaa in sub cmp dec fldenv stos dec mov fildl sbb ljmp out pop cmpsl xor dec mov sarb xchg addr16 mov ja fmulp xchg inc cmp xchg mov stos jle xchg mov sub xchg push stos pop inc repz rcrb ret fisubrl subb add fmuls cmp push std cmpsl (bad) sub loope lcall jp ljmp sub jae pushf ja inc scas ds bound stos sahf xor das repz jnp enter fcmovu push fdivr dec mov push add cld or and sbb xor (bad) jne inc mov je sbb addr16 inc loopne jle cmp mov jecxz,pt jl call cmp dec rol call xchg (bad) xchg iret dec rcrl pop cmpsl mov jnp out test push push aas test adc dec loope add out fmuls push jl popl xchg not fldcw stc das negb mov fs fs dec push fcomps rcll cld dec std adc pop in out pop and in shrl pop jmp rcr jb out mov stos sbb lods jno leave lea (bad) sub ss adc mov outsl jb mov test test push bound mov (bad) mov mov insb mov xchg jecxz push cmp gs (bad) sbb sub popf clc fnstsw sub mov movsl push push adc inc aas or lea and loop mov jno rcrb test rorb mov xlat lods xchg ss ds mov jmp icebp dec stc inc mov loop orl loopne ljmp mov pop stos push mov jg sbb outsl xchg lret loop or es mov mov jmp hlt jae sub push pop jbe jg lahf test sbb mov cmpsl pop mov push sbb xchg dec in mov cwtl mov mov sub xor (bad) fsub push in jne lret insb xor fwait jbe fiadd push sbb aam js,pn cmp sbb lret lock or adc xor lock pop pop or pop lcall and stc dec add iret out adc addr16 out sbb push shll (bad) std pop pushf insb xchg lahf mov ret clc dec outsb fiadd jbe pop outsl jb dec int3 std popa cwtl pop jno xchg mov push push test mov mov sbb pop mov das lods pop (bad) xchg fsubs inc ss xchg inc ret (bad) test insb jmp xchg xchg mov lock int3 jno ljmp ljmp aad lret pop pop sub outsb cmp cltd push mov and mov daa sub (bad) sub fs icebp orl insb dec dec pop pop adc and arpl cld ljmp add xchg in sahf add or dec dec call clc xor out jo mov scas xor dec mov outsl test call popf mov pop mov mov adc and adc mov mov add xchg (bad) repz adc jge pop pop push shl lahf js (bad) push inc jp adc xor inc lods lcall cmc inc cld lret dec fcoml dec mov pop mov adc mov cmc push mov jle jg push (bad) adc sub xor or out cmp fisttpl push mov add ljmp jmp jns leave popf mov sti rclb push lea call test add xchg and inc sub andl in pop test cmp add int push mov repz sbb lds daa cmpsl mov test push inc inc xchg jl in mov jns mov dec add or xor sbb cwtl push sub addr16 cs xchg mov mov xchg pop inc icebp inc aaa lock cmpsl test push pop (bad) jge mov mov out mov cmc xchg pop loopne and dec mov loop or out sbbl jno popf xor pop loope push repz aam mov stos xlat jb subl jae iret popf push cmp mov int3 dec or sahf cld pop inc pop inc popf mov (bad) xor clc adc mov push stc mov cmp testb and lcall sti iret ja sti cmp xchg lret je mov inc (bad) jbe (bad) mov aaa push jae insb popf mov orl adc shrl add aad push ss xor inc les notl pop mov ror add mov sbb add mov mov jp mov mov test add or inc mov or push inc test and sti push pop pop jae std mov mov rolb in popf insl jge mov sub mov repnz fistl out test movsb lea adc sub or (bad) or fidivr fcompl push popf cltd xchg inc (bad) jne sub and dec add les or cmp jp xor inc or xor inc into dec push mov lods or mov out popa inc enter aas ja stc cwtl lods xlat ror pop dec mov popa cmp lahf out or xchg ret or decl repnz in insb inc (bad) ljmp iret sahf daa call jns xchg adc mov aam pop popf sbb lcall pop out mov cmp gs inc push sub mov test add cmp bound sbb mov pop inc push les cmp mov or in cmp sbb add ret xchg mov scas or fsubrl aad test in inc (bad) inc in test (bad) rcrb movsl test loopne out std (bad) mov testl aaa push addl ja push lcall lcall nop rolb mov aaa fcomps xor out aaa add adc movsl loopne mov dec xorb shlb dec in xor sub out fisubr lahf adcb addr16 cmp insb mov ret das sub loope enter lds repz stos sbb xor popf mov mov inc js addl lret dec xchg js jmp sub fstpl mov mov movsl adc inc xchg test (bad) lds cmc (bad) cltd sbb mov arpl and ljmp fidivl jl fisubl ljmp inc clc loope inc imul das adc adc fs mov icebp or test js mov shrb inc in pop test lcall inc xchg mov sbbl inc leave cmp lock cmp xor add mov nop or mov icebp adc sti scas cli sahf jle fcompl call dec pop push mov roll stos jmp xchg (bad) ficom lcall or test sbb xor mov aaa cli push sub xlat cmpsb or xchg xor clc and adc test jmp sub ret out xchg loop insl pop lret xlat jge mov or mov ffree add or or cmc xchg or push das inc cmp dec rcl gs jmp push pop ret mov xor add scas mov jnp inc push iret data16 pusha push inc lea adc scas test push mov shll mov rorb xchg fsincos daa loopne mov xchg mov fnstenv fstl and push test fnstcw data16 lahf xchg pop iret leave pushl inc fs xor pusha neg fstpl ja rclb jge adc mov pop inc lret push bound inc out lahf mov fxch ds stos in pop and inc dec mov mov jecxz imul jecxz dec mov pop ret jge pop jle imul icebp cli mov (bad) mov add sub les scas imul orb fs movntq push sahf dec dec cltd popa shrl mov arpl call adc (bad) decb adc mov mov iret stos cld xlat dec getsec enter mov ds lods inc mov or call fldt jmp imul mov push mov inc xchg pop andb sub insl loope sub mov mov xor push inc cmp push cmp cwtl ret into movl cmp mov out mov in gs cmp xchg cld xlat mov nop mov add dec je das dec aam push addr16 bound loopne push or xchg jl cmp jo and inc cwtl loopne or jo xchg roll fisttpl arpl call sub (bad) into jo movntq aad aaa lock cs add jg add enter adc popa dec or loope movsb cmp sub into jecxz xchg cmpsl cmp cmpsb inc cmc sbbb inc sbb pop jecxz js iret fbstp sti xor adc sbb in mov push jns fisttpll imul int or push ficompl and and loopne out sbb mov in cmp out loope adc fsubr jl jno (bad) and fs cmp dec xchg mov xchg cld mov sub in cmpsb fadds dec hlt fistl mov repz paddw jo push jp pop cmp mov fiadd or out cvtpi2ps stos out sub outsl or rcll pop adc (bad) mov or jmp ret jne daa daa rol and mov fistpl sbb mov adc mov les adc lods pop shll sarl mov xchg dec in jno adc add xor test fucomp (bad) jno push or push inc jp hlt xor adc mov jecxz jl sub cmp sub xor lahf xor cmp mov outsl fdivl mov pop scas mov fsubrs adc cmpsb jmp rclb lahf test ja jo lcall push out adc sti dec cmp sub cmp scas iret and xor pop and xchg add out xor jl or les xchg add add mov pop xchg xor int mov subl and fstpl pusha movsl sub shll lock jo jb sub pusha sub imul cmp or fcmove enter add ljmp mov sbb mov adc fcmovb sub mov dec push in lret mov mov shlb add popa jge and mov push fwait jl into mov sub lods mov mov pop stc cld jne imul add add xchg out push in pop ficompl sbbl push xor ja bound xor fldcw test (bad) adc faddl mov mov ficom enter or js arpl add icebp scas subl inc pop and xchg stos and mov xchg ja stos lcall in cld mov and sub mov divb lock int3 repnz imul xorb repz out mov jmp cmpl adc repz outsb jo subl pop cmp jnp push mov mov sbb add fisttpll mov xchg clc mov outsb sbbb out sub push xchg cwtl adc call sbb and cli popa inc inc out imul xor into sti cmp jns add lds lret jo jns mov test std push or (bad) aas mov or iret fwait dec mov loope test js aad ja xchg xchg push into int rolb es xor push es in cmp and push mov cmpl pop stos hlt scas fmull pop insb mov test clc and inc mov int3 fcompl inc mov xchg xchg xor inc mov xlat push (bad) out xor arpl gs mov jg das jbe lods xor out mov cs lds sbb scas (bad) jl mov rclb add and cmp fimul add (bad) aam sbb bnd lods inc xchg (bad) fbstp imul ss mov rclb sub sub adc adc xchg cli sbb xor xor inc push (bad) loopne fdivrp dec mov push das into xchg cmp xor push adc das xchg in sbb xchg mov push jne movsl inc insb inc jne int mov stos lahf jge inc scas out nop ja push push cltd add mov stc add dec icebp repz mov je cwtl sbb out dec imul ret mov push cmp lret loopne add xlat arpl notl data16 mov sub and inc add jne sub mov cltd adc (bad) cmpsb sarb jbe inc clc adc jle push pop xchg inc cmpsl dec or (bad) xor mov mov fs push stos das cmc dec push mov push int adc pop movsb sbbb popf loope lods xchg out (bad) mov and cmpsl hlt xor inc mulb mov push cmpl mov (bad) int imul fidivr orl dec cmp jle adc ret pop jne dec bound lret loop es int3 loope,pn inc addr16 mov insb add inc dec scas xchg (bad) ljmp adc sbb call or out sbb rclb insl stos sub xorl jmp lea fdivr faddp mov dec mov in scas sbb (bad) mov pushf hlt sbb imulb mov int3 add popa test or dec inc loope add jb cmp das bound mov lahf mov gs lea inc lcall lods test push mov aam pop test ret orl push jmp out add push mov push lret daa in iret xchg pop and dec cmp xchg pop fwait rolb mov loope test cmp fwait outsl in adc xchg pop enter push leave aas push into jecxz (bad) pop pop (bad) jb mov pop pop movsb js insb mov ja add das es int3 and and xchg mov push stos sub out add push sti sarl cmp (bad) icebp rorb nop cmp xchg inc dec loop xchg stc cmpsl lds dec mov xchg scas lahf pop cmp mov stos lret xchg pushl mov adc subl sbb mov ret mov or jle xchg ja dec faddl cmp cld dec xchg dec and lret mov icebp and jne mov and add shlb xchg xor loopne ljmp stos fdivl je sub in cld and dec lds add inc jge or xor out mov pop dec lods add jge fsubr pop dec adc es jge mov hlt fild xor gs and sbb pop pop or dec jns mov (bad) rcrl inc jb cltd cli cmc iret (bad) or mov ret daa sahf mov in call mov hlt enter in stc insb xor aam idivb int push xor lods mov clc inc lods gs and loopne cmpsl movsl call mov mov cmp arpl repz sbb repz add xor and aas stos in bswap ret into push clc leave rorb xchg push inc fisttpll jp sub or mov xchg push call lret cli push jle int3 mov cld (bad) sarb repz mov (bad) ss fistp jno inc and fwait mov cli dec jg lea arpl mov inc clc add shrl pushl sahf or stos push dec xlat aaa inc or popl mov inc and mov fdivs mov les push or fsubrs mov cmp out aas dec les or mov mov hlt (bad) fldenv jne inc mov in lahf fmull mov inc sbb mov hlt mov cltd fdivrl rcll mov pushf scas ja and shrl jmp out dec push xlat cmp cmc pop test add cmp push fs sbb in xchg (bad) sti inc xchg sub scas cltd mov ja ficom xor inc repnz push xor pushf cmp inc cmp addl (bad) dec mov jo xchg jb push dec cmpsl mov xchg dec pusha mov popa push jmp sub hlt dec mov fmull inc dec out sub test pop faddl add jmp push test leave rcrb inc std lods in in out mov es mov mov (bad) push cmp xor stos nop cs (bad) inc andb sbb scas lahf repz rcll push or call inc push add push push pop xor imul scas cmp imul insl stc xchg push push xor jno push (bad) cmp cs jmp jg sbb sbb inc mov outsl cmp loopne imul cltd dec mov mov dec xchg adc test hlt pop push pop hlt mov pop jle push push mov mov je cmp dec mov loopne outsl mov stos ja aad mov (bad) test int3 mov enter insl push js ret scas pop sti xchg shrw movsb clc push push ljmp xchg push fdivrs push jb movzbl popa mov aaa (bad) rcrl jmp pop aad das outsl dec fld or sarb and movsb mov inc clc lea jne pop xor xchg imul push in sub and cs sbb popa test sub dec adc xor add outsl clc inc push push mul fisub (bad) and (bad) mov jnp xchg (bad) xor push shrb mov insb mov out inc test xchg jle jecxz add dec dec sub xor mov (bad) aaa enter sarb movsl mov cmp icebp jl (bad) push out push mov add adc cmp mov mov andl xchg imul mov add imul fdivl mov cmp popa in jne xor pop mov inc inc imul mov xchg xchg and iret mov mov and inc mov shl and pmullw pop insb ja bound xlat out fild fstpt sahf cs jo push dec add insb (bad) loopne mov test pop aad jnp fadds push pop mov jne jecxz (bad) cli or mov icebp leave xor cmp xchg push (bad) (bad) (bad) mov lcall push dec das push sub (bad) mov and push sti pop test adc pop cltd in lods jge add xlat jb xchg jge clc lahf (bad) push xchg jo lcall dec cld xor lcall xchg je push int3 std aaa inc fsubl dec fwait push sbb xchg aas ljmp decb scas fsubs inc inc cmpsl mov push jmp enter aaa lcall add (bad) pushf mov pop inc add mov add shr js lods mov int3 pop adc xor pop dec mov outsb inc (bad) fnsave mov sbb jle orl clc push mov scas cmp or leave jge jne sbb sub js push add xor mov cmpsb xchg fildll jp mov fs fwait les loop xor sti movsb sub gs nop jmp aad xchg loope push mul js loopne mov outsb adc stos sbb xchg lods lea repnz xchg mov mov dec push push das jns xor das ljmp fwait dec mov dec repz inc (bad) jg sub out rcrl mov cli sbb push xlat imul jbe xchg dec push call pop imul push aad mov xchg mov dec pusha sti jmp mov jne outsb scas mov inc and sub insb out mov in inc push dec dec fsubrs and mov fs imul cltd pop cmp arpl mov stc or xchg fidivrl test push jp mov push pop out push lds push cs inc jns xor sub push sub sub push in jae leave aad jb sub xor loope imul pop in pop pop shr mov daa mov cmp sub pop mov out cmp sbb push and xorb leave add pop pop cltd jl enter fbld push mov cmp inc popf jg mull psubsw sbb jb pop (bad) imul push mov push int in cmp and ja push xor xchg jns sbb js cwtl or hlt (bad) pop sub inc mov dec sti xchg sub int or jl pop push nop pop imul int jns mov dec mov xchg cmp xchg xchg pop ret cld in test (bad) clc cli mov mov in lret adc aad popa dec push (bad) jae fmul adc pop push xor data16 rcl or loopne std pop insl pop xchg cmp xchg stc mov add nop xlat (bad) int mov or inc in out adc fcomps push and mov lret dec fs aas shrb pop subb les das fstl (bad) dec bswap js,pn push push test mov push addr16 (bad) movntq out out mov rclb mov mov rclb cmpsb add mov add push fdivl pop add jmp test mov xor scas lret imul pop adc pushf aas cmpsl outsl ret or jle push or pop nop cmp movsb mov mov pop sbb test cltd in fsubrs scas fldl fidivr cwtl dec test jbe adc fsubrl in and jg or inc pop enter addr16 or iret mov psrld into mov repz scas add pop cltd std push (bad) push add pop fidivrl or imul dec lock mov jb addr16 les cli loopne xchg call mov (bad) lods ret or push jbe mov test push ss sbb xchg sbb mov fcompl xchg inc sub aad sbb inc jp mov mov sbb inc rorb pop pop repnz rcl mov es mov xor nop or sbb (bad) mov (bad) bnd mov and std out (bad) sbb dec test ret in lock fmul push int lds fsubs les sbb (bad) das push or fbld emms cld push ficompl xchg or fbstp xor cmp or xor in in addb test hlt add inc inc jmp inc das push stc movsb ja pop xchg mov dec sbb cld or inc hlt and insl lods stos pop loop cwtl mov dec inc js pop xor loopne and mov stos in dec sbb sti inc pop test lahf fs lret cwtl ficoml push jge in fwait jns adc enter mov mov push pop frstor xor jg hlt jmp mov icebp fwait adc mov hlt es push cld or and ljmp (bad) cmp adc loope aaa and or scas subl mov push push shl scas scas adc lods insl lahf shll sub (bad) push and imul (bad) shll cwtl je pop les hlt lret sbb sbb add lods fcoms and pop sbb in stos pop cmc out push cmpsb mov test mov aaa jle add std inc xchg xchg add ss cs outsl mov cltd sub fmulp addr16 notb add fdivs and dec insb adc jmp sub rcll mov xchg enter or xchg int3 ror inc sub pop mov pushf sub and lea insl mov or test cmovo sahf xor movsl mov dec jmp (bad) xchg and bound inc jp pop dec cmp enter mov or test sbb pop nop sbbl fcmovne movsl pop (bad) out mov test out xchg lods cmp icebp dec add push test xchg dec loop add or rorb ret inc push scas pop dec add int3 shll sub std into lahf (bad) (bad) xor (bad) out in cmpsb movsb ja ja push fs lahf mov or hlt (bad) pusha scas scas gs out fisubl jge jle aad adc popa push jb mov rcll and (bad) divb sbbl popf aam daa jno mov and or mov xor fiaddl and clc lret adc dec repz out notb fiadd push fimul stc lds out pop push jo or lcall xchg xchg inc dec pop xchg icebp xor jg popa sub jmp push (bad) jno repnz pop mov sub push outsl cwtl adc into out mov das sbb sbb shr stos sub sbb mov inc push pop pop lcall pop in lock fimul cmc cmp fsubrl add rcrb jl leave ret lcall sbb cmp bound insb mov jge jl cli sub and aaa or cmpsl clc or mov lods jne out outsb rorl inc xor pop and add out and push popf enter xchg mov jp fmuls aaa cmpsl pop ljmp and daa leave shrl or xor fisubrl push pop push push mov mov jl and fs push (bad) popf (bad) out sub pop fsubl or lea mov ja jg nop add sub repnz lods lcall data16 inc es mov test lock mov xor loope push lret or js daa rorb call bound (bad) pop push jmp sub or adc fisubrl jne orb xchg (bad) in push pop in pop jl sbb icebp xlat dec adc test es jle or ja lods popa (bad) sbb fstps cli das dec pop push inc and cmp mov int3 setl push push (bad) push hlt add mov mov lods sarl xchg cmp dec push cmpsb jae je jecxz mov jne test dec andl jne popf sub mov dec jecxz jne cmpsl popa icebp xchg or in sub pop (bad) ljmp aad idivb in in xchg sub sarb dec jle test push into negl jb mov into mov insl stos xchg xchg lock inc add cs fisubr push sbb mov adc test lods push pushf dec cmp mov and dec jge in cs mov push iret mov jge rcll inc mov mov out sbb loop xlat jle mov pop push hlt dec mov sub fnstcw cld movq add pop and lahf mov mov cmpsl jp (bad) dec mov scas cmpsb pushf cld pop add pushf inc add adc adc fdivs xchg pop pop xchg out out inc mov or sbb pop daa mov repnz push jp test hlt mov xchg lahf mov inc in mov stos mov push jp popf repnz add mov fdiv retw mov pop jno lahf cmp dec pop sub (bad) and xchg inc sbb dec dec push cmp xor pop sub scas xor ror icebp ljmp clc and aaa pop or out and (bad) out jbe (bad) pop ljmp jbe push pop popf or sbb push shrb nop movb dec push in prefetchnta sub bound add mov ljmp outsl outsb insb push popl or cmp adc cwtl sub insl xchg mov mov movsb or or inc or fcos stc pop jb jb dec add sahf sub movb jl aas ss mov adc mov xchg icebp addb jle enter sbb subl insb fs cli pushl movsl int loope push add xchg stos pop xchg add dec xor xor pushf cs outsb mov mov push sbb xchg movsb adc mov stc jmp push fmull xchg sarb mov xor lds outsl mov aaa out mov pop bound add outsb arpl mov fildl pushf loopne insb jecxz pushf cmpsl mov push or adc lea test dec sbb mov in mov lds cmpb push jb cmp aas jmp outsb sbb (bad) cltd jp fs inc sahf add das sbb aas adc jp dec mov mov outsb movsb stos js bnd mov sub repz ror loop rclb push test xor inc sarl cli dec into mov es call mov pop xor adc ret aam adc sarl pop mov inc fwait aam mov pop inc push in cwtl outsb out dec inc mov xchg imulb cmpsl sbb mov jnp lds mov mov mov mov into out std xor mov fcomps inc xchg fistpll lcall add lcall in pushw insb repz sbb xchg xor cmp dec push addr16 out ja xchg mov mov and (bad) les inc sub adc add and xor in dec jns xor aad adc leave push outsb pusha push or arpl mov fs or out dec jg lods mov add sbb cli xchg mov mov adc pop inc sub mov sbb push add loope das add jns inc lcall cmp xor and mov cmp add adc jnp mov and push xchg pop cs add push pop inc add pushf rcrl out out or neg and mov pmullw mov sti and cmpsb inc mov dec addr16 sahf ret push outsl lcall fadds (bad) dec pushl popl mov movsb fcmovbe push xchg inc iret repnz push cmp iret sub or pop dec int3 xor movsl lret sbb jno lods flds movsb scas jo enter fild daa sbb xchg push aaa push idivl mov (bad) cld pop mov aam dec insb das adc mov mov adc jp sbb (bad) cltd cwtl sub lret xchg pop xchg xor repz inc rorb fcoms sbb inc mov aas mov arpl sub (bad) in xchg movsl les in sub out lcall fistpl and sbb stos lods pop shr pusha loop cmp mov sbb jo ss xor xor mov jge mov lea and xor and scas dec ret leave dec shlb mov pop mov out jl push push stos xor lret jne mov add mull inc in out mov adc test (bad) dec frstor stos pop adc add sahf mov and sbb icebp in and (bad) mov jne cmp jno into rol pop clc sahf cwtl cs mull imulb pushf xor cmpsb jle push imul lock or call dec xor and mov icebp or stc mov sub scas fdivrs enter jbe in ljmp adc out mov (bad) xchg pushf dec lock ret xor xchg enter cmp (bad) pop hlt popa ljmp lods int pusha movsl sub pop jg jge inc mov push adc mov mov loopne fadds sbb dec pop inc sbbl mov xor fbld fisubrl mov rorb mov jae mov das ja xor pushl mov push ret pop repz fbstp xchg adc in xor pop test in xchg or mov lea add xor sbbl jp jbe ret cmpsb (bad) mov test cltd imul enter jmp sub bnd ret xor (bad) pop xor inc nop inc and cs shrl loop scas into dec mov daa dec inc shrl xor dec rol push adc push cs sti sti aas sbb jo (bad) sbb push mov mov ja roll mov xchg push or repz (bad) loop sub les mov or scas mov push aas insb mov jbe cmp jae test rorb jmp inc push sbb in cmp and pushf cli leave jmp pushf xor xor add inc add mov push (bad) push fisubrl insb mov bnd outsl scas mov sub pop mov mov mov es loop xlat push adc pop sahf dec mov xchg rcrb inc lahf or ja add daa ds xchg sub outsb jne pop push mov sub xchg sarb add lahf test test cmp loopne jg cmpsl loop (bad) int and mov push or out ret push mov cmpsl in dec sti (bad) dec inc popf xor inc push and inc jb popf test ret leave jno icebp scas and cmpsb and test and pop lods inc fistpl jg aas (bad) xchg in hlt in and (bad) aaa das (bad) mov es ret jg mov add add fist fidiv jge,pn jp dec scas nop mov imul or pop inc xor mov outsl push loop fild xchg adc insl (bad) and cmpsb je mov stos cli les dec fcmovb mov mov mov (bad) jl push sbb cmp push int inc inc enter loope int3 or inc ljmp aam std dec lret xorl mov ja push pop loope mov stos sub cld bound loop loopne inc jp lret outsl mov in xchg jo std dec cmpsl les and call repnz scas xlat jge push xchg mov jl xchg lock call clc mov sub stos fnstsw addr16 in xchg add mov mov repnz jmp inc rolb fnstcw push ret es mov icebp cmp push fsubl or and enter insl cmpsl (bad) sub ja call mov std bound out or popa push xor or ret push cmp (bad) mov or push gs (bad) into es mov cmp fs imulb mov sbb das sbb shll dec fwait adc mov xor xor fdivp jmp xor push pop fistpll jne or or mov ljmp lock jne in out mov mov adc aas mov aam shlb xor jmp outsb push cwtl stos mov imul shll rcrl xor push and mov pop adc or sub adc jno pop (bad) xor adc mov (bad) (bad) daa fsubr hlt adc and cmp jo les mov inc das cwtl sbb ja mov push out sub insb cmp movsl pushf pop dec movsb (bad) mov (bad) sub push cmovg iret dec mov mov jecxz out pop (bad) pop cmp test pop es cwtl fmulp jl dec ss mov sbb lock mov xchg add orl xchg imul rcll mov dec xchg loop outsb push sahf add xchg std cmc push jo das out pop jle loop scas jne insb lcall es adc jb in lods push lea arpl cwtl mov std inc push popa push insb xor daa jp arpl dec xor inc jp inc push push sbbb push jle add cmc and sub mov push insl popl test xor movsl sti or inc dec mov dec pop lret std out test into cmpsl sub dec or gs dec jg les jecxz call out or orl jmp sub jl adc outsl je mov (bad) ljmp xlat pusha insl push pusha imul xchg push test or cmc xlat cmpsl test scas lahf xor jns xchg cmp pop sub cmpsb adc push ja and cmp scas and addl ret fmull in aad mov jns xchg sti sub adc test adcb sahf mov test popa xchg and fs jp xor push cmpsl mov or sbb xor ss data16 xchg sbb lock sub xor imul adc pop popf (bad) cltd push mov sbb test call into movsl lock pop notb dec push push pop sbb or movsl add sub sbb aaa out addr16 xchg iret jg insb dec out mov mov into mov sbb in cmp mov (bad) sbb inc in dec and repz lods push push sbb dec icebp cmp mov adc cmpsl mov mov sub imul (bad) mov pop jnp xchg movsb xchg hlt in jge lret sahf in pop shll adc ljmp mov add adc fnstenv (bad) dec xor or sub nop sbb jmp ss mov inc jne xchg pusha jo lock cld inc adc mov mov pop sti xchg (bad) in (bad) cmpsb pop adc sbb jae out aaa sbb sbb scas sbb pop dec jne std cmp jmp lret out xor and mov sti in xchg mov ret in sub repnz ret out stos scas sub xchg cs cmp pusha cli popa jg repnz mov cmpsb aaa imul cmp cmp (bad) pop out cmp insl inc testb ror add addl xchg mov push pop sub lahf les pop adc movsb lds xchg and (bad) xor and add xchg xchg sub arpl (bad) repz fstpl (bad) ljmp clc fbld xor pop repnz sar pop mov icebp add subl adcl push popf cmp shll push sbb scas js aam jb aam jae and or and mov sub push daa repnz std push jnp xchg push aam pop int pop movsl les pop jnp lahf pop loope in push jmp push xor stc js dec loope (bad) jns lahf nop enter add sarb inc mov xor js push mov sbb fs ja test add add push or jge outsl cltd mov cs aam add leave jecxz adc mov nop xchg sub xor cmp dec lret xor ret mov pop and (bad) repz lock sub rcrb add push add inc pop or xchg lret mov and popf jl insl mov push int3 bound mov ret dec mov cmc mov cmc or or fistpll call jp lcall mov (bad) clc jnp mov (bad) push loope dec cmp outsb lock jno push out mov rcrb or and das loope mov aam icebp push push stos es push scas (bad) je or jbe shrb lret adc outsb push pop sbb inc push cmc sbb jb aad mov js into js (bad) sub int fsts ds loope xor push test out testb jo sbb ret jmp test dec mov test jo add call and mov mov dec stc sbbl dec adc or mov (bad) and into jo mov inc xchg movsl ja test ret out addr16 xchg rcl adc and jmp mov aad (bad) inc (bad) adc or in icebp (bad) aas mov sub mov (bad) mov pushf push testb test pop add push jecxz pop or push adc mov xchg jp push sub test and sub not (bad) xor dec ret dec adc mov popf test xchg add andl jle inc rclb imul dec std nop ds jg ja dec pop imul (bad) sbb pop mov call jle (bad) xchg sub or fcomip pop inc mov mov pop inc lock ja daa es cmp bound inc in cwtl lret xor jae sbb sub adc cmpsb add in mov xor jbe cmpsb push lret std mov ficompl and mov or jp sub cmp out iret call ret dec mov (bad) arpl bound (bad) pop mov loopne ja inc cmp mov mov mov pushl cmp sbb jb cmpsl xlat mov and xchg sub cmp mov loop call fcompl jno (bad) stc mov or add fwait mov ds popa notl sbb ret lea push fldl add aam ret gs sti call pop push dec and adc jp psubd cs adc jne push and inc jne jo (bad) repz xchg and add pop sahf sbb mov mov pushl repnz (bad) cmp inc popf insl push cwtl movsl mov nop mov adc lods mov (bad) idivb mov dec sbb add jg es or xor pop shl (bad) mov add fldcw pop int3 lea fsubl pop test push adc sbb xor (bad) cmp lods or pusha push xchg mov imul add out mov sbb addr16 jmp cmp jmp mov xor mov ret popa stos xlat pushf xor in and push jl pop js mov pop lock push aaa xchg bound and aam scas and ret fucom (bad) sub in out cmc fcmovne popf add inc cmp cmp cltd lods cmp idiv mov mov mov shrl inc and xchg mov and (bad) mov inc addr16 push jae mov lahf rclb scas adc xchg jne shll and xchg xchg setl or inc push int xor xchg fsubs ret jae adc xchg popa dec mov lock xchg out (bad) dec rclb lods (bad) mov aaa push addr16 mov cmpsl cld pop mov mov add ljmp (bad) (bad) cmp inc ljmp push in cmp jbe jge arpl xchg aaa xor lds mov or movsl inc mov (bad) jmp or mov or repnz loop mov (bad) movsb int loopne hlt jmp (bad) icebp cmp mov add mov daa addl lcall cmpsb enter dec sti test cmp pop mov mov sbb mov cli ret push (bad) vmovdqu dec pop sbb arpl pop push sub popf xchg mov ret (bad) cmp cmp in sbb (bad) int loope jbe negb sbb xor leave out (bad) cltd cld xchg es jno push cwtl inc gs mov pop lahf xchg add cmp sub out mov aad jne imul mov mov es dec dec sahf push loop lahf mov push jb xchg mov movsl pop cmpsb cld inc into jb in xlat mov (bad) shr (bad) sbb jg jle stos fwait rcrl stos js jle or mov mov int3 adc loopne adc dec shlb clc sub jge cmp lds mov pop arpl (bad) loope sub sti xchg in fadds call cld int add scas inc mov roll mov adc das push adc das cmp jl pop shl mov out insb push add mov insb dec inc push cwtl mov cs adc mov (bad) mov or and push stos shrb out mov cli mov je sbb loopne mov arpl sti clc xor fcmovnbe in outsb repnz scas (bad) dec or movsl cs jmp pop ljmp mov loope jg stc in pop shlb push sarb notb lds pop inc sub lds jmp mov mov push jbe or leave jle rcl test and popa and (bad) xor aaa fistp mov shlb (bad) mov mov (bad) dec lcall adc push loopne stos sbb xor xor add jg push (bad) hlt mov jp loop,pt (bad) pop push (bad) into jae xor roll sub sub mov out mov insb (bad) in push insb sti inc pop sub mov or push aad scas cmpsl jg rcrl daa fdivrl test popa mov xlat jle mov enter mov fcom cmpsb hlt xchg inc out scas bound mov cmp jmp rorb xchg pop sbb dec xchg cmpsb data16 push or adc sahf movntps lret add adc cmp cmp mov xchg push adc lret (bad) xor sub lret pushf es notl xchg out outsl adc das or ret fldz rcrl repz mov inc push out adc (bad) mov arpl push outsl jg out ds in fs pop inc jl gs mov sbb xchg xchg sbb push add pop add jns mov jp test mov cli jg outsl test jne outsl xchg (bad) arpl rorl dec inc push jns (bad) xchg cmpsb scas xor fdivl dec out daa sub jae inc mov cmpl (bad) xor mov scas fistp fldenv icebp mov std jl imull insb rorl popf lcall shr push mov shlb inc (bad) rcl and test test cmp add cs aad adc push lds mov sub jns pop aam (bad) dec into ja (bad) int3 cmp adc push imul adcl leave jmp in hlt (bad) pop movsb xor insl insl xchg (bad) (bad) jmp roll xor icebp xchg inc imul popl inc (bad) push adc je adc outsl mov sbbl mov lahf lret pop out mov sahf and inc nop dec inc inc mov loop mov (bad) push inc cmp cmp cmp and pop repnz sub fdivrl xor int jbe addr16 test add and inc sahf les sarb shl lahf and rorl adc or cltd dec adc jne dec pop loope test les sbbl push out cmp outsl scas outsl push pop cmc mov icebp stc stos sahf inc cmpsb dec hlt sbb iret rclb ljmp lea stos sub out jae ljmp hlt xor dec jg xchg inc jl push icebp dec andl jg and sti or push jnp sub mov xor scas fsubr push cmp sbb inc addr16 adc push test leave testb push movsl icebp mov sbb ret xchg add pusha in outsl test out movsl mov cmp pop test pusha lods call (bad) div popf mov jnp fwait inc sti or mov lea mov add push out xchg hlt adc fisttpll imul (bad) repnz bound inc sub add (bad) lret sahf xchg fsubs cmp mov dec lcall mov sar fwait xchg jne inc pop pop in mov xchg insl mov stc adc lds aaa (bad) add std push cmpsb insl ret or jbe cmp incl shrb pop jp enter loope jp out dec mov add cmp mov or mov xchg xchg stc lods xchg cmp clc mov mov mov movsb xchg rcl jge push aaa (bad) cltd notl out pop adc fildl add or push pop aam stos sbb jmp pop repnz xor inc scas aad (bad) aas inc enter dec mov inc jae inc mov mov pop xchg js and dec les add mov xchg mov leave fwait iret (bad) shrb int3 js dec jge xor idivb ss pop or sarl mov mov fsin popa cltd adc out test pop frstor fldl lea push imul cmc mov mov out push adc mov scas or sbb push xchg outsl aaa sub adc push add lods out nop xor lods out cmp es or jnp mov or repnz mov mov test lret pop adc sarl lds frstor pop loope adc jo dec movsbl and push fs nop into cwtl rcrl xchg add inc (bad) push addr16 je insl sub xor int3 lret mov stos jb and iret push push out sub sbb mov push setae outsl xchg sbb mov repz jns add mov adc (bad) xchg out xchg test notb fisttpll cmp or mov and and push gs xor call xor test dec pop pop aas pop jbe add push adc jbe sbb mov sub sar ss lds ficomp rorl inc mov loop shr push and sahf sbb inc (bad) push fldenv leave mov sbb cld dec (bad) div pop cwtl pop inc je mov cli pop mov lahf add addr16 (bad) and test mov and add bound cmpb dec rol xor cmpsl xchg nop lahf scas mov mov push jns call jge cmp mov aas add cmp es in inc lods inc xchg and inc mov das ljmp xor xor sbb mov cs out xchg test and push fwait dec leave xor pusha icebp dec pop mov in inc test sahf sahf mov ljmp add dec pop out pop cmpsb dec xlat loope fmuls push mov ficoml mov movsl mov cwtl inc mov dec mov jmp (bad) cwtl dec out fcoms push pushf add inc inc cld push sbbb gs enter js jmp xchg cmp xchg push rorl dec ret outsl mov fwait sbb addr16 pop adc lods sub insb sub and jecxz xor or nop fnstsw insl (bad) pop dec sbb stos add sub xor cmp es or (bad) mov or sub or adc insb mov mov int3 add jae aaa cmp dec cmp int jbe sub xor scas shll fwait cltd fldl rorl jbe ds or push or mov push sbb jmp cmpsl mov (bad) jle or sbb push adc pop dec mov mov ljmp xchg jle adc and sahf cld push push adc pop mov xor dec in in popa add test pop mov pushf xchg and idiv lcall jo cwtl cmp xchg xchg ss mov shrb mov dec leave lret mov fldt (bad) xor out int int jle or push dec adc test jmp shrb sbb outsl lret movsl int3 cmc aad sub dec insb or sbb adc cmp and push cli pop push fildll je (bad) cmpsl jbe data16 lock out (bad) sbb aas cld sub jb test jg sbb dec sub inc aam jne jmp pop or cwtl sub xchg jge cmp mov cmp insb or (bad) mov lea xchg addr16 loop cmpsb nop lds cmp pop divb (bad) lea das sbb aas nop or inc je xchg dec mov loop or loopne and mov nop aas mov mov stc inc stc (bad) adc mov aas clc rclb ja xchg mov aaa lock or das adc mov scas test xchg sbb cmp adc inc lods cmp inc leave mov mov insb mov stc cmp sbb pop sub cs cmp test cmpl xchg sub cmp arpl mov push cli out push cmp fisttpl je xor cmpsb xor outsl ljmp loopne add lds in mov das jmp push (bad) enter es inc xchg push mov push sub adc inc mov fldenv pop inc in pop add dec xchg data16 mov int3 insl aas int3 outsl push push mov mov (bad) jl adc movsl outsb mov ljmp sbb mov sti mov insl mov xor cmp stos shrl push imul jns push cmp push shll add stos sub in ret cmp xor xor lea sub imul sbb sub je pop sub imul mov jge leave mov aad (bad) adc and (bad) dec jl add loop ss jno or popf xchg loop xchg sbb cmp or cmpsb sub mov fstl mov add ret test mov push test mov inc cwtl ljmp mov jg test andl cwtl cmc adc pop mov daa loope iret scas aad add movsb cmp inc out rcl adc cmpsb icebp (bad) das cmp jecxz and lds jp movb out stc sub es jl popf sti push (bad) mov xor iret push sbb jle lahf (bad) imul mov sbb stos add jecxz repz lock xor ficompl mov and sahf add cmp loopne mov jo sbb jno adc cmovs jg jecxz adc jne scas mov jp icebp mov outsl push fsubs js sarb lods adc iret sub and inc xchg aam or push addb and or scas push push cmp out add dec jl test icebp insl and cmp ficomp or (bad) jle xlat lods push dec adc inc cmc sbb adc mov mov jae jae jecxz inc mov inc fistl aaa gs mov cmp mov push fdivl insl out jle insl mov jno push and push or imul cld stos add xor xor add mov cs and (bad) addr16 xor sub mov mov pushf test (bad) pop pop mov jmp addr16 dec and mov fcomp mov sub mov jo cmpsb (bad) out dec cmpb fildl imul jp (bad) pop (bad) adc aaa jmp sub inc jmp in icebp push jb lcall mov push rclb scas stc mov (bad) dec jp xchg lret dec and push cmp outsl and adc mov push ds mov das test popa out xchg xchg (bad) mov call cmc les push fdivrl aaa sbb add enter movsl mov jae sarb mov std cmp xchg inc (bad) xor stc pop push (bad) (bad) jle or mov das scas inc pop in or mov adc in nop or mov cmp xchg insb add ret fstl (bad) imul roll das stc clc jp jns into es stos sbb es push cmp push pop loop mov lret test out cmc addr16 out div push repnz lds into imul packsswb daa sub inc and adc cltd dec insl cmp xor pop xchg push sti out in xlat data16 jns fldt sub push imul repnz movsl or push movsl je sbb mov js mov (bad) push inc imul or push out xchg pop xchg xchg cmpsb stos xor dec je enter cltd inc dec stc enter icebp sub push xchg pop dec scas cmp repz sbb ss push mov (bad) pushf bound dec and loop cmpsb mov cmp push sub adc and dec cmp dec and (bad) push leave mov mov mov movsb or inc insl mov push in incl mov inc dec inc sahf sub mov jae call push add pop fdivrl mov aam dec movsl stc or popa ret inc loope or push shll lock test sahf push cmpsl sbb push mov repnz jge cmpsb xor gs sub cmp jns aam jmp sbb xlat xchg scas (bad) mov adc idivl and movsl sub out mov mov ret mov cmp mov test mov mov or ljmp pop aam out insl sbb stc jo xor add xor pop push sbb xor push xor xor xchg js push adc (bad) mov push add loop repnz mov dec cmp cmc xchg cmc imul (bad) xchg aas (bad) enter dec punpckldq or jns jmp and out sbb sahf cmp lods sti xchg dec jl dec pop add insl (bad) repz sarb imul cmp test jmp (bad) push dec dec adc cwtl into arpl int3 sbb loope test mov int aas js fs mov rcrb stos das push mulb cmp ja mov movsb sub pandn movsl xor xor add mov inc push sbb jne lock icebp adc (bad) loop xor cmp fistpl mov fimul xor pop cmp pop cld sbb movsb inc (bad) out insl outsl dec (bad) sbb mov push fwait fwait int3 xor mov mov pop pop mov movsb cmp inc cmp jl cmp inc cld push fnop pop xor dec mov imul test xor test dec pop mov push and clc inc scas std adc pusha cmp (bad) jmp lods jbe hlt cmp fsubs scas xor sbb (bad) nop inc or out stos pushf sahf mov aaa sbb stos mov je and sbb mov ss mov and in fsubl movd pop jbe mov dec out sbb pop ja ss test in or inc sahf lret fidivr or inc mov loop cli xor lods jmp in jo loop ret fdivrl popf mov stos test into sbb lds popf lods push jae hlt imul (bad) insl xchg dec adc mov stos rorb movsl jg iret negl (bad) ret lret subl movsl xor lock lods ds push jmp notl cwtl jle mov cli pushf mov outsl (bad) jne adc fldenv lahf lea js dec in (bad) jno fstl sbb scas mov shlb lcall sbb adcl mov and mov repz (bad) push xchg repz js lret test mov push lods xchg mov out mov mov pop je ja mov or enter mov repz icebp notl pop out xchg addr16 lock sbb push outsl rcr and movsl (bad) out shll adc xor add cmp sub outsl dec add cmp jecxz dec mov mov lret fxam and aas and push cmpsl sahf push push cmp push call mov in adc sbb pop repz cli pusha shrl mov cmp testl and inc pop leave loope inc mov mov push jae jns jns push push jecxz or in mov or (bad) mov dec pop testl dec jo scas popa mov cwtl mov dec sbb shr clc mov dec mov cmp add or inc push sub (bad) mov bound xor out inc and sahf sbb pusha sub xlat daa or in orl sub daa fnstenv dec cld jae xor mov cmpsb shrl cmp mov insb cmp mov xor dec and pop std jp inc shr cmp fadd push sbb inc pop xchg adc xchg flds dec xchg insl sbb or xor dec mov xchg repnz aad pop sub cmpsl stos loop xchg and decb jno call addr16 gs cmp int xor jl cmpsb jecxz ret cmpsb fstpt or (bad) cmp pop cmp mov jno popa mov (bad) mov dec ljmp xchg sub jbe aas mov das pop outsl call push pop and push cmpl and or ret jb sbb add (bad) (bad) pop adc pop sub sarb sub mov dec dec movsb push jp outsl push mov or pop or push mov das popa lret stc dec and jae idiv (bad) out ret dec rcll jmp rorl and orl fcmove adc sbb (bad) repz lods push (bad) pop dec enter (bad) jle std bound cld lret jecxz ret pop test cmp jge (bad) jb sbb adc pushf loopne cs push stc cmp bsr pop insb mov repz mov out adc divl sbb mov lcall add jg mov scas xchg lahf mov (bad) dec push pushf mov (bad) enter mov sbb pop cmp fs ret ret push xchg movsl mov stos and mov and enter sahf and lods mov and rorb adc and aas pop pushf shl ds fs fstps je xchg insl aam (bad) or leave push stos or (bad) mov gs insl mov stc xor loope push mov repz mov scas scas mov imul aam adc cmp push es jb mov test dec jge xchg lea add mov inc mov jb adc ljmp fcom lods and pusha adc push add (bad) (bad) push cld es arpl insb fwait inc inc jge call lea add clc pop xlat pop mov in cwtl arpl enter lods inc push mov dec sub push dec ja pop add ret or iret (bad) adc push arpl mov and mov cmc push orl jg cmc cmpsb dec fstp sbb add lret mov mov out fwait (bad) ja inc lcall pop shlb rorl sahf xor bound outsl push jbe scas daa lods add loop or cmp arpl outsl in sbb push mov cmp loope (bad) lret cmp xchg sbb dec fcoms add in insb xlat mov add fs or in js push or mov mov pop mov mov jge or dec stos (bad) xchg dec outsl pushf sub stos ja dec jno enter (bad) jo aaa aad and (bad) insb add mov jno add sbb push insl (bad) leave add test and in js xlat push dec push test loope dec ss and cmp and push jg cmp and movsb loop push dec lds lock add ret pop and ja or (bad) nop lahf mov enter cmp jno leave xor shrl pop or sti and test ret wrmsr lret gs pop movsl mov iret fcmovb int3 decl xchg in mov js rclb cmpsb jmp jne mov negb push hlt repnz leave sarb int3 shll xor xchg in clc xchg clc or adc into sub out add lds (bad) lock xchg iret cmp aam cli jns clc xchg inc or cmc inc and xchg (bad) lea sub jle jecxz fsin stc aad inc lret jb shr lea xor sbb imul int3 loope adc lahf ficompl jns jnp and movsl push (bad) and icebp inc rcr dec je,pn shlb adc or jecxz xor ds movsl cmc in es loope mov mov aad inc cs ret (bad) cwtl mov inc out fdivrl cs test xchg dec sbb lock (bad) fidiv pop pop push mov add jo jne ret push test das mov pop cli jp bound jae jle mov push rorl xchg xchg iret imul es xchg and dec sub push xlat test jge int test mov mov scas mov xor push cmp repnz dec mov dec or jcxz (bad) lock ret mov mov jecxz not inc pop xchg das ficoml sbb jle jmp daa pop mov pop imul lods inc mov loop ret in rolb mov mov (bad) repnz fadd (bad) lock jae insb stos ljmp f2xm1 inc adc sahf lahf (bad) outsb lods xlat push push sbb fsubs enter cs mov int leave mov test ds in mov (bad) pop xor jg inc scas dec test (bad) push aas sbb cmp pop jns and (bad) mov movsl loope jg hlt cmp or insl sub stc jp xor movsl ljmp sub out lret xor xchg test push jecxz jb leave xchg dec (bad) sti dec stos mov sbb adc cwtl pop out imul scas xor (bad) sti lret (bad) push ret xor arpl daa rclb les ljmp cmp push add std cmp xor xchg cmp add jae adcl rcl aas stos test xchg jne sbb sub rorl mov sahf lods add cltd stos fs ja jb dec es push mov mov (bad) xor xor lret push sub (bad) mov imul sub shll xor decl test out cmp xor and mov mov sub mov addl les mov cs lods lcall sbb cli adc ret xchg stc and or pop xchg (bad) xlat jns scas pop mov orl add xor xchg insl xchg ret or inc mov les andl xor scas fs adc push mov jnp xor dec leave les imul loopne adc and push (bad) cmc cmp les dec mov push add lea loopne jl out cli xor mov and hlt imul jns (bad) stos cld pop stos arpl (bad) cmp sbb add push fsubs repnz gs mov stos cmpsb xchg aad (bad) sbb xchg loop int3 xchg iret cmp add movsl push fst test mov xor and and es or aaa mov daa cmpsl mov ds mov push sbb or bound xchg (bad) jo leave mov dec inc mov in mov js movsl icebp fsubrs and push push fmul ret pop or pop mov push lock jbe cltd xchg push xchg sbb mov in scas rolb leave cmp or or adc jmp xchg sbb add int3 out lcall mov mov cmc lods xchg adc mov test cmp lods repz inc adc pop pop xchg xor bound push xor movl in jo mov (bad) sti fldt iret ret icebp in jne cli cmp xchg cmpsb adc ret xchg pop mov clc cmpsb in mov mov in sub mov and sub repnz inc jnp xor sbb or aad mov push rorl ficoml mov push (bad) iret out mov inc xchg adc sub stos lods andl mov testb fwait inc push loopne loopne cmp ss aaa cmp mul mov popa pop inc and fistp add mul xchg or xchg ss mov push es mov mov test push cmp cwtl ljmp mov lret mov in xchg out iret mov mov leave mov stos sarl cmpsb (bad) adc je sbb adc icebp out pop xchg cmp cltd lds cmp fmuls mov mov jmp arpl pop aam xor repz clc stos and fisubr in int mov and adc cmpsl std mov lods sub and mov sahf xor mov dec stos xor andw mov (bad) xor outsl push xchg dec pop push pop popa and ljmp movsl testl dec mov mov loope in out repz push mov adc jmp or mov mov loop xchg push push add lods popa rcr inc js,pn jge popf dec sbb enter loop cmp into clc push dec nop xchg lods and mov dec add jb and sbb sbb stos sub fs addb clc fldt or pop mov scas add daa push jg mov sbb jle (bad) lock lret xchg idivb xor in inc lock sbb adc fsubrl push push lock and fisttpl mov nop lea movl cmp xchg fmull jnp js popa jae in jns inc mov nop mov stc cwtl cmpsl sub push ret sub and stos gs dec pushf scas sbb mov lcall das inc test cmc (bad) mov cmp cmp out or jbe or jo outsb sub sub sbb fcoml mov aas jecxz sub daa xchg cltd popa dec arpl stc outsl and cmc gs gs (bad) mov or jg (bad) mov push pop and pop or ds xchg fwait or shlb adc popf mov and sbb lds in add dec xor scas iret mov aas sbb xor data16 fs pop cli add rcrl fwait add xchg in les push (bad) sbbl adc sub out andl adc idivb into add add repnz popa dec cli add xchg cmc sbb in adc rol mov and add dec es out push pop sbb ret addl mov xchg xor jp out lret je dec in dec mov out adc mov and lcall fs cmc pop sbb mov xchg pop popf adc lahf shrb mov imul repnz (bad) mov mov pop mov dec mov push shlb cmc rcr ja iret in add mov sub in push pop (bad) std fwait icebp rcrb fistp fsts cmc subl nop ret pop out test xchg sub push shll sub int3 xor pusha int mov mov cwtl lahf jle mov add inc imul sbb movsl add loope out gs scas shrl out mov fistpll arpl roll xor movsb sub cmp pop (bad) (bad) (bad) cmc mov incb cmp fistl push pop ljmp cld outsb xchg sub push scas fisttp rcr orb hlt mov push mov fsub sti xor aam push fadds push jne js ret or jp adc jp xlat int3 arpl ljmp lcall pop or lock sub xor mov pop pop inc pop jno repnz ss out add test jns int popa sbb mov sti loop movsb loope ss and scas ja and mov sbbb dec adc adc lods adc ljmp push jmp setl repnz jle dec mov jp pavgw (bad) loopne lret lock stos mov mov movsl js inc sarl rorl or (bad) enter movsb lock xchg jp xor int add ret cmc (bad) or ja dec popf add enter in sarb sub fs pop pusha cltd scas loopne inc fdivr push dec sti pusha daa sbb fnstcw es push or aaa mov rorl mov xchg sbb push loope sub push or ds sub cli cwtl lcall fnstcw jl mov scas inc mov insb aas dec clc adc sahf add lods pushf ljmp in int3 mov stc int3 mov adc loopne dec bound jmp ljmp je adc test mov ss push loop aas scas rorb loope in pushl jno xor or pop sub push scas or cld fistpll xchg xor insl xorb sub cmp je push loop aas scas rorb loope in pushl ret add push and add add cmpb add fnstcw add sub sub add sub add add sub add and add add add add push add jge add add pop add pop pop bound jge add add add adc or add and sub add or sub add add add add and add add dec add and add add jge add add into add sub add push add adc sub add jnp add add imul add add add add add imul add add push jge add add pop add add add add aaa add or add add pop add add add add aaa add or add jge add add pop add add add add aaa add or add or add add cmp sub add or sarb add push sub push add push and add add subb add sarb add push sub add sbb add sub cmp add sub push jle add add sub call add add subb add sarb add sub sub add or sub add push sub cmp sub sub add sub inc add push sub sub add or sub add sub dec add push sub jae add push jge add add sub add or sub add sub dec add push es and xchg add add pop add push sub add and add and add adc add outsl xor add sub add sub dec add push sub and out add sub add sub rorb add sub sub add sub push add push sub add sbb add sub add sbb add sub add push sub je add add pop push add es add push sub add sub imul sub add sub push add sub add sbb add sub insb add push sub add sub outsl add push sub sub add sub jo add sub add (bad) addl pop fs push add add adc jb add je add add sub add sub jnp add sub sub add sub jl add sub add xor add add adc add add or jae add push or lea add add or sbb add or pop or add push add push push adc sub add outsl or or adc shrb adc pop pop aas pop bound add pop pop pop adc adc push incb or or sub add adc add jae add or add add pop or pop push adc sbb add add add or add or add adc add add add adc and mov lock add add add adc add or adc or popa mov adc sub add or or popa or bound or pop sbb or or sahf add or pop adc adc pop adc add or or push adc add add push push sbb sub add adc cmp add push adc sub adc adc pop adc or sahf adc pop pop adc adc pop adc add or or adc push xchg or xchg popa sahf adc pop adc pop xchg or xchg popa sahf adc sbb push sbb sahf adc sbb push sbb sahf adc sbb push sbb sahf adc sbb push sbb sahf adc sbb push sbb or sbb or push push adc push xchg or xchg popa sahf adc pop or push pop or popa sahf adc pop or push pop or popa sahf adc pop or push pop or popa sahf adc pop or push pop or or or popa sahf adc pop or xchg or or push pop push adc pop push xchg or push xchg popa sahf adc pop movups pop setne pop setne add adc pop add push adc adc add adc adc add rcrb pop pop adc rcrb pop pop adc rcrb add add push add or pop adc or adc add push adc sub adc add adc push outsb incb movups cmp sub add push addb add add add xor add add adc add mov and adc add push or add adc add (bad) (bad) (bad) aas pop adc add bound add outsb sbb add sub add add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb or or add add or add or adc add movsl add add or cmp add add outsb push push add add add sub add sbb add add adc add sbb adc add add add add or cmp outsb pop push add push adc cmp jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc rolb add sbb adc push add or or pop add or or add add adc push adc sbb adc add add or or pop adc sub adc sub adc push add add adc add xor and and adc add push or add adc add (bad) (bad) (bad) aas pop adc add bound add outsb push push add sub add add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb or or add add or add or adc add movsl add add or cmp add add outsb pop push add add add sub add sbb add add adc add sbb adc add add add add or cmp outsb sbb add push adc cmp jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc rolb add sbb adc push add or or pop add or or add add adc push adc sbb adc add add or or pop adc sub adc sub adc push add add adc add addl dec sbbl or add adc add (bad) (bad) (bad) aas pop adc add bound add outsb pop push add sub add add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb or or add add or add or adc add movsl add add or cmp add add outsb sbb add add add sub add sbb add add adc add sbb adc add add add add or cmp outsb push push add push adc cmp jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc rolb add sbb adc push add or or pop add or or add add adc push adc sbb adc add add or or pop adc sub adc sub adc push add add adc add repz pop and int3 add pop push or add adc add (bad) (bad) (bad) aas pop adc add bound add outsb sbb add sub add add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb or or add add or add or adc add movsl add add or cmp add add outsb pop push add add add sub add sbb add add adc add sbb adc add add add add or cmp outsb sbb add push adc cmp jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc rolb add sbb adc push add or or pop add or or add add adc push adc sbb adc add add or or pop adc sub adc sub adc push add add adc add sbb pop and mov lahf popa adc add push or add adc add (bad) (bad) (bad) aas pop adc add bound add outsb sbb add sub add add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb or or add add or add or adc add movsl add add or cmp add add outsb pop push add add add sub add sbb add add adc add sbb adc add add add add or cmp outsb push push add push adc cmp jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc jle add add and xchg jle add add and xchg push bound add add and xchg pop adc jle add add and xchg pop sbb adc rolb add sbb adc push add or or pop add or or add add adc push adc sbb adc add add or or pop adc sub adc sub adc add testl add add jnp add add or add add or jnp add add incb add push jge add add add add add add add add add add sbb add add jnp add add add add incb add add add add bound jnp add add or pusha jge add add and add bound add add push or jnp add add pop jge add add and add pop jge add add add add add jnp add add fs jge add add jnp add add add add incb sub add add add add bound jnp add add or pusha jge add add and add bound add add pop or add xor xor add add pop or push add add add popl add add or add add pop pop or outsb pop add add add pop pop bound add pop sub add inc add add add adc pop or jnp add add sub push pop bound jnp add add popl add add sub add push pop or pop pop or push incb or sub jnp add add pop pop bound sub or add add xor dec add add add adc pop or or or sub add add add popl add add sub add push or push or pop or pop pop pop bound add pop pop or add add add add add add movl adc xor inc add add add adc pop or or or daa add add pop popl add add or add or push or pop or pop pop pop bound add pop pop or add adc sub adc xor add add or add add add add add push jge add add adc add or pop add jnp add add bound jnp add add or pusha jge add add pop pop or sbb add pop sub adc add inc add add add adc sub add add add add bound jnp add add or pusha jge add add add add add bound add add add add add add add incb sub xor jle add or add add jnp add add add add add push or or pop or push pop pop pop adc push adc pop pop pop or pop bound adc pusha or and add add add sub add push bound jnp add add or pusha or push bound add or pop or adc adc sub pop add add pop jge add add adc sub adc sub add xor add add add add adc and add add jge add add and add add jge add add pop or add add jge add add pop or add add jge add add pop or add add jge add add pop or add add jge add add jae add push jge add add jae add push jge add add jae add push jge add add pop jb add add jge add add sbb jge add add jae add push jge add add jae add push jge add add push jge add add sbb add push jge add add sub add or add adc add or push add add add sbb or add movsb add add push pop pop or push push add pop sub xor add add or add add jnp add add incb push incb or sub add add add add add add add sub add or add add jnp add add add add sub add or add add add outsl sub add add sub adc add sub add or add add add pop pop bound add add add outsl sbb add add add outsl sbb add pop pop jge add add adc add inc add add add add add outsl adc add add jnp add add add add add sub add add or xchg add add push or xor push sbb pop or jnp add add popl add add or add add jnp add add popl add add or add add pop pop pop or add add add add incb or jnp add add popl add add or add add jnp add add popl add add or add add jnp add add popl add add or add add jnp add add popl add add or add add push pop pop or pop or add cmp (bad) incl jnp add add and add add or push add add add popl add add or add add pop pop or sbb add sub push add add add popl add add or add add pop pop or pop jb add sub add add push add push add jnp add add push add push add jl add add or add add add adc push add add adc add add sbb add add add adc adc sub add push add or or or push add adc adc adc sub add jnp add add jnp add add bound add add add or add adc sub add add jnp add add jnp add add push outsl and add adc add add add or add push add add add add add adc add add adc add add add jnp add add bound or add add add add add or add push incb adc adc cmp add add add outsl xor add adc add cmp add push incb adc add add add jnp add add add jnp add add outsl xor add outsl and or sbb jnp add add jnp add add add and add adc add add add or add push add add xor add add add add add add jnp add add jnp add add add add add add add or add pop incb adc adc cmp add add add add add jnp add add add add add add add or add push incb adc adc sub add jnp add add jnp add add bound or add add add add add or add push incb adc adc sub add add aaa add push add jnp add add jnp add add outsl xor add outsl xor add add add add add sub add add add jnp add add add add add add add or add push incb adc adc sub add adc add aaa add jnp add add jnp add add add add add add add or add push incb adc adc add or adc adc adc or adc add jnp add add jnp add add or add push sbb push adc sub add push add cmp add add or add or jnp add add jnp add add or add push pop adc adc sub add add add push sub add popl add add jnp add add or adc add push adc sub add adc adc sbb adc pop pop pop pop bound adc adc adc sub pop add add add adc jnp add add pop sub add push pop or sub pop add add add pop sbb adc add sbb or add add jnp add add push add push pop or add add adc adc jnp add add add add adc adc sub add adc adc sub sub add jnp add add adc outsl das add push add add adc add adc adc cmp cld (bad) incl jnp add add add push add jnp add add sub add add add adc add add add xor pop add add add adc add xchg pop or add xchg pop or pop sbb pop sbb push adc adc add adc push pop pop pop pop bound add add adc push adc sub sub add push add or sub add push add or sbb add add add adc add sbb add or add add sbb add sbb add add sub or add sub xor add add add add add sub add jnp add add sbb add push movsb add add add add add sbb add push movsb add add add pop pop or add add add jge add add adc add popa add add add add or add add or sub add add add popl add add or add add jnp add add popl add add or add add push pop pop or add add add add add add or add add jl add add or add add add add xor add add adc add add jl add add sub add push push incb or sub add add add popl add add sub sub or jl add add sub add push push incb or add add add popl add add sub or adc or add add sub or push or add sub xor add add add add add adc jge add add pop adc jge add add jl add add adc add add adc add jae add push jge add add sub add or sub add xor (bad) add add add adc add add add adc jnp add add xor add add add incb sub push or sub sub add add add pop add pop pop bound pop jge add add add and add add add add jnp add add pop pop pop bound add lea add add add add or push add add add (bad) add add daa add push add pop pop or push incb sub add xor add add add add adc pop add add add jnp add add pop pop pop bound push or push add add add (bad) add add sub add add pop pop or push incb sub adc add add add add add add add add add add add pop pop bound add add add pop pop pop arpl sub push sub add xor pop add add add adc add add add add sub add push (bad) add add sub add push or add sub adc add and add adc add add jnp add add add sub add push (bad) add add push add sub add or add sub add adc add sub add or add add or push add add add popl add add or add add pop pop or and add add add pop sub add sub add adc pop or pop bound jnp add add popl add add sub add push pusha or and add add add push rorb add sub add adc add jl add adc add add or add arpl pop or (bad) adc add add add pop pop push bound pop popl add add sub add push or pop bound pusha or or add incb or sub push pop bound jnp add add popl add add sub add push pusha or and add add add sub push and add add add sub push sub adc sub xor add add adc add add add incb push incb or sub add add jge add add add jge add add push jge add add push jge add add add add xor add add add add adc add sub add jge add add push incb or sub add push jge add add push jge add add sub xor pop add add add add add jnp add add or push incb or sub sub jnp add add jnp add add jnp add add outsl sbb add add jnp add add jnp add add add or add jge add add add add add sub add add xor add add adc add add add pop pop pop or add add add add pop sub push add add add or pop add add add add add or push or jnp add add add add add or pop jge add add add add add and pushf add add add jnp add add add add add pop add add push add add pop adc add incb adc sub add adc add aaa add add add add add add add add push pop pop jge add add add add jnp add add add pop sub add add push add add xor add add add add adc add add add pop pop pop or add add add add pop sub push add add add or jnp add add xchg or add sub add xor add add add adc add add add incb add jge add add sub jnp add add or add add jnp add add pop jge add add push add jnp add add pop jge add add adc add sldt add add adc add add add incb sub adc add js add sbb add jle add add jle add add pop or inc pop add add add add add add add add add add add add add add add add sbb sub sbb cli add add add or and fiaddl add sub add xchg and add pop sub add add add sbb add add sub sarb add push sub xor add add adc add add jle add add add or inc or add add add add add outsb add add add rolb add pop add add add add add add add add add add add add adc push add or add add or add add jnp add add and add pop or fwait add aaa add add push add add add jnp add add and rolb add push add sub cmp (bad) incl jnp add add jne add add and add add push (bad) je sub add and add and add sub add sub add and add and add add or add or popa xchg and test add cmp (bad) (bad) incl jnp add add push jae add or dec pop push sub add sub jnp add add and pop (bad) je sub add and add add mov or add pop or fdivr (bad) incl jnp add add mov add and and add and add and add add or add add add add and add add mov add sub add or jo and out add pop or xchg (bad) (bad) incl jnp add add and add add cli add add or jnp add add pop pop pop and push add sub add jo add xchg and or pop (bad) (bad) incl and add inc and add jae add or or add and add add sldt sub pop sub add pop or cmp (bad) (bad) incl and add add add or and sub add or jnp add add daa add or add xchg and pop add pop or hlt std (bad) incl sbb add pusha (bad) je sub add sub add or push pop or outsl (bad) je sub add outsl sub add sbb (bad) std (bad) incl jnp add add sub add add sub add or sarb add push es add add outsl add add add add outsl add add add cmp add xchg pop pop adc add xor add add sbb add jle add add add add push sub add or add xchg add add add inc add add add add add or add pop add add add dec add add add push es add mov and and jb add add stos add popa pop or add add add adc xchg adc scas in add pop sub adc pop adc addb add add add sub add or add add add add pop (bad) (bad) incl pop pop or pop or adc inc (bad) (bad) decl sbb or adc cmp (bad) lcall add add aad add jle add add aad add xchg jle add add dec xchg pusha pop jne popf sub push and add add add add cld (bad) (bad) call xor in add sbb add jle add add jle add add add or inc or add jl add sldt add add aas add add add jne add add add aas add add add jne add push or pop push xchg and push add pop or ret push add add push popa inc add add push add add add gs and jb add sub add xchg and jno add out push or popl mov add sbb add outsl sbb add push pop pop or add pop sbb or or push (bad) call add bound xchg pop sub pop or push (bad) (bad) ljmp sbb push adc inc add add add add add add add inc add push sub push xor or add sbb add jle add add add add push sub add or add outsb add add add pop add add add add add add add add add add add add inc add push sbb add mov and add xchg and test add stos push add add push popa inc add add adc add adc add add add test add add add add or add add add add pop (bad) (bad) incl mov add sbb add outsl or add or add inc (bad) (bad) incl pop pop or add pop or add pop or or add sub sbb adc add add add add adc (bad) lcall sub pop sub adc push (bad) (bad) incl add xor add add add add add push sub add add add fwait add add add dec add add add add add add add xchg add add add xchg add add inc add push adc pop jae and add pop adc adc and add xchg adc and add xchg pop adc popa pop insb pop push popa inc add add add adc stc adc sbb add add add outsl sub adc and add add add add incl pop pop or popa add jg add or add sbb pop xor push adc call sub pop je add sbb push adc incl adc add fiadd add push add adc add add add xor add add or add inc add add add add add add add add add add add add add pop add add add add add push or or popa pop jb push popa inc add add add add push or and add add add in adc add or add add add add or pop pop or pop pop or (bad) incl sbb or or call add jmp add xchg and xor add ljmp inc add add add add add add add add add add add inc add push sub data16 (bad) incl add xor out add add add adc add add add add push push adc add or add add add das add add add add add add add adc add das add add add add add push or add (bad) cmp add rolb popa inc add add add adc stos sbb stc sbb add mov add add add or pop pop or or or pop aaa pop or pop pop xor add add add add outsl (bad) (bad) call push pop pop xchg and sub add in adc add add add dec (bad) (bad) ljmp pop adc adc inc add add add add add add add add add add add inc add push sub (bad) (bad) (bad) incl adc or and add and add jle add add push jle add add pop sub inc or add adc add add add add add add add add add mov add add add sub add inc add add add rolb add adc pop pop xchg and mov add add adc and and pushf add pop adc add pop insb pop push popa inc add add push add add or add sub adc push adc incl mov add sbb mov add sbb xor add or adc incl pop pop or test add or add mov add or sbb add add test add jle add add test add xchg add popf pop pop xor add add add add lcall and and adc incl sub or add call xor add add adc add add add xor inc or add dec add add add add add add add add inc add add add add dec add push es or add add push or add xchg and cmp add sub add pop jle add add jle add add imul add pop xchg popa rcrb pop pop or or je add sbb or lcall sub push jne add sbb add xor add add adc add add jle add add sbb pop inc pop add add add pop add add add add add or add add sbb sub pop sub add add add xor add cmp add add cmp add das xchg popa and popf sub or mov and add pop or popf or insb xchg and jo add icebp add add add sbb add add sub rorb add sub adc pop add add and add jle add add jle add add add or inc or add add add add add sbb add add add add add add roll add push add add add add add add sldt add adc push add or add add or add add jnp add add and add or push add jle add add ja xor add ja jle add add cmp add pop popf pop or jno (bad) incl and int3 add add add jnp add add and add add xchg add add push add sub pop jl and or cmp (bad) incl jnp add add je add add and dec (bad) je sub add and mov add sub add sub add and add and add add or add sbb (bad) incl jnp add add push jae add or dec add add push add add or add add add add and jb je sub add and add and add add or add sbb lods (bad) (bad) incl jnp add add and add and add add add or add add cmp add sub add sub jnp add add and out add add or add sbb insb (bad) (bad) incl jnp add add pop jo inc sub jnp add add and add add mov add sub add sub or cmp (bad) (bad) incl and add inc and add jae add or xlat add add testl add sub pop sub add adc testb add cmp (bad) (bad) incl and add add ret add add or and sub add or jnp add add daa add or or (bad) (bad) incl sbb je ja je sub add sub add or sbb pop and sub push outsl sub add pop or lods std (bad) incl jnp add add sub add add sub add or rorb add sub add adc add test add sbb add jle add add jle add add sbb pop inc pop add add add add add add add inc add add add add add inc add add sub or nop add add add sub or pop add add add out add add add add add add or stos pop sub add add add add add sbb add add sub rorb add sub add adc add adc add and add jle add add sbb add add add add add xor add ret add add add add add add and ret add add and add inc and add jae add or or add and add add sldt sub or cmpsl add and add add fildl add sub add sub and add add ret add add or addl add add adc add sbb cmp (bad) incl sbb sub add je sub add and lret add or add push or dec (bad) (bad) incl sbb push and pop add push outsl sub add add incb dec add push jae add or xor add or or add cmp (bad) (bad) incl add push dec add push jae add or xor push sub add or rclb add sub add xor add add add add push or inc add add add add add add add add add add add add add cmpsl add add or fcom adc add sub or add or adc add push add add add add add add add add add add add add add add add aad sub pop xorb add aaa add or push jno add jae add or add or adc mov or je add add cmp add fcoml adc adc inc push add add add add add add add add add add add add adc sub rclb add sbb push sub sub push add push sub add add add add cmp push popl or add add xor add add add add add add add push sub add or add mov add add add add add or add inc add add add add add inc add add add test add rclb add sbb add mov and add xchg and int3 add pop adc stos add popa push pop push popa inc add add adc add adc and and add add add mov sub adc adc add add add outsb (bad) (bad) incl mov add sbb add or push adc pop (bad) (bad) incl pop pop or and pop or or add inc (bad) (bad) decl sbb add add mov add jle add add mov add xchg jle add add xchg add xchg pop pop sub or adc adc (bad) lcall or add sub (bad) (bad) incl adc push add add add add adc add add push jle add add pop sub adc add add add add jg add add add or add addl add add add add add add add add rclb push sbb add pop or add popa pop pop jle add add insb add add add add insb add add add add pop push popa inc add add adc push and and adc call pop and add xchg and sub adc push adc ljmp cmp add or adc incl pop pop or xlat add add jmp and sbb pop xor add add add add call pop pop and add in pop jne add add adc pop and add add incl add adc add out add sbb xor add push sub add add add push add add add sbb add jg add add add mov add add add add add push add push adc pop popa xchg and test add add sbb add popa pop das pop push popa inc add add sldt add push pop popa xchg and test add add and and add in adc sbb add incl mov add sbb outsl cmp adc pop push xchg adc pop ds pop adc incl pop pop or aam add or sub and add add sbb pop xor sbb (bad) (bad) lcall sub pop jne add add sbb add incl adc add stc add add add adc add add add add push sbb add add or add push add add add aaa add add add add add add add add add adc add inc add add or add les sub add pop push popa inc add add add adc stos adc and adc sub adc pop push add pop adc mov mov add sbb sub add or pop pop or adc and add or test add pop or pop pop xor sbb add pop (bad) (bad) call push and and loop add jmp inc (bad) (bad) ljmp pop adc adc inc add add add add add add add add add add add push add push sub pop (bad) (bad) incl add adc add rolb add add adc add add add adc and add add add add add and add add add xor add imul add add add or adc lret popa pop arpl popa inc add add add adc mov sub sbb add sub pop pop or test add or pop add add and sbb add or or xor sbb add jnp (bad) lcall sub adc aad add pop adc data16 (bad) ljmp pop adc adc inc add add add add add add add add add add add push add push sub jno (bad) call xor add add and add jle add add sbb pop inc add add add add add add add add add push add push and add outsb add add imul push push and add add hlt add add jae add or mov and or mov dec add push sub add or rcrb add sub xor add add adc add add movd add add adc adc add add add or add jecxz add sbb add (bad) add add add add add add add add add add add add add add add je add dec add add add stos add add add rcrb add adc and and add pop adc sub je popa add jle add add or add and sbb pop popa or mov add add add push cmp (bad) (bad) jle add add add lcall adc cmp (bad) call mov add add add jmp add sub je add sbb add add add add push adc or or adc mov add xchg and nop add pop adc cmp (bad) (bad) pushl add or add or add adc adc add sbb or pop xchg adc adc cmp (bad) (bad) call or pop adc push pop pop pop adc and incl add arpl pop adc pop push and (bad) add pop adc cmp push pop and adc add add add push cmp mov add add add jmp bound or add adc xchg adc add (bad) add add add add (bad) add add add sbb add pop popf pusha adc pop or (bad) (bad) call or add mov or adc adc and and add pop adc cmp (bad) (bad) call add cmp add add sbb or pop pop adc pop xchg popa adc jne add sbb or or pop adc or popa shrl add or pop or push cmp std (bad) call or pop adc sbb push cmp std (bad) call or pop xor add add add push cmp adc inc xchg and sub adc outsl inc add or add add or add mov cmp (bad) decl jne add add add add xor add add add add adc add add add add add add or add add add add add add add add add cmp add cmp add inc add add add addb add add add pop add push sbb pop or popa pop ss push popa inc add add add add adc add sbb add or add lock in adc pop or add or pop or ljmp aaa add or adc add add cmp (bad) incl pop pop or and pop sub pop or lcall sub adc xchg and add pop or incl je add add adc add add cmp (bad) (bad) incl add adc add roll add add adc add add add add or add insl add add add add add add add add add add add add add add add xor add push or adc lret popa pop addr16 push popa inc add add adc add adc add add add cmpsl pop or clc sbb add inc add or pop pop or loopne add or bound add or scas pop add pop or sbb add outsl (bad) (bad) call sub pop adc fs (bad) ljmp sbb pop adc inc add add add add add add add pop add push sub outsl (bad) (bad) incl add adc add hlt add add add adc add add add xor add add inc or add push add add add inc add add add add add add add inc add add add add add add or add lea add xchg and movsl add pop or popa pop pop pop push popa inc add add or add xchg and pop add pop or and add xchg and in sbb sub add add add or pop pop or pop pop or add fwait add add add cmp (bad) incl sbb adc add push push add pop or lcall sub sub adc adc inc add add add add add pop add push sub pop (bad) (bad) call xor add add add add adc add add add add add add or add jae add push add add add add add add add add add add add add add add add dec add add or or add push popa inc add add add add sbb sub or add add add mov add sbb add or pop pop or add pop or add pop or or pop sub adc add cmp (bad) call add add add ljmp inc add add add add add add add add add add add pop add push sub push xor add add add add adc add add jle add add add or inc or add adc add cmp add xor add cmp add add add dec add add add pusha add add add add add add or and and jb add sub add popa pop pop push popa inc add add add add sbb stos adc cmp add lock lcall add inc add or pop pop or sbb pop sbb (bad) lcall (bad) or pop xchg and add pop or (bad) (bad) (bad) ljmp sbb push adc inc add add add add add add add pop add push sub ja (bad) call xor add add add add adc add add jle add add add or inc or add push add add add add add add add outsb add add add sub add add add add add add push or or int3 add popa pop pop pop push popa inc add add add add sbb sub add xchg and add out or pop xchg and sub add sub add add add or pop pop or sbb adc add add add add cmp (bad) lcall sub push or fs (bad) ljmp push adc adc inc add add add add add add add add add add add pusha add push sub insl (bad) (bad) incl add xor add add add add adc add add add add add add or add sbb add pop add add add add add add add add add add add add add add popa add push adc and and fiaddl add sub sub pop push pop push popa inc add add add add sbb sub adc pop or add add add sub add or add add add cmp (bad) incl pop pop or add pop push add sbb add add pop add add add add pop add add pop popf pop sub sbb cmp (bad) (bad) call add cmpsb add add add ljmp incl jne add add push or incl adc add push add add add adc add add add add push sbb add add or add pop add add add add add pop add add add add add cmp add add add push or add add add add mov aaa pop push popa inc add add adc add adc add add add xchg sbb stc adc and and adc add (bad) add outsl dec add or pop pop or cmp inc add add and adc add or pop pop xor push adc push (bad) (bad) call add jmp add pop sub adc pop push xchg and adc ss (bad) ljmp push adc adc inc add add add add add add add add add add add bound add sub push (bad) (bad) incl add xor add add add add adc add add add or add and add push add add add add add add das add add add pop add add or or popa pop xor popa inc add add add or cli sbb add add add and add push pop pop or add cmpsl add add add add cmpsl add add add add pop or or incl sbb adc add fiaddl add xchg and add pop or call sub sub adc adc inc add add add add add add add add add add add arpl add sub pop (bad) (bad) incl add xor add add add add adc add add jle add add add or inc or add cltd add add add xor add and add daa add add add add add and adc add cmpb add lea add add push je add sbb and sbb mov jne add sbb add add pop and add popf or cmp add xchg and testl mov jne add sbb and xor add add sbb test add popf adc popf add add add cmp (bad) incl jne add sbb and and add add sbb cmp add popf sbb cmp (bad) incl jne add sbb popl add popf pop or cmpb add jne add sbb sub add push sub add adc add mov add adc add add sub pop inc pop add add add add add add add jo add xor add xor add push add add data16 push or movsb add add add sub jle add add adc and add add add sub cmc jne lahf sub adc add sub loope add and add add push add sub add or or mov and or outsb (bad) (bad) (bad) jle add add adc add sub add sub add sub inc add add add add add push pop or fdivrl add add adc add mov add adc add add jle add add add or inc or add inc add add add add add add add cmp add cmp add xor add pop add add add add or and and or add sub add popa pop cmp popa inc add add push add add add xor add pop or mov or lcall pop pop or and pop sub sbb test sub pop or jp (bad) ljmp sbb push adc inc add add add add add add add imul push sub xchg add adc push add add adc add add sub inc pop add add add add add add add add add or add add add or add shrb add es or aam cmp add xchg and jmp add sub sbb cli and sbb add rclb adc pop add add pop add add push add sub add or sbb sub jle add add sub add jle add add sub add xchg jle add add loopne add xchg pop and add add sub add xor add add sub add sub inc add add add add add add add add add add add outsb add push es or fdivrl add add sbb push add add sub add jle add add adc add add adc dec adc inc sldt add add add add add add add add add add add add add add add add add and add or add stos add add add popa add add jb add es adc sub add add adc xchg and add pop adc sub add and add sub push or add add add dec (bad) je sub add and add add lock add sbb add or push adc cmp jmp cmc add add ret add pop add push or add add jecxz add and add add sbb add je add sbb add adc cmp (bad) (bad) call add pop add sbb xor add pop or adc adc (bad) pushl add or add je add add adc pop add sbb mov lock add sbb add sbb adc out (bad) jmp into (bad) aad sub push adc pop push and (bad) add pop adc cmp (bad) (bad) incl pop pop adc adc pop pusha xchg and add pop adc cmp push jne add sbb pop (bad) add add add pop add pop and add add popa rolb adc pop cs and push add pop adc cmp (bad) call pop pop pop adc sbb adc imul push das or or adc pop (bad) (bad) call adc xchg and sub jae add or or push je add sbb add or pop jae add or or adc adc or add or add add add xor add adc add imul add and add add adc sbb adc enter add add adc je add sbb adc and fadds add sub add sub or add adc jne add sbb adc je add sbb add and add sub or (bad) (bad) lcall sub ficomp adc adc inc pop add add add add add add add adc je add add adc pop and add push sub adc and add xchg and in adc jne add add add or sbb sbb sbb add add add add add adc add add add fiaddl add pop add add add add add add add add add add add add add add add pusha add add or add je add add push add add cmp and add adc je add add fiaddl add and add add and add and add add sti add add and add adc cmp (bad) decl jne add add jne add add add add push sbb sbb add push adc cmp (bad) call add add pop add add sub add sub add sub or adc cmp (bad) call or sbb push lcall add sbb or pop add add or pop add add add or adc test add xchg and add pop adc cmp (bad) (bad) call push pop pop adc sbb sbb jecxz (bad) call push adc sbb adc jbe and test add sbb (bad) (bad) (bad) lcall or cmc adc and add add add sbb stos (bad) (bad) decl je add add je add add add or add adc cmp add pop add sbb je add add add or add or sbb sbb imul sub adc add adc add add adc add add add add add xor add add add add adc add add add add add add inc or add adc add inc add add add xor add dec add add add add add push or add dec xchg adc dec xchg pop or popa pop adc popa inc add add add add sbb pop adc add pop sub adc add add sub add push pop pop or and pop or or incl sbb adc add push xchg and sti add pop or call sub sub adc adc inc add add add add add add add jae add sub jo (bad) incl adc add daa add add xor add push jle add add pop sub add add add or add scas add add add add add add add add add add add add add add add inc add add je add es adc pop or add popa pop sub popa inc add add add adc sub adc adc and adc and pop adc add add add push add or adc and add add add add pop (bad) (bad) incl pop pop or sub add or add push sldt or sbb xor add add add add call push and and jl add jmp add add add add incl jne add add adc and add xchg and pusha add pop adc incl adc add fild add add adc add add add inc or add test add add add dec add add add or add pop add add add add add dec add add add add jne add sbb add mov and and jl add add stos add pop push popa inc add add sldt add add sti inc add pop adc mov or clc adc sbb add jl (bad) incl mov add sbb mov add sbb add or sbb add (bad) (bad) (bad) incl pop pop or or adc add adc inc (bad) (bad) decl sbb or add aaa (bad) (bad) lcall sub pop sub adc sub (bad) incl adc pop add add add add adc add add add add push pop adc add or add jge add add add jno add cmp add movsb add add add jno add lea add lods add add add push or add add add add mov sbb popa inc add add adc add adc add add add lcall xchg add xchg and add add add add dec add add add add dec add add add xor popf pop adc pusha (bad) (bad) incl mov add sbb outsl push add or pop pop or push add add in add or sub add pop or pop pop xor sbb add xor (bad) lcall sub sbb add and push adc adc inc add add add add add add add add add add add jbe add sub cmp adc add add add das add adc add add sbb add add add add add add xchg add add add jbe add add add popf add add add add add or pop pop xchg and sub add sub pop pop push popa inc add add add add add or movsl or and xchg pop sub or jle and sub sbb mov mov add sbb mov add sbb add or pop cmp add pop or imul add add add sub add push pop pop or pop sub sbb inc (bad) (bad) decl pop gs and jb add out sbb xor (bad) ljmp sbb add add add add add add add add add add add add add ja add sub inc (bad) (bad) incl add xor add add add add adc add add push sub adc add add push add pusha add add add add add add or add pop add add add add js add es push or push and and adc popa pop and popa inc add add add adc and and sti add pop sub adc sbb add add add outsl push add or sbb add incl pop pop or mov and add or add sbb pop xor sbb add lcall sub pop je add add push adc incl add xor add add add add adc add add add add push sub add or add xor add outsl add add add add add add add add add add add add add add add sarb add es add mov add mov add jae push popa inc add add push add add or add mov or adc xchg add push add or adc adc add pop adc js (bad) incl pop pop or and pop or add lret test add add pop (bad) (bad) decl sbb adc add add add add inc (bad) (bad) call add ret add in pop jne add sbb sbb (bad) (bad) call xor add add add add adc add add add xor add add or add add add popa add add add cmp add push add add add add add add add push add add add add or or popa pop pop pop push popa inc add add add add sbb sub sbb sub add sub add push pop pop or pop or add je and dec add pop or pop sub push xchg and jmp add cmp lcall sub sub adc adc inc add add add add add add add jp add sub jp (bad) incl add cmp add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add push gs cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc pushf cwtl scas mov sbbl jae test jae xchg jae mov jae mov cwtl jae mov cwtl jae movsb cwtl jae movsl cwtl jae cmpsb cwtl jae cmpsl cwtl jae test jae test cwtl jae rcrl dec ret cwtl jae les jae (bad) cwtl jae (bad) cwtl jae lret dec lret cwtl jae and jae and jae and jae and cltd jae daa cltd jae sub jae sub cltd jae inc cltd jae inc cltd jae inc cltd jae inc cltd jae inc cltd jae inc cltd jae inc cltd jae dec cltd jae dec cltd jae pusha cltd jae popa cltd jae bound jae fs jae gs jae cwtd jae addr16 jae outsb cltd jae outsl cltd jae nop (bad) sbb (bad) sbb (bad) sbb (bad) sbb (bad) sbb (bad) sbb (bad) sbb (bad) sbb (bad) sbb (bad) sbb add add add add xor add or add addl add add aad add lods push add daa pop add incb add ja add mov pop add repnz add sbb add inc or add add xchg or add or add or add add cmp add push or add or add or add or add add add add imul add jae add pushf add add add add add add add add add sub add add add fadds add scas add add add add add movsl add add add add add add ret add add jo add cmc add add add add add add popl add adc add dec add add add add or add or add arpl add add xor xor xor arpl sub add xor sub add add add data16 add arpl cmp aaa add add sub add add add add add data16 add arpl cmp aaa add add sub add add add add add data16 add arpl cmp aaa add add sub add add add add add add add and add add arpl cmp aaa add add sub add add add add add add add and add add arpl cmp aaa add add sub add add add add add add add and add add arpl cmp aaa add add sub add add add add add add cmpsl add and add add arpl cmp aaa add add sub add add add add add mov add and add add arpl cmp aaa add add sub add add add add add add add add arpl cmp aaa add add sub add add add add add add data16 add arpl cmp aaa add add sub add add add add add add add and add add arpl cmp aaa add add sub add add add add add add dec add and add add arpl cmp aaa add add sub add add add add add add data16 add arpl cmp aaa add add sub add add add add add xchg add and add add arpl cmp aaa add add sub add add add add add add data16 add arpl cmp aaa add add sub add add add add add add add and add add arpl cmp aaa add add sub add add add add add add testl aaa add arpl cmp aaa add add sub add add add add add add add and add add arpl cmp aaa add add sub add add add add add add data16 add arpl cmp aaa add add sub add add add add add add add add arpl cmp aaa add add sub add add add add add add jle add add add arpl cmp aaa add add sub add add add add add add lahf add and add add arpl cmp aaa add add sub add add add add add add add and add add arpl cmp aaa add add sub add add add add add add loop add data16 add arpl cmp aaa add add sub add add add add add add add arpl cmp aaa add add sub add add add add add add add and add add arpl cmp aaa add add sub add add add add add add inc add and add add arpl cmp aaa add add sub add add add add add add add add add arpl cmp aaa add add sub add add add add add add mov add add add arpl cmp aaa add add sub add add add add add test aaa add arpl cmp aaa add add sub add add add add add add add add arpl cmp aaa add add sub add add add add add add data16 add arpl cmp aaa add add sub add add add add add add add add add arpl cmp aaa add add sub add add add add add add xor and add add arpl cmp aaa add add sub add add add add add add add and aaa add arpl cmp aaa add add sub add add add add or add add add arpl cmp aaa add add sub add add add add xor mov data16 add arpl cmp aaa add add sub add add add add xor cmp add add arpl cmp aaa add add sub add add add add xor rcr add and add add arpl cmp aaa add add sub add add add add xor data16 add and add add arpl cmp aaa add add sub add add add add xor cli sbb add add arpl cmp aaa add add sub add add add add xor add add add arpl cmp aaa add add sub add add add add add popa add aaa add arpl cmp aaa add add sub add add add add aaa add data16 add arpl cmp aaa add add sub add add add add cmp dec movsb add aaa add arpl cmp aaa add add sub add add add add cmp in add aaa add arpl cmp aaa add add sub add add add add add add add arpl cmp aaa add add sub add add add add or add add add arpl cmp aaa add add sub add add add add sub add add add arpl cmp aaa add add sub add add add add dec push add add add arpl cmp aaa add add sub add add add add insl push add add add arpl cmp aaa add add sub add add add add popl add add add arpl cmp aaa add add sub add add add add mov add add add arpl cmp aaa add add sub add add add add rolb add add add arpl cmp aaa add add sub add add add add hlt push add add add arpl cmp aaa add add sub add add add add adc add add arpl cmp aaa add add sub add add add add aaa pop add data16 add arpl cmp aaa add add sub add add add add add pop pop add add add arpl cmp aaa add add sub add add add add add add data16 add arpl cmp aaa add add sub add add add add add add pushf pop add add add arpl cmp aaa add add sub add add add add add add data16 add arpl cmp aaa add add sub add add add add add add pop add add add arpl cmp aaa add add sub add add add add add call data16 add arpl cmp aaa add add sub add add add add add add add add arpl cmp aaa add add sub add add add add add add inc or and add add arpl cmp aaa add add sub add add add add add add data16 add arpl cmp aaa add add sub add add add add add add add add add arpl cmp aaa add add sub add add add add add add test add data16 add arpl cmp aaa add add sub add add add add add enter data16 add arpl cmp aaa add add sub add add add add add or and aaa add arpl cmp aaa add add sub add add add add add or add inc add add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop sbb xchg mov push daa fldt test (bad) lret mov mov repz aas sahf iret std daa mov or add outsl (bad) jbe mov scas adc shrb mov inc stos xlat sahf dec js adc mov xchg bound cmpsb mov leave jno adcl fistl mov push repnz cld std push outsl and into (bad) ja and lods inc fldt lret negl xor jmp push arpl arpl in push pop jo iret andl xchg clc stos inc dec add ret jp loope leave fistpll mov shll push sbb push ja rcrl fdivl mov xchg dec enter push in out dec (bad) xor sahf add inc jae xchg add add push das icebp dec test cmp lock inc mov loope xchg lahf es xchg cmpsb out xchg sbb xchg xchg push push mov loop movsb pushf rcrl push push lret jns pop xor adc xchg sbb (bad) movsb mov into mov xor pop hlt inc cmpsl test outsl loop and popf xchg addl adc lods outsb sbb mov test sbb mov sahf pop push fcom add jecxz lahf aaa je sbb repnz mov jge cli fs mov cmp sub subl cltd sbb xor test push push xor outsl pop jecxz pop push xor push aas sub pop popf (bad) pop inc and fnstcw xor or pusha fwait cmp and or insl push mov outsl pop imul (bad) xchg mov sarb and jo (bad) lods jmp jb pop jbe mov mov mov dec or bswap gs and fdivrl dec movsl mov stc pop mov nop add mov mov leave out lret jb sub push mov jo (bad) and movsb mov leave cmp adc or es daa enter es bound shll (bad) push stos jge movsl pop movsl cld and push lcall jo add cmp sbb cmpsl and inc jge in cwtl pop pop pop mov xor rcll js or arpl cmp test push outsb sub jbe decl out xor andl into in adc jp dec push dec or or mov sbb cmpl dec arpl add xchg adc (bad) mov mov adc cli adc loopne xadd aas adc bound fidivr dec insb sti and cmpsl es sub cld xchg aad pop sahf cld lret xchg push and cltd iret ficompl mov dec rorl aam ds xor ja (bad) sbb icebp pop ja mov gs adc (bad) xchg ret xchg incb push das loop lock orl ret xchg loop or inc cwtl outsl cwtl dec (bad) insb jns mov (bad) xor push mov cmc dec pop sahf lret movsl ds test and mov pop int3 das sbb into lods jbe dec imul mov adc movsl (bad) and js mov xor loopne dec or testl push adc lret das jo jmp (bad) xchg test sbb or sbb cmp rcl fs push cwtl mov popa mov sbb xchg ljmp push adcb jmp or std loopne (bad) out pop sarb pop enter lock (bad) sti int cld xchg mov mov mov cmp dec pusha fwait je push sarb xor xchg pop cmpl ja rolb rorb push iret sub sbb adc dec mov push sbb lea or mov xchg mov mov jb outsl daa inc adc push xor cmp sub xchg repz cmpsl cmp int dec xchg mov xor data16 xchg aam push cld xor lods rol cmc jp mov xor repnz cmp sbb sbbl xor mov lods lret xlat (bad) out mov xchg adc inc ja sahf sub daa pop popa inc sbb pop mov cmp adc push pop dec (bad) jle fsubl cmp fisubrl xchg mov idivl cmp adc add adc sbb mov pop xchg roll mov or aas lods pop mov sbb push ljmp push cmc mov add or test mov call dec pop test xchg unpckhps fdivrs iret add dec sbb aas scas lock ja push fdivs loopne mov inc xchg dec iret adcb (bad) repz dec and inc cmpsl jp pop sub adc sbb mov cwtl dec push sti mov clc testb fidivl xor pop pusha out fisttp lahf xlat push fwait stos pop cmpsb cmp add jmp and repz out aaa pop ss mov sbb sbb js cmp inc aad cld jbe mov xchg popa arpl aad int cmp sub (bad) imul adc ja outsl sbb jp dec stc and xlat adc push inc sbb sub mov xor bound ret push lret int3 sub inc mov dec lea and jecxz pop mov into (bad) push adc sub dec lds sahf popa add (bad) sub jg inc fisttpl lods outsl outsb inc sti add data16 gs mov sahf int3 push sbb es lahf ret ljmp iret push into add cmp pop ret test cwtl aaa (bad) data16 std and repz stos imulb lret inc mov mov test xor je dec push dec push inc inc scas push pop sbb mov add in lret insb xlat or out cld fidivr imul sub divl xor mov stos mov sub les and loope ds sarl mov pop into jl loop pop cmp mov cmpb std imul pop dec mov lahf loop hlt shr imulb idivl in mov je cmpsl daa mov mov xchg cmp jle or add push fs enter inc bound jle xor cmp icebp fldcw das lock iret and lds xchg ret push int3 mov iret jecxz add inc jecxz mov mov xchg add stos inc pop mov dec mov (bad) data16 cmp lcall jo adc xchg imul sti movsb push jmp stc or jae add cwtl negl inc aas vmwrite scas add popf add mov test (bad) lock popl cltd or dec lahf inc mov clc (bad) std mov cmp (bad) mov aas (bad) popf mov bound xlat test dec jle adc pop movsb mov sbb jp sahf not jbe bound clc loop lods inc lea dec ret dec jmp pop add sub mov xor js mov or (bad) pslld ret mov (bad) mov insb std mov shlb xor dec loopne push cmpsl bound jl cld sbb jns jo push sbb cmpsb leave mov aas push mov mov cmpb int3 cwtl notb (bad) jnp outsl movl jecxz mov push adc pop rorb movsl jno push xchg ljmp loop adc sbb pop pop stc pop dec adc push sub push cmp ret sub aas jl pop lahf cwtl fwait out adc inc mov insb xor add roll fsubs push sbb cs dec mov sub divps lahf es adc dec fidivrl add add xchg int3 jo sahf pushf jmp fildl insb cs mov in sub sahf cwtl test jns mov rcrb js insb sbb pop pop cmpsl jo jmp inc adc push jecxz out xchg test repnz (bad) adc adc ret jne jp mov cmpsb sbb mov (bad) pop and xchg pop jp dec rclb sbb mov inc fwait repnz inc inc push rcrb stos div push sbb xor cmpl push sub xchg push or or lea pop sarl xor inc ds stos test mov and aas and adc pop (bad) out xchg aam inc xchg pop dec (bad) orb xlat dec xor inc aad pop inc adc and mov movsl adc sub jns sub jae mov fldcw pop adc push test (bad) lcall or sahf rcrb jbe mov pop xchg int3 fiadd (bad) cmpsl fwait xchg aas imul test fldcw ret js movsb cmp aaa or add shrb or std xor sbb jle out sub mov or push out dec nop lds cmp or rorl arpl out stos jg popf inc or mov lret in js das jae cmp orb rol jge jae mov xlat icebp push cmp or jmp ret arpl mov jmp mov mov je nop add jnp sub mov les push in jg mov je cmc stos adc js xor popf add repnz jle xchg insb ja fdivl push imulb or sbb pop xchg push xchg or fisubr push insb aam sti cmc mov push sub lahf bound add enter (bad) mov pusha decl ja jno push lock loope mov pop pop (bad) add mov test lcall int3 mov fiadd mov cmp mov mov jmp dec imul jle add pop mov repz iret jge mov hlt mov jb lods mov push sbb push out sbb dec repz cwtl fwait das in ja call out (bad) loopne jbe jns add cmp in xchg (bad) mov clc xor xor ljmp push fstpl and pop lcall jg mov mov cwtl inc mov xchg pushf or cwtl insl push cwtl nop and rorl sbb add movsb (bad) int lret fidiv into sbb imul mov das aas jnp jo pop pop icebp push mov xlat mov cmp out pop ja iret add xor test ljmp pop cmp mov call mov call sub lret sub cmp les pop movsl pop pop jmp mov jns xchg aad je aas cmpsb in cmpsl adc pushf mov mov (bad) mulb mov in arpl jae movups xor sub jnp push lret adc (bad) les daa int3 xchg bound add in movsl mov inc pusha cmc inc ficom push jo add notl ds dec cwtl scas pop popf mov aas xor or cmp fiaddl stc (bad) push or out push movsb cmpsl (bad) push cld daa xor push cli mov aad lea mov (bad) mov push dec and adc cmp rcr gs mov fstpt repz add or fstl lock mov cmp rcll arpl movsb jb mov sbb push add dec mul lret loopne push frstor lock push pop adc imul out pop mov mov out rol push or xor jle rorl push rcrl out xchg sbb (bad) pusha mov jmp xchg in mov (bad) lahf addl and jae jp and hlt sub (bad) jno test jb andl mov out inc mov push stos out mov mov imul mov mov push (bad) cmp cmp mov inc xchg sub add outsb jae mov sub mov jge adc or mov sub dec sbb xchg push iret sub mov push add mov add push push mov mov (bad) popf cmp jmp orb hlt sti or insb xor mov add stos out iret adc lea in test in pop jns inc cmp mov aad dec pop inc nop push inc xor xorl fld mov push or in dec pop pop or mov pop xlat in mull sbb fisub mov rcrb std into push add push insb sub pop stos mov jg hlt push nop mov rdtsc push stos adc ret or pop (bad) imul push and fildll hlt push test repz jp sbb inc xor mov add sbb push (bad) jne sahf jl sbb psllw pop int jl push test test les sbb pusha mov bound pop push fwait push mov sbb ret cli mov push push pop outsb mov cmc notb push mov jmp push jge pop jecxz stos es add sub mulb lcall push add divl or ret xchg xchg or add in sub pushf daa (bad) shr (bad) cli (bad) mov int3 mov out cmp mov sbbl and xor add push cwtl (bad) dec adc call clc dec loopne in push fstpt sub mov arpl add test js xchg jecxz lret fnstenv test (bad) rcr pop mov sbb mov adc pop (bad) push fwait or dec pop (bad) mov push shll sbb ror and stos mov cli xor (bad) cmp mov (bad) je fcomps pop in loopne sub fucomip push mov movsb xlat mov sbb inc cwtl mov xor into in and aaa mov sbb mov mov dec xchg test ficoml pusha test rcrl out (bad) sbb xor mov movsb xlat cmp pop mov lock or icebp xlat loop inc fildll es inc xlat lds das cs (bad) xchg adc mov lods mov xchg (bad) pand jnp jb inc mov call ljmp jb data16 xlat xchg mov cmpsb popf stc or leave inc xchg add jne jo dec sbb or cmc mov mov lea out bound cmpsl test shlb push mov cmc mov add sbb test mov (bad) mov faddp mov and out (bad) repnz push cmp in insb add mov mov xchg orl aas push mov aas (bad) fsubrl pop sub in cmc mov ficoml add inc cltd aam repz push dec mov mov sti pop xor xor push daa fmulp push (bad) (bad) ss (bad) inc int3 je insl sbb dec mov jns gs dec push inc insb push mov movsl pop dec and xlat (bad) leave int sbb das push jg rcrb xchg mov adc inc jb and cld aam inc outsl outsl xchg lret mov pop jae test inc loop xchg adc push loop xorb inc jns and sub faddl adc fwait or pusha repnz fcomps mov test xchg (bad) pusha or push lods jo test mov fisttpll (bad) or (bad) xchg inc in add aas mov mov push add or inc in or fistp dec (bad) jp push (bad) xor mov or and inc jle mov dec pop jmp test inc push imul orl pop in dec sub sub mov dec push mov xchg adc pop mov xchg dec push arpl jmp jns mov loopne fstpt xchg push movsb ficomp or sbb clc xchg (bad) into sub sbb fcoms pushf (bad) rcrl xchg imulb cwtl fs xor in cmp mov mov inc pusha dec inc fwait andb addr16 icebp add lcall loopne dec mov hlt sarl ret imul inc loopne popa dec adc cmp mov loop (bad) in call sbb test out lock adc mov out loop sub sbb (bad) jo pusha lcall and lahf sbb xor loopne jmp mov ljmp cs xchg cmp mov test inc lret (bad) mov jecxz or or pop in jle inc cvtpi2ps loop iret in gs add jecxz xchg push movsl jbe pop addr16 pop add xor out or andb shll ret mov (bad) cmp leave pop mov stos mov mov popf daa iret jmp push insl dec icebp mov arpl andl cltd in cmp or aaa les dec cmp inc (bad) loopew sti aaa fstpt sti or jmp clc jge fwait inc mov dec inc popf pop mov mov ret xchg mov push jmp pop xlat mov ror into out xchg scas mov (bad) icebp push jo lods sub test cmp stos popa push out enter jmp adc cmpsl sub les adc cmpb jns mov mov arpl dec mov test or push adc out jnp push xchg mov inc mov pop add mov inc out icebp ret lcall xchg gs popf mov add push xor mov xchg xchg mov or push or lcall mov push or flds jecxz push pop mov nop cmc fildll mov adc jo cmc cmpsb stos mov std dec xor cmpsl stc repnz or lods jle and add lods cld popf ljmp jmp pop sub test push mov xchg push push dec xchg adc mov out adc inc scas pop adc push fistpll hlt mov je mov push addr16 lret stos dec mov jl dec lret orl mov inc pop mov ficoml mov xor and insb jl lcall xchg jne cld mov jns push mov adc subb insb push xchg fistl pushf push testb adc movsl mov add fisub adc movsb (bad) mov cmp popf cmpsb mov mov mov add xor cmp lods xchg push add inc sub and (bad) shl pop xchg lea sbbl push rol jmp sub loopne and mov enter push sub ds sti daa stos add mov and push cmp sub out pop xchg in jb sub xor sbb decl aas cs jmp imul jne clc inc mov or std xor adc mov popa pop mov gs xchg dec dec add insl cltd ljmp (bad) (bad) rorl dec adc repnz sub (bad) adc insb mov movsb dec mov push xchg sbb int incb mov roll push pop inc repz scas icebp dec sets add hlt (bad) loop ret mov jp cmpsb andl xorl sbb ret xchg push or inc jmp outsb scas clc clc idivb cmp dec movsl mov sbb inc sar mov lret es dec inc cmp fistp xchg scas movsl pop shr in sahf dec mov push or in mov fildl xchg into fsubrl jmp push sti cmp adc cmpsl out inc adc dec dec mov fs ss sub jno mov inc cmc imul movaps sbb sbb mov pop leave mov cwtl mov xor add jecxz sbb dec sub cs movsb or xor sub dec pop xchg or jns push sbb lcall xorl cmpsb xor mov bound stos or fistl adcb mov in bound pop mov sub gs ja fidiv jns dec pop xor (bad) cli in xchg sub fisubl sbb fs or jb adc and adc xor mov ja (bad) cmp cli imul inc mov test nop aad sahf js lret nop stos push cmpsl pop mov jb inc cmpsl cmp xor out xchg and jno add mov in xor inc jmp nop mov test ds sbb sbb cli xchg xchg lock (bad) test jmp jmp push test jnp imul and out (bad) test fsubr mov pop sti data16 mov pop lret pop andl rcll pop add push cmpb pop cmp adc (bad) out xor loopne xchg mov imul mov xor cmp dec jle iret xchg mov xlat xchg neg idivb fcomps and das jb ss jmp cmpsl inc out rcrl sarl jb jo (bad) movsl mov ljmp pop (bad) pop je test dec xchg ljmp loope mov push rolb int mov into adc push xchg fisub aas in push mov mov shrl out dec cmpsb cmc adc jb lea xor imul pop mov jge mov or add fwait into rcll pop jo insl orb push xchg cli dec test jp aas dec lret mov cmpsb mov inc arpl test (bad) incl inc push dec sub mov pop push icebp test mov push xchg sbb stos pushf jne movsl pop sbb mov fxch mov data16 ss add jl out ret inc lods cmp or and jnp push iret aaa jno mov and dec stc and mov or test out (bad) mov xor outsb sti sub jg jle (bad) or jl pop sbb pop mov and xchg mov inc dec nop mov jbe add jl ret lret push sti sub push cld jne test out nop js xchg fs jle jno xor mov std leave mov cmp cs cmp aad insl dec sbb ret dec bound mov xor mov adc mov repz jmp ds mov repnz push out adc std jns or insb addr16 and mov inc je insb icebp and xchg dec push sarb rcl nop cmp add lds fs lret (bad) lea xor mov inc test faddl mov lret sbb and cmc (bad) rcrl outsl inc mov lock jge movsl std ror xor lret mov mov (bad) mov dec adc dec push jae mov out pop in mov jo fdivr inc pusha xchg lret mov bound gs mov mov dec es adc cmp ret xchg push mov jl inc into mov dec aad jp repnz mov adc pop inc fs sbb sub sbb lods aam (bad) push cmc xor std pop jl mov mov inc cmpsb push loope and aam sbb mov lret mov enter mov mov repz lea and xchg sti and mov adc fwait mov outsl pushf cwtl inc andl jg xchg inc push insb in pusha aam loope sub xchg jns,pt js xor scas aad lahf mov mov das repnz orl add mov push push pop dec shlb repnz outsb in sarb mov and jmp rol sbb test jno loopne movsl out inc push fsubl lret (bad) mov ljmp scas mov scas jno mov cltd es mov pop jo pusha lods mov cmp decb cmpsl jnp dec inc shrl pushf out and dec sub ja ret cmp adc or pop pop sbb pop popa xchg mov xor mov and xchg or lahf inc test sbb lock pop and pop dec pushf cltd mov jns fwait arpl mov mov cmpsl movsl bound push jmp pop cmp das push pop push cwtl mov push sarb rclb pop test mov push jle imul mov sbb or mov lock mov mov movsl lods mulb add fmul cs xorl and push enter sub push sub sbb sbb and mov pop adc dec int3 inc mov dec test jmp rorb test dec jb or es push lods fwait pop (bad) pusha fdivrl mov popf aam hlt xlat fbld dec jg lahf rcrl push cmp shll jnp mov push add mov dec sbb mov (bad) or xchg xchg leave lods (bad) sub das loope sbb enter add dec xchg mov ds mov and (bad) lea fstl add or inc int3 cltd gs cmp call jae fst pushf inc ljmp call inc (bad) xor lea sub mov mov dec push dec mov dec or mov fstpt decl cld daa lock sarb or daa lock sarb or daa lock sarb or jg clc aas or or add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add hlt and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push inc sbb adc mov ret mov xlat xor pop mov lods (bad) repz divl test out sbb and add add loope pop sub add daa mov xchg sbb cmpsl sahf or and mov dec xchg repz std daa in in xor insb in imul pop cs scas jbe and dec popf sahf lret xor es imul in in sarl inc dec and xchg popa sub leave out mov xchg and sbb fwait or xor jbe xchg test pop jp cmp mov inc jno stos jl mov push cmc out shrb repz push push std aas xor (bad) fstps mov xor lcall sbb (bad) and xor (bad) cli dec inc cwtl xor lea jge leave and daa mov and pop xchg mov xchg inc mov out insl push dec cmp xor adc test pop cmp (bad) (bad) das arpl popf and pop pop daa (bad) xlat and xor push dec rolb mov cmp mov cld or test test or sbb jbe pop std mov pop (bad) std daa dec loop int movaps jmp inc popf push sub insl (bad) hlt cmc jo jnp or mov outsb lods add stc imul loope mov pop or sub xor and loope test sbb push scas pop xchg and mov loope mov cwtl mov push mov leave shr or aas and xor mov rorb (bad) jge lods testb mov aad movsb xchg mov into xchg pop (bad) mov mov push jnp xor por lods mov jae mov xchg shll pusha rolb imul shrb repz nop lcall gs sbb loope fldln2 mov push sbb sbb adc inc push jo push inc sarb outsb fisubrl cmp inc in mov mov mov ret xchg dec mov mov sbb mov fiadd add std (bad) mov pop lods jp adc cvtdq2ps lock pop mov ljmp push sub insb pop sub les push ret lret mov imul add push test mov or sti lea or mov mov adc lahf cs test (bad) mov cmp mov aaa dec mov jno (bad) cmp repnz shrl mov sbb push nop js aam xchg sbb xchg int3 bound ret jp inc scas cmpsl mov insl adc leave push pop jbe flds lret insl cli in dec jne dec xchg push in push lea jp das das xchg cld (bad) xchg cld xchg cmp pop fidiv fcomip sub aad xchg sbb into cmc jb idivl sbb cmp loope nop stos out push dec adc adcl sub add push push mov call and jno (bad) push cmpsb cmp popa jp fild cmpsl and std dec nop push mov pushf (bad) les push push jg es pop adc lahf jl jg push xchg mov jb (bad) adc fcompl dec push sbb in sbb xchg jmp nop cmovge inc or jmp and jno push push stc add sahf das popa pop cmp lahf loopne adc xchg lahf cmp pop dec clc mov xchg fucomi pop dec lds add sbb test push push xor ljmp xchg inc dec in adc loope xchg add shll sub in mov mov xchg or fisub pop cmp loop stos jo mov ss xchg (bad) les adcl mov jb mov sarb sub enter lahf xchg dec pop jne fmull movsl and mov outsb mov mov (bad) (bad) ljmp lea xlat jbe loopne or mov push aad inc adc into push cmc inc cmp xchg insb mov inc mov in lea enter imul ret mov or push jnp fiaddl loop rcr fistp mov push mov and cs mov (bad) push ss inc jg cmpsb popa repz push outsb push add pop pop pop lret inc push in mov hlt fidivrl iret mov mov mov fldl adc and xor std gs xchg and aaa xchg mov ljmp jp cltd inc adc pop xchg cmp aam (bad) mov cmpsl mov inc out cltd jl mov cmpsl pop xchg xchg mov (bad) pop jbe mov int3 xlat sbb mov shll push adc loopne pop xchg sbb fstl mov and test fs ret inc jg xchg clc or inc xchg mov jge xchg test mov test int3 xor rol mov mov int push fcomps cld or or shll insb int out pop cld pop push mov adc add jo xor xchg daa sbb loop (bad) mov jnp or shrl or and ljmp jae test popf xchg add mov push out pushf push mov sbb movsb jae in ja jmp out and outsl dec test dec div or std sbb xor lods adc add xor jle inc sbb pop or lock xor sbb (bad) insb loope jo cltd inc jno cmp jo mov xlat adc xor adc mov push ljmp js imul out dec orl jae cmp imul mov xor inc sbb xchg outsl jno xor jo js and sbb flds jge jno dec loope into jae fs sti fs pop out int3 sub es lds in stc add test int3 stc out lahf loop cmp aad xchg cmc das das (bad) xchg dec in inc xrelease cmp inc mov loopne pop jno les fucom mov aam int sbb lret pop dec mov xor cmpsb xchg jnp nop aaa adc sti int sbb push jmp pusha mov jae movsl inc std aad cmp mov cmp sbb mov sbb push iret xchg sbbb or jg enter inc imul or cwtl setl pop xchg jge sub mov ret rolb lret push icebp ja mov sbb adc aam dec xchg js bound jge mov adc lock mov lcall mov fcoml bndldx inc add xchg mov es push cmpsl dec or in xlat inc dec mov shr fimul push mov nop or rclb and xchg adc sahf aaa mov xor dec scas or daa add jle imul (bad) out mov pop xchg mov (bad) insl pop or shrb ret lret mov adc sbb dec pop adc xor pop mov jg dec (bad) repnz mov andb xchg and pop mov mov xor jl jbe jno movb pop stc xor mov mov ljmp sbb test fs xor xchg rcrb mov insb pop mov aam pop cld sbb into inc scas jp test stos rcl sbb xor inc in cmp jp repz ror pusha ljmp gs cmc jmp icebp sti mov mov mov hlt pop inc mov cld mov push sbb or push lds xchg xchg cmpsl inc xlat (bad) das push and adc ja xchg lods (bad) aam xchg std mov mov (bad) ja cmp out mov pop xchg popa out insl dec pop int jmp out mov outsb xchg push ljmp xchg aam or inc rcll lcall jne xchg test dec mov mov rcl adcl int adc inc or rclb scas (bad) movsb or fisub xchg add cmp sub inc repnz sub or cwtl and mov jno das lcall (bad) mov addl xor add jo int out mov and ret lea fsubl dec mov call test dec cmp jb rcll and mov rolb pop pop cmc test mov out xchg dec stc stos out mov outsb jnp push data16 aas out jecxz xlat into jb fadd pop jo mov mov mov idivl mov lods lret (bad) out out mov inc into xchg pusha mov hlt dec mov in (bad) mov pop popa adc sub xchg jl cs sbb or ljmp std (bad) pop jnp xor mov xor cltd lds and lods dec mov and fsubs xlat mov pop popa sbb fld jae daa ja loop xchg adc idiv inc xor cmovbe sarl cmp ret cmc data16 (bad) jmp inc mov and dec inc icebp ja addr16 inc sahf ljmp popf mov aas insb or xchg mov sbb dec add dec or and sub hlt xor mov pop pop add dec push stos imul or jnp fs mov sub push push push insb mov xchg ret cs xchg arpl test test sub mov sar rclb movsl or faddl (bad) enter cltd shrl in jle pusha fcmovnu adc and or ljmp pop daa or clc mov jp pop clc ja mov sub lret push js cltd js and fwait cli mov sub inc xchg dec mov outsl test sahf jbe nop mov repnz imul xchg imul or dec cmp in dec cmpsb mov inc rcrb dec out dec xchg cmp mov jno popf iret mov pop ljmp jg sbb mov dec mov lods test cwtl dec out xchg or xor in out mov mov xor pop mov xor loope and sub pusha push cltd out push inc das pushf xorb jo and sahf fdiv cli push les add cmpsl cmp cmpsb sub hlt pop xchg jecxz xchg xchg dec push jmp in pushf sub push inc inc xlat aam shl ja lds neg mov fs push jb dec xor das rcrb xchg sahf daa pushf pop and add cld mov and sbb xor and xchg and enter nop loope xchg or or mov mov cltd fld adc dec enter sbbl add dec inc mov adc cmp lds add cmp (bad) lret mov push push sub stc add add aas in imul stos xchg ficom mov dec cmp xor mov or xadd pop aad jge cmpsl icebp inc dec jle xor jmp lret or jo pop hlt and push test imul daa int3 lret scas mov jle add hlt xchg pop or inc cld out aaa std mov mov mov dec and push insl data16 push lods and andl jae xchg mov je nop push push std ret into dec xor (bad) or xor sarb outsb xor data16 lock inc xor dec pop add sahf lock sbb pushw movsl (bad) xchg cmp in dec push mov sbb add xor bound xchg (bad) in sbb add sahf not mov lret movsl fs pop adc cmp sbb aas mov sti fiadd jno (bad) in push pop cmp mov pop insl mov jecxz xor inc lcall popa xor out loop jmp cmp fcoml mov and xor addr16 pop aas inc mov das stos test jae mov (bad) jp xchg push out mov push adc hlt add test and push sub idivl push xor xchg mov cmp dec ds (bad) bound loop sub mov pop push jg repz (bad) stos fiaddl sbb xor mov icebp mov cmp stc inc jb cli (bad) adc mov fld sbb les and std jl mov or mov sahf sub out and xchg lods sbb fs mov lret and push lds jbe dec leave mov inc add push lds sbb xor lret outsl jb xor mov xor test pop add xchg fcompl pop lret mov or or into xchg dec scas adc jnp in loop xchg cmpb icebp xchg xchg ljmp nop cmpl push leave andl inc pushf inc call sahf iret mov loopne fwait push fiaddl adc push enter push jno adc test jl sbb mov or hlt inc rep adc pop sbb mov xchg scas push jno leave (bad) rcrl test or and outsl test aas jb jbe pop dec aam mov cmpsb push cld push inc test lock dec popa inc and addr16 mov out jg sbb loope inc repnz repnz loop mov sar adc mov dec xchg leave or js or (bad) in (bad) cs jae or pop jnp scas add adc (bad) enter mov int ja xchg mov mov (bad) and out int3 out fist stos in adc add ljmp cmp jae and jno jo adc aam jae ja idivl add add push movsb sbb icebp dec shlb xchg insb jecxz fistl popa cmp orl lock add jns adc jo cld out mov lds dec jle or int3 (bad) pop mov fidivr enter sub jno sub push mov mov lock dec and fs mov push imul sub dec jmp and into jl insb cmp fdivr pop shl mov jno fnstsw lods adcb push iret loope imul push push xchg xor push dec dec mov sti js adc push (bad) sti jle gs xchg hlt rolb fimull std lods mov scas inc and and clc pop jbe sahf xor icebp popa cmpw mov or and xlat or loop mov and or ss jmp fcmovnu jge jg jle xlat mov cs popa outsl xchg pop mov lcall pop ds pop sub pop lds adc mov mov add adc xchg push test int repz add ret js ss cwtl jno xor stos mov cli xor fwait jnp and inc shll mov fsubrs push cmpsb dec inc (bad) test mov (bad) sarl int mulb ficoml popf es out and (bad) or and dec scas lods call jmp push add cmpb cmp and fwait cmp cltd sbb fldt inc fs lahf js in lock push inc add pushf lea jne adc dec cmp xchg pop cmp fmul mov or sbb push je imul jno dec ss dec (bad) jmp (bad) cmp iret mov je jbe sbb fimull (bad) popa pop sub add call jmp (bad) gs ljmp sub imul xchg cli push push and arpl add or es pushf (bad) mov jne stos test jg adc aaa pop outsb insl cwtl cltd mul jb push xchg adc iret xchg fstpt lods dec push arpl and xchg mov xor and outsl mov imul push sub cmp adc mov cwtl lahf pop ss pcmpgtb cmpsl mov xor sbb scas (bad) mov push jle cwtl into mov push ret mov jne repnz lret pop or cwtl pop cmp dec cld enter cwtl adc mov fisubl adc gs mov int pop xchg or dec shl inc enter xor movl test addb or movsb xorb jne xor pusha bnd and int mov outsl or in mov addr16 add fcoml insb xchg in (bad) cmp rcr (bad) fs push jmp jle sahf mov es push cmp cmc inc lahf mov test in push sub cmp add mov sub push dec mov in cmp mov dec fist stos les add jle (bad) lret jp int shrb sahf sub mov loope mov jp dec add jecxz (bad) sbbl clc adc adc cwtl xchg push pop add das loope dec inc addr16 in xchg mov inc test jb iret mov pop ljmp mov cmp in jbe pusha je (bad) rcl xchg leave and (bad) das or cmp leave mov fnstenv jmp movsb add hlt jbe add cmp daa push mov or ljmp jmp adc xor push and bsf jle shl sub xor push fdivrl pop mov stos int3 jne add fsubl fisub das test out or aam jae (bad) sbb cld add adc inc movsl sti dec lret mov sub call call bound insl fstpt or out out sub scas scas adc xchg inc dec adc das add push jp inc cmp sbb nop lret std les cmc push or jb mov lods and pop or xor (bad) dec adc cmp and cltd jne pop dec add test nop inc and ja into ret mov fstps int stos mov out data16 mov scas loopne or dec inc lret aas in mov out cmp inc lds adc push data16 lds cmp test pop insl sarl cmp pop dec jmp outsl sbb fstl arpl lcall jno shlb adc repnz neg scas jmp int repnz cmp bswap jnp out push mov (bad) dec mov ss push negb xchg lds aam test mov enter aas leave insl or loop lock bound adc jle (bad) xor lret outsb dec add lret cmp jno aam jle fistpl pop add lret xchg pop jg push ss es lcall or add cmp pop in hlt cld adc imul pop faddl js or dec push inc mov out repz mov orl lret jnp leave fldl int3 lret cmp sub loopne (bad) xlat mov (bad) xlat xchg lret iret sub lret in jl and decl in xor mov aam mov ljmp sub sti das fcmove (bad) aas mov (bad) push and stos jo sub cmpsl je jae inc add ret inc mov aaa rorl add sbb pop mov xchg in out mov fcoms (bad) pop roll inc mov movsb jb push jl mov cmpsl adc jg insb mov orb mov sahf jae xchg add nopl loope lea cwtl or mull mov sub sub inc (bad) hlt mov or lock js xor xor add enter xor cmpsl movhps adc or adc ret dec dec mov sbb lock jge shrb mull in and pop dec xor sbb (bad) test jmp jl scas xchg jle dec jmp adc pusha iret inc or repz jl mov fidivrl mov addr16 mov (bad) mov pop data16 mull dec xchg lahf push or repnz dec data16 push in sub arpl cmp lret jecxz inc push xor pop in mov pop push mov mov mov pop mov push inc jb pop lret leave sti outsb inc jp lock pop daa (bad) leave repnz int3 sub push ficompl cmp in add sbb xor not ljmp sub loopne lods mov mov shrb out mov shll repz ficoml pop fcoms jns orb popf lahf cmpsb dec sahf inc ret jo jns (bad) pusha ret loope jae jmp ficomp arpl subps mov mov loop rcll sub xchg fsubp and lds pop jle adc mov xor push jns dec std adc and jae lea (bad) sbb (bad) aad into inc pop roll sbb movsl sahf mov xor adc enter mov pop dec jno cld ds xor inc sbbb dec scas test xchg dec ror cli xlat push les push xchg mov lds cmc xor xchg inc clc stc xor and xchg mov lea add mov leave or and leave lock fistl xchg lods test out loope fidivr pop fistpll xchg mov mov and das rcll xor popa fsubs add mov lds lahf sub jge (bad) jnp add xchg scas sub pop xchg xchg (bad) pop (bad) dec and andb mull cmp mov adc dec popa adc enterw adc adc insl xchg fildl sbb fsub and aad insb ficom inc (bad) dec rolb cmpsb into (bad) fisubl and push sub jmp cltd cmp (bad) or loop xchg dec cmp pop dec out cs sbb lods stos pop call inc fimul imul xor jg gs jno inc aad xor loop sbb mov mov push ret mulb cli lcall (bad) (bad) cmc and fisttpll push sbb sub (bad) sub dec xchg int mov pop ret out sub sbb mov add sub es lcall outsl ljmp jp in in push movsb les lock cmp or ret push and jae aad stos mov bound cltd lods sahf cmp dec nop lea lcall fs aam lods out cmpsb call pop mov jbe imul mov test cld loopne dec push xchg cs jns lock jb in dec mov push (bad) adc test sub fldt aas inc xchg pop and loope adc xor jge shlb int test adc dec xchg cmc mov sarl sbb test jnp mov inc ret xchg mov shlb ret cld and lret pop add adc push push add jg ficom xchg (bad) push and xchg xor jne fmull test inc sbb pop jo sub movsl push cmp daa int3 clc mov and dec out cli jbe push add (bad) js fs push test test lock daa (bad) cltd mov gs mov in fistl mov mov lea pusha mov mov imul push lahf push mov aas cld lds xchg (bad) cmc stos into mov jecxz subb pop nop and fs pop inc cld es pop dec adc js outsl cmp adc xor mov or icebp fcoml loopne xchg cld mov imul pushl mov insl jne fstl mov ret sbb js cltd push add std or jge adcl test mov addl lock (bad) hlt mov out cmp pop push dec or iret repnz inc xor dec pop sbb push out mov ret js es inc pop cld fmull sahf mov or mov mov inc dec bound jbe cld arpl or push nop cmp (bad) movsb imul aas pop pushf push jnp lahf das call cwtl or repz int3 addl dec sub jb out fimull out dec fcmovu dec push test sbb mov push mov jb pop xor cmp push mov xchg fistp out mov mov xor sti jmp jne or jno (bad) jae mov sar lods dec adc and jp sub enter xchg inc mov pop call add xor lret dec mov xchg addl daa adc and negb inc aas in aam not stos scas mov es xchg mov inc sub push in sahf pop pushf cmp int call cmp push pop adc hlt addr16 sub into push rol cltd in push (bad) aam adc mov adc dec loopne cmp dec loopne cmp dec loopne cmp dec loopne fwait sar jmp fldcw cmpsb mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add icebp and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push inc sbb xchg insl fldt dec pop mov mov push jbe insb mov (bad) jp div in jp lahf jmp das add add add add out push out mov cld fs aas jmp ja cmp daa in shr insb test xor mov xchg hlt pop push fsubrs decl pop jp ficomp lods mov cmc jo and or pslld sbb cmp push mov js fs jge adc aaa jnp dec jl jnp lods out xor jo mov loope (bad) int3 sub popa xor in enter lahf xchg mov into sub sbb jbe pop aad cwtl icebp jg mov sub lds mov out dec xchg (bad) hlt mov mov and pop icebp in push lret icebp shlb mov inc stc jmp das movsl dec aas movsl sbb jns test aam fistl cmc iret jl and sbb xchg icebp or outsl inc mov bound cmp mov pusha push std pop ficoml pushf adc adc xchg dec iret jge jp dec add outsb out jecxz call sub loop shl adc nop mov lods insl add lds adc and stos mov dec ljmp (bad) popa lods cwtl ror xor sarb mov adc or push xor ret callw dec mov outsb mov dec adc dec push cmp and inc addl in movsl stos mov sbb adc outsb inc ds lret in cwtl mov fidivl inc lock vpmacssdql enter sub or (bad) pop mov fcoml jno in xor adcl sbb leave rcr dec insl fs mov out sub psubsw ljmp mov mov lods xchg rorl sbb mov insw mov jne add fsqrt xchg adc jg xor sti push test jo push outsb add sbb cmp adc inc daa xor addr16 hlt push ret jecxz lds and or jl ja sub xlat loope jbe outsl sbb in cmc js es sahf lock xor xchg sbb and pop and or subl xor (bad) rorb iret cmpb jge (bad) aam cs mov mov rol shll daa dec aaa mov mov rcll fistpll jnp adc (bad) jne sub cwtl fild xchg push rep inc psubq mov stos xchg sbb or lahf inc pushf and push je and sbb addb mov lods pop mov push cmp mov sbb sub cwtl mov xchg xchg das fildll mov je mov xor test add (bad) aad fild loop sarb adc sub popf and faddl adc dec mov lahf scas or xor fidivrl xor mov mov sub aas je jae cltd mov movntq ss cmp pop push dec sub mov data16 push das mov dec pop sub sub sub movsl cmp test movsl cmp or pop cli cmp stc (bad) fild inc xchg and aam popa inc (bad) (bad) mov and jp mov jmp jp cmp (bad) cmpsb xor xchg mov sbb mov sbb scas jne push sub pop dec (bad) (bad) inc sbb les aas dec sub test mov ja mov sahf loop (bad) push cmp pop lret leave xchg dec push adc mov adc cli ret dec sbbb pop pop mov pop sbb neg dec aam xchg testb push repnz add fcoml and mov pop xor dec mov das or icebp add in inc out xchg test adc sbb ret outsb cmc mov jmp jo das sti sbb sti and (bad) jo inc aas testb mov std xchg inc pop sti cmpl neg repnz xchg shll inc cmpsb and ficoml lock add popf (bad) jmp stos dec lahf xchg mov push sub cli mov pushf sbb andl sub xlat (bad) lock pushf js fstl cli test mov in idivl mov mov mov testl jp in dec outsb pop je dec push pop (bad) loop hlt xor cmpsl sbb (bad) jb roll pop je (bad) int3 mov inc dec cmp scas bnd xchg jae push pop lret in lret xor jle or movsl mov hlt xor int3 mov push mov pop lcall movsb and fsubl scas cmp insb out add inc stc mov jb mov xor neg divb mov mov ret adc sbb imul and or xor hlt inc inc (bad) scas mov mov fcoms enter jae scas test mov mov inc sbbb shrb call mov outsb add pop sbb pop or dec dec mov mov push mov idivb lret xchg adc dec sbb cmp mov and aad ficoml xchg or pusha daa push roll mov ljmp or dec cmp cwtl outsl inc sub cmp testl iret out test das pusha rolb or push mov aaa cmp lods shll xchg mov fildl mov add adc xchg add inc or push xor mov and or push repnz jg test sbb fdivr (bad) pop lcall insb sub ss stos push xchg xlat loope (bad) hlt jecxz les mov rcrl repz xchg pop lock lcall ss nop in dec and sub dec mov dec adc inc push mulb dec sbb and mov and pop call mov lahf insb jo push cli push movsb and pusha push fmull mov add xor push jne mov xchg loop pop mov fnstcw pop add int shr inc add jbe aaa jge inc aam rorb push jl test lret mov std shrl (bad) je (bad) xlat mov fincstp or out jp mov (bad) int insl mov or push add daa jae inc inc pop loop adc insl cmpsb in pop dec addl add test mov (bad) jl add sub addl pop (bad) das mov xchg arpl mov add dec movsl lcall cltd lods xchg loopne xlat loopne sbb nop add popf pop stos xchg orl mov movsb pop jns and or push sub dec sti insb mov sub (bad) jnp imul mov imul mov mov dec outsl mov cmp popa mov cwtl push sub xor push js inc push cmp je dec repnz mov (bad) notl push sahf lock bnd xchg subl shll out push (bad) pop decl stc jp das scas add stos adc shll hlt inc push push inc bound sbb js fistpl insb mov xor xor aad movsb mov ret or fs fisttpl dec adc pop mov push inc sbb inc lea pop dec add ret inc or mov and or dec les add sti fistp cmp lods and jl fcmovnu shrb stc aas data16 loop jo movsb imul scas mov mov aas sbb jp mov adc jmp push mov cltd mov cli rorb mov lock rcrl cmp or jbe fmulp fwait aaa sub imul lcall mov mov cld push dec sti or insl jns fmul lods xor or popa push mov mov cmp mov jb fildll inc out jnp pop jns xlat adc add dec xchg adc jl test cld loope jle jl mov xchg int3 fwait lahf mov and cmp adc cli jg pop dec xor in dec push stos fistpl xchg hlt (bad) sbb sbbb icebp lahf popa pop dec ror push jge aam hlt pop or fsubs push sub rol enter pop add enter pop std push mov outsl mov push inc test pop pop (bad) in ljmp orl outsl lret imul out cmp jle jnp add inc es sbb cld jne add mov cwtl call (bad) mov pop les jge aad clc cbtw cmp iret out xchg mov dec dec push adc mov out and push les into cmpsb sub add loope inc push fldt jnp je mov mov mov loop mov xchg sub out cmp ret lcall mov je sysenter lea (bad) scas jle sti adc mov (bad) jo xchg out sbb sti jl inc jo cmp xchg xchg rcrl add add push fxch je lock add sub xchg inc jb mov ds mov mov fildl and jp xor sbb mov mov pop mov cmp insl test in sbb pop xor push xchg es and dec call imul mov or cmpsb jb test pop xor fwait push dec inc lods in inc jnp jg out movsl std fdivrs leave je xchg std fwait addr16 fildl int xchg scas xchg inc pop mov idivl pop push push pop (bad) stos xchg in (bad) cwtl mov ficompl bound mov stc sbb xchg dec jecxz (bad) xchg stc add call push push hlt fisubl pop jo imul int xchg or faddl sub call outsl stos iret xor xchg mov lcall push pop adc cld push lds pop hlt mov mov dec (bad) add aaa mov push add mov inc xor pushf (bad) dec jb sub inc out inc sbb mov sbb add pop pop push in ss adc jae sub cmp inc js ret push nop loope rcll repz pop iret icebp xlat outsl (bad) cmc push lods mov inc movsl orl adc mov pop pushf leave aam arpl push lahf sbb inc mov rcr insb xchg out imul mov jp adc push (bad) jnp sti mov push push push xchg shlb nop jae inc sbb pop xchg push and mov pop xor mov xor mov sub out fisttpll dec test mov cmp shl fidivrl dec iret mov sub pop mov mov push sbb jo mov das out les in (bad) outsl gs out push mov ss ds test fwait inc aam or call or xchg insl jp mov xlat out and aam dec push pop hlt xchg or xorb mov mov test scas sub xchg lds popf lds sbb push mov leave ja ljmp cmp jg adc daa stc mov adc push in mov push add inc in out mov xor les xor sbb cmpsb dec pop (bad) sbb sub cmp clc stos and mov push fs and test call call and int3 inc pusha test cmp insl dec dec out repnz lods jnp dec (bad) jecxz,pt cmpsb pop loope mov leave pusha lea aad and pop clc dec test xchg adc fistpll add xchg aas xor fcmovbe pop fidiv push push outsl mov and rcll movsl sarl dec rclb xor in add in in adc push cli out inc pop idivb clc gs cld icebp in sbb out paddsb or mov dec sti jnp daa push sbb mov cmovns mov lds stos xor (bad) imul jge pop mov cmc xor cmp scas int3 adc jle cmp xor pop in js jae lods and sbb push pushf adc xchg stc (bad) (bad) aaa xchg sbb mov sub repz jge loope mov push nop inc jae or jae sti out ficompl jecxz sbb xchg out fdivrs sub iret add es imul test mov imulb or sbb addr16 negl and test sub fdivrs sahf sbb pop or (bad) sbb (bad) repnz push icebp push sbb enter cmc jle sar xchg xchg dec lcall fstps out mov xor xchg push sub pop aaa lods and cmp test pushf (bad) mov adc repnz sbb cwtl dec jmp and ljmp or ljmp pop sub sbb pop arpl rolb es or out nop xchg fcoml and mov repnz jo lods mov sbb aad in jge pop mov mov jnp sarb dec pop push sbb loopne inc jmp inc movsb ficom or inc pop inc add or lret pop nop cwtl idivl cmp inc mov add nop imul outsl dec pop in or mov out daa cmp sub lock mov mov inc ja (bad) mov mov addb iret daa test insl sarl pop outsl mulb cmp pop add mov arpl push xor inc pushf pop pop pop loopne add sbb jmp and test xor cli cwtl icebp repnz jne cmp aaa xchg lea xchg (bad) divl jmp add push mov xchg adc cltd lds mov dec dec dec ffreep stos je imul mov or stos xchg dec inc cmpsl xchg mov push sti lock push (bad) test cmp insl stos sub insl repz cmpsl (bad) cwtl dec mov jl loop pop shrb outsl jbe pop jp,pn xchg inc movsl in mov add paddsb cmp sbb cltd mov call icebp mov xor frstor ss fistpll jle popa mov mov add adc ret or in out jno mov push in mov sahf fild dec js fdivs fwait insl lods push mov or push out idivb lds lret mov cltd cmp (bad) jb ret inc push adc aas dec xchg jb (bad) xor and clc sbbl mov mov arpl inc dec pop in xor cltd add outsl and stc xor rclb test or or lock (bad) push cmp jns ja (bad) jo or push and (bad) adc pop fidivrl outsb call xor adc mov cmp jnp mov dec sub push sbb mov gs mov out aas imul xorl dec cmp mov icebp and inc aad cli das (bad) shrl add xchg mov data16 sets inc clc xor mov in ret (bad) fisub outsb (bad) mov xchg cmp sbb (bad) or repnz cmp cs rcrl lock inc js addr16 mov mov test je push or and pop jbe dec jge ds and into mov (bad) mov jecxz movsl push int3 add out xor in ds inc lock mov add ds push jge push dec or mov push int and or sbb in jge mov and test test mov or push lret add jb loope (bad) std std in sti popf jns jp mov rcll (bad) mov inc test lcall adc daa mov cmp int or dec aam mov or sbb mov inc lods pop cmp fildl dec or pop je xor or (bad) incb ja ror adc cmp push in pushf dec add pop das nop push pop mov lea mov aas loope mov das enter dec enter dec sub pop loope sbb dec mov xor das aad stc mov xchg leave push inc add sahf imul stc mov (bad) jno std imul sbb cs ljmp mov push or in pop std pop test and rclb jnp pop insb dec jmp pop repnz push pop xchg jg negl bnd mov push lahf out (bad) sub adcl sbb jbe pop dec fistpll push js mov fsubs push jl aam mov sti xchg cs mov aam mov or insb (bad) cwtl sub rcrb scas sub push (bad) sbb cmp js mov cmp (bad) sub push xchg iret out hlt mov repnz mov sbb ret push loope sti xchg mov shrb fldt and cltd jne movsb cli leave fadd pop int3 jecxz add sub cmp xor stc dec scas shrb popa jl add imul dec call rcr test imul mov fisubrl push movsb (bad) cmpsl lret cmpsb xchg cmp add lcall ret pop lods xchg movsl sub aad dec adc add gs rol lods lock imul or jge sbb imul dec jae jb xsaveopt (bad) inc movsb add jmp stos rcr enter rcrb xchg repz rol cmp push xor add pop das xchg lock dec inc cld jbe mov bound repnz sbb fadds in (bad) mov int cmp orb or fidivr (bad) fstpt push adc push mov mov jle outsb rol jae inc shll adc sub movsl icebp jecxz xor xchg sbb movsl test fldcw jae (bad) addl pop bound jae push (bad) mov xor jge iret push mov pop fwait jmp ret repnz std into mov jmp ljmp dec inc sub dec push jns daa cmp jb call inc mov jb and or lds fwait dec fild pop mov jo arpl movsb data16 lret ret add and jg and pop test rol add hlt and lahf xchg stc dec sbb roll sbb mov movsb jbe cmp mov xorl inc les jmp dec sti int3 pop jmp das notb adc stos dec mov arpl dec mov jo je nop es push aam jge sbb inc jge cld or sbb mov dec bound mov sbb mov pop cmp mov leave loopne divl (bad) sbb js mov lods pop movsl lods inc xchg iret mov bound lods mov add nop push xchg aam lods jno and rcrl xchg adc adc sbb push adc mov cwtl movsl mov std add mov inc scas jge (bad) mov and idivl push fwait inc mov cs adc jae sbb js insl xchg pop xchg hlt data16 stc cmpsl nop sub fldl jnp dec out pop push or test int3 xchg int3 je (bad) je js push mov mov loopne and pop sub inc sbb (bad) popf (bad) cmp les or adc (bad) xchg dec bound int3 mov jg pusha mov jb xor push xchg std scas repz icebp outsl xor sub sub lahf cmpsb imul push jbe loope jecxz es iret jmp pushf mov add es inc shll lahf or and cmp pop fdivrl in outsb jne fxch lret lret jae mov (bad) sub xchg jecxz xchg movsl and loop jns int fcomps jbe jg mov adc je inc (bad) jo inc xchg scas ljmp leave mov add mov pop ljmp xchg mov push scas dec mov jae shl push stc ja jge icebp mov mov loop outsb lea push push dec mov fnstcw xchg or jp jle adc fdivrl rcrl popf sbb in xor or xor mov add sbb addr16 enter repz xor aam inc sbb xor iret jl or mov pop ret sbb mov cmovge sub addr16 mov inc ja push mov lods int push into stos cmp jmp mov add pop repz cs shl stos call push pop and iret imul (bad) jo push push or inc mov push or pop jmp mov rorb xor mov les jecxz pop ret push ja adc (bad) scas inc push insl cmp test mov adc shl pop pop inc packsswb inc mov stos jle xchg jo and imul cli out xchg test sbb xchg push arpl ret cmp fsubrl ret cmp je jg out mov jmp rcl lods lea out ja mov xchg jbe and xchg mov lahf xchg leave mov inc jl (bad) mov sahf pop inc and out push jnp jb add lods sub scas dec sahf cmp lods call scas iret shll mov jbe cmpsb cmp pop cmp mov mov lea mov es inc sub and xchg adc outsl insb xchg add andb or push (bad) (bad) mov and xchg dec sarb (bad) or jno xor ret adcb push xor aam insb and lods stos add pop cmp add push lea adc repz sub dec pop pop pushl lds sub mov movsb (bad) jae movsl jge enter popa (bad) mov fdiv sub and gs test push mov or jno cmc pushl pop test ret inc sub test stos popa sbb push (bad) pop (bad) push xchg mov ret or mov pop jae pop shll in xchg call fs jns fstpt sub sub mov push inc dec addl mov aam mov paddq out xchg call cwtl (bad) mov jae jp push mov sub mov sbb cmp (bad) pop mov pop and lea mov repnz mov adc in and cld add (bad) cli enter fiaddl push push mov fistp ret lret ss mov cmp add push out mov add add pop xor shrb mov add push mov in push mov rcll mov test fidiv ss test or xchg jecxz dec loop pop rclb mov pop mov inc push pop das cmp jg arpl insl mov jmp imul and xchg sarl xor std loop repnz push xor sarb out pop jp (bad) mov mov jg inc (bad) add lret mov inc lahf outsl xchg push pop mov and xchg fsub aam outsl cmp movsl ret sbb out out sbb add out je movsl rcr pop xchg scas div ds jae cmp mov fs adc lahf and and cs xchg arpl jns jo loope fs or dec in dec js xor xchg inc pop mov lret cs pop icebp test insb lods cmpsb nop ds (bad) xor lds adc or (bad) mov pop push mov sub out divl pop je scas jb jge inc adc mov in std stc aam scas fidivrl push movups pshufw in xchg test (bad) jge clc shrb sub into xor dec cmpsl dec dec mov shrb xchg xchg repnz push xchg enter iret bound in je adc in (bad) movsl scas rcl popf push sti int3 jg inc xchg arpl cmp movsb or (bad) into xchg xchg sub mov and and mov mov sbb inc mov pushf push mov fdivrs clc mov aaa js pop xor lock pop jb mov (bad) inc lock mov dec imul push fsubr jge sub loop stos jnp test mov aad dec cmp sbb dec pop in dec pop add mov stc shrb push cmpsb mov jle cld sub iret xchg mov lods int hlt xchg fldenv sbb insb add cmpsl aad jl mov inc mov adc xor xchg mov aas jmp arpl push xchg imul inc fdivl pop push cltd arpl les xlat adc cwtl scas mov mov aad inc rorb or mov test adc inc jne cmp ja pop dec cltd aaa test mov daa (bad) or xchg dec add cmp nop adc dec xchg mov xchg or or sub mov fdivrs jg hlt dec (bad) push push push lcall cmp push inc frstor xchg out add inc xchg fstpt push pop rorb mul popa int3 sbb adc and jnp (bad) daa jl add mov lds jg mov jecxz repz ficomp jle dec cld pop sub outsl incl or adc daa lock loopne sarb jg incl or adc daa lock loopne sar cmp xchg xchg rcl add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add hlt and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push inc sbb xchg jns pop pop lret scas imul insl lods xchg insl fucomi test mov loop leave out jg imul jp lahf pop xlat mov add cmpb call push xchg and add stos lahf outsl dec enter movsl insl pop mov call les fcmovb push daa sbb xchg (bad) lock outsl inc lods sti mov ret int3 mov cmp jl jb shll fbstp leave pusha into mov jp and mov cmpsb outsl jnp shrl pop cltd and mov rolb out cmp cmp dec mov fdivl out inc xlat mov fcmovnb loope inc adc xorl std jp repnz gs mov sub loop (bad) aam sbb rorl stc xorb movsl sbb ss xor xchg fnstcw inc jo subl dec and sub cwtl fs mov enter adc pop xlat push ja xchg mov ret cli das nop lcall shlb dec cmp ss jns hlt pop mov or xchg lds je cltd iret jae (bad) testl test or outsb iret std loopne daa dec inc leave imul loopne pop out sub out fstl (bad) mov push jmp bound addr16 dec loop cmpb lds stos mov adc add lret iret dec xchg xor dec not cmp imul (bad) or sbb rcll mov pop inc addr16 mov pop mov ret mov repz insl jl addr16 test (bad) jmp sbb outsb loop sbb inc xor popf jno,pt sub mov mov addl cmp out arpl and stos movsb je dec hlt inc std inc (bad) addr16 mov push stos std (bad) int lcall add cmp fwait int (bad) fistpl imul pushf arpl test rorb add shrl (bad) mov pop inc or mov push xchg inc mov data16 mov or mov cs movsb push out scas fidivl shl mov or ficoml lock mov push and mov inc dec pop popf rolb popa jmp in inc and fisubr lods push sub mov lcall scas (bad) ja stos dec sbb bound add sub sbb loopne test ds fist mov mov (bad) jb rdmsr add fwait dec cmpsl lods in insb mov lcall fist mov jns add and jbe xchg call aaa gs mov jp jecxz (bad) fcomp inc rorb (bad) into cmpsl dec jae movsl sub js (bad) mov mov mov xchg loope fstpl lret adc inc adc mov cmp cmp xor inc fs rcll mov add add lea pushf loopne xchg xchg xor lcall or sbb movsb movsb outsl (bad) push sub outsl or sbb sbb loopne mov mov xchg ret stc ja test push xchg mov aad pop sub mov js aad inc sbb and xchg and loop scas mov into movsb mov test jmp cld pop rorb fcompl adc gs pushf (bad) packuswb mov in les aam arpl mov bound pop sub mov jae fwait ds jb or cmp and test test mov out aam psubq pop lahf jmp lret in xchg test pop mov outsb xchg fwait push cmp xchg pushf cmp push cltd lret popf and pop mov or push cmc cmp sub inc lds xchg sub push enter mov dec sbb mov jmp mov fucom cmp pushf pop cmc outsl clc and sbb packuswb adc push test inc mov in sbb (bad) mov cmp and pop (bad) cmp fdivs jmp enter ljmp cmp dec enter xchg int3 mov les mov (bad) loope lahf adc or jae cs and xchg ljmp sub je (bad) cmp lea out adcl hlt jge cltd vmovupd inc mov daa mov inc outsb imul scas lods mov nop xchg xchg movsl enter sbb mov add xchg adc mov jmp push sbb sub pushf adc fidivrl add jp (bad) xor pushf push cmp xchg mov icebp adc outsb out test mov std push loop enter bound xchg insl imul adc loopne cmpsb dec into lret popa mov sbb mov sub scas lock loop test dec ja in xor test fsubrl aam loopne pop pop sbb mov cmp outsl cmc jae xchg out sti (bad) pushf cmp xchg jo (bad) out jno add jns cmp pop fiaddl test pop enter pop pop ds int3 les inc repnz lds and fcmovnu and lret popa sub loop cmp sub repz js in movb mov repnz cmp cmc pop test rorl or or mov and sub inc mov xchg or mov mov insl inc test jae lds test cltd add mov out lret mov and mov rclb dec or xchg jae fsubrl lock pop jno cmpps fiadd je sbb mov lret xlat cmp mov jae pop test (bad) bnd loopne or leave mov jns xchg rorl push sub int cltd jmp push dec sbb mov add push xchg in ja scas nop xor in ljmp fsubl dec mov aaa addr16 dec push cmc sub jecxz sub push lods (bad) xor repnz in lret fisttpl outsl idivb cmpsl imul clc sbb addr16 mov cld or repnz stc and rol (bad) repnz scas or js add repz cwtl mov fidiv enter ds ss xor cmp pushf inc (bad) push stc stc mov jo addr16 mov push mov cmp aam inc pop mov insl dec mov jae push lea mov in cmp pop mov jno xor (bad) sub or mov test out mov pop fiaddl jmp and dec cpuid lea stc (bad) fisubr mov dec fsubr mov aaa addr16 sahf incl mulb scas insl mov dec (bad) in sub mov adc pop push cwtl test ljmp pop add cmpsl or adc mov inc cmpl push add dec jecxz sbb or loop dec ljmp mov push and aas call add orb (bad) (bad) mov dec sahf rcrl ljmp inc fwait mov mov punpckhdq lahf mov sub bnd aas or rol jns mov mov sub pushf xchg decl or pop mov xor cmp jno xchg mov or push mov aas (bad) cmp adc (bad) cmpsb ret xlat sar and in xor mov dec adc mov jnp shrb ljmp (bad) movsb pop leave fisubr cs mov shll lret cmp pop xor or icebp clc es clc call (bad) jb,pn jbe jno cmc and into test adc inc sahf lds mov stos cltd mov sbb push push imull (bad) dec inc test out dec mov fcoms xlat dec cmp jbe scas mov cmc (bad) fbstp rorb (bad) mov adc mov lods xchg and push (bad) mov cmpsl pop inc push lahf repnz push insb ds push adc shrl jp in push aad or fucom pop insb inc leave les imul sbb jmp adc ljmp or stos addr16 pop imul adc out push std iret jbe lods in std push movsl sbb int3 outsb aaa ret (bad) cs lahf jp cltd pushf (bad) cmp sahf test mov lahf test lods mov adc and in xor mov lock push std and dec divl lock mov mov fnsave fadds sarb (bad) or stc jp mov aad das dec das lods cltd pushf push mov scas in fistl inc (bad) push pop es add fwait cwtl add dec mov mov xor lods test loope cmpsb divb or mov scas push sbb ljmp sarb xor loop add sub mov sub mov gs mov (bad) pop lea dec xchg push push sub xchg add sar data16 daa fistpll negb imul jmp stc adc dec mov cmp inc xchg pop mov (bad) cltd dec jge movsl outsb ja jmp lahf lahf cmp lret std jo movsl mov xchg push xor sub adc pusha inc or add mov jmp mov enter add std (bad) sbb jnp xor adc or and xchg sub mov daa aas insb jnp je pop in mov xlat sahf pop cmp fucompp fmull es cmp (bad) dec xchg add int3 loop test push out outsl cmp push xchg sub aas add ljmp divl (bad) loop push rcr or push fcompl fisubr pop jmp add out sub jno sbb jecxz cmpsb jg mov add addl div popa popf lahf cmp dec stc or mov les add push ja outsl adc sub in loope sbb xchg dec pushf movsb je push ss push sbb jg and enter enter andb add sbb fs adc and stos jmp xor add adc inc in push xchg dec test cmp (bad) cmp in test fldl sub cwtl inc jae jo or push leave pop jp icebp stos cmp loop and fsubs xchg addr16 xchg aad and jnp jmp mov pop lods mov loop in xor cs xchg vunpckhps cmp psadbw lahf insl in mov mov mov leave xor push lock cmp rcll (bad) ja in insb outsl and mov (bad) dec fldl cmpsb in sarl and int3 or cmp cmp (bad) cmc les mov rcll adc addr16 call cmc dec pop push dec into cmp sbb inc repz jae jo mov rolb cld dec daa mov (bad) ja mov rorl jb mov push cld iret xor repnz mov push adc jge in es push cs mov mov sbb movsl ret pushf movsl inc in into jo sub adc in mov das icebp idiv mov push je ss and hlt inc cli icebp lds dec xchg sub icebp and jae or lods dec pop sub jge xor add aam ret cmp scas pop add inc enter mov jo mov add push divb cld sub gs jmp insb mov out pop pop popf inc xor push xlat or push xlat lods fistl sbb adc add inc insb pop ljmp fimull test cmpsb mov adc (bad) xchg fidiv rcll insl js ret ja test mov pusha stc mov daa inc ret mov rorb mov cmp arpl pop mov dec cli clc dec mov fimul xchg icebp inc in mov lret lcall jnp out cmp scas mov mov in addr16 jnp pop int or movsb add ret (bad) es and sub call push xchg je mov das and and loope in lock mov idivl lods mov mov pop stos xor cld push push inc lcall xor int mov cmc movzbl jne sub mov fwait loop out rolb xchg fs jnp dec dec sbb xor mov sbb bound mov xlat cmp fimull (bad) rcr push mov mov xchg cmp sbb repnz inc mov push call jb js fst or arpl outsb cmpsl push mov jb jo lcall ret out in cmp orb cmpsb jge mov aad test std jecxz js pop imull repnz fstl lcall push in addr16 adc pusha add add mov or das or fcomps test ret (bad) cmc in iret push sub cmp stos push clc (bad) sbb xchg icebp jb push daa push (bad) hlt fsubl fwait adc repz rol icebp fiaddl addb or xchg mov push incl xor or inc (bad) cs in mov xor out out mov ret mov push ja (bad) ficom and rorb scas sti testl lret out aaa shrb movsb lret push sahf push ljmp rorb ficomp sti push (bad) addr16 arpl (bad) inc movsb aad (bad) sub jb test mov flds push mov xchg sbb pop mov xor dec pushf repnz fisttpll mov cmp dec test sbb sub cld lret xchg inc add pop and addr16 mov ret repnz xchg hlt pop pop or (bad) iret jne mov mov sahf ret pop cmp addr16 mov cmc mov (bad) aaa cmpsb adc in xlat int3 sbb add or push push push inc xor push jo push (bad) mov (bad) fmul stos scas fcmovu xor inc push xor notl mov test mov cmp xchg or mov mov loope and je je fdivl in add mov in mov sub (bad) cmpsl adc add xor cmp and inc lods sbbl bound int3 ret xchg outsb mov lods test gs out scas or lods pop xor lods out aam cld pop or cmp mov mov fwait icebp (bad) testl sub or add aas std sti mov mov cwtl out push lret inc movsb aam and es pop pop mov ss imul leave fild mov push xor and jle inc mov push andl les lcall xchg pop orl pop adc and scas mov or cmp mov mov (bad) stos cmp aam stc cmp pushf fidivl scas in or fisubr adc sub scas mov sub xor addr16 ja popf adc imul pop lds aam dec lret inc pop outsl or out adc rcll pop or pop jg adc clc cltd jle fnsave imul lea inc data16 and dec ljmp test subb xsaves iret aam addr16 pop into pop (bad) (bad) call loope mov stos icebp bound inc mov or inc or adc sarb arpl mov push enter mov (bad) ljmp push loopne ret xor movsl ret xor jg jae push rcr in fidivr loope mov into aas les pop mov sub fwait xchg sub mov xchg push imul mov aam xchg jg loopne stos loope pop add addr16 ss das jle dec andl pusha leave mov test (bad) imul or adc inc xor pop mov and cmp cwtl add cmp mov cmpsl sahf into xchg add xlat xchg (bad) pop cmp jge push dec push sub inc in sbb adc mov mov mov stos push mov add push adc jmp lahf dec push stc stc lret sbb xchg fistpl mov fisubl roll lods xor ss frstor bound ljmp xchg xor pop (bad) aaa xchg movsb sub mov dec sbb clc rep cmp adc std and add pop scas dec cld leave mov add sub sahf adc push arpl adc mov call sbb lds loopne adc int (bad) in cmp cwtl sarb sub sub or rcrl pop adc jnp sarb (bad) adc (bad) fwait sub into push jbe lret pop or xchg push sub and sub or js (bad) in sahf and jo mov sbb popa rcl add stc xor add pop mov mov jmp sbb nop aaa lcall fs scas std out mov cld nop sub ds adc pop test sahf pushf jecxz push decl adc aas adc inc jb sahf dec incb lahf pop add divb add std push in push movb adc pop jg or xor mov adc je loope fstpt les jne imulb nop or sbb sub popf mov lcall je inc inc inc jne inc xor fs ret push dec push aad idivb jmp sbb lea ficompl sub xor daa dec mov inc out dec lret mov and das ret pop in pusha adc aaa pusha or sub fwait and frstor enter jae jle icebp inc fwait mov sbb add xor inc jnp shl mov pop xor cmp jl test fucomi addr16 imul jecxz sub cwtl cmp divb test jg iret jg std imul loop das inc insl and cli sub js popf push loope cli loopne push outsb loope std cmp jae cmpsl stos sub test mov push scas cltd andl mov js (bad) (bad) mov mov fnsave xlat inc dec addr16 and jnp jmp movsl push test cmc test mov adc pop in (bad) test insb mov dec push add mov push jb dec mov xor lcall adc xor rclb loope adc cmpsl nop jno iret sbb dec xlat or pop pop cltd int3 dec inc incb lcall cmp stos ret ret scas mov add mov lcall mov (bad) aas (bad) push (bad) shl pushf mov dec or pusha fucomip hlt shl mov in lds aas popf cmp (bad) mov pop out sub jle insl inc imul lret mov adc mov lret mov lods adc pop mov push mov roll lock add dec js test dec andl mov inc dec jmp adc fwait stc dec pop fnstenv sbb mov push xchg lods jg mov mov aas xor mov ja dec ss jns idiv (bad) scas xchg mov xorl stc inc xchg adcl subb fs ljmp (bad) jns ret in fisttp cmp ljmp arpl adc or mov scas and jl (bad) addr16 aaa scas inc mov fdivs mov cmp pop loop fiadd add fwait cmpsl or test cmpsb and push (bad) je sbb sti mov psraw push mov jecxz dec pop inc repz aam cs adc addr16 sbb insl or add aaa xor pop int3 data16 mov push lahf lret adc pop jp cmp mov in hlt lahf lcall aad fsubl or add push lods in lea mov lods adc cli inc jb cli lahf pop cmp inc hlt aas pop cli dec jmp mov lock lahf ss std call ret lea mov fs add adc jno and lret lods jle ja xchg cli xchg (bad) cmp (bad) jp jp (bad) mov inc pop adc mov pop xchg sbb cmp stc (bad) mov push sub push push std add or popa rcrb mov cmp push mov cmpsb mov xor mov fisub dec mov icebp dec adc into rcl inc jnp lcall inc inc (bad) or rcll fldcw xchg sbb mov cltd fs insb sub dec iret hlt aas popf xchg mov or inc aad roll or xor pop or sub xchg lcall insl pop push mov xor push mov stc sub lret pop sbb in pop and fucomip nop sub mov jmp and push mov sbb (bad) mov xchg dec mov xor (bad) cld and add or adc push pop movsb mov mov in jo iret add int3 in xchg rcrl push and test cs loope test out mov mov stos (bad) aas mov iret loopne lock jae mov adc fisubr pop mov inc xchg stc and add inc xor cmp mov dec mov mov adc stc aad sarl cmp push je xchg add jnp rol repz push mov es dec lcall xchg mov in leave test sbb dec or jmp inc push call mov cmpsl mov insb (bad) cmp movsl inc les xchg int bound stos push insb fmul dec les jae cli pop push jg pop mov test jecxz scas movsb adc push (bad) mov movsl shll clc mov (bad) (bad) cmp adc int sub cmp add mov enter xchg pop dec pop es or pop push outsl and cwtl lret mov out enter mov jle adc movsb adc pop ret jae sti mov mov (bad) outsb add iret mov sbb (bad) mov lods rclb cmp cmp mov lret (bad) push adc clc push push or scas lock push aas sbb push stos mov cmpsb imul mov cld dec lods mov pop add arpl scas push sbb jo clc dec bound and sbb test inc fucomp dec adc shr sub sub inc or aas icebp and sbb cmpsl pop sub je leave dec xchg mov (bad) mov cmc (bad) or push popf dec mov pop rorb cmpsl in add dec aaa push mov call cmp inc rcrb mov sbb mov test dec mov stc adc out sbb insb jns mov mov ljmp mov inc out ss add mov push neg inc sub and mov mov mov pop in test push (bad) cmp push adc mov sbb mov push xor ret test pusha mov fwait pusha test push lods jne push push dec repz sbb pop outsb pop xchg outsl jns mov ret aam xchg ss mov movb pop insl inc push mov mov ja xchg fild pop jmp add push ret mov es aas mov in in pop adc cmpsb dec mov push and insb loope mov lds (bad) xchg push pop cld daa push add adcl adc ljmp std mov nop mov movsl bound lds bound cs fsubrl push jnp lahf and jne test dec mov fcoms fdivrl notb cli aam fwait repnz out fnstsw xor into xchg loopne push push mov adc lahf and and jecxz leave mov lods lods sub pop ret inc ja lds mov jle,pt rorb cmp dec inc fist sbb or out push sbb test std pop jg inc mov or stc jbe in loope (bad) (bad) fmuls and xchg iret es push addr16 xchg (bad) adc xlat push mov and fsubrs cld lods and std xchg sub scas or aad dec sbb mov mov rcr stos movsb or add roll push jbe lcall ss sarl mov cs cmp bound pop fwait inc leave lods (bad) or add icebp mov mov dec xor (bad) cld cmc sbb mov iret xlat (bad) inc dec sub dec or push inc dec insl mov jge jecxz pop mov push push imul test repnz xor pop dec outsb pop dec in stos imul rorl mov test adc jnp mov je or ror fdiv mov jae xor ljmp stc or cmp and loop call sub xchg ja jmp xlat xor xchg fwait xchg sahf (bad) popa and sbb and inc outsw imul push test or inc cmpsl fwait mov insl mov pop push pop cmp arpl mov fdivl jg sarb loopne cmp dec loopne cmp dec loopne cmp dec loopne cmp cmp loopne add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repnz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push jp or add mov jle (bad) (bad) les inc lea mov bound in fs mov loope,pn pop iret cmp add pop add xor fxch sbb sahf jo imul mov xchg xchg jns fucomi outsl cmp cmpl fnstcw jnp insl in add loope pop mov mov ret mov inc add push aam fs pop aam in sbb inc push mov int3 fisub jno,pn fnsave mov or call adc in fmulp (bad) jb pusha mov mov pushf shlb adc ret in pop sub (bad) icebp (bad) dec mov cli push repnz jae popa mov mov dec mov sub push popa es test js dec in insl repnz js fsubrl xchg sbb pop add (bad) adc js dec mov lods popf cmp pop jne cmp xor outsl vcomisd dec sub lret (bad) cmp hlt movsb repz mov jns mov cmp pop aaa inc dec cmp (bad) mov add push fdivrp (bad) mov in fnstsw leave inc pop test cli sti xor xor cmc (bad) fcomp shr or test jle iret pushf inc mov push sub lds cmp xchg lcall lret mov jb cltd mov cmp add fnstenv sbb push js xchg push ret mov jmp jl dec (bad) das adc repz pop mov dec mov pushf pop xor and mov xchg jl int cli mov test fcoml adc enter fs push mov inc sbb cld mov iret adcb aam xlat sbb lock inc push adc rorb lahf mul jg mov fucomi jb pop dec mov add xchg jg push push sub sbb add push fbld stos xchg push repnz enter cld inc xor jmp push popa push push test shrl mov pop jo movsl (bad) movsb xorb faddl pop out dec or mov out mov sbb repnz xchg enter ds jns ljmp xchg outsl idivl ror fnstenv test push cmp lods mov mov mov pop pop loopne adc xor jle mov sub clc fnstcw push cmp pop cmc xchg mull mov ljmp div cltd (bad) gs jns cmp jge mov hlt add movsl repnz dec and and jg aaa jmp jne mov ja lock ds and pop out adc add pusha and mov jbe roll mov out (bad) cmc adc xchg pop sbb mov jp adc mov nop out pop enter movsb add pop (bad) cmpsb das fistpl inc fdivp (bad) (bad) or pop or (bad) out adc push pop jbe (bad) jno push pop movsb and (bad) sbb (bad) xor in inc adc pop cli fcmove dec and and leave and push lods ljmp data16 sbb leave out pusha ja cmp cli push dec mov inc pushf mov pop ret dec hlt aam lods out inc cs mov adc mov mov mov push sub xchg cmp js push cmpsb and jp sbb movsb iret fidiv daa daa decl cmp mov cli adc adc lahf dec int3 push sub mov add inc stos cli neg cmpsb pop aaa test mov push stos jecxz push mov movsl mov cld adc icebp mov test mov cwtl pop aas pop cltd cmc inc daa dec aas inc imul ret xchg and fsub es mov cmpsb add cmc xor cmpsl mov into cmpsb insl xchg push push xchg and inc sbb and inc sub sub mov jnp pop daa push add pop (bad) xor dec cmp adc fnsave pop inc (bad) jmp xor and js,pt or mov sub pop repz inc (bad) mov and aad lcall dec test cs xchg xor and movzbl out cmp sbb test in inc aas mov and xlat sub add sbb push mov inc inc jle jnp pushl cmpsl add inc mov push aas and fnstcw movb cli sbb mov jne testb jno mov cli pop outsb push add add mov mov pop stos jb mov mov mov pop mov cli xchg mov in add push pop (bad) dec cmp and push aaa cmp es mov inc mov or out repz stos subl and mov jae rclb or inc cmp repz data16 idivb fmull xor jnp lods xchg dec out dec out icebp test insb add push xchg cmp add xchg xor mov enter es xchg push dec fisubr sbb addr16 sub add mov out xchg aas xor mov clc mov (bad) test push mov ss in cmp (bad) mov push dec out and pop sbb loopne gs addr16 and mov cmp dec (bad) std jnp pop mov xchg dec sub (bad) scas dec movsb inc pop insl jne addr16 fstpt add mov xor add ja daa mov lahf aaa pop movsb lods and mov je js mov jno or push out push out mov adc aas jecxz lahf int3 mov pop outsl mov lea cmpsl push jns mov jnp xchg xor xchg bound dec fist dec dec imul shrl mov sub add cwtl lds loopne (bad) repz mov in inc or ss pop pop test and pushf adc fcomps pop mov outsl mov scas or mov xchg cmp pop data16 xchg shrl (bad) mov test ljmp and add pop jnp and add cli movsb adc inc adc ljmp mov call inc cltd sub es adc aam rep std sbbl xor sti enter and das loope inc cs mov mov cltd add and sbb out and lea dec mov js jl cltd shrd in jbe sarl sbb lds pop and inc cmpsl stc push lds adc gs mov subl sub mov outsb test fmulp cmc mov jo movsb jle jle or movsl jne or aam add das andl xor mov fstps aas stos sarl (bad) dec sub je pop sbb cltd mov test xchg inc mov pop add mov jne popl stos (bad) push neg pop jno cli pop loopne fbstp jp js gs lock sbb cmc in (bad) bnd ds cmp push mov add jmp (bad) cld jo cs lods dec add xchg daa sbb fiaddl or loope adc mov rorb in or push or jb jmp adc and mov outsb clc into push push in jp xchg fisubrl mov inc and cltd add sbb cmp inc xchg pop stc fdivs or out into pop add adc imul xchg mov das dec rorb lea (bad) jne jbe mov mov nop sti cs (bad) (bad) and lock push pop leave arpl hlt rcrb and cmpsl lods (bad) call mov mov loope xor inc pop sarb and cmp js jae cmp sarl inc xchg gs mov push pushl psubusw sahf mov dec dec loopne inc mov lea push jmp (bad) pop push xor pop pop or cmp inc add adc mov push pop push mov mov ds in mov dec pop cmp mov mov sarb adc cmp jb in in aad fcmovu dec fs or mov into pop fsts (bad) jne or xchg out movsl or lcall je pop jae inc sub (bad) or pop je pop scas xor jns add lret inc ja dec sbb in inc sub jg cmp incl movsb loope fmulp xchg aaa rclb ds lds lahf cwtl sbb push inc fwait push (bad) xor mov lods aad cmpsb gs out cmp pop add lds sbb mov or ficompl (bad) mov mov aaa inc scas mov in dec jae adc mov in outsb mul dec jae mov xchg jo comiss loop js hlt repnz mov int3 push fs fwait arpl in aam mov enter pop inc xchg xchg and inc sbb mov pop pop cmp movsb sarb pop daa test iret add sub inc jl xchg push pop pop outsl and loop jns cmc inc jns mov (bad) cmpsb jecxz xor jbe jl divl and push imul adc adc xchg jle mov (bad) jo and sbb std add clc xor loope push mov in mov mov pop jmp xlat jo and or fs mov in pop fsubr lcall out test cld out ret inc push inc fisttpll lea push pop out sbb sub fcmovu dec (bad) daa cmp outsb int xchg xlat loopne sti inc nop lret or cmovb sbb jp cli (bad) loop mov cltd push clc jg push (bad) pop aas lock pusha fwait and incb sub adc or pop insb insb inc and mov lea add push push stos cli pop ret mov xor pop cwtl inc mov add aaa fs cwtl sbb std xchg fldl cmp enter cld aad add (bad) jmp pusha cltd or ss repz cmp and push movsl mov inc cs add add (bad) out fs inc mov xchg imul jno mov mov pop fildll mov jle sbb mov outsl dec inc pop pop je or dec pop jo mov andl shrb aad (bad) mov repz imul and aaa test aaa ret push aam rclb inc add and dec add sub or test stc dec movsb in add xchg push mov repnz add fwait cmpsl dec sbb loopne xor jle imul xchg divb movb push aam icebp data16 lahf mov mov (bad) in lahf iret cmp sub xlat in mov pop inc stos cmp (bad) mov and mov in xchg mov mov les dec fiaddl orb leave xchg adc mov sub mov (bad) sub mov icebp out adc cmpl inc jae dec add mov je pop fildll or repnz arpl add jl pushl dec pop sbb pop push xor add add sub cmc xchg cmpsl sti iret enter mov in fstps gs cmp loope push (bad) repnz mov ss or push cmpsb loop xchg (bad) jecxz clc and and les fbld push lds lock lods pop test mov mov outsl out dec mov cli jl fcmovbe ja and adc adc test jno mov and (bad) es xlat or xor in add adc mov or aad mov lods dec aad push fcmovu cltd jnp std xchg xor xchg nop mov (bad) pavgb dec movb xor pusha pop pop push loopne std mov nop js std mov jl mov cmp adc inc adc movsl ret mov aad add lret push mov cmp mov push in jg jl jmp pop sbbl adcl js adc push push xchg icebp popa sbb mov cmpl int3 and inc mov stos lods subps pop stc xchg sub add scas sub pop mov dec dec (bad) sbb or add nop inc icebp sbb xchg push inc cld cs mull iret loopne sbb xor bound mov addr16 adc cwtl and pop sbb jns in dec (bad) in iret inc icebp bound xlat jne sarl stc ds scas cmpl fwait jno in das cs mov xchg sbb shl call jmp je or cltd movsb inc add ds xor lock cmp test iret sbb out pop sti mov mov inc ficomp lret mov out es cmp adc (bad) stc push inc ficomp mov outsl push sbb gs push bound daa mov imul xlat push stos movsl fimull sahf cmp mov sbb add lahf aaa test data16 push fs or rcrl jmp lods mov xchg push repnz pop inc addr16 jge orl jecxz dec out mov jp das sub mov pop mov sub and push push lds cmc push insb jbe xchg sub arpl lret int cmpb sbb lret mov and in les testl add push dec fisubrl jae js inc pusha fstl push std pop std jb pop lret mov pop les jb inc mov cmp pop lds mov xchg popf jne inc jns adc aam mov out aaa shrl xor enter daa fs iret pop sbb pop xor lret and fnstcw es adcl xor cld xchg jno pop clc (bad) (bad) adc gs adc xor in nop xor repnz shl fistpll add mov lret adc arpl mov decl push in mov mov mov jecxz push sbb pushf lds fsubs call cmpsl fildll js (bad) or jle cmp imul push fisttpl sub aas aad sarl push test inc out sti push icebp stos inc push bound repz clc mov jmp aaa jnp jge rcr mov out nop sbb jns mov stc cmp shll ljmp mov xor pop xor pushf adc adc jb push jg flds les repz jp test xchg das shll ret sbb and mov (bad) xor xor call jl ljmp xor sub xor pop pusha push addl sbb stos insb jmp ss mov cmp pushf or into out push in icebp cmc mov and jns mov stos (bad) add inc shl pop push sub jp leave jno inc sti push mov jbe push xchg mov jb and add movsb xor in pop scas inc cmp mov cld mov and (bad) ss in subl out arpl (bad) (bad) mov (bad) scas sub leave pushf jle out and insl pop mov inc jmp mov mov test mov (bad) push add gs gs push inc les push mov aad add add pop xorl push imul frstor cmp xor scas (bad) test and cmp lods mov fs out bound out jg mov in pop jecxz ret lds cmpsl inc xchg or jae insb lods mov jno push add inc aas and das fildl fcompl mov mov jg iret dec dec popf ret add iret mov popa add js (bad) cmp mov lret in imul fcompl insl out out call dec (bad) xlat xchg or mov ja pop outsl outsl lret pop lahf ja ret mov pop (bad) mov mulb sub (bad) in std stc mov add mov test test outsb push jecxz pop inc enter push stc cmc inc in mov sub add mov mov rolb push jge (bad) mulb xchg repz mov jb and fs inc add fbstp sahf mov test mov repnz xor cmp cmpsl dec outsl out pop insl adc lahf into xchg mov decb lock jge icebp xchg insl int3 pusha nop movsl mov in pop and xor xchg jae sub addr16 test mov ljmp test jae stos add aad dec sbbb sarb ja jo in mov pop mov std xor and sub or int3 stos xchg add cmp pop pop fwait js adc pop jns inc push xor xchg sarl inc cmp mov (bad) lea rol or sbb add cmpsl cli mov dec pop or mov or aas les mov add movsb and and lea pop push stos shlb lahf or inc cli in add pop rcr fdivrl sahf lahf ret mov xor push mov xor cli int3 jno or push pusha fisttpl xor xor inc or jne jle imul sahf xchg xor sub mov in jge adc mov and sbb cmp cli add out or cli loop xor loope push shr into mov xchg and stc in adcb fiadd xor sub cmp pop dec add int3 stos pop sbb jl jecxz into jge jne sbb (bad) int fisubrl push hlt cmp jnp cltd inc push pushf pop sti in add bound mov push xor mov jnp ret jmp shrl daa ret adcl pop mov cmp and jmp imul fildl sub adc push and je inc pop mov xor notb fidivl mul dec mov sub ss jmp add fnstcw mov jne mov clc scas shlb fldcw push divl orl add inc test shl data16 mov pushf ss rcr in aas mov lods xlat insl insl call or adc or sub adc jne pushl mov mov or jge xor rolb test clc xor adc dec fwait hlt movsb pop arpl cmpsl (bad) (bad) ret data16 ljmp (bad) out inc and sbb jo jae out push push fsubr mov lret inc cmc pop inc sbb jg imul das xchg xchg xchg mov push in popa cli leave sbb ret jmp sub jnp adc add andl cmc (bad) div (bad) lret sahf shlb cs add loopne divl jo mov popa cmpsb and adc sub and imul or ss sub pop or xchg (bad) xor sbb xchg popf push (bad) adc in sbb out dec out cs add cmp (bad) jne pushf into pop ror clc pop stc out das push out mov xor dec cmp test lcall sub lea (bad) xchg xor xor test sub stos rcrb (bad) jne es mov jne dec loopne mov sbb xchg push das enter adc dec fwait xlat dec movsl mov cmc mov or mov nop movsb mov pop pop jmp daa and inc lds ss xchg divl in xchg es shll mov les fsub cmp inc adc fwait dec call test mov cwtl mov xor cld or xchg adc mov sub jb addl adc jnp mov add mov xor (bad) xchg sbb push jae fdivrs push negl xchg aaa int in test inc stos jo pop notb inc (bad) mov jbe mov ss dec jo and push sub inc ret (bad) enter jg and xor dec int daa pop test xchg movsb and pusha push push nop lret cmp add push out xchg add daa jp inc mov fmuls fist and lds mov mov xor (bad) mov popa scas mov movsb data16 dec sbb arpl sub rorl aas push test and jbe std cmpsl and lret mov pop sbb pop push movsb mov imulb loopne inc loope fwait push lea ret repz dec cltd mov xor scas sbb out dec xchg out push (bad) arpl jmp pop test loopne iret js cmpsl fcomip pop mov mov shlb xchg jmp cmp mov or and add sub fidivrl sub sub jbe ds int3 movsb xchg stos cli rorl mov jp lds out or push lret movb or xlat cmp icebp (bad) dec push inc push sbb jno testl jmp xchg rcll and sub ret xor xor sbb fcmovu out popa xor mov fidivrl lods jge or roll pop jo iret dec xchg sub push leave stos push ja xor in inc pop pusha pusha fstps nop adc popa cs aas ss mov aam arpl xabort repz jmp addb fs lods es push fidivl into loopne (bad) jge lds test push push fiaddl mov push stos pop mov int inc push ret cld cmp stos inc xorl xchg xor cwtl mov scas sbb push sub inc mov add adc sub mov jg movsb sbb mov shrb mov push sub jno std test mov mov pop or jmp imul mov sub repnz push cwtl sbb jle stc test pop test jl je mov hlt inc dec ficomp ss mov pop jbe pop mov arpl dec sbb in and pop arpl push sub push aas aas dec sub les (bad) mov mov jnp sbb dec in push mov jne mov xlat push xchg aad icebp loope (bad) out push loop lds jbe scas aad cmp (bad) xor lods jle imul pop cmc push ss in je jl outsl inc subb push movsl repnz jae pop sub subl std push addl inc jp mov and push sub mov sbb pop in out mov in lods das sub fisubr adc mulb xchg sbb jmp jmp xchg call cltd leave mov (bad) fnstcw xor (bad) icebp add and enter cmp jg fmuls push sub aad cmpsl ror adc loopne push xor and dec dec (bad) xor gs add clc (bad) cmp int lcall inc jns stos (bad) lahf pushf mov xor in sbb push cmpsl sbb inc jne popa and mov lret cs xchg popa mov dec in insb movsb jecxz lret nop jb and inc adc out xchg and je out xor inc xor jne and jae jmp dec add ss cld adc push (bad) sbb xor ror ret jb int3 mov loopne or push jle mov push pushf lock xor pop add mov decl fiadd sar movsl add into in std loopne hlt add push and fwait cmp or dec lea aaa (bad) (bad) cmpsl jno out and push orl add or xchg push dec cld fcoml mov cmp or add rcll and add test jle pop mov rorb jno call dec (bad) enter and mov movl ds cmpsb movsl outsb into jge cmc or sub add jl mov pop xchg (bad) and fwait test cmc aam cmc inc fldl dec (bad) xchg fnstcw push hlt aaa ret insb cmp aam shll scas cmp mov push mov mov jge cmp into mov aad (bad) jle and inc inc fidivl mov push xlat les mov dec or dec mov fwait cli adc fisubl xor out je push jge mov pusha mov xchg cs cmp adc cmp fcmove ret movsl daa (bad) les (bad) xor push (bad) data16 cmp (bad) ss loop dec ja iret jno mov in sarb jg incl or adc daa lock loopne sarb jg incl or adc jmp lock mov js lcall dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add icebp and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push pop and popf insl (bad) sahf int3 popf fwait insb (bad) (bad) iret (bad) js cmc adc (bad) jmp add xchg sbb add add sbb fdivs out frstor in mov sbb popa inc movsl fidiv and daa test and push cmpsb lds cmpl jns fstps push imul (bad) dec cltd or std es push dec mov nop lahf je jecxz xor imul cmp mov sbb lods mov insl inc (bad) aam mov movsb popfw test xchg cmpsl sub pusha dec std cmp pop iret out jg push push lret push movsl int3 sbb sub inc scas leave nop add pop out repnz and lea hlt xor mov xor cmpsb pushf xlat mov aad popa jecxz cli xor fs (bad) xchg cmp add std (bad) es jns mov dec cld xchg jle stc xlat je ljmp xor fsub fld mov jmp mov dec xor mov scas push inc adc das jb dec sahf mov fdivs (bad) in nop mov mov in inc mov cmp pop xchg sbb lahf mov or inc sub bswap pop scas clc je inc mov cmpsl dec aaa data16 hlt mov cwtl and js mov adc test pop (bad) fucomi insb push pop dec imul dec inc inc out inc pop cmp mov push jecxz or jge and xchg pop sub lods es mov push dec push hlt mov sub sar aaa (bad) xlat scas clc inc dec call sub (bad) hlt cmp imul and jmp hlt (bad) push flds dec arpl jg stos mov bound mov ds xchg sbb adc pushf (bad) loopne loope shll push movnti stc adc fwait pop ror lahf clc icebp push cmp stos mov xor pop fcomps scas sbb out push ljmp ret gs mov fsubs inc imul mov data16 stc orl repnz xor ss syscall fiadd pop icebp outsl les sti add cmp test ss daa repnz aam popa sub in xchg cmpsb pop inc mov lods and sbb bound mov ja mov pop mov ret sti ret sub sti pushf jge aaa repnz pusha rorb pop push and inc icebp add ss lock loope add inc and and xchg (bad) cmp lock popf scas loop aas cmp fstps pop sub cmp inc fadds fldl lret stc ret das push inc and pop add enter push ds cli imul movsl lds test and out insb pop xor sbb dec push mov mov insb push repnz ret data16 mov dec lret inc movl data16 cmp mov js xchg jbe push jns and xchg iret mov cltd ss std ret xlat jnp aad pop adc add sbb (bad) mov enter push stc dec loope sbb mov jne fisubr or out or arpl out out and std (bad) imul dec inc xchg and cmp lret and adc inc sahf cmp and cmp rcll push cmp cmp mov mov clc sbb ret outsb loopne loopne cwtl gs aam jge xchg std movsl out mov nop xchg imul bound cmp sbb ret mov jmp inc fistpl mov jle lea xchg or mov jge lds cltd nop xor sub push add push adc cld jae mov jo insl sbb mov xchg (bad) jge push push push mov fcom (bad) mov pop movsl pop lret dec andl sbb ljmp (bad) mov jle mov xchg lock (bad) popa sbb jo or jo je imul leave hlt icebp sbb add mov mov cmpsb push sbb jno cs xchg je mov jmp push adc xor aas inc test add pop leave push dec pop addr16 sub jecxz mov add and xor dec sub pusha mov add add shl add mov fidivl adc mov pop pusha aad jmp push jecxz jae pop pusha mov cmpsl wrmsr jnp rorb xchg (bad) sub sahf xor pop add pop sbb loopne imul repnz jmp or adc xor mov sbb frstor lea js gs ret mov inc xor loope pop jno lahf test dec xchg pop popf push mov sbb mov xchg fsub je imul movsb push mov shrl ss inc loope jnp es pop add outsl cld and lcall xor repnz out xor mov jg add iret mov mov dec dec and push sbb icebp push ficom insb ds fcmove mov fs mov xchg frstor or adc xchg loop ret mov dec xchg leave pop (bad) xchg mov fmul movsl mov add outsl sub push mov add in inc push aaa lret cmc jae mov mov pop addr16 pusha arpl leave jne mov mov test mov call pop jle mov mov xchg mov incb in dec pop xor mov push inc mov fbld std roll mov fimul iret push and xor mov fwait jle inc inc in dec pop cmp cli pop je and mov bnd insb dec jge pop add lods repnz repz fs inc movsl repz bound ja jmp pop sub cltd jle mov (bad) xor add fidiv scas cmp sahf dec ss and ret lds xchg xor pop dec cmp cli repz pop imull stc daa cld cmp sub in mov xlat sbb sbb dec outsb in pop out stc (bad) pushf pop lds (bad) mov sbb sbb pop or xlat adc fwait inc sbb lahf cmp adc scas imull pop cs lret mov icebp push lea pop push inc ret push jae inc pushf scas mov jo lcall jmp outsb jg inc pushf inc inc test addb fs lds cmpsb jl cmp jbe test aam std mov fbld xchg jo push xor lahf gs add loop clc mov jg xchg adc into inc lret sub test (bad) mov mov fdivs iret adc mov scas and and push lahf adc cmp pop jmp cmp jecxz pusha pop lea dec stos add xchg dec pop ljmp adc mov mov cmp es mov xor and xchg pop ds lock inc imul inc inc sub movsl dec mov jg or mov stos stc sarb pop inc cmp aas cmp cmpsl mov stos push mov lret popf in or and (bad) loope sub lods or repnz lods (bad) xchg aam xchg negl or mov stc mov mov sbb stos jbe dec xchg imul sub xchg es fsqrt mov nop jg or (bad) (bad) jne rcl mulb or in not mov mov loopne lea mov pushf addb lods jle inc idivl sbb cmp dec dec sahf lods jmp inc cmc cld popf sbb sbb insb sub movsl mov data16 pmaddwd sub sub xchg pop cmp mov sarb or ss cmpsb mov xor inc adc fs jns (bad) xchg fstpt lock sbb cmp sahf mov (bad) mov test in shlb movsb iret test lret iret les and adc xor jae push jge adc lret add mov movsl addb jmp cmp test pop lcall cmpsb jno testb cmc add mov popa pop cmp adc and pop sbb jmp ljmp add ret sub xchg cwtl adc shll mov movsb or cmpsb add loope mov lret pusha fcom inc scas jmp mov in adc xor or mov popa pop nop mov sbb mov in mov mov out mov xor cmp jmp mov adc lahf test inc pop lds pop nop push outsl lea mov arpl aaa mov inc push lds or or test ja jb scas mov xlat hlt loope int sub mov cmp cs fidivl clc sti test gs (bad) mov bnd mov or sbb pop fstl ret js std mov incb xor or lock pop add pop cmpl leave cmp out (bad) mov jnp dec jbe push and repnz xor rol mov mull dec jg cli stos jge xchg jo jnp push pop mov push jg mov lock rcll fdivr outsl push mov mov adc nop pop insl mov xchg xchg lock cmp sahf adc clc inc and lret cmpsl mov add add sbb arpl lret xor cmp rorb adc inc rol and rcrl xchg pop ret or std popa jb je pop in xlat mov adc stos sbb jbe loopne sbb pushf (bad) adc push addr16 push imul xor pop loope lods in in xchg ljmp xlat aam sub cmp subl push (bad) in jno ficoml movsl mov sub dec fwait jno push test push in aam jl mov cmp mov dec cmp xchg fs adc mov xor fbld dec sbb pop push sarl mov rcrl lds push pop sbb cmp mull out add jp xchg or (bad) js cmp call mov call dec mov jg push sbb jb mov lods ss nop pop or outsb lahf sub mov mov xchg jb addr16 gs es mov shll (bad) repz pop sbb dec dec dec shrl pusha xor jl mov scas add xor cmpsb fdivl pop ret push leave push mov jl add ret jg pop (bad) jne adc out mov sti into pop dec dec lret into or ja cmp lret mov adc inc sub lcall lcall xchg hlt mov jnp divb push add pop cmpsb and imul lcall ds (bad) aas cmp dec push lods cltd dec aas out mov movsl lahf out data16 sub in cmpsl adc jae xlat test xchg test jnp stos sub jae inc push inc pop in sbb in loope,pn sub gs push pop test mov out insl addr16 fadds or pop (bad) xor (bad) cli loop das ror jecxz ret mov jp mov test icebp (bad) popa push jne call aam pop nop xchg fwait or stos fstpt sub movsb ss push push sub adc fucomi cmc or inc insl add out mov sar (bad) mov or lods push push inc fldcw lock repz lret mov scas dec xor js mov outsl and cltd and frndint mov pop stos enter fldt adcl js mov ss andb push mov fnstcw (bad) scas outsl insl pushf imull js fsubl mov cmpsl pop out xchg mov repnz jne inc popa or out ficoml jne push cmp imul out mov sbb xchg loop jle add dec imul jmp adc cmp sbb in push adc movsb dec (bad) aas imul test (bad) and divb adc sbb or push add jae pop es push dec lock ljmp cmpl movsb out xor cmp fs mov lret cmp sbb add xor add adc mov dec dec cmp inc mov and das imul loop xor jg sti je clc scas dec into mov sbb sbb jmp lret fsubs sub jg inc dec fbld mov clc arpl ror cld jb inc roll insb pop adc inc scas mov sub lds add notl sbb jae ret sub dec icebp jb rol xor nop inc leave int in add mov incb ror (bad) fmul xor and sbb sbbb (bad) cmp inc cmp cmp add jle mov mov jecxz pop scas divl les sbb div adc jb je popa dec stos sbb cmp xor jl xor mov and cli push push in lods cltd lcall pop adc xchg mov cmpsl data16 (bad) loop xor sbb enter mov insl jp hlt test aam ss sub int ret jne lock jb imul movsb (bad) clc popa mov or aam cmp aas dec lock sbb sbb mov ret int3 jns mov stos cmp ret push aam test icebp lods lahf dec and push jle inc das and xchg sub mov mov jle add pop jb push xor mov adc or cltd scas mov cmc lods jmp repnz xor test ret stc xchg add cld in xor push imul push inc xor in fdivr mov addr16 cmp adc movsl xchg mov sub push pop (bad) int3 (bad) (bad) or in dec sarb aas fnstenv out pop in xor in add jb ss stc loopne and jle idivl xor push adc mov (bad) icebp xor inc push jo inc mov jle call stos xchg gs mov pop pop fnstenv in fs mov and adcl cmpsb loop clc xor in rcll push pop scas mov jae test jmp repnz ficompl clc scas add jl jae push or ret insl test cld jl push xor (bad) aad subl es nop es mov sub fldenv ja push out addr16 or pop nop mov rcrl clc loop mov es push mov test dec (bad) roll mov movsb jle and push pop ss outsb iret and cmpsl jmp pop pop fisub and aad mov push pop mov pop sbb pop adc push addr16 icebp sbb ja fildll adc and pop dec adc mov inc add mov mov sbb ljmp add fstl sub out push lock cmpb xchg shlb bound loop xchg add inc rorb sbb les das jne jnp adc xor out fdivs dec pop fcomi lods xchg lds or or stc ucomiss cmpb lea push dec fsubr imul std in inc rcrl inc dec fstpl out mov (bad) mov add in xorb push (bad) mov (bad) mov mov test insb xor xchg sbb sbb std mov push fidiv xchg sbbl inc mov pop mov nop mov push mov sbb ret inc or inc pop jae pop add sahf cmpsb in das out xchg movsb add sub mov sbb mov gs rcrl dec mov dec out dec test xchg mov jbe aam rclb les push jg xchg cmc push (bad) jmp cmpsb cmp mov ficoml cmpsb outsb dec pop shll (bad) incb movsb mov mov (bad) icebp jge mov faddp push sahf jno or in xchg lret in cmp push xor cmpsl test xor sub repz mov push mov or lret subl inc sub fiaddl imul cmpsb je rolb std (bad) lods add fistpll (bad) out lahf add push adc sbb pop testl icebp mov call sbb movsb lds mov adc scas sbb stc int add jecxz les jb es jl cmp jmp arpl xchg fmul and xor sbb cmc popf insl fs or movsl test sti mov cmc inc fisubr inc xor in mov in aas pop jbe sub pop ret push jnp in (bad) aam icebp push sbb dec scas rorl jp cli fmuls stos push lcall add popa mov es scas push sbb xor xchg stos sbb inc adc adc sub aas mul pop sahf insb in add adc mov ljmp (bad) pop out jo daa push (bad) (bad) mov repnz dec ret popa scas dec insb adc sbb or std in mov xchg mov sbb sarb add adc sub pop add push push mov mov mov cmp les in imul lcall push xchg aas scas pop test in pop mov fs dec stos jo xor mov or adc and sub push xchg icebp or jae inc jge es test fidivl in push mov mov cwtl mov jae rorl adc or cwtl fnsave ss jnp aam popl in rcrb sahf jecxz hlt sbb outsb and out xchg cmp mov repz sarl and ds out mov pop loope js mov add pop dec push mov adc sub mov jbe push mov xchg cld loop stos in sbb xchg add mov or sub shr aam rol (bad) imul push jecxz std sub mov cmp test (bad) testl sbb popf cltd xchg cwtl add pop push mov lret sbb push mov inc and push add inc and and sbb imul push jg xchg push and dec push jne sub mov jb jae ds js das mov xlat mov (bad) or fistpl xchg inc shrl pushf pop aad in xchg sbb xchg cmp mov call stos cmpsl orl mov pop add cmp mov pop pop into es jbe pop fisubr out popf jne ja inc adc aaa pop inc repz push je testl jg sbb sub xchg ja xchg ret mov test mov int3 xor lcall pop mov das jns or sahf (bad) sbb sub ss adc mov lock or and xlat and call mov out (bad) pop mov jg loop mov cli test pushf or stos gs cmp mov adc in cmp add in cmp mov lret push fistp mov mov jns jg jmp jns aam xchg insl into push pop mov and lret popf jns cmp mov lret fimull xchg mov (bad) hlt jge jo pop daa sub mov lret jle std das mov inc pushf mov mov clc inc sub movsbl dec pop test ficoml les cs xchg add (bad) (bad) int3 mov and dec adc fwait cmp in movsl or imul cltd (bad) aaa pop pop jg push dec cmpb pusha add repz (bad) or inc or fadds gs mov mov and jnp aaa dec cmpsb mov push leave mov push dec (bad) add je or jbe lcall sub jmp sti inc test leave scas mov dec insb xor jnp dec int3 out cwtl mov out aam pop clc inc sub addr16 push sbb (bad) std jnp fldl andl ljmp sbb cmp scas jg je mov inc iret test lcall adc lds xor leave fcomi xchg mov (bad) cld (bad) loope (bad) aam mov push push mov xchg sbb ret leave divl lock jmp iret mov sbb sar pop nop lods mov sub or sub add call push mov jnp push imul jg and push out push arpl sarl mov clc mov jp jo loope dec xor das mov or xchg adc mov sub mov (bad) int3 cli pop lds and ljmp inc pop mov repz mov or pop mov es push xor push (bad) ja outsb mov (bad) (bad) fnsave xchg cwtl jns fwait cli mov mov mov (bad) mov pop pop clc jmp lods lock mov mov ficom and hlt dec fcoms xlat xor out pop cmp icebp xlat outsl out jo mov dec fcomps or fildll sub (bad) dec add rorb out outsb push mov xchg ret add and jl pop outsl pop insb scas sbb add test sub inc jo mov cmp or and es cs push push mov popa fnstenv into iret addr16 scas sub pusha adcb les pop or loope sub mov push stc cmpsl dec sbb (bad) movsb cmp rcrl adc in mov sahf and inc scas push cli mov mov fadds mov xchg rolb add pop sbb push std (bad) fildll adc pushf push dec sbb xlat mov and movsb sub xor and loopne sahf fidivr loopne dec pop jo insl fs sub fmull mov mov fldt xchg push jae divl xchg push bound push mov lcall cld or xchg dec ljmp lods pop pop in pop arpl (bad) jae cmp push pop or adc sar es out lods pop test sub (bad) mov sub daa add mov scas pusha fisttpl xchg mov pop incl dec repz ljmp fwait ret pop in aad cmpsl inc dec cmp decl shll pop test loopne es sub push ja,pt xor out rcll sbb push in (bad) std push mov aaa fcompl ss outsb insb cmc in sarl pop test push or jge inc mov repnz daa and dec cmc mov imulb outsb jl xor sbb dec loopne out cltd cld and mov lea sub sbb out lea cmp xor pusha (bad) incb ds adc sub (bad) mov out xchg adc repz jp cmp gs mov or data16 stos rorl mov mov mov inc dec jle ds ljmp push jl outsb ja call pushl pop push jge add enter xchg rcll insb cltd lahf xlat push ja mov push pop xchg add adc xlat and sub ds pop xor xchg mov mov and pop jecxz jp addb add cli xor jl test dec in jbe xchg dec lods sbb xor gs mov les push push xor xor and xor shrl mov xchg les (bad) (bad) xor rolb mov orl mulb cli lret jmp or outsl dec and sbb xchg sub sahf jp les inc push and cld adc (bad) cmpsl cli add pop xor cltd loop xlat jno inc cli loope fs jbe and pop jnp jge jge mov xchg sub ret insl push imul inc mov gs sbb adc mov popf scas mov pop pop xor inc mov popa sbb mov ja aad cld lea xchg sub stos xchg dec int lret push sti dec fs push ss loopne loope lahf call cmp aad add pushf sbb imul out xor sarl pop adc insb scas aad pop stos add xchg mov pop nop sub insl mov (bad) faddl sbb lea jne testl adc add jg orl negl fwait in loopne cld pop shrl cwtl jnp adc jg shrl imull pop testl fimul inc daa mov cs cld adc cmpsl lret out push int xchg data16 mov fwait sbb jne fdivl js idivl daa lock sarb or daa lock sarb or daa lock sarb or daa lock sar cmp lcall add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mull add add or or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push push and ret add xchg in mov mov ss mov insl mov sbb insl mov (bad) mov jp out jecxz ficom jno mov add cwtl add (bad) lret mov and fistp aam xor or lock out pop xorb pmovmskb in mov ficomp insb cmp pop mov jp xor movsl mov jo cmpsb pop dec insb adc push cmp mov mov and fidivl bound sub (bad) or test in pusha stc sbb or testb scas in jmp iret sti icebp sahf insb inc (bad) rorl push push sbb mov dec pop and or or push push or xor push loopne adc pop xchg push xor mov xor dec gs (bad) sub push jns pop test add sub or push mov (bad) pop mov and xlat mov mov inc out mov mov add mov (bad) xchg inc rorl test mov lret sub xor sub repz fsubrs dec test pop or ss mov (bad) les dec and repnz pop int pop imul cmp cmp subb jae subb xor inc imul adc test lds add sub or xchg add in (bad) xor add and sbb sub bnd inc cmc addr16 sbb fsubl xlat idivl and aad int mov fistpll mov mov std sarb push in jb or xor ret dec and test inc jae int imul in lock xor pop mov pop dec mov jle in cs pop pop addr16 pop pop mov rorb jecxz mov idiv stos dec out push pop cs and push outsb adc in inc push fsubrl jle bound mov xor mov cmp fsincos scas dec es mov inc sti scas popa add adc adc pop or dec mov jecxz xchg cmp mov jle inc jb fdivrl jb cltd dec adc mov hlt xchg sbb dec inc std push inc sbbb int add inc pop and mov lds cmp add repnz jno sub xchg bnd or inc cmp mov lret in pop jne fstp lods push and stc test or icebp fisub mov scas sub leave add and inc jnp loopne ljmp call dec cmpsb stos lods scas push (bad) push insl imul stos aaa mov mov push std fadds pusha pop xchg in inc sub or cmp rcl add cmp ficomp daa xor lds inc repnz cmc dec jecxz nopl push or sbb mov popa movsl mov sbb sbb sbb xor ret dec mov sub movsl sbb dec or xchg inc fldl sbb icebp (bad) out jo cmpsb add or movsb imulb sbb les test mov movl sub je mov pop mov mov popf dec stos sti andl jle mov mov or (bad) dec fs fidivl mov inc xchg mov scas ds ficomp jg xchg cs cmp add cmp icebp hlt pop inc adc lods pop pcmpeqw ljmp cs (bad) sarl mov movsb clc push jns jbe or push shr dec sarb or mov jmp test mov cmp pusha push leave cmpsl ret idivb test fisubr outsl repnz xchg mov imul lea sbb push adc mov push xor cmp lock mov jg out adc mov or xor push adc fbstp or jecxz (bad) cs mov mov adc push in daa lods gs aad jge cli stos mov dec mov and test clc or push xorb mov fidivrl (bad) mov xor ds lock mov jnp adc sbb addr16 xchg xor std movsl iret mov push inc mov pop mov jmp lcall or jmp push fisubl movlps add xor jb,pn mov popa push ss jg mov scas sbb in out cmp or mov jbe test out mov lret repnz stc popa lret mov mov les jns sbb adc ja fisttpll ret xchg push mov inc fild add push xor jmp add jge cmpsl add sub push xchg faddl std (bad) pop mov sbb ret sbb aas cmpsb lahf adc push push pop adc xchg pop clc insl scas xchg xlat add nop in hlt test cwtl mov movsb lret cmpsb inc push xchg dec mov adc mov jbe push clc popf out leave lea pop mov jge or pop inc jbe adc dec mov test sub jle add cltd push sbb adc xchg pop inc divl (bad) stc stc adcl or ds mov ficom rorb cli ja ret aaa or cs pop cmp pusha inc call rcrb sbb out sub addr16 xchg or ss nop mov and pushf mov push fadd nop mov or (bad) xchg test jno xor add mov jg loop push inc pusha mov cli stc pop xchg in je add div jp jle or add lret sbb and jge jbe outsb inc mov fldenv adc jbe lahf jge cmp or imul push mov (bad) jp loop arpl fidiv xchg pop movsb js mov xchg repz pusha lea jle push dec adc fisubl adc fisttp in (bad) or mov jno xor lods rorb pop mov out (bad) sub sub push lock (bad) adc dec jo sub push jp test jne mov loopne pusha or hlt aaa loopne pop pusha jp test movsl inc sbb or outsl aad loope loopne cmpsb rorl shll lods aad int orb fdivrs call cmp and or (bad) out or imul sbb pop inc xor jecxz mov mov out cmpsl mov mov out pop pop cmc in mov or aad pop mov or sbb push dec xlat pushf ljmp pop push mov jmp rolb sbb fadd subb mov cmpsb insb ss add adc in mov aad xchg sbb fnstenv lds divl and mov sub cwtl and fucomi xlat mov test (bad) xchg je dec jmp and push pop sahf rcrb mul inc sbb xor int3 jne mov repnz push cs das addl mov pop popa and cmp jl mov outsl lea idivl adc adc pop ds push push insl movsl mov je mov das bound inc out jl es rolb mov xchg lock shl dec and icebp cmp sahf or jb xor inc pop int (bad) cltd test js in data16 arpl sbb and call mov loopne mov mov push dec jmp in out adc fmull xchg xlat cltd mov push cmpsb or popf cmpsl dec out aam push into sbb (bad) mov sub (bad) in mov mov mov mov or imul inc inc (bad) mov hlt iret sbb adc adc js mov xchg mov push negb mov andl in das arpl gs xor fcmovu inc (bad) push int xor stos xchg push es adc dec movsb or pushf ret jg mov hlt sbb sub mov mov pop shlb ret sub mov rcrb cmpps pop test rcrb dec (bad) imul (bad) aaa addb cmp inc inc sahf outsb lret mov jmp mov in cmpsb daa push sub cmp jg mov fisubr jge and jecxz dec divb push mov mov jno into bound xor dec jb jo inc aad in adc (bad) add xor dec scas or fidivr insb push lods fldenv (bad) xor cmp in xor into aam lods jl mov fdivrs jecxz inc sub mov xor (bad) bound in stos pop and mov or xchg fnop imul mov mov subl cli test dec add pop bound and inc and pop xor (bad) int jae add outsl fs mull aaa inc push orb gs fs sbb nop inc insl ret fs xchg cmp pop mov (bad) test repnz mov scas loopne cmpsl jb pop mov pop and cmpsb or adc sub mov lods mov push fsubl adc mov mov mov ljmp xchg adc cwtl sub adc movsl rcrl inc cli clc cmpsb xchg adc fwait scas lea jno enter jge out in gs loop aam mov fistp mov cmc push push jl negb adc lods xor xchg (bad) test ret aaa aas jmp pop push faddl jne dec lods pop mov fmul xor adc ltr dec add out inc jmp test lahf add mov iret add mov xchg out aas jbe or push call xlat mov mov adc mov cmp adc icebp mov in inc adc push lahf dec xchg mov (bad) scas jb jecxz loopne hlt out subl adc les adc cmpb xchg inc (bad) clc (bad) bound xchg test enter (bad) aas es pop xor mov js and dec dec int3 cmpsl hlt gs sub xchg repnz repnz xchg or loop push and mov fistp or pcmpeqw adc lea pop push ds xchg add hlt jno ljmp loopne xchg sub jnp and ret add loop xor sbb push push idivb xchg fdivl in (bad) fiadd rorb fdivl jno hlt mov dec stc es push or popa int in outsl xchg cmp dec xchg sub xchg sub and int3 repnz jle xlat add (bad) ficompl mov pop in scas xchg insb mov call jbe fmuls lods mov hlt cmp loop push sub adc nop test std lea xchg push and dec pop lcall in wbinvd xor adc stos jo je outsb xor adc push or adc push mov mov push js jmp (bad) sti (bad) cmc push xchg fisub sub pop or das (bad) pop aaa xorl mov mov imul pop lcall xchg outsb mov lea ljmp lret (bad) push into in nop arpl dec push testb push inc sbb clc pop mov mov movsw insl dec imul div or outsl je jno add cmp loop inc sbb sbb jl or aas dec (bad) dec (bad) out push loope pushf pop add adc pop lock xchg xchg loop jle daa add xor pop mov daa mov push (bad) mov xor jmp sbb lret lods mov jo cld pop loope xor rorl and and jne cmc xor fidivrl jno fisubrl jae jecxz outsb cmp mov repnz iret adc lcall adc lret push mov push les xchg cld in test es fidivl sbb mov imul inc push clc sub inc outsb sub sbbl jae sahf sbb mov subl nop jecxz mov fstl (bad) mov mov lcall mov push movb out or adc call out stc add xor negb pop inc jae repz pushf ret mov jne sbbb pop and fucomp sub lcall xchg cmp sbb loop mov loope mov and out lahf jecxz ja add adc mov sbb mov dec push sahf stos or out bound xchg mov cmc xor push jnp and jae int adc mov dec xchg xchg cs inc push cmp mov lea push data16 orl add push lcallw mov adc fidivr dec mov sub sub or mov xlat fidivr mov mov ja lods jecxz int3 dec aaa imul xchg jecxz add imul cmpsb jmp inc cmp or xor lea jl jmp sahf sahf push xchg pop jb push adc clc leave add cmpsb xchg lret lret (bad) xchg mov push cmp lock inc loope scas nop add ss stos xor aaa xchg (bad) mov ret cmc dec cmpsl inc notb adc sub lds scas or pushf push dec push scas jmp jge pop scas and jns andl mov int lods pop in cmc loopne lret push cmp pop mov orb insb or cmp repz nop mov lahf xlat cmp adcb jge jp je xchg test jecxz,pt push push ds loope cwtl test mov push mov xchg push mov outsb lahf sbb les jmp outsb jne mov mov mov xchg (bad) shrl or pop push ss fbstp or xchg inc inc xchg or in mov in outsl pop and test (bad) jae or lcall out imul cli add popa jne dec iret cmp rcr dec cmp xchg sbb fidivr push xchg mov lahf iret shr inc arpl dec ljmp add xor leave cmp jo es ljmp or in and xchg cmp pop sti xor cmp and xchg jo pop inc aam adc call out inc xchg cld iret test xor adc and cmp out push mov push push and fyl2x jmp call lret dec cmpsb dec push insl mov pop hlt jge outsl es das mov mov sarl xchg hlt in or stos push adc jle rolb jne mov gs adc ret mov loope cmp cwtl idivb mov or jle jb dec xchg jbe or cmp cli sub or pushl and mov outsl repnz sbb mov jle stos out std iret inc and jmp mov push pop mov bound mov lahf aad fsubp gs movsl ja jb sub sub cwtl mov mov repz js (bad) push cmp mov sub or repz cmpsb movsb dec jbe fisttp inc repz ret aas insb pop cli out jo,pt cmp ss out test inc sbb popf cmp dec mov sbb cmp lods sub lahf inc cwtl xor in cmp xor adc add push leave fisub outsb jno xchg cmpb push ret pushf xchg xchg add icebp jo xchg push imul cwtl in (bad) adc or dec pop sub arpl xor in in mov loope pop sbb faddl fimul pop xchg (bad) xor scas pop xor sbb gs adc pop sbb pop and fs mov push adc icebp jae xor inc jns push cmp (bad) cli out xorb cmc mov in mov xor xchg inc cld pop push call setge arpl out mov inc fdivl and dec das add xor ds (bad) call or cmp pop pushl mov test push pop inc aad rorl mov fiaddl stos aas xor (bad) ljmp add jl pop mov cmp ret shrl loop push mov sub shrl fiaddl mov xchg loopne out inc dec inc or idiv test xchg enter aad rcrb in hlt mov in jno fwait mov ds int3 popa push je mov mov pop or xor xchg jae inc (bad) pop adc pop fstpl jae mov sub movsb xchg cs cld fcoml push mov sub das or push cltd enter adc jmp xor xor jge fidivrl push or sub cli push pop and adc arpl dec xchg xchg ja addr16 add aad pop pop sub dec fwait mov stos inc addr16 pop das xor mov popf jp push scas mov sbb fistp and mov popa mov push add pop adc clc sti cmp shrl loop addb iret (bad) (bad) mov push ficom jne push inc mov or jo xor jmp enter xor push inc in pop inc fmuls or inc adc inc mov fild aam pop jge aaa push cmc add sub mov cmp mov or (bad) lods dec xor sbb outsl dec cli jecxz jl cmp adc scas lea int pop outsb push dec xchg and addr16 cmp sbb jns insb inc mov dec inc inc cmp ret or sub insb lods cltd rcrl fwait and cmp xchg out (bad) gs pop pop mov fisubr fdivrs sub imul in sub adc xchg or stc loopne movsb (bad) out or das or ds aas inc jo nop scas sbb lret sbb cmpsb test loopne add adc lret dec and and push ss iret imul outsl loope scas jmp popf scas jae dec sarb jbe es xor sbb divl cmpsl jne inc xchg addb fsubrl das in in sarb test outsl out cmp cmpxchg sub and mov popaw jo (bad) dec mov jmp fldenv pop ljmp (bad) jbe addr16 imul cmpsb scas xchg imul mov jg (bad) std movsb pop outsl sub add dec cmpsl icebp dec gs pop jo scas fistp (bad) lret fistp dec stos das mov fcoms cmp scas lahf pop pop (bad) rolb std xor fild cs mov fnstenv orb fisttpll lcall add push add pop iret mov push movsl repz inc mov fwait push repz lock addr16 mov iret repnz sub lods outsb negl jbe xchg mov ljmp dec xchg int3 xchg mov cmp cli cmpsl out mov shl test in fisub clc shlb push mov insb adc pop mov xor stos mov xchg int3 push push pop outsl push pushf mov cmp or cmp pop mov sbb lea into rcr bound aad scas stc cmp (bad) and insl mov sub and push push jecxz fldl2t das hlt int3 std andl movsb push cmpl fsub pop iret sub lret fild add and mov push xchg mov mov add adc push sti lods popa ffreep push mov fucomp sbb in dec arpl (bad) shlb stc jl xchg ret jecxz push jmp mov shll mov mov in das pop cmc sbb push fdivr xor mov mov and retw fdivrl in loop xchg push out xchg xor int dec cmpsl mov jne sbb cltd or in inc add int adc sahf inc jle loope push orb hlt mov js test loopne jns ss add fistp xchg sbb popa mov cmp jns lods jecxz shlb inc dec arpl sarl jno inc les and and cmp loop mov push xor stos imul xchg stos fwait mov xor and dec imul ret adc sarl sub (bad) fsubrl cmp cwtl imul push and leave mov (bad) jbe (bad) jb mov cmpsl fidivl push std sub inc icebp popa aaa movsl pop and xchg add rcll xchg mov scas bound out inc cmp jo or insb mov or xorl mov fcmovb sub ss jne dec (bad) mov pusha adc cmc jle dec sub cmc inc (bad) mov pop pop xchg (bad) jae add mov aas push (bad) lcall mov xor mov (bad) ret out sub push mov aam jnp negl jnp sbb (bad) cld js push fsubr jge xor sub fsubr aaa cmp out rcrl ja pop and xchg dec jp xchg xlat mov or dec stos loopne inc aam sbbl mov ljmp jb adc lahf int3 add xchg lods outsl (bad) xchg and mov or jae inc pop sub fcmovnbe sub cmp shll add arpl inc je lock cmpl mov stos add icebp xor mov adc dec jns inc push nop enter adc push mov enter inc dec (bad) notb fs sbb fcmove mov ror dec icebp cli fimul dec jmp addr16 aam repz mov push xchg xchg lret xor xchg mov jecxz std addl aad pusha mov pop insl push das xor xchg mov jae add (bad) mov xorl jo jle mov loope pop xlat outsl rolb sbb rcrb in xor jnp (bad) cwtl xchg aam stos dec xchg or mov or mov arpl cmp xchg push repnz dec stos insl or sbb inc fnstenv xorl push sti cmp or or fcmovb mov cwtl mov arpl into inc dec mov adc sub add imul dec cmp daa (bad) call mov sbb push rorb jp xor adc dec pop iret sbb lods push outsl popa dec loopne mov in push addb loop shrb xchg dec adc push sbb inc es or mov insl loopne cld scas test and sbb cwtl pop cld pop pop xchg cwtl mov cwtl (bad) aaa or daa push dec xlat mov lods or insb sarl jg mov inc adc lds or mov push xchg inc dec fdivs or movnti dec mov cltd mov mov lahf adc cwtl sub inc push cli sub mov std cmpl adc adc insl and sub int3 into in xchg lcall lahf mov vmovaps add pop jge jo loopne add inc xor das lea mov cmp imul fild cmp stos mov xor xchg nop jecxz cmp int ret sub loop arpl test out ret sbbl outsb lock shlb data16 pop adc inc shll imul fisubr push aam in imul push mov cmp add fnstenv lds jg addr16 imul lds mov lock por sti sub inc adc sti mov addr16 test cmpsl mov add jbe jne out into leave daa stc cmp shlb les movl adc mov add xlat adc lock cmpsl inc lea mov sarl cltd js mulb lret ss int mov push pop push aaa mov clc adc mov (bad) xor call inc fs jo mov jbe stos dec adc orl and mov push xor inc sbb cld sub cmp (bad) sub add cmpsb lods lea faddp ret jge out mov jp xchg inc dec add cmc adc imul cmpsl rcr mov mov gs and mov sbb push and cmp mov pop sub or scas ljmp push push ja leave pop les out (bad) pusha repnz aam ljmp notl (bad) push jle push xchg gs add lds push hlt inc ret mov das repz push cld mov movsl add into dec pop fsts rcrl xor ficomp stos mov rolb pop (bad) call addr16 fildll cmp cltd jo bound fist mov sarb or daa lock sarb or daa lock sarb or daa lock sar cmp aam fnstcw add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push inc sbb xchg in gs mov push (bad) mov (bad) xor dec jbe (bad) leave mov fstpt das loope call enter rorb xor or xlat mov outsl lcall xlat lock adc xchg jg xor or arpl adc pop sub aad jp lock in es jecxz jecxz push add add shlb xor jmp in jno inc push mov adc xor jmp inc out adc mov jge in adc and mov adc out inc lock outsb enter inc xor add inc out fisubr and and or cltd ljmp subb xchg xorb mov mov js fucomp pushf enter out aam pop cld mov sbb test icebp xlat dec mov stos mov movsl add xlat jle jno xchg fisubrl inc shlb pop inc leave push adc push sti push loopne cmpsl lock (bad) repz xor jle push add add or icebp (bad) or rcrb js pushl es pop mov mov inc int adc int push push ljmp lahf mov int popa dec mov mov or push cmp (bad) enter cs out test mov ss sub adc bsf rcr ss imul push or scas mov in sahf mov mov mov inc mov jb test or (bad) pop pop lret cmp sub cmp cmp addl (bad) jle hlt pop cwtl imul pushf out cmp mov testl push mov xchg cmpsb or adc or xor dec mov loope int xchg push pushf adc lret push push shrl jbe sbb fcmovnu dec or (bad) add inc mov inc mov or jo push add cmp lahf mov lock fisubrl sbb or jmp je xor lcall adc lea cmp divl add div lds mov dec xchg push gs push and or xchg jl test lret repz fcoml sarb mov test jg push cmp sub pop (bad) cmpl cmc pop fiaddl es inc mov dec (bad) dec inc int sbb push fwait xor addr16 stc jecxz mov test push dec push repz dec xchg sbb pop icebp inc icebp fs push jo imul dec rcrb jbe lock addr16 aam bnd mov inc lret mul pop shrl mov fcompl icebp ficom hlt cmp xor sub sbb test fwait adc test addb out mov fidivr cmp movsb loop push mov cli xchg inc ss cwtl daa (bad) cmp out dec rcll mov mov cmp pop mov imul push gs data16 sub inc clc mov mov xchg in push add fwait cltd leave adc mov mov sub sbb and or pop ja call xchg xchg mov andb cmp into xchg scas pop test pop out fistl jo jae cld data16 push sti fimull sarl jle out sub bnd xchg iret mov mov test mov loope push sbbl mov cmp sbb arpl jbe test movsl mov cmp movl push lret test jge jno xor pop inc imul (bad) jle adc jle test test jne and rorb dec aam je pop add (bad) test dec push fwait xchg or in sarb imul push xchg and push xchg sbb fstpt iret sarl mov xor jb adc out in cmp cmp hlt cmp imul lock xor (bad) mov pop xchg fs mov aad arpl pop insb jp dec inc mov nop popa popa push push repnz lea sub mov dec test adc jns add lcall imul xchg test dec jb out cmp loope popa notl push mov sub jb lods mov ficomp xchg leave jne mov mov shll jb mov lahf in dec test adc mov fsubrs sub ljmp insb sub call add dec mov repz stos cwtl add jl stc movsl add mov imul inc jnp mov lods jge mov cltd aas hlt mov dec popf lcall push imul pop adc dec xchg andl leave sbb popf push pop push fdivrs iret xor inc mov ret add in lock test xchg jae add pop fucompp fidiv push shrb (bad) popf xchg sub mov dec icebp mov lds rcl stc sub mov mov push ds adc testl pop cwtl sbb xchg imul push sbb (bad) je scas cmpsb fs mov mov jmp xchg leave pusha and lods cltd mov cmp shr out jae cwtl icebp cmp ljmp aam jecxz or push dec mov xor mov sub mov stc inc mov push sbb pop iret jecxz imul repnz stos jae xchg (bad) adc jno mov stos fidivl fildl call add adc mov push imulb dec or je and inc adc jb cs adc jne sbb mov std pop mov jno xchg pop dec push pop repz gs stc sbbl xchg dec je sub push addr16 into (bad) cmc xor iret (bad) hlt roll stos js push inc xchg jo jne xchg (bad) mov lods or dec test loop cmc dec notb dec in leave or sub scas aad cmpsb lret fdivr mov pop pop mov push fs dec mov popa in xor adc lods mov pop pop cmp sub xchg mov pop mov fisttpl sti jno inc addr16 and out out aaa test js jg in shrb cld mov cmp and cs jae push mov ret sbb sbb jmp nop fisub loopne xor push ret or dec xor in push mov dec cmp aad pop mov int insb cmp add in dec pop dec pop jns push sbb imul (bad) mov test sub dec jb and out and dec sub jp (bad) stos cmp xchg mov sub mov or or scas push ds inc dec push lret xchg push xor pop outsl mov std and inc mov dec das adc stos push jg and mov or xor mov or xchg fadds xchg push xor mov int cmpsb add sub and mov scas or adc xchg mov arpl loop jae pop gs or adc mov mov or push rcll inc adc (bad) or mov shll enter hlt xor xchg fisubrl js stos rorl int3 rorb ja aam mov mov jb icebp subb arpl (bad) iret leave jo lea jl and movsl fcos jbe pushf imul jbe fldl fisubrl lret rol lret loopne xor cmp xchg adc dec or in leave int ret inc fwait dec movsl cld dec xchg push push push mov mov lahf push fdivl jmp mov stos push xchg sbb xchg xor or add jl jg jl dec scas popf xor add jmp adc push push lret shl inc inc fimul cmp lea or sub lea inc mov popf cmp cs je loop (bad) in xor push jp ja inc inc push dec or mov push call repz sub test cld je (bad) mov push sti pop cs and push cs mov lea pop xor inc das stc ret imull ss lods pop jp loop push cwtl jmp loope lods xchg mov jo sbb xor or scas (bad) daa shrb push lds or notl iret pop test and ss int incl mov and (bad) dec sbb cwtl loope mov mov mov icebp addr16 mov sbb std loope fmul add ja ss pop and xchg data16 sbb jno mov dec pop hlt mov jne adc jne sar pop and je or pop adc pusha or lock cmpsl insl (bad) call popa hlt ds mov addr16 push incl push add sub loope scas pop (bad) into xor sbb lock out add testb into sub loop inc push test sub negl sbb stc mov add xchg repz movsb xor pop adc std xchg adc mov test mov mov dec and adc jno mov mov fldt jns,pt pop mov jne jne (bad) stos fbld xchg push and xor mov cmp mov lds sti sub sub cmc cmp mov add cmp push ja xor xchg lods divb outsb jae lahf push jmp cmp sar popf dec sub mov movsl in inc adc pop scas ljmp fbstp fldcw mov gs (bad) mov mov xor dec test sbb sub mov in dec out adc ds in inc jns xorl loopne mov sbb mov test cmc cmp xor mov in es aam sahf rcll mov add movsl xor or mov fcmovne sbb int mov insl xchg mov outsb add jo dec in in push shll add jp int sbb dec mov mov loop cmp inc popf and stc aad lcall ror les or (bad) into test (bad) dec in daa jb fisub xor dec dec or call out fildll out mov cmp pop rorb jns aad dec test jo add into or loopne int3 or loop sbb ljmp mov mull shl lahf jg (bad) icebp pop (bad) in pop dec sbb fcoms out out bound idivb inc pop ljmp xchg and and (bad) dec adc out xchg pop iret pop (bad) (bad) mov fldl jnp jl and cmp inc and (bad) inc jmp orb inc sub (bad) fsub jae cli inc shrb out fwait mov mov lods cmp or mov into ret xchg xchg push adc rorl xor jb lret mov insl push jmp fstps testb xchg jp fs xchg cmp popa inc sahf scas or jno cmp adc aaa inc lret cmc inc and sub push enter mov xchg andb mov mov jnp push clc xchg push xorl ds push flds and jmp ds les aad and xchg insl cmp and out flds lods mov xlat jae push lahf push bswap sbb inc dec fwait repz mov or sbb out xor inc lea mov std cmp and sbb jo fdivrl out mov mov mov xchg leave lahf lds jmp enter test jecxz jns jmp sbb (bad) lret xor xor push push xchg fsubr shrb push roll arpl and mov iret insb dec aam sub aad fucomip adc gs sub mov sti pushf sub cmpsb xor mov dec (bad) sub cmp cmp idivb jmp in push mov jmp jl xor es lahf dec sub cli outsl into sub js or mov ret sub push lea in or jbe mov xchg inc fcmovnb mov out push push inc xorb cwtl sub out xchg test (bad) adc sub sub inc fcoms jne and hlt push inc push ret fucomp sahf insb stos mov lds dec add pop xchg jo popa ljmp sbb mov cmp inc (bad) push add imul or xchg insl fs pop add cmp inc jo pop and xor push ficoml adc or sbb and push sbb in imulb sbb lahf jge dec xchg pop stos push shlb push pop iret push pushf jl leave sbb add popl test int (bad) push pop popf cmpsl cmp orl inc iret jnp das ret mov dec dec scas leave sub lahf mov pusha fdivrl push jp jle mov loope cmpsb mov fmuls mov ret pop aaa ror pop cmpsb jno xor addr16 inc cmp call arpl jnp cmp arpl scas and test sub inc in pusha xor fdivrs mov movsl or cwtl arpl out (bad) in out jne mull out call mov insl jecxz mov mov sub pop jle int3 js add fildll jb mov pop sbb dec and push push repz mov mov mov mov sbb insl adc mov fcmovu or pop mov inc ljmp clc rcrl inc sbb cmc (bad) movsl mov loop fsubrl je (bad) jecxz adc sub jp and xchg inc and mov mov cmp xchg pop scas fistpl dec xlat or dec lods scas fwait mov push rcrb ror repz das leave and sub lret lahf pop cld loopne and push xchg lods lea aaa roll push adc aas ljmp jge pop xchg dec mov fimull inc mov js mov xor incb jne sub xor in push sbb rcll adc test fldl push insb shl xchg shlb cld movsb movsl push enter inc arpl adc addl lods int les add addl dec ljmp sub lcall cmc rolb pop cwtl ja ja adc lods mov push xchg jne push mov dec pop out or insb (bad) dec faddl pop (bad) sub loopne or cmpsb xorl out into cmp dec push fwait or push gs movsb push sahf dec xchg lds (bad) scas mov lea sub lods (bad) je and mov inc (bad) (bad) fsubrl inc xlat inc lret mov int xchg pop jl fadds cmp fs mov movsl imul test into sbb fsubrs jae stos test xchg adc push cmp jmp xchg lock movsb push cmp inc ja jmp out jo jne cmp pushw mov mov scas (bad) ja mov inc scas mov adc inc nop insl adc cmp push mov adc loope jmp mov lods in xchg paddw std movsl nop adc lcall xchg cmpsl mov cmp (bad) xor inc cmpsb adc leave jecxz mov dec inc imul inc je push pop mov inc out mov fimul loopne popa subl enter out ljmp ret dec sbb pop fwait xchg pop xchg mov xor push xor xchg lret in lahf xlat les repz lods and xchg jp pop call and push mov icebp mov mov cld cmp push jmp and pop adc outsl fisubrl mov lret lret pop sub push fdivrs (bad) pop sbb lret xor mov xor jge lcall dec dec adc mov cmc sub sarb orl add or xor dec push test in jae xor in pop rclb lret insb sbb lods cltd lock test nop fstl lret xor adc cmp int3 mov cmp clc mov cld fs sbb decb iret addr16 dec rcll cmp add lods jb cmp mov into xor in dec cmc dec enter clc ret stos pushf mov cmpsl js push or xchg sbb lock out push inc lret fldl push dec cwtl jge fcomi int3 xchg or mov aad lcall pusha adc clc jns mov jl cmp mov mov xchg es xchg enter cmp fwait arpl mov xchg div xchg mov xchg inc sbb lods clc popf and inc js lock int3 out lods aas dec adcb ret cmpsb lds dec imul jne data16 (bad) aad adc dec dec dec in loop mov lds pop add std repz pusha dec or ljmp sarb pop jl icebp xlat sub lret xor push repz (bad) jecxz pop sub into test mov ret sti sub xor gs cmp int3 pop dec push mov add insb adc insb or ds sub push (bad) sti test sub mov inc mov mov jge adc pusha sub cmpsb aad sub test mov les iret mov xchg jae add push push hlt xlat je xchg jns cmc pop jmp jno aas jb inc rcrb (bad) mov scas sub mov mov xor mov sbb outsl pusha notl orl lahf and xchg (bad) cwtl push inc add leave ret int3 xchg or (bad) cmp sub pop (bad) and cmpsb sarb dec xchg ret sbb push test arpl adc push jbe lods jp lret clc mov mov xchg inc mov xor (bad) insb push inc in sti fs test (bad) adc cwtl (bad) out mov inc or mov out call mov outsb addr16 cmpl inc cmp jno jle push repz dec out xchg xchg mov lea xchg mov pop sti push mov pop inc repz mov and out mov in ret xchg cli pop ret popf scas xlat cmp sbb pop lods jge icebp adc flds out dec das pop mov lea pop (bad) push enter mov nop add ds jle push fistl xchg pop in jl inc in mov pop inc xchg stc out aam fadds adc and mov push fstl xor cmc out sub ret pop das or aaa and and mov test cmp sub adc mov ret (bad) mov fmuls into push sbb inc (bad) mov ret (bad) push roll adc es pop mov fidivr inc cmp movsl (bad) fldenv sub stc addb bound and pop (bad) xchg leave je xchg mov data16 pop push push sub or loop push push and lret loope jbe mov sbb cmc mov push decb mov fdivl (bad) cld jae pusha push mov rcll enter adc dec push jmp xor (bad) ficom and inc xor add jnp aas and inc sub lahf lahf or jle xorl cld sbb insb stc jge mov mov pop sub inc push ljmp xor cmc mov fcoms xchg xchg push and stos les gs nop loopne or xchg cmp lret orl aaa lods pop test ds ds add mov (bad) mov push push xchg or outsb sub rorl mov sarb jmp xor adc xchg xchg fldcw xchg push pop and in push out adc jl push mov je pop loopne ljmp xchg sbb push pop xor pop mov dec sbb or dec vpackuswb mov sub jno pop lods int mov mov std xchg dec pop (bad) movsb in (bad) mov jnp and sbb or mov pop cmp sti (bad) adc adc dec cmp fsubrl or cltd jecxz ret mov adc adcb in arpl xchg fnop dec add stc stos cli inc std repnz add into dec cmp fsub (bad) jns imul push inc and cmp test int3 xchg rorb sub and sub jg cmp insb inc sahf or leave xchg ds movsl jecxz lds xchg ljmp and test or push sub push popa xchg loope and ffree pusha push out or inc sub pop enter jae arpl stos xchg lds pop mov ret xorb mov or lea icebp inc repz ljmp out sub inc sti lret jle adc xchg or cmp adc jmp loop repz inc popf cwtl and fwait pop dec pop xlat enter push push and cs scas mov subl insb sbb mov inc jae mov jbe fwait sub fs jbe das (bad) in divb loope xchg pop mov fcmovu cs cmpsb cmp sub and test xchg js in mov setnp add xchg pop mov cs loopne dec xchg mov add std rorl ss andl pop pop jns sub dec addr16 popf cmp xchg mov addr16 cltd sbb pop adc out stos push lea mov push xor mov lret ss lahf lahf imul ret ficoml mov xchg (bad) insl cltd pop icebp jl ds popa lods mov mull mov (bad) sub bnd imul (bad) shlb jns aam fcoms add sarb in add pop cmp mov add or jno nop nop xchg inc outsl pop sbb push xchg outsb in pop inc mov or xor lea es mov push mov ds xchg jmpw (bad) pop arpl or or add pop inc add setnp dec xchg notl jne aad adc bound sbb and leave pop aad sbb (bad) lret mov mulb sub or stos or dec cmp inc test push (bad) mov xchg mov jae xor add push cmp pop es inc push cmp sti (bad) mov jb scas sbb xchg popa cwtl and jle out pop and das sbbb mov out nop out stc repz test add into mov mov jne inc jnp sub push pop in hlt das bnd shlb sbb insl subps jns jns mov cmp shrb mov in xorl cmpsl ljmp ret dec sub inc faddl add jbe and xor ja data16 xchg push sbb sahf mov xor mov sbb sbb icebp sbb pop jmp xchg cmp sub popa xchg lods pushf pop test add cmpsb mov sbb (bad) xchg sub mov icebp mov (bad) mov insl dec and pop sub mov adc ds dec loopne bound js vshufps fdivr or loop cld push inc sbb test fsubl pmulhuw popf js repz xchg adc mov inc and mov sub pop xor xor xor sub mov mov or inc int3 int andb sbb add mov push je test gs fisttpll push push jo vhaddps repnz jmp or dec js mov add sbb mov push adc jg (bad) repnz in scas mov aam addr16 jl out and jmp in xchg and stc les fist adcl inc add push in ja int3 cltd xor (bad) notb out jb daa cmp negb mov int3 pop (bad) xor fidiv xchg (bad) cltd inc cmp test xchg push xor jns xchg jle rcrb rolb in push mov push cmp sbb mov gs adc jnp outsb or mov push add xchg lcall jns dec add lods mov pop dec out lds push xlat dec mov into outsl dec sbb push rcrl and xchg lahf pop out sub shrl leave mulb jb enter nop shrb cmp xchg ficompl loopne lret lock dec scas add dec jb jg add inc xor pushf mov (bad) das adc outsl decl cld daa lock sarb or daa lock sarb or daa lock sarb or daa lock incl and mov sbb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add hlt and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push inc sbb xchg xchg int in gs daa fistpl pop cmp lret popf insb fistpl mov mov fdivl fdivrl pop (bad) mov add mov dec pop cltd mov mov iret imul sar (bad) repz mov mov adc test mov ret rorb sti xchg repz dec sub xor (bad) scas test mov sub lret push mov arpl jp and (bad) and jae pop cwtl (bad) bound fist xor nop xchg leave loopne addl popf lods into hlt sbb aaa push dec xor push mov fnop lret rorb dec inc fildl pushl add sub mov adc mov gs sub fcoms sahf jle gs jl in stc ja test mov mov shrl jbe cmp (bad) mov es inc bnd add sbb or mov push repz mov cmp clc add mov fmul cmp insb fisubl jae mov mov push scas subl lcall pop mov sti in sahf aaa mov rcr mov cwtl push push sahf inc in lea mov push lock xlat and std stos push push das cmp ds test outsl cld push xchg imul adc sbbl push and out movsl lods sub jecxz add test outsb pop cmc dec inc add data16 (bad) jmp jle lcall ljmp data16 sub and push xor shlb xor mov dec add stc insb shrb inc cmp in push add call iret xor adcl lock xor in adc (bad) xor sub mov add or mov fistl xchg mov es pop daa lcall mov dec or fsqrt xor jnp lods loop mov jmp push mov icebp pushf mov subl mov xchg mov xlat (bad) loope (bad) pop adc mov insb lret mov mov and xlat fiaddl popa aaa lock in out addr16 cmp ja inc aaa push test jl or cmp (bad) cmc jmp jmp fxch push addl adc cwtl sbb push xor xchg loop mov (bad) jb gs cmp in add int lret sahf sbb into fisubrl push mov incl xor inc mov clc (bad) mov idivb adc pop xor dec pushf pop sub lock cmc adc adc or addr16 int3 or and sti xor shlb js lock popa jns push inc rcr out mov ds mov psubb sub cmp xor pushf mov push sub dec fadd mov inc mov movl psraw push aas and push or out mov cmp ficompl inc jg aam xchg adc or mov loopne pop jae and (bad) divl movsb push mov jno (bad) cld leave ficompl cli lea cld push xchg mov dec pop sub sub jnp repz mov mov or pop push and pop int3 call cmp les fdiv sub jecxz xchg addr16 call sbb mov fs push dec shl (bad) enter hlt je add mov dec mov mov fnstsw push add fcomi enter enter dec xor jle sub aam scas inc (bad) xchg pmulhuw sbb imul das hlt aad shlb (bad) and push ficompl pop sub js outsl dec push stos pop adc lahf call push cmpl mov rolb push popa inc pop jg (bad) fs push jmp mov imul mov adc push dec (bad) xlat ds rorl rcr mov fdivp jns and or jbe out lahf leave and push aam jne das mov push fldenv ja push push inc xor adc dec test cmp movsb push ret icebp xor mov aam iret outsb loop sbb mov dec sbb pop pop mov arpl fwait ljmp xor rclb add mov (bad) lret (bad) mov stos jae xchg sub fdivrl into push push jmp dec lods out pop jle dec dec out sbb into or outsl (bad) out arpl or jns and push in push xor fldl ljmp dec and aad out addb lahf jge sub pop cli cmp into cld mov jecxz repz xor adc jbe pop test out xchg xor and mov cmp fsts push pushf test frstor and clc icebp dec pop and leave jle (bad) push dec movsl cmp xchg orl clc lods push mov mov (bad) sub fisub jns and repz sti dec into (bad) mov push (bad) out (bad) and mov mov (bad) dec jbe or ljmp xor les dec aaa enter addr16 xchg stos sbb je (bad) mov mulb add push int3 mov addr16 lds dec add std test in xchg or js sub loope mov popf push idivb inc rcll test adc stc mov push or (bad) jno ror pop fidiv inc and mov lds jb adc dec aam in or imul cli pop pop adc add xchg mov pop aas aam inc movsl sub or push mov ficoml pushl inc loopne insl push or iret rclb pop into sub es (bad) mov cli mov add iret sti cld dec jae popf mov add xor xchg outsl in jle sbb lods xor xor mov mov xchg dec jno imul jne pop lock mov addl (bad) dec daa dec push push insb icebp pop adc mov cwtl movsb and (bad) or sub fisubr stc imul push fdivr out mov leave in ss scas repz in jb mov mov lret outsl out dec outsl out sub xchg shl shrl or push and inc dec mov (bad) outsb jae jp or xchg cld and pop pop lds mov arpl in imul push lods xchg gs loop cmp cmp jp stc push lret push push imul lods pop (bad) cwtd inc mov pop xor xor inc and pop and mov and pushf or push popa ret mov sbb push adc mov mov je jne repz ljmp hlt testb stc in lret in xchg xchg outsb cmpsl into stc aam push jge aad push xchg movsb je and lds inc test dec (bad) jae lds xor loope mov fwait mov gs hlt add dec arpl lds mov fs fildll sbb test push iret fsts hlt xchg and outsb and inc add icebp mov cwtl push lret aaa push mov push cld xor inc inc or lods or xchg jb (bad) je pop std ds iret iret cmp sub cmpb inc xor aas push dec rclb or repz xor or mov pop lahf in lcall push lds xor inc test (bad) mov sahf fstp in popa pop inc jmp jg stos adc int and xor cld idivb out ss mov mov mov sbb addl mov in daa test xor add iret adc pushf adc lcall out clc test push jmp push sub hlt rclb xor jle bound into jle add push std pushf mov inc xor test cld mov jne into jge push nop (bad) xor std push xchg fcoms int3 leave mov loope (bad) frstor enter sahf and leave fsubs mov inc push insb push mov ss push mov adcl lcall insb mov or push push imul das repz push lcall add adc lret mov cld aad mov add in je sbb cli out pop repnz lods inc cmc enter dec mov test inc mov cmp xor (bad) push sbb inc mov repnz sbb pushf xchg dec cmp int outsb jl mov aam jge adc push fsubs lods in dec jbe sahf sbb and (bad) je outsb or rorb mov daa fdivrl (bad) mov and imul xchg sbb int3 mov xchg jp mov sahf lahf ficom adc test call mov or mov dec push sub js aad jg xchg push push (bad) jo shll in mov mov rcll out adc fimull or shlb mov push fisubrl xor pop adc fnsave pop or dec jae jge mov inc xchg push mov jno mov pop jnp mov jbe notl in fcoml fild cmp jns pop nop das fiaddl imul add mov (bad) popf lret ss data16 lret (bad) not insb or addb insl push push xchg in dec (bad) outsl dec and mov dec das xor jb (bad) inc push bound lds mov dec inc cmpl inc bound test xchg sbb test sti sarl (bad) lea sbb daa imul jmp or inc mov sbb sbb lock lret int loope xor jge shrl stos cli idivb mov pop xchg pop std popf lret sub rcll sbb popf mov je test jno addr16 inc sahf outsb ja mov fnstcw mov and stc jbe cwtl sub in push (bad) popa and icebp fs mov mov cli sub leave mov and xor mov or lret sub pop hlt in repz leave mov mov jns lds cmp pop lds into cmp jl jge add (bad) es mov push add shrb ds repnz and popa xlat int test test add std mov sbbl cmpsb push cmc jb mov mov cmp insb dec or mov xor insl addr16 insl add (bad) mov cmp jmp mov push cmp add push insl or out inc lods mov xchg jo pop (bad) pop mov jo,pn cmp jnp dec nop cs jle and sbb inc xchg adc pop out and mov negb pop fcmovb dec sub cmpsl sarl outsl sub mull mov dec mov stos (bad) outsl mov jmp in add lret dec push stos imul and jl adc sti (bad) lock adc push out pop xchg add mov push (bad) xlat je push adc fdivl testb sbb add push les mov les bound mov xor ss adc cwtl mov fcmovnbe push pop or and xchg xor cwtl cmp jecxz or mov stc (bad) pushf mov cltd rolb rol mov and sub call arpl sbb aad sysret or clc testl (bad) fsubrl or data16 sub dec xchg mul adc scas call lock push mov dec push push in dec xor lea lret lds mov clc scas mov sbb sbb sarb add or and scas mov jle sbb in lea sbb int loopne xchg or mov jnp xchg cld and xchg sti or inc imul mov push mov and iret cld ds and pop in push repnz mov jmp rcrl jp (bad) mov and pop cld mov movsb mov stc pop sarb push xor in xchg xorb and mov das sbb cmp pushf add loope ljmp push push mov push (bad) dec fs je cwtl data16 jns sbb push movsb adc mov into and xor cld bound lds xchg xchg dec lret test and aam loop push aas cmp (bad) aam inc mov mov test xchg xchg jg hlt je gs cmpsl jg xchg jl flds test fs repz je add aad adc lock icebp clc nop lahf cltd jae test dec jno push mov repnz pop (bad) sbb mov loopne mov mov cmp fisttpll mov adc add cmpsl mov cmpsl mov mov add xor add ss lret push (bad) repnz bnd fwait adcl pop (bad) imul mov inc or or cmp cmpsl fidivrl cmpsb push sbb dec mov xchg xor call gs jp mov repnz pop out inc and sub mov pop dec es fisttpl push icebp mov jns cmc sub cwtl je sub pop hlt stc mov lock loopne fldcw mov mov aas inc mov jnp mov push fwait jbe and and push cmp lret (bad) cmp push or jb mov push jbe mov push rorl add stos das maxps adc mov xchg jo xchg (bad) xor loopne mov lcall (bad) pop xor leave adc jnp mov daa imul ret sbb mov jmp add xchg enter push push inc push sti loope lds or (bad) ret aad outsl pop cmp xchg fcmove add pop jbe cltd cmp or jo pop addl sti rcrl and out xchg faddl cltd cmp mov add xchg lahf pop lahf lahf ret ret (bad) scas mov inc sbb flds pop add pop hlt pop ret inc fyl2xp1 lret or les ficompl push inc rorb dec ja outsl imul pop dec ret arpl mov push push sbb xchg mov pop mov lods xor mov push cmp sbb in add or rcll add dec (bad) cmp add cmp mov push fmull nop imul mov sub and mov movsl cmc jl ror add inc push sahf lahf sub in add loop ret setbe (bad) pop mov jnp xlat bound test jns addl int mov lea test iret adc pop sbb fdivrs (bad) testb lcall cmp mov aas bound sub mov ljmp adc inc shrb mov insb pop mov push lcall pushf cmc jecxz (bad) dec mov fdivs dec loop pop das in pop push and pop fisttpll insl out (bad) jmp mov xchg adc cmp mov push scas cmc mov mov pop cltd daa xor mov (bad) imul mov gs push mov adc push lret inc out xor clc pushf pop hlt jp js imul dec cmp mov shr testb pop ss mov ss adc mov push (bad) or cs test lahf xchg dec mov pop and jp decb mov out jae xchg jo aas (bad) fistpl mov lret lods xchg shl subl mov icebp hlt mov scas adc ljmp mov mov and daa adc fldln2 out es xchg nop mov (bad) movsl adc or xor mov adc aaa pop es sub gs pop inc imul test mov fistpll or sbb mov das fcompl (bad) ja jne test je mov stc outsl (bad) pop hlt mov test scas scas (bad) popa jo cmpsb add or adc repz or pop jbe dec stc sbb in cwtl sub and sub sbb xor stos push fist lahf dec fst jo out pop mov mov mov jbe nop sub mov sbb aad jnp push js mov dec mov stos sti loop (bad) add mov fistpll jne sbb push fcmovnu dec mov movsb mov or cltd sbb lods push cmp jp test das push pop cmp fisttpl xchg outsl mov xor and loopne push and jmpw cmpsb ret bound inc mov outsl lahf jbe xchg jne adc mov adc adc pop jecxz clc mov fwait (bad) outsb adc daa cmp popf (bad) (bad) mov pop jno mov push mov dec imul aas mov aad jp pusha pop dec lret mov stc pushf or rolb jg (bad) shrb fmulp push daa pop xchg into add cs repz dec icebp in push jg (bad) pop lea pop test ljmp dec (bad) notb add test lock mov aaa cwtl jnp and stos movsb xlat sub jbe jnp inc insl jl test xor repz ret inc xlat repz pop rcrl inc inc icebp (bad) or cmp lock dec add dec mov fwait fs shl fldenv repz aas (bad) inc xchg push into jb mov test mov xchg sbb into jae mov jnp mov adc or or nop pop inc jnp fs loope inc jne jmp data16 mulps test push jae div pop cmp inc rcr arpl pop mov rolb bound inc fs sbb aad add icebp pushf inc sub (bad) xor mov fcoml cmp imul pop jae adc adc jge or (bad) clc loope mov test xchg pop data16 dec out popf sub push jecxz mov dec mov sti mov loope mov inc mov mov les xchg insl rcll or js jle lret (bad) lcall mov aas sbbl mov jmp cmp jno scas jp (bad) cmc gs ret pushf repz inc and push stos in in jns lods dec cmp (bad) movsl mov pop mov add inc jae aaa in xor fs push mov jbe pop pop aam pusha push outsl call and les in jne sub popl jno xor mov mov mov push (bad) inc aam loopne (bad) push mov fstl (bad) movsb xchg int3 or push gs and add jbe dec adc mov int3 pusha push (bad) mov mov movsb aad push adc xor dec std cmc ret loop lods aad mov mov cmpsl ds inc (bad) jge jae into xorl mov aas jle daa and sub test mov rolb es js ja rcrl bound imul jbe rcrl push clc cli push mov pop call repnz hlt xchg push out mov int pop outsl fs ljmp clc clc mov jp jno cmpsb push test loope out or pop pushl (bad) pop in cmp outsl mov fstpl ds les xor xchg fs mov lds sbb rcr fdivrs inc outsl mov (bad) aam pushf outsl scas in std dec (bad) stos jne mov dec repz dec outsb stos cmpsl push mov add lds jmp es dec mov daa dec aad inc xor xchg (bad) cld lcall jb hlt arpl jecxz ret mov jg das cmp sahf lret std scas xor and mov ret jno mov cli add daa jge mov add mov ss mov (bad) jnp jecxz mov xor dec adcl leave repnz cmp (bad) jnp mov push mov adc out add or outsl movsl das pusha fistpll push movsl jmp xor cmp popf mov cmp xchg stos out inc xor insl pop xor mov jle add add sarl xchg push imulb test stos divb push mov sub add sbb into push insb and and lods inc mov jae pop mov jle jecxz int mov push (bad) mov dec call adc mov sbb fmull inc fsubp lcall int nop xchg adc xchg (bad) repz sbb jmp xchg pushf fimull imul push adc inc mov adc mov and jnp push test mov jns gs xchg gs movsb pushf jmp mov hlt xor ficomp xlat cld movsl into lahf xor fist cmp inc jbe cmp lods xor ret or or or mov aad out jle pop mov cmp sub inc bound pop pop cs mov scas cmp pop adc dec dec sub inc lea outsl push and lock (bad) int3 fstl mov (bad) sar hlt sub notb push lret jbe jge gs lock xor pop sbb add subb (bad) dec add add cmp mov mov test fucom jle stos (bad) int3 cmp loopne bnd mov movl imul dec int3 xor inc stos pop adc lods int3 sti dec sbb xor lcall pop push push push mov push adc scas pop pop pop das scas push jbe and int3 ss pop cmp or cmpsb fwait or xor and mov scas dec pop dec aas imulb pop pop fistpll js sbb or stc fstl push test out call mov xor or push cmpsb cmp add jp xchg test in sub int3 or cmp inc mov sub aad in add notb jmp sub aas sarl ret scas nop (bad) loopne mov testb adc add xor das outsl pop pop mov push jno gs xchg mov sub lock test mov xchg scas xchg dec dec aaa mov mov sbb pop test fidiv xchg leave testl lret negl cmc pop push adc stos mov mov lret pop jne les mov dec inc repz cmp and insl sub xchg xor ds sarl mov orl xchg jne lea mov and out push or ja lock mov jo lret cwtl std add aam insb cmc in imul aaa int3 sub push jno xchg jg popf movsb push xor pusha das loopne (bad) ret mov adc fbld mov push loop and cmp insb aad xor mov cmp aam bound mov clc jbe orb inc fcomps push sbb inc push dec cmp fsubl xlat sahf add lret orl aas fcompl cmpsb dec rcrb pusha stc inc push arpl in je sub xchg in dec pop movsl xchg xchg ret push mov insl js popf cmp pop push cmp adc mov insl mov icebp out lds xchg je jae ret fs out cmp adc inc jl mov sbb scas mov xor or add sbb jns stos jmp mov cwtl fmull dec and sbb xchg daa mov mov jne jae les (bad) pop cmp push mov in outsl test mov sti jne add dec cmpsb sbb addr16 imul xor mov jns outsb cmp roll xor jp pmulhw loop pushf adc out push add cmp jecxz or movsb push xchg fbstp (bad) mov add adc mov sbb jge insb mov fcompl mov ds xor adc mov cmp xchg push enter and addl push inc push data16 push addr16 adc or loope jp xchg push add jnp aam mov lret sub fnstenv add pop clc ss shlb jle jne call jb push dec repz call neg test cltd xchg lock rclb enter ret jmp xchg iret ja mov cld cld in fs dec cmp enter sbb push stc mov aam cltd test test adc pop mov movsb mov test sti mov pushf adc jb lea cmp test aad js rcrl test lcall mov pop bound cmp sbb push xor leave jbe inc fcoml insb add sub (bad) xchg or mov add adc dec loopne cmp dec loopne cmp dec loopne cmp jmp lock adc mov xor fildl add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add clc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov lea inc push push push and xchg imul jb insb mov (bad) imul dec mov insb imul xor jg test fisubrl pop sbb and mov dec push lods add xor and outsb inc mov or lahf shr dec jecxz jle mov sub pop jle in fistl cld aad fmul jo push sbb cmp (bad) ds inc pop jecxz mov lret push imul mov xor inc dec cmp push or js ss bound cmpsl out mov push into (bad) sub pop repnz insl cmp shrl pop cmp push ds ljmp sub daa push and adc cld fwait mov ds cmp outsl adc call xor sub movsb pop sbbl mov outsl jle xor test daa lods dec push jbe (bad) in xchg dec jmp insl sub xchg push sti daa mov data16 arpl inc xor int or jne dec fldl std data16 push repnz insb push das or mov fs push cmp daa mov sbb out jb (bad) aaa fsubl sub jp loope or (bad) sub push dec push pxor xor mov mov hlt push xor or mov push lahf addl imul push xchg ret mov adc mov sbbl fld push pop repz push jo fbld xchg mov insb call popl lcall shll lcall mov and into cld sub add push jg ja int3 dec in push shl cmp hlt adc sub roll std fdiv fxch ss cmp in pop jb inc mov xchg daa mov ss pop sbbl repnz push add mov add popa jns dec mov (bad) mov pop call pop dec enter push xchg daa repz push push push lock mov mov push outsl loop pop cli daa enter data16 cmp jle xchg or mov popa cwtl push icebp inc pop subb mov enter mov sbb sub sub std mov scas sbb inc out pop sub (bad) mov call shrb sub sti mov jo mov jne (bad) pop mov icebp add std adc xor fisttpll movsl ja sbb sti dec (bad) cmc pop ss mov cwtl test mov pop outsb movsl mov add shl insl sub lea pop lret rclb push pop mov (bad) jl lods xchg outsl mov stos pop mov xchg inc inc xchg int or int3 pop mov cmc lock into dec cli adc (bad) jb cmc daa sub icebp xchg mov cltd cwtl data16 pop dec aas xchg (bad) test dec test cmp int mov xchg cs shll int3 ret inc inc (bad) jne popa push mov dec js outsb imull jmp mov or insl testl jge or nop mov pop stc push xchg pusha jmp vcvtpd2dqy subb mov xchg inc xchg fwait sbb movsb outsb mov (bad) jp into sbb lret cmpsb sbb or xor or xchg pop in adc dec pop arpl push (bad) in fcompl int fnstcw xchg scas mov add jmp xor push das xor enter nop pop xchg test fdivrl test jae cs out mov (bad) mov rorb (bad) sbb repnz roll add jle add addr16 jg push shr in cmp rcrl or push sbb sbb mov in xor pop scas cmpsb out push cwtl push adc mov sub fildll out cmp ffreep (bad) mov cmpsl pop gs js and repz out mov shrb xlat mov daa test xchg gs fwait jb (bad) xor jge mov addr16 xchg push jg xorl bound ljmp pop push cmp ljmp and adc int loope mov jmp sbb or push sbb push imul pop or sbb ret xlat dec jne mov ja cli mov hlt test sbb stos or sbb push lret cmp add xchg pop (bad) jecxz iret inc in push mov xor movsb sbb clc sar repnz cli je insb add aaa cmpsl xchg test xchg pop ja movb mov mov xchg enter (bad) or icebp adc test xor or jl sbb outsb imul orl pop dec cs ja adc scas xor add push sub rolb loop jle adc cli mov inc mov (bad) fwait add ja in fldcw out leave sbb rcrl scas jmp ror inc dec cmpsb aas enter fsubs dec lds push (bad) shll or lea mov outsb out (bad) lret pop gs mov sub mov pop pop (bad) daa (bad) xchg pop pushw pop mov movsb in fisttpll xor cmp xchg and sti insb dec cld xchg je pop mov and stos data16 dec std int out xlat pop movsb cmp push sub xorl adc stos sbb pop mov into mov insl push popa rcrb and jge lahf dec (bad) leave fsubrs cmpsb lcall fsubrl adc mov fildl adc jae mov or repnz bound pop cmovp cmpb and in cmpsl or pushf cld pushf pushf dec inc xchg int3 lahf out cmpl repnz and pusha jae push sub cmpsb test lret push or sbb sbb ss in movsb es push lods mov jb fstps cltd and (bad) xor cmc xchg test jg fidiv mov push jo sub fmul xchg dec cwtl dec xorb lock pop stc test jne inc cmp out scas jl inc shrl jl sbb dec lods jmp hlt pop out sti bound sahf mov rcrb jecxz cmp cltd rorl push push lea adc rclb xor cmpsl jecxz call (bad) not mov stc xor push mov sahf dec sub or stos insl jb and in paddsb (bad) rcrl jecxz adc idivl fldenv cmpsl dec and xlat cmc out gs js out inc loope fstps cld fstl sbb push sti push xor aas fcoms in jg dec lds in test je scas aad cmp pop adc mov loopne or xchg push lret mov movsl pop xor adc mov mov add cmp cs cmp sub mov mov inc add xchg sub cmp jae xchg mov dec push push inc xor popf sti mov das ficomp jno ds aaa orl push mov pop push mov inc adc jb (bad) dec lods lret jne jle jns roll xor sub xchg mov pusha adc shrl xchg mov and rcrb in (bad) pop (bad) mov (bad) cltd out mov push outsl or mov add popa cld sti mov and add cmp and xorb sbb nop fisub xor and ds adc pop sub jmp into daa mov sarb out in loop inc test mov xchg das (bad) sti or jge fcoms dec ja bound mov push sti jae cltd xchg jmp jmp xor push mov sub es xchg mov lret mov push pop leave bts add testb in and mov sahf push stos aad and cltd ret outsb nop xchg sbb hlt stos fwait jae xchg fiadd jg repz mov pop mov xchg jmp imul in fwait bound les iret jle fs push lahf mov cmp pop pop mov fstps xor xor sti mov fwait push into xchg xorb pop movsl jae js fdiv sub cmp xchg mov ljmp arpl arpl fadds pushl xchg push jno adc pop and cmp (bad) and push lea (bad) mov sti sub pop mov mov xchg rclb fldl inc and and (bad) mov pop fcmove lods pusha push push mov sbb out push sub dec xor jne mov xchg jbe sbb icebp mov in cli sbb fwait jl cmpsl adc push cmp lods (bad) and in xchg test or fcoms pop push mov push idiv push daa loope lods and repz out add imul unpcklps cli cmp push pop in mov nop or push je xor sbb in in ja enter cmp icebp (bad) lds in mov adc (bad) clc cmp xor mov push hlt bound cmp inc (bad) divl push fistpl sbb daa ret cmpsl cmp sbbl mov jno add scas mov jle inc in push scas add imul mov push lods and mov pop inc es arpl into xchg mov cs xchg mov icebp ja mov adc push aas and jne jns pop das insb xchg inc jle arpl sub mov rolb xchg sbb scas lret cmp and inc iret sub mov sub in in add sbb cmp daa ss (bad) sub loopne cmp cwtl popa mov jne pop lea dec dec cwtl xor xor pop in mov loopne arpl xchg push cmc xor mov pop mov xor vpunpcklqdq mov mov sub je push push pop sub add shll xchg cmp inc and and and in jo mov mov and xlat std cmpsb pop insl fcompl lods push clc mov or in inc dec out aaa jbe dec cmp push mov aad sbb push xchg std and dec out add stos fistl jae (bad) adc gs jge fwait dec mov call mov sbb pusha lods mov cmp sub fcompl pop and fwait (bad) das (bad) cmp imul sarb push ss dec mov inc jb bound dec pop rcrb test jne ror out xchg sub loop xor cmp mov add loopne mov shr fistpll out xor les or add test pop fisttpll dec pop mov repnz test test insb inc jb add (bad) xor fstl sahf stos or sbb sbb in mov inc sbb (bad) pop or or jns mov jns testb movsb dec mov (bad) sbb sarb mov (bad) push test shlb movsb inc mov adc push rorb mov mov fsubs push pusha out pop jns andl lret jne aad pop inc icebp out mov mov sarb xor dec ficom push int3 jne xchg decl sahf testb mov add cltd pop push mov jl push mov jb outsl cmc cmp ja add xchg iret lcall lock pusha jg (bad) xor pop aam or inc lahf mov sbb dec xor mov repnz std xor arpl lret iret not mov mov (bad) cmc mov push out mov ret mov sbb int outsl xor push jno mov daa clc mov stos mov xchg add mov imul xor mov jg mov les sbb les mov mov or pop test stos add xchg mov lods cmp dec outsl mov push js aam lods (bad) fsub push icebp push xor xadd jo ret mov repz movsl pop xchg pop outsb test sbb mov lods cmp pop pop push add cmpsb es fisttpl int3 test loope loop xor lods ja (bad) (bad) gs mov add cmp int jmp fcoms mov arpl xor dec mov xchg test or (bad) push mov cld and xor jo loop jbe jns lcall je xchg fs je js mov mov sub xlat sub ds fimul pop dec and mov outsb fimul jle lods jmp add lret mov push iret pop inc sub mov in jnp xchg stos fdivl cmp pushf out lret xchg adc stos test fstl or mov push hlt cmp mov add jns mov ja xchg jns fidivr dec ds sbb ret xchg xor clc aam lods stos or push scas and cmc mov xchg xor add or arpl leave jecxz xchg pop dec ljmp ret cwtl ds pusha pop adc dec leave add jge mov jge jbe xor push subl lcall dec mov aaa or sub pop push jo xor imul sub add dec (bad) mov dec inc add push fdivr push repnz (bad) dec imul and fdiv (bad) int loop pop js in or cltd adc dec sbb inc sub xor movsb xor outsb pop mov cwtl adc in stos in in pushf cmc sbb sub mov xor lret xchg (bad) inc mov ret cwtl xchg arpl sub je mov push shl jae pop fldl2t popf inc call lea les mov (bad) out cmp (bad) dec add fmul imul mov lret aaa pusha mov shrl std pop pop stos pushf fnsave jb imulb lock cmp lock stos inc adc sbb ret pop cs (bad) imul (bad) xlat push add imul test jae pop mov xchg or das div repz movsb jg cmpl push nop mov mov int3 push push sbb enter sbb out xor sti ret push int3 mov push xchg fsubp mov sub cltd sbb icebp mov xchg scas loopne adc addb pop mov mov add add mov aaa pop mov jg pop xchg inc adc subb movsb je adc andl ljmp or jbe fisttp xchg insl stos daa ficoml movsl repz dec popa jmp out fdivrs sub cmpsb xor in jmp mov call dec das or repz popa push data16 dec flds flds jmp iret pop xchg or push test adc cmp ds inc cmpsb nop stos jb push jecxz out repz mov inc subl pushf lret sub push push adcl ret fdivrl mov ljmp jmp jecxz test dec jo jno mov das imul cmpsb scas and imulb enter nop pushl dec and stos insb dec ds push inc sbb and stc sbbl jbe (bad) aad cmp sub cmc and mov lea jbe push fstp cmc out aam mov pop ret rclb mov fwait jbe les repnz xchg pop sbb call dec mov jo mov mov or jne xchg pop jmp aam inc int and sbb mov pop iret mov pop mov add nop xchg jno pop out add xchg xchg sahf inc inc cs enter aad rolb xchg adc cmc aam and in bound fsubl dec repz mov testb ljmp xor or mov lcall fadds and mov std ljmp add aas inc test loopne sbbl imul leave ret ja fptan mov jne lret (bad) mov or ret jmp fsubr lcall fwait xchg cs push cwtl adcl fcomip loope mov mov push and out lea pop mov ljmp ljmp bound xor mov in daa inc bound lea (bad) loopne adc mov cli mov cmp repz inc sbb mov pop bound je aas loop scas add mov lock in or jl xchg (bad) mov cli test leave jbe cmp inc popa aad insl jg mov lods les rcrl jno je out dec xchg fimull lea scas mov xchg mov (bad) jbe jns mov fdiv dec and insl dec addl add (bad) cld jmp (bad) out pop and stos test jmp mov adc inc jmp cwtl jb add mov adc dec xor pop cltd cmp (bad) ljmp or mov inc ljmp jnp ret or jge rcr lods pop je test subl popf jge xchg xchg add inc mov ss sub loop aaa lret roll roll loop mov outsb aas aad fcmovb dec mov sti cltd stos cmp lock jnp js flds push mov dec bound lret aaa xor mov arpl hlt sti cmp gs xchg xor push jg (bad) jb das dec jno dec lret and or sbb pop sub mov testl mov push ret ss nop pop rcrl rolb in cmpsl lahf push xor mov push (bad) aas xor jecxz call sbb inc adc xchg int3 cli sahf sbb pop add outsb (bad) pop push mov cltd inc repz das (bad) repz (bad) fcomps lock ret push xlat jae (bad) (bad) imul jecxz lahf (bad) dec stc xor push cmp es push je pop push push icebp jnp and jp imul add into in mov (bad) pop int3 test push out or xchg cmpsl and divl jl cwtl push pavgw add cmc push inc out sbb adc mul out out lret mov fsubp inc test (bad) stc mov inc pop loop push dec fdivrp dec push xor add push push rolb mov ror rcrb jbe dec in add out rcl jp or inc jp cld mov inc cmp or adc repnz xchg xor push dec sarl inc sbb pop lret mov cld ja aad push ret adcl ja mov arpl test ficompl xchg (bad) ffreep push arpl mov fidivrl push test stc cmpsl mov sbb mov xchg in add test add clc mov adc fdivrl inc add stos and inc cld (bad) pop ret push mov adc test popf lods in inc mov or add ficom or add add data16 clc dec mov jnp inc mov add sub xor jno enter scas adc cmp dec cmp das std jg je mov mov mov mov mov dec test stos popf dec fnsave subb pop mov dec push sbb xchg es and sbb add inc xlat inc sbb xor sbb inc xchg je cmp outsb aam mov jge inc int3 xor pop mov aam adc jge jnp adc shlb cld mov xchg (bad) xchg jb rol mov lahf jb scas ds sub pop leave dec inc shll sub out sub dec imul jmp fsubl mov or sarb mov mov stos push imul and push cmpsl jns fisubl push mov insb cmp inc dec pop xor stos repz push pop out shll push inc ret (bad) hlt cmp mov fucomi lahf mov sub xor fisubrl cmp mov std and mov scas sarl mov mov loop lcall loopne mov aad out push pop je lahf outsb inc or sbb or (bad) pop imul sbb jnp push (bad) sub negb (bad) jae pop mov scas add add jp (bad) push mov mov mov push mov push pop test js dec xor adc add mov gs nop sub aam icebp and xchg (bad) cld sbb sbb and sbb ret es push ret aam bt cmp ja xchg xchg mov or add out xchg fwait movsl inc stos adc cmp sti sarb fstpl aad xchg in pusha sub (bad) fadd push xchg or push xchg sub sub dec aaa inc movsl cmpsb pushf cltd ret insb dec jge dec sti ret repz jns popf mov or sub lock mov loopne push ret jp push nop inc aas lods inc push jnp push fbld sbb aas bound sbb pop push (bad) (bad) mov andl push cli sbb jecxz push adc call nop je cltd jb fwait cs xchg xor mov bound ljmp xchg or jne mov jl and xor xor cmp pop sarb jg arpl pop stc loope and addr16 xchg test dec mov inc pop mov data16 inc dec pop xchg jp out rcll sbb pop and out xchg outsb jns lret xor cs outsb sbb jge add loop push inc cmpsb cmp stos pop mov cltd pop pop inc inc pop push sbb add xor dec sbb jne (bad) jne repnz (bad) movsb int3 push movsb repnz data16 lods (bad) sub sbb in aaa xlat (bad) mov stos in jp test out adc lock mov aaa clc fstl push cmpsl or jmp mov dec jg addb es test sbb inc adc repz jo sbb push jg xchg sub (bad) dec or addr16 popa (bad) mov xchg mov and add xchg arpl stc push cmp xor push fs cmc mov (bad) mov mov xchg fcomps (bad) (bad) push mov cli mov adc scas shrl pop mov lahf ss xchg rclb stos fldt dec jb mov daa ja push add ds (bad) adc mov jno ret in adc ljmp add stos or rorb fidiv mov rcrl sbb jecxz repz xchg sbb adc in and inc sbb cmp mov outsl popa jp sar sub push test mov adcb jb cmp pop fnstsw rorl out or das fiadd cmp jne les xor and int3 inc cmpsl enter iret dec mov movswl and mov test jae aas and repnz (bad) enter lcall call jae repnz (bad) mov xchg outsl jecxz ja xor xchg lcall (bad) es jg sti push or es lahf adc mov stos xchg pop dec ljmp mov mov movsl jmp rclb (bad) aam repnz xor loop cs inc loope mov sbb pushf fcoms fbstp (bad) mov cltd cmc or je push sub sahf mov loope in popf es aas adc push out hlt ss xchg xchg jmp jnp cmp jl nop inc inc popl fisub das insb inc arpl out ja dec mov inc adc xchg sarb xchg lock clc push cmp cmc mov and mov mov mov popf cld andb andl adc cwtl stc sub jecxz inc rcll std or dec or jne adc lea mov jne cmp pop popf out in inc std nop jae (bad) inc arpl sub (bad) xor jle cltd xchg es sub push out (bad) pop mov mov sbb sub mov out pop mov les fcoml daa push cs (bad) movsb cwtl cmp push add or fdivrl dec cwtl add mov push or lret popa sub (bad) lock pop into int3 push xchg shr test sub out popa or push cld push xchg (bad) (bad) xor push (bad) repz xor rcrl outsb out scas std sub cmp (bad) mov add and stos sbb jl mov or cmp outsb or mov (bad) sub inc or inc insl adcl pop adc popa mov cmpsb jae,pt lods cltd pushf sub sub dec insb add (bad) mov add loope adc mov jg es cltd mov xchg and jge orb push xchg push sahf insb ljmp xchg and stos mov sbb pushf lret clc ds fistpll lret scas idivl adc repnz jb mov fidivr and mov fwait test dec lret dec jo lret cmp ret out insl dec mov or sub insl into jge (bad) lods (bad) rclb xchg add lods jp adc (bad) mov add decl cld daa lock sarb or daa lock sarb or daa lock sarb or lahf adc jg xchg xlat shll loop dec add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mulb add add or or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop and sbb cmp insl fwait xchg insl (bad) mov xlat fs (bad) mov popf fsubl iret mov imul inc xlat add loopne add mov sub insb hlt repz je mov sar jmp push gs lods or jo js lock sbb mov inc enter add sub mov (bad) (bad) lods cmp hlt (bad) enter repz loope ret js test mov (bad) mov add add test aas fcompl out fdiv xchg inc aam in or rcrb aad lods sti push test int xor pop push insb mov aam jmp lret pop (bad) xlat pop xchg jb and adc sbb mov (bad) bound inc xor pop (bad) fcompl cwtl mov repz lea outsb mov xorl adc movsl inc cmc popf jbe sbb incl or inc repz (bad) cmp aas dec sbb ljmp imul icebp cmp in cwtl pop (bad) push pushf mov inc call inc (bad) pop jmp cmp test insb lds fimul cmp loope cmp add mov sbb popa ljmp fildll mov (bad) idiv add into or cmc jle push dec les push add cmpsb jae sahf lea xchg xorl pop jo ret mov jbe aas xor jge scas sbb in dec push jecxz frstor jbe cmp mov inc cltd lea xor xchg xchg sbb lcall xor add adc add stos enter jl pop pop pshufw jmp dec in sub or (bad) lock mov jno sbb imulb push imul fistpll idivb xchg pop jne mov cs jne das xor mov mov imul cmpsl dec aas or fild or lds imul add xlat xchg fisub jno sbb test xchg xor dec inc and xchg mov mov xchg cli xor pop dec dec rol adc or or cltd sbb dec sub cmp cmc rcr sahf jmp push jbe (bad) adc or sbb jg mov stos mov fs push aaa out jno pop xchg loope,pn aad (bad) iret and loopne fsubrl push test lcall repz test mov push nop sbb (bad) je mov sub add push clc les popa sbb jg lcall test das adc push jge sub fldl arpl mov rcrl dec cs and iret repnz xlat (bad) and xlat cmp fidivr (bad) pusha cs xor test cli in jo pop push lret ss int sbb mov jp adc ss fs (bad) fist jo push out das int3 cmp mov adc xchg (bad) mov dec sub jbe fucomp cs cld pop mov mov nop setb lods ror xlat cmc hlt mov jns cwtl pop testb xchg sbb scas and imul daa jmp xchg dec cmp xchg pop popa adc add pop inc pop pop imul fidivrl rclb das repnz cmpsb mov in xchg pop xchg (bad) dec jb pop jmp adc inc jl aaa push les mov stos clc push mov dec cltd xor std jb sbb (bad) jmp movsb mov lret jle xchg mov sub int3 int3 jb inc movsl mov outsb xchg mov outsl icebp das movhps orl push dec stc inc (bad) xor rcrl mov mov mov jo jmp int3 or test lock out pop jnp (bad) cmpsl xchg jbe sbb pop xor inc je mov jecxz iret inc mov mov movsb std mov jae dec or pop push stos in fsub daa mov adc adc inc outsl shrl shrl mov scas je (bad) ss adc xor dec add imul mov push sub pop xchg notb jp xor pop dec jbe cmp pop loope imul lea roll outsl pop jle adcb je pushf cwtl xchg loopne inc mov inc shrl add or xor stos pop sub fwait imul pusha jge add repz mov jne xlat lahf daa cli mov dec movb xchg ja ret loopne pop adc mov ret xchg adc pop addl ret orb shrl xchg sub int pop mov into xchg daa dec test ljmp xchg pop mov dec mov addr16 mov mov out add lods das lret jnp fdivrs (bad) lahf pop sarb pushf jbe aam loopne pop sub and dec jno mul mov mov xchg and fdivs add js test add daa ficoml jecxz sbb jne (bad) (bad) test mov nop dec out leave cmp xor jbe pop iret ja inc inc and and jle (bad) popf ret sbb pop jl mov rcl mov or out or xchg cmp outsb test ds enter (bad) inc adc rcl loopne dec mov mov pop das mov inc mov and or pushf pop out dec push mov jo inc sub rolb adc cmp mov push add push jle insl mov sub mov test subb pushf (bad) xor dec and stc xchg fwait jno cmp mov or push sub sbb (bad) mov incb ret add fidivr sub fldcw jns pop jo loopne adc js dec scas jns inc mov push (bad) cmc push jns mov lock popl scas xor or xchg or loope dec dec inc or (bad) in or jbe and test out data16 sbbl add std dec das inc xor lahf push lcall sbb out jmp adc cltd movsb in cld call mov inc cli jp lcall rolb or cwtl popa div pop add xchg insb pop xchg cwtl aas mov data16 ljmp data16 ret incl clc pusha cs add xchg jb decl xchg xor mov inc cmpl aad sub and mov pusha jle movsb mov aaa dec icebp loope push mov cmpsl cmpsb shll mov add pop pop je xor in push lods jbe mov hlt jb mov stc rcrl xor out icebp imulb call mov insb stc mov jmp test int3 pop hlt inc inc mov xchg pop cmp int (bad) data16 push loope pop mov push and insl out xchg inc jmp divb mov jle push mov adc push jnp icebp iret stos cmpb enter jns pop and or or xchg out daa in iret jno sbb fdivl imul es sub jl mov sbb push clc inc cltd xor divw test cmp repnz (bad) or jp mov cmp outsl or dec in mov pop pushf jp or inc add xchg pushf imul xchg mov ret loope mov mov cmp add aas dec pop enter fnstsw loop inc dec out aaa insl out sbb mov fstp test in sbb fadd cs dec add ds sub mov mov lret mov clc cmpsl stc stos ds (bad) xor push mov fistp lods dec xchg js cld gs cld dec xchg pop add subb cmp mov sbbl ds dec jo (bad) jmp scas je pop fdivrp pop das in lret sbb or lods out jns (bad) cld mov add cld fnstenv sub or popf mov out mov jle xor rcl test orb dec (bad) jecxz test (bad) jg xlat shll lahf pop sbb pop push sbb repnz mov aas mov xchg movsl add repnz mov lretw push mov sbb popa fidivrl inc add in inc adc mov cmp cmp mov rclb out and or add mov jne das cld insl xlat xchg pop jg inc mov out dec mov les or jno gs (bad) cmc pop xchg les jecxz jo loopne loopne or (bad) mov or cld mov imul repz enter inc je xchg cld add scas pop mov fs les sbb out adc push clc jle test (bad) jb test (bad) enter or cmp adc dec adc negl adc dec rolb popl xchg flds mov adc cmp cmp mov movsl rcll pop cmp xlat xchg xchg mov jecxz (bad) mov lds mov push sub inc rcr jge,pt mov outsb push dec das lods xchg cwtl jno cmp das fcompl inc or movsl scas cmpsl imul xchg shrl dec xchg mov lea loop mov jbe sub xchg (bad) push leave xlat lods push mov pop and fisttp cmp test sti jp das lcall mov das std dec mov adc in cmp inc mov cmp push sbb (bad) fidivl pop and sbb mov aas sub inc sbb inc dec insb rol xchg and out and ds push dec or js rclb les stc cwtl bound sbb inc lods and sub sbb mov ret out hlt std pop mov jge sub iret adc jmp insl imul jo aad jno inc xchg repnz mov iret push imul xchg mov imul sub pusha ja xchg inc mov cli outsb mov cmpsb pop outsb lret test fistl setbe vpcmpgtb fdivs mov mov in fwait and or mov and rcrl in ret mov gs mov mov inc cs arpl aad jne dec pop adc xchg or adc xor mov aad sub mov fistl mov jp call push adc inc sbb arpl subl loop and sbb jmp add xor or pusha adc xor repz adcl sbb push sub leave pop daa inc fwait jg ret (bad) shrl xchg inc cmc jge leave (bad) or xchg and insb gs sahf sbb mov sbb call mov sub aam call in cmp xchg mov ficompl data16 mov (bad) xor movsl adc ljmp lods ret movsl iret arpl pop pop dec mov pop jl ds mov pop fistp or jb xor jbe pop pop pop jnp mov aad mov mov sbb data16 cmp loop repz clc and fcoms (bad) mov push movsb mov daa mov mov aad pop jae sub cmpsl push jle fnstenv push ds mov or adc add fs (bad) lods jns sub loopne adc ja inc cltd outsb cld xor jl cli lods pop scas test lock mov cld (bad) leave dec cmp testl (bad) aam push fisubrl lret jne xchg or mov lods insl push je sub loope pop lret sarb dec in push std faddl pop inc mov jmp cmp jl arpl enter ficompl mov or mov xor mov mov push int xchg nop ret push xchg inc mov ja mov sbb cmc and lret into sub iret test repz pusha (bad) pop lea shlb cmc adc out loope add ds add in stos pusha cld les pop cmp ret test inc ret pushl dec pop test cs test movsb daa test mov push stos test int3 das cmp les shlb cmpsb out insb dec cli xchg xchg sbb mov pop cmp xchg mov add lds push jnp jg mov addl dec cltd gs ds inc cmp push fbld hlt imul and jecxz add jb sub push cltd adc fldenv popa inc push sbb add test gs call push push faddl dec (bad) push cmp iret lods xor pop roll aam ss (bad) dec push leave sahf mov enter movsb sbb dec cmp pusha mov fwait pushf cmp push add xor add jae enter jae xchg sbb xchg jnp std fiaddl jp in mov addr16 (bad) hlt test sbb mov outsl lock scas es adcl int3 sbb fmuls add out jg fiadd arpl jecxz gs jl bound mov inc ret mov sub jle js and cs mov aam lret (bad) cmp pop xchg pop mov push mov jb inc fcmovbe out shrb lock test adc fnop xor addr16 ret cs popa and xchg insb fwait xchg or pop mov addr16 push adc leave ss test aad pop mov cltd pop inc stos repnz and push xchg xchg xchg movsb add and pop jb adc call (bad) adc mov sahf xor or jp sbb clc mov cmp (bad) in xchg repnz ljmp mov mov mov jle incb and mov add call shll mov cmc fldenv sbb fsub mov mov xor mov jbe cld (bad) jns (bad) loop mov enter jmp dec or jle insb jne imul jg cwtl mov fsubrp push push sub dec adc cmp jmp mulb popf pop xlat inc sarb and dec in mov push jg push sbb (bad) fmull icebp in jo cmc push or sub rolb sbb je cli pop dec jecxz div scas inc or pop mov inc fldenv jge ret or aaa movsb out sub pop and cwtl es xor jo sahf sub jge xor pop out stos pop inc outsl fsubrs adc mov jecxz jns inc mov out xor push inc push int loope les sub sbb mov mov repnz orl add xchg push xchg std jnp push je jb out gs xchg fwait ja adc mov sahf imul aam adc fiadd xchg push (bad) fwait push sbb dec or pop inc scas xchg push insb (bad) jnp out insb popw cmp into scas loopne mov dec sbb add int mov (bad) pop sbb outsb mov dec fs jns dec repnz fisubr xor sub mov arpl fldcw sti cwtl js jg push lret sub add outsl jle dec (bad) cld scas es pop mov test push stos or mov add sbb pusha cmp sub mov insl xor cmc cmp ja sahf push inc out inc push psllq pusha outsl inc in mov push shr xchg inc mov mov xchg (bad) jge cmp mov mov mov lds push jl adc pushf hlt cmp fild fmull out adc sub push sar xchg and test cmp lods sbb xchg cmpsb or ja dec inc sti fbld mov inc jmp dec movsl dec fidiv dec mov push cmp xor jae notl add das hlt push and dec pusha xor mov push mov test lahf mov and daa (bad) ret out js cwtl stos sahf clc ljmp mov jle dec cmpsl cmpsl or xchg and fsubrp fwait inc mov mov fwait inc fnop or xchg xorb test pusha aad ret insb iret jmp mov sbb lret int inc adc xor add cmp inc cmc test mov jle xor push outsb mov cltd stos push xor imull sbb in sbb adc push mov inc add loop sub sbb mov fldpi jb mov int3 js jb inc in jl jl push test int3 inc pop hlt mov sub push cmpsl pmullw mov add cmp call xchg xchg (bad) cld adc mov dec lcall jmp sub inc adc popf loop mov xchg pop jle outsl rcr mov and sub mov les fwait cmpsb and fimul test (bad) sub stc cld jle pop xchg xor andl pop lcall adc outsl in xor push cmpsb outsb mov (bad) fidiv or xor xchg mov imul mov mov out pop inc nop (bad) daa scas jl mov adc add jne and stos aad jb std pop push sarl cmp in or jecxz out (bad) sub xchg or inc pop inc sbb into inc push inc pop mov cmp pop pop test fiaddl lret aad dec mov jae hlt dec push les or ret adc iret xchg lahf scas push rcll fmull cmp rcll ljmp jp mov pop mov cmp jecxz pop out mov gs cmc sarl iret xor dec outsl pop sub push adc or repnz mov lahf add cmc test in repnz xchg xchg adc mov imul jno fadds adc enter test or repz push dec cld jle popf or xchg cmp jge pop gs adc lods jo sarl icebp pop mov push mov xchg mov jmp rorb cs mov jns test gs out clc adc xchg sbbl mov repnz xchg mov sbb loopne aad imul and jmp jg stos ja pop into mov pop inc lods mov ljmp and insl (bad) into and ret out bound ja dec xchg and add or outsb mov mov dec outsb mov mov sbb adc ja add pop fbstp rcrl jae (bad) cmp mov shll mov daa leave push out and popa lds (bad) dec xchg cmp and call jle or (bad) lret test adc mov (bad) mov ret sbb add jp (bad) hlt pop lods or lods lock cltd mov fidiv xorb adc push add int cmpsb cmp mov jno jp dec mov jmp popa push and sub mov cmp sbb test out sbb je clc icebp daa dec repz call sub addr16 les jae adc loopne enter add or lods es pop les mov sub mov in jmp je mov mov outsl hlt stos rcr lcall aas cmp stc hlt int xchg mov inc popf out inc add push mov sub sub jp cmpsb dec insl call adc xor test mov add sarl mov int pop insb lock stos in and jae mov push jnp cmp out xchg jne (bad) mov cmp repnz pop or pop push mov cmp mov pop test pop fdivr aam aad and test ja hlt dec xchg push fld add in ds jmp add in outsl jns mov out in inc dec orl idivb sub pushf pop and gs stc mov lock xchg lahf movsl jae inc ss cmpsb xchg jns ds in push pop pop imul xchg nop push dec jns into sbb imul imul imul jecxz and and (bad) dec mov (bad) inc loop int stc mov inc jp outsl fstps jno aaa negb dec jecxz je inc push or addr16 rolb push ja (bad) scas push lods pusha sub out (bad) call shrb add mov ljmp sbbl clc xor scas push ret add loop clc mov decb pop ljmp int jno insb outsl and (bad) pop dec dec repnz mov jmp cmp lods into inc pcmpgtb mov mov lods push nop pop add mov gs lret xlat and popa dec xor add daa pusha mov icebp dec out insl fistpl mov or lfs test xchg jl int jo push xchg cmp aad idivb ss repnz and mov adc jo add mov (bad) pop sbb jmp xor loopne or rcrb add cli outsb lcall mov and test mov adc sub lods cmpl mov imul (bad) mov ljmp int3 addb divb push hlt (bad) mov jns outsl aas ss mov (bad) push fisttpll mov jno push push popa mov leave adc adcl mov dec stos rcr jecxz xchg hlt jmp cmp ljmp sbbl pusha jno rcl jb xchg add in and scas or pop popa push pcmpeqw pop daa enter add arpl subb clc adcl into push mov mov insl xchg popa ret andl ficoml xchg (bad) mov ljmp jg push outsl jg pusha xor jle scas push inc (bad) mov notl imul xchg shrb nop sbb mov scas jmp cmpsb cli inc jnp das fdivs add out bound mov pop movsb lret xor dec sti dec into inc out adc xlat repz aas xor in lret add add mov out jno lahf sub test fildl fistpl mov cwtl clc lret fistl and xor stos mov arpl xchg mov repnz or mov inc (bad) sbb shrb pushl test repnz int3 jge mov push or lcall arpl gs cmpsb sbbb jb push cmpsb pop int outsb fidiv incl mov mov push mov (bad) repz mov add cmp jo call ret lcall pop (bad) outsl clc (bad) add cli xor xchg imulb out fwait pop notl and inc mov jmp loope inc scas and sahf repz jne fldl cmp pop jo xchg and out data16 cli xor mov clc shrb mull inc add (bad) cmp outsl sub ja mov push fdivs lds dec push (bad) cltd jmp into mov jb push les sbb fstpl push popl mov imul push and adc push scas push jmp push xchg in cld fdivrs in cmp enter push inc mov sbb mov add ds jp scas push nop or mov jns clts jp insb mov jecxz daa or mov mov mov dec xlat fcmovnbe (bad) xlat and dec jle push faddl (bad) scas sub jp fstpt and dec mov push pop rorb lahf sub ljmp xchg xor cmp jmp fs int3 cmpsl sub (bad) iret mov outsl stos jae cmpsl inc lods and add or cmp xorl xchg stc stos fwait cmp mov add dec dec ds jle es mulb push pop mov xor sahf mov xor pop fadds mov das jmp rorl sti mov push stos sub aaa inc cmp imul add (bad) movsl and insl into or mov or xchg fistpll dec lock bndstx pop xor repnz loope dec ficoml sub and and sti mov jno or jl arpl dec stos mov push arpl iret sbb cmc jae mov push and ljmp adc jp mov jns cmpsl loopne lahf adcl sub xchg out pushf insl sti xor sbb ss jg cmpsl cpuid mov fwait sar out (bad) out cmc mov lock pop jbe jmp (bad) xchg jg lock or pop mov push sarb jmp inc (bad) js rcll cmp mov (bad) fistl jge (bad) in mov gs pop into sub mov mov xchg test stos cmp je xor mov out sbb gs dec push in mov ret lcall dec aas cmpl cld adc daa lock loopne sarb jg incl or adc daa lock incl add pop inc adc add add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repnz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push jbe or add sbb mov fstp mov fcmovnu mov sbb (bad) mov sbb jns adc add mov add add test pop dec aas inc mov movsb sbbl repz mov cmp pop rorl mov clc mov or add (bad) cld cmpsl aad outsl nop dec cmp cmp mov cwtl hlt iret jne in aam gs dec test cli xor push lcall cs mov mov pop or das push mov xor fs loope in adc hlt cmpsl cmc jae rcrb mov push jge inc mov xchg jmp xor sbb jb jl jp into out lods aad xchg sub lahf mov scas lea mov (bad) lds and arpl lret xor inc out movsl mov mov push dec lods xchg dec mov dec sbb sahf push adc das out cmp xlat fbstp movsb mov test sbb nop cmp sub daa sub (bad) add xor pop inc add mov jg jp push cmp adc cwtl mov call mov sbb nop imul xlat xor enter sub or push jle cmp outsb daa cltd sti repnz shll outsb insb ficoml add mov jge push push subl pop pop outsl inc sub mov cmp cmpsl cmp (bad) in add jl loope jmp and push das out (bad) dec push add data16 inc inc setb push pop pop dec cmpsl pop int3 jecxz sahf hlt and mov dec aas sub sarb insl scas (bad) push push mov pusha push cmp mov pop ret test arpl cld std pop cmp clc lcall and cmp (bad) data16 pop fildll adc mov mov pop dec add inc cld or les notl stos mov xchg dec dec call pushf xlat mov aaa xchg mov mov data16 jge rol xchg push cmp xor shrb push cmp inc xchg pusha pop (bad) ficoml pop scas aam ret jmp daa popa xchg dec pop sbb adc movsb movsb or pop fisubrl adc leave clc cmpsb (bad) jmp jp or xchg xor ret lods rcrl sub aaa shrb inc test push inc out sub fisttp in ret lahf and sahf xchg pop add out push jnp fs (bad) (bad) mov cmp sub push mov dec lret xor testb jl pop notb push sbb mov out out idivl test mov cmp jl xchg and movsl mov jnp cmpsb idiv jmp mov flds dec jmp mov push nop repnz inc cmp rorb pop repnz xchg int cmpsl call aam mov dec fldcw fldenv iret stos das sub xacquire dec mov out sbb imul icebp je cmp push lds and add pop sub ret jmp jne mov (bad) roll pop pushf cs mov xchg nop adc repnz repz test dec aaa jb je int jp fs cs or test rol stos sbb scas bound (bad) xchg ja sbb clc xor inc cmp pushw into adc pop out xchg stos bound fmuls jmp cmp nop pop in push push icebp popa cmp mov in mov jno jmp cmpl addl inc pushf je add outsl dec stos or and mov pusha inc ret inc pop dec xor rcl (bad) out mov stc inc push mov cmp int3 sbb jmp cmp mul add test push inc pop jl lods notl push xor ret test movsb pop out lods aad push sahf out (bad) push jecxz adc xor and icebp icebp loope out xchg dec loopne sti outsl or out mov ss stc dec inc xor lods sbb mov imul sti popa mov lods popl fdivs cmc std add ja aam xor iret lea add outsl outsl call cwtl sti add dec (bad) aam push fmul negb fdiv mov shr jns mov gs push xchg into cmp out add imull jp repz aaa pop mov in push out add adc repz les clc test (bad) outsl repz mov add pop add fdivl fwait orl dec pop jbe mov dec jo or cmp int3 or inc cwtl adc or cli mov outsb xchg test xchg test xlat rcl and pushf stos loop scas jmp ss addb jb outsb and push (bad) push lock jle out lea mov les pop mov push mov (bad) jno mov insl pshufw mov iret or (bad) in mov inc push adc stos or bound ret mov mov or xor and lock adc (bad) push addr16 cs addr16 loop push stos in cs fidiv jns mov ret sbb push add fdivl lods or fstl fistl sub push call mov and orl stos es subl in xchg mov std dec and jmp insb and ljmp insl push jle pop fwait popf mov iret sbb lea in leave daa xor arpl mov xor loope pop lea jecxz (bad) js pop sub ficom fiaddl lods insl daa lahf sub fwait je jo (bad) and mov adc mov mov (bad) mov adc xor and jmp push fistp xchg adc push std add sbb sub jmp fs fcomps dec xchg inc in fnsave xchg icebp sub add adc mov mov xchg cld and adc inc push xchg mov push jnp lret pop xlat jae rcl cmpsl fwait inc pop adc mov inc push push aam andl outsl inc mov ret out adcb es sbb pusha add or into lods and cltd lods movsb ret fildl in jg ret pop imul push sub das mov lods dec jl stos popa mov hlt ss loopne cs (bad) repnz out cwtl push lahf and and cmpsl fadd pop mov icebp out cld xor pop lds (bad) sub adc push and xchg pusha or in rorb mov xchg jnp js lds or mov pop sub sbb pop dec add call or scas mov xor push xchg xor pop addr16 push cmp je xor es push mov ud2 sub loop call cmovp dec rolb jbe ljmp icebp push jmp insb loope (bad) (bad) mov out xchg movntq dec lds leave (bad) push xor ret jmp ds push imulb jmp pushf imul fdivl jnp mov pop and mov cmp dec imul (bad) xor aas pop repnz mov rol ret ret in dec jb jmp fsubr aaa lret adc add mov cmc cli clc dec cmp lock mov roll in (bad) (bad) (bad) out or mov fcmovbe jg out push lds test cmp lods ja imul cmp push arpl leave mov fnsave (bad) xchg xchg sti sbb cmc imul ret push pop fcomi mov push in sub cmp jns lea mov sbb jb imul scas sahf mov pop iret and dec cmp mov adc or dec xlat imull adc (bad) imul or fisubr int jg (bad) mov mov and cmp sub outsl (bad) push loope cmc bnd jle scas pushf (bad) jb lret inc mov adc scas leave xor out test ja pop mov cwtl or in pop mov xor xchg inc fwait sub sub inc sbb mov es push mov mov inc jge stos dec (bad) pop ja pop dec out jp pop push sbb lods scas insl xchg pop aad jne imul mov pop imul loope fcoml dec ja flds lods push fildll and std cmp add movsb lods out fiaddl jle push xchg cmc add les pop ret loop in mov xchg or adc inc xorl sub inc jo cmp inc sbb xor sbb push inc inc lods push mov imul dec cli inc jp cmpsb mov jns adc fstl loop ffree pop jge ret push loop jg adc pop iret fidivrl enter xchg cmp push pushf cmp xor pop inc lret add repz dec dec sub pop xchg add gs out adc jmp xor test and insb call lds jge mov notb sub jmp sub sub sti jge outsb js mov cmp loopne dec or stos (bad) sbb stos inc pop mov push and insb jecxz jl es xchg mov jle lock xlat sub fwait stc cmp and in push ret add push jg leave not add jmp sub lahf jo jae push pusha rorb adc lods jbe and stc (bad) mov mov mov test mov jo clc lret push fwait push leave push jbe pop sahf xor mov push out ljmp loopne inc push cmp dec nop dec cmp outsb jmp pop xor fs or stos mov and jmp ja mov add mov inc xchg xor cmpsb push insl in or les ss inc cmp cwtl jne inc sub sbb repz (bad) lahf sbb movsl pusha jno mov fwait scas clc into stc or (bad) dec (bad) jmp mov cwtl movsl cli add nop dec adc stos ss in cmpl outsl movsl leave mov add rcll push fldl out je push jne add push (bad) scas rcrb mov push lods clc mov orl icebp cmp lea sti inc js dec notb add mov das adc pop pop mov test mov xor adc negb cwtl push cmp test std (bad) cmp inc xchg mov lea inc enter xor fdivr inc push sub pop sbb pushf out xchg dec out mov lret scas jl rclb push rorb or add sbb push inc cmp dec aam mov lds js sti inc faddl sahf cli jns or pop int3 sarl xchg xor mov in and and aam fstps adc mov mov aad inc sbb insl jne aad incl cwtl push jno in adc imul in les and ret out ss jl xlat je xchg mov (bad) icebp inc xor out mov pop or imull add mov pop sub xchg bound sub push outsb mov or stos add add sub decb in clc fmuls insl mov mov sub pop mov sbb call add mov mov fmull test cmp sbb mov fldcw stos mov pop or mov cmc mov iret mov (bad) mov pop mov sti xor repnz pop sahf (bad) mov arpl mov sbb rorb fstpt xor insl les push pop fiadd xorl bound enter or (bad) mov sbb jmp (bad) and cli push xchg inc std lods xchg mov mov lcall sub inc cld push push push xchg or daa inc mov repnz clc lods retw lcall push sbb sbb pop pop nop cmp sbb ss pop cmp xchg sarb outsb push (bad) mov inc adc mov int (bad) sbb jno in imul add int pop xor push addr16 lods pop jbe push (bad) mov push stc and out lds out dec push fdivl sub push cmp outsb (bad) lahf sub pop cmpsl mov das add imul and mov mov lea leave orl push push rcr push cwtl dec mov sub inc dec xor movsl in add mov lahf xchg cmp sub inc mov (bad) incb sbb pop or (bad) jecxz add out mov mov or sarb aam out mov jb cltd es dec outsb shl mov adc push inc scas sub push popf xchg inc inc pop push pop out mov or jmp fsts addb adc xchg aas lret leave or or les adc jg,pt xchg and ret fist outsl jno add (bad) iret pop dec cmp sbb push mov repz scas pop xor sbb insl (bad) pop into int3 push les and aad inc push pop jne and cmc sub mov xchg mov adc lods inc lahf mov xchg lods jp push lret movsb xor aam xchg (bad) cmp pushf stc ss cmp lock mov aam test cmp jmp xchg jl das and and xchg insb mov jg test xchg outsb lods inc sub (bad) lcall call decb in idivl scas loope scas lea punpckhdq push dec imull xor jmp inc cmpsl cmpsl vmulps sbb xchg sti add and stos jl push fcomps sub add in pop pop xor aas (bad) cmp mov test lods add (bad) sbb sbb or xchg pop test cli and pop out adc sub in pop rcr idiv insb xor jge (bad) (bad) push xor repnz and xchg xchg mov out mov mov outsl cld cmpsb push mov adcl dec in dec imul sbb lret sub push cmp push out jo (bad) cmp shrb enter lods xlat dec pop jmp mov pop pop cmp mov jnp pop or jbe add into test aaa mov pop ret cwtl stc movsb lods into test dec mov push ljmp inc xlat inc (bad) inc dec andl cmpsb mov push lahf dec mov pop push hlt mov or xchg int3 push adc sub jge mov test sub out das cld mov push pop ljmp fldcw cmpsl xlat rorl push push xchg xlat push fldenv in jo std subl aam mov jl fistp or popf sbb xchg (bad) sbb outsb and jecxz bound jno push sti test stc jecxz ret roll jl jne push jnp and push sbb inc imul mov or std test test or mov adc dec inc sbb cmpsb outsb cli ret gs inc sbb fidivr sti enter dec xor fs pop out mov sub xlat (bad) lea xor cmp lahf and adc gs pop inc or jmp leave hlt stos sbb arpl (bad) sub jle lahf pop lock xor xchg lods (bad) cmp dec js je rcll jp jecxz inc xchg inc aad jle xorb pop divb sbb and jae mov or cmpsb mov popf loope (bad) fdivr cmpsb sbb or sub jge cmp mov data16 daa fnstcw scas xorl fs flds mov push js test dec aas mov jp call ds iret adc out inc es push push jno mov decb popa sti std sar xchg push daa cmpl popa and mov cmp loopne cmp jle aad sub add xchg out add dec (bad) pop and nop ds insl adc mov xchg stos jb xor xchg xchg xchg mov jno pop add out pop adc outsl (bad) aad jle mov pop inc jl adc rcrl pop fwait popf add pop xor lahf bound xchg xchg mov mov adc fadds sbb imul mov (bad) imul mov cltd mov xlat jmp cltd stc xchg les dec push xchg and add sub repnz cmp jmp cmpsl aas xchg fcompl mov insb push ljmp or cmp pushf dec push sbb in sub xchg test lret popf insl mov imul mov xchg sti mov mov xchg push (bad) push fstpt rcrb dec pop pop fstl xchg out sahf pop rclb ds jle (bad) fbld in inc movsb iret xor iret lock in into cs scas mov inc rorb push pop pop jo xchg or lea fxch jge leave testl jo loop repnz (bad) roll inc addl jge mov mov bound mov lods leave movsb adc dec xchg sbb pop mov mov sub sbb call and mov cmpsl jp jbe sbb int3 loop sbb int jae xor cmp jb mov jmp fwait loope stos scas sub popa imul jb loop sbb (bad) mov add mov cmp mov xchg pop pusha pop mov or pop outsb add rsqrtps and sub lahf int3 add loope cmpsb fcompl cli incb inc mov lret pop inc outsl mov pop push js insb fwait (bad) dec ficoml js clc lret xor cwtl push clc imul (bad) or aad jp pop xchg push or pop insb in (bad) inc push test outsl (bad) je sub dec adc aad or adc or mov adc scas jnp cmc inc cmp lock arpl push arpl fldcw cltd lea ja les jno and pop call pop add pusha js jo inc pop nop jg mov pop mov cmpsb sbb xchg loop sbb pusha add out or lea xchg and dec xlat out mov jbe imul incl es pop loop sub lcall nop xor dec fs das in pop sbb imul (bad) fidivl mov xchg ret add xchg fisubl push push cwtl jg mov insb test in in or cmp sbb sti inc sbb sahf nop sub jno,pn lret aam nop lcall inc cltd ljmp xchg icebp popaw pop mov popf add xor jbe mulb aam xorb lock iret out sti fnsave mov cmp and cmp iret jb jns cmp pop pop push dec scas adc push push push inc dec cmpsl jge mov inc inc xor push dec inc jb leave (bad) pop dec daa sub sub outsb imul mov or sub xchg sarb xor inc mov mov push fidiv xor stc in pop hlt xor subl pop fldcw insl shll rclb lods xchg push cmp jne hlt jle add ss mov or pop pushf jp jns outsb lods sbb test and dec mov or pop and push inc lock pop lods mov mov xor lahf mov fwait rolb subl sub rclb in push cmp pop cmp jg xchg jae push ret pop aad outsb xchg daa sbb or inc dec sti adc insb mov xchg pop and lock push jno lods xchg xchg pop jne mov jmp adc rdpmc pop clc aas aam pop (bad) (bad) punpckhdq jmp movsl in fwait add inc ds push das (bad) sbb addr16 or add mov inc inc aam out lea mov xlat fbstp jae xor or int add sahf xchg mov mov sbb mov inc mov inc lret pop fbstp ret xchg icebp pusha inc mov mov xchg cmp jl xor ret xor xor mov cwtl mov lock dec sub and pop cmp std or in fcmovu rep inc hlt rcrl mov adc mov mov pop push mov loop je mov (bad) fs and push repnz ss (bad) jg mov inc push cmp pop movsl int insl ret sub mov insb repnz sbb mov adc subl xorl sahf (bad) adc test mov dec (bad) fadd gs sbb cmp sbb adc sbb xor push mov fwait mov cmpsl ds test dec bound mov mov mov mov mov fdivp mov jg lods fbld add cmp add dec in movsl repnz ficoml mov sub lret leave iret and and sub inc (bad) lea sub fdivrl add jmp loop outsb mov jae stc mov std push xor andl push cmp into cmp jb,pn sub daa push cmc push fmuls ror fnstenv mov sub add mov xchg add jl mov out push adc push (bad) mov loopne push inc icebp sbb popa daa testl mul sub mov enter mov pop sarb addr16 pop push dec fimull add ds mov (bad) js cli xchg pop and out cmp fdivrp xchg mov inc xor sti mov adcl cwtl push mov loop cs (bad) lea mov jl (bad) mov or sarb int rcrb xor int3 lret (bad) sub cmp rol jae fwait push shll mov imul xchg push sahf in inc (bad) mov in cltd push imul (bad) jg lcall xchg mov popf add stc (bad) bound adc std adc aad push in dec into and pop idivb inc rclb (bad) sbb mov mov mov rcr or (bad) adc push test add xchg jg sbb mov mov add (bad) call add push (bad) lcall out aad sub cmp mov arpl outsl xchg (bad) add in (bad) enter cmp mov fsubs clc sub iret hlt inc xor hlt hlt sub push leave xchg mov mov xchg jle int iret das mov mov pop cmpsb arpl mov add aas lds and shrl aaa hlt imul lahf or inc mov xor jns xchg xor addr16 js aam stos and dec add inc sub and fs pop cmpxchg jnp jae inc xchg cld (bad) ljmp lret mov xchg sbb xor pop sbb sahf sub jg popa mov xchg fsts arpl call outsl scas mov cltd jb gs dec sub sbb jno mov popa push bound lds outsb stos add lcall xor add inc dec cmp fwait add inc and je imul cmp xlat add cmp xchg xorl jl or mov (bad) fistpll pusha das insl fdivr jmp rol test push inc scas in rcr (bad) scas push fwait lret pop jb cmpsl jg inc cs mov adc fs repz lcall shlb mov test test test mov (bad) int3 insb dec scas or add pop jmp inc stos jne dec neg popa insb out dec fxch or inc mov rclb mov sub (bad) hlt mov arpl lcall xorl in fsub fbstp rcrb out jp jge das inc jbe cmp mov inc adc mov rcrb das inc dec in push mov push adc adc aam leave push mov movsb in cmc mov pop mov push push mov insb mov sahf dec adc inc push pop (bad) xor dec dec iret mov mov in out repz insl sub shrl jae pop popf les (bad) insb sub scas xchg rcrl dec xchg stos mov sub adc ja xchg pusha pop inc pop adc lret pop dec rorl xlat sbb inc clc imul movsl or lods xchg test popf sbb cmp mov pop imul inc ss sbb add mov add cmpsl push sub scas pop xor fistp cmpsl fidivrl inc inc std outsl test xchg xchg add pop xchg out cmp shrl jg cmp test lods mov stos je popf and and dec in sbb dec jle mov lret (bad) lret subb xchg adc lds stos sub mov pop xchg enter sarb loopne cmp dec loopne cmp dec loopne cmp dec loopne cmp jp hlt fcomp movsb pop pop add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop and popf insl fisttpl sbb fistpl insl (bad) ja push xchg insl (bad) mov or mov lods add add pop add pop push pop inc (bad) xor lcall mov add xlat loopne cmpsb fdivrs inc jno pop gs mov push cli popa sub cltd push loopne lcall insb mov or mov cmp insb and aaa dec sbb (bad) (bad) enter movb lret push in lcall adc cmp (bad) mov pushf lea lret stos outsl or mov test xchg insb ret aas les leave dec imul popa movsb sbb imul pop mov dec cmc (bad) aas std push cmp nop cli add add sub outsb xchg cwtl mov push mov or pop stc pushf jg lods push cmpsl movsl ds jne shll xor test shll movsl mov dec int3 mov loope sarb jecxz (bad) xchg inc pusha (bad) sbb dec pop loopne xor jno into sbb popa ja insl lret jne inc out dec push das es xchg cmpsl jg pop insl popf hlt fadds in jle movhps enter (bad) in stc jp,pt mov (bad) fsubl mov pop dec pop jb repnz inc xchg jne cltd sub adc ficompl xor sub mov lret in mov lea and fnstsw push jecxz add imul cmp cltd pop inc and stos aam stos ss inc dec les inc lahf or scas sub scas sahf lret inc (bad) jge repz shlb dec out dec shrb sbb stos pusha mov faddl lods dec test lcall mov into dec popa mov lods and daa (bad) bound pop mov scas data16 cmp (bad) lret sbb leave mov outsl jns jo adc or or pop sete pop into clc inc or xchg fsubrs (bad) icebp cli mov cmp mov rolb push sub dec mov imul in sub das push mov les lods sbb push jnp xchg push in (bad) out in jge jmp lds neg fs stos cmp mov xor test pop (bad) mov mov sbb fidiv mov mov out inc aaa mov sbb sbb call adc icebp mov sub pop (bad) ss add jbe js jae imul divb loop lods push in jno (bad) xor stos cmp mov adc jl sbb xor mov jae int3 into jecxz push in outsl sbb pop stos out xchg mov out mov test xchg jno adc mov mov jno nop clc fmuls das push jmp shrb jge or jnp cmpsb inc mov push je rcll movsb mov cmc test xchg out lds cld insb inc scas dec imul pop mov push (bad) stc and sahf cmp add cmpl cli in mov enter add pop jmp ja cwtl add in pop fdiv xor addb stos adc (bad) cmovge ret sub mov xor cmpsb xor push add mov push rolb rclb lret mov jg sbb dec mov mov jb out sbb mulb jl test dec add mov stos sub (bad) adc mov pop test dec lock or pop mov jmp xor push clc sbb enter cmp iret pushf cmc xchg mov cld or cmp push push nop enter xchg mov addr16 loope sbb (bad) fisubr jecxz enter dec cmp arpl cli stos fucomi ja adc push popf shl sahf inc aas pop ficom mov sbb cmp ds jns je cmpsl cltd outsb (bad) mov into nop pop test sub fdivrs cmc (bad) jmp sub or inc push push mov aaa dec scas fldenv dec cmp addr16 shll pop enter movsb test cs add lret call (bad) xchg imul push mov lcall mov push xor cmp cmpsb mov test sbbb int3 mov xor insb lea scas addb sub xchg push cltd dec pop or lahf outsb popf xchg popf cmpsb inc xchg push xor add test (bad) int3 mov jmp mov cltd jle or cs or test in dec jge ficomp icebp (bad) push sub xchg dec lahf test cmp mov fdivs jnp dec hlt adc add ss inc mov sbb roll loop inc test sub (bad) clc push pop cs mov fdivrs mov pop cli push les pop adc add and idivl fstl lods (bad) add add inc sbb mov sbb int3 addr16 cli movsl cmp push scas cmc enter (bad) adc fs out popf jl sub push mov mov xchg stos lock aam xor or lcall and push movl (bad) icebp sbbl mov mov les inc shr roll mov mov scas int3 iret jae xchg addl pop push lahf dec adc shlb int3 and lret sbb ja xchg (bad) or cld loope sahf pop outsb leave loope sti out mov rcll sbb pop dec add scas out stc mov andl xchg mov outsb add loop faddl sahf xchg jmp cmpsl sbb jbe in ja aas pop pop cli sahf cmpsb sub sbb (bad) jg lds cmp in jo scas cmp xlat rcrb fdiv iret mov mov pop pushl lret jnp insl bound cmp mov xchg xor scas rorb ljmp movsb dec mov repz pop ljmp hlt mov cs out and cmp fsubrs xchg outsb xchg int3 ret mov aam jo push test fwait mov add fcoms lods fstpl jmp rorb jmp lcall test ja xlat xchg arpl jp divl jo jno cmc mov lock xchg lods push push xchg insb out mov movsl pop xchg push cli mov mov imul push sub call add xchg daa imul push fsubl mov aam les and inc inc push cmpsl sbb jge stc in movsl cwtl adc sbb addl xor mov fisubl lcall aam popa mov ret pushf mov outsb sbb mov or scas subl outsb daa (bad) insl pop cs and cwtl lret mov lock jp es pushf jne fiaddl mov jnp pop out xor xchg dec aad std adc (bad) sbb sbb pop xchg pop fldenv dec jae pushf in imul scas (bad) mov or sub aaa mov (bad) jg sarb test scas push fcomip jnp add adc mov imul adc and into (bad) outsb cmp inc (bad) (bad) icebp flds mov inc add mov pop inc lret dec leave enter or push lret js (bad) je xor mov dec roll shll jg sbb out ds jmp arpl ficompl inc jnp adc aaa cli pushf push daa mov sbb vmwrite dec lahf add and push pop movsl push cmp push std rolb dec cwtl and mov sbb inc or xchg std jecxz stc dec js sbb sbb in adc cltd (bad) repnz mov fnstenv arpl into jno push and xor into fwait (bad) xor push leave xchg test adc mov jg test flds mov push push enter stos stos psubusw insb pop (bad) jp cli int3 mov adc push scas inc mov jmp int3 gs adc sar and repz dec dec and int3 mov aam sub scas in pop test test xor cmp repz push mov cmpsb dec mov inc test adcl ror in dec pop sub imul cmpsl cli cmp movsb mov ja aam sub (bad) clc xor outsb fs push cmpsb sbb and cmp in pop xor cld pmaxub xor ljmp jno sub pop xchg jb pop inc or jnp loopne enter data16 jno imul cmpsb adc jb add in jo push movsl lret mov fcoml inc mov or in xor mov mov gs xor dec test mov orl ret push je inc mov negl pop (bad) insl push sbb loop pop or jmp pushf mov incb add inc int3 dec in dec adc lret mov jecxz dec andl cli adc std sbb dec xlat add lahf mov out push cmp out hlt jle or mov loop sarb bound mov pop sub dec lds (bad) adc xchg int3 pop lret aaa pop cmp lods pop mov divb scas cld (bad) sub ret inc pop mov inc (bad) jge mov test mov pop int3 (bad) ja int pop clc out lahf push jne pop adc mov jl or xor push je repz and mov fimull icebp (bad) xor cmp arpl jl and jae mov inc cmp mov hlt push icebp or test pop sbb and mov lods xchg adc cmp scas fcomp mov pop pop out and imul (bad) mov push ret js sti call outsb sti dec dec imul lea xor jo out mov rol sbb mov rcrl sub ss hlt pop dec aas test mov enter mov je mov and int3 pop and mov lret mov mov mov and mov adc je cli stos (bad) sarl sub pop mov push pop cmp daa rcll std fidivrl lret gs push addb mov cld pushf divl sub xchg (bad) adc push dec add dec fwait mov out xor les fdivl lret ficom push lds (bad) sbb ss pop mov jo xor and mov movsl andb ja lret mov out in cmpsb lcall cmpsl jne jg lods and fcmovbe outsl mov arpl hlt pushf and mov std test enter adc add push test push or les nop stos ret ds xchg mov sub cmpsb mov inc add sbb fsub call test (bad) cmp jecxz cmp sbb push arpl mov cmpsl aas pop (bad) and xchg or lods divl adc lods mov in push repz loop sbb add mov rorl (bad) fstl cmp adc jae out sarb scas fdivrl cmpsb ficoml cmpsl rcll cmc hlt and (bad) repnz repz clc push xor fnstsw jmp add inc mov sub jno add (bad) iret daa mov inc ds add mov and or (bad) or movsb sbb test mov test mov inc js mov cltd mov add pushf sbb fcomip loop in or sub loope jmp outsb ja lret aad scas pushl adc loop pusha out adc mov stc leave jmp fucomip addr16 ret jnp scas mov in add outsl hlt es rcrb pop (bad) scas cwtl pop fwait xorb imul rcl mov inc cmpsb insb cmp dec cmp lds adc push aad or cmpsl stos pop dec cltd call xor incl xchg andb nop fild fwait (bad) aam and adc arpl push adc dec (bad) cld rcll mov popa daa inc adc pop mov movsb inc bound fiaddl push ret jle int shrb xchg scas pop lods lahf jo int3 cmp fadd fwait cmp cmp cltd (bad) sub std fucomip sbb push in dec dec sub or inc inc mov xchg push fwait outsb mov push mov into and xor dec clc inc adc stc jne test mov push out xchg insl fucompp lcall mov or loop mov sti cmovo cmp clc xchg fdivrl icebp jne js jno sbb sbb sub mov scas and push rcrl shlb or push outsb cld flds and out pop mov ret pop loope push in bound lcall jmp jecxz hlt xchg mov add mov mov and inc xchg mov insb adc pop cmp cmp xchg loopne incb fnop rorl jecxz gs popa adc insl fs mov xchg pop jg (bad) dec xlat fnstsw movsb mov insl (bad) pop in mov dec out sub sub lods dec mov push fdivrs jno cmp add jle in out (bad) setne xchg loope inc cs pop add inc dec fcmovb scas mov popa inc lcall es mov lcall in stos sti jmp (bad) bound stc popa lods xchg out dec jo mov lods popf ja cmp shrl mov inc cmp xor cltd and mov pop nop in ret cmp mov lock dec push pushf aas mov ljmp xchg ret inc icebp lahf pop test add mov (bad) shlb dec lcall fisub in cmc mov iret lods inc negl xor (bad) popf js lock popa aam mov fninit clc fbstp jae sub pop faddl mov and daa jmp push sub fsubl sub out les cmp fs fildl sbb jnp mov jb fwait (bad) (bad) mov sub jb repnz pop jl xor ljmp adc sahf clc mov push cld pushf sub jbe cmp xor outsb inc mov and adc jmp jne (bad) call push inc lock cmp orl lea pop push mov fs adc sub push nop xchg (bad) lds in mov jmp mov test out popf fsincos int jo mov xor rorb (bad) aad and out int3 mov out xchg and int mov insl adc loop and divl pop jecxz daa out stos in mov loopne sbb jae and sub aam pop daa inc stos sarl push aas mov xor (bad) iret and add roll rolb mov mov mov leave das sbb inc adc sub and inc ret movb cmpsb insb add sbb movups aam stc mov jnp mov mov shlb cltd je xchg push insb mov mov lock xor dec ljmp xor xor aaa xchg or popa fstp pop mov std adc outsb je xchg mov adc sub and xchg push das inc mov in cld cmpsb jbe jmp int3 out xchg in test and loop lahf jb sub push icebp push addr16 sbb sbb imul cli stos ret pop or mov adc push mov (bad) stc imul dec repnz nop push push inc jecxz xchg dec mov and lret int3 mov inc jnp sbb adc sub mov pop mov mov add and addr16 mov mov fs nop xchg or add popf insl add jle out shll int3 cld outsb push and or test pop xchg in jno jg jl mov stc adc nop out sub out mov in daa jo repnz dec pop pushf loop jl cmp fsubs jl cmp jmp into (bad) jne jne pop jbe (bad) cmc repnz pop cmpsl xor dec inc push mov adc daa dec jne out add popf sbb in or adc pop (bad) repnz sbb repz mov dec or fwait sbb clc jns lcall adc into insl aas xor hlt cltd nop add subl pushf mov scas jns and pusha push ffree roll les fmul cmp aad and or cmp xchg jl daa jecxz (bad) xchg cwtl cmp mov icebp jge mov xchg rcll imul pop jbe lret jno mov aas int3 adc push test es (bad) dec mov andl mov or les dec or sbb ret inc or stc or push cmp sub mov popa mov push sti mov repnz testl jo and ffreep dec add aas cmp sbb or inc jl and jecxz mov test jno adc mov add sub mov pop pusha popf out mov stos jle popa outsb xor lods jbe push mov sti jae cmp cmp fdivr jo jecxz sbb stc (bad) xor add cltd cs push pop je int3 sub ja iret sub insb out stos bound fs scas pop out or inc push and push dec or add inc fwait adc pusha mov mov mov cmc das mov mov or mov hlt (bad) xor fs int3 dec dec adcl aad scas inc andb scas test roll iret pop mov mov xchg dec icebp jp in idiv push pusha inc xchg ficompl push push inc and loop leave insb xchg pop dec sub mul inc notl loope ror into lret (bad) dec cltd sub (bad) sub or sub popa lods cli pop mov fwait mov push mov jno fwait inc cld int push lahf mov fiaddl adc mov jnp aaa (bad) ss lea mov test mov movsl mov addr16 dec xchg rcl outsl sub or pop test scas lret rorl daa es mov inc (bad) push clc xchg xchg sub mov dec lret push mov int3 xchg rcr inc fwait sbb inc outsl scas imul movsb sub lods lret aad int3 xor pop push pop push inc xchg xchg and sub int3 cmp mov jns adc das fisub jl scas shr or jg test mov pop push sbb repnz and inc loope jae or cmc sahf jge call aaa inc (bad) push inc int3 adc test movsb in pop xlat xchg (bad) andl cmc and dec cld sbb lods mov push ret jg pop (bad) pop ss xchg or ret cmc js xchg outsb (bad) dec outsb push ret and xchg sbb fnsave jmp shrl int mov je fdivr jbe or aaa jp adc pop and sti pop stc test int repnz mov fcmovnb inc mov (bad) mov mov clc int3 mov adc aad insl loop push xor adc loopne ja xor cmpsl jns push fs and xor and mov (bad) rol inc mov je gs mov add dec adc add pop scas jns mov mov jae movsl add cmp dec pop push aaa ja adc push sub xchg sbb (bad) test or cwtl inc mov js xor imul xchg jecxz in ss lea jecxz push xchg xor js mov daa (bad) xchg xchg sbb test mov dec add icebp push xor int3 inc cltd sub mov (bad) push js or repnz test (bad) mov push push xor jle push ds mov sub xlat popf mov mov xchg (bad) aaa mov cwtl xchg xor lcall add push jecxz mov mov or lods xchg jl sub rcr mov stos push inc pop mov push push enter or stos pop outsl inc xchg (bad) fwait add lea push fwait xor lods mov hlt imul fs and dec sub jmp aaa and xchg push push scas fnstcw test mov xchg xor test roll inc xor aad mov je lcall ds ret (bad) je decb mov dec js (bad) mov sbb push mov stc sbb out push mov pusha mov aam rol movsl mov dec cld pop sbb mov ljmp cmp xchg xor mov inc mov xchg fldl inc dec (bad) jno rcll rorb jle inc sub into xchg mov aam push insl lock dec ret dec lret mov xchg pop adc dec cmp add test xlat sub in (bad) and sub jl ret mov inc jns sub xchg les mov in jbe mov test aam or stc enter add mov int mov xlat xchg enter scas dec xor push (bad) test aad pop or xchg call cmpsl xor arpl mov cli add add ret xchg lods mov sub stc pusha mov and pop dec jae push and mov andl test adc lcall sub movsl mov shrb sub cltd lods out test jnp test xchg mov pop hlt mov push jecxz cmpl mov shll sbb dec mov rcrb mov (bad) iret out dec push sti push enter mov xchg add pop dec fisttp sahf jo outsb dec sahf hlt (bad) cli sbb add ljmp daa pop insb mov aam out out ret add push scas es icebp in jno aas or jmp mov sbb cmp imul jp (bad) push dec jmp sbb repnz pop (bad) (bad) xor inc stos push mov ds loope (bad) dec mov xor jmp cmpsb jmp nop and xor push out lods pop imul addl and pop imul add ljmp mov push lea out fildl int3 xchg dec xchg jmp in mov push cmpsl leave ds movsl outsl xor mov mov pop stc cmpsb clc rcll cmpsb or adc sub and mov aas les mov mov in or add fcomps or push cmc int3 repnz lea mov inc scas inc fimull fwait pop insb mov jmp push push or sahf sbb and subb mov je cwtl insb das cmp inc (bad) out popa popf dec test and dec shlb outsl cmc movsb xchg js or loop inc fidivr aam mov add repz ret jecxz adc push outsb fidivr fs xchg int3 mov fildll inc jp pop pop xchg sub (bad) inc add hlt push hlt mov xchg adc jmp icebp stc fildl adc xchg cmpsb sti add mov or cmpl je ret fnop push jo and test mov lods aad push push outsl pop add out (bad) xor add and pop cmp sbb out outsb pop add movsb cmpsl jo pop arpl cmpsl aaa (bad) lds dec sub aaa cmp setnp mov xor xor mov pop sub mov pop mov push sub subb stc push push nop mov push lds jmp pop push out cmp scas adc add adc cmc mov fildl lods lret lret aaa adc gs and pushf inc mov test mov sub (bad) pop push mov sar arpl iret and and pop ja rep enter xor push cmp in ljmp fisttp cmc outsl sub int sarl mov sbb cs xchg and xor ffreep cmpsb roll mov push aad lds cwtl xchg fstpl fist imul inc leave jnp mov outsb push xchg push add test and xchg pop int ja inc mov bound aad dec pop lds lret adc mov fnstsw mov add rcl shlb mov lahf scas mov aad mov adc cltd pop dec shlb pop push and lcall out add lods mov inc xchg sub shrb leave into andb xchg jae das cmpsb ss imul ror cld lea orl rcrl out cmp into (bad) dec mov cmpsl test cmp dec xchg xchg inc and mov xchg jecxz push fbstp pop mov loop jno cwtl cli lahf dec cs or jno inc adc mov lock loopne sarb jg incl or adc daa lock loopne sarb jg (bad) fild femms repz or mov roll add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repnz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push jp or add adc (bad) mov fldt (bad) (bad) mov fadds std ffreep (bad) out out jge jo add or inc mov sbb jb and pop pop fstps insb and push jb pop cmp shrb fsts jl stos pop aad ljmp rorl scas movsl jecxz ficoml jnp hlt and cmp sbb test push jl (bad) xor jmp loope (bad) fsubrp sbb sarb pop jns lea and outsb sbb sbb pop jno add pop push mov pop sub lods aam lcall sti jb (bad) dec push scas loop aad adc xchg stos and es shll cmp leave jo add mov mov in and push mov enter cmp dec fdivrl aas je and imul jmp adc adc into add adc pop (bad) pop shrb inc (bad) imul cltd scas push mov lret nop jp sbb cmc fs jb and pop addl lods jo mov call jnp push pop fst inc cmpsl cmp push or sti adc inc xchg mov sbb test mov insl xchg and and lea (bad) scas and mov test (bad) xor lea jo sarb mov mov bound insl cmp aas mov mov adc ljmp lods pop jg jecxz mov enter ret fdivs and xchg (bad) data16 in or sbb xor adc lea lds inc (bad) leave (bad) aas mov sbb aam or cmp negb (bad) scas push inc xchg cmpsb push bts inc pop xchg (bad) nop cli outsb bound (bad) loop mov shld js mov aam int or insl sub or icebp cmpsl lock sbb fisttpl scas fild fmuls sbb xor sti jecxz in sbb mov mov gs les (bad) sbb stc rcll sar pop stos add mov out jl mov (bad) pop push cmpsb hlt or leave push ret scas enter sbb cmp fs add adc (bad) stc mov and push xlat sbb ljmp ficomp mov or dec inc push cmp add outsb xor push std mov mov (bad) sbb cmp clc test movsl push mov mov shrl cmc iret cld repz sub pop mov icebp inc mov hlt aas sub jg insb xor out shl fcomps adc mov fwait pop imul mov pop (bad) jno sbb dec cmp out ret jmp mov mov cmpsb jmp or aam push add xor ret push leave ljmp ret test clc sub xchg adc sub dec adc jo mov mov xor cmp fidivrl cmp insl test insl test in push ja lahf (bad) cmp lds sbb cmc mov (bad) (bad) fs ret jp mov mov lds (bad) cwtl fdivl and aaa imul int aam dec test inc into lcall and dec gs neg push fstpl inc in int3 ja adc (bad) mov dec add flds frndint push roll xor mov imul lcall push jbe out jns mul lods insl fldl icebp cmp mov loopne xchg popf bound adc sub dec dec or aad ss stos mov scas enter push and outsl call mov addr16 ds aas mov mov inc call addb mov push xchg insb icebp mov jae pop push pop pop lret sbb pop mov cmpsl add stc fisubl adc sbb xchg int3 xor (bad) jbe ficom test mov xchg cmc add adc mov daa xor aam sbb call push jmp xchg ljmp jecxz push push lret sbb pop jp (bad) aam add and mov std lahf cmp jns mov pushf mov xchg cld add or mov and loopne push loopnew ret bound rcl adc mov outsw lods (bad) stos ret fs faddp out push insl loopne mov pop and dec ljmp pop mov call ror xchg incl dec jno push pop mov lcall pop fisttpll mov add or pop mov dec lock cmp mov add sub mov insl push je cmp push in xor adc add out stos aad stc xor inc adc pop mov and cmc add push push mov aaa mov and mov dec scas cmp cltd js jecxz out std jae lock lret add pop jne jne,pt enter mov ja rorb orl cmc je xchg outsl into cwtl out jg cmpl enter cltd cmp adc mov mov stc lahf les inc (bad) aas xor push gs cwtl and inc cmp push or lret aas movb and outsl fildll push mov xor jns insb mov mov loopne push push dec mov jae and or mov lahf outsl cmp int fs (bad) sub cltd xchg mov lcall jno ljmp jge mov xchg cmp xchg mov xchg push les in jne cmp ret inc cltd and ret ljmp lods sbb orb sub mov in mov js adc sub imul inc js mov or iret pop push mov std int3 cmp pop sbb push pop stc cmpsl dec push push dec int mov mov imul dec pop sahf sub lahf aad cli in mov imul rcr push push pop push (bad) mov int insb mov mov or movsl jmp inc push repz jbe sarb inc and inc stos adc add (bad) xchg cld or adc ljmp adc es sarl shll pop fnop sbb push out stos (bad) leave test mov test pop or jmp xchg imul fisub inc sbb data16 pushf ja das sahf repz test sahf (bad) fisttp or pop cmp lds outsb call add repnz xlat or data16 adc rclb (bad) xchg lea inc or xlat test push or dec pop in cmp shl dec andl scas mov dec rcrb outsw cmp mov (bad) sbb incb mov testb xor and out or shrb mov cs sub jno loop cmpsl push lods xchg test jne push adc mull xlat iret dec clc out fadds addb (bad) js jne dec pop out les jae mov into adc xor ret sbb es and call cwtl add ret mov fs cmp jb sbb xlat mov jne lcall out shrl mov pop add in pop (bad) cmc xchg mov (bad) ljmp push dec imul cli lock sub ss lret aas (bad) cmpsb repz imul lret dec or and out sbb ss and (bad) jle daa shrb (bad) cld pop icebp add or pop dec push lock aam inc pop xor stc out cmp out bnd push adc sub sub int3 push idivb out cmpl pusha xchg (bad) loop inc pop cmc ret popf jnp enter movsb into sbb icebp jns and sarl ror out inc inc jno pop lea sub and sub and push mov movsl sub xchg mov push jae jne test fmuls popf mov xorl dec into out xchg popf jb xchg repnz hlt bound js pop and pop stc bnd gs or mov stos cmc in sub insb data16 sbb xchg out cmp mov mov cmp push fs cmp cltd loope mov sbb ja pop jmp mov pop and xlat adc ret outsb daa add xchg jg lock mov in (bad) (bad) pop inc xchg out cmc aam or cli dec and lahf mov femms adc lods jge loopne jae test (bad) insb push mov in xchg mov enter out ja xlat cmp jns sbb repnz rclb fisubl inc mov push jmp dec loopne out mov or xchg scas stos jp mov mov lea jae pop addr16 push in cltd idivb rcrb xor mov cmpsb xchg daa gs in sarb sahf xchg cmp xchg jnp icebp clc push loope in loop in dec data16 xchg dec pop out fwait mov inc dec pop aas sbb adc outsl or sbb das sub push lcall mov rorb jae imul nop incb popa add lds fdivs cmp and sbb je or cmp mov ja stc add lods inc jp in std loop cli adc sar mov call pop add jle outsl pop pop push cmp les and lods (bad) fcomps dec xchg and jp jmp sahf sbb stc repz jg in xchg add cltd jmp pop fisub dec sbb pop pop xchg pop mov sub aad ret loopne aam add pusha movsb mov cmp in popa push sti dec ljmp push (bad) hlt sub fdivrs cmpsb sahf scas out push adc push mov cmovs popf jmp lea adc pop and btc dec scas jo rcll xchg xor pop xor pop adc ds mov sti xchg cmpsl sbb rcr rol test pop js jg mov in stos popa scas jmp push in sub (bad) xor dec inc (bad) jne in cmp add int3 cmc adc sub lods sbb hlt les out rorb lods and hlt mov fs mov jo jns lcall cmp (bad) jp scas jg or lcall cwtl mov pusha xlat jbe push inc push movsb mov dec sub iret mov sahf push imul pop into jecxz push nop xchg inc jmp repnz cmp xor dec mov scas mov xor pop cmp add out (bad) mov push adc ret aam mov adc (bad) cld sub insl xor popf push or jp (bad) (bad) mov aas (bad) rcll inc sbb push in inc je cmp ds clc (bad) jbe sub scas cmp push push jge sbb repnz popa shrl xor in dec adc xchg cmp popa sbb mov xchg ret mov mov (bad) sub (bad) mov mov enter rcrl dec cmp out sbb adc adcl sbb mov jg pop mov stos popf mov ja dec mov pop stos cmpsl int3 mov inc iret xchg dec push pushf out stos cwtl enter cli dec sub sarl mov xor imul scas ror inc pop out dec xor gs mov in cli addr16 aad cmp dec mov call adc pusha adc jmp mov cmp (bad) imul jae push sbbl xchg adc xchg or in ror push sahf mov sub cmp sub inc mov insl aas cmp icebp test leave cmpb enter mov or inc popa and push push sub lret adc ss xchg jb dec sub dec jp fbld fbstp xchg test sub in fadds push sub xor adc xor sbb aaa stc (bad) push movsl mov push cli mov and (bad) mov push popa out or std push mov (bad) pop push jno sub cmp mov mov sbb ret push icebp out test mov cmpsb mov in inc (bad) push cwtl jp jle or ja cmp inc jno clc incw cmpsb mov insb hlt sbb test mov jnp aas bound sub fdivr cmp repnz loope sub add push ficompl jo sti and adc dec mov mov push flds movsb add cmp mov cmpsl insb cmp dec (bad) imul stos sbb sub sub gs xor mov lea aaa inc pop pop lods sub aam push dec adc cmp or mov xchg cmp outsb rol jae or push jno sti dec cs or add (bad) jg mov adc dec movsb lcall ret dec loop in mov (bad) jg lods clc push add fcomp (bad) xlat mov in xchg adc insl movsl ja stos scas sbb adc pushf in add or ret stos push mov into bound mov nop ror into jae xchg leave pop (bad) jns and jns mov bound push xchg sub push lahf rorl and loop cmpsl pop mov icebp icebp xor in gs ss mov or nopl stos cmpsb imul pop xchg out jns fwait (bad) and dec je cmpsb std lods jnp sahf pop (bad) push sub ja js and push push lods mov stc xor mov mov outsb inc cmpsl enter inc sbb sub nop xor outsl cmp sbb mov lcall xor daa out in jge dec push (bad) pop sahf lcall pop lahf inc aam into mov fwait jle out cmp jle cltd mov inc cltd or fnsave jl popa push pop jp into mov mov cmp mov in push and ja jmp shl sub xchg push (bad) cmp xchg sti sbb push aas dec fucomp enter jge stos out cltd ror pop imul xchg faddl js mov xchg in andb xor rcll js pop psubusw mov (bad) mull gs sbb pop out xchg jmp into cwtl out cltd test enter xchg (bad) or and mov leave and negl and (bad) pushl mov and cli cmp (bad) enter movsl roll jl movsl out iret pop popa jp cltd ret orl test pop mov fwait sbb pop call and jns mov jae xchg push xor inc add stos mov mov xchg inc clc sub fwait out test xchg xchg sbb cmp popf mov imul sbb (bad) insl mov mov pop fldl2e ja clc call lret add scas dec insl decl int lcall daa inc mov incb jns arpl xor fdivl pushf sub das aad inc mov xchg xlat aaa insb push aas sarl push nop mov adc add jns jbe aaa jmp inc push scas xor fwait mov pop je jecxz inc pop in or xor (bad) jbe mov lcall mov xchg mov into (bad) sti cmc or xchg icebp xor mov nop ja stos rcll jo fwait xor add push push cli loopne mov jbe arpl adc xlat aad cmp sub mov cltd sti dec mov cwtl push inc in in call test jg insb or mov loope lret sub lret pushf add mov int3 mov jnp (bad) pop mov pop nop fcoms dec jne and ljmp xchg sarl rorl outsb fadds cld cmp mov test hlt (bad) ja jnp lcall movsl stos dec lret xchg mov xchg push dec out cmpsl push xchg push int3 sub jne xor ror push aas xchg xchg enter xor pop jmp push outsl mov mov cmpb jb lcall mov sti shll (bad) fwait sahf ss test lret mov test push push movsl shlb sub into test adc sbb aas jp jge insb mov push cwtl xchg inc (bad) ja cmp les push leave in test mov mov sbb idivb out adc dec jle add cmp fstl cmp xor lock aas and (bad) or and insl cmp push rcll enter (bad) pop mov mov arpl lock add in sarb mov mov addr16 fwait xchg adc inc mov ljmp push test fdivl cmp stos adc aas add popf sub cld mov xchg xor adc pop xchg push pop scas mov adc sbb push loopne xor adc pop clc sbb movsb inc popa sub aam fisubr jle stos es mov enter mov sbbb mov sbb xor int pop jmp sub ja push and sbb loopne ljmp loope add sarb addl repnz push into andl pushl rcll and mov push aaa lock pusha mov xchg ja ret cli int lods pusha jle pop loop lcall inc push cmp test in mov pop inc mov and nop mov aaa ficompl incb xchg xchg add xchg (bad) jge xor arpl cmpb movsb inc (bad) sbb arpl mov sbb mov cmpsb mov lret dec clc aas push xchg mov aad ficoml dec test aam call movsb in daa pop push repnz push pop cmc icebp sbb add mov mov lea jge negb add std enter inc sub mov mov (bad) pop (bad) imul or mov inc jp ret mov jle xchg xchg sbb cwtl push adc stos gs cld shlb or sarl dec testl stc ret scas aas leave mov lea inc push push mov mov pop xor call pop fdiv mov pop lcall (bad) int3 mov jnp popa int3 adc sbbl adc cmp xor mov (bad) call iret xchg cli push add les sarb data16 jb mov addr16 xchg pop jb and jmp mov outsl mov and imul pcmpeqd movsl fs or xchg out pop fdivl lock fcmove mov pop jno sbb xchg rorl imull clc adc loopnew,pt cld xchg and insb ret jl das pop mov cmp and jmp imul jnp adc inc sub sub add test cmp or enter (bad) push test add xchg jmp addl push scas sub xchg bound (bad) lcallw mov lret xchg or cmpsb hlt call jno sahf (bad) fwait push xor clc pop mov adc push imulb mov mov xchg es pop stos mov test je jo mov jne mov xor xor imul cld dec mov inc cs sub (bad) pusha pop popf test mov mov inc jge (bad) jo adc fadds out out and loop enter mov aas jp mov stos xchg inc mov insl push cltd fucomp notb aaa push (bad) iret lock shrb fstpt add ljmpw int in imul inc xor movsb rorl push dec jae jmp xchg sarb lock dec sub insl mov push sbb or sbb xor (bad) xchg xchg clc and mov xchg jp insb mov dec ss cmpsb fsts sarl mov ror mov shlb mov mov xchg popf repnz dec repnz pop jo mov aaa dec cwtl out sub fistpl add cmp ret adc arpl inc pop jne inc mov xchg inc sbb subb movl jne imul and xor mov mov lcall jmp dec xchg push jns inc pop mov xor subb and push dec or lret cld loopne lcall icebp push fcom inc inc scas cs lods push dec addr16 lds cmp mov mov es jno inc push in out pop sub divl je and shrb clc aad add mov pop adc dec pusha fwait outsl (bad) sub inc (bad) or xor pop and pop pusha maxps lea roll mov les shl or ret mov sub jmp pop pop sub in cltd icebp insl dec mov lods leave (bad) mov push in jae mov stos push push les subl stc fimull push fist sub adc jmp jmp cmp lret clc adc adc pop dec sub xchg insl cmp sub jl jo movsl inc xorl popf fwait mov cmp (bad) repz jns movsl loope gs xchg cmp mov jmp mov outsb mul cmp xor push fnop pusha and jg or iret mov cwtl xor add pop dec jle cmp aam in loop mov mov sbb pop add inc mov push push jmp push pop sahf imul mov xchg into mov (bad) out enter pop movsb mov cmc cmp out pushf lahf xchg (bad) pusha xor push leave hlt pop and movsb jb fcmovnu lahf ja push xchg (bad) jno inc sbb inc enter outsl push sti and loope inc or cmp out jmp (bad) or and in push loop cmp jmp xchg adcl cltd sbb add sub fsubr inc add inc xchg (bad) in cmp inc arpl jg sahf sub mov push cmp sbb sbb mov (bad) ja push sbb and add dec inc into in push fwait add push dec add and dec pop rcll inc lcall ss and outsl lret push insl inc icebp mov mov xchg inc repnz pop pop in xchg jmp inc xor pop in mov cs mov inc dec mov hlt sbb and mov js (bad) in imul or imul sub outsb mov push (bad) xlat pop xchg out mov pop mov add loope cltd xchg (bad) push mov outsl insb push xchg cmp dec sbb jno cmc out add scas cmp lcall jge adc mov jg or pushf push mov and or sbb (bad) scas das and les sub dec or ljmp out insb adc jmp addr16 push xor mov rcr pusha arpl push mov jnp jle lock or ss enter rorb rcll xchg int3 xchg mov sti gs inc push xchg mov mov jp sbb imul dec jge or mov push jo dec mov dec leave mov mov ljmp add push cmp nop popl imul movsb cmp repz cltd psllq repz mov sbb pop xor imul sbb insb repnz dec loop in mov out (bad) xchg add adc enter ljmp jne lahf pusha stos pop jae jne insb iret xchg sbb outsb mov mov leave and aad cmp or dec pusha mov dec and jnp jmp dec sub pop or jl add aaa and xor shlb data16 xchg or push cmc push and add bound or test stos xchg dec cli scas shlb loope push push sub mov jmp outsb js mov pop push sbb ret testl mov dec lods fdivr jmp sti mov and jns dec iret inc into rorb gs scas imul inc and sahf mov std adc pushl ficomp pop push xor xchg std mov cmp stos in jle jae (bad) dec (bad) leave adc cwtl ljmp mov cmp iret cmc das rorb pop movsl rcrl cmp jbe adc and fcmovnbe push pop dec or dec stc movsb mov jbe das dec (bad) dec jecxz add xor xchg roll push mov lahf xchg les jge das push cmpsb xchg or cltd (bad) in jo mov negl push in repnz inc loope mov cmp cmpsb popa neg decl adc (bad) mov mov std dec mov inc mov lcall push xchg ret scas pop dec jl fbld ret clc inc push dec es decb out les adcl mov pop loopne push and dec jg repz cwtl iret in insb sbb pusha sub fs (bad) fadds sub adc jp lods cmpsb jg int3 sbb lock mov or cmp xor (bad) paddb ret jns push fmull movsb inc dec cmp mov or mov xor sbb dec or pop sbb inc sbb rcr mov pushf insl inc scas xor js (bad) out sub pop (bad) adc dec loopne cmp dec loopne cmp dec loopne cmp dec loopne fwait sar imul add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repnz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push bound mov mov fistl mov (bad) sbb insl fisttpl (bad) push in (bad) divb pop das add add add divl cmp call neg cld mov dec cmpsb pause or in pop and ja sub stc mov sbb andl clc push mov jae inc in mov sbb fsubr jle sbbl lahf aaa pop xchg dec add mov xchg xor (bad) icebp je psubd test stos mov lret lcall sbb imul data16 cmpsl adc iret jecxz in cmc pop jne ds mov icebp lods out jae and repnz push xor jno xor jns cmp jge pop pop dec movsb fwait xchg push jae rclb adc insl pop xchg orb mov add pushf imul or push (bad) icebp xor in mov mov inc xchg pushf push idiv jno inc icebp sub inc insl jle fldenv ljmp inc push cmp jae mov test cmp test pushl jmp lds popf ja xor xor fwait leave and push bound std mov mov xlat lds xor cmp hlt sub hlt fstpl movsb mov cmp sti in daa add cs inc data16 push gs and cwtl fmul push lea mov popf jno cmp cld jle cmp pop es mov jge push leave dec je jp bound je imul mov aaa jo add adc inc int3 xor or test xchg scas push pop sbb mov (bad) int mov repz inc push pop jecxz push mov int3 xorb (bad) jge push sti and fist out lods ror int3 pop jmp (bad) fidivrl loope fsts xor into loop sbb xchg jnp sbb cmp lret dec mov push and fwait or sbb (bad) es xor movsb sbb sub dec iret lods push xchg adc push adc mov xchg pop mov inc hlt mov or push mov mov int3 add and mov and pop rcl bound leave (bad) jb in mov decb pop cwtl shlb in xor imull sahf add push xor jge fstp xor lods pop inc in inc xor jbe test jnp cmp push loope push shrl and outsb or pop sub dec outsb fnstsw cmp ret lds mov adc push adc subl aaa rorb mov cmp push fiadd jne xchg add test or inc push les xchg daa jns jbe ja cmp mov (bad) mov pop or xchg adc inc notb push ret mov out jle push xlat scas xor dec mov xchg repnz sub lret mov (bad) cmpsl (bad) or call push xchg inc and xchg mov mov ds insb inc mov sub xor neg sbb fwait outsb int pop (bad) xor (bad) adc mov and test pop push lret add fmull dec inc (bad) mov adc jo or into mov xor or je icebp lods movsl ficoml xchg in mov mov and repnz sub mov lahf fsubr imul notb and inc add std jp mov shlb sub notl jns or mov adc mov mov xchg or shrl jmp sti loop lahf (bad) dec pop xchg jno mov ficoml xor fs icebp cmpsl ret mov push fs sbb fldl and mov in stc loope addr16 pop dec mov jmp gs loop xor pop cmpsb stos in (bad) jbe jo jmp sbb loop pusha jg fwait sti mov sub cmpsl push mov out insl cs sbb dec xchg ret sarl sbb scas fistl fistpl dec enter cld cmp cmp push int sub clc cltd jo and lea mov fsub mov dec rorb add or push fisubrl adc xchg xchg sub add aam or and test stos js,pn test daa outsl add inc (bad) out insl cli sbb int3 movsl clc inc dec mov mov mov lea or scas push jns lods xlat dec xchg push sarb les fstpt movl xchg jnp mov loop push pop stos inc cmp in and add fistpl insb mov fistl fs dec popl push fxch jb iret dec cs loopne stc arpl shrb inc sbb mul iret jg dec mov or xor clc lcall imul jb mov sbb adc ror pop imul mov or fstps sahf mov js outsl mov clc mov test int imul rclb sub adc adc push jne daa mov stos push (bad) mov (bad) aaa mov xchg or push push dec pop jno jmp jae mov xchg sbb ss test adc sbb hlt push jmp movsb mov sub into sbb out inc cmp mov enter sub cmpsb jge sub pop jmp xchg (bad) adc mov xchg cmp sahf insl test loope lods and cmp (bad) (bad) jo jp cmp dec sub cld rclb cs mov xor mov add push push mov test mov mov pop test rcrb mov xor cmp mov (bad) fwait insl xchg push adc and jmp cmp sub (bad) sti add (bad) mov data16 mov xchg mov mov mov add jecxz or in or jge shlb sub jbe test loopne call cld mov xchg push mov mov push cmpsb push inc rorl or cs in sub lods xor dec mov mov divb cwtl push jmp sub inc add popa pop lods adc sbb mov es arpl mov sbb mov scas aaa and out cmp sub ficomp into and inc mov ret (bad) jo xor adc dec xchg js jge mov push insl jb les nop scas int xlat xor aad in in lcall and insb ret test sbb cmp xor fcom jge push lcall jnp (bad) addr16 orb dec inc jae mov fs (bad) add adc jbe lods sbb and jne push pop xchg lret ret ja inc leave dec push mov das sbb or inc ljmp rclb in popa pop lea int3 outsb movsl xchg or adc and fnstenv lret bound xor data16 aaa sub mov mov stos leave ljmp in in dec in push add dec ljmp mov sarb mov icebp mov xchg loope jecxz inc enter mov popf adc bts subb leave add test mov cmp repnz push pusha imul fisubrl ja xchg mov mov (bad) aas dec xchg sarb insl lahf outsl aam ret adc pop (bad) add dec scas jp cmp int3 cmp adc cmpsl jo dec insl jno mov nop rcrl rorl mov out add lea in sbb stos jno gs loopne mul outsb insl bound or addr16 outsb jne sbb sbb cbtw sub adc sbbl data16 xchg fwait std add (bad) mov jecxz push pop add and (bad) and push inc sbb xor xchg jnp dec cmp xchg xchg mov or fdivrl fs std and mov sbb or xor (bad) ds addr16 add jp insb cmp icebp add das call lret push test pop adc gs dec xor repz mov ja inc enter xchg dec lcall negb test jg (bad) loop (bad) pop out aam mov mov and pop add test xlat loop dec dec pusha jg sub cld lods (bad) mov xlat stos (bad) notl inc mov insl mov leave outsl sbb add and (bad) in (bad) push adc jle popf test scas repnz xor (bad) leave cmpsb (bad) jnp sub idivl test (bad) mov test scas sub xor sbb adc cwtl push push call push pop lock (bad) pop sub mov subl dec sbb es pop pop sbb pop dec aas cmp (bad) dec push pop das into sbb shrl dec test out daa jne jp inc das cmp mov add xor or and or shlb jne lret popw jno xchg sub xchg leave jo out data16 int3 daa rorb mov xchg xchg cmpsl iret lahf inc (bad) sbb pop fstps sarl subl loope cwtl jp lods icebp (bad) mov dec dec (bad) out jb jmp sbbl mov int3 lret hlt sahf xor call mov lock (bad) js sarb test cmp push push scas sub into pop lea sbb aam lock dec cli and dec xchg add mov cmp sahf std jnp jno int3 in cltd gs fwait cld cmp jl test inc inc lods rorb mov lret sub fistpll or pop stos insl imul inc mov in or mov jecxz jns add fwait mov jg sysexit mov sub xor cmpsl into sbb stos sbb mov cmpsb outsb rcll dec (bad) cmc pop aaa mov lock sub pop stc inc mov sub push (bad) mov push les popa xor test xchg xor dec lret scas std xchg js pusha rcrl xchg sbb mov dec add fdivs or xor mov dec lods and ret jnp or jne ja or inc ret test inc (bad) test sub sub xchg addr16 cmp adc cmpsb (bad) push movsl jge subl jbe call bound test popa test cld xchg cltd mov push adc bound or out inc and mov popa sbb das mov pop fldenv pop rcl call cmpsl fstpl (bad) leave cmpsl push aad insb stos cmc sub ret sbb test mov add mov push sub xor sub adc xchg iret jg and inc aaa push inc jae inc pop or xchg jl iret pop inc mov sub xlat fwait sbb sub in (bad) jle jp in arpl and pop add mul dec loopne mov out pushf ret (bad) imulb push fistl adc sub mov loop std fild loop divb lahf out test scas pop pop js mov jmp xor out ret push in stc dec pop loop imul rorb inc movsb popa mov rcrl push cwtl inc in or jl gs insl cmp mov jmp xchg jno push xchg add insl dec ret and pop fld cld sbb pusha arpl cmp outsl add fsubs movsl mov (bad) (bad) in in icebp xchg add mov and sub sbb adc sub xchg pop (bad) out pop lea xor repz push call inc ja cli push out xchg mov in inc or jge dec mov stc xor mov ja pop aas addb lret out fwait push mov fwait ja or je jle cmp mov frstor outsb aas daa ror dec cmpl fisub push or jmp cmp cmp fdivr adc loopne xchg fs fstpl das jecxz pusha jmp push jno xchg mov dec roll stos or cld xchg hlt (bad) mov fld push pusha cmp ss cmp loop mov test sbb ljmp rcrl sbbl lret pop outsb sub push leave stos stos xor and cld mov mov out cwtl rcrb jle add (bad) and out sbb pop inc jl inc sbb and mov dec xchg pop mov mov push js negl lret iret daa (bad) mov add test aaa mov cli sub pop leave pop mov fs pop add pop mov dec jnp dec (bad) rorb push pop lea sti xchg je pop adc mov test jp sub sbb or mov aam call adc pusha ror or jb ror leave adc loope push dec mov aam sub iret push hlt jp and popa fwait jg icebp lea push dec xchg pop ss out push incl clc pop or popf push fs push mov (bad) outsb cmpsb adc not aas and mov insb (bad) pop mov mov or sti jp cmp cmp out add (bad) adc xchg and aas and jb stc imul clc test cmp jl std inc repnz xor ja cli jecxz pop jmp pusha mov rcrl push (bad) icebp (bad) hlt gs mov cwtl and push push mov mov jg sub mov rolb pop dec sub fdivr pop imul (bad) adc movl sub int add cmp inc (bad) mov add or in insl (bad) or clc test in inc mov fs leave lret or out jp scas adc or lea inc dec pushf icebp and sti (bad) dec sub push sti sbb repz or and sbb sbb sub xlat cmp bound aaa sub movsb (bad) clc pop lods push adc bound pop paddb mov stc fcom xchg xchg mov mov iret mov xchg insl or push in imul pop jns (bad) adc cmpsb push jp nop jns movsl or insb pop aam push push pop mov jl jae scas mov insl outsb fnsave fwait test (bad) lea mov xchg push fwait pop xor pushf and aad fwait mov push and mov push movsl cmp mov int3 pop adc push hlt sbb jl (bad) dec addr16 and xlat out js bound (bad) rolb stc fidivr push inc xor rcll inc stc cs inc push dec (bad) cmp nop or les mov outsb push jge clc scas or pop inc cmp cmp lret imulb ja rcr fisub adc ljmp adc sbb sbb clc ror mov clc cld je xchg ds ljmp jne add mov subb mov jp add xchg mov out call adc adc cmp leave adc test pushf dec sub mov imul cmpsb pop xchg adc out push cmp ljmp sub out jo jg push (bad) sub psrlq dec imul outsb loopne imul lret sub inc loop adc sbbb cmp (bad) fcom scas ds sub test push fnsave (bad) pop and xchg or mov inc push inc cmp bound or pop insb push adc pusha por pop dec or jmp push mov add inc or nop mov xchg stos mov and dec in inc jo sbb xor shrb sub pop dec lods mov insl decl negl rolb pop inc stc jae (bad) push push sbb pop jl cltd insl push sub gs aam sub call out movsl das scas jns mov adc lods fwait nop mov and sub and and stos repz pop (bad) aas mov pop sub push or mov jg xchg nop mov jno push add and jo inc jno and xchg imul add das inc inc (bad) add je lods sbb adc lahf hlt iret popa mov imulb les rol loope dec ds push sbb jne jb (bad) xchg pop lods cmp loopne lret and popfw lea jg jge mov cwtl jp dec adc rorb xchg inc aam mov sbb cld xor xchg add lock cld mov outsl arpl fidivl daa movsl cmp scas cmpsl push and jmp mov mov mov mov mov std pushf sbb mov movl dec frstor sbb iret arpl push sbb (bad) (bad) pusha in out cmp cmpsl imul mov xchg jno repnz sbb mov sbb dec push (bad) ds pop insl jnp jp fbstp mov xchg out mov pop test pop hlt add dec dec jno pushf enter mov mov or or in push pavgw xor sbb xchg push push test leave fdivl pop leave xchg bound and dec pop pop and xor aaa pop std or hlt cmp push push in sbb mov out sbb loop jae test ss jecxz ret data16 push mov nop xchg in (bad) adc stc mov inc out enter stos add xor inc or in inc repnz pop adc dec (bad) shrb inc dec adc clc mov lds stos xchg cmp sub mov je mov lret add xor lods xchg adc mov fnstenv jle sbb lea outsb pop mov push or xor lock hlt push inc pop jmp adc fldcw popf add bts in sbbb cmp or das mov iret push hlt mov pop fnstsw xlat and sarb movsl divl mov loopne (bad) stc stc ficoml and nop loope xor add or pusha dec (bad) outsb (bad) dec mov add das jle stos cli mov adc (bad) sbb push pop cwtl xchg inc daa xor sbb sar inc xor jbe (bad) movsl (bad) cmp xor insl cmp adc push xlat int pop andl mov loope add xor and pop adc imul jbe inc pop mov jo xchg inc jo cmp test ret pusha inc pop lret sbbb fcoml loope cmp outsb mov inc stos (bad) daa cmp movb inc inc jle sub lea test test cmpsl dec cmp add lea sub pop lret mov mov std push inc inc adc jle cmp xchg out sub gs inc inc add push popa (bad) cmp or xchg inc (bad) or pop (bad) in imul or fwait idiv mov cmc (bad) lods cmpsl pop inc lret push pop fnstcw mov mov (bad) fcmovu mov add (bad) int xor xor or push iret imul stos and jo mov cmc jle and push ljmp dec fs fcoml jmp jbe xlat lahf fwait mov or sbb mov mov xchg (bad) ficom sbb mov in add xchg lret mov xlat stos pop test add xchg sub into or stc leave sbb insl shl data16 and dec fidivl fxch (bad) pop cmp mov sti dec dec pop cld mov xchg xor xchg and push movsb push pusha mov mov and stos data16 xchg add xor sti jl sub sbb scas hlt inc or out cmc jmp decb mov pop mov and xchg or and iret into aad mov or push jo dec movsb enter outsb push pushf xchg add inc mov lcall push out je les imul jecxz and lods ret mov fstpl mov push jl cld jmp push out dec xchg rorb and pop or mov cmp xchg inc and dec inc xchg outsl test or rcr pop jae jge fistpll clc mov outsb (bad) jb jae in loopne outsl (bad) push movsb push mov dec ficoml mov push sub je daa jno inc outsl (bad) adc sti fdivrl dec dec xlat pop pop mov push or inc xor xor mov mov and in cmc rorb mov shrb mov call sub inc sbb mov sub ljmp (bad) sbb pushf jae mov iret mov push data16 scas test adc xor mov aad into outsl mov sbb cmp std cmc pop cmpsb xorl push sbb jbe das das mov cmpsb push or gs ds adc outsb push popf dec ret popa clc fiaddl add or sub and jnp inc inc (bad) jae mov aad ds shll mov test leave sub push rclb inc mulb js xchg fisubr nop imul imul notb jo bound sbb xchg push mov aad xchg push mov sub jb out pop xor sbb dec push sbb popf jp add jge jg hlt scas out lods imul leave sbb ss mov mov popa jp push jmp jb cmpsl cmp jmp sbb popf paddusb outsb mov sbb clc jmp pop mov aam fwait mov xor out movsl push loopne enter aas int les push faddl xchg cld xor cmpsb int clc (bad) lea or cltd push (bad) dec mov fstpl mov pop ds loope imul lods jmp xorb stos ljmp ret in jbe (bad) lock (bad) mov xchg sti mov andl in iret adc add and xor fbld add fwait movaps mov jmp fwait inc adc push or arpl push inc sbb and repnz into pop and sbb and aaa pop dec ljmp adc mov cmc jno xchg mov and xor push movsl lods pop insl stc ror pusha andl ss ljmp fisttp and div pop dec aas and ret out or add or sar mov dec mov dec icebp push jl scas sub dec xor adc (bad) xor test push ds push pop add xor popa rcr cld out ret pop mulb idiv out leave lods pop xchg jl out lahf or xchg in adc pop dec xchg xchg pushl fcomip ljmp inc push inc adc test xor sbb jnp cli mov pop inc ds inc and push pop int3 fildl pop js dec hlt sub dec jmp lcall lock ljmp inc (bad) (bad) (bad) in fisttpll jg inc hlt push sub mov in fwait xor adc mov aam jns pop jp mov dec adc cltd fnstsw push aad mov mov daa jle idivl out int3 pop xchg in dec mov or push mov jle je xor scas jno insl jle or movsl cmpl sbb loopne adc fistpll inc stos mov test mov mov fldenv mov outsl (bad) aam fbld adc jmp clc sub subl int test sbb fucom inc sbb and test mulb or or inc mov sbb jmp dec lahf add movsl xchg iret out jne xor fadds jo imul sar inc je jo xor std repz (bad) xchg jns mov mov jns dec out pop cli xor jge cmp pop fstp mov ds lods stos jo sub jo into sub push scas insl dec data16 insl pop jbe mov aad out dec in pushw mov inc xchg (bad) notl fidiv mov scas mov mov sti or bound lock loope pop ds clc loopne mov pop frstor cmpl stos dec popa (bad) push inc push push xorl out pop push and cmp rolb fs cmp inc sub pop add cmc push jle stc nop call sbb insl mov dec and xchg (bad) cmp jno outsb adc daa leave dec mov sar popf xor repz mov gs inc push loope popa push std adc scas dec rclb pop inc jbe mov push ret mov or ret in iret dec mov inc lods outsb ljmp (bad) dec pushf cmp push movsl mov adc xor movsb shrl fs xchg or adc and out movsb je (bad) xchg dec into mov fucom movl or inc ficomp popa jecxz test ljmp and adc pop adc mov cmc jne sbb in jg test jns out xchg push mov jbe adc loopne aad insb or (bad) fnop xadd in add xchg stos cli lods ss cld je mov add push scas add xchg pop insl xchg inc inc cmp out lods jmp cmp dec loopne cmp dec loopne cmp dec loopne cmp cld pop sub and shlb inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lock add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov test inc push push inc sbb xchg insl (bad) sub int mov lret ds ss pop mov (bad) repz divl test out sbb mov mov push push dec (bad) mov fwait push jmp fsubrp and lret sub mov sbb outsl pop (bad) std jae pop insb icebp lret sub outsb jb or push push pop add scas out idivl loop push mov faddp scas das loope and in lock inc push sub gs test loopne mov mov or cmpsl leave fcom pop popf pop ljmp (bad) push mov jl rolb mov xchg inc xchg dec fs mov push add mov or (bad) mov test dec jl stos jg (bad) aas mov call popl cmp pop mov pop outsl pop xor movsb rolb lea xchg fcomip pop cmp and dec (bad) cmpsl push and inc js leave cmpsl mov mov test imul out dec push imul and pop jp call fstp push xchg dec add stos add lds mov xlat cli insl cltd es imul sub cmp addr16 xchg shrl out ss xor inc call clc test xchg in push loop lods pop aad fistl dec jmp dec or scas dec out jbe jo inc push in push mov scas jmp rol mov bound sub push je mov mov mov stos lock push sub movsl pop mov movsb mov in fsub nop xchg out out mov add mov add sbb dec lea ds icebp mov aas dec sbbl dec push and sub sbb out dec jmp popa lds sbb fnop xchg cmp sbb pop xor gs mov bound cmp mov fstpl inc jp mov in rclb popa outsb mov xchg add pop and orl or push mov call dec mov popf cwtl inc mov xchg dec push mov inc or lcall xchg mov jne mov and pop out out xchg push stos cs dec push mov pop test repz cs aam inc fucomi lock in dec loope fisttp fsubs mov add nop xchg cmp inc xchg loopne sub pop pop xchg clc pushf imulb popf scas adc adc or std jp pusha dec (bad) mov jbe pop aaa or pop dec jae aas push cmpsb fisttp pop out cli cmp (bad) divl push fldt jae adc pop mov fildl sti in js mov mov faddl pusha jns jae xor sub or mov fiadd das sub insl sbb stos (bad) imull push adc jo rcl movsb sbb (bad) mov adc arpl repz lock xchg dec dec shlb insl scas lods lds mov mov adc rclb cmc add pop (bad) fsts cmpsl hlt inc stos lea pop mov aas in sbb testl out pop cmp push jl push ds or jp add adc ja lcall or and repz fcomp jmp jnp jp (bad) loopne jae stos orl mov je mov in es loopne mov sbb mov dec and std shlb insb mov int3 dec call clc or (bad) inc clc push xlat lret rorb or test pop jg arpl xlat mov pop pop lcall pop mov or lret mov ljmp xor pop cmpsb adc scas xchg cmc cmp ja dec cmp push dec xchg jmp mov repz scas or jae iret xchg xor jo punpckhdq lock jb movsl sahf xor pop popf je test neg gs loope push fisubrl push (bad) mov mov out mov ljmp push dec imul ss mov xchg ret stos mov push in dec cmp ja out inc insl inc shll pusha pop sbb int3 or fmuls add mov cmp push das jae (bad) or xor pop or sub xchg std mov lret flds mov cmp jo add mov xlat and sub add push mov ficoml cmpsl or (bad) mov (bad) xor cmp aam mov mov adc cltd vmwrite mov ss jno sub push (bad) testb jecxz leave stos fidivl jne sti nop jnp enter push xchg sbb movsb movsl jmp (bad) stc pop mov mov pop ret (bad) icebp shl mov mov mov lahf das (bad) or test adc lret aam scas add xchg inc sbb pop shr jmp pop popf and (bad) lcall fwait mov mov daa jge movsb outsb scas es lcall stos jmp xchg sarb adc mov daa lds ret das add jbe and mov loop into push or mov xlat jns rcll or scas xor mov mov icebp outsl pusha mov aad push (bad) cmp push pop in push fadds mov imul inc into jmp cmp out ja (bad) (bad) cmp mov movsb dec adc jl pop leave mov fnstcw xor gs lock xor rcll aas daa add es push aaa in les dec pop push repnz out jno mov xchg ss movsl adc scas mov fbld mov sbb mov add fild or shl and adcl push mov dec mov and push loope xor jno and and ja fisubr inc hlt cmp mov or push jl xchg (bad) daa popf loopne pop (bad) ja or add fidivl mov sbb fnsave repnz push scas (bad) test daa push pop sbb rcll (bad) shrb lret out jmp out cmp mov (bad) pop dec clc test aam xchg add outsl sahf or lret mov movsl cmp xchg imul movsl jge mov mov enter sarl in mov sub cmp inc stos and repz push mov neg test adc jmp in add cmp mov iret adc ljmp or push stos cmpsb movl inc pop mov cmpw (bad) ljmp jecxz and ret out outsb sahf inc xchg cmp jge mov fdivr hlt push mov jp mov ss sbb cli mov aaa inc dec icebp sbb out int3 jbe out dec pop out fldt or in pushf push push lret fadds aaa mov aaa inc mov mov jb inc lret rclb inc out movsl xchg shll loopne mov xchg or mov aam push imul into (bad) or cltd test jo mov les rclb out dec dec sahf lea in (bad) or inc mov add test movsl popf imul xor std fnop mov pop xlat (bad) fisttp mulb (bad) jo lea adc add mov stos test rorl div fldcw and inc push notb addr16 (bad) xor mov in repnz pusha jecxz rol push xchg lods std cmp lods fdivp (bad) inc jecxz shll adc out or (bad) xchg hlt jle pop movsl test int cltd push sbb sub jae push fiaddl nop mov pop push aas es mov inc xchg jnp lea lcall out add add or cld into sbb (bad) and das enter pop jp leave xchg lret xor ja insb test rorb sahf and inc jl push pusha es cmovae mov fldenv adc (bad) xor popf push faddl lahf xchg cmp xor sub or sbb adc notb addr16 mov dec jp sub das pop cltd out mov push add cmp pop cmp loop ficomp in pop dec mov mov pushf repz pcmpgtd out jmp and clc test inc dec shrb sahf pushf sbb out pop pop mov iret movsl imul fbstp sub sti cmp inc stos (bad) xchg inc lret dec bound mov adc sbb xchg es cmp cmp fidivr jl hlt mov ss xor movlps fdivl fwait sbb lock psrlq push fldcw add das adc jle ja lret cmpsl stos inc and int fadds nop shr xor mov xchg loope add adc aad stos call ret shll fdivs sti add aam arpl mov les rorl aas call aas rcl or fmull (bad) mov shlb jbe cmp ds adc (bad) fildll arpl or inc (bad) in xor fisubr movsb push icebp push cmpsb adc adc (bad) call lcall inc cmp movsl pop std and in das mov mov in cmovg fs data16 in push hlt jo pop sbb jae rorl mov repnz out mov js out cs push ret push (bad) mov pop push jbe aad pop fsubr mov shr int fs lock sahf xchg fild out push ss cmp sub xchg pop lea jnp pop jmp mov mov and xchg pushf mov icebp jo in push xchg lret or (bad) mov mov push loope adc fwait cs test sbb aad mov aas int jg pop cmp cmp lcall (bad) aaa loop bound in pop pop mov in pop ret les push mov jle jg loopne adc sbb xchg push sbb pop mov or lret sub dec je and divl out (bad) or lret pop adc dec push in jnp inc push (bad) and nop fsts xchg mov pop xor popa cmp mov mov adc cmp popa lods mov ret int adc mov sub fcoms inc sbb je jns daa cmp cmp dec mov and mov cmp aas fisttpll mov and lret cltd scas fdivl lods stos pop dec insl xor dec cmpsb dec daa push popa hlt loop addps push sbbl add test daa or scas lds repnz insb xchg sub gs arpl pop out gs cltd adc push fwait xchg xor and inc push or fidivrl inc loopne sahf aaa mov inc mov mov rclb xchg and xor outsl addr16 jmp rcrb out fs inc icebp jb pop ja push mov testl je scas xor stos jecxz cmp sti mov cmp push mov push aaa lret mov das cltd push sub mov jbe inc cmp sub pop mov mov cli pop out out js pop mov arpl jae call xor jmp push mov mov out dec inc jle xchg xor xor inc pop adcl sbb loope xorb bts mov lods xchg jmp scas adc sysexit mov mov or sti dec lods xchg mov sahf cmpsl sub rorb cltd inc movsl imulb out fs repz sub aaa loop dec adcl sbb daa adc movsb adc leavew sahf neg cltd pop sub mov mov pop pop test test jbe sbb aaa and call ja (bad) out (bad) std lret ja mov xchg paddb (bad) stc lahf sbb inc pop leave sub mov jno fcomi xchg cmp (bad) scas lahf in repnz sbb ja imul (bad) mov lret xor fs xchg pop mov cmp pop push into mov inc test or jne xor jmp xlat jge fstpl adc pushf push sti push loop and pop xor int and pop or mov outsb ljmp push add dec mov loopne cwtl sbb lcall push pop sub enter pop imul subl xor adc fildll sub cmc or aas push stc add andb cmp pop xchg out xor cltd mov scas icebp insb out test push mov xchg dec xor ja mov popf lcall pushf mov cmpl addr16 es cmp jl or mov iret icebp jne mov push fstps fdiv mov enter dec test int3 sbb dec outsl and insl mov in adc mov cmc xchg icebp sahf test in fldpi xchg dec inc popa (bad) out sub pop xlat sahf cmp stos sub cs xor and int daa sbb ficomp push inc aad push leave imul push cmp xor dec pop repnz gs pop xchg xor mov imul jae dec lods mov mov out out lock popf inc in dec and push int sti pop add dec aaa inc (bad) enter mov int call pop les fisubrl xchg xchg (bad) aad push jbe adc add mov arpl ja adc sub sub insb sar xor rcrb nop cld sarb dec rdpmc int3 (bad) loopne and mov pop jns jecxz aam sub imul repnz imul sbb insb in fiaddl fstpt (bad) or or dec xorb fdivr cld bound in aad inc sub mov lea push add mov jae sub or mov sbb mov push push fisub and inc shl stos in add (bad) lcall sub jbe and aaa add xchg cmp inc psubd je dec fsubrl and test jg mov cld cwtl shrl cmpsb jno inc push sub cld cltd das lret fldl xor testl xchg clc neg jmp mov xchg outsb fidivr push inc adc adc divl mov and daa movsb out (bad) mov fimul push fnstsw fxch icebp sbb sahf fsts repz mov xor call cmpsb adc scas movsl clc and sub ss in or dec jg ljmp xor test fsubl lar pushf mov insl or leave (bad) je or push pop xor (bad) and xor dec mov repnz push test lds inc fldt push pop out (bad) pop rclb aam and out shrl push cmp ss pop jp je mov xor inc fnstenv dec lods in cld push movsb mov out or adc pop out xorl jecxz mov aas mov mov das in jmp outsb adc ret and cmpsb pop loope xchg scas jbe and in or imul bound add sbb lods inc jo stc xchg add jp ret fistpl push incl dec push and aaa cmp pop mov mov (bad) js or out daa and and sub fldenv lret scas xchg push xchg loop pop aad nop insl pop fsubrl push and xor cmpsb and inc pop mov sbb ret cmp cmc push je fldt push int3 fsts mulb bound adc xchg cmp sub pusha lret push dec mov clc mov lods sub or or fisubr mov push push adc push fildll pop popf lea js mov pop xchg mov (bad) stc xorl jno roll cmp mov jp cmpsl sbb or jmp (bad) jp aaa pushf scas aas pop mov mov cltd scas lock dec leave xor inc sbb leave mov and cmp (bad) mov dec pop scas cwtl push scas test inc inc js sahf stos mov push fisubl mov clc popf xchg rcr and test mov mov push pop xchg repnz or dec out sbb scas out arpl pop bound (bad) lock cltd (bad) mov outsb jle dec lahf sub push cmp cli xor testl call mov pusha nop mov dec (bad) mov js mov outsb lds fmull sbb or lret dec jnp push fisubl xchg sub (bad) fcomps inc or jge test repz pop xchg iret mov mov push das inc jl pushf mov repz mov add push jl cltd icebp sbb outsl in mov mov jge adc adc push insb jp jecxz dec jbe sarl (bad) or and push popa pop mov sbb sahf movsl lret xor mov xor pop dec mov lret lds push cmc (bad) in xchg arpl mov mov stos mov mov xor mov movsl mov dec mov xor je fdiv scas or inc jmp adc or cld out sbb jmp iret neg dec movsl mov sbb cmc insl jo ljmp lea dec bound les or das add jmp dec jns,pn push outsb ret lcall or pop pop jmp clc mov ret inc aas fdiv stos test dec movsl pop mov xchg (bad) push push imul cli adc mov insb dec lods add sub and inc pop fiaddl mov push daa xlat sub mov std insl sub aas stc loop fs pop ret lahf cs add aas stc fcoml jp jno dec dec adc dec bound mov ljmp aaa pop fnop cmp pop mulb out sbb pop (bad) xor inc sub push addb jb dec fiadd out adc testb sar inc es and push mov movsb ds dec jge jbe jo pusha cmp cmpsb outsb leave loope (bad) pop jl pop outsl iret inc ljmp sbb adc fiadd ret jb into fist (bad) sahf fs sub fwait js add test push push scas (bad) sub xchg (bad) sbb cmp adc mov inc push adc mov icebp jno mov fild (bad) push dec push insl xchg dec je jnp push lea test pop or pop mov notl jmp xor mov cmp jo pop or xchg cmp out outsb push iret rclb arpl pop fsts loope mov sub pushf bound gs and (bad) cmp fnop jb pop mov mov ss les and scas mov jns nop lret adc jo mov add ss pop ja inc in lock pop xor cmp js and mov outsb loope xor std adc add (bad) mov into loop adc repnz and incb out in hlt aad mov int3 das out sbb jnp push mov mov stos push push test incb dec fsubrp add pop outsb je insb lock outsb push dec pop stc dec dec mov push xchg mov sub push cltd pop inc sub add or fdivl mov iret arpl enter jno mov insl lods pop push (bad) push dec mov insl fidivr fcmovb pop arpl scas pop imul xchg xor ljmp ds lcall jns roll lock jb add and add stos lods cmc mov xchg das xchg sub mov les jno xor jecxz add fadds inc pop mov mov jle leave fimul mov jns (bad) mov fcmovb ss adc push push (bad) mov ds jle sub test jp sub scas popf or push xor (bad) jae cmp rcrl aaa xor and mov mov adc pop dec xor loope xchg insb enter test outsl out (bad) add out cwtl (bad) aam lret (bad) in bound jno iret mov xlat pop cmpsl xor push nop push lds imul and test sahf out ss and jns push addr16 mov data16 mov dec sub sub push adc mov in mov icebp lock fcoms in mov popf test in shlb (bad) es (bad) sti inc negl mov adc bound ljmp cmpsl adc cmp aas adc aam and ret repz pop mov popf inc je mov cli jae std rcrb stc repnz push xchg loop pop xor pop mov aad sbb cli sub (bad) xchg movzwl ss adc push add insl cltd (bad) xchg xor (bad) je dec lea dec ss jno mov push lahf daa ret shr mov (bad) mov or imul jo (bad) cmpsb xor mov pop icebp adc dec xor iret ss out mov out push popf sub mov dec mov loope inc push mov fildl push mov cmp mov out adc mov in ret lret pop (bad) xchg ror fwait arpl in dec adcl pop (bad) mov inc stos fimull pop inc fwait inc jo test jno in push ds dec icebp ficom xchg fwait push push jge loopne ret data16 sub pop cmp dec dec sahf mov xor jo pop cmp pop insl xchg pop or add mov lds xchg pop cld (bad) and pop stc mov push aaa cmp scas lds inc dec push mov jno xlat xchg lcall push dec popa inc cmp mov cmp sbb jl lcall xor fs test popf dec sub mov cli adc stos pop ja iret pop arpl js jl mov mov mov push ja ja mov jb stos test in sbb xchg xchg add ds lcall js dec iret cmpsl mov mov fsts add roll xchg in dec jbe inc fildl xorl inc rcr jmp sub pop xchg sub mov stos clc mov rcll (bad) mov lods xchg cmp je sub or jb mov dec ljmp inc fstps cmc push pop or jo cltd daa rcrl insl mov les pop jae lret lahf xlat aad ss lock mov cs mov cld popf cwtl outsl pusha pusha mov int3 repnz sarl aad mov cmc xor pop rcrb outsl mov push leave pop inc pop jns pop mov push cmp xlat inc insb pop fmulp fnop xor jnp and push pop int int3 loope out outsl mov ret daa ljmp in inc fcomip push xchg adc (bad) fisub icebp sub fwait inc lods ss movsb jno dec add jl das xor insl push icebp leave lahf xor push or jnp mov movsb out cwtl das xor insb mov sub imul adc data16 sbb cmp je hlt mov and ret mov out mov push cmp push mov cmpsb std jns xadd and (bad) mov mov out repnz mov pop sbb mov push mov or push cltd mov fwait pusha (bad) mov push fdivr push stc loopne loop xor mov sbb push pop movsl cld push bound xchg cltd sub jo and pop mov sbb push xchg jmp xchg (bad) je sub test mov jge and push mov pop dec in xor mov lret pop pop xor push jle cmp push and cmp out add cmp rclb xorb mov dec xlat int stos (bad) xchg test cli (bad) (bad) cld pop push fdivs ja fisub into mov in loope sub aaa push cmp mov mov shrl mov push leave (bad) sarb xchg jnp ret es (bad) add test cmc push push bnd xchg stc sub dec ss pop pop and daa movsb movd out dec daa jl sub sbb mov subl test inc or mov jae mov out pop xlat in push stos sub mov scas movsl inc dec and dec push push dec xchg mov test ret data16 add lock add push cmp out sub leave xor cmpsb add out sbb gs cmp loope bound ljmp mov in mov mov sub scas jge sbb add xchg sub psrad pop xorl jp in outsb xor sbb les (bad) xor sahf iret nop xchg in je insl mov std inc scas push or movsl test outsl adc (bad) adc dec loopne cmp dec loopne cmp dec loopne cmp jmp lock cmpsl enter push insb aam add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push push and ret add fisubrl insb fldt outsb xor insl dec fdivs in jp out jecxz ficom sti iret add add add mov mov lret cmpsb mov in dec fnsave (bad) sub jmp and lcall out ljmp (bad) mov mov ret mov add mov pop pop loopne in cli loop mov xor pop (bad) aad inc insl insb push cld cli or test sbb pop movsb shl pop fadd and sub xchg popa cmpsl test push movsb (bad) sahf out into add into sbbl lods arpl xor add rcrl add lods adc test fnsave dec cmpsb into movsl out adc les push or cltd or xchg test jg xchg aad push out and fdivrs cmc push sbb sub div sbb jae jbe clc sub sub divl mov (bad) adc in pop daa sub andl jb loopne xor cld fiaddl push int3 mov inc inc roll (bad) xchg hlt in push cwtl jns lods sbb data16 cmpsl es stc enter pop mov dec inc xchg sub pop stos mov jo sarl sbb add cmc adc pop xor cmp les cmp pop mov push cs pushf lods in xor xor stos repz insl popa loopne fs mov pop push lret add mov adc fidivrl inc inc hlt xchg cli mov mov ret push sbb or lods mov out lret test jbe xchg test lods sub ljmp iret aad jmp jle insl mov mov push pop or movsl push cli mov cmp mov jg rcl out insl add aas imul aas xchg jecxz pop jns int cwtl je frstor fadds adc in sarl stos (bad) jecxz adc jns jg mov shr lea jle xchg outsl add lahf jp pop enter add outsl and jae inc sbb enter sub lods xchg mov or out sub ja cmp jp shl mov mov lock sub pop (bad) ss inc sub sbb jmp movsl pop aaa fistp rcrb stos add adc sub mov aam xor movsl cwtl mov lahf enter jmp mov sub mov aam add dec push xchg push addr16 gs hlt jle xor roll mov fistpll loopne test sbb repz cmp xor mov xor dec mov stos adc or dec pop push aam xor mul lock hlt (bad) fcmovbe rorb sbb imul dec insl add xchg aad and iret adc aam push or and or ljmp das cs or mov jmp (bad) and mov (bad) lahf adc sbb push mov fist dec dec mov jle mov push fmuls sub mov movsl stc add push cld and jno adc jl and imul push jmp movsb and pop dec ret jnp cmp adc jb pushf out sbb (bad) jae imul add nop mov test push adc xchg (bad) call mov or adc pop out push lods sub inc jae imul js in add ficoml dec xchg and cmp call scas dec add std loop cmp dec dec fsubl data16 mov jb xchg lahf jge test jecxz xchg pusha scas pop repz std pop jg inc fbld int3 inc jmp sub or int3 dec dec repnz in or ret outsb iret outsl inc jge mov cmp jno (bad) xor dec dec dec lods test leave inc xchg dec ja add push ret mov xchg enter inc and test out cmpsb inc fdivrl out xchg jae les in add out ss cltd or fidivr clc (bad) aam fucom testl mov aam shr imul lds cmpb in push aam adc lcall pop cld inc ljmp rolb ror and xor mov mov jl lods xor pop dec or sub push andb jne xor incl inc cmpsl lods jmp shrb out mov and lods enter pop es mov dec loope jne push add or int3 pop push inc dec clc fs enter pop stos inc xchg (bad) iret shl ss xor jge jae movb sbb movsb jo (bad) pop pushf xchg rcl movsl aaa stc shlb xor outsb cmp in cmp out push dec mov xor fildll mov pusha mov or and dec outsl cmp sub imul test inc repz xchg imull mov push aaa cmp push add (bad) lock arpl aas cmp pop insl push sub pop ja mov pusha pop mov xchg inc pop mov rclb jmp call push fdivr pop imul mov xchg lret fcomps dec cmc daa mov adc test repnz js sbb subl pushf stc or push or shlb add adc scas add in jb outsl cs pop aaa pop add xchg mov (bad) jl mov negl push mov xor mov fs das sbb inc jb sahf cwtl add ret (bad) or aaa mov ret dec mov pop int lea out out sarb js gs lds xchg add out xlat mov dec jo xchg or pop lret test les sub xchg idivl jmp mov loopne adc pushf xor lods imul iret pop clc cmpsl fdivl repnz (bad) xchg sbb (bad) jae ljmp cmpsl daa fs sub jae enter addb fsts and out mov cmp and fldcw ficompl sub inc mull (bad) push es cwtl je mov and icebp cs int hlt dec sbb sahf stc inc jne mov adc lea push clc push add mov sahf jp outsl negb nop pop clc stos push xchg push and mov ret leave movsb (bad) movd mov add cmp push and pop js fnsave (bad) mov push notl mov jo push mov mov cmp arpl daa mov stos jne xchg dec push or sbb jge fwait sbb inc mov sbb aas arpl in lahf mov pop xchg mov pusha enter mov stc int3 inc dec js mov mov lea dec ljmp xchg dec (bad) xor dec addr16 fldenv sbb popf fisttpl jb sahf mov inc xchg ss arpl inc sbb xor mov lret scas mov loope jp hlt or xor cmp mov insl out addr16 (bad) xchg mov cmovnp test rcll or sahf out test jecxz ljmp or (bad) rcr sub jmp out pop mov inc xor mov jge loopne xor mov sbb sti add aas xchg mov pop fcompl ret add pop (bad) negb jbe adc cmpsb or test pushf movsb dec or repnz sbb cmp (bad) rorl stc adc fwait cli scas mov xchg in sbb mov movsl pop outsl flds out movsb scas jmp aam dec sbb xchg test insl xor std push and sub out cmp push mov jnp adc lods insb pop adc jmp push mov (bad) cwtl dec jmp pop xor push cli gs nop xchg lds pop imul xchg aas inc ds ss call ljmp popf lret ss jmp fwait inc pushf pop pop into xchg das mov fistpll sub jecxz and jae (bad) dec clc call push mov mov mov fiadd xor outsb pushf xchg rolb mov sub push xor repz outsb gs mov mov mov or sbb out js sbb rorl push ja nop cmpsl pop into mov ljmp pop fildl cmp dec mov out mov mov mov stos lcall add imul sub scas addl sti pop and and (bad) lret sub and ljmp xor xchg xchg mov flds xchg lret add ret mov push es cli test xchg sub cmp pop call mov nop adc mov bound jg cmp mov pop icebp push or mov jle subl ss and jo mov sub cs hlt aas gs out int cmp jl lcall mov mov (bad) lret jmp add jns xlat push jb inc mov (bad) push repnz mov aam xor cmc xor jo (bad) sub lds dec push mov inc or add add outsb int3 outsl and aad adc ss mov mov popa stos cmp cmp std sub clc mov lods or adcl mov stos cli mov (bad) loop xchg pusha test fstp mov (bad) ss mov idivb stc xor or add jl cs mov lods dec sbb cwtl aad cmp (bad) sub pop mov fcmovb addr16 dec dec cmpsl (bad) jbe cmpsl ffreep in sti inc testl mov jle xor cs and (bad) dec xchg (bad) nop push sub jo dec and push mov popa cmp mov and add or jl add mov leave adc ja stos add roll rcrl jge lahf add repnz imul loope jb mov add cli add lock into mov in testl dec loopne push (bad) fnstsw int jmp fsubrs sub pop test cmp fisubl test movsl lahf jle pop bound sbb js aas lock fimull mov xor fsubl mov lret adc leave cmp dec ret xchg fwait push lcall arpl ret push mov xchg out jns fdivr or sbb jmp sub pop and sbb cmp dec push jle test stos iret int3 aad in cmp and pop push pop movsl jle cmp (bad) pushf sub std mov pop mov test clc mov leave into jp mov jmp xor (bad) mov mov jb shr inc ss lret iret mov sbb fsubl sahf sarl negb ret mov push push xor xor call push shl pusha inc ret mov push or and push lea jp lea cwtl idivb imul sahf (bad) pop mov sti in call inc neg and stos adc xchg cltd xor xlat pop push inc add fwait push pop mov outsl cmp ss cs sub jle js pop mov out dec xchg lahf mov (bad) jle add in jp push push cmpsb xor pushf andb xor jmp pop add ja fidivrl fcos sub inc inc aam mov daa push (bad) fmulp mov xchg cmc pop lds push mov lcall adcl jecxz inc add sahf sbb in fbld (bad) dec fidivrl rcll sub push insl xor sahf xchg and ret stc mov push mov popf daa cs idivb and vaddsd push adcl mov (bad) mov fldenv jecxz mov cmp add xchg outsb hlt add les ja rcr pop lcall lds jmp lahf insl mov inc (bad) xlat mov xchg sub (bad) and (bad) mov mov arpl sub pushw fdivrs andl addr16 sarl jg std ret mov jecxz or cwtl ficomp (bad) ss std mov test ret fdivrs into inc ret mov (bad) sub mov xlat mov push mov adc repz (bad) fxch xchg sti loopne jecxz pop imul push fdivrs movsb jns sub jno movsl out pusha leave js or xchg xchg sub ret xchg ss jmp jl jle ficompl pop imul jmp stos add pusha jb mov jge inc stos in test nop inc push mov push push mov mov xor arpl enter mov xlat scas into mov repnz nop add mov (bad) push mov lcall stc jle test sbb cmp imul inc add jo add cmc shr (bad) xor js mov dec dec rcrb or sbb fwait pop xor (bad) in fnstcw stc hlt faddl ret push inc jns inc stos out loopne mov dec fidiv push push negb dec jae mov push sbb mov mov add pop cmp std cmp in mov movl outsl add jmp ret and xchg sbb xchg lret dec pop lret std mov (bad) adc pop in fadd enter fsts idivb push lret pop cltd lods pop and rcr push (bad) cmp test test ljmp mov in in jge push in (bad) lds push jl pop cmpl pcmpeqb mov (bad) mov jmp xor loope out andl imul jne inc jbe clc mov popa outsb popf push outsl mov sub clc adc (bad) enter or xor int pop mov test fldenv push pop (bad) rol cmp (bad) xchg sbb and jp add jno jae rcrl cmp call lcall out jo popf inc cmpsl pusha or (bad) je and (bad) clc bound aaa pusha daa cmc ja lret dec mov jb fmuls aas ret dec adc inc sbb ja cmpsl mov pop mov mov cmp test outsb pusha mov out jo mov xor push fs sbb in ficomp mov jno mov mov shr lret pop push sbbl lds dec push test aad outsb scas mov push (bad) cld push sub jno jg sbb in out mov leave and out sbb cli cmp jae iret lea cmp in std add adc icebp aas flds jae and (bad) sbb sbb jo (bad) mov call sub pop or xor sub pushf and pop outsl mov mov jo adc (bad) xlat sarb xchg (bad) stc and pop test iret sbb andl jle cmp fwait lods adc int3 jo icebp push adc fnstsw mov loope lret (bad) movsb jns push enter or fsts jmp push outsb movsb clc cmp fdivs pop adc rcr dec pop xor jbe xchg cwtl inc push ss fiadd stos cld xchg data16 xchg mov (bad) cmp jge scas xor or icebp fdivrs (bad) jmp add divl sbb jl (bad) hlt jle mov stc pop adc (bad) dec sbb mov jo fild pop cs stc mov fs adc jmp jnp aaa aad lcall loope das imul or icebp cli int3 dec xchg decl test sti xchg xchg outsb cwtl ljmp xchg aaa jp test mov mov movsb inc jne,pn in push loop inc push cmc ret pop jnp das out cmpsl dec adcb cli mov push mov js jmp cmp call mov mov fidivrl flds cld mov (bad) xchg rcl cmpb cmp push add push pop mov insb pop test mov ret push out mov out bound dec sbb jecxz adc jmp js jb xchg cmpl jge movsb icebp push dec adc int movsl stos icebp jno pop stos xlat nop xchg clc mov jno ljmp imul xor sbb (bad) into (bad) test insl es mov push add inc repz xor test leave jne add aam and daa inc sbb mov pop outsl jecxz fcoml sbb (bad) mov jae sahf xchg jb ficompl mov push rorl jb add sub stc je gs mov mov push xchg mov out sub ret pop pavgb cmpsl adc dec jge mov icebp sarl pop aam push cmp push lds popl jmp pushf mov and int mov jno cmp sbb test dec jp mov sub mov inc dec outsb lock adc push or lcall xor inc adc cld lds push xor loopne fsubrl (bad) nop push dec stos push test xor cmp cli inc outsb mov jmp in jne push aas mov ret fdivl jle (bad) lret push movsl loopne nop push sarb and (bad) cmc repz sti aam rcrl sub inc rcrb movsb sbbb rcll push sbb sub (bad) jo mov fcos cmp sbb xchg test xor or in (bad) mov and imul scas push test jmp mov xchg add add mov mov push jae and fmull mov scas ds xchg test fidivrl js xorl imul (bad) inc cmp mov movsl cli or aaa idivb scas jge and push or jl xchg mov and leave inc push stc es dec push add jo push fstpl daa arpl push faddl dec xchg jb add out inc and loope or inc fidivrl repz mov xchg mov inc cwtl fildll xchg scas sbb hlt cmp add test xchg mov stos bswap pop cmpsl arpl dec pop cmc xor stos mov xor daa sbb dec mov jbe and dec and sub aam int ljmp cmpsb xchg mov push shlb enter lods add (bad) pop sti sbb cmpsl jb outsl jle or andb fsubrl sbb mov fist popf jl push icebp ss lods add lcall and clc ret scas inc pop adc add lds insl mov push loope movsb imul dec mov push or pusha add mov lret cli rclb int fstl into pusha aas stos mov (bad) ljmp pop hlt cmp push ror outsb jns push mov in js clc mov pushf scas push xchg (bad) (bad) pop ja mov pusha in push bound sub movsl das lods outsb aad xchg stc test xlat dec sub int3 iret and inc and sbb or cmp jle loopne mov leave push xchg cmp and loopne push adc je inc xlat adc xor andb test mov sub out incb xlat mov adc and rcrb cs (bad) das rclb jmp mov push adc sbb loop je adc fistl (bad) negl aad cs or and pop xchg fstps iret (bad) mov loopne sahf push test add dec and aam jp stos pop pop adc cwtl popf xor push or dec mov insb gs in push push ljmp cmp mov imul aaa rcrb jne push xlat mov sahf rorb mov mov andb jae test jno pusha js jno (bad) stc add or (bad) pop sub sbb jb (bad) mov cmp or outsb mov (bad) mov inc inc xchg (bad) mov ja in scas jle or push jecxz inc xchg xlat fstpt mov inc mov test ret cmpsl xor mov imul pop ret decl jno repz push in pop jae in iret and flds je pop imul aam lds or aam mov mov movsb test cmp dec fbstp imul jp aad jo mov and jmp and xor mov xchg mov sti pop fisttp mov sub jmp mov sub mov adc bswap aas cli mov lods pop push mov xchg pop sub (bad) jno sbb test mov aad outsb popf shrl mov cmp pop add xor inc ret inc mov lcall cmp test fwait loope cld or cs sbb int3 sub outsl push pop gs cmpb out lea xor mov loop nop or mov jg dec dec xor add pop (bad) int3 and sbb or movsb mov push clc push pop xor ds sub pop mov es xchg lahf in add outsl and or icebp mov arpl rcl adc push sbb inc jg add adc lods sahf (bad) fildl mov dec mov pop addr16 mov jp sbb dec push or mov (bad) sub clc or push cmp rolb cli jecxz cmp xor int inc (bad) xchg inc mov xchg pop outsb lods and pop cmp enter mov iret mov jge shrl lret mov jle les jnp loopne or xchg sarl std adc xchg and mov fldcw bound loope aas cmp cmpsb jmp pushl mov ljmp mov jno (bad) in or cwtl push fldenv enter enter pop clc dec mov cmp repnz (bad) cmc and loopne and aaa or cmc sub lods pop jp xchg push mov or cmc mov repnz xchg cltd push push xchg test xchg bound fmull cli cld mov xchg scas mov call cli sub adc popf jno (bad) (bad) mov xor and sbbl roll sti aam sub rcrl sbb xchg test or sarb push sbb out mov ds dec mov outsb movsl jle (bad) in push out dec das rclb push mov mov mov mov stos pop jae cmpsl xor mov jecxz jecxz pop jmp les jbe jno inc movsl push aas cmc xchg ss (bad) pop js divb inc push mov bound ljmp faddp mov push les sbb stc cmp movsb xchg mov sahf pop mov dec negl xor sbb cmpsb cmp pop mov jo and das xchg cltd pop iret fistpl adc dec jg sub fcmovu cli push push pop mov notb mov cs jl stc jb inc test cmc mov addr16 in jns lret icebp push pop movl ret lods (bad) fidivl out gs outsb adc cmpsb fbld adc cmpsl xor mov fs mov push cmc lahf sarb cmp nop in xchg popf lods jp,pn pusha hlt inc add jmp mov push pop mov and and mov and mov adc mov push in mov sbb scas in pop and in fstpl insb jno dec and jmp jae sti xchg scas jns fiadd pop les sbb ss pop aaa mov cmp lret dec inc popa ja pop out mov mov pop clc shl jo push (bad) cmpsl stc ret mov mov scas mov inc (bad) aad sti sub pop scas js push imul push pop or sbb pop loopne jns imul and fisub push fisubr dec add cmpsb orb add fisubl xor insl push push adc jne or mov xor sub js es fwait push fdivl mov inc push data16 lods add in xchg push cmc scas pop jle adc jns pop cmpb sbb dec les xchg inc ja and std hlt push test jne daa insb popa test adc loopne jle mov adc mov or push push cli dec test mov dec add or xchg sbb mov pop fwait inc push ret cld sub lret mov inc popf mov push js clc push mov push jnp mov inc push loope and int3 xchg lock xchg xchg push pop and outsb xchg dec scas sbb test cltd ret xor int xor (bad) fstpl vshufps cld nop jecxz mov sbb repnz dec loopne cmp dec loopne cmp dec loopne cmp dec loopne cmp mov loopne jg dec or add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repnz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push bound mov sbb cmp pop rcr lea jbe mov cmp divb (bad) push add or andb cmpsl mov das ljmp shrb or orl sub adc dec xor jmp movsl rclb xor mov ss shrb sub mov loop mov subl (bad) gs lds shr cwtl ror push pushf adc (bad) test sub dec dec add cmp inc mov push ret mov adc stos inc cmp fsub mov cwtl ljmp mov daa jmp xchg lea jns or outsb js mov xor loope in iret and add bound bound pop push pop and pop jmp pop mov inc stos sbb mov stos mov add mov fcoml and jnp or ret bound sbb mov adc test out int addr16 push pop aaa sub inc mov adc and xchg xchg add repnz sub xor fcomps lea stos dec sub out repz mov rcrb add (bad) repz (bad) and inc or mov fistpll rcr icebp cmp cmpsb rolb sbb and mov jae imul dec enter lods loop aam (bad) fmuls pop fwait mov push ds sbb pop sub inc in out cld sti push repz adc out popa maxps xchg xor cwtl pop mov add test movsl xchg xor cmp push hlt xchg movsl aad insl jae jl je mov jge cmp mov sbb fstps (bad) mov (bad) or jg ror popa lret mov push xor xchg push ja inc push test cmp pop xchg fist push and loopne fwait movsl jo lods and xor outsb faddl ja sbb mov dec in mov xchg dec in xor push mov mov pop or jp inc cmp sbb add lods scas xchg je cmp add outsl and sub xchg xchg dec dec test insb mov sbb pop mov cwtl cmp jmp aas xor and xchg (bad) lds sub nop (bad) movsb push and repz out cmpl and lret movsl add xchg jecxz dec into mov imulb in adc je popf adcl jno arpl inc addr16 and aaa mov imul sti adc xor inc lods sub add cmpsb cmp xchg dec (bad) rcrl ja add les mov faddp outsl outsl enter (bad) out push lods sub fldenv xchg fwait push scas or xchg aam call and lret rcll (bad) jge les pop into fcmovu cmp jb sti loope pushf push scas cwtl sti and mov pop mov mov or stos pop add insb pop ret fsubrl or out cwtl rol cmpsl mov call mov lods fs in sbb cli (bad) xor stos in insl pop inc mov jbe xchg iret inc push sub or mov fdivrs push cltd hlt iret mov mov mov jnp or jg icebp mov (bad) imul out lods inc jno cld and shll imul mov ss mov (bad) xchg mov shr pushf cs adc sbb in fstps ret int scas mov or add (bad) and push mov sub sbb pop call push jno in loop jmp imul scas mov add pop mov jbe pop and push ljmp fisub mov and divb je mov or push das pop aad orl stos fwait cmp int3 and jo inc push mov pop test inc lgs or jge mov adc add push insb pop push cmpsl ljmp jmp xchg lahf in sbb out jp loop jns out or lret mov ja push add sbb sbb rcl in mov fildll cmp xchg fldcw jecxz mov push mov std pop jnp lcall dec push data16 shrd dec in xchg xor xchg rdmsr adcl (bad) mov dec (bad) pop sar mov popf popf out insb fwait xor dec xlat mov scas mov test sub sub pop int3 pop push sahf jnp xchg shl push (bad) fistl push leave pop sbb or (bad) aas add (bad) enter pop sbb pop adc es fildll lahf push imul test iret inc cmpsl dec arpl enter loope aaa dec or jecxz les loop sub xchg sbb clc lea push xchg std loopne fidivr cmp push cs add mov pop (bad) sub pusha sbb (bad) je rorb fldl push arpl movsb push mov add xor dec lock xchg jg mov popa sahf pop and int3 push sbb ret stc xchg mov sub aam stos mov dec stos cltd jl cmp or popa dec push mov into adc ds xchg xor arpl mov adc cmp int adc sbb loope stos dec aaa and hlt add dec lods fs jb sbb pushw leave fsubr cmpb enter stos scas movl or data16 pusha push (bad) fxch iret in test jno sub lret fdivrl aas xchg es add pusha ret stos cmp sub data16 das mov insl inc mov movsl (bad) sbb pop orl test aad pop sbbb call out sub call sti xchg data16 sub arpl in leave mov or frstor fisttpl dec sbb out add das fidiv cltd lods sbb mov orl cmpsb or add (bad) jae (bad) dec cmpsl sbb aam loopne mov push cmpsl out ficomp jnp fdivrl les (bad) mov adc push mov outsl movsb xor aam inc nop pop xchg loopne cmp pop xor sbb adc jge clc dec xor cwtl int3 dec sbb sti xlat xchg push lods sub mov xchg bound js outsl mov movsl xchg and jp xchg mul pop jmp sub loop ret push mov cmc mov mov push dec cli adc pop xlat je pushf xchg ret cmp jge repz jnp xchg inc lret mov movsb dec pop adc scas and (bad) movsl add fucom in fs jo pop or daa test sti xchg lret dec cmp popf xor out or sbb mov leave lock fdiv or fiaddl xchg mov mov xchg mov sbb sub sbb jne pop mov (bad) xor dec cmp ss fisttp xchg push cs lds jmp xor cltd nop pop stos sbb out (bad) sahf dec cmp dec icebp xchg push enter push pusha inc xor pop cld mov hlt fisubrl add lds (bad) fsubr and cmc out aaa fistp mov jno and xor je pop (bad) jne sti imul mov je xchg out jb or adc sub cltd std sbb maxps imul xchg out xchg or test das fstl fadds jb lods dec push xchg out sub cmpsl pop cmp fwait add fsubrl xor adc pop sub jp imul mov loope fsubr ljmp and sarb cld imul xchg frstor sarl jl rcrb stos adc push mov hlt jg jae cmc xchg sahf popa xor or bound dec pop mov push xchg stc je dec jg mov movsl ss push outsl das std mov and loopne sbb int and mov xchg and dec out aad add mov xchg (bad) movsb sbb ss cltd pop sarb cmpsb mov push adc addr16 xorl pop sbb inc or jno outsb inc xchg cmp inc (bad) jle orb out das adc dec pop dec jbe into mov lds mov aas repz pop lret popf jmp sahf sbb daa aam std xor cli mov jbe dec test lcall jb push xchg and mov enter gs xor adc arpl pop push hlt dec movsb scas cmpsl test and xor cmp sub lcall popf mov cmp pushf clc sbb lcall fldl inc cmpl cmp jno sbb dec or int3 stos cmpsl lret sbb fnstsw loope cmpsl out (bad) push insb push jo std out (bad) lret loope movsl and call dec test inc pop cmp js pop les jno cmp or subl fs jb (bad) or std mov in stos stos loopne in sub and outsb mov scas xor test jecxz shrb cmp cmc adc gs push adc dec sbb shrl and push inc test dec cmp push dec adc push xchg adcl inc je imul jns pop cmp push outsl bound jno xor mov bound mul data16 imul enter mov sub add das les adc jb mov daa xchg sbb andb int aam inc into ss or fimull push out sarl pop xlat cmpsb jo mov cs pusha mov or fwait xor mov or scas mov ss mov cltd stc xor fisub out mov adc ret mov popa mov mov addl les and mov xor mov lcall adc add inc mov dec ret cwtl mov lahf push lea inc (bad) jmp pop int3 out leave pop cmp das mov mov data16 adc sbb add (bad) aaa je bound and push and pop test imul test inc push fsubl popa or add scas fsubs xchg add fldl rcll data16 push fs movsb or dec in sub push mov pop (bad) push leave scas push and daa cmpsl push or cmp mov insb inc pop jbe mov mov pop in (bad) mov into aad cmp xor das sbb fsubrs xchg sbb sub ret pushf push mov add dec sbb xchg sbb lret push scas aad xchg rcl sub fdiv lret pop dec mov add jge rcrl mov sbb mov pop fistpl test adc lods pop mov push jecxz inc outsl (bad) mov sti cld scas pop adc insl sbb (bad) insb bound inc fdivrs pop test jo cmp popf xchg test repnz xchg mov mov mov mov xor push mov je outsl xchg mov insl xor inc imul push shrb xlat scas ficompl hlt add (bad) pop (bad) sub aaa ret insb jnp dec (bad) or je bound ja es scas out fsubs jno dec pop scas add imul (bad) lret mov icebp inc adc rcrb push jmp push fmuls mov jp ret push rolb ja dec in lods xor imul xchg jl inc iret and dec xor xchg mov mov fwait mov dec mov in push cli hlt xlat inc stos mov test xchg aas aam incl jae stos pop lret leave les cmp iret std loopne insb jge lods dec addr16 fsubs lods adc loope call xchg repnz cmpsb pushf add pop push pop (bad) cmp popl xor adc adc push adcb xchg (bad) es adc pop mov (bad) jecxz (bad) movswl stc hlt adc mov inc and (bad) (bad) (bad) lret into stos adc repz and push cmp popf and das sbbb out jmp pop xor sub jae cmp add imul mov lods dec jle sbbb pop mov (bad) out xor fmuls mov popf xor sbb iret pusha out idiv jge mov pop dec sbb or inc add sti xchg fwait or mov or or or imul mov and (bad) push push rcr insb ds lahf pop sub adc push dec pop pushf xlat aad sti and and rcr aaa daa jo mov push jo imull movsb je jp lret movsb jecxz into jg xchg imul sub sbb sbb in loop int3 adc pop cld pop adc lea (bad) add push inc aad or mov mov mov xchg pop sbb cli out lret loope shrb arpl and decb cmp loope push fwait jae pop adc fcompl (bad) lcall or std movsb or or or add (bad) out mov mov notb (bad) call and and fadd outsl mov jb xchg pop xchg inc test lahf xchg repnz sbb loope ljmp outsb imul pusha sub inc pop cld lods pop fdecstp jp ret clc clc inc mov push pop (bad) repnz push sbbb fwait pop shlb dec out movsl bound jnp mov dec (bad) jno mov sub lds sbb popa iret fisttp jge lea jmp cmp ret in mov pop stc mov (bad) jo int3 jecxz cmp (bad) sbb jge xor or (bad) cmp outsb add test jno add jb sub dec adc mov nop dec pop xor push add dec out ljmp or movsl in jmp fucom hlt icebp aam dec (bad) decb mov mov fwait mov movsb cmpsl (bad) mov jo leave repnz dec js adc insb movsb aaa push or sti aaa adc and jmp ljmp sub fildll sub clc xchg cltd xchg subb or and and or sar cmp (bad) (bad) not fcoml int (bad) cmpsb push xchg rcrb enter dec shrl or and sbb jge pop scas sbb sbb xchg cltd pop sub dec dec ror loope xchg cmp addr16 inc hlt cmp outsb adc push pop xchg push jmp aam fiadd icebp ljmp pop sbb push into into flds es add and data16 into xlat xlat mov enter aad lret fisttp mov movsb pusha gs fistpll mov mov (bad) rcll sub sbb dec decl xchg mov loop jo and ds mov sub mov or inc dec and or lcall jge lea cli ss insl or lret pop neg pop cmp push lret aas test sbb adc xchg jg xchg das rol lea es loop gs nop push push popa dec out dec and mov or mov js js jl loop pop iret out cld test mov sbb or scas addb outsl jns sti cmpsb ret orl xchg and addl les dec mov lods pop mov dec lret mov sarb pop mov fadd cmp movsb lcall dec in push loopne and lahf sub mov ds mov xor cmc add add jae lcall jae adc mov pusha mov xchg sbb sub mov push into mov xchg mov gs jns push aas mov dec in mov push stc in xchg mov jno xchg mov aas lea int3 mov je repnz push push add sbbl imul dec or xchg mov lret fldl test jne cmpsl data16 rcr arpl insl (bad) mov bound repnz jbe pop pop add aaa (bad) negl fstl cmp cmp mov inc cmp popf inc fisubrl jno enter push inc mov pop push fsubl sbb xor mov sub cmp sub push pop lret push sub leave dec push push (bad) mov pop sbb (bad) pushf ljmp aam cmpsl or out push icebp imul inc leave shrb jae inc sub sahf mov dec jg mov jl nop fstpl lcall mov xorl je fwait stos rolb sbb data16 adc mov push pop xchg in jecxz movsl out (bad) flds std (bad) shr xchg sbb or fcoms andl mov xchg mov mov cmp lahf fistp or mov dec inc ficomp in adcl insl sub cmp pop jmp inc repnz cli mov imul scas dec stc push imul or insb mov subb xor cltd ret (bad) jo jns xchg outsl add call xchg jb add or sub nop lret ss je pop in addr16 jae vpaddd cmp jns cmp inc mov outsb jmp push es adc fidiv std xor add jbe add test push ss or cmp ret pop xchg cld xor addr16 sub clc xchg lret xchg jle ja add in mov mov sahf cmp mov lret sub pop mov xchg imul jmp fild or xor div inc dec aas mov cli js int3 cmc inc sbbb in cwtl xor fisubl xor adc pop dec push aad or lods imul aaa or sahf mov mov lods and sti (bad) xor lds std ljmp sbb xor add push pushf hlt xchg ss sub pop push xchg or cmp jno xchg push pop (bad) aad sbb mov popa in mov jne xchg or fldenv mov das xchg insb fcomps sub add lahf jg mov lock std insb stos inc cmp mov dec dec (bad) aad mov (bad) mov icebp data16 cmp sahf mov and push lret test ss int3 hlt mov mov popf fs cs notl or mov imull push pop shl sub sbb sti (bad) fsubrp push mov jmp fsubl xchg outsb dec in sarb cs fwait add cli imul out ljmp sbb out adc mov in fmul mov mov jmp insb negb mov xor pop pushf repnz ficompl imul mov xchg sub (bad) jae push adc sbb pop xor sub cmp scas adc lds mov sub ror add fcoml sbb jb cli insl (bad) imul pushf cmp cmp cmp sti mov aad inc adc popf dec push cmp in sub and xor sub sahf je lea into fs jno mov mov mov xchg fstpl aas pushf mov mov sub aam popf (bad) imull adcl mov mov das cmp add lret xor in fild loopne jns js imul outsl pop fwait loope mov test adc mov out stos sub ss push pop sub cmpsb and sbb stos bound jnp (bad) cmpsl int3 cmpsb gs xchg je imul sub popa jg push out loop sbb push lret pop jnp sar or lret loopne pusha lds mov cmp gs cmp push adc stos mov xchg xor dec iret (bad) dec mov popf lahf ret insb xlat into lcall les aas mov inc das movsb push adc sbb or mov xchg inc mov and in cmp inc bound add call (bad) cmp lret loop sbb leave dec ss iret mov sbb xorl aaa and sbb es rorl add mov or or mov out ja inc rolb or int3 int jbe jae dec push dec xchg into mov mov xchg mov jnp sub jne stos fwait push ret push push add xchg scas cltd lock inc add (bad) xchg jns sub mov flds outsb loopne mov mov mov es daa es jg out aas jle insb hlt lret dec cs sub mov fsubrs (bad) in test inc jge sti stos test mov push cltd cmp jge mov or add xchg shl int adc (bad) ss rorb fisub or sbb lods sbb lock sbb inc add jb mov lret lods popf fiadd aas sub sbb adc hlt dec jmp (bad) imul xchg bound lret cmpsl clc (bad) dec inc test stc adc fisttpll mov scas ret leave mov aam ds mov mov test in clc cmpsl mov pop std cwtl scas jbe sbb das scas fs xor out fstl xchg mov pop (bad) sbb jae inc in fnstcw call cmp mov sub xlat enter into dec mov fsts mov add (bad) push mov fiaddl sbb and cmpsl add push pop mov pop in pop outsb mov xor mov adc push inc push cmp cwtl stos out out iret push jne sub scas outsl pop lret add pop out fidivrl pop lahf inc dec pop repnz dec mov xchg into int3 icebp xchg rolb push fadd (bad) clc and push repnz mov dec insl fcomps sbb and dec lret dec sub roll aas jg xchg (bad) cmc aad out sub scas cs mov pop push cmpsb std std insl enter push loopne mov jecxz imul ret imul xchg cmp jb mov cld aas jae sbb add mov movsl daa push cmpsl outsb xlat cld out es hlt mov cmpsb mov orl add faddp inc mov dec pop insb lock pop push xor (bad) aaa jo push jge mov pop rorb add xchg xor fsubrs fwait ror xchg push or cmpb mov add js out or (bad) lock or and mov rcrb inc adc repnz sub lret div aaa cmpb (bad) and mov inc lock sub mov scas sarl xchg fstpt leave sbb (bad) or jge popf sub sbb loop cli jmp test cmp cli mov and add jnp aad lahf add dec mov xchg aam mov dec ficom sbbb push inc insb mov push and (bad) cltd je mov cmp dec out push lock jns (bad) pop cmp sub add ds or pop popf xchg mov in add mov mov outsl xchg (bad) iret dec pop jge cmpsl pop repnz inc or jae adc cs (bad) incl pop imul push enter daa mov push call inc (bad) repz sahf inc mov jns cmp repz in and pop mov xchg xchg fildl shlb aam gs test pop movl ljmp push cmc in ret rorb arpl mov incb mov inc iret (bad) hlt dec adc lahf icebp (bad) dec pop in sbb mov or or xchg lea mov jbe (bad) and mov adcl push push adcl andl int3 js stos lcall sarl test mov mul jle clc dec pop xor mov popa (bad) or outsb push test inc jl mov sub push xchg std push out sbb and mov shl sets xor rol or add das add in sahf pusha dec push sub and mov push mov ja stos imul les mov cmpsb sbb xchg sbb (bad) xchg xchg lods mov mov push pop mov and jmp (bad) mov xor or dec dec fcomps fcompl adc aam mov push cld ljmp jmp andb pop and xchg (bad) call mov push sbb rcll push stc jle jnp fiaddl call pop dec adc (bad) jge sub jno lea push add xor lcall dec into inc scas jae rcll push cld rcrb out subl popa data16 jg mov xor jge (bad) xor fwait or lret xor mov mov inc xchg pop dec cmpsb outsl cmp icebp xchg in clc mov loope pop jp mov mov pop out in adc cmp pushl clc outsl decl cld daa lock sarb or daa lock sarb or daa lock sarb or daa lock incl fucomi rorl mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push jbe or add adc aad mov mov ss imul roll shll jns and imul push xchg add add sub (bad) lret jae mov jo out gs sbb pop in pop lret dec int push adc outsb fmuls scas in or inc add push fldl adc cwtl add outsl mov xor scas jge popf mov in das sbb xor in mov xchg mov pop or jmp mov xchg cmc lea inc xor fiaddl xor out inc les adc push scas adc mov fcoms mov sub sarl jge pop adc cs add cmpsb out cmc jb xchg popf movsb andl pop mov jo loop xor and pop mov xor scas mov paddusw inc push push jg sbbl sbb rclb mov mov out mov sub cmp clc jmp rep clc mov xchg and dec scas mov ret insl sbb in cmp mov xchg out dec loop cmp cmp pop out sarl push mov ret (bad) jbe inc in les scas jb or cli out cmpsb jp xchg sub pop mov mov loope mov dec sbb xor xchg mov sub cmc cld xchg incl andb sub push loopne je adc in loopne push iret jbe js out add imul mov add mov stos jle jae add loopne jno js sub roll push enter gs mov aas packsswb or insl lea imull mov (bad) call xor push inc movsl scas push add inc and mov pop stos int3 add test in lret sbb lock inc fcoml mov xchg in xor mov lds mov push iret bound mov dec mov ja adc fldt jg arpl aaa xor push mov pop cmc sub popf popa dec jns jbe lods xchg dec adc inc xor js mov pop lock jns sub ret or aas xchg sbb repnz lahf or mov push das xor test fcom mov lret fidivl jmp insb dec fisubl adc enter dec sahf mul mov add rolb inc sbb test repz mov mov out pop dec das adc hlt mov mov in cmp and or jle in imul loopne out loope enter fs jmp inc or or mov dec cmpsl in scas jnp je push xchg push lret fldt fwait xchg aaa jo and test add mov jg fild ret mov arpl lahf in and mov cmp dec clc or xchg sbb jae jb sub dec (bad) dec ret (bad) jg movsl mov out popa stos pusha rorb xchg pusha (bad) jb or mov mov mov xchg push repnz in rep push ja sarb mov mov stos loop xchg cmp mov enter popf lods jae adc inc xor add js insb cmp or test aad inc and cmp sbbb rolb nop call jp das cld dec out lods and nop cmp in cmp jnp sti (bad) outsb adc cwtl lock xor mov sbb xchg in push sar ret mov xor pop xor into aad arpl enter or popa jl aas fldcw dec sbb pop and mov std pop dec sahf and xchg mov stos adc ret pop mov mov imul mov or fldcw les push add cld arpl adc int or dec push lods dec aas das xchg out adc add sbb xchg cmp (bad) dec dec test mov les paddsb stos inc sbb mov push dec and pop jno rorb or mov sub dec push sbb lcall or fildl sub rorl (bad) dec lret fldenv cmpsb (bad) mov int (bad) popa cmp loopne pushf std sub lret scas jno mov pushf dec (bad) or push jno adc test cmpsb dec (bad) iret push add shll sbb insl mov stos and inc add ffree stc cld jmp call pop test cmp push sti sbb xchg or je fmulp cmc stc dec mov cmp inc dec into in aaa mov and cltd mov fwait clc mov xchg adc xchg inc mov icebp pop mov sub std lds mov lock or enter pop add fistpll add adc dec mov scas inc push fisubl sub mov mov cld dec cli (bad) bound or adc lods mov cmp lcall setge mov addl mov cmp jo data16 rcrl dec stos mov cmc int3 adc xchg adc test rorb pop faddp jp das rclb dec inc lahf mov pusha add pop (bad) out mov (bad) or clc push out push jp shrb push mov xchg cmc pop pushf jae cmpsb mov xor leave ljmp jg sbb pcmpgtd jge insl lret aaa into gs icebp cmp aad loopne mov idivb xchg int loope aas (bad) mov testl lods push sub mov aad pop idiv xchg test mov inc lds movntps jno icebp cmc push rolb loope jmp xchg out lret mov inc sahf push lods (bad) jmp and ret sti xchg sti ror mov mov js out loope scas cmpsb mov fs cwtl decl repnz movsl out dec mov int3 cs (bad) add inc jmp push cltd (bad) xchg mov xor jp jge pop push push bound mov mov pop test insl push sbb aaa dec or adc push fcmovnbe pop insb mov rcll mov int3 jmp xor lods popf xlat pop out mov test shl punpckhdq push repnz stos dec cmp adc aaa incl pop mov inc std pop jnp dec jns xchg jmp cmp ljmp lahf adc pop sbb pusha mov lea arpl add (bad) inc iret pop jne jle inc cmp sub xor shlb gs loop ficomp rcl jecxz pop int xor adc mov std ja pop out jo lret (bad) xor and enter into pusha mov push jbe int jbe aas jg test mov xchg in sub ss push inc sub iret jle rol divl pop push push add or adc fwait icebp stc xor xchg movsb stc inc sbb or jnp mov out out and outsl adc stos je mov pop jb mov mov popf jae mov jl jp xor mov mov dec leave imul cmp leave out movsb xor lds bound inc ljmp push into push jns and loope stos fidiv arpl shrb mov push dec push stos sbb fucom sub xor rcrb adc push mov jmp push push int gs insb jge add cmp xchg xchg lea in cmp repz jmp cmp mov sbb xchg ret add lds jae aaa int3 psadbw int sub xchg pop adc fldcw xor ds out into or rcrb dec sub in sub pop scas fsub xor cli pop fsubrl sub push cmp fsts movsl hlt fldl jae xlat jl mov xchg pop inc dec arpl lahf mov mov mov out les ud2 call imul xchg mov xchg lahf pop fstpl out mov push cmp push sbb lods cs outsl push jns xor jno push inc mull sahf test add pop in test mov bound cwtl sar fs sub pop enter pop call push sbbl push bound stos xlat lea push movsl mov cld outsl (bad) stos and mov cmp lahf ds and inc ljmp mov mov out stos pushf dec aas fisubr xchg (bad) mov xchg leave xchg sub inc push cmpsb add and jnp xlat imul mov mov pop push fstl jle cli aaa xchg push mov std push xchg xor cld insb adc jl fsub dec pop out cwtl cmp stc pop and mov cmp cmp mov xlat stos lcall xor leave push in (bad) sub add push fdivs mov mov inc xor shll lret jmp push mov shrb test fistl pop or xchg mov mov pop loope xor outsb sub cwtl mov insb sbb mov scas addps aaa cmp and cld add aam xor sbbb cwtl test das jmp jp mov cmp jg,pt or rclb sbb sarb mov gs ret jae testl xor fsubrp pop movsl inc aad test daa movsl dec push rol xor loopne ret dec pushf into and (bad) clc dec movb shl push (bad) cwtl adc add xor jmp loopne jbe popa js and pop sub jl jno gs fstpl (bad) dec mov sub aam popa test jg icebp rcrb pop add cmc ss or imul mov (bad) outsb jns (bad) jae cli test or adc mov pop lea add add mov imul stc mov xchg stos popf xor jge jnp inc jecxz mov test mov xor adc push fstpl or (bad) push and rcrl pushf push fmull push and leave xchg scas mov mov lahf sbbl scas adc outsb xchg outsl loope nop idivb popa cmpsl outsl sub (bad) sahf in test and repz imul cmc gs js cmp fmuls add push inc int3 mov popa pop sbb cld outsb sbb test in imul add push hlt (bad) aas gs xlat push xor repz jp inc das out sub pop cwtl mov adc mov cmpsb jle push fcmovnb and xchg mov push sysenter mov jg xor movsl (bad) dec push sahf jae mov ljmp sbb leave xor jg add mov and sbb data16 cld out lcall pop fcoms inc daa push mov (bad) (bad) cmp lods pop dec mov push aaa cmpsl push fwait mov mov lods aam mov sub add and lcall (bad) xor sub inc or or pop mov mov xchg sbb mov mov jge sub fistp inc push lods nop ret mov js sbb push pop jb popa sbb into push ret mov push movsl inc movsl add pop adc xor xchg xchg mov jnp xchg xchg jg out fwait mulb inc fwait stc lcall std xlat add adc js dec jg in push out xlat adc jno gs jp and repnz fnsetpm(287 sarl xor inc ret imul outsb inc push insl pop icebp jne into scas ret xorb popa into (bad) xchg jl push (bad) arpl sbb imul jbe inc adc sub nop adc push jmp mov ret popf jmp ret inc mov outsl mov in dec mov jo mov idivl push push mov jecxz xchg stos mov push aas mov leave fild lret mov jo dec dec jno fistl jge add dec les mov or mov or pop lods xchg into ficompl rorl jle add lret hlt and cmp loop imulb insl cmp fwait ret sub js jle and pop rol mov mov cmp inc xchg movb lock xchg int3 out or dec jmp fildll fucom push cmp fbld rcl push or (bad) sbb lods push ds nop insl mov or shlb out mov stos inc sbb mov dec decl cmpsl nop mov adc roll adc cmp and and push test std push shrb mov mov call mov jl lcall pop shrb std stos mov sarb xchg ret fldcw pop sbb in sti mov popf (bad) sub into test and ret int cmp sub inc or xor insl and js js pop push fnstsw (bad) fisttp loop mov decb les mov pop cmp (bad) xchg push insl enter mov lea xchg push in xchg lds out pushf movsb inc cwtl push cmp push hlt das (bad) aad add ljmp ds dec (bad) pop mov mov push or pop jbe add fildl sub adc and pop into push jmp test dec push (bad) (bad) arpl inc jmp rclb cmp pop daa adc mov push sub pushf ljmp in imull ret jae adc pusha cli (bad) daa pop jmp fldl pushf (bad) jmp (bad) idivb mov out inc mov add xlat stos pop mov in mov push outsl xchg ficompl notb xchg xchg jbe bound cs faddl insl adc pusha and adc nop mull stc out lret sub icebp clc cwtl mov push rolb add xchg jg mov jp inc outsl pop mov cmp dec pop cmp repnz mov or mov mov cmpsb jns adc mov xchg mov lcall jg outsb aas out fisub and aaa xor xchg adc (bad) push xlat pop pop add inc pop and pop cmpsl add rcr push sbb lods lods (bad) jge sbb or add pop jae push out mov in mov cmpsl jmp xchg jne std cltd movsl jl adcl shll aaa icebp mov psllw stos push ret cmp inc add adc mov jmp es dec push add jb sub push cld out mov push fidivr ret jns in mov mov flds and cmp dec out sar sahf aaa sbb fstl push sub jp mov push xchg dec mov adc shrl gs (bad) je lea movsl push popa cli mov pusha jo push jo sub or aaa cld pop mov daa orl or inc jecxz jb mov add mov push dec xchg and int cli iret sbbl lods clc add cltd addb ret outsl and arpl mov (bad) in push lock shrl aaa dec lret push cli scas add mov outsb data16 pop ret cli mov mov and dec movsb mov imul popa mov mov adc (bad) xchg cwtl sbb ljmp xchg aaa mov and cmpsb hlt mov test addr16 mov cltd sub popl (bad) mov mov sbb into fwait aas (bad) add movsb in imul xchg jg pop jg xchg inc mov and push sub repz and cmpl sub aam xchg xor mov adc xor sahf adc pop xor pusha lcall mov unpcklps test xchg jmp outsl pop mov cmpsb sbb xor mov movsl or gs test (bad) mov push icebp push lcall cmp xor dec push cmpsl leave mov popa ds sbb dec out xor lret lods cmpsl dec ljmp jmp lods sub mov nop adc xlat xchg imul outsb sbb hlt adc mov mov fcmovne jne addr16 addr16 or aaa pop sub test push scas sub jns jno jle lds mov clc aam inc mov jg lods jns jmp dec cmp out mov mov in push imul lret cwtl mov mov ja add mov lahf mov pushf mov sbb xor sti es dec pushf icebp and dec dec nop stos dec cli daa xor aas jo fildl pop mov adc add pusha cmp loop adc push add jmp add sbb xorl sahf mov (bad) add sub (bad) sti or xor lds adc mov jbe jge xor lret in ja leave scas jmp sub jmp cmp jbe and inc je mov bound and repnz or dec mov pop les xchg in sbb sub dec nop jge mov sbb xchg xor cmp mov pop loop int (bad) stos pop cltd cmp aam imul xchg cltd aam into lret fwait push div cmp mov dec lods cli insb mov pop lea shrb push bound xchg iret cmpsl je lods outsl bnd faddl lods je ds fsubs jp aaa lcall cwtl cwtl in jb mov fadds push and adc sub repz jecxz mov outsl mov adc (bad) push jmp rclb dec lods adc scas popa (bad) jnp cmp jo inc sbb mov jmp (bad) dec jne out lock stos pop mov and aaa sub call arpl xor stos iret fxch js out addr16 push ret pop (bad) xchg gs push cwtl push mov jae push fist fst loope push dec loope inc cmpsb cmpsl cld scas in push je fsubrs outsb pop sub push xor jecxz int decl xchg loop movsl sbb lock mov hlt mov shrb sub mov sbb mov lea lea push test pop rcrb fidiv stos lcall dec scas mov mov sbb outsl test sbb jb test repnz addr16 stos leave inc cmp scas xor (bad) test cwtl scas cmp xchg nop mov lahf aaa fldcw mov adc test cs imull add fsts pop mov (bad) cmc cwtl f2xm1 and fnstcw out push outsb adc inc add push cwtl pop arpl and mov ds mov mov inc imul dec repnz mov div cmp loopne inc js mov popf scas pusha pop pop xchg mov sub loope sub pusha pop adc mov xor gs sub inc loope incl xchg mov movsb xchg loopne mov pushl cmp int3 fsubl pop inc in inc cwtl int3 push repnz nop or jl aaa (bad) lret repnz imul add out add pushf sub ljmp xor mov and outsb and in xchg sub fcomi in lods xchg aad push rclb xor push sub fidivrl add mov cmp (bad) mov pop add sub cs push push and lret push pop adc enter add cmp test sbb cmp pop and addr16 (bad) jbe cmp pop pushf imulb add jns iret movsb mov sarl dec cmc dec mov subl xchg push push ret scas cmp cld cli push inc mov lods mov xor sbb dec pop movsb cltd add inc mov jne xchg or fbstp pop add icebp fdivrs sbbb jno rorl or mov jae ss roll mov xor mov nop mov mov jg shl stc add hlt stos (bad) mov out lds adc js add push jnp pop sbb pop jmp pop mov mov hlt sbb lret inc icebp xor je mov scas outsl jl push push ja and or sbb push pop loopne add pop js out in xchg outsb mov cltd lahf popa mov aad lock jle sub incb sub cmp dec cltd fstpt sbb scas jl pop xchg (bad) lock je addl mov pop mov lods test cmpsb sbb cmpsl sub sbb in jecxz (bad) (bad) cmpsb jecxz xchg in jp mov xor scas mov jns addr16 repnz int sbb mov xor ret xchg dec je int lcall sub jg test (bad) pop pop inc dec test cmp mov outsl cmc push dec push adc nop mov pop sub pop lea mov push push aam cmp cs and add scas jb jbe incb pop adcl adc cmpsb xor dec xor push (bad) xchg dec cmp add hlt lods jle jae sbb adc dec iret call dec into jno xlat fnstsw aaa mov les in out cli stc xchg xor clc pusha (bad) xor movsb mov or push mov mov psubsw test fwait jl es test (bad) iret dec daa jnp out popf cmp mov jne xchg shlb jmp sbb sbb mov jecxz sti mov int3 jp (bad) scas mov adc mov pop and imul ror out mov xlat pop cmpsl scas fstpt mov sub sub mov adc adc int3 rol cmp inc cmp cmp js xchg lods xchg bound aaa orl jns jmp add subl push lahf dec push iret popa fisttp aaa ljmp push pop jle pop lcall inc push pop (bad) fldl mov xlat (bad) je inc add jg inc shrb pop subl push popa fxch imul sub inc data16 lea jl mov adc iret and aad test jno mov or in sbb fdivl jbe mov xchg dec or add mov adc (bad) iret mov mov or mov loope cmp xor imul movsb sti jp fcmovnbe sbb in cmp aas fstl push inc out in (bad) add xor cli pop (bad) xor adc insl popa cs rcr or and xor cmp adc icebp cmp xorl aas outsb fnstsw lods mov inc cmpsl push adc push lock pop pushf aaa pop or (bad) xor popa out mov push push cmpsl sbb test jb in insl jecxz push in rorb ja pop xchg and fldcw fsubs push aaa fstpl shrb inc jne push xchg arpl loope and cmp adcl or xor insb dec ror cli outsb enter push pop add (bad) ret das sbb repnz cmpl cwtl popf stos in daa into jno cmp jb insb popf dec aaa and jnp xchg pusha adc leave mov adc cmpsb jbe sbb fdivrl (bad) pop cmp (bad) dec xor mov iret mov imul jne inc pop aaa mov in pop pop lock mov push pop pushw add mov sbb mov lea mov into xor pop (bad) test push sbb stos lock fist scas (bad) xchg ds add add or cmp cltd mov addl nop and sbb adc xchg pushw push inc cli je test and jge movsl loope cmp (bad) nop mov (bad) jmp adc pop pushf fcompl inc add dec sbb mov sbb repnz test mov or mov popa bound std test (bad) adc rcll xor adc sub outsl push fldcw sbb jb cmp adc sbb sub rorl lea dec das iret cmpsb dec mov movsb call xor mov cmp repnz dec sbb mov xchg (bad) jae outsb js or adc xchg ss xor cmp cmp push cmp dec call test (bad) add sub xchg sbb fbld (bad) outsb jne shrb (bad) xchg cli jo daa arpl rcrl push xor sbb hlt mov loop stc push orl mov xchg push in pop pushl lret negl sub ja stos (bad) jae out shll and mov ja xchg pop repnz mov (bad) lea inc psubsw dec mov gs pop lock jmp scas mov adc stc jp cmp mov inc xchg push div jo repnz add mov jmp gs mov (bad) jmp daa idivb push mov and sub iret inc xchg push cmp mov sti dec sub mov jbe fiaddl loopne,pt xchg xchg (bad) add sahf iret add pushf stos add fwait stos (bad) cmc int3 xchg mov bound mov adcl out sti mov imul adc in sub scas jmp jp cwtl sub popf stos cmp in xlat cld sbb pushf xor jno mov mov ds and scas fdivrs jne,pn pop rcll adc pop pop test das mov pop fcomps sarl or xchg incl adc dec loopne cmp dec loopne cmp dec loopne cmp jmp lock pop repz mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mulb add add or or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop sbb pop lret pop out xchg insl fcmovne scas aad mov stos fwait mov insl jmp mov sahf out push jl lahf lock in pushf xlat add enter andb sarb sbb inc fsubr xlat cld inc adc mov mov mov inc cli loope jno scas stos fiaddl in aad imul imul sti outsl arpl andb stos fnsave pop push sbb shl je les icebp mov cwtl out xchg out mov orl les dec jg sbb lret lea cli fsubl aaa frstor ret scas inc arpl fadds push es xchg push aaa insl or xchg mov pop das pusha xor add push enter jne test push jb (bad) cli and push pop jnp ret (bad) xchg aaa repnz int imul daa in out sub jp stos add jb data16 hlt and sbb out repz movsb ret ja (bad) call xchg test repz xchg xor ret out das cwtl mov pushf and pusha (bad) xchg mov inc mull xchg in dec jb push or mov out cmpsb push mov addr16 jmp mov push imul btl jae and add addr16 cwtl (bad) call mov data16 (bad) sub int mov xlat mov mov add das add sub cmc clc ffree and adc in rcrb js test adc mov xor imul lea cmp js fucomip xor aas aas popf dec jno mov insl and fild ficom bound or lret in icebp mov stos inc mov (bad) xchg adc mov lds or mov in movsl adc stos negl in mov and jge pop dec sbb xor rcl or xchg cltd xor pop add push mov cmp and (bad) cmpsb mov push push das add out stc icebp loop aam jl cmp cmp movd stos or ss cmp jns cmp fld ret lock dec push push and push jl aas mov sbb lods dec rcrb push adc cmpsb lret jo mov xor lods xchg jbe xlat inc enter push cmpsb aas mov adc bound iret cli into adc dec (bad) aam pop cli cmp sbb mov push mov lock mov jo dec arpl fwait clc xlat push mul adc rclb aad outsb in mov pop and iret push sbb aas popa std jb loope inc shlb pusha dec fidivrl or fimul and out insb rcl inc arpl and dec js in mov shrb push sub (bad) mov and jbe push (bad) mov mov cmp scas jle mov inc inc mov out sbb lret adc pop dec test fiadd cmpsb out hlt (bad) dec imul cmp repz in addr16 add dec push (bad) or pop scas mov lahf and push dec sub jl sub inc cmp aam ja cmp xchg or mov iret push jl push dec mov pop mov add pusha ret xchg in notl les adc call adcb xchg sub rcrl rclb insl pop pop je hlt into mov cmp (bad) inc ret pop test jb pop xor pop aad xor pop jo mov cli scas enter mov dec mov icebp push data16 pop cli incl test mov imulb jp cld (bad) in popl dec lcall add push test mov js gs mov xchg jno dec faddp popf cli sub jmp cmp mulb add fdivl clc sub rcll xchg mov sarb mov mov sbb imul pop sbb mov dec fwait arpl xchg rclb sbb and repnz adc int3 xor jno lcall bound ficoml popf pop cmp xchg adc mov inc jl int3 sub cmp sbb (bad) movsb lret and cmp daa jo jecxz and sub (bad) dec and or and push mov or loope xor sbb mov fwait and mov (bad) fsubs adc xchg cmp xchg adc adc mov or xor dec movsb and pop ret gs js push mov rcr pop (bad) jo clc ss dec ret cmp scas mov mov sub cmp daa lock dec xor leave lods add rol adc pop sub mov fidivrl jo aam sbb xchg pop mov push mov lea mov stc jg mov mov ja daa mov or das fsubl daa jno cmp rcll and ja mov push je popf hlt cmp in cmpsl and les sbb jae jp rorb loopne xchg popa lods pop mov enter mov iret jns mov pushf imul gs pop stc fisubrl addl sbb mov es cmp mov (bad) xor mov aaa jbe jmp cmp mov or daa xchg cwtl push xchg and push xor jge hlt sub repnz and sti cmp mov inc jg mov mov mov and fildll ljmp cmp pop in adcl das jo (bad) popf mov (bad) incl aas xchg mov xchg scas stos add (bad) inc push jle (bad) into stos adc add cltd add sbb push int3 xchg jmp inc sub int dec or nop jl pop pop mov mov push pop mov push (bad) adc sub xchg pop dec xchg xchg inc cmp sub inc pop push xchg imul (bad) aam mov sarb lret mov leave clc xchg repnz (bad) imul xlat insb fsub idivl inc scas dec mov pop pop xor lock and scas mov or int3 out lock jle aas mov mov in hlt xor xor cmp (bad) sbb sub in in sub test pop test aad mov (bad) clc and sub inc movhps rcrb popa sub imul out sbb push sbb js in decl cmc push ret inc insl insl pop ss and mov cmp (bad) push (bad) mov adc xchg jg in mov sbb sbb ss xchg in xor jo push cld fnsave sti rcr mov rcrl push cmp lods leave push sub cmp pop insl mov push cmp ds ret jg,pt mov xor into (bad) cli add inc sbb xlat lds cmc jecxz mov (bad) das aad inc adc ret jno std mov mov rorl ret test pop pop xor setle cmp lcall (bad) ljmp sub js add jne repnz repnz dec movsl jecxz (bad) scas jb pop sbb push hlt ja (bad) pop push jae add adc inc inc movsl xchg cltd out ja push push js ja lds test (bad) cmpsb cltd aas sbb ljmp sub nop mov xor cmp mov jbe mov xchg outsl jno xor xor fwait push jl hlt inc inc sub fwait jo push es es mov loop cmp ret call push aas mov inc imul xchg mov fistp mov or xor sub lcall add xchg xor lret aad mov jge cmp jle cmp repz les fwait vpsubb test repnz xor int lds loopne sub sti jb pop xor shrl fisttpll mov xchg dec movsb cli sbb ljmp add sub dec dec xchg and out popa dec fnstenv push enter outsb mov (bad) adc add mov cld cmp sahf jmp int icebp jge mov and jg push and xchg cmp data16 (bad) mov sbb cwtl lea call aad das aas popf push or push repz fnsave xchg fbstp push mov outsl loopne scas and jmp adc repnz jb,pt ret or and dec inc ljmp xchg jno pop mov out mov je clc insb sbb mov sbb test int hlt add add (bad) dec sub (bad) loopne mov shlb lcall fwait push mov (bad) lret jg xchg xorl fist fcmovnbe (bad) sub mov idivl stc jnp xlat clc or mov inc out hlt jl sub fdivs lods out sbb xchg push mov out (bad) sub mov mov pop addl jno (bad) jne ret xor mov mov (bad) dec pop aam mov xchg dec cmp cmc push lea add rcll jnp xchg (bad) mov and xchg ret inc jmp hlt xchg inc sbb push (bad) loope (bad) xor mov jl aaa or adc das repnz movsb es xchg lods mov dec push inc inc lahf pop dec or push cs mov insl lret dec sbb scas cmp jge add lahf es fnstcw push stc mov add and and (bad) notl (bad) negl aaa bound imul mov and mov in cmp clc outsb mov mov mov in sub mov mov arpl in rorl xchg test ja cmc mov lods leave push xor gs data16 test call (bad) lahf bound cmc lcall (bad) cmp imul xchg xchg pop rclb mov push (bad) cmp rolb jecxz sarl ret (bad) aam (bad) and adc repnz subl stos imul lcall in addl jne in aas cld hlt test stc xchg pop (bad) sub fcmovu icebp sub (bad) mov data16 mov rolb popf push mov enter inc lds sbbl out call push fildll push mov into faddl sbbb and pop hlt les and jge push pop xor xchg imul pusha cltd iret outsb pop xchg and (bad) fsubs push sub inc push fisubr out mov idivl cmpsb jge imul adc lods dec mov out in ror out dec fwait jle rolb dec (bad) arpl idivl and std sti mov loopne nop pop fstpl and loopne mov inc sub les fimull rcrl mov xchg jg mov out mov addr16 or movsl xor (bad) jno cld ja test inc dec daa dec sub jp xchg std lahf out jge scas imul push out pop dec or cmp in jae mov xchg call push pop imul jecxz aaa dec jp xor cltd movl enter or cmc push push mov pop ficom aas loop xor (bad) dec mov jecxz pop lcall pop and inc jle adc push pop jmp xchg or jo lret or dec or jp mov xchg xlat sbbl je cltd add enter jg cli (bad) stc fcom push lock scas pop xor push or addr16 pop add mov mov fmul inc pop xchg inc add cmp fildll ds lret test ficompl xchg fisttpl or (bad) jno decl popa xchg jmp lcall pop adcl cs (bad) iret ss or adc dec ret int mov out mov das sbb bnd mov repz std cmc fwait subl (bad) mov and fisub sbb icebp mov jge into (bad) lahf jb xlat movsb ret mov mov cmp fwait insl xor push adc pop int mov aaa cltd shlb cltd add mov xchg lahf dec mov mov stos jns sub push adc and nop fcmove lods mov mov ret (bad) and rclb jo roll (bad) cmpsb pop sub in push and sbb sub orl sarl ret rcll clc out jp add fwait imull cmp cmc call xchg sbb jl cli sti inc (bad) cmp xor push or cmc jo aas sti jp xor push adc jg aam insb cmovns mov xor pop mov data16 inc mov insl cmp mov ljmp stos sbb mov mov jnp out cld out push lock and push jb addl (bad) shr jb jl push rcl aam mov leave lahf jae jne xchg cmp or mov int sti and out push lods pop repz xchg (bad) in xchg inc orl and pop in xchg push lcall je add hlt inc pushl and fist mov mov fistp bound lcall inc sahf fdivrs jns pushf call bound sar adc mulb jmp jecxz push (bad) xor int3 js mov push (bad) adc out adc sbb jb mov cmp out mov push call pop xchg mov bound jnp ret loop fcomps push ja fs mov je push pop loope inc hlt xlat shll stc loop insb sub xchg (bad) ljmp mov inc (bad) xlat xor ss pop mov pop add out or xchg add (bad) sub xchg cmp and xlat das add nop mov adc leave cli inc or sbb into outsl out push pop jecxz or icebp (bad) imul dec push mov out fs add sub xchg and out cmp (bad) (bad) icebp scas push lods sub sub xchg int clc sub xor stc out inc out mov cltd cmp lcall dec fdivrp enter mov div pop sahf out add jp fstpl xchg inc dec push add jmp lret xor dec or push jno dec repz loope (bad) stc and jg lea adc movsb sub nop std andl mov dec enter rcrl or mov push or test xchg aaa add inc cmp bound test xchg adc mov int3 push mov lea mov xchg dec sti sbb sub pop sub dec mov jne (bad) cld sub std add push inc or and outsl add cmp add jmpw cmp inc test cwtl adc shr xchg push cltd (bad) xchg pop or jmp fsubs rcll rolb dec xchg or mov adc push add jno aas lret lret clc dec xchg inc push mov jns in and repz fcmovnb jb addr16 (bad) fwait xor outsb insb mov (bad) ja mov mov mov inc adc jle jp mov scas movsl int3 sbbl jno and rolb or mov push jne push leave pop test subb js clc outsl or mov in (bad) mov sbb push (bad) out ss nop call test pop sub mov stos inc inc mov (bad) push mov xor and mov subb (bad) into jle mov or lcall mov popf sbb and shl maskmovq (bad) dec mov jmp sti mov mov mov ret test xchg (bad) ja fnstsw loop lods lds pop xchg fs ja imul add scas cli add test pop call cmp aas aaa hlt lret int ss cld mov mov in cwtl fwait add sub sarl xchg adc add ljmp adc aam js clc and push mov mov jl jae inc adc push dec adc sarb xchg mov int mov lods sbb out mov adc mov loopne je cmpsb es aad sub push fldenv push ja dec int3 pop or cli inc test push out jno sbb push icebp popf sbb rorl push cwtl inc push outsl iret lock push repz jmp les pushf dec cltd out enter pop shrb xchg pop sub jmp enter lods adc lret shlb sbb pop aas inc and shrb ljmp shl insb and add fwait add std lods popf cmc lret (bad) xor (bad) fdivs inc (bad) xor adc data16 out mov dec sbb jecxz ficompl jg fistpl in xor out fldl mul or aam std xor dec xor das sub jne cmpsl addr16 cwtl inc ret int3 jnp out push xchg push popa lea inc xlat lret loop jg mov repnz jle (bad) push stos mov cmp test xchg sub add xor xchg add repz rorb lcall and mov pop mov jecxz sbb mov pop negb jnp pop xchg ds stos add insl sub movsl fwait lds sub xor or adc popa cli cmpsl cmpsb mov imul xlat dec (bad) pop cli pop jns icebp lock cmp cmp negl stos clc lods or and ret bound sbb or (bad) mov cld mov in or and fwait adc jno mov cmc mov mov scas jg jge adc jecxz ficoml mov (bad) insb jl adc lods jp xchg or iret xchg sbb test cmp adc pop sahf ds dec dec mov jno xorl mov sub stos push cs mov mov loop enter inc aad pusha addr16 pusha or pop movsb (bad) fnstcw inc and js mov outsl pop push sub push nop out lahf or adc scas lock push pop pop inc pop cwtl sbb pop cmpsl mov icebp mov mov hlt repz scas testb lock popa cli pop jnp sbbb pop sbb jnp ffreep aas sbb fs inc jne pop or mov pop xchg dec ljmp fnstcw jl inc xor xor popfw leave mov ja pop jle dec ret pop cmp sub test outsb xchg flds insl dec dec cwtl push lds out push dec cmp shll fwait dec pop cmp test mov jne cmp arpl push out add scas mov dec dec pop push mov aad int3 popa pop lea shll and popf fsubrl imul fcoml cmp jo xchg add mov xor cmc push aaa gs dec jb nop mov mov bound pop sbb or in call dec scas stc inc mov pop pop and lret aaa pop mov loop xor arpl add cli jmp (bad) mov dec push (bad) jno cmpsb jns push imul or jo cmp call js (bad) mov adc jno enter cmp movsl mov imul adc xlat push xlat nop out lods (bad) enter cwtl stos push jne pop and adc into dec pop cmp cltd mov stc shll scas (bad) stc ficom scas cmp stos sbb outsb xor push xor popf jle insl or sub lret pop (bad) sti push iret sbb inc rorl xor dec add adc (bad) scas test (bad) sahf rorb mov sub out push ret cmpsb mov mov push sub cmp push addr16 cld cmp lahf adc std add sub adc sbb mov xchg pop sbb pop hlt xchg sub fisubl inc inc outsb lret sbb mov fs add into shrb test add or lea (bad) data16 sbb jmp fildll sub cwtd nop cmp (bad) fucomi leave or jne cmp xchg je push lods push mov stos int mov out xor adc cltd or leave into xlat pop insb pop and cmp loopne imul xor pop push lret and cmpsb adc imul dec pusha jb add xor popl sahf stos fs jle mov aas repz push pop cmp (bad) xor adc inc lret add sub jge aas dec repnz (bad) jbe mov repz in sbb pusha clc push dec dec mov ja sahf add into std pop pop mov fst jb push jp push sti xchg adc ds pop add fwait aam (bad) (bad) jae jo dec push imul pop insb sbb clc test out cmc cli inc push pop adc pop dec in mov pop enter popf mov dec cwtl loopne or ror pop jns mov xor push jae mov addr16 je cwtl loop pop inc push jg add adc mov adc (bad) sub outsl mov mov mov ss cmp test scas test mov mov sbb sti fcompl or xor dec mov add popf xchg add arpl test fsub xor out xor aam leave int cmpsl push lcall imul loopne,pt fidivr push sub popa arpl inc adc les imul or xor lahf out das dec loopne gs imul lods mov mov pop xchg ss push fs or into xchg and mov mov sbb jp clc shl std mov inc pushf xchg in loop scas sarl mov nop pop adc mov clc cmp aam enter addl xchg flds sub adc int3 mov cs fisttp fcmovnu flds pop mov imul xchg cli (bad) mov bound push pop neg pop cmp sub aam pop sub add mov mov push ret xchg inc dec (bad) fildll pop xlat les cmp enter xorl pushf adc inc loopne dec mov and adc xchg shlb push mov testl mov (bad) mov and fldt pop sbb jge stos (bad) push test mov fidiv pop lds ljmp jo out ds cld fbld stos xchg ljmp inc pop mov das xchg cmp xor adc mov mov ljmp sbb inc clc sub push in cmpsb js ja push orl ss lret xor outsl mov pop add cmp cmpsb jne jo mov mov jae out mov sub das fistpl orb dec leave mov mov sahf xlat mov cs ljmp (bad) in xchg fistpll and xor shll cwtl imul sub pop in xor and mov std mov out (bad) sbb sahf (bad) popf push xor xchg (bad) jbe iret mov add or punpckhdq or add cmp call or inc lret jnp fisttpll mov pop push pop ret sti inc jo mov inc mov mov xor cmpsb lret add and into int cmp out cmc (bad) add jp mov repnz aad mov mov in xor mov pop jns or inc into mov lahf push xchg xor mov and (bad) xchg aad scas and dec rcrb adc lds (bad) inc push sbb push fimul jns imul or mov xchg js pop push dec leave xchg mov fiaddl cltd push jne push mov pop iret xchg dec cli pop push mov sbb fistl pusha clc mov mov push adc xor movsb ret mov cli mov lods pop dec cs call ret add mov arpl push inc ret push pop aas int3 adc out lock outsb outsb fbld data16 push sub xlat push insl decb jne in sbb cld dec ds dec mov xchg sbb cs subl add fisubr fisubrl movsl sar inc int std aas push pop lcall sbb mov lret sahf hlt pop mov xor pop add shlb pop adc xchg inc dec scas movsl mov notb jg leave or adc and add lret xor je mov aaa enter add test repz pop (bad) outsl or mov (bad) sbb push pop lcall das pop or insl mov test lods dec sbb cmp (bad) pushf push sbb fwait in out mov or aas add or pop or inc arpl jle sbb into dec xchg inc pop out (bad) xor test ret sbb nop (bad) pop mov pop pop ds mov add adc dec loopne cmp dec loopne cmp dec loopne cmp jmp lock or inc repz cmp add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add in and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov orl in fcmovbe bound adc mov cmpsl push arpl mov pop lea lea aas out sahf lahf xor or add add inc bound loope addr16 dec pop lret add dec movsl pop int3 arpl nop stos notl and notb xor int cmp repnz repnz push xor adc sub mov (bad) pop xchg push add (bad) lods clc jne fidiv jae sarl xchg fadd cmpsl sti int push push mov stos clc mov test icebp xchg sub mov sbb adc fiadd ja dec or leave mov (bad) or or int3 xchg loopne sub in hlt adc add scas push bound out popf fmuls adc add dec stc outsl push pop mov out shrb daa or rclb adc jp in (bad) mov sbb mov xchg mov xor jae push js (bad) loopne mov mov call aas push fwait xchg inc cs add imul pop ja xchg popf jbe loop hlt std sub clc mov mov out push std mov xor push stc jb and addr16 push in shll pop insb imul inc aas mov int sub or jle movsl in push mov jecxz push flds cmp or imul out pusha ds mov das insb mov jecxz (bad) mov xor and imul push (bad) mov jle and rclb testl sub (bad) cmp push sbb xchg xchg loope repnz pop jo xchg lods or cmp imul jle fs pushf lret adc jmp (bad) out fcomi loop xchg mov fisubrl push sbb ljmp mov dec push cmp xorl push add movsl dec bound lea out fidivr out sbb push cmpsb dec pushf cli mov cli in cld outsb les add pop icebp jge mov and pop enter aam test jbe jae jmp inc xor dec cltd imul (bad) (bad) mov popa incb xchg mov test jmp and stos inc (bad) sbb inc jl mov pop sbb test adc (bad) cmp add mov push mov gs jne ds push out and push adc imul sbb mov push orb lods mov inc pause adc rclb insl sarb or push aad or int3 (bad) (bad) mov inc (bad) iret cmpsl cli push loope call fisttpl fisubl int add cmpsl aaa pop sbb inc push push daa stc aaa mov loope xchg push xor push or mov cmc jge jo mov jle je,pt push insb ja (bad) (bad) push loope push pop pop insb mov cmp dec xchg dec xchg pushf jle test dec lds sub ret scas lcall mov sbb jb mov and dec push pop mov inc sbb xor stc add and cwtl bound xor mov adc xchg scas popf fs pushf mov inc xor or cmp sahf push push mov sub popf sub stos inc pop loope divb add sbb stc lea and aas jno push in or iret enter sbb sbb jne,pn je xchg xor sbb je movsl cld jns mov push lcall mov ret jl ljmp mov mov in xor xor sti shlb mov jne repz adc outsb cmp loope jae or jp mov adc (bad) sti and mov test pop sbb inc movsl std mov mov sbb mov adc (bad) mov or push pop js rorl aas push aam (bad) sub inc and xchg leave into rcr mov rorb inc push stc imul adc fwait mov cmpsb outsb lea pop xchg (bad) clc cmp int lock outsl push xchg aam pop imul or sbb fwait andb push movsb outsl and data16 movb mov test inc adc mov into cld aad lcall pop push popf pop mov jae push jns data16 icebp adc and jbe xchg jnp sub dec inc add pop movsl mov mov inc jno push push pop and int and sbbl scas (bad) outsb xchg push adc or or icebp (bad) sub cs mov sarb and int3 sbb sub or push mov outsb add add cmp jo add dec or mov repz push jmp or sti or lock xor mov xor fldt clc mov lea xor and adc mov daa dec pop xchg jge add sbb sbb xor xchg pop mov push inc jmp out cmc lcall pop sub inc aas mov inc shr or sbb out mov cmp jb ret test mov add pop sbb adc fsubs pop (bad) mov insb ds pop mov inc insl add outsb inc push mov xor std adc mov mov ja push inc jle push dec and sbb xchg push mov or xchg or ds jl pop or fdivrs cltd in mov xor enter das mov std (bad) (bad) (bad) ret pop call xchg std sbb add mov ret scas inc outsb and test fldenv std add out std xchg sub sbb cmp cmp (bad) rep mov or xchg push and jo xor pop mov xor sbb mov clc fisttpl (bad) (bad) push sub stos pop xor iret loop jnp cmpsb cmc fmull inc out xor es mov sub test enter inc enter mov mov popa push push sahf adc and int3 test dec scas pop xor rcr subl fdivr dec mov pushf imul movsb xchg and jne mov inc mov rclb pop insb scas pop mov xor test int3 cmp lahf mov push and cmpsb test es push push sbb cmpsl mov imul mov int push lret add sti pop xor les lods and fwait lahf aas mov (bad) mov jae sti rolb or or dec cs pop inc ljmp mov add push cmp and clc out cmp pop movb lods mov pop push push insl push pop cmp inc push lcall xchg lea or inc shrb mov nop ljmp mov sub or lret sahf comiss divb fmuls test stos test in xchg mov adc xchg mov jmp fs xor in mov pop mov xchg add add mov arpl xchg cmp in adc scas scas repnz loop loope popf jmp insb subl lret loopne xchg mov cwtl sbb dec pop xor idivl popa sti cmp fildll jp jp push repz cmp fcmove jae cmpsl push test jnp cmp insb fisttpll xor xor xchg xchg adc je stos dec mov or imul lds (bad) pushf xchg xchg ret test outsb and pop pop (bad) (bad) xor mov xor scas mov dec push jne ficoml push les fnstsw adc push addr16 or add aad aas xor loopne jg xchg fmuls ja js lcall pusha pop push adcl insl jge lods insb (bad) mov or (bad) mov jbe xor sub in mov cmpsl sub jecxz adc mov and xor test loope iret jae outsl mov inc into sub or cmpsb int3 pop fs enterw and sbb lds mov inc out sbb popf clc clc daa mov pop sbb pusha out and sbb inc pop ret mov inc or dec jg (bad) jl adc mov test or (bad) or in xor add pop in repnz inc and (bad) sub sbb insb lds fisubl xchg cwtl clc push mov push fwait ja mov and pushf enter ja mov (bad) pop adc pop mov mov push sbb and sbbb lods push push mov jle dec fidivr ret push add lret xor sub cwtl in (bad) sub lret cmpsl push xlat (bad) jae test mov adc (bad) pop not mov inc inc daa imul out call call gs lock (bad) cmpsl gs sbb add dec push andl (bad) mov lret mov fisubl cmc xchg cmpsl mov rcr mov push pop cmp mov fmuls fwait lea addr16 insl and jl mov loope fs insl mov sbb popf push mov xchg jo pop mov mov incb in mov sbb cwtl sub imul popa xor xor xchg data16 ret repnz rorb pop xchg mov lcall xchg sub sub jbe pusha dec data16 lahf and bswap push divb add mov jne stos dec cltd sub leave (bad) jae xor loop fldenv xor scas xchg push sbb push pop fsubrs push pop icebp jl fwait jp pop (bad) xchg pop rep ljmp (bad) or jbe hlt test rcrb inc inc fmulp sbbb (bad) jo and jne mov xor ret jle add cmp push enter test lret mov insb pop in jnp or xor mov or leave imul fstpl jmp ret cli mov int3 pop push cmp inc mov jge and dec imul gs lds push fldt or rorl movsl and jnp rol mov in adc movsl imul mov add cmp sub popf mov outsl jo cs sti and loope orb or scas aad and fistpl ret bound pop hlt sub (bad) ret push mov and sbbb test mov lcall add gs sub cmp cmpsb sti mov sbb jno push fildll fimull adc out mov and into repz pop sbb lds xor inc jb dec dec or outsl xchg mov push outsb scas fbld fdivrl (bad) repnz test (bad) out lods push or push mov ret pop hlt mov sbb lds xor (bad) mov outsb xchg in js xor rcrb add in ss xchg enter int3 xchg (bad) and dec pop mov aad (bad) jmp sub sub shlb addr16 fsubrl rorl mov cld pop mov (bad) dec push arpl icebp dec popa and cld cmc jmp xchg inc inc test cmpsb cmp jmp (bad) mov (bad) xor dec cmp js popa pop in das mov lret rcll sbb pop (bad) jnp fadds and pop outsb add and cmp (bad) xor hlt out dec inc sbb sub push and xchg popa enter cmp stos divb ja sbb out cmp sbb icebp stos in xchg jg jae (bad) pop sub out xlat pop xor into xor out pop movlhps push and or stc push (bad) ljmp (bad) leave les xorl xor inc pop stos xchg ds mov xchg jbe inc cs jecxz test mov orb cmp jp push bnd repz cmc sub inc ficomp sub mov (bad) cwtl sbb lret add out mov pop inc adc clc sub cwtl ljmp aas mov mov push xor sbb das test jge mov add shr (bad) jbe sub out mov mov jg out (bad) leave jno (bad) fsubrs nop int pop or cmp insb jecxz das sub inc fstpt (bad) das orl paddb push jno cs scas test aad push ljmp cmp mov sub leave and loop fs dec pushf pop or cmp cmc imul ds push jns scas cmpsl jb das sbb scas sbb inc xor cmpsl dec daa or mov cmp or inc or je or mov add sti mov add cwtl mov scas shrl (bad) mov lock add add fidiv out mov es sti or pop lods push cmp inc or pop pop lods jle lcall out jp cmp sub xchg (bad) int lds jle jmp xor adc sbb cwtl or ret imul out pop out jp push cs sub fsubs jl in test popf lods sahf imul cli ljmp or jecxz sbb inc mov ficompl add adcb pop lods mov or xor mov (bad) xchg ja jnp in mov fs xchg in movsb aas jmp xchg dec scas add rcl mov test dec stos leave jno (bad) (bad) imul pop insl dec dec sub mov ficom (bad) xchg mov mov mov and cmp les xor fcmovu sub repz or popl cmc rol xor stos cmp dec movsl xor jge stc xchg lea loop or and lods je ja xchg ffree xchg ja int3 add rcll xchg fcomps stos jae mov jge mov add pop jae les mov in lods sub mov xchg ror ds cld in cli or cmp fdiv jnp mov lret adc (bad) cmp int int mov cli cld cmp push push mov loopne insb push or inc mov or das dec jge pop cmpsl addr16 sub xchg cmpsb mov jl ds jge jno repnz push (bad) in pop sarl push pusha pop jbe mov dec sub or arpl in ss jge js pop inc movsb test xor aaa add cs xchg mov xchg pushf add scas sbb push into adc or xor push lods jb cmp in ljmp mov mov orb enter rol cwtl lcall clc std sub sub jno mov popf xchg iret or ja test mov in lahf inc mov inc stos xor jg add xor repnz push out ss add ss xchg xchg xor mov xchg mov pop adc cmp addr16 jecxz orl mov mov repz imul mov hlt pusha jo jmp or test divb or jle jp push cmp rcrl pop jl push fxch sarb in xchg mov in jmp sub cld jl add cli xchg inc insb rcr iret or daa popf add jb sub push mov ror ja lock sar iret cmp sbb push outsl mov cmp jp les add dec adc push sti lret sarb int jb xor cmpsb mov call gs stos ret ret mov pop xchg cld push push mov lea sub out jg jmp and outsb add fsts adc jp xor imul std (bad) adc notb sbb sahf test aaa xlat in adc jns xchg dec mov inc in (bad) imulb insl jecxz movq imul pop cmp adc in adc in add insb arpl fs cmp xchg jne in cmp cltd adc rorl xor xchg cmp cmc rcrb jne (bad) andb and dec aaa (bad) into cld ds adc jmp xchg enter aas sub test movsb fisttpll adc lods inc cli lds mov ja aad js out test sub add (bad) (bad) xchg fs pop iret enter mulb push test sahf cltd or lahf mov mov movsb jge ljmp mov or cmp dec mov add lods xchg adc cld data16 inc test and or (bad) pop jg mov add idivb dec int shrb adc outsb dec mov cmp jnp outsb jb gs insl mov leave jo adc xchg add les out loop roll mov mov scas out mov mov iret enter inc dec stos and lds or adc pop outsl (bad) dec int aam stos mov (bad) or jmp and and mov jge loopne stc mov into inc roll jno repz mov xchg fisubrl fldt outsb out inc cwtl xor in fmul xlat push jp push push mov lret or test and dec mov inc lahf rorl mov jl sbb mov xchg std mov or mov arpl loopne jecxz lods xor cmc pop fnsave xchg or insl jo lahf or sahf jno cmc inc inc ret jge pop cld jge notl xor shll lds and fcoml adc mov bound fs xchg test or inc mov push jp test sbb (bad) fnsave jecxz cmpsl mov outsl into aas outsl (bad) mov test pop dec push int3 in (bad) mov mov int3 push and repz inc cld jle enter xchg ret xchg stos pusha jmp loopne xchg mov sarl and sub mov roll jl xchg (bad) push mov mov nop mov xchg xor or jo xadd arpl cmp adc or mov dec cs or lret nop add sub dec pusha lods (bad) lret mov into mov dec fimull fldenv sbb add imul dec movsl lds (bad) out pop (bad) lret mov mov leave add nop daa into fs push sub sbb add cmpsb outsl mov push inc mov jo xchg lock inc push mov sub lock fistp cmc xor hlt (bad) fldenv lock push mov mov and push daa inc repnz and cmp cmpsb ss mov add or dec roll sbb adc ds xor adc stc mov pusha es push scas hlt xchg adc fbstp fnstsw enter cmp xchg mov pop les lock pop outsl adc ror pop inc mov out clc xor push sub cmpsl (bad) clc hlt outsb mov jnp pop xor outsb mov je inc jbe cli xchg lret aad push jbe,pt les das push imul idivw jge add sub mov and jne in jno in (bad) mov cwtl les inc sbb mov push xor (bad) jo cmc sbb and xchg mov inc mov jne out push adc stos push xchg dec jg adc jg popf mov bts out jle sbb cmc ljmp lds sub jge bound mov ret dec or pop adc out (bad) mov dec bound inc lock lcall int3 xor dec mov fsubp inc xor sub add in std push push popf jg pop mov pop in sub add lcall jecxz mov jmp negb movsb scas pop imul inc adc pop cmpsb sub std pop push cmp data16 fwait pop or iret cmpsl sarb jns jnp int3 pop jge imul adc inc fsubl test adc lods xor push lcall pop mov lods mov jb lods (bad) mov xchg sbbl lret (bad) jne mov out cmc cmc xchg stc adc flds mov sahf test movsb mov cld (bad) ret sbb dec (bad) imull and mov fwait push mov mov loop mov push cmc lcall dec std fwait adc lret cltd jns jle fidivrl movl mov and xchg in mov sti int3 mov loop pop mov inc add nop inc lret insb xchg xchg pop sub outsl leave scas fistl cmp test add cmp fistpl or fsts int3 lock enter sub jns sbb jmp (bad) dec mov xchg xor mov fs adc mulb mov xchg mov lea dec aas mov mov std and push cmpsb dec mov nop jne repnz pop mov inc fwait cld in push jl xor pushf push pop (bad) call in imul add cmp repnz in xchg test pop movsl test push mov sub mov scas mov add push cwtl adcb adc movsl sbb in mov idivl int3 adc jecxz aas sbb pop mov sub push or sbb pushf lahf loop std fdivrl ss cwtl jp inc xchg stos xchg or pop mov xchg orb and repz ret stc xor pop (bad) fistp lea insl clc pop (bad) xor dec movlps pushf push jns aas jb xchg shll jecxz jp movsb mov (bad) lcall mov inc movsb cmpsl gs scas pop adc mov fcomip push jl or das ljmp les push cld fcmovnb xchg jmp loop jne push mov enter aam xchg mov jmp (bad) push and ret sub pop iret mov xchg leave mov mov mov xchg mov test pop sbb pop enter xchg std mov jg aad std iret leave sub sub add and (bad) xor arpl leave sbb popf icebp popa cmpsl sbbl sbb push cld dec (bad) mov int3 adc and scas ret es mov inc adc push cld or out or arpl cltd (bad) cmpsb sbb imul cmp sub maxps mov jl lock dec sbb lock das xchg loopne push xlat frstor jl push fmuls fistp lods lods mov lcall mov add fcoms aam xchg ja xchg sbb stos xchg incb push cwtl xchg aam dec mov call jecxz popf psubw pop mov hlt sub and inc (bad) cs xchg lods lahf fistpll fnstsw sbb sub rolb or adc addr16 (bad) jb (bad) outsb mov loopne repz mov mov (bad) es out aaa cmp mov (bad) cli out insb sahf and stos xor popa addr16 sbb sbb inc out in stc (bad) movsb jnp pop mov dec (bad) iret in loopne cmp sti mov (bad) lret mov loopne mov aam scas lds daa sti les mov enter sbb pop adc das lea and jge jmp test adc adcl or cld das xchg outsb add leave idivb aad or fcmovu dec mov ret inc add lret mov mov repnz stc insb leave aad js imul lds fidiv mov adc hlt or out sub in xchg push jmp leave jne aaa outsl js or je add lea and outsb enter arpl dec jns imul push cmp fwait sbb (bad) ljmp xor arpl push std sbb mov or and stc mov scas rcrl test inc jg mov cmpsl fucom pusha mov inc and add (bad) cli and cmp inc xchg add push dec xor mov fidivr test add stc ret pusha xchg lds aas inc dec sub inc pop xchg scas xchg fidivl dec andb adc jge insl cmpsl pop movsb in add add lahf sub (bad) jb push out mov fldenv push (bad) out jno scas outsb jg adc cmp sub push js sarl mov fistp arpl sub lds addr16 push nop aaa cmp sub out out ds adc sbb mov loopne fnstsw jns std imull xchg inc (bad) push pushl add or daa lock sarb or daa lock sarb or daa lock sarb or jg clc pop pop stc hlt xor jl lret add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mulb add add or or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push bound mov popa arpl ss pop adc mov ss cmpsl rol mov movb pop sti jnp loope pop imul add xor hlt fsubl xchg or std mov mov (bad) cld out mov mov inc subl cmp mov xchg pop adc fs xor rcr data16 stos push push in das mov sub faddl lret mov insb cli int3 mov xchg pandn and mov pop and enter (bad) loopne insl dec jne cmpsb call popa das pop xchg push xchg rolb lods jns sub out dec sub loopne pop imul popa in enterw popf nop mov ds pop xchg push lods (bad) dec mov inc mov xor and ret decl push fild fucomip ficompl clc lock imul es loope mov inc iret lret mov ds in pop dec sub xchg loopne aad addr16 push xchg lds pop mov mov testl mov jle scas push fcom insb jmp jne test stos iret test fldcw xor add cmpsb push push sbb dec cmpsb mov in aaa mov xchg inc jno pop mov test fnsave xchg jbe (bad) jbe pop dec ljmp orl xchg daa mov dec mov jg cld inc inc or mov dec daa pop push pop pop jl sub (bad) insb cld inc call and adc adcl cmp xlat das dec outsb ss lahf sahf inc fbld adcl push in mov enter lds pop dec xchg cmp sub cmc outsl push inc push fsubrs cld jp add fdivs ret jg push xchg push fcmovu stos fimull les in lret adc and jg cmpsl sub lea xlat jne jle sbb (bad) jge mov test std js jle stc pop sub sub pop or mov call (bad) loopne xor push dec add mov mov mov mov push xor cld pop ja lahf mov xor cmp pop daa bound or or shrl sub jb sahf sub in pop jg pop fsubl sbb loopne hlt outsb jl out mov insl mov outsl sets loope out dec hlt fstps pop push fimul dec sub sahf sub push mov mov xor ficoml dec add popa (bad) push pop xor js or adc frstor or mov dec cltd jnp stc sub pop inc test test setae mov sbb test add mov les sti cmpsl rol xlat aad lock mov cld pop pop loopne lods cmpsl aam stos int3 loop add push and lods and jle jecxz iret sub xchg adc stos icebp outsl addr16 mov dec pop add inc cmpsb lret pop fxch push imul pop daa sbb push in in in aad sti (bad) jae mov ds sub dec (bad) add inc loop mov ror cmpsl add fisubr test addb and aas out ja mov (bad) xor dec push xorl mov jge popf cltd ljmp mov xor outsl add pop mov sbb sbb sub (bad) fisubl sbb jns scas jp mov jae cmc or iret dec mov (bad) push jae mov scas out xor out and mov sahf iret mov int fimul (bad) jb sbb repnz shlb iret lss in add scas sub jmp jno mov dec rolb fcmovnu adc aad push sbb xchg mov jg ret aaa ret adc iret push lea add add add jne xor fmulp mov xor dec scas sbb test jecxz xchg cmc jmp (bad) iret or icebp aam stos outsl imull mov push aas xlat push sub pop adc arpl popf sub jecxz sbb ljmp cmpsl jmp dec fnstcw (bad) mov test cmp hlt jle mov sub xchg mov cmp shll add pop mov sbb mov les cmp stos xchg pop adc lods rcrl shlb je ds mov xor jbe xor icebp repnz sarb push out test fcomps cmp lahf outsl sbb xor adc (bad) dec xchg jmp stos ss dec daa add xlat mov arpl mov fnstsw js add fs ror mov sub jmp aad shr fisub inc jl mov std inc sbb bound xor pusha aam (bad) jb xlat lret test ret fnstcw pop test cli pop push (bad) mov jae imul push add pushl mov pop and ret xchg or push shll fcom repz je bound shrl push sub outsb inc ret test xchg or inc xchg (bad) (bad) nop call push mov jno scas (bad) mov inc pop xchg pop fisubl adc int sub aas outsl ljmp push test sbb fs jg sub add lret jge dec add mov std inc and add repz jge push bndstx and hlt and stc jnp cmc popf jno cmc jns loopne inc jl js pop and fistp in cmp xchg dec or pop mov dec or push and push cli mov sti and icebp into or data16 repnz sub cli pushf dec inc add rclb pop and lds push scas (bad) iret out int3 xor lds xchg (bad) and mov insl (bad) cmp lods addr16 cmp pop lcall mov call push dec sub xchg cmpsl push inc std pop push push pop inc and sti push lret fincstp cli dec mov sbb mov mov (bad) ss cltd jno in mov imul mov pusha sahf jle js xchg lock push out lds sbb pop (bad) dec insb imul mov stos (bad) inc pop or jmp cmp hlt mov xchg stc pop in inc scas mov aas hlt lret dec cmp (bad) sahf mov mov cmc mov sub pop arpl add pop movsl sub adc insl out pop fldenv mov into cwtl mov mov mov lret jmp or je jmp and bound sbb int mov lea rol and mov faddl movsl cmp lods popf fdivrl pop sbb hlt scas stc sbb mov lahf std je in add sbb or sahf test inc dec inc jno push outsl jns mov push subl jo fs jno cltd shll lds notl push jns jmp pop fcompl imul (bad) stc cmp popa clc sbb lea into adc cmp and scas dec jae stc imul cmp jcxz imul mov push jb imul push jg aaa imulb sub (bad) cmp add (bad) aas ds jae jbe dec loop cmp push and xlat jecxz jne sub mov jo idivl mov mov scas mov pop mov xchg lods lcall jo xchg and push mov jp out xlat dec jecxz jo pop adc cwtl jecxz inc fdivrp pop pusha out and roll frstor std daa xchg repz divl mov or rcll std jge ret clc out adc sub or mov push xchg mov test pop adc faddl add pop pop cmp add add mov test dec test add push dec mov movsl or test pop sub mov mov jae add jne jnp xor cmpsl imulb loop xlat xchg (bad) in fwait adc sbb das add rcr mov sbb and fldenv jle shrl daa ss test xor int cmp jle hlt mov stos or or sbb and sbb je pop adcl (bad) aad sub movsb int3 je sub lret push mov xor pop dec fs lock sub mov cmp daa or fistpl jg icebp lcall rclb push je inc imul popf xlat (bad) lods push sti mov and pop es lea mull loop push push out cld sbb aad mov mov push hlt test cmp lods fdivs addr16 xor loopne loope jnp adc insl jno or xchg lret jo lret mov xchg pushl pcmpeqd (bad) outsb xchg jmp inc incb sub mov mov sbb pop outsl out fmul or push xchg stc daa es inc js (bad) xorb inc dec decl jnp test lods adc cwtl push call xchg sub sbb in pop (bad) ficomp cmp fs out push sti pop xchg jno ret call mov lahf mov aas (bad) popa ljmp pop mov nop fcoml repnz fisub dec xchg push or int jo call jne aam inc loope jbe aam pop or ficoml in mov adc push into popa lds pop cmp mov inc or add pop lea xchg xchg adc adc rol mov into cwtl ss adc pop push cli out adc aad cmp div aam cmp and inc pop stc int stos xchg sub xor daa dec inc lods popa nop sub dec cmpsl clc lcall in stos (bad) ret aaa mov mov hlt imul cmpsl rcrl outsb das cmpsl xor cmpsb cmp in sbb adc sbb lock gs repz and jecxz fstpt shll movsl push push cmp xchg cmp (bad) inc xor inc das cmp add das jne ds add sub inc out fisttpll fcmove xor aaa or test (bad) repnz xchg ret out (bad) repnz test and mov or fidiv mov pop and push stos int xor pushf loope sti out mov test pop adc jns mov xlat xchg stos inc inc (bad) ljmp or imul orb fsts insl flds fidivr popf shlb push jmp clc push fidivl (bad) cmp ficoml sbb enter mov mov sarl nop scas aas scas mov in fldcw lea dec push lods dec push mov je jecxz push xor das mov cld cmpsb movsb jbe fisttp xchg dec jns jmp ja cmp sbb ret ret inc mov inc cwtl cmp mov inc jno add inc sbb ljmp xor mov inc into shufps fsubl enter (bad) lea call dec jo jl jne sub mov push xchg lahf (bad) mov jbe loope ror dec sub xor mov test mov inc xor sub hlt cli or sti mov pop dec rorl mov inc add scas fldt pop into push sbb nop push xor sub pop cmp add pop adc mul jo pop and jmp jne fmull xor adc xchg test mov xor aad adc jns and loopne test pop sti adc mov add add push in pushf or cmp dec lods adc mov fs add mov cmp repz jns mov cmp popa cld jne push and test (bad) mov pop repz jnp pop xor jae int or cmp and mov xchg adc xchg stos dec sahf cs cmp int3 add daa fsub mov shl subl in xor sub xor jmp push call mull and sub adc jle sub push jle sbb pop adc ficompl das cmp sbb int3 (bad) sub je xchg ljmp orl mulb jns das mov push lods stos enter inc incl cmc cli cmpsl or adc push inc in loope sub test orb les sbb bound cli mov in mov movsb aam int add pushf jae fistp dec xor pop push arpl cwtl test out and dec cmc sub fldt leave mov cmpsl jo sub pop push nop dec and fidivl mov aaa into jo push cmp mov xor inc mov lock test jge outsb sub sub test ja movsl test data16 adc inc pop push cmpl arpl dec fsubrp imul sbb adc mov mov jge mov (bad) pop fsts lods ret mov lods push push mov lods (bad) push adc gs fisttpl or xchg dec test add xor rorl adc pop bound xor jecxz (bad) cltd inc dec xlat stos mov cmp adcb mov mov mov add xor add cmpb jg add lret push sbb (bad) pop mov jmp rcll inc ror xor or cmpsb jg out stos je ret add mov enter sub or movsb ljmp mov push (bad) sub out push aaa sbb ret call sbb aaa adc or push inc sub pop fbstp fsubs arpl stos mov das push mov mov jns or mov (bad) iret sub sub int mov in lds add sub lcall fcmovnb and sahf es mov jo pushf xchg les lock loop test stc dec ficomp dec es jns mov sbb mov (bad) icebp lock (bad) rcrb insl dec mov js sahf mov adc pop xchg mov dec dec pop bound mov mov movsl and fildl sub jp subl notb jb add aam data16 jle rcll loopne repz sbb sub mov jne cmpsb xchg jae repz mov add push int3 push enter and into xchg xor mov mov ds and and cld sub (bad) ror repz int xchg xchg mov inc aad pop aam lahf in sbb rorb mov pop mulb mov ds fisubrl push fwait or lret pop mov mov mov pop stos xchg mov pop mov xchg dec jle cmpsl mov inc ret and ret out lods mov or vmwrite loopw ja dec cmp inc ja mov out xchg push outsb cmp (bad) scas sbb mov movsl mov add mov inc mov jl sub add mov mulb and fldenv sti dec or mov mov cmp (bad) xchg popf pop dec mov imul mov cmpsl xlat push sarl mov xor or mov lds mov repnz mov lods jne mov bound mulb jg fiadd lahf xchg mov jae xor xchg out inc and jbe pushf ja (bad) jp mov inc push mov fisttp add dec in cmpsl or xor xchg and loope repnz in std lcall xchg (bad) mov ret mov lret (bad) xchg (bad) lods pop jg roll fwait mov inc iret popa fs mov mov or inc jle jae jmp jle out xor popf cs shll lret mov xchg mov mov sbb cmp cmpsb pop jae sti mov cli int3 add inc cmp fsubl (bad) cmpsb in sub (bad) jbe push push xchg or xchg pop arpl add adc sbb jmp cmp adc pavgb sbb ljmp adc and lret mov adc addb cmp into mov inc sahf cld aas mov xchg jne daa incl mov push mov les hlt loope out ret xchg mov mov (bad) fmull add mov in and (bad) jne imul mov arpl mov mov jb add push es addr16 aad aad xor adc pop mov mov dec mov mov xlat rorb sub sbb test sbb mov add je cld int3 fidivr xor mov sbb mov fwait pop xor mov out js add (bad) adc or imul test xor sub pop push or cmp fiadd xor xchg inc push inc mov xchg mov popf dec loope mov cwtl jno xchg jge data16 mov lods push push dec es shlb lock ffreep inc push cmp xchg fstl ficoml (bad) inc mov (bad) daa sbb arpl mov (bad) into pop jp push xorl dec js (bad) push mov loopne test js dec inc (bad) mov and shrl sbb push loop hlt roll das sbb ret loop orl or cltd enter cli rcrb mov dec mov push cmpsb pop std inc je insb cld jae cwtl ljmp or stc cmpsl (bad) mov push insb adc or jmp adc lcall test push das mov xchg shr inc cmp mov pop in lods cmp pop push inc dec mov in (bad) scas loopne fwait inc fs movl icebp inc mov push sahf jle cmp je mov mov les xchg dec and ds out add push lahf imulb xchg inc inc sti int cmp or adc stos adc jbe repnz push int xchg xchg lahf inc std call mov negb jns inc inc mov popa sub cltd push push lcall push (bad) and mov ljmp les lret addr16 or jo mov cltd repnz test (bad) and dec in or mov xchg pop (bad) fistl cmpsb jns int3 push test scas lahf mov test jle jbe imul pop pop xchg insb aad popl iret test dec push adc lret lret loope push in (bad) iret (bad) mov stos add push xchg aam sub loope outsb aaa lea xor ljmp sbb cmp jg mov insl pop mov sarl mov xchg mov jo xor hlt shrb lea and push mov (bad) cld jp fcmovnu xor out stc inc ljmp out cmc and mov pop and ja cmp xrstor sub clc inc sub sbb sub or outsl pop loopne xchg mov mov ljmp out inc divb std aam jo outsb mov popf cmp cld jle push (bad) dec popf cmp repnz loope dec imul hlt aaa frstor stc (bad) mov icebp (bad) test mov jo test mov cmpsb adc cld sub idivl hlt sub jmp and add jmp xchg inc lods fsts jl lahf add stos cmp enter int3 cld inc test (bad) fstl rolb int3 jecxz sbb ret les jmp sbb imul daa roll add enter xchg rolb mov xchg adc ret lahf pop (bad) out pop jns push aaa mov mov jo add mov push rcrl or aaa test out xor jle loope push (bad) push push cmc lea mov mov loope pusha cmp mov pop repnz xchg add push mov aad xor cli dec gs icebp mov lods bound sub loopne jge scas xchg dec sbb adc mov and jne aas lret pop hlt in and test cld (bad) lods dec xlat nop xchg mov loop and sti pop mov or inc push pop sub dec and xor cwtl pop pusha dec and jmp pop cmp js mov jg ror gs out jne lret pusha pop mov jno clc pop rclb (bad) sbb test jge in in outsb stc mov aaa insl orl xorl lret mov add call adc les jge sahf and inc inc (bad) repnz pop test jno addr16 adc adc xor pushf jle in mov das ret xor imul mov inc cwtl mov fisubr pop inc push jl lods (bad) push or arpl bswap lds lahf hlt cmp mov mov cltd rcl cltd call movsb adc jno in sub push xchg cmpsl adc loope jecxz shrl loop sbb xorl out test or lods jge dec dec outsb adc inc jge fsts push outsl mov dec repnz (bad) mov test into imul das (bad) lods sbb test xchg scas ret xchg pushf cmp sbb (bad) aaa daa lcall pop cmp jp sub adc xchg int (bad) lcall mov dec orb push cs push sbb testl shrl outsl mov pop push into pop dec mov icebp or pop jnp jo es bound clc xchg pop sub andl pop sub mov or xchg lock imul and stos xchg (bad) fdivr ja repnz les push adc sarl xchg ss ficomp xor mov insb mov dec fwait xchg xor js,pt or je outsb repz mov mov push sbb sti fild negl mov (bad) insl stc push test sub les jno stos xchg push cwtl push rorb inc mov pop mov dec out jmp pop lods lcall call cld xchg xchg add sahf xchg sbb int xor sub pop icebp in mov sub lods xor mov cmp outsl insb lahf and push jnp xlat mov jp adc scas jb push scas mov mov pop shr arpl mov ja (bad) sub sbb loop or pop push fild es dec mov lods or insl dec outsl std scas sub add repnz stos icebp in adc jl,pn (bad) jmp and mov rol ret notl mov hlt inc mov xor test adc std pop sub (bad) scas ret aam popa push aad dec sbb mov pop mov jl sbbb inc cmp test stc push inc icebp cmp adc gs and push lret aas das call lea sti push in imul icebp ret stos into push test mul daa aaa shlb sti pop cwtl xchg les aas mov arpl push dec sub inc mov push mov sahf add sbb aam cmc cmp mov ss jecxz dec sub (bad) clc mov (bad) test daa pusha mov pop mov (bad) (bad) scas aad pop repz in loop xchg cld in adc enter push je jno push push pushf in xorb mov loop stc push movsb (bad) pusha sub outsb pop fldenv sub add mov addr16 dec inc push (bad) and xchg loope scas (bad) jne pop imull xchg dec call pushf mov rep mov js,pn mov xlat out inc or mov or inc mov xlat hlt dec pop imul adc inc sub xor xchg mov cmp pop icebp push lea movsb idivl mov mov inc ja (bad) mov popa mov xorl into leave lock rcll jo pop mov test or fnstenv imul pop inc mov xlat add push sbb fldl push cmp inc inc jne push push pop cmpsb inc leave jmp outsb mov (bad) lock cmp xchg mov repz cltd adcl mov hlt jb dec dec scas mov call pop xor mov or and clc shlb imul mov mov call fwait fwait mov mov pusha push out loop or ja out push lods cmp or dec xchg imul fdivl cmp mov dec fsubrs jg cmp (bad) (bad) repnz xor adcb jle outsl xor (bad) popa xchg sub inc (bad) lret mov sarb imul (bad) lock jg jg loop,pn jno stos inc jbe push mov stc mov push sahf lods in mov adc mov fwait lcall adc mov cmpsb xor xchg fs jno loopne lds cmp leave xchg dec dec adc pop pop insl push arpl jb sarb bound add repz push xlat into shl scas ret sbb jns and jecxz mov mov add divb jo xchg pusha cmp scas xor and sbb xor adc cmp fs or jnp clc out (bad) adc dec loopne cmp dec loopne cmp dec loopne cmp dec loopne fwait sar add cmpsb test movb add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add clc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov lea inc push push pop fimul scas gs mov push outsb mov pop mov aad insl fcmovnbe mov sbb mov iret (bad) daa out addr16 icebp cmp cmp add test cmp faddl add les push push loop add cltd cmp repnz aad iret mov jnp inc adc lret hlt and hlt sbb insl cli test fcoml xchg push pop pop fisubrl je test ljmp inc add outsb out enter (bad) mov cli fwait mov push pop addl and pop add mov adc ret dec jle popf mov test mov loope mov pop sbb dec lds jle add sbb push (bad) enter test dec lock sub rolb cltd mov mulb jl cmpsl pop cmp xchg mulw dec shr xchg mov mov inc in lcall in sub into adc leave scas ja adc mov adc outsb insb pop push prefetch xchg adc xchg push jg leave ja inc (bad) adc in jno arpl ror cmp mov cmp xchg in cwtl out or dec pop sbb mov xchg mov pop push xchg or xor roll jle in mov (bad) lods test stos xor xor and sub outsb data16 xor xor out insb dec insl sub call xlat pop ja pop jle or jne mov mov bswap and xchg das popa test stos jge inc jl into in lret push sub sbb dec mov and add mov popa pop ret inc push sti dec fbstp mov jge iret outsl lea test xlat mov loope lock xchg sbb sbb out insb pop sub and test sub mov pop sub and stos test adc adc xchg cmp (bad) outsl insl loope roll xchg sub lret inc add dec sbb dec outsl push lds fnstenv daa movsb rorb iret mov test cmp mov shlb nop (bad) inc sbb leave scas bound test in jns and mov sbb nop adc insb scas idivl mov jne ret jns jle addr16 test sbb stos jmp arpl aaa ljmp fdivrs dec pop loopne sub outsb push pop jbe (bad) xlat dec arpl and cltd inc clc lret sub mov pop std and repnz or or popa dec aam dec bnd pop (bad) mov dec (bad) dec in fistl adc lret and pop pop clc and out (bad) ret repnz out mov inc out fsubl sub xchg stos pop ret dec push mov xchg test cmp cmp mov orb or pop cmc inc lret sub out add ds adc mov jae lret test cmp cmp cmp scas inc mov sbb ljmp gs aam push pop cmp outsl dec scas scas aaa outsb jae ljmp push icebp cmpsl jae stc jbe inc hlt dec inc dec xchg jbe inc addl add bound jae sub jle int3 push (bad) int out xor sahf pop movsb sahf mov inc loopne sbb push fwait inc test or cmp lods sub nop popf jge pop cmpsl adc pop fdivr sar adc out cmp nop stos mov leave and sbb inc jl pop jle out inc jnp dec mov push in ret sbb iret xchg mov lods ljmp bound (bad) jle roll jg push sbb out popw cwtl aad xchg dec inc popf es stos jns jno popf xor jbe push lock les dec adc inc pop fucomip xor (bad) jg cmp lret push fmuls lahf (bad) push sbb (bad) repz or stos sarl xchg leave loop fsub stc jae dec (bad) lods mov cltd xor in or loop je mov adc push mov mov and mov ja scas xor pop jne add mull xor jne std mov int ret xor clc fldt fdivrp scas push dec or push pop in (bad) popf sbb mov cmp add test add cmp scas fldt sbb inc (bad) cwtl repnz push xor push icebp test outsl mov movsb lods loop and cmp pop pop popf lret cld push mov add inc jno repnz mov int3 mov mov push adc dec sbbl xchg gs sub std lret aaa (bad) out push int imul dec test adcb mov fwait pop out shrb push inc jbe jno pop ss mov stc dec ret xchg add mov test lods ds int faddp iret call pop aam sbb add aam dec xor cmp js mov ljmp mov loop into sbb stos adc mov mov and pushf mov stos jne stos mov cltd popa pop cwtl (bad) sbb leave insl mov pop lret mov pop dec addr16 cld cmp data16 push sbb repnz cmp jecxz jns jle mov cmp fidivr dec jg push aas xor jbe aas inc mov push mov out mov inc sbb push imul adc and mov decl or sbb jo test mov (bad) lret adc mov (bad) lahf das lahf xor and mov ss mov cmp mov push fcmovu inc loopne fisubrl and les in enter gs test andl xor mov pop outsl scas jle jne pop stos popf (bad) nop in inc add pop cwtl shll aad xorb data16 (bad) je test mov adc and mov jecxz notl pushf and or or sub ret js je cld sbb in leave sub jg rolb aaa xlat (bad) insb or cmp ret ja sub push lret cltd clc fcom jae aas pop flds cmc pop cmc data16 or mov mov dec clc xlat mov mov jne or sbb aam xor sbb lahf pop push arpl mov aam out pop dec gs sub scas sbb sub fwait mov fbld insl dec fsubr sbb add mov mulb sub and add pop xor add inc mov sahf adc push test cmovno add icebp cltd push and dec cltd sub pop and insb sbb jae gs cmpsl std dec (bad) repnz fs adc (bad) stos jmp dec lods dec adc adc outsl call sub dec jno aam mov fist push out iret scas dec ja xor fcmovbe push mov int3 push sub xchg inc mov jne push sbb push outsl sti (bad) mov or sbb hlt rorl mov pushf mov sbb cmp pop lahf clc mov xchg or mov neg and sbb and daa int3 mov sub add sub inc roll repnz stc jbe pop test gs cltd jmp push lahf jecxz das add dec fs in call pop stos pop imul xchg das stc in xchg xor pop cmp dec lahf scas in xchg jp bound or push fsubl lods fmull out pop test ds enter cmpsl xchg (bad) cmpsl fwait xor mov dec adc scas lods (bad) in jg mov push fmull mov jp xlat mov adc xor into iret dec (bad) xchg cmpsb sbb lahf mov and mov adc sub inc loopne adc fdivr mov orb jecxz xlat cmc pop stc fadd sbb les lods adc cmpl les dec sub push ret mov (bad) jo cmp idivb mov icebp dec push sub xchg xchg sub mov inc hlt and int3 push adc sbb int3 jns sar test test jmp repz dec sub and jnp sarb (bad) adc ja (bad) lods xchg sub test cmpsl pop jns push (bad) mov mov les mov jno cmpsb fcoms insb mov add xchg int3 push in lahf dec and mov xor daa test rcll insb popf leave cltd fstpl mov mov jg into loop push dec ret push stos shlb jnp ja (bad) test shr xor mov fcoml adc roll test ror dec fadds and cmp xor leave and ja es sub jecxz pop (bad) mov lcall les pop es ror mov mov dec and xchg xor push ds fimul cmp aaa sub leave (bad) ret xchg rorb leave adcl and sbb cmp sbb push dec xlat mov fwait es xor aaa pop mov movsl jo (bad) jno and stos cs inc dec dec and inc xor sub lods mov idiv mov fadd dec xlat jmp mov mov xchg xor enter pop aad mov ljmp xchg aam xchg neg sbb imul mov hlt cmp mov ret jle sub inc int3 push mov cmpsl pop (bad) mov div loop xor cmp mov xchg mov xchg xor xor sahf in (bad) int3 dec das mov cs adc mov (bad) sbb nop sub jecxz arpl jge mov scas movntq jl out shll sub mulb cmp imul cmpsl test pop inc insl inc cmp fnsave fildll gs mov xor jo push mov test sub scas sub pop leave dec add sub cwtl popa pop call es fldl2e and je jmp dec inc imul inc outsb xor mov add pop sub popa stos mov push add mov push ret inc push fbstp gs push sar inc pop pusha faddl inc jne jl pop icebp jge jecxz lret xacquire jp sub mov adc ja inc hlt shll pop out test dec notb dec ret imul (bad) fldenv test mov pop jnp (bad) cmc push loop push mov pop jecxz bound scas std scas cwtl pop mov cmp add mov cs (bad) (bad) popf fist aad cmp outsb mulb pushf or xchg pop das mov cmpsb fwait push cmp iret jns pusha mov ja sub sbb sbb mov mov popa cwtl (bad) mov (bad) into sub fldl cmp and pop push sbb out dec fsts pushf sahf (bad) jb mov in dec sbb imul das pop push loop pop xchg addr16 jnp fcoml mov mov dec rclb popa mov mov add mov sbb push test push fidivrl daa je mov lods add xor test daa (bad) sbb lock or and jl leave outsl ja lcall dec dec adc test add mov push xor mov or mov sub ret sbb int3 (bad) jo jge in aam jbe pop jb fxch das int iret sahf cli add push pop lea out in fimull xor mov gs movsl and gs mov (bad) adc dec stc xchg aad xsha1 cmpsb mov jecxz sbb arpl out xchg push and std inc stos push (bad) outsl shll ds in inc jbe ret pop cmp lds pop (bad) mov push sbb mov mov aas sbb js push dec mov jnp push and mov cmp xchg lods je int3 adc clc stos pop mov mov and imul test ja andl aam mov mov sbb in and mov inc push lcall mov lcall ss notb add pop sti fsts in mov scas ljmp pushf test outsb xchg ret scas rolb lods push cmpsl or xor fcomip lods (bad) arpl push shrl clc and add ss fcmovb cmp mov int (bad) jge pushf stos or push xor imul sbb lcall or mov jp push aad mov in inc (bad) push clc add adc adc cmpsb jle dec xor jp mov repz lcall mov cmpsl (bad) in ss add lods xor push and sahf and mov push pusha mov mov push stc mov mov xchg ja sbb cmp push call ss adc out xor iret sbb push fisubr dec xchg jp sbb xchg mov mov aaa stos and adc mov add test xchg xorl sub loop jmp repnz into mov dec add ljmp into mov or shrd or adc and xchg aad xchg lcall in pop inc mov xchg pop mov sbbl fdiv icebp pop dec adc enter adc mov add pop jecxz push lret push or lock push lods inc jl jecxz jne insb dec lea mov pop sarl test enter pop into mov dec jle xchg dec and mov jle fwait mov cmp cmp fild pop hlt adc lret and cmpsb cwtl leave sub shl mov or mov lahf mov push lcall ret add push insl adc mov xor int3 aad movsb fcmovbe (bad) pop inc in adc inc repz fs iret xor or jl in (bad) jo stos mov xor fwait sbb lcall xchg xchg jmp pop fnstcw loopne lret dec and idivb xorl mov int ret out enter lods fsubrs out or xlat loope push ljmp add push ror push dec dec pop daa push test push imul test dec fucomip or pop imul arpl jb jp cld jae dec mov std nop bound lods clc mov and dec cmc push xchg popf imull mov xor pop sti and sub lahf mov or xor lock push fwait xchg adc push inc cli jle lods inc and in jbe cs mov mov pop pop xchg test ficoml adc sbb addr16 cmp imul jae aam and inc out mov test (bad) pusha add add es mov xor lahf popa mov ret negb cmp in in lcall add ret sub mov in dec or (bad) (bad) mov aas dec push movb sub ja lods mov and xchg sub mov shrb lcall stos addb sahf cltd imul mov (bad) std jnp (bad) xor mov bound xchg push sub js xchg mov test and int inc xchg mov fmuls jecxz,pn out arpl mov mov xchg fimul sbb inc int3 roll pop lods movzbl (bad) insb mov out pop xor inc pushf mov cmp jne icebp jecxz adc or or xor mov xchg int3 sti int3 sub movsb fisubr fldenv xlat and cs mov jne and dec fstl dec add mov dec jg gs cmp bound mov sub lret mov mov mov cmp pusha cltd lock popf ss enter rolb (bad) pushf or mov pop cld xor popa mov icebp jmp sbb jmp jno jmp and in mov outsl xchg cmp mov ret adc sbb stc aaa mov andl add (bad) xor dec xchg sub jmp cwtl stc test jg icebp mov inc cmpl push sahf test popf mov sbb pop jne rorl cmc data16 inc push out pusha test cld (bad) push cmpsl xchg inc stos adc out ds aaa push inc cwtl dec fucomi push test rol stc sbb jecxz sahf jo cld dec adc cli roll mov mov sbb pop inc fbstp movsb (bad) decb lahf and push pop leave adc jns xchg js dec mov jg out xchg nop mov inc imul mov and mov xchg mov mov lock stc push cmpsb hlt or xchg rcrb daa fimul cli xor cli faddl or loopne iret jb and dec imul je mov sbb lret fdivrs xchg (bad) js push xor push clc ret lret inc xchg xchg and push and pop lea push pop sub push mov scas xchg and rol out xchg ss mov ljmp (bad) pusha (bad) and nop adc imul cmpsl jne fistp sub or out bound aam mov dec mov mov inc pushf dec xor jecxz add cmpsl and pop adc xor lahf mov jo sub in jae mov popf mov ss lds in pop sbb mov xchg lock ljmp cld or lret mov adc int3 (bad) push test das and (bad) dec xchg dec fwait push mov cmp std or push xchg and mov aam xchg aad or push scas jae imul je (bad) mov xor enter mov ds mov in jbe cmc lods xchg sarl cs shl inc cmp loopne jmp popa and jbe in or flds mov jle sarb inc fs cmp mov je inc ds mov mov rcr push mov (bad) mov in cmp popf jnp fldcw jns ss shll mov jle mov xlat je movsb jae jecxz out les gs sbb out jbe jg jb aam ds xor insl mov (bad) cmp into mov dec addr16 rcrl mov inc scas sub mov and cli fisubrl jmp and fidivr inc mov aaa push add push adc (bad) mov adc xchg test dec mov stos popf mov mov leave inc add pusha sub lods cmp orl and xor lahf mov mov repnz or sub lret mov (bad) cmc add and (bad) fwait add mov or mov adcl sar inc fisttpl lahf push daa push add (bad) push mov ret pop adc imul xchg push lods xor sub lea mov fcomps (bad) pop arpl call fnop adc mov push xor or out aaa adc movsl leave (bad) push insl pushf dec in dec sbb add (bad) mov dec loop inc out xchg or mov ss repnz pop xchg sub and mov mov mov int3 add xor inc dec call dec dec or icebp aad pop test js xor dec push sbb pop pop mov nop add add in sub pop mov xchg xchg add movaps outsl push sbb (bad) in sbb lods imul lret cmovae outsb aas test lock xchg jnp push and or adcl cld or sbb addr16 xor or repz dec jae inc adc aaa test pop dec push idivb notb or cmp nop push jecxz out notl push jle pushf aad arpl mov sbb mov rcl in repnz stc cmp add xor add mov das les cmp sub cmc aam loop cmp jp cmp push (bad) adc clc push push inc sub inc xor jp dec (bad) xchg outsb ror adc pop insl jns pusha push push xchg fs lods test jge pusha inc (bad) jmp push (bad) dec (bad) dec out jg or or mov cld cmpsb jns push rcl pop mov push mov mov lret pushf pop inc dec push sbb lret ljmp test inc cwtl test mov xchg insb sub jne mov inc fcmovb enter jmp loop or enter pop push xchg sub pop push dec dec sub cld sbb or rcll or cmpl and inc jmp nop pop popa inc (bad) or xlat ret enter mov call pusha hlt or and aaa mov sbb lea fstpt xchg xor fwait into adc mov hlt jmp out mov fdivp xchg es pushf xchg mov addr16 mov adc sahf cld push jb shll adc and data16 cmc adc lret inc fs sub mov pop jecxz xor push ret ljmp (bad) jge adc movaps jg out push mov int3 cli loop icebp les jb movsb inc ffree sub std mov dec mov dec call insb fucomip (bad) lock mov push mov in lcall xchg jge xlat stc mov bound mov (bad) int3 inc ss mov mov bound pop jae popa and mov int3 push sti pop jle dec addr16 dec mov pop sarb dec out dec in enter ficoml jne xchg push inc sub mov xor dec fs fdivl sbb lods adc push sti shlb or adc fwait pusha repz cwtl mov lahf push in mov xchg dec pop xor leave repnz jge inc jecxz das mov or mov in inc cmp sti (bad) mov and shrb out repz pop lahf push xlat in xchg pop das sub and (bad) in pop out dec pop das mov xor xor xchg pop push sub in popa mov cwtl nop xchg or outsl ret sbb cmp mov xchg fucom inc fwait mov sub dec insb pushl clc pop mov shl bswap dec call aam mov adc std cmp jl addl xchg xor mov jno stos mov add stos outsb cld push fst icebp add jns pop jge inc mov add popa (bad) jbe hlt add repnz ret js push pop sbb push into xor insb sub adc jno dec pop mov incb jmp orl sub xchg insl out (bad) pop gs divl loope mov mov lock imul xchg sub lfs cmp rcrl sbb lret mov sbb loope fisubl pop in jle sarb pop cld out or sub leave (bad) repz jecxz movsb jae scas insl push push test fcomp mov jmp test in dec dec and add xor or sahf push outsb fisubr pusha mov sbb rorb xlat ja andl cmp inc pushf jle cmp int stc cmp hlt push int xor adc add int3 push popf jb or fidivr orl push popf stos jl jl clc pop rcr mov enter je scas fsubrs test jl mov dec cld cmpsl cmpsb ljmp outsl mov inc notl ret xor mov cltd ss mov push pop add imull push sti cmp gs insl xchg jb insl xor popa std rol pop sbb sub sar hlt push or repz jle fnsave lock lret out lods adc stos movsl push js cmp les xchg clc xchg sub mov cmpsl mov sub lcall jbe xchg popf mov mov hlt ljmp inc push or push incb sahf mov inc and push jne pop cmpsl cmp xor movq xor mov (bad) mul cmovae and dec icebp out imul push or fistpll pop inc mov mov aas sbb test adc xchg in push sti inc push cs mov int3 pusha or in cmp out out inc push ficompl mov loopne imul (bad) push xor loope jno cwtl mov and xchg (bad) jb sbb inc dec mov mov mov jne (bad) (bad) or inc or inc cs xor cmc inc pop sbb xor ds aad sub shl int3 pop jg into jle lods jne sub popf mov add pop or (bad) xor sti stos jl decb mov inc (bad) pop repz enter dec dec mov mulb pop mov or xchg je and pop lds xor sbb mov mov je add mov icebp mov fcomp adc js incb ljmp (bad) repz or aaa adc enter jb (bad) adc jnp clc out (bad) adc dec loopne cmp dec loopne cmp dec loopne cmp dec loopne fwait sar push sub add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mull add add or or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop sbb push sub mov (bad) mov fstpl in xlat leave pop ds fs idiv jge mov out mov nop pop add add and mov in cmpsl dec mov add cmp test addr16 mov lods (bad) pop cmc lods into pop pop xor popa ja aad jbe shrl jle sbb add les or movsl sub frstor pop int3 ja dec sbb inc cwtl ss pop xchg fwait imul jno jb cmova stc add dec push xchg xchg test int3 repnz or (bad) movsb test mov mov sti scas repz or fistl push clc add dec movsb push aaa cmpb xchg fiaddl cmpsb lods xor movsl push insb or std mov outsl fsubs mov (bad) jp and fistpl nop out dec mov sbb pop es in (bad) out (bad) jge jp (bad) jae movsb mov inc cmpsl and xchg cmpxchg dec sbb dec jo je jmp lahf cld lahf mov cmpsb sub movsb insl nop idiv fucomp add fmuls fisttpl cld (bad) int test mov or cli xchg scas fldl push fnop aaa pop adc xchg testl lret adc dec or scas push add pop mov (bad) jb add mov dec jae repz xor add enter dec scas and sbb loope lret pop ja mov xchg mov mov repnz aaa jle pop mov mov xchg iret (bad) (bad) movb loop xlat push test sahf jae loopne std mov hlt popa repz mov jae xchg dec push lea out (bad) sbb xor dec mov into divps cmpsb dec xor add aas add in ja mov adc mov aaa push int3 xchg jmp xchg pop jae sub iret cmpsl push imul jmp outsb inc arpl rol leave inc clc adc in mov adc pop mov xchg les mov addr16 adc popa xchg andb fdivs sbb mov jbe push out (bad) out mov insb mov xlat adc imul jo and xchg xchg or lret xchg inc in idivb (bad) outsl fcmovbe test inc repz scas and scas shll fbld cmp cltd mov cmp int out sti outsb inc stos and lods (bad) pop sub lds mov push sbb and sahf (bad) dec adc dec mov nop and rcll lock mov cs out dec pushf cmp pop popf xchg fmul jg mov push mov int sahf mov lea inc stc test add cmp popf xchg lahf push int mov lea or in or imulb lahf cltd cmp pop jle jmp loope push addr16 cli ljmp mov pop add loopne movsl mov jl imul rcrb dec lcall stos add js jne adc pop pop es pop ffree out and lahf lods sub fwait dec dec lock add nopl jne mov adc div sbb mov inc insl outsb add lock and sbb mov cmp mov inc jns in pop pop adc int sbb lret cwtl mov lret cwtl dec stc mov scas xor fisttpll test and ljmp out fidivr lahf pop and mov inc mov les pusha inc mov pop std pusha push insl push mov aad sub mov mov push pop arpl xor dec and loope enter fwait ss push lds jno jo (bad) inc inc lret push (bad) loope insb out jnp xchg push sbb fcoml xchg fidivr and test dec imul cmp dec inc push cmp inc xor pop jno xor fisttp jecxz pop mov pop in cmc mov push add jno dec loope mov movsb push (bad) dec inc loopne clc ss cmp or test jg repnz push add out ret push enter mov mov sub popf (bad) (bad) push rcrl mov js inc and dec jp arpl aad jo leave adc movsl cmp call push sbb cwtl mov pushf push dec push ljmp jp pop out xchg lea iret xor (bad) ljmp cmp cwtl xor es xor cmp dec cs std mov rclb (bad) aaa enter inc mov mov lds mov fnop ljmp and nop inc mov cwtl aas outsb pop mov sbb in mov inc xchg out push xchg hlt mov sti rolb insl jnp (bad) call mov (bad) aas leave nop cmp aaa pop and stc push inc or into inc dec scas mov outsl jae int mov and test mov je enter sahf loope aam sbb clc push or insl xchg inc inc (bad) adc cld xchg (bad) nop jmp (bad) or pop mov push jne in sbb xchg test (bad) out and push dec repnz lahf lods jne outsb gs adc push add ja inc and test inc add insl (bad) jnp sub out inc adc push (bad) andl cltd loop and lret mov add stos xor pop cmp daa fsubp rolb es mov sub jne xor pop mov out adc in test fstpl gs pusha mov jl inc outsl dec inc les je stc fs popa xor testl sub popa jmp shrd je cwtl mov test mov idiv xor pop loopne into push cmpsl mov pop dec mov adc jecxz push dec pusha test in popf stc movsb dec (bad) pop xchg or ficomp jnp stos jo sub adc xchg in fiaddl iret hlt jae out push lahf loop pop insl inc nop cmp aad test xchg or out or dec mov adc sub pushf mov std push dec jae mov data16 fild cltd and pushl pop add loope dec fist std stos inc adc xor jp fwait jne push jb push jo push xchg jnp xchg add mov push pushf xchg add mov cli or int3 lcall cltd jae mov pop mov nop imul add shrb aas xor cmpb repz mov cmp jae rol and push fisttpl aad stc jns out push or jae lods mov inc fcmovu push add sbb pop fsts jle inc fbstp decl or ret xchg icebp call xor sbb fwait test mov hlt push mov or (bad) or cmc push out sbb xor mov cwtl xchg lahf push fbld loope push repnz dec jl dec insb sbb cmc sub mov dec stc imull jae cwtl lods mov out push sbb ror dec push ja mov push xchg popa inc rcrl mov push rcrl out sub sub dec xchg imul cmpb fcmovb outsb fwait ds jne cwtl dec add xchg (bad) das jl mov (bad) cmpb lock dec mov mov add testl insb inc outsl sbbb into movsb xchg pop cld (bad) out out mov push lret loope jmp cs push clc aam aaa inc movb (bad) (bad) (bad) je mov lea push mov fadd repnz repnz sarb push mov and loope push sbb xchg enter jmp cld (bad) das or mov pop xor xlat push or and popf pop dec cli ficom add xchg dec add mov mov fsubrp inc sub sub scas xor (bad) int3 cmpl jg iret les or in cmp sub or jle push mov adc inc mov cmp sub ror (bad) imul out xor push shrl jo imul and mul loop mov (bad) push incl fwait push add and popa adc inc sbb pushf scas xor pop loope adc mov mov dec fimul mov fs loop push mov jg aad movsl out callw cmc sub in fidivl mov cmp imul mov cwtl ja leave fstps mov pop mov out pop sbb push jb push adc lahf push dec cmp sub mov icebp sub shl dec sbbb inc xor in sahf and bound hlt pop imul jecxz outsl mov inc test fdivr mov inc sahf fistp or cwtl lods mov mov lods xchg iret sarb inc iret jne ss les fnsave pop sub push or xor jp cmp mov loope xor mov imul dec out cmp and scas dec or dec mov sti add cmp outsb loop testl mov stc xchg dec rorl scas div mov popa sbb pop push xchg jmp (bad) outsb imul (bad) es xlat bound xchg adc test rcl int mov sub mov sahf and out lds pop outsb dec adc inc cmp adc mov lahf sbb add hlt (bad) int lods mov mov les in jb xor (bad) (bad) pop pusha out dec test sbb and lret jbe and mov mov dec push pop mov dec out sti xor icebp loop or and push rol in push xchg cmp mov xor rolb fwait push push pop rcl (bad) push dec and in add cmp gs cmp add inc adc dec add pop mov fcompl xor (bad) loopne cmpsl inc icebp vmread gs or arpl inc std inc mov xchg ljmp and xchg rorb je stos mov mov jecxz or ss stc shll cs scas jle xor adc cmp int mull in decb gs lds cmp push aam cld xchg loopne pop mov xor mov xor es ret xchg (bad) mov shrb push sub mov repnz jno repnz ror dec xchg sbb pop mov imul mov cmp push loop stos test sbb lds out mov les test xor cmp jbe pop test mov inc sti inc xchg mov outsl pop loop jns jmp pop xor jne mov test pop ss jg jb daa out les dec pop hlt jp out add or pop push dec inc cmp jg shr pop fldcw or test dec movsl arpl sbb int3 adc sub pushf mov pop sbb xor in jns push mov bound test sbb push imull nop push rcrl lods sahf push (bad) adc arpl jge pusha (bad) scas push and ret lods sbb xor xor ja cwtl insb xor xor xor mov or aaa mov sahf dec or sub xorb pop jecxz lcall xor test mov pop (bad) xor fisubrl adc fcmovne pop leave pop inc in in push pop daa mov jle mov xchg push dec push mov andps mov cmpsb jno in jecxz inc scas xor mov lods mov add int3 das adc iret aam jl push mov mov outsb iret pop or mov mov stos xor xor clc daa dec inc inc call in jns pop jecxz xor lock test and in cmpsl mov ficomp mov mov jmp xchg cmp cmovb lods xor cmp cld push pop mov call ds cmp jne sub imul dec rep in scas and dec inc cmpl inc call fs sarl and cmpb in or call inc js in fnstcw cwtl lds or or cld leave call cli sbbl out stos fbld lret fiaddl stc loop out icebp adc adc jne call cltd das addr16 andb ss mov in subl inc fild data16 rcll aas sub nop add push inc dec (bad) push out clc xchg cwtl jae movsl iret jbe or imulb or stos in cmp push cmp (bad) ss repz aam dec mov inc sbb lret xchg test int inc mov call pop fsub jmp loope inc rcrb rcrl sarl cmp mov hlt mov adc or push out inc adcl lock div shrb cli or fcoms pop popf aam push dec mov test fstl outsb ljmp pop and jae out leave mov notb mov sbb mov cmp cmp mov mov inc cmp in jg stc cmpsl leave clc push mov and out repz jns out mov out mov ret fldl loopne add sahf xor pop out iret ss (bad) hlt xor out data16 stos scas out xor ficoml push sub in fstl les in outsl mov fldcw shrl sbb (bad) nop mov ljmp pop xchg stos ror aad jmp out xchg push cmpsl mov out cmpsb dec (bad) movsb adc sbb nop and add jb outsl mov xchg lcall jp cmp adc cmp int dec xor xor push add jle push std repnz es mov jnp nop and scas mov nop cmpsb xlat lds nop mov fs (bad) rorb jae sarl aam or stc xchg gs push icebp test or movsb mov ficoml xlat or dec dec imul mov mov and push or nop sbb adc add movsb jmp pop add outsb cmp mov in arpl fcmovne ja xchg push xchg in adc add dec loopne (bad) sahf cmpsl mov data16 aas (bad) pop push adcl rcrl call mov xor rorb mov inc into out pusha imul sbb fadds in push popf cmp cmp les pop mov les sub push dec and adc mov xchg rol aad out xchg fmull loope add push sub cwtl mov push or in pop xchg shr jge ja call or and push insl mov adc movsl pusha (bad) jmp clc outsl cli out aad jmp pop clc mov lods fnstenv aad adc ret lcall and adcl aam or push negb jle lahf add aas xchg test xor mov mov inc sub sbb pop in daa fs daa mov out int3 xchg or push cltd adcb (bad) loope (bad) mov or clc or add pop add inc shrb push cmp xchg cmp mov xlat mov dec jl push dec sbb push xchg xchg cmp scas jns jg pop mov popf lds daa cld arpl pop into shlb xchg (bad) lahf in ja or subb dec (bad) mov mov jae sbb loopne dec lret out jno and (bad) mov enter daa fist pop mov mov ljmp inc inc push mov sahf push mov or into ja add subb lahf mov in (bad) iret cmp pop addr16 nop jno shll enter dec cmpl (bad) xor xlat xor mov add sbb out aaa xor fstl pop loop repnz push or push or test add lea hlt jbe sti ja mov and inc add (bad) int3 scas (bad) and lret lods sub jo lds test fild cmc dec sub and or into xchg pop popf inc mov repz lock xchg je or cld mov cmc xor pushf add push sub fnstcw cmpsl sub xor sbb fild pop rclb scas fwait xchg test (bad) pusha ljmp cwtl movsl icebp lock xor cltd pop test cli dec repnz push lea adc or rcll hlt mov xchg pop cmp subl data16 fistp mov dec and scas pop sub add cmc add pop clc test mov arpl jne inc or pop mov test shlb mov add add push jge cmpsl mov dec popa sub add (bad) or daa jb ljmp xchg (bad) jne fwait jb cmp (bad) push (bad) mov and iret mov xor add mov pop pop in xor jp je pop adc decl add mov aam cli loope insl push adc xchg sbb cmp mov and ja insb adcb mov push pop ds jnp xor fcmovbe aaa xchg cli ficoml imul outsb jg (bad) mov push pop (bad) pop ds andl lds in inc daa aaa cwtl xchg mov fistpl sarl mov sub lds std das outsb (bad) push lods aad lahf and iret std lods add push aad or mov adc and dec or add gs repnz dec jle cmp sub in add sub into pusha pop (bad) lret cltd mov jmp push adc mov imul gs sub mov adc lahf mov (bad) test mov push dec rclb xor (bad) jns mov jl loope in in aam sbb sbb gs dec inc cmp sub inc out pop (bad) int (bad) popf jb pop mov and push sbb push mov outsb inc dec iret (bad) inc jp mov jae inc push (bad) jae xchg pop rorb add iret sti or clc adc sub shrb ljmp sahf push xlat add leave sub push scas cmp xor adc cwtl dec mov push out std scas mov pop js gs int3 stos jns out xor pop cmp lea fucomip out mov mov xor push dec aaa nop stc mov cwtl mov fsubrp iret push inc mov das jge (bad) mov jne or push cmp jl rcll push lahf sysenter sub mov mov mov aam fldcw mov cmpsl stc inc lods mov mov cld jnp pop repnz jg mov imul (bad) sub jb dec inc (bad) mov or pop jne lcall lret int xchg push pushf not push jle stc pushf outsb or fucomp sub inc or aam movsl test dec mov (bad) stc and out sarl add add lahf push sarl or popa lods clc sti cmp push mov leave int cmpsb lret mov cmp inc lds cmp mov push lret sub outsl jmp inc mov dec pop lea adc out dec xchg sub pop pop adc sbb push cmpl add or jg jl mov mov pop pushf icebp jmp push dec insl popf jecxz fnop nop dec jbe rcrb mov cmp mov out xchg cmc clc adc cmp xchg pop jecxz xchg xor jle cmp mov and lods push int3 mov push je push je fnstcw arpl cmp les mov sbb loop adc pop dec xchg xor and push add mov (bad) hlt fprem1 push bnd aas push fs pop mov rorl ljmp sbb adcl in dec fs es inc push jge inc push inc dec std adc cmp adc out (bad) and jb inc int push inc mov (bad) jb cld and jge test roll sub and pop add mov mov push pop lahf xor fildl das adc jge rcl cmp mov aam pop rcl test xor movsl cmp iret fisubrl cmp mov adc mov arpl cmp repnz or arpl mov xor sub int inc test inc rol pop decb pop mov jle jnp mov das movsb int3 or fs cmp xor loope pop mov add insl add mov out add out xchg jl lahf mov sbb push stos jmp mov jge mov scas ficom fs inc addr16 mov sti push mov push jmp aad add add addr16 jae imul imul push sbb lock cmp add jbe fiaddl sbb pop adc dec mov repnz cmp pop aam push fild scas cmp add aaa cs (bad) mov (bad) pop test or ret adc dec mov xchg dec sahf inc push (bad) fnstcw cmp inc in sbb dec dec dec cmp lret xchg dec xchg into pop test stc negb frstor xchg rcll dec jg pop jecxz push or outsb mov add (bad) push jg or jb push pop cli dec push cmp push xchg das and movsb and inc lret jl not pop dec rsqrtps push std xor add call cmp cmp mov mov jmp pop (bad) cmp in gs dec xor push or mov or leave call lea mov mov lea and in xchg mov push and inc dec inc mov inc daa jbe pop sub dec push cmp xor add ret ret pop push stos clc hlt mov movsl pop adc pushf mov inc cmc je jno and sub xchg arpl dec bound pop pop push lods jo mov mov mov out data16 pop lahf xchg fwait mov dec xchg sbb adc dec add jae jle mov add xchg or les xor daa sarl sub nop orb enter mov add mov or fisub orl sbb mov jle sbb inc loop ljmp mov gs xor fdivrs push out adcl push jge arpl inc bnd fmuls cmp jno hlt (bad) mov sbb dec jl aaa aam in dec jle ret jp test push not mov xor imul cli sub jbe mov daa lahf inc lods pop psrad pop push femms inc add dec lds or push mov movsl ss and data16 jmp push xchg (bad) sub cmp sbb (bad) imul mov sbb jg xchg iret sbb aas mov mov les jp jmp hlt inc inc mov xchg scas mov jle sub and push xor addr16 rcrl pop std not xchg leave lcall mov scas in test outsb movsl push push sub mov adc dec test ror cwtl cs (bad) out lds pop pop pop mov mov dec loop sbb out rcll xchg adc lcall push mov push les stos dec xchg xchg xchg add jecxz and cwtl and push cwtl mov mov test push cmpsb sub push mov xchg xor jg iret test adc mov stos in fimul mov scas and daa jb scas inc xor insb aam cmp and xchg out ja lds jecxz imul (bad) jno xor xchg cmp orb (bad) xchg sub or cmpsb jbe inc and push lahf fidivrl pop rclb sbb inc mov adc mov pushl sbbl pop fucom cmpsb mov test mov push push mov jne movsl sub jae lcall jne jbe aam out or jne inc ret jp adc dec or jnp psubusw jge sarb repz loopne lahf sbbb xchg cmpsb inc mov jge roll and movsl add xor jl pop stc and outsl fs stos frstor int3 imul push mov aaa out push mov adc rorb push addr16 sub fnstsw mov or nop pushf lock stos popa mov movsl stos push fsub lea es inc xchg dec cmp inc sub sbb fidivrl loop outsb ja inc js pop inc das ljmp jae push sbb xor mov into adc ja dec cmp push (bad) mov pop add decl cld daa lock sarb or daa lock sarb or daa lock sarb or jg clc aas sbbb xor stos or add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cli and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov (bad) push push push adc push push loopne ret movsl mov adc push inc mov dec movsl push mov movsl mov sahf lahf lock pushf ja cmp add or sub lahf push push ja xor jno mov ret int jmp std push pop test cmp mov push out dec lea jbe push in clc mov pop push clc (bad) jmp xchg mov fstpt movl fistpl jecxz mov dec fisttpll push add and stos adc stos push sub test (bad) std fs mov daa pop arpl in mov lods lret aas adc dec addl pop sahf sbb (bad) inc dec insl scas cmpl mov add push push dec test or inc shlb rcll pop shrb xor in and mov cmc gs pop inc mov (bad) pop sub sahf test sbb push cmp mov mov jae mov mov push fsub loopne inc icebp rcll es std test test into cmpsb xor add dec sti (bad) push aaa jg xor mov sbb (bad) jnp dec pop inc stos lret xor mov jl mov cmp daa adc mov loop nop add xchg mov lret mov jg ror mov lods ffree sbb sbbl inc xlat mov jecxz and aaa test adc add lea jo mov push pop sbb fcoms push fadds jo popa xor sub leave stc rsm ds lock xor adc (bad) js add stc jo push and jmp sbb (bad) push sbb lahf push lds icebp andl popa or mov roll xchg dec push sbb xchg xchg (bad) mov aam sbb mov or mov xchg mov cmp adc fisubr out mov shr and (bad) call repz xchg les (bad) jne inc cwtl out mov sub mov pop xadd mov sbb or fstpl and clc dec or scas inc aad js jbe (bad) push cwtl fwait add test xor cs adc loop fs popa (bad) mov in mov mov ret cmp xlat and pop ret ja mov xor inc inc out xchg jg mov adc sub dec imul dec popa dec cmpsb adcl jns xor fdivs mov rcll ja jmp scas cmpsb sub sub fwait push andb pop notb int3 mov mov jae cmp stos cli dec cmc mov fidivrl stos bswap dec push xlat inc mov and sbb sbb mov sbb mov pop leave dec test test mov and ret (bad) xlat lahf push push scas data16 jmp fwait inc push inc xor sahf jle dec dec in jle cltd and iret mov adc push int3 dec hlt sbb and mov mov xor data16 daa sub into enter cltd xchg in lret test jle repnz mov jge sbb ret sbb dec stos add and sahf mov add sub fiaddl jb mov lret inc loope scas sub xchg loop addr16 sub mov fdivrl mov push stc cmp jmp push bound xchg xchg add pusha ja cmp jo sti vpackuswb (bad) das xchg les out and pop sbb out aas pop (bad) in (bad) fimul jb in inc jbe xchg cmc cmpsl jo jmp or stos mov std mov rcrl je iret arpl xor fldt nop nop into gs push into bound aad pop xchg les cmc jp lea leave in stos adc or cmp cld dec jne jnp xchg (bad) stos jmp mov dec xor xor cmc and mov push in mov test inc sti cmc mov and int push add testl push pop mov fs icebp xchg jbe adc adc jns and test push jp push ja mov cli xor push fisttpl ss or mov pop fsubrl out loope jecxz push pop (bad) or js (bad) call jge loopne repz inc ss jmp push loope in repnz fiadd dec pop fadds (bad) sub pushf mov out jbe stos lods xchg in mov lock push push (bad) fistl rcll jle cmp inc cmp loopne das js daa in push je (bad) stos or sbb ret mov repz ds fwait jp push arpl (bad) mov push push xchg xor inc (bad) mov cmp push ja adc xchg lahf pop ljmp aas add pop xchg add hlt repz lahf fildll cmp ljmp and push inc lods push and loope mov jne xor out mov pusha mov dec add sahf xor loopne dec dec mov leave sbb xchg dec jno popa es in shlb dec sub shlb pop cs fistpl pushf pop cmp (bad) jle dec scas jmp add into mov test push test cmp dec adc xor mov mov dec inc xchg aaa sub repz je (bad) dec pop rcll pop (bad) (bad) xlat pushf aad add sbb lock lods (bad) decl (bad) pop mov hlt adc mov add ja fucomip pop outsl adc xchg dec mov shr jg xchg cltd xchg and and fstl dec outsb idivb ljmp push adc mov add adc mov adc fldcw ds jmp outsb (bad) or imul icebp clc cmc cwtl xor push js fidiv in mov dec inc scas cmp sbb shlb (bad) and lcall stc or js aam push add and ss sub dec push jo das push test pop in fsubrl mov adc sbb aaa mov mov loop aam push enter pop lock mov push aas sti mov xchg out cmp js pop xchg cmp sub aam inc (bad) lock loopne mov mov orl bound cs enter add mov call shrb and in jmp ror mov xchg fstps movsl push pop lret xchg add lcall decl xorb cmp add lock cmp xlat popa movsb fwait push mov jmp mov pop stos (bad) leave cmpl sbb xchg fdivrl outsl bound inc inc or mov mov int3 inc adcl pop push loope ret sub (bad) dec movsb shll cwtl (bad) insl dec cmp pop mov int ljmp pop or fwait cmp cmp lret inc inc xlat pop sub and jb scas mov mov mov adc sahf push sub push fwait out (bad) jo jg das cmp dec xor push pop xor or pop mov push xchg ljmp (bad) data16 pop (bad) clc gs cmpsb imul dec aaa xor pop insb push js sti mov mov ljmp sbb pop (bad) int3 sbb jg insl add aaa shll lcall cs mov pushf xchg inc ret and push shrb subl or fiadd rorl inc cbtw test iret cmc popl mov mov jbe (bad) hlt in dec mov rcll out ds adc scas mov or lcall les inc arpl fs dec jb pop pop mov pop ret pop add or push les dec jg dec mov mov (bad) std cmp or lret and mov loop cmp cltd xlat outsl or lods dec lret mov push sarb xchg jnp push pop mov sahf lock fsubr or fst hlt stc mov scas add (bad) mov mov iret andb fdivrl in jno test sbb (bad) lret repnz pop inc insb xchg sahf imul mov (bad) fisttpll lods sbb pop push mov add inc mov mov jge xchg or mov movsb xor xchg pop mov xlat leave push std cmp mov in pop in fwait rclb jne mov pop cltd das xor movsb lcall repz add sub push lea mov in pop enter cmp adc and mov sbb mov mov add dec popa cmp sbb cmpl enter xchg add push add leave pop movsb les fwait mov push out mov mov pop lahf ret cmp std out ja repnz cmpsb push mov and fadds scas adc shrl in xchg jno mov lahf ds xor out jne int3 (bad) mov lahf sub pop pop (bad) xor push cmpsb jg (bad) stc and cmp xor in vpunpckhbw enter xlat sbb fdiv pop mov push jmp mov outsb incb (bad) roll out movsb sbb mov push jge test shr in mov adcb cmpb movsl leave pop in idivb mov mov cmpsb mov mov pushf je lock mov adc pop insb add fisub cltd popf inc outsl fwait jecxz shlb ds jle pop or and lret ret les jl ljmp out jp inc ds pop jb lea les scas sub gs add and testb push cltd push lea mov inc sub loope jle or adc add cmp cmp adc aaa push or mov icebp aam push popf (bad) xor and and bound inc rorb or enter push jo ds ds mov mov push test and mov (bad) movsb mov xchg pushw lea in in dec movb (bad) stos decb sbb popf pop sub jp cltd loop pusha xchg imul fadd jno dec mov stc jecxz sbb stos int lret aam out addr16 cmpsb aaa aad lods fnop jl out jecxz mov sub addr16 insl push stos pop aas addr16 fsubs mov loope and in or cs idivl mov jmp lcall cmp movb sahf sbb inc jl repnz jp jns lcall in rolb sub xchg push scas push jno lea jo jl push inc and sub adc sar jge aaa add jns mov das sub push add insl fs in (bad) enter and call loope push sub add shl mov mov (bad) jno jnp clc push clc cmpsl xchg cmpsl xlat fsts cs xchg jae cli pop scas jecxz idiv mov pop jbe movl fwait mull repz inc sub pop outsl mov mov test jae (bad) adc les inc push sbb out jb ja ja outsl dec adc lds ljmp xor int3 dec xlat insb popf fsts xor jecxz cmpsb test mov js or outsb sub cmp loop int adc mov dec dec mov imul jnp icebp decl repnz cmp push shrb imulb enter or repz int dec cltd in pop mov outsw mov add in dec loope jge rorb and pop in outsl xchg sbb jp pop adc addr16 cli into and (bad) cld std lds push pop pop (bad) popf loopne ljmp sub (bad) xchg stc jle lret xor mov je mov dec dec sbb pop gs insl (bad) fwait mov fs loop call fmull mov inc xor sub sbb jge jp cld test ja adc add les jne jecxz mov and jle mov sbb cmp mov out enter stc and cld sub pop sub mov popa jno inc sub xor cmpl (bad) bound and and adc adc and sti pop xchg push (bad) xchg xchg stc stc movsb dec incb fucom jns push dec fild (bad) nop nop (bad) dec adc push push or dec jo xchg test out or iret xchg dec push out and clc je leave push lcall mov and (bad) inc cmp daa mov loopne es inc xchg into add les jo loopne jp xchg inc mov sub pop mov jnp push adc incl daa data16 mov sub imul jae (bad) mov sbb fistp leave out sbb sahf mov and sbb xchg imul push add outsb das jle mov lcall lcall (bad) jo xor inc out jge jno sar add outsl and lds aas enter add dec lcall mov std lds (bad) cld inc mov in call mull clc push xchg (bad) ljmp in inc push scas (bad) xrelease loopne adc test rcll mov push scas or cmp sub call pop sub stos mov dec mov fwait cmpsb jbe mov fnstcw test or jae jb sub pop and clc icebp or (bad) mov stos cli xchg aam rcrl push dec and imul push imul loop xor pop pop incb data16 and daa lods jecxz mov xchg and orl dec hlt sub jge or test imul pop mov (bad) sbb sbb loopne mov aas outsb push push rcrl mov ja aas or (bad) mov pop xor push add test inc xchg dec aad loope jns test (bad) push dec xor pop bound adc mov in adc mov outsl call sub fimul mov inc roll into add mov jo cmp pop add pop xlat mov dec leave mov inc int3 mov fstp jne fmulp add insb xchg mov les icebp add (bad) inc mov mov cmp push sbb adc or cli stc lods repz push xor pop xorl dec cltd int scas lods pop aad and popf cmc xchg add lret (bad) movsl mov rcl out pop ret xor and lcall inc push lcall mov out mov jg mov mov stc cs inc adc dec notl dec pop jecxz xchg cltd push rcll jne inc xor int jp fsub pop loope iret fidivrl or aad inc inc stc neg std daa clc xor outsb bound (bad) imul ret dec add fsubrl mul addr16 movsl mov mov movsl cmp push (bad) aad fadd or (bad) xchg lcall outsb scas aam orl fwait sub lcall jecxz dec mov movsl out cmp inc movsb dec (bad) lret mov pop mov test dec push mov lret xchg movb (bad) jl insb scas fimul or push call add (bad) xor inc add inc and dec sub xor ret shrb sahf dec dec lret add decl insl (bad) incl rcll push push xor aaa xlat sbb movsl push cwtl mov lds lahf push pop xchg movsb push dec in cli xor push mov mov fsubr paddsb lods mov out lods and inc ss mov rdtsc add cmp or lods cltd pop in jmp lahf aaa push or popa pop dec fdivrs mov pop push mov data16 pop inc pmaxub and or mov xchg inc fs pop ja mov or (bad) aam icebp shl push inc enter mov hlt pop roll (bad) dec mov xchg inc mov push adc (bad) jmp push in out in imul dec fwait push cmp fildll popf (bad) xor dec mov sar (bad) insl jnp mov pop subl xchg sbb or lea sub out xchg (bad) data16 dec cwtl xchg insb hlt icebp in das scas push xor imul xor mov mov pop stos inc sub mov inc lret sub or inc mov (bad) jo jge test fdivp mov insl sbb loop pop or pop cmp (bad) enter fldt imul dec test dec into pop jbe cmp jbe mov fldt pusha popa mov mov or clc roll pop jne inc xlat xor imul xchg pop jge sbb cmpsl sub out pop scas mov ds jno ret loop mov push std mov jne dec inc outsb lods les inc fdivrl adc arpl scas push cltd mov mov push hlt xor push int3 ljmp adc xchg and dec fwait hlt (bad) ljmp push out inc (bad) sub jp push xchg mov lock xor cmp dec outsb arpl (bad) mov mov sub (bad) cmc mov push or jl (bad) sti dec sub mov sub test sbb pop lret sahf inc roll jmp pop ljmp fidivl inc popa psubq test mov inc test add dec pop adc xchg insl xor xor imul adcl push pop jb popf daa cld lcall mov dec pop or or clc mov mov or jnp jnp orl scas les aaa inc fsubrs add cmp int3 push pop push jnp xor cltd vpaddw adc inc dec and outsl pop sub mov mov mov or sbb xchg mov sub xchg mov test adc pop lcall mov cmp push (bad) xor data16 out ds or jnp fldt mov lock sbb and adc (bad) in nop imul cmp fsubl dec aaa lcall cmp das cmp cmp ja leave xor mov pop or xor mov aas jle jl or jo sbb fwait jae pop mov xchg sbb mov inc jl fldcw and les (bad) das mov jmp xchg cmp mov popa or pop std jbe inc insb dec inc or pop mov stos into pop xchg clc mov dec (bad) loopne (bad) jae mov fadds mov add push sub lahf dec pushf loope pop dec push cmc cmp push or push push addr16 mov movsl test and stos lock cmp das sub iret loopne mov inc lea mov inc movsb jecxz cld push cmp xchg inc cmp mov (bad) fnstsw mov das stos lret jbe xchg fwait out arpl popa aas xchg xchg sub and xchg cmc mov out loope popa or xchg xchg rorl hlt jle or mov jb mov stc rclb sbb inc inc xchg repnz sbb pop push (bad) ficom fnsave insl data16 stc xchg lods pop cmp rcrl mov mov cmpsl add lret test and test loop xor xchg mov inc adc dec pop fisttpl mov jns dec cli incl insl bnd jb clc pop xchg dec sub rcrb sub movb cmpsb sar mov xlat insl jp je ja aad sarb dec mov repz push jne dec out icebp mov jge inc shll mov dec mov xchg addl cmpsl sbb mov lds mov xor adc mov pop imul dec adc clc loopne or mov adc in int add xlat push pop hlt push jle push jp push or add popa push mov jle (bad) lret pop les add xchg insl mov ret in xor xlat inc jmp xor cmp mov push push inc cmp mov js mov addr16 jg pop lods stc scas jmp pop rcrb popf js adc bound sub outsb scas lods inc pop lds stc inc pop ret push repz fisubr cld arpl inc aas pop sbb sbb aam pop cmpsb aam arpl xor (bad) dec and pop scas cmp inc in testb jnp jge cmp add cmpsl imul mov sub (bad) or cs negl mov or leave clc lahf cmp scas mov ljmp xlat push pop lea mov pushf mull fmuls pushf mov pop divb push and mov pushf jno out cmc negb jne dec ss je fidivr aam cld add arpl add int sbb lock in push mov hlt stos and mov push push mov cmp hlt shll pop push xchg les pop loope mov scas leave jno lds add xor shl mov mov mov mov xor or ficoml rdpmc gs and xor lgdtl push repnz ss dec jl push cld mov lret inc add loop adc popf dec cwtl adc xor xor fsts and (bad) fcoms cmp jge cs push sbb (bad) xor and repnz pop xchg xchg nop mov pop push or and fldt mov nop adc jp icebp movsl xor pusha ss test fwait ss test pop mov dec mov add xlat lea rcrl add rcrl xlat mulb sti pop aam sbb adc lahf pop cwtl pop (bad) mov fstl test icebp addr16 push fwait add mov jns add fs sbb (bad) idiv aam arpl scas mov sub pop lods ja xlat int fild rorb arpl repnz fwait sbb adc popf das (bad) push jne fbstp xchg fimull jae pop pop jae sub fcoms aam notb push pop lods outsl jl,pn pop lahf xlat inc dec ja jno jg adc adc mov and fwait (bad) aad in inc push scas add pop dec scas sahf mov jne fbld sub mov cmpsb pop sbb movsl pop lods (bad) out dec and aam les mov and sbb test in es adc mov inc mov mov xorl jecxz into lods lcall fcoml push daa mov andl (bad) mov xchg dec dec jbe orb mov mov jle fcomps xlat cmp (bad) (bad) je mov sub or aaa (bad) ficoml dec and rcrb call mov dec mov inc inc iret jl pushf mov push push aam sbb frstor les stc mov loope scas fcmovnbe ja icebp push in rclb sub mov jge pop cmp mov cltd gs aam movsl dec outsb fnstenv cmp int3 push into stc push sahf scas test pop mov mov pusha das xchg lahf cli xor in popf jae (bad) sbb lods dec lahf adc rclb mov in loope jbe and cld or cmp aam pop fdivs xchg sbb les push loopne lcall in cmpsl repnz or mov mov dec ja jge dec dec jecxz js push (bad) mov mov fstl mov and cmp or mov lods imul adc adc push (bad) jecxz mov dec or aad mov pushf or mov imul iret dec data16 sarb xchg (bad) mov hlt repnz ss xor aad outsb or pop push pop xor js repnz mov sub xor dec lcall sub leavew xor or sub sbb jg sub in out cmpsl stc cmp and adc sbb outsb xchg jnp out xchg lea and out stos xlat mov scas sti call jle sbb pop inc push cs lret repz or jno dec ret cmp pop jp inc add jecxz (bad) pop mov imul andb out jge test shlb imul sbb jbe sub pop cltd dec lea sub push inc int3 xor or (bad) sbb adc mov push add mov shrl pop aas push push insb inc in push mov lods lds mov enter mov shrl xor mov arpl into push dec add push mov mov insb sbb faddl mov hlt mov sub push push popf popf loopne push xlat xchg mov rcrb (bad) iret mov and mov cmp fbstp clc aaa incl or adc daa lock loopne sarb jg incl or adc daa lock loopne sar sar cld pop lret arpl insl arpl add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mulb add add or or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push inc sbb push sub cmp lret mov fldt mov imul (bad) sti ja test xchg jmp pop add mov add dec mov xor mov mov lret aas stos or add adc mov les lret and cmpsl cmpsl clc in add cmp popf cmp test imul lods ja sub xchg test imul lods push aas mov ror je fisub push sbb mov stos mov push es je mov jnp (bad) (bad) xchg andl jb ds ficom in cs ss mov xor inc pop andb or ret movsb push xchg movsl mov cmpsb loope dec and inc fdivr notl imul cmovnp mov gs (bad) and xchg repnz mov lods loope push sbb cmc inc leave test fcompl pop insb iret pusha data16 int3 or aam aam shrb scas adc lea sti xor nop and jg lods ret xor xchg (bad) leave (bad) dec test or lds push xor and mov xchg sbb decb les mov loope fnstenv inc mov stc sbb lods js call pop aad mov aas (bad) decl cmp mov imul dec insb test pop add icebp enter shl arpl imul or adc aam fwait mov xchg pop or jge cmp push sarb out cmpl xchg in lret mov (bad) popa popa mov pop adc out call sub pop mov aas jle mov in sub sbb int cmpsb push outsl daa arpl mov shrb outsl js inc loopne andl mov add or lods (bad) sub sub add xchg sub mov fcoml jae push add icebp push cmp jle pushf lret push sub into das mov push dec lea sarl xchg jmp arpl setae mov mov jo or or and fdivrp jle bound iret jg (bad) mov xor push in sbb xchg jo es lds fstps (bad) sub fidivrl fwait hlt into push dec outsb in inc dec jo adc pushf adc stos mov rclb mov movsl js mov daa jmp outsb loopne clc cmp sub sbbb sti mov xchg lods outsb popa iret sbb addr16 xor xlat loope repz adc cs (bad) faddp dec into adc ret insl dec mov adc pop mov js mov push mov jns stos (bad) mov inc jp daa pop or arpl (bad) ljmp add or mov test xchg lods mov add sbb aas loope mov out dec mov (bad) lret int3 sub xor xor andl clc cli cmp out xor (bad) stc xor jp mov ret adc mov mov add (bad) jo dec mov push loope push cmp in sbb divl jmp push jmp jns mov je sub cmp rorl cld mov mov cmp lret fiaddl rcrb out lods jge adc sub xchg ror push xchg ljmp pusha xor scas dec xor and inc (bad) inc mov sbb stc or loop stos rcll mov jns mov out mov sarl int3 jg mov shrb xlat scas mov xor jae pop fcoms cli repnz pop leave xchg inc test mov ss stc ret clc sarb add shr mov stos (bad) cmpsl mov lods jno icebp (bad) pop sahf rep dec es push push (bad) clc lret add cmp in push and jns inc inc sbb (bad) xor push (bad) cld out jecxz ss xchg jnp pushf inc jo xlat leave push xchg jg fdivrl int mov pusha stos fmulp int3 mov xor aaa into jge imul fdivl adc push test xchg ficomp cs (bad) xchg sub stos sti ret lods mov jecxz inc and jae (bad) cmc push cmp cmp xchg js add arpl jno rcrl xor rcrl leave out pop pop pop pop ljmp sti ss repnz xor into and fcompl mov and mov rcll mov shrb dec jbe shrl stc sbb stos jge push imul or or mov fistl pop mov rclb icebp jle sbb push int3 les pop data16 dec in mov repz adc sub out or lock dec xlat lahf fist aad stc (bad) out (bad) fild insl cld inc sbb xor adc idivl pop call or and (bad) and or jl repnz or xchg cs je pop lea int into lods or ljmp sub jb cmc call mov (bad) mov or mov xor mov in jmp mov mov push bound fwait add out pop xchg mov insb ficom fs gs ss jae popa and shrb divb movsb nop stc mov clc inc xor sahf dec loope ret adcl dec adc or insb mov cmp or je addr16 xlat dec je push push push dec and inc add mov add daa imul gs mov int3 xchg mov pop imul (bad) pop (bad) enter movsl out int dec mov mov mov inc insb test lds aas jo mov aaa popa sub mov push jno push jnp xlat jge iret popfw mov inc (bad) xor mov daa or int3 cmp es mov psubusb (bad) out pop int (bad) mov sbb and daa popf inc rclb cld pop rol (bad) aad ja push mov inc test ja xor es negl dec xor sub leave push xor cmpl lcall into jl sbb cmp mov (bad) dec popa imul insb out push add lret ds pop aam and dec and mov push adc (bad) std clc xor and lods pop cmp leave dec push shlb in movsb (bad) leave out pop mov dec imul inc sub xchg rolb mov cwtl lea aas xor ljmp loope stos fildll mov sbb mov fisubrl pop mov or jp jae add add dec mov jg insl ss repz fcoms and mov scas pop pop sarb loope jle sbb pop pop inc inc add data16 scas jge (bad) adc dec sub adcl add mov es push test dec jl sbb or xor xor and mov cmc xchg pop ljmp sub adc nop in fcoms push mov (bad) (bad) adc mov and outsb lds push movsb add aam nop repz (bad) call negl cmpsl or repz xchg mov mov stc cld lahf push mov dec pop fs aas add pop push jne lock out clc push push call jle (bad) mov mov and xlat out mov das sub inc jg mov pop scas push sbb outsl mov jmp or mov mov std jnp (bad) test testb rorb stos pop mov mov add sbb movsl out push sti daa xchg enter and xor clc sti mov nop mov ficomp aam xchg and loope enter xor and and cld aaa clc push xchg mov rolb insl and cmpsl (bad) cmp jb lods cmpsb je fdivrp inc and in inc pop push out out mov pop loope lods push jg cmp add dec inc fsubp leave adc add movsb mov push dec movsb mov loope fimull adc gs out std sbb sbb loope and cwtl stc (bad) jbe ljmp mov fimull (bad) mov sub push loope daa mov dec aas in jl and out jmp cs push (bad) aas daa sub daa jle lret jecxz mov mov leave outsb sbb adc (bad) leave jo popa add cmp loope push or xor in lds xor sub lret xchg xlat ss inc fidivrl cmpl mov icebp add int3 inc dec sub mov dec cltd adc aam hlt lea inc rclb loop repnz fstpl rolb cmp int3 imul mov pop je jmp sub repz test fs stc ds es das xchg xchg jno gs cmpsl push imul dec scas mov mov inc inc add sbb hlt sub mov (bad) lock mov xlat xor sbb inc (bad) lea or cmp xchg pop and mov xchg rep pop jnp in cmp jmp cmc repnz mov ljmp stc push mov cmpsb fisttpll jecxz push cmp mov xchg jmp push or mov popf jnp clc and pop mov (bad) mov adc push int3 add sub xor into (bad) movsb push cmpsb cmp cltd dec or sahf pop xchg (bad) push jmp outsl loop mov aad fsubs cmp push or add inc sub pushf jb sub lds adc xchg adc repnz lods jecxz cmp mov push (bad) cmp jmp jmp mov enter int3 xchg std stos pop inc lahf fldcw popa xor jno sub outsb mov cmp sub aam lds xchg mov movsl adc jno lea and dec sti pop dec cmp mov mov dec mov (bad) cmc cmp push lret leave ds daa (bad) cmp mov iret popa bound cmp or push xor add cmp xchg xchg inc pop pop cs ss sub sbb or enter jno jb je mov aaa rolb cmc mov je mov pop lcall inc rolb shrb jb mov inc xor sbb dec xor jmp push or pop loopne sub test cmp xor js std call xchg adc test dec dec (bad) push popf (bad) and inc dec mov xchg subl pusha cltd push sub fist insl push popf jbe xchg or dec (bad) xchg cmp outsb adc mov cli xor inc add adc inc push inc fiadd mov ficompl idivb dec shrl int (bad) notb sarl jns rol or add pop dec inc jp mov jbe xchg or shll pop cmpsb shrl in (bad) sub pushf aaa ret sbb inc enterw stc pop sub movsb push mov gs dec les push mov cwtl push mov test cmp xchg cmp int3 lea arpl push cmp icebp mov or sub and mov cmc sub je cmpsl pop add pushf lahf mov (bad) or das out aam lock fstpt xor and push and adc xor aad mov cmp mov inc lock int pop (bad) sti mov rcrl mov push xor push mov or pop push hlt in mov inc inc imul stc outsb jbe dec xor stc push and sbb mov xor pop shrb stos mov cmp cltd jl dec add aaa xchg iret mov sbb fdiv or outsb stc sti std leave ljmp imul push pop or stos out sub and cltd loopne mov in sets repnz ds insb imul jecxz ss je (bad) jb in push mov test pop jb mov lds adc pop inc push out push les mov sub sti (bad) jne sbb jb fs mov xchg inc push aad and jle xchg pop arpl icebp inc icebp (bad) in aam mov xchg add dec jno mov mov sbb mov pop das xor cmp sar cli mov inc dec jle dec fldenv cmc xor push (bad) loop stc int3 test add je jmp cmpsb fwait dec xchg imul xor cli je insl ficom insl dec out (bad) stos push add stos hlt lds jns pushf cli mov ljmp out sub push pushf cmp in inc fist or (bad) mov aas cs adc icebp (bad) out cmpsl jecxz test push (bad) scas repnz inc mov scas pop xor decb xlat (bad) and cli or les or pop ret in and std sbb cmp mov pop mov xchg pop mov ja rorl andl ret lcall xchg cld faddl push xor push fdivl movsl mov xor mov scas leave pop push popf outsl sub insl out xor inc sub js fldenv xor repnz insl and add mov mov cli add (bad) jmp xor add out jnp adc adc add pop aam push stos sbb (bad) add lcall int pushf pop mov xor negb sub sbb rclb mov icebp dec sub jecxz lock or int (bad) mov mov ror mov inc xor lret jns dec decb lcall dec ja and pop or (bad) xchg mov add and pop jne dec or ficomp lret xor jmp decb push and pop sbb cmc imul les pop sub daa fsub xor loop out mov mov pop out aas lret and and out stos shlb out ja jbe jb add jo adc mov dec dec int fxch cmp mov cmp nop out mov hlt sbb mov ljmp dec cltd mov jecxz das adc cmp loopne std clc adc mov sub mov and into in and xor push pop sbb rclb inc insb pop (bad) sub daa sbb xlat test cmc test daa popf jl out inc divl lock lods xor xchg loope or scas adc addl aad and lret rol es fldenv or sbb cmp pop adc dec and inc test dec movsl mov wbinvd sahf jb sbb jecxz rolb js mov push mov or jo dec cmc pop hlt jne ja dec mov lret aad jne push (bad) stc inc clc arpl pop mov mov mov clc pop insl mov je dec push cmpsl lcall gs aaa (bad) outsl cli jns in mov out jbe (bad) mov cmc std rcr jae cmp stc loope or arpl adc jne std inc sbb fcmovne mov cwtl mov in icebp icebp shrb mov sbb mov cmp mov add sti push jno inc std push popf push jg mov mov (bad) push mov enter or call insl fs xor rcrl es cld outsl into and add inc dec jmp or pop push sub jl pop push sbb leave pushf insl lcall loopne and aas inc nop repnz fcomps cwtl jne inc orb (bad) (bad) xchg or cld movsl mov leave and push (bad) and or sarb mov push pop inc sbb mov dec or and aaa jle add ja mov into js and pop mov pop jle mov fnstcw call jo jno lods fwait mov aaa fisub mov adc popa mov cmp jb cmp popf (bad) mov jmp cmp and adc popa gs hlt cmovge insb mov fcoml aad xor and dec push jo mov mov jmp xchg or ficomp movl loopne (bad) out loopne inc enter push lods fs mov ss pop lods movl xor push outsb arpl mov ss mov stos xor jge pop lds insl add cmp pop mov xchg mov jns shr test and dec dec aam pop jl (bad) into lcall rol adc jmp out call jnp lret mov stos ss xor dec fbstp xchg clc dec nop jge inc sti pop loopne xor dec xchg out mov adc mov inc and pop dec int cld lret inc lods inc fxch dec and insl gs xorl jnp pop sbb clc mov sbb push (bad) mov in xor negb cmp mov in scas mov jge mov add adc inc push pop in push push mov push (bad) pushf and adc sbb and pop jmp cmp imulb mov jne mov push jno ret xor dec jmp push mov mov xor imul aas mov outsl loope lods str xchg mov mov push add inc pop xorl jmp ret mov dec cmp out mov or fcmovb shrb jae add push jp xchg lds imul and lret xchg push lcall imul outsl mov (bad) pop cs jae call test mov sar test or mov je into cs call data16 adc in push add into cs xchg sbb mov in pushf cmc ret sub rcrb push sub loope cmp cli icebp xchg sub ds add inc sbb addl aas js repnz movsb jmp movsb pop mov add xor aaa stos das iret dec inc nop push fmuls mov adc lds jne cmpsl pop iret push mov mov testl leave enter movsl cli xchg lahf push leave lods movsl pushf mov mov hlt cmp lret push sub cwtl push cld lea cld es sti ja bnd gs cli xchg aad fistpll cmp and mov shlb out es pop adc or out int mov mov mov pop stos mov add xchg hlt or movsb test int3 mov (bad) clc movsl lcall add je push dec ficomp xor daa outsb cs adc jnp ja cmc sti ret pop push shl movsl push push aas rcrb xlat mov les dec les popa inc nop enter fistpl push cld xor dec jmp mov je pop pop imul mov in jno enter dec xchg rclb lret and movsb imul jp mov fisubrl test xchg mov push cwtl cmp sti add sbb into rcl outsb lds xor ja enter dec jns dec (bad) add loopne hlt cmc aaa sahf ljmp cwtl repz push cli and ljmp popf pop insb (bad) mov inc leave int3 notb mov jne lcall add pop mov push cs dec jge sbb rcll push inc or jl js jg (bad) (bad) mov xchg test push lret adcl (bad) lret mov mov rol cmpsl and and iret hlt loop andl ja lods in (bad) ret fildll and adcl push jg pop test fwait sbb mov xchg sub sbb out cs or imul push jp in (bad) xlat outsb cmp (bad) and add outsl cmp adcb (bad) add inc cwtl push add jge (bad) lahf mov dec xchg ja and adc je fdivl aaa test in sub pop xchg test out cmp mov inc adc mov addb test leave mov aas mov jl cld ret imul sbb scas cmp rorl aam iret (bad) cmp and sbb outsl ja pop and mov pushf lods adc xchg nop sbb out addr16 test mov sarb push adc jnp jecxz popa pushf in hlt mov dec mov scas push sub pop int adc cltd pop mov (bad) dec clc mov test ss fimul add sub ret dec data16 popa pop aaa inc aam rcl mov lcall out push add sysexit stos or mov loop jb test cld push test lcall clc jne stos fnstenv arpl scas lcall or or push mov cld test mov das dec stc js push and into outsl iret jbe lods jae lret stc scas inc xchg push arpl push xchg sarl outsl inc xlat movl mov cmpsl (bad) js cs mov lcall lahf movsb arpl movsb mov jmp dec lret shlb pop test mull push scas outsb subl push push push idivl fnop cmc sub push std out shll pop aad scas xchg push addb mov and xchg ret xor push add scas cwtl mov xchg aas xchg sub and and inc (bad) ss jmp push stos daa xor das lcall sub insb je stc es stc repz sahf aad push jecxz and cs xorl pushf pop std test nop aam int scas cmpsl negl (bad) loope and fsubrs call dec sbb nop cmp jbe push dec fistpl insl in scas mov test dec (bad) in (bad) xadd sub cs dec push and fcmovnu fcomip sub xchg pop and test cmpl sbb ljmp xchg negb jecxz shrb cmp mov int jp in mov push dec push xor xlat pop imul push adc pop push outsb sbb popa mov sti mov jae mov lea rcll sbbb mull jge inc into dec leave addl mov faddl xchg add movsl push sbb adc add adc and clc xchg mov sti icebp shll imulb push cmp (bad) push mov xlat sti jbe sub dec mov fimull stos dec sbb scas enter cmpsb daa and test mov fdiv lock cmp jne mov arpl xchg xor cmc and and pop jae pop or push xor push adc pusha lds ret (bad) cmpb push mov call lock add (bad) cpuid icebp inc pop mov repz cmc mov add and test cwtl jp inc cmpsl adc ficomp pop jae xchg mov and or inc popa sarl popf in pop outsl (bad) aas sbb outsl pop mov xor pop mov inc or dec gs jno lret mov lahf gs imul mov insb dec jl or lods arpl mov ret (bad) popf in add push jbe sbb out push push cld stc movl mov and mov imul (bad) mov out insb add adc hlt adc pop cld lcall sub mov cmp shl add shrl scas add push inc jp push xor and inc std std sub test sti xor pop out push mov inc mov xor lods aaa movsb cli je or int ret imul imul xor or ja call (bad) inc push es je lods (bad) bound lahf lds mov or and inc rcll and inc add aad inc (bad) xor es xor out inc inc cmp mov and push mov push std jge fisttpl pop hlt xlat pop mov loop sbb lods (bad) stc pop xchg notl in push adc xchg mov ss (bad) mov and out ss pop movsl outsl xchg mov mov sbb inc loop fidivl insb or sbb push lea ja pop sub das mov fcomp mov xor into push in stc pop inc xrstors int3 sub in flds mov stos mov (bad) imul repz push (bad) lret nop aas into out outsl (bad) and cmp lcall in aas pusha lahf sbb movswl push inc mov daa js jle stc fs dec sub lcall mov or xlat jbe adc cmp (bad) mov mov lock loop mov pop negl lcall (bad) adc dec loopne cmp dec loopne cmp dec loopne cmp dec loopne fwait sar mov enter call add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add out and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov test inc push push inc and sbb (bad) mov mov xlat arpl insl jg ds mov add ret add repz loopne add test sti icebp lea fnstenv push mov mov pop lds insl xchg pop pushf aam sbb aad lods js (bad) cltd fnsave loopne je push popa lock mov mov pop jmp mov pop xchg aad icebp std add or je stos imul loopne and pop pusha dec mov xchg mov dec cs mov push lea inc insl ret add or sub or xchg lret insl test xor pop scas movl pop jns dec xchg enter es cmp out andps ret jl gs repz sbb arpl jns orl addr16 sbb sbb (bad) mov mov je push loop or loope out mov pop test into sti push popa lahf (bad) iret jbe int leave cli xchg roll jecxz or hlt pop mov (bad) sub (bad) outsb or int xchg (bad) in xor xlat or and pop das test popa cmp cmp imul pop jns test xchg sub add nop shrb push pop das loope mulb fs sub cmpsb sbb clc js cmpsl aas idivl pop pusha rorl popl cmp adc xchg daa fimull mov mov push addr16 in sub jge xor pushf popf adc movb mov cltd cmpsb sbb fs and pop and sti (bad) and js repz loopne icebp dec push data16 mov lret sub push adc mov xchg sub sbb and aaa lea mov pop fs mov dec out xlat popa ljmp and rol jb rcll dec jno,pn inc adcl jmp imul and bnd mov mov dec mov lock mov adc pop ja popf mov push sbb cmc enter and xacquire sub icebp imulb xchg fisttpl les jbe mov sub inc (bad) call cs mov mov insl dec jb (bad) lock pop pop push fcoml sub jb jo push rol cmp lcall popf add sbb movsl fbstp inc cmp repz loopne adc xchg push jl test sahf xor movsl xor cwtl xor dec addr16 jle enter inc and mov lds cmpsb and int rclb push sbb hlt xchg (bad) and inc xchg and dec mov xchg aas js mov push hlt cmp adc xchg stos sub (bad) outsl dec in or xchg xor mov xor jle jo dec int3 push cltd call jle push mov adc sub jo fs pop or lcall jp xchg fwait insb mov inc loope pop mov xor adc scas inc jno adc xor mull rolb inc adc xchg sub fwait lret mov mov add adc sub sbb cmpsb jmp add jnp xor xor repz in dec mov jecxz xchg pop or jo dec aam jg fisttp and icebp inc lods sbb mulb xor xor faddl push repnz das shlb push mov shrl cltd (bad) cmp xchg dec frstor (bad) dec mov sbb and (bad) es push add adc jl hlt add xchg jle lret mov cmp mov jecxz (bad) jo fisubr outsb jmp jg push imul pop std push in add fcomi mov jp mov sub pop inc (bad) jo xchg iret iret cmc cmpsl mov in mov mov jo bound adc sbb jge cmp sbb mov jmp jmp mov fld xchg push push in fs xchg cmpl or lret mov clc cmpsb bound es sahf js inc aad jne insl cltd adc adcb cli (bad) (bad) sub xchg sub cmpsb jnp divl cs repz stc jmp daa nop mov in xchg pop mov (bad) jne add mov jl mov xchg xchg or push jmp inc mov mov add aad jp pop fiadd nop outsb xor mov lcall dec mov push test roll fstpt inc (bad) cmc daa mov inc out imul push (bad) leave mov dec stc pop daa sbb (bad) ret mov (bad) lret jne imul das mov xchg mov aas outsb sbb fcmovb leave xchg pop out stos jmp mov ss aas fist insl fs push fstpt out cltd mov jmp xor lods push in dec sbb push jmp iret js popf stos loop lahf sub loop (bad) stos mov in mov sahf cmpsb xor mov insl (bad) movsb das sub das loopne (bad) iret movsb push pushf jle stos jno sarb cmp pop (bad) pop sbb fimul repz loope in aaa (bad) (bad) hlt insb (bad) pop xor xchg xlat add stc mov out sub (bad) dec sbb and arpl mov add sub movsb daa jns sub xadd adc sub rolb jbe insb shll arpl (bad) sub xor out add and addr16 mov or scas jl pop xor shlb adc es sti jns or xor mov (bad) cmp imul fisubr mov cmpl xchg push aad cld dec pop sbb movsb xor dec jnp sbb sti daa sti jnp inc sti and leave adcl iret icebp int3 mov mov mov clc xchg mull mov jo sbb repz enter xor xor ret ja mov cmp ja out inc lret sbb inc fsts mov roll sub hlt mov add fnstenv repnz or js pop fistp repnz sub in rclb in stc mov decl orb cmp outsl sbb cmp adc lahf push sbb push lret inc aas dec pusha (bad) ror adc imul sub mov dec fucom aas mov add ss movsb mov je xor inc add cmpsl pop and clc mov and mov add ret rcrl bound sbb xchg xlat pop pop fwait jge lret shl jg cwtl jp pop jl or inc mov dec xor xchg push fistl adc and mov (bad) mov loop outsb adc leave jbe (bad) out icebp push aad insb cli add fidivrl popf out mov pop je outsb xchg cmp cmp mov pushf xor rcrl xchg leave ja inc cmp movsl (bad) repnz clc lock and xlat loope dec insl icebp enter pop aad fstps mov mov xlat cwtl test loop outsb cmpsl mov add mov add push mov out jo mov fdivr stc mov cmp fwait xchg out mov xchg dec mov pop xchg pop fisttpll imul (bad) push push and sub pushf mov or lods into (bad) jl xor or rcl cmpsb mov int3 inc cmpsl das mov fsubrl imul movsb rcll mov in test negl lock das and fwait imul push dec mov cmpsb push lods jle out mov xchg jge jae and push adcl leave push std mov sbb repnz mov imul fdivrs pop ficom xor fs mov test inc or cs popa xchg mov mov insl into lock xchg loope or adc mov sub test sahf in sti mov push pop pop ret or int mov dec addr16 ret cmpsb (bad) addl or test jb cmpsb dec inc ss int3 mov add (bad) je inc movsl or cwtl subl sub (bad) das mov fidivrl jg and lea cltd mov ss adc (bad) icebp jmp lock test sarb mov vmovlps mov mov (bad) fsubr cmp cmpsb insb stos popa mov nop outsl lock dec loopne sbb loopne jle in xor fistpl in xchg lcall das mov mov sub ret and mov orl rorl lcall ja insl inc pop out (bad) jl cmc fiadd xchg mov mov sbb push lock insl leave pop sub das call fs jge outsl aad xor inc imul scas lcall out and pop rorb iret or pop lea xor push loopne sub inc sarl out xor ficom inc fimull dec and xchg fs lods loope inc mov and pop test mov idivl icebp cmpsb jbe and adc pusha cmpsl or mov mov (bad) insb daa dec xor sbb in addr16 xor into jp mov fstl mov popa loope rorb js jb jl outsb push leave insb mov jns and shl xchg jnp hlt dec fistl enter scas rorl lahf cmpsl pop mov sub (bad) dec rorb add and (bad) xor cmp cmpsl mov and out mov fcmovb pop ljmp out rol in or cmpsl jl sub test cmp xchg push aaa out jge stos scas test mov xlat popa inc push sbb lret sbb jmp cld inc sahf lods xor push jecxz and push dec loop inc clc paddq mov xchg xor out cmpsb dec xchg pop inc push rclb lea ja fwait pop xchg (bad) popf push dec pop add push xor inc loope rorb mov sub pop sahf push xchg jno and sub mov in add or movsl iret popf rolb sub (bad) ljmp push (bad) jbe jo roll sahf shl roll mov or lods adc and ljmp mov scas pop repz or xchg hlt xor loope jae pusha push jae sub sbb adc mov movsb jns das or daa inc lcall inc sbb pop out push je out jmp or testl (bad) mov jge aaa insl ljmp dec ror jae jle fsubrl add data16 push sahf dec mov push sub push in mov add sub jle dec scas (bad) rcll adc xchg cmp xchg lahf add fiadd cmpsl call into lods fcomp (bad) call lock pushf lahf out test or sahf aaa cmp mov sbbl fwait mov stos loope jmp sub mov mov adc loopne dec mov shrb roll dec popf (bad) adc mov pushf mov fdivr mov das inc jge fnsave jnp test mov mull and adc dec fdivrs mov add pop cmpsl pop add cli (bad) xor scas push xchg sub lcall je,pt sub push (bad) xchg cmp xchg scas movsb je mov mov das sub in (bad) xchg mov push xlat jmp fmuls imul or pop sub cli mov enter subl loop mov pop cmp icebp and sti sub or inc dec das (bad) push fist cltd cld add sub pop push inc fcmovu pop sub sbb (bad) (bad) lock mov rcrb js mov lret adc mov jl lods out out daa or push rclb fsub das into fs sbb push inc subb xor cmp ljmp addr16 sahf push fwait pop sbb lock pop popf xlat cmc movsb out xchg ficom push jno jge dec dec das repnz dec lahf cmpsb mov ret fbld lret sub outsb inc xlat or jecxz lods xor adc jmp push push xchg pop cmp mov inc test jns daa dec testb ficompl imul hlt aaa daa test cmp push cmpsl sbb (bad) cmpsb ret ret push gs jne rclb jecxz dec sbb test sbb loopne (bad) in adcb mov mov jmp inc cs rclb fstps sbb std push cmpsl movsl pop cld pop or ss fstpl ror test or je jecxz xor pusha xchg lds ljmp and sahf rcr fiadd jne fdivr push hlt xor sub fwait andb call sub and outsb aam mov stos add iret aas mov loopne cmpsb push mov fldl scas out sub movsl mov cmp xchg push pusha ds pusha loopne pop add push int3 aaa frstor xlat stc pop popf (bad) or (bad) mov mov repz cmpsl ret ss cmp pop push rorl mov dec int addb or cmp imull popf fwait (bad) mov push pop xor js mov and mov dec in test cs jge inc loop movsb inc mov xchg or mov mov ss and (bad) mov fwait popa adc and xor adc repnz test inc xchg fs (bad) (bad) shr ss sti loope int3 cld xlat ds (bad) outsb rcl jg mov rcl loope adc std xorb fwait xchg loop xor (bad) repnz in lods add aam mov ret (bad) cmp pop stos push sbb pop xchg (bad) ljmp xchg lock xchg loope test sbb push cld push enter or (bad) in fnstsw loopne push mov add inc mov pop add inc push adc ds lods push in pop xchg cli xchg mov xchg xor xchg int3 push mov in sbb mov imul iret mov pushf or hlt lret stos cmp fimul rclb outsb movsl and fsub adc inc fsubrl push mov icebp cmp push addl cs ds fistl cmpl xchg andl pop repz js jl addl cmp cmp (bad) and dec push (bad) pop dec jmp cli std int cmp lgs out fstps fs mov sbb or jmp andl in xchg inc ret (bad) mov add jo pushf inc adc cmp mov or xchg mov test cmpsb xor adc mov std in sub sbb mov fwait dec cmpsb mov (bad) cmp scas cmp in mov out aam jecxz lock outsb test icebp mov sub ss fist push out jge and push scas sub mov pushf mov mov out jnp ret lods scas sbb and sbb push insl cs lret mov test cltd dec pop mov repz push mov jmp in mov push mov insl mov sti stc push xor mov gs dec adcl xchg xchg rcrl xor fisttpl dec xchg and xor popa out xchg xor js push into in hlt dec leave push adc ret fistp repnz or in pop cld or es mov ja das addl shl nop mov inc mov (bad) nop cmp lods xchg cmp lods test lods pop in outsl xchg mov mov popf (bad) xor mov sub ljmp xlat sti repz xor push add int mov mov test iret sub (bad) mov push inc cltd cmp sar cmp sub mov mov mov dec es popf popa pop in cli dec outsb mov xor sub and push cmpsl sbb sahf sbb inc push mov fimull push mov bound cmp adc call (bad) pop push stos or test dec dec mov notl mov sarb lea jle cmpsl in inc mov jns and push out in mov call popf rol xchg dec cmp inc lods xchg jl pop add inc dec mov mul mul aad add dec cmp mov repnz xor sub mov hlt mov rorl je mov and mov in xor cltd xchg adcb push iret xchg mov ret js lea movsl mov mov add icebp jle sbb inc add jbe in xor loopne xchg mov cmpsb and ret push sbb mov movsb jns jo js xchg mov in jmp jmp push dec cmp push cmp jns and mov aad jb outsb scas jge jmp inc push addr16 clc xor adc lock inc add ss jb inc or lcall and inc pop add inc and cmp je xchg cmpsl cmp movsb lods gs cmp (bad) into pop pop rorl jmp (bad) jp dec jno mov mov int mull jecxz mov decb cmp lods (bad) jmp mov fs (bad) nopl pusha push dec mov cmp bound ja or bound hlt xchg das dec (bad) notl inc cmpsl fist xchg inc rcll les inc popf jl repz mov movsb or lret dec gs jmp lahf jae jle ror leave lds xor lods xchg fs cmc bound mov cmp lret stos xchg leave xorl repnz imul jmp pop adc (bad) jbe jecxz adcb cs xlat movsb test push (bad) mull mov cmp pusha sub mov fwait daa cmp scas aas or lret out ds mov sub jmp add lret xchg mov out popa cmpsl cli add push dec sbb jb pop add pop push adc cmpl adc out jns adc mov iret sub outsl mov add cmp sub mov xchg shrl rclb pusha fsubr lcall dec test jne adc faddp outsl adc jae jno dec or dec adc incl (bad) testl out xor mov jecxz nop bound cmp pusha mov sub je (bad) adc fcoms xor call push int3 push pop adc inc pop jp rcl jb data16 push and and out fisub jl push jmp adc dec popf mov jb jnp icebp jo xchg stos iret clc mov stc aas mov sbb ret sub push push push push imul sub imul jnp (bad) xor push lret rcrb mov and call push mov adc jg mov rcr mov mov sub xor push fsubl cmpsl or or and pop out lcall leave xor out pop pop or ds inc cmp call adc std dec leave pop scas push lahf mov mov movsb xchg or xchg pop or lret call jmp mov insl add sub xor mov xchg iretw mov subl lcall clc test mov fcomp call testl test xchg imul or imul cli xchg mov data16 mov (bad) sub push (bad) add nop test out mov in xchg xor jl push push or fcmovnbe mov dec dec pop mov xchg add or cli cmc cmc rcrb je xor loope js scas cwtl loopne add lods sub xor push pusha mov arpl jge cld mov mov mov sahf insl inc pop incb orl mov push ljmp jno ja sarb pop inc push jbe pop insl (bad) xor dec notb repz jp cmpsb (bad) inc mov jne mov lret push or mov add push (bad) jnp int3 arpl mov and push gs out (bad) hlt pop insl test push jbe jo adc xchg pop jle sbb insb cmp inc sbb cs cmpl scas int3 cmp sub shll (bad) call enter cmp lahf mov mov xchg daa push push inc dec inc (bad) sbb shlb jl outsl mov or aas or push xor jge jae outsb test mov ja push addr16 test notl xchg in adc gs loope cmp push xor int push mov sub sub inc cmc mov dec in pop mov xchg dec iret mov push inc shll xchg arpl loope jmp daa jmp dec in pop and push adc negb jmp push add std jecxz xor adc (bad) (bad) pop divl jecxz stos sub mov push xor std arpl mov outsb mov pop aaa adc inc cwtl jne mov mov js pop (bad) inc jle gs inc and (bad) test arpl sbbl adc sub outsb lock loop das addr16 or (bad) fwait pop cwtl fistp pop imul andb inc fwait cmpsl fucomi test mov xchg adc lret lret rcll add mov mov lret dec and inc dec out outsb lods or push inc push pop out xchg fistp dec push mov mov mov arpl xchg scas imulb and add gs sbb loopne xchg fsubs mov pop mov mov xchg xorl pop xor mov out ljmp mov bnd scas (bad) in stos js jno (bad) xlat (bad) in xor test out loop insb jl sbb aam jmp adc jl mov push xchg aam jnp inc push xchg cmpsb iret packssdw mov nop pop lahf jge in ja dec sub push loopne push xchg lea nop and into mov stc pop arpl lods in push pop mov stos adc adc pop clc xchg fidivl cmc in jbe cwtl js sbb xor pop je inc inc lock jge cmp jge mov push scas adc mov mov movsl jge mov scas cltd push mov adc push imul dec out jecxz push adc lahf xchg pop mov or xchg dec mov xchg push jp xor pop std (bad) notl mov jmp sub out icebp mov mov or outsb mov idivl test das jne das jle loope mov jne and sub je adc fiadd mov or mov xor outsl jmp adc push sbb add roll data16 add dec jnp inc cltd out fmulp push push pop mov (bad) int out js lahf out dec fs and cltd iret test stos jle (bad) cwtl xchg mov adc inc clc dec insl jge xor repz out hlt jl ja out punpckhwd mov test repnz (bad) aaa jg roll cmp inc add pop pop sbb pop dec sbb and jb pop mov (bad) (bad) mull mov and popf aam gs lcall insb mov lret pop or or cltd and dec adc outsl inc aas ljmp outsb pop and pop and mov test lods mov loop add mov fs insl and cmc outsb imul in shll aas das mov xchg popf xlat mov insb adcl or mov sbb dec lock sbb push adcl mov fnstsw add jmp mov andl mov mov mov lret lcall or das movsb mov mov mov and cli inc std hlt lds mov jne push (bad) push (bad) xchg mov jne push in push icebp push lea or scas incb cld mov add lds jno sbb push fcompl cmpsb bound adc arpl cltd xor mov addr16 sbb lcall sub repnz cmp lea add bound mov je in inc rcrb push adc daa mov and insb mov and add add js fs mov cmp pop jne push call stos call shll ss insb aad xlat mov into and or mov adc jg lods cmp dec pop jle mov lock add fsubs and mov pop dec pop add gs (bad) jnp lcall (bad) jmp cmp dec loopne cmp dec loopne cmp dec loopne cmp cld cvtdq2ps push add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push inc sbb xchg xchg insl jnp mov mov pop lret (bad) leave mov pushf jo mov imul (bad) out jecxz pop das loope call dec scas add sbbb subb lds xor mov rcl pop or (bad) mov stc xor mov ds je sahf dec cmp pop xchg lret xchg dec js,pn sbb (bad) repnz cli addr16 push xor ljmp jbe insl lea mov jl (bad) out adc and xlat sub adc and xor xchg mov mov cmp fsts imul cmp jle dec push fisub enter xor push adc cmp jmp push movsl cmp test cld in inc push jae fnstsw outsb sub out push nop aas add push icebp xlat cmp cltd pop mov test push mov insl aas mov std pusha (bad) mov push insl or push cwtl jae adc and fldt push jl dec mov aam xchg mov imul push or mov jge and mov outsl cltd xchg or xchg sub adc aas scas enter jbe mov xlat xlat ss dec (bad) data16 cmpsl gs push stos shll xchg or xchg sbb mov call pop cltd (bad) mov mov pop iret mov sbb adc (bad) push addr16 stc pushf fdivrl gs sarl mov imul out mov and xchg lock movb dec xlat sti add cwtl aad (bad) dec insb mov (bad) mov inc mov (bad) xor mov xchg xchg into mov (bad) mul loop mov mov and mov sbbl mov add inc mov lock in out pop mov adc aam stos adc out push adc (bad) loope jle jl or cmp cmc xchg sbb cmp and mov pop (bad) jbe (bad) aad pop ja jmp xor adc aad daa rolb push jmp lock push cwtl stc mov aam ljmp arpl enter push out ja mov add jbe and sbb cmp test xchg arpl popa adc lahf mov (bad) mov outsb nop cmpl sbb push ss jns xchg sub test bswap popa lds movsb fidiv sbb xor inc jge cmp ret shll xor and pusha repz inc fidivrl mov and je sub sbb mov push pushf sbb push mov add jbe add (bad) cli aad leave out test shrl jns in xor pop sub (bad) lret xor sbb and ret stc loope shrb push fstpl roll dec int3 dec adc lods and clc aam push imull mov sub xchg xchg xchg jg cmpsl push nop pop fisubl and or inc (bad) test in add rcr lea je jo adc sub cmp lret into (bad) mov pop add les sub nop pop pop mov les pop shrl pop fmull imul loop xchg repnz mov (bad) mov push ficom and cmp js out xor outsl mov bound mov js loope jmp cmpl jmp jl cmp in cmp add xlat pop cmp or push lods sbb adc xor enter mov mov sbb les push in mov and mov je jo loop int inc mov and popa and out mov adc jp inc mov leave mov dec fild mov cmp gs stos shrb jle enter icebp cmpsl in push inc call (bad) aad mov add or mov add mov add lods pop les scas int adc lret mov and mov sti (bad) hlt cmp iret pop xchg cltd popa push xorl xor in and cltd aam int test mov loop std jne ljmp outsl pop mov sub xchg push ss cmp decb test push (bad) xor add imul push fistl xor inc xor cmc mov hlt (bad) sbb push div ret cli shr mov in data16 ret out (bad) push jg test adc mov imul adc jno fnsave popf andl and lods cmp mov mov sbb xor jnp cmp repz aas mov repz sbb lods fisttp mov jb enter add jns in scas rcl scas jne js pop sub repz sarl cvtdq2ps repz xchg outsb xor ffreep inc xor pop jnp bnd hlt stos in pop mov sti fnstcw stos ds cmp or jl inc out je or icebp je sub out lret jmp insb adc minps jg lret push jp ror mov cld add and xchg aas repnz sub sub cmp popa jle add push clc nop rcll lret mov sbb add lret or jge push inc jmp xor fs (bad) push lahf fisubl push inc cmp aad ret pop adc iret adc js (bad) mov push inc cltd cmp and cmc mov imul sub or repnz lds movsl push xlat mov outsb mov add jbe loop (bad) mov pop insb inc test loope push adc ret jae xor xchg lcall add std in pop fiaddl aaa mov mov lods cs leave jne cmp leave xor movsl jno aad je loopne sbb test mov mov xor jle mov xchg lds mov es inc leave pop or out int adc mov js pop ljmp mov rolb iret xor sbb jmp bound into stos daa xor sub hlt mov sbb lods aad or or lret dec mov fs data16 jp fwait mov dec gs pop enter xchg pop fcoms xchg and cwtl dec adc sbb fs cs lret pushl rcr push cwtl gs les sbbl stos fistp dec sub xlat pop sbb inc ficom xor jge sbb pop (bad) clc xor sub jp lcall push jge je mov or jmp cmc imul stc (bad) hlt aam mov push mov mov lret cli lret stos push pushl sub and cmp in es (bad) dec mov (bad) mov incl push xchg ret add fs aaa mov mov cmc cmp mov mov in cmp ljmp dec ja scas daa cmc cmp dec out mov lods fsubp jb cltd and fnstcw lods scas dec js loope push inc std jecxz or arpl jge shll mov loope fs (bad) loope and xor mov imul push in mov mov dec dec ficoml ds jmp scas jae mov stos dec ja or repnz or out xchg test mov adc cmp movsl test out add sbb pop xor sub xchg push loopne lock aam adc cmpsl cmp outsb dec jle mov lods adc fldt enter add push out popf jecxz sbb insl das add das push outsl stc iret adc jmp jnp dec pop test js nop das cmc xchg sbb je inc dec adc jl push mov mov adc mov stos call xor add cmp cmp cmp (bad) cmp xor daa jo daa xchg movsl arpl mov inc push push in imul lret lea jno jae adc cmp xor in lcall mov lret bswap xor dec popf dec push icebp pop cmp mov mov rorb (bad) roll cmp test or sub and mov add pop scas repz js,pn stos and push ss push mov repnz mov std sub ret roll add into leave repnz dec addr16 lret stc jmp push or sub mov sbb mov loop orl into dec mov xor nop and out scas add add hlt repz xor inc out and push jle push inc arpl dec fs ss jae ss lahf dec rorl or jno push push sahf scas jns mov stos push (bad) fdivrl jmp push jae fs lret jecxz xchg fnstcw adc or sahf mov shlb fidiv push dec sub insl mov jmp xchg sbb sbb xchg ficom push js cmp icebp xor and ret inc sub pushl adc and mov add pop jno movsl popa das outsb lcall xchg cmp add push sub cli lds imul movsb pop movhlps sbb das pop outsl lahf xchg lret mov int3 push lret xor inc add ficom xor mov adc imul mov call mov jno (bad) push in mov lcall dec cli xor xchg movsl sbb pushf (bad) fwait mov cmp push push mov aas mov icebp jecxz sub inc rolb dec jge dec ret sahf rcll int xor jb or scas fldenv es sbb cmp jb movsl xor loopne push lcall lds hlt popf jecxz test cmpsb loopne repnz lock sbb test icebp lock lea push mov mov xchg int sbb loope pop (bad) push insb sub xchg lahf sbb jl mov icebp push cmp dec test testl xor scas rclb mov jne es rol scas ljmp out pop jno or mov inc loop pop push stos sub push in mov or jl mov pop das les icebp xor ss jge add and jnp mov xor adc mov jle faddp jp std fstpt inc xchg mov or mov mov xchg aad push scas test out lods pop xchg inc (bad) jo lods jmp and pop fdivp loop inc js sub sbb adc jnp mov ret add mov mov push out out fmul out dec outsl xor imul sbb arpl mov and test xchg mov cmp aas loop scas repnz fucomi sub fsubl fcoml cmc movsl pop orb call cltd popf sub mov mov lods popf cmp inc add dec dec (bad) xlat push ss push push stc pop mov jns aas into adc or ret sbb xchg out iret (bad) bound jnp sti stos sbb jae cli in movsl cld xor mov popf call adc dec mov jnp movsb mov iret pop (bad) pushf mov cmp popf sub pop orl cmpsl jp jo cmp dec std lcall dec mov pop dec jb mov imul inc jb add sbb inc outsl (bad) cld xor mov sbb out jge lds cmc or addr16 inc sub sahf jne lock mov cmp xchg orl scas mov sub sub mov ljmp rorl mov out jecxz push xchg xchg test mov pop cmpsb mov pop call repnz xchg (bad) mov cs clc xchg and clc dec repnz (bad) push lock aam call jmp or jmp xchg dec mov mov stos fs lods mov aad sbb and jne sub cmp lods fsub jo cmp stc mov inc add int enter cmpsl (bad) dec sub mov icebp mov jae add jmp mov add jae push mov pop adc inc push ret out aad fwait add icebp sub subl std dec inc pop mov mov lods popa jl nop popf push xchg mov push int3 xchg adc shlb sub mov jo movsl sub jmp lret pop iret repnz add jge out push add in fist movsl loop adc fcmovnbe test aaa inc sarl dec dec inc dec or and lahf lcall rcr dec or mov nop es out add mov xchg call cmp mov lock out dec outsb pusha ss xchg push cmpsb lret mov cmp mov icebp xchg shrl dec mov ret push imul mov xchg pushf and movsl lcall pop out test jb add stc sarl mov rclb or gs int3 mov mov adc cmpsb in (bad) dec xor pop pop sbb add out push (bad) loopne xchg fs cld mov cwtl inc mov adc repz dec add mov dec xlat mov push dec out or sub jne dec dec sbb sub es lock int3 loope sahf aaa imul fwait inc jmp xor push xchg (bad) mul jo stos outsb les xor push stos (bad) sti dec cmp add xchg xchg dec daa xor mov into jecxz fucomi sbb add add inc in dec sbb or mov adc test ja nop inc cwtl cmp popf lea fldl xchg xor test (bad) sarl fistpl (bad) hlt cmp jle adc sub adc mov sti cs je insb sub mov test sbb and sub int das adc out push bound adc ss push cmp push scas jge jnp dec mov or stos gs add out js mov cmc pop pop fs outsb and inc and les fsubl sbb daa or cvtps2pd insb ljmp mov and arpl mov lds lret xchg movsb test cmp (bad) movsb mov js sbb jne jecxz and adc pop cmpb add gs add hlt adc add pop sbb pop sbb arpl mov scas stos nop sbb or push adc fwait inc push sbb cmpsl xchg jp (bad) xchg and enter adc repz dec cs sub fsubl nop jbe dec mov mov mov aas fcomps les xor sub add pop or outsb push and mov fcmovnu pop mov inc leave gs lods mov ret icebp addr16 (bad) ss dec push into sbb cmp cmpsl das jno out cmp aas hlt fidivl add inc aaa inc push out jb mov jns xchg pop (bad) mov daa popa mov loopne cld cltd out lock jb lret xchg repnz cli mov jns scas cmp cwtl pop pop js push mov lock aas stos mov rolb adc cmp jmp shrl mov xchg xchg (bad) clc js jo test ljmp mov and add cwtl das cld sti lods lods inc out mov addr16 or in int3 fcomp cmpl add sbb fimul movsb sbb mov or int in lcall shlb push and sbbb int3 repnz and pop cmp xor js cmp inc sbb mulb push movsl cmp das and jns cmpsb mov dec pop cmp rorb cmp lahf mov cmp pop jl (bad) in xchg mov xor loope rolb sub push mov sbb inc inc jnp jecxz push in cltd sbb out xchg rorb adc sbb sar add cmpsb fistl adc aam nop (bad) mov std inc adc rorl mov adc add daa xor aad in mov ljmp cmpsb mov in js jno or push adc dec andl iret repz sub fyl2x pushf outsl mov cmc fcomps (bad) pop xor mov push (bad) lea xor repz cmp add hlt xchg pop (bad) pusha ds cmp lock std cmp in test jnp pop dec xchg enter (bad) pusha ss push xchg adc sub push ljmp sub scas pop xor repnz pop xorl mov xchg hlt xor call inc lcall ds inc subl pop pop cmp push and push add cmc loope dec mov sbb pop lea call cmpsb mov movsb test add dec xchg call imull pop cwtl jle mov out jp cmp stc sub mov cs incl jne lods or push mov jl jmp inc cmp ja pop clc jo icebp nop push mov out fiadd sub lods pop aam pop mov cmp ret xor mov ret (bad) jnp cli sti pop sub scas cmp imul jne mov out push mov sbb add insl fwait (bad) rorb pop xor aas int outsl mov and and sub subl jl dec inc mov fnstsw jecxz xchg sbb ljmp mov je sub dec adc pop jbe sbb sti mov loopne subl rcrb sbb pop jecxz stos in imul (bad) push inc loope dec mov shlb loop mov mov pop cmp test loope lcall pop dec lret push mov pushfw vmovdqu sub dec dec sub mov or mov inc add adc push sbb sub hlt cmc stos add xchg rorl mov ret cmp push mov dec jns shl add push gs and scas pop ds (bad) int3 cmp aaa push cmp repz rcl icebp cmc (bad) es stos xor adc (bad) loope pop dec stc mov add mov mov aam nop cwtl pop mov or add jo adc adc out lret pop ficom inc push inc rcrb mov cmp cmpsb cld xchg xlat xchg daa jge push fstl inc inc xchg test mov inc sbb in cmp cld push or lea xchg cmpsl inc pop cwtl push cld mov inc and push sbb movsl addr16 aam push push pusha outsl faddl jno enter cwtl jae sbb fs mov dec mov push (bad) pop fild mov test out loop pusha fucomip push jp cld inc add mov jmp add dec fdivrs es mov addr16 addr16 mov test outsl xchg movsl mov mov mov jns lea add dec sti sahf sbb adc push dec cmpsb mov mov imul ja xor nop mov out sub (bad) xchg daa into pop push mov pop repnz fcoml mov sbb cmp inc xor xlat cmpsb add cwtl or mov cmp dec lea and xor push lret inc arpl js jb inc inc jle ss mov outsb je pop mov adc adc fisttpll pop mov adc add push out jno add arpl mov mov xor jo push pop je inc jmp pop (bad) dec das shl push js sbb fdivrs pusha fs (bad) mov adc jo cmpsl sub mov add xchg dec xchg add cmp insl imul fwait mov adc add cmpsb or cmpl mov aad add cmc mov jg mov shll iret or pop cld ljmp lea lds xlat (bad) aas or lock cmp movsl xchg scas pop sbb pop mov xchg cld sub push ret jle ljmp add fidivrl gs mov test stos cwtl int test daa dec dec add push cmp test adc jecxz sub push cli jp fwait out jmp scas inc cltd push lret test inc jnp loopne cltd sub pop roll lcall std mov push scas add jg clc xchg dec mov ss xor shr jb adc imulb jbe lds popf pop movsb imul pop mov fs (bad) insl pushf frstor or mov movsb sbb and lds sarb in divl fstps ret add cmp (bad) inc imul mov xor jle dec out aam push cmp mov aaa sub dec xchg jo lock loop push mov xchg and push pop pop pop jno call outsb cmp xlat push aam test pop adc movsl hlt pop push xor jae inc jae imul and add addr16 inc popf or (bad) or push loop rorb xor xor sbb lods inc xlat in lcall sbb xchg mov popf dec cwtl test popf aad xor outsb scas les add pop and in jl popa or fistpll xchg sarl push adc adc add dec xor out addr16 loope dec es inc sar (bad) movsl jae sub fldt sahf pop shrb xchg sbb jne push pop pop and mov into lret inc lret imul loop testb push fbld stc das jnp test mov or call pushf (bad) adc jp push pop mov in lret movsl fs loop mov jl fld cmp in je xor or jmp fldcw andb mov (bad) outsl mov cmpsl aas aad push mov out pop flds xor cmp outsl or movsl mov mov divl aas xor lock adc lret sub out cmpsb pop cmc jg ret add sahf sbbb add sti negl inc negl sub pop cmp cltd push cmp and dec rcr add jne xchg cmp xor sub ss dec psrld xchg or sub cli mov jge popa pop test pop ds roll jg lahf mov inc movsb lock inc mov aaa fucomi xor cmc das mov cmp adc mov in (bad) jp push mov mov jge clc push mov pop ja sub xor fcmovnu dec or mov ss or add and add cli or jmp pop adc add lret jnp xchg sarl pop test xchg and jl flds (bad) mov imul mov sub gs je xchg push addr16 mov mov lock stos in mov lock js into mov mov movsb mov mov enter repz clc test test add daa mov imul fldenv add xchg pop mov imul int3 mov fmuls pop fsubrl rorl push push add mov or add es bound add push icebp push cmc xlat scas or pop sahf popf fisubl hlt lret sub or in jmp push dec int3 push add loop pop inc sbb fmull stos dec popf cmp je mov rcll xchg adc mov mov push or ret mov pop cmp mov in cmp movsb xlat mov insl in call enter sub dec movsl pop ja xchg mov outsl daa add int3 lock dec addr16 jecxz xchg fwait adc sbbb adc add (bad) mov adc fisttp xchg adc scas addr16 mov xchg insb leave shlb inc cmpsb (bad) jno imul pop dec jns cmp (bad) xchg in (bad) xchg shrl cwtl int mov mov jmp insb nop push jg shrl rcrb cmp sbb or inc aad arpl dec xlat push fisttp in jnp repnz jecxz pop movsl mov sbb xor mov repnz std cld jb out in mov fmull lock mov jg sahf pushf sbb std lock repnz ja and adc and or push mov aad sahf xor les mov clc stc int3 lods rclb popa stc jle stc sub and inc dec mov xchg scas pushf aam lret int3 into arpl es cs sub rorl sbb rorb dec mov mov inc adc dec push lds jne (bad) in pop inc aaa lret xchg push jg out rcr and lock arpl dec ret imul jecxz sti gs push pushf push xchg rcrl mov cmp pop mov daa sbb loop ret xor fs sbb adc jne (bad) pusha push xlat xor jno iret lods js aas xchg (bad) pop cld fidivrl push lahf daa fwait outsl cmove xchg lret scas in ja and mov icebp repz mov pop xchg (bad) sub push hlt andl inc ds scas mov stc ror xor into dec addl (bad) jb push icebp int3 mov fadds fild imul or mov add adc dec loopne cmp dec loopne cmp dec loopne cmp jmp lock addl std out inc add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add clc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov lea inc push push push adc push add out adc inc sbb add mov movsb mov aas scas out cmp jg imul add add jle inc lea pop test arpl stc cmp mov fidivrl arpl or aas scas cmp nop jmp les mov sbb add repnz (bad) fsubp clc jbe insl mov mov inc mov xchg dec adc stos sbb lcall repz add ret data16 sub cmp inc hlt dec mov out cs and std test aas mov inc cmp add mov jl cltd arpl out adc xchg dec xor aas jecxz jmp push adcl and es bound nop jp mov mov inc into (bad) es ret stos (bad) stos imul fwait mov or loopne fmul movsl or xchg fnstsw push (bad) lcall rcrl cltd out cmp je cmp stos (bad) mov sbb push (bad) pop iret scas jbe int3 dec pop or (bad) jae mov inc imul pop or push enter sti and adcb fsubrs push cli cmp xchg and mov imul mov out jle repz fisttpl lret add fyl2xp1 insl dec and inc inc push decl lea xchg sbb cli (bad) xor sub or jge cmc inc push mov and orb add iret lea fmull je fisttp adc adc rcr std jl aad mov test shr inc inc dec insl scas mov jmp add xor cmp iret lret pusha cmp add jmp leave lods mov mov add sub pop xchg les dec aaa outsl add cmp pop or adc in inc lcall lret xor fbld imul lds sbb cs push (bad) ss pop jg dec and mov lea cmp xor xlat lahf ss fldenv jmp ret pop out mov fwait subb ret ljmp stc iret mov adc fsts sbb and out mov jl repz mov mov xor sarl mov pop (bad) imulb scas out movsb int3 jno mov adc mov push loope repnz sbb mov (bad) mov fs mov arpl arpl es jnp in inc inc rcrl mov sub add mov in push sbb pop inc inc (bad) test out mov cmp shll push xchg and dec inc movsl rclb lret aaa loope inc in cs push push push insb mov fsubrl sub pop loopne mov les adc mov test mov out jg out (bad) (bad) insb mov sbb mov adc cs push pushf bound fldl pop in inc mov jg and or lcall ret dec jecxz int3 cwtl push clc std sub mov out push and xchg and (bad) (bad) cmp mov xor out jmp cmp sub inc and lret xorb sarb push xor movsb scas aad sahf push insb cmc cmp pop in mov add pop or jae pop xchg xor int loopne add pop sbb insb dec aad push lret (bad) mov das fs (bad) std sbb adc addb shrl mul ret inc add xchg (bad) mov adc daa mov and xchg mov (bad) xlat add shrl and push add or rcrb mov pop xor js ret push cmp enter xchg cs inc scas jle pusha xchg sbb pop dec fisttpll (bad) loope pop lods divb aam cmp dec mov add js lock sahf leave js or jnp push jg xor lcall in cld mov cmp aas mov jge (bad) push repnz jnp ss je sub outsb cmp sub pop movsl outsl cmp jmp push cmp adc cltd and rcr pop mov xchg add sub rcrb jg fcmovnu in mov jecxz mov clc or push (bad) (bad) cwtl aas cltd data16 cli mov frstor dec xchg inc jg sbb add int or in mov xchg clc push xor lods imul xchg jnp push push cmp sbbl add aas nop jb,pn fdecstp repnz icebp jo xchg repnz pop or xor sbb adc push aas fildll jb dec xchg sub loope and push and fwait and push jns iret es out push das loopne fcomps imul and pop imul (bad) (bad) mov (bad) xchg stos jge je adc test stos jno push and pop (bad) fsubrl cmp cli lret or (bad) call jle mov fs mov inc ret ja lcall pusha jbe mov lahf test push dec ljmp das cwtl sub sub shl je stos pop jb (bad) hlt out stc or shl pop clc je mov jbe addr16 dec outsl clc bnd push leave les xorl cmp repz (bad) hlt mov stos cmpb arpl sahf addr16 xor sbbb (bad) call shl stos stos lret dec stos es jmp repz insb shll push sahf xchg sti rorl mov (bad) push aad (bad) cmp andl mov xchg cli mov fldenv mov mov xor lods adc adc es (bad) sub hlt sbb addl ss test xor gs sbb ljmp xchg dec es xor movsl js mov mov pop inc pusha jg ret jne and or pop jmp or cmc aas cwtl leave in push nop fsubr movsl push add push adc jmp sub xchg push sarl insl mov xchg cmc pushf addr16 dec lods add test xchg faddp cmp aad mov inc cmp lret push pop and (bad) repnz ja sbb xor add imul pop fucomip (bad) icebp xlat dec and or test or stos repz (bad) mov das mov addl sti fwait mov js in loopne add push cmp inc mov mov sub mov loopne lds pop adc jle mov xchg inc or pushf hlt cmp push xor or cwtl lea repnz inc mov mov jge mov lret jmp mov push sbb lock add lds (bad) fisubrl jno mov es and stos jge push rorb mov push (bad) xor add xchg sub test xor mov aas push xchg sbb fbstp cltd int jae mov cmpl lea lds sub cmp iret and push ret das sbb xchg push sbb jecxz ljmp out sbb push sbb lcall jmp mov xor fild jg or push pop mov (bad) jle jg popa aam hlt out repz test xchg adcb mov or (bad) sub xchg dec and mov shr cld bound dec clc pusha mov cmp sbb sub scas xchg pop test dec dec aam xor sub (bad) lea in (bad) insb pop movsb add sti fldenv fsubrs mov push dec daa add cmp leave (bad) pushf (bad) cld int and in pop and (bad) sub dec sbb add imul mov jne fidiv test negb (bad) fcom je aaa sub stc mov xchg mov adc xor xor pop (bad) hlt inc jl in mov xchg xor lcall adc fidivr mov add inc adc (bad) pop ret cmp pop dec in int3 mov imul fs ja dec or pusha pop sub scas in push je iret shlb xchg rcl mov dec mov jmp and dec stc popa (bad) push fnstcw push cmc je popa push (bad) rclb jge add mov or mov and std mov decl (bad) clc add push sub push pop jb jecxz mov jno jns jne int3 adc dec shrl adc js cmpsb (bad) iret movsb (bad) stos mov loope or sbb cmp fild incb jns (bad) mov mov jnp (bad) cmc fs mov (bad) mov mov scas cltd inc pushf mov sbb imul stos jae xlat pop in adc add jne scas loope les lret xchg dec pop lds enter xor sub mov fidivr mov insl mov mov (bad) xor adc sub mov push adc arpl int3 (bad) repnz mov pop (bad) test xor (bad) xlat dec fwait mov jae mov jae outsl pusha movsb into sub push es add cwtl dec loop pop repnz mov sub outsb popl subl je outsb adc sub xor mov sub test out mulb in insl xchg sbb push lods mov jle xchg mov dec xchg lcall (bad) int3 popa cmpsb lret sahf cmp shrb sbb push xor in subb cmp push aas mov iret out mov test xchg ror js pushf lods add sub incb fnstsw (bad) mov fs mov ret mov daa mov icebp xlat cmp mov test pop pop lods sahf scas imul lcall aas ret push xchg push fildll xchg and push mov sti sbb loop aas repz xchg (bad) pop out mov out lea xchg hlt stc or xchg sub pop stos test fnstenv pcmpeqw into (bad) jae jmp test lret rcr in xchg xor in popa mov cld mov dec insb adc sbb incb jbe cmpsb dec jmp movsl add and jb fdivs sbb xor inc sbb fmul fcomip out push jg dec fwait pop push das sarb (bad) and sarb cmc sbb imul (bad) rep mov pop or sub jp jbe lods inc or mov mov mov mov rcl leave subl cmp pop (bad) sub loopne std dec add decb movsl test test jl repnz ljmp push push ja (bad) cmpsl jnp add adc out pop aad je sti pop into out (bad) addr16 icebp add and xor or jno dec in push mov and leave arpl xchg push add add xchg cmp jno push xchg fst cltd test stos subl sub mov and adc popa or push pop and dec aas sub (bad) mov xor mov int3 shrl sbb shll push mov xchg sub lcall push push iret sub lret sub popa add push ja dec push push lret lock xor dec push jb mov push mov mov or mov push cwtl in test push dec add jmp flds les add test xor std test shll dec jno dec mov or stos shlb cmpsl jmp stos cmpsl nop mov ljmp xor mov std sahf (bad) jb call inc cmpsl jecxz push push call rcll or push fwait sub andl je mov mov pushl push fs jns jp and push jg lods xchg out iret and mov (bad) sub rcrb cmp mov imul (bad) mov jmp sbb cmp sti data16 aad out test mov xor mov dec loope jnp (bad) jecxz dec popf pop xchg stc fistpll or and xchg sbb jecxz,pn repnz xchg or aam xorb iret into (bad) inc ret inc loop xchg jns jecxz add mov sub popa gs cmp jne xchg add int3 add push xchg jl aas dec inc test dec xorb daa addl xor push jae nop or jge stc cli outsb fisttp cltd add dec int add movsb out sti pop subl jne or std aaa mov or push jns cmpsb lcall add inc mov jecxz (bad) mov iret rcll xor fs or vmulss push and inc and das mov xorl jp mov push shl stos mov popa xchg daa mov push jae jmp push add sbb sbbl cltd aad xchg pushf jg add push sbb cmpxchg jo out lcall test jg inc jge jl xchg decl ror inc test shrb lds mov xchg cmp and leave andl scas cwtl (bad) lret in xchg adc sub ret cmc push daa daa mov bound mov arpl add addb adc pop hlt ret push dec jmp push lret and xchg aas dec cmovb movsl xor lods sbb adc or jp push xchg stos insl jnp ror lds in rol insb dec pop ljmp xchg xor sbb jns mov int3 xor lods add cmpsl inc test les rol (bad) repz hlt pop fwait call cs scas outsl repnz jmp (bad) and out dec xchg sarb jnp jo lea jnp std xor dec fist and mov test and imul fsubrl jb int rcrb movsl adc popa mov adc xor rcrl addl loop mov lea mov adc mov shrb jp or mov inc lods faddl push and jp (bad) mov mov adc mov cmp mov xor int3 adc pop lea daa mov dec lods and sti mov sub es js mov dec pop gs jns fimul in fmuls pop mov in not scas sub pusha pop cmpsl fisttpl scas jb out pop or into add sub test ficom (bad) dec fidivl sub mulb cwtl fisubrl mov sti data16 (bad) jno xor sub popa nop ja sbb cmp scas cmp jmp mov aam sub mov dec sbb mov data16 jmp or sub (bad) (bad) rorb sbb lds std add stc xorl cmp sarb decb xchg dec call or mov jns movsl fistp xbegin cmp xchg jmp lcall xchg or push mov fistp cmp xlat ret jle mov dec les or sbb fxch pop jae cmc iret xchg jmp add push or lahf fimull imulb in leave sbb push push pop out push test mov stc (bad) bound sti in add xchg jl inc dec inc jle jns in insb pushf and sahf jmp rcll add inc jp cvtdq2ps loope bswap stos aas lods js xchg mov push iret (bad) pop clc add ss imul dec cmp jno mov push mov inc jae orl shrl dec mov pop fisubr in (bad) (bad) xchg jne sub out inc jmp into test fwait and cmp mov (bad) sub cmp dec sub mov cs ret sahf push xchg sub (bad) out cli ss push or pop and int and push insb jnp sbb ret and addr16 sub sub (bad) fisubr sbb fcmovb outsl shlb and push lcall lea mov fildll pop (bad) stc jnp int dec adc and fisttpll fdivp lods inc push loopne xchg jae mov enter push repz popf xchg (bad) jmp loop push jbe jae xorl iret scas nop (bad) sub movzbl jns in and push (bad) repnz push scas pop jmp and pop into dec mov sbb je ds jmp pusha shlb mov push xchg fisub xor andb imul rcr xlat jns jl or or or or mov xorl dec xchg ds jle iret lods add adc (bad) mov lcall sub lods aaa add jg dec loopne sbb pop fdivrs movsl jmp sbb insb add xor in pushf mov cmp cmpsl cmc and inc push sti in cmpl dec sbb add pop push jg dec scas cs enter push and inc inc pop lret adc enter stc add ret ret mov outsl mov fildl lds mov sti push scas jb jg sub mov and mov icebp jp insl das mov push stos mov push jmp mov sahf (bad) aam bound add push cmc sub mov mov fdiv pushf bound pop shrb jnp dec mov out ss daa daa test or fist pop gs push pop mov scas in push pop in sub push test repnz frstpm(287 in test and xchg fnop sbb jbe imul imul push test mov (bad) bound in cmp test fmuls scas lods js aam (bad) gs jne pop xchg enter jmp mov xchg pop (bad) dec mov xchg cmpsb inc cld xchg enter aaa jo loope sub xchg fwait rorb popf sbb std inc add mov inc xor insb adc lock push fs inc cli mov mov pusha fisttpl sbb pop xlat inc (bad) test test sbb hlt xchg jg inc adc jae lcall (bad) js sbb fistpll lds sbb push pop mov inc ds out xor xchg shlb test decb xor inc mov mov movsl jp stos hlt xchg add inc in ret addr16 sub (bad) lods pop test push pop lret shr pop xchg push sbb adc les push sbb inc ror mov or or pop lds lods rep mov lcall lock stos jns into add std movsl dec fisub daa or nop mov dec xor sbb fsubrl sar ret or loopne es push movsl jnp fildll pop xchg dec or cmc add mov aaa jg daa mov inc loopne movsb imul mov call pop scas ror bound jecxz and lods daa in lret lock das aad push int3 xor scas add push jle mov mov sahf pop mov inc xchg push cltd pop xchg pop xchg in ljmp push jmp jmp adc inc adc out and inc mov dec xchg sti je mov loop out aaa or mov roll out mov (bad) mov xchg jmp push push ret icebp inc in mov sub sub jl ret mov add push cs and rorl jne push and pop cmp cli bound sbb daa mov inc insb inc in in dec scas pop sbb and pop sub enter cld lock cmc (bad) mov insl roll test lret int fcom jb add (bad) (bad) jnp jno xchg stos push fiadd out fsubl xchg cmp sbb mov adc int3 in and cmc js stc jge scas in cli dec pop fwait ss xchg xor call cwtl lret mov clc arpl mov mov mov or xchg data16 sahf daa cs cmp mov cld xor adc adc xchg mov push out rcrl cli jnp dec cmc fistpll out negl xorb in xchg fisub and pop pop xlat fnstsw fmulp dec sub adc sbb pusha and std pop xchg sub inc insl es jnp push imul mov mov outsb out das push dec cwtl fstps test mov data16 pusha push gs inc nop mov (bad) fdivr movsb add pop insb cmp popf stc xor mov mov mov jge cmpsl insb sub cmpsb push add xor inc fldt pop insl pop cld mov jl xchg adc sub stos cwtl je rolb xor call and sbbl push repnz mov push cmp call inc (bad) sub fsubrl outsl lock loop lret cmpxchg ret cld ss sub lea out sbb out addr16 rorl or push and dec inc out test sbb outsb push dec and add dec fdivrl mov dec jg repnz add stos out cmp (bad) xor cmpsb xchg test jno xchg sub push idiv popf xor adc xor aaa je,pn mov pusha ret xor lock and andl cmpb and mov or mov xchg xchg adc popa pop push in stc mov jmp addr16 push pop loop pop imul fldt rcrb fildll mov sub hlt xchg (bad) sub rorb stos stc ret fistp insl (bad) aaa outsb out xchg pop xchg dec adc popf out inc xchg mov inc lcall pop xor push lds mov mov mov fadds and lods mov lds fcoms lea push add mov inc mov push loopne test adc push mov ljmp adc jge std int3 add popa mov or and out adc dec (bad) test into in mov stc mov es inc and dec cwtl push xor and jge mov fstl add dec (bad) adc pusha test mov pushf fsubs notb (bad) push xchg xor dec jmp movsb adc iret mov jae scas aam loope jbe inc pop push lret mov divb in (bad) imul iret cmpsl add lods xchg lcall ja push sub fucomi (bad) rolb test mov mov fdivl (bad) outsl ja loopne je adc (bad) testb imul xor push insl imul push pop push fild sbbb test inc dec jecxz movsl aaa add push or mov int3 push insb xchg rcrb sub sbb outsl cmp stos xor lcall jnp adc mov add icebp add (bad) mov xchg xchg add sbb pop aad pop jno xchg ds addr16 int divl sbb divb mov jp and js cmp push dec lcall in push shlb mov dec test sub or cmp xor push or clc pop sub sub sub mov jne add cmp ss pop dec rcrl mov cmp movsl ds lock inc clc imul jo jl ljmp dec divb cli xor xor jbe imul insl sarl sbb es mov ljmp fcompl ret jne icebp jae stos repnz xor in stos sub sub pop adc lods call jb xor mov bnd push (bad) cmc fcoms jnp push and adc mov and icebp fistl in mov js push pop mov mov push jbe mov (bad) jl adc femms in xor call pop out stos mov out cmc push and mov sti and xor in cli stos cmp loopne and int (bad) call mov incb and adc and mov (bad) jp scas jl mov push push or push xlat ljmp inc jo inc jae or ljmp add inc mov add adc mov lock out js jo insl sub lahf out pop inc mov ljmp popa arpl icebp sbb inc cli insb cmpxchg ja cmpsl xor push mov int (bad) lea inc sub mov cmp hlt out nop dec pop test or lea cltd lcall int mov add shr cmpsb push out ja and mov and notl clc and push popf fidiv push pop xchg ret clc ret rcl cmp push dec in notb mov jae pop cld add jne mov lret push push mov sub sti movsl push xor aas (bad) je lret push push insb pop cwtl push stos pop push mov fwait push aam jg pushf pusha lds and mov aam cmpsl sub int lret adc mov aas popa adc popf inc je or scas popa jg xor enter stc (bad) ss sti xchg xchg fxch into hlt enter (bad) enter test insl pushl push mov mov fnstsw cmpl cld adc daa lock loopne sarb jg incl or adc daa lock lock and sub add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop sbb (bad) mov insb (bad) xchg lea push popf lds rcl jmp mov fistpl jmp mov test jge negl add or add sub xchg sub add in mov xor lods or ror loop and roll inc movsl dec cmp push jg in icebp jne sbb imul adc ret xor xor aad jbe orb test aaa pop mov jge adc daa sbbl test jmp dec lods and out in test add mov insl mov sbb xchg popa push push mov push ret mov or jg dec and in and or or dec (bad) mov or lcall ret cmpsb xchg scas lret xchg inc arpl mov inc mov and imul outsl mov sarl push popfw loop loope inc inc inc jecxz xor jo xchg fisub push arpl popl pushf arpl and inc xchg pop std loope lods mov mov xchg imul fadd insb dec inc rclb xchg cld xchg sub decb adc xchg inc sbb (bad) test xchg xchg enter fiaddl adc call sub pop jns bound mov loopne push aam add mov mov mov or pop fldln2 scas popf pusha xchg faddp je dec pushf repz xchg push adc test jmp xchg cs and xchg sub mov cwtl cwtl (bad) out js int3 fsubrl leave sahf jbe xchg out jge pop fcomps int dec call ret push xor and cmp js push push jmp jo loopne (bad) sar push decl addr16 cmp mov push cli lret es add loop sti stos inc (bad) icebp lds push adc es sub cmc fs mov add sbb insl push mov cs jae mov add jns inc fcomps xchg sub clc mov faddp mov cs popa dec pop cmp adc test cmp fldenv mov subb mov gs sbb movsl cmp push in out js or mov inc ror xchg mov out call sahf fisttpll pop jne push and sub shll out cmpsl inc jle dec push stos popf inc mov bnd div lahf inc push pusha xchg (bad) jmp dec xor pop pop mov test scas push mov aad lock mov sahf arpl pop sub ret jbe mov (bad) mov cli in ljmp sub outsb data16 outsl outsl pop ret jcxz mov cmpsb (bad) es xor sarb movsb jae mov adc jmp mov cmp mov xlat jle or mov out and cmp lcall adc sub outsl mov or (bad) in mov dec mov pop and pop (bad) jno rcr or rorl cmp fmul fidivl imul daa shrl push ljmp mov das xchg mov inc in outsl ss mov push (bad) mov clc out hlt lea inc jmp ret mov fwait icebp adc imul jno aaa sub fcmovne ljmp cli test repz xor jge leave scas xor cmpsl out fldl mov aam jb cmp das ds push fwait stos (bad) aas (bad) dec imul push arpl mov mov arpl movsl loope movsb sahf fisttp and inc daa push ss lret inc fucomi push mov lods idivl test cmp fdivrs loopne sbb xchg enter sarb mov iret data16 mov gs mov push mov movsl pop mov pop push jnp add dec jno sbbl in inc ljmp in mov lods mov clc fbld hlt or mov fstpt into lods into imul gs out adc fnstenv fwait mov push (bad) push sbb js xor fnsave jecxz pop mov xchg inc scas xchg vandpd xchg aaa or jbe jae cmp stc in notl lods cmc ljmp push sub mov pop add es and cmpl mov mov pop xchg adc inc pop imul cmc xor push pop ficompl scas loope push lahf out jp fwait xor int3 lret sub js jne pop pop xor or xor std jo lea cmc hlt negl (bad) jne inc test push outsb jb jle int3 repz pop movsb dec cwtl movsl scas (bad) jecxz push jae cwtl gs or imul jo insl std mov xchg adc and pop jmp adc daa ljmp sub add or mov subb fwait mov mov adc repnz hlt pop mov cmp dec repnz sbb pop leave rclb pop ret inc ficomp add fcomi inc cmpsl mov sbb sti inc ja testl pop adc outsb mov jne pop adc jmp push lret cli sub aam cmpsb addr16 mov js (bad) xor mov sub lea jp (bad) jno jmp (bad) std mov push mov stc cmpsl pop fmuls movb jg fldln2 pop mov fcmovnb fdivl jg or loope or cld pop pop add jns insl std sbb orb mov xchg jl pop mov mov arpl xchg dec aaa cmp push adc in push int3 nop push adc sbb out dec aad pop or idivb sbb iret mov mov jnp popf stos pop pop xlat daa cmp ljmp jo lea (bad) fdivl sub lods cs aaa ljmp push xor shll mov leave loopne pusha jl test test dec sahf mov xchg insl lods push inc mov test mov in insl call xlat xchg jo,pt hlt jge aas mov (bad) cltd or xchg gs cmc ja cltd movnti xchg (bad) enter imul insl push xor lea ljmp test mov out dec jbe mov iret outsl rolb (bad) and or enter pusha fimul and (bad) loop loope sarb cmc icebp mov push sub jns lahf xchg lret xor out pop ja lods push jecxz mov sbb sarb mov lods aad outsl nopl dec movsb pop es (bad) jg mov (bad) cmp repnz (bad) out xor inc out enter cmpsl rcrb add outsl lahf jo pop jmp and inc arpl sub jae cmpsb cmpsl pop mov jo std loope aad es cs sub pushf mov lock push pop mov push out sub mov (bad) xor daa int pop aam outsl jmp in pop rcr pop lret pop ja mov lahf aad rol movsl idivb and and cs ret fbstp adc movsb add push cmp mov adc addr16 fidiv pop mov movsb sub cwtl jbe lock movsl aam lds cmp movsl xchg xlat jle pop mov (bad) loopne xchg out mov sbb mov (bad) cmp in pop es pop adc adc out cmp mov out inc xor sahf mov adc jmp inc mov aad aaa push dec pop cmpb in xchg das mov push (bad) dec out insb shll sarl push or int inc xchg mov dec or fidiv mov aas addl popa and push xchg adc push test sbb cli lahf mov mov fwait cmp out xchg push xor fsubrp push and or in je or jg lods pop sub dec pop mov std imul mov pop jge stos lock pusha cmpsb pop fbstp test pop into inc push mov ret adc lret dec push dec dec iretw sbb xchg movsb das jmp mov mov scas dec xor shlb movsb (bad) mov inc mov js hlt in pop mov icebp fmull mov lahf shll sub push jmp into popa or aaa inc adc lahf xchg push and fcompl testl fs cmp mov dec in sub pop xchg mov aam loop and out sub xchg or or pushf pop arpl mov ret xchg add roll pop cltd xchg (bad) xchg or jl decb bnd (bad) push nop ljmp lock or into daa xchg push es jno out outsl and pop cmpsb in xchg mov (bad) jae add adc sbb (bad) vmulss push pushf gs and sub sbb aas and xor ljmp mov add or out out repnz inc (bad) cmp xor imul fmull adc mov lods push jno push push lds xor loope mov pop in push mov adc add inc adc (bad) dec pop pushf mov enter xor sahf loope mov inc fstps imul sub push shrl push cmp movsb arpl sti aaa sti cwtl test loope push js push les (bad) pop pop dec dec sbb je ficom inc xchg and repz adc les jno fistp sub lock inc insb test mov fadd mov mov ds cmp movsb int3 loope mov iret dec sub mov shrl jle inc sub xchg jge push (bad) push shlb stos inc leave or jne push bound je imull pop outsl mov dec scas dec xor into imul cwtl inc and loope xchg add and ss lahf mov jecxz lods rcr mov and or (bad) mov xor cmp xchg push lods xlat fwait enter (bad) push cmp sbb cmc inc rolb dec fadds pop add fcoml or fsubrl xchg mov push push pop movsl lret sahf fadds lds test mov out pushw test dec push fwait push and test (bad) dec test pop clc (bad) ja mov push lcall jae adc mov cmp mov or push mov dec dec movsb ret mov jns mov xchg addr16 pop jb dec stos cmp insb lea xorl push or or mov movsb bound pop or sbb pop (bad) nop fmull sarl or push and push (bad) lcall adc add dec addr16 mov das jge sub scas hlt jnp ret cmp testb clc or xchg xchg pop adc or pop mov adc cmpsl mov (bad) das popf ljmpw and jne dec imul sti mov inc cmp rcll or iret je adc arpl popa fwait xchg out (bad) jmp lods movsl inc into mov dec adc cmp xor je fwait enter pop dec add int3 mov pop inc sub jmp incb cmp xlat fwait inc mov insb sbb int mov inc jge inc mov mov popa (bad) push sub popa pop je mov mov sub mov (bad) outsl out leave popf pop dec roll or or sbb iret nop pop clc lret sub mov xchg xor and repnz lret and ss inc adc idivb stc sti dec out jno mov mov adc mov lds pop fstpt add lretw (bad) cmpsl mov data16 nop xchg xor xor push inc pop xchg out popf aas ret insl xchg sub aaa pusha sub inc stos jns cmp sbb push lods lock outsb adc dec pop test mov mov fdiv dec cmp jnp fisubrl data16 jle mov (bad) mov ss out mov mov imul jge outsb movsb cli inc mov pop adc out pop (bad) jl or outsl inc jno push sbb rorb push pop add jo jae jp aam aad int3 push xchg push add shrl mov out mov jae insl dec jl mov mov rolb add pop lods mov (bad) jmp (bad) fisubr outsl cmpb std push cmpl sbb or test (bad) lret pop dec cwtl fwait jge in pusha adc pop lcall or das pop xor push loop enter cmpsl add mov shlb xor in xchg jne repz push ret sbb notb or out xchg cltd and mov lods clc sub lcall aaa mov and out push dec adc pop sbb inc sub imul ror inc (bad) or xchg cmp mov fsubrs lcall push pop push cmp sub mov dec and or rep sbb push sub iret pop inc cmp repnz dec xchg movsb inc mov addr16 pop test test xchg sbb push scas cmpsl sub xor aaa adc cmp pop jnp pop xor into sub daa pushf fwait xor test push mov add or cmp pushf lret notl jmp jb sub sub add loop sbb into dec jnp push out outsb pop fcoms adc out mov and cld (bad) ss xchg sbb jg mov in ljmp dec or lds fimull jae sbb mov mov xor mov jns push push and out push mov xor xlat test cmc xchg rcrl loope enter sbb mov xchg stos jge cmp loopne dec sti xchg mov jne or xor popa sbb es xchg hlt call cli push out loop iret jp dec sbb adc jnp imul mov addr16 cmp outsl fs add inc jae ret jmp (bad) add dec and aas xor int (bad) dec shr int mov and test xor dec ret inc xchg cmpsl int aas leave cmp jecxz jns pop imul inc xchg sahf push mov lret or add gs dec iret ljmp dec mov push pop sar rolb out inc and add pop repnz jp adc test in pop xor sbb outsl jmp ds push scas pop sbbb test mov mov push ja popf inc mov push adc pop outsl sti jle push inc push sti fcmove ja fs flds pop (bad) (bad) aas sub xchg inc or loop loop lret cli inc loope jecxz enter mov jg scas lahf cwtl pusha jb fcoms adc test mov dec sbb lcall sub (bad) repnz mov xchg movsw gs jecxz cld xchg leave dec lahf push inc inc lods mov xor aad arpl out lret nop jge ficompl adc and lcall movsl addl sub cmpsl in dec pop daa dec jmp pop in popa inc cli adc mov mov or out repz cwtl inc jmp in mov mov sub xchg ja dec test mov sbb fwait and aam jb mov vhaddps xor add bound jns or js icebp sub push add pop pop pop pop popa leave rcl xchg push test sub fs jns mov hlt xlat mov test into fimull sub iret xchg je in subl or mov addb mov pop fndisi(8087 xchg jg inc and dec int3 in aam mov sbb int cmp rcl je fistp sub mov test pushf xchg mov pop xchg add cmp out mov xor das aas idiv flds mov rorl sub ror pop test mov jae (bad) mov or adc ljmp jne out sub aas or xchg mov add std push movsl sbb in cmp mov jbe adc adc cmp mov mov jbe xchg mul out std adc fisubl int xchg inc adc add dec popf sub pop mov add ret sbb or sti mov mov xchg pop test or mov pop fcomp test mov jne jecxz dec arpl push add lods mov bound ljmp jnp test adc call lock clc inc clc mov pop insb or enter inc push sbb in js fwait xchg cltd fnsave ja fisttpl pop test clc (bad) nopl adc mov test mov pop loop sub mov mov sarl xchg jne xchg jbe adc (bad) test call outsl jg mov mov and subl fdivrs adc inc pop jl xchg fimull fwait cld bound out hlt mov (bad) cmp inc inc (bad) push das mov xchg dec pusha jge add push ret dec jmp cmc xchg pop clc stos (bad) (bad) jg mov xchg sub cmp addb test mov and xchg pop dec fwait fwait mov repnz push jge stc add fisub mov imul sti jbe imul fs cmp dec ljmp pop add dec sub xchg cmp jns cmc inc (bad) je mov test pop xor push imul dec scas test sbb jp mov stc jns inc lret add cs sarb or xlat sti stos insl mov add repnz sbb rorl sarl shl addl pop jns cmp pop arpl in cmp cmpsb dec (bad) push mov sub rorl movsl test and inc xchg mov lret imulb popa xlat inc add jle imulb mov xchg stos cltd push adc mov mov push fwait cwtl stos insb sub push es stc imul xor test lea loopne cmp mov inc arpl cs sbb and stc hlt jbe xchg in cltd xor xor ss movsb xchg jmp lret xor xor xchg aad jnp push enter fs dec mov (bad) sahf (bad) mov and jbe add add push mov cmp fiaddl push pop lock cmc push inc fwait push out or js xchg ficomp jl,pn cli mov imul loope enter lret mov sbb mov (bad) fdivr cmp out xchg in pop inc cmp jle (bad) stc jmp mov roll sahf lds and push inc or lahf pushf mov push addr16 lods lcall adc mov jbe xchg cwtl inc jg sub movsl in mov ret les sbb (bad) mov jge loopne movsb xor aas in xlat jns (bad) add inc aam sar (bad) aas mov push ret test aas addr16 xchg sbb add sbb stos jge fdivl pop mov mov jg mov and negl inc dec les push sub jge stos xchg gs cmc ret sbb repz add fsts inc je,pn fdivrp push cli ret xor sbb jno outsl add lock push stc aad cmp add ret mov movsb mov add (bad) cli lret data16 mov js out lret decb mov adc sub shrl cmp (bad) in ds jle lea icebp xor mov add dec sbb or inc push cmpb sub mov or jg outsl ret sbb sub in out sbb ret mov mov test cmpsb push push iret jb pop add mov sti hlt mov push out ds mov ret mov xorl xor fucomp jmp jbe pop out adc icebp xchg xchg int3 rol shufps lods or je addl add in pop loope ja ret (bad) mov xchg inc gs mov out scas xchg gs sahf adc inc outsl pop es dec xor push xor sub add jae das xlat and stc pop jns rcrl jae shl inc sbb jb loopne repz jae sti loopne mov pop leave xor stos cld test ja xor mov adc rolb sub (bad) mov data16 out out ret fildl loope aas mov xor mov push xor movsb ret cwtl bound aaa imul jne ljmp xchg or or sbb shr dec rorl cs hlt movsb negb ljmp arpl pusha sbb dec xor dec out cmp cmp stc test cs sarl sub das pop mov cmpsb pop jmp pop mov test cmp je xor sub into sbb and (bad) ds sbb lods cmp iret pop and sbb jge inc stos stc jno mov mull mov stos push sti and lock outsb lret icebp add push sbb mov mov pop aad jg scas pop pop inc jbe cmp std cld dec loope mov cli mov cli repnz jbe jmp mov test (bad) aad gs jnp cmp dec flds stc push push out jp add imul fistpll enter test mov fs pushf mov shll inc push fsin jp and (bad) cmp xor jge mov inc fisttpll cld imul mov push insl dec imul outsb cmp js mov sub mov push mov bound popf sbbl adc mov or mov (bad) scas ret das mov aaa push sbb jmp mov ja scas aad push dec arpl jno idiv shrl out inc and aaa repnz push adc cmp mov repnz lds push inc push fstpl mov xchg je fwait mov mov mov inc pop gs das xor (bad) xor pop (bad) pushl jbe xlat mov aas or mov pop in xchg faddp xchg rcr bound sub mov pop sti push push (bad) lock mov mov mov xchg mov fucomi icebp mov add insl out mov pop outsl lock xchg mov mov shrb cmc and cmpsb ds pushf pop test aam (bad) add scas inc popa icebp lds pop inc xchg add inc cmpsb sarb daa xor daa inc pop xor aaa xor stc sbb mov jecxz mov push xchg or orl push (bad) dec mov xor sub popa and out mov adc (bad) cmpsl jo fnstenv jns fisubrl enter mov ljmp ret es pusha sub sbb out cmp jecxz shrd mov push je repnz dec lods test mov jno sub adc pop clc dec ja cmpsb cmp cmp rcrl clc scas fldz lahf in in test into aas or cli pop dec mov cmp lahf out cmp push xchg xchg inc mov sub (bad) aaa pusha push ret add in mov sub mov mov insb inc in les sbb inc sbb push aaa dec mov mov cmc sub and sarl pop cli imul xlat mov test mov in mov pop dec sub add icebp fsincos lahf jp into loopne fldcw test fxch sub pop mov add out xchg pop jbe jne and adc mov arpl shll pop jae or mov icebp cld in push adcl pop pop dec addl popa mov push xor inc or loop je dec lret hlt stos sbb jnp loopne mov mov pop bound mov pop sub addr16 pop popf loop daa xchg mov push mov adc in xor inc imulb out repnz or rcr xorb and inc sub xchg and imul jecxz sbb outsb jg rorb mov xchg jne dec pushl mov sbb (bad) sub dec sbb jb pop mov cmpb ja xor fdivl (bad) cmp mov imul xlat mov int3 popa sbb (bad) fstpl push xlat icebp cmp mov sub ljmp and xchg inc pop adc fstpl mov sbb out jne addl mov cld xchg incl adc dec loopne cmp dec loopne cmp dec loopne cmp jmp lock mov js mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add hlt and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push inc sbb fwait insl sub outsb jbe lret out out xchg mov mov jl push lret mov pop mov jecxz std pop iret into lahf lock pop pushf add nop pop add add jle aad pop lea push mov jnp std sbb cmp jns jo push xor mov pop adc ret (bad) stc cmp mov sahf sub cld add sbb cmpsl repnz cmp inc cltd sub and popa push cmpb jno adc push pop inc xchg stos jg adc addr16 shrl pop xchg dec pop push inc enter cmpsl repnz sbb jge insb push fsubl jmp daa mov decl aam inc test pushf xchg mov sbb adc imul add push subl nop (bad) shrb fstps and test xchg fistpl shll out jmp mov mov push popf movsb ret inc cmp sbbb sbb imul mov sbb xchg out push ds push sbb inc sub insb stc dec mov xor push or addr16 cmp or push mov cli test xor insl clc jge push inc ds xchg mov jne mov xchg xor dec out mov scas pop push iret mov or and xchg inc adc lods cli pop test or jge ret cmc push and pop ret fs ja in stc scas test loope clc pop lods mov iret xchg mov push push cltd imul push mov or fistp xlat xor mov pop test cltd aas mov push xchg pop mulb cmpl or pop out addr16 inc in xor sub add enter cwtl divl xchg out orl cmp inc adc adc (bad) cmp sbb repz mov leave aad fcompl jno icebp xor pop mov xor pop dec fistpl mov (bad) xor add jp ret andb (bad) jecxz sti test loop inc or push lret ficomp or jl in push mov xor mov shrb push cmp pusha xor xor (bad) shrl lock or jp jl sbb out cmc jb cmc xchg mov mov dec pop gs jg mov cltd jnp lahf add popf mov clc mov mov sub imul rcl jo cld mov or mov es mov negl lds shll repz mov cmpsl fdivrs pop test mov mov inc xor mov mov inc into sbb and ljmp mov movsl push hlt in dec xchg ret es scas sti dec gs lcall jae pop sti cmpsl fldl2t push dec stc cld repz sbb inc inc inc xchg inc and jmp add movsl (bad) fisubrl mov cmc push push stos stos shlb fs lock mov adc daa sbb mov movl cltd lods sbb jle mov pop outsb bts or aaa or push negl (bad) mov push mov mov test xor jae les mov rcr imul dec add les in dec test jle pop cmp dec aas xchg popf (bad) test pop pop sarb addr16 inc inc lock push cmpb mov jmp fs scas dec cwtl loop inc mov mov inc mov (bad) cmp and adc jmp int dec nop jg movb insb xor push rcl es push or imul adcl mov pop hlt test cmc sub push push test xor mov loope jns mov ljmp fwait push jl adc scas dec xchg cmp insl xchg mov in ret call inc jmp ds dec leave pop jle pop and pop mov jl int lock loopne bound test mov mov push sbb push cmc rolb fcomps hlt imul in xchg pusha adcl (bad) lcall xchg shll or cmp mov int3 xor bound into es dec adc out gs adc mov and (bad) push inc ja jns mov in cwtl mov jg scas sub movsl aaa pushf jmp clc pop arpl xor stos ss in insb pusha cwtl cmpsb push pop incb pop incb inc loopne test mov push rorb (bad) bnd mul scas pop inc xorb push cs incb jle mov cmc icebp sub jg lea sbb and jns out fisttpll inc imul daa aaa gs rcrb mov adc stc cltd insl insb clc pusha or xchg leave pusha clc push xor gs fstpt or insl jns inc int adc in test jb (bad) (bad) xchg shrl stc ljmp sub mov aad stos dec mov pop jbe (bad) pop in repnz jmp lock jp push lods lea inc scas adc int3 repz iret ja push mov aam sub adc sbb (bad) pop xchg cmpsl push push xchg das dec mov adc inc imul movsl cs iret mov adc in (bad) movsb in push lret add xor and push imul pushf mov ror sub xor mov and jecxz dec lcall adc addr16 dec stos int3 sti mov je adc cli jbe mov out (bad) cmc jo xchg mov pop jmp lret mov cld push mov add popf lcall jns movsb or mov dec rolb lods imul cmp out in fstpt dec ljmp in test sbb pop ret popa jno loopne add ja cmp out inc jle xor xchg out insl push js sbbl cli addb out icebp cld gs pop (bad) mov adc cmp lahf mov adc mov and (bad) sti jne gs cli outsb add dec jmp and aas adc popf pop mov lret dec push jns dec cmp jo dec sbb mov mov lcall divb or cmp push pop sahf add lahf movl sbb cmp sub cs ss out dec jo jle and lea lret idiv test cmp clc orb jno fdivs sub xor add push pop leave cmp scas push inc pop sbb movsb mov insl fsubl xchg es leave inc push ds ret jmp (bad) xor push pusha pushf fdivl (bad) lret lods jo je (bad) insl pop cmp nop jae icebp cli jmp inc cli jl cs jmp loop pushf sub inc push movsb mov lea pop mov ret mov jle push sti fdivrp test xchg adc mov and lea out (bad) (bad) pusha fisubr sub cmp xor mov sbb add into gs les loopne imul sub gs and sub dec aam pop sbb mov fimul adc fisubr roll addr16 cmp insl mov or cli fcomps lea dec ficomp add adc leave mov mov aaa cwtl cmp test or popa xchg cli dec jae pop jno cmp inc cmp push mov pop ljmp jg aam jle inc nop outsl cmpsb dec ljmp lds or repnz iret mov sbb stos sub popf dec add ljmp (bad) xor imul iret das repz jge aaa stos mov lcall xor scas mov jmp push sbb pop in and sbbl les sub pop in cli mov stos and dec sub into inc fwait clc mov out jbe push in pop setb mov (bad) mov jae mov sbb mov adc jae cmp test cmp mov xchg jl in cmp push sbb sarb or insb cmp aas mov mov fwait lods add (bad) outsb mov cmp js (bad) cmc cmp mov add mov and cmovo cwtl inc jmp (bad) adc insl sub push call pusha addl pop test dec mov add add fdivrl add ss mov orl push iret add sub xchg repnz cmp sub outsl pop sbb push aam data16 gs into das jb adc aaa add inc cmp xchg inc adc loopne adc push inc cmp add ret mov out jle test sarl outsl das cmpsb mov stc ror xor leave rcrl testb lods inc sub icebp insb fadds (bad) mov std (bad) xchg mov popf movsb lods idivb pop push mov jle les icebp sbb shll cs test incb (bad) xchg mov fnstenv push stc nop aaa push mov (bad) ds inc jmp dec es dec test jno sbb jmp sub push sbb int3 cs hlt ret popf pop icebp jmp and in fwait push inc in and pop cmp push cltd jge mov jecxz clc jo add xorb push xor jno sbb mov divb lea xor adcb xlat clc xchg fnsave jg and cwtl xor inc fisub xchg mov sub push ja xchg sub or mov pop pop enter js and xor push mov xor xor sub js insb inc jb ret (bad) mov add mov adc fs jnp daa nop fmulp mov dec mov sbb push adc sti lret (bad) lret push pop cld mov std fcmovne adc cmp ss add lds cltd sub inc into das and xlat jg xchg mov dec or mov mov sbb and mov push call inc cmp enter xor loop sub jge push dec cmp addr16 or sbb adcl faddl idiv or pop stos pop jbe fldl push and inc jg push mov insl add pushf out cli cs mov sub mov mov in das ljmp bound in test lret push mov dec jle pop jmp pop out jmp cmp jnp mov mov jns pop mov push bound (bad) jl cmp out pop sbb mov sub dec test cs (bad) sarl add xchg stc arpl mov xchg fldenv out nop xor cltd (bad) int3 push jle inc xor push lret (bad) (bad) mov jno xor xchg adc xor lock add jne jae xorb xchg mov sbb push dec je cmp inc aad fsubrl pop aad pop xlat push and xor xor loope out enter test das popa xchg addr16 xor (bad) add rorl mov jae sub into ljmp leave fs nop sbb mov add xchg jb movsl test dec dec clc in xchg adcl je and icebp loop dec jmp xchg fsts mov mov cmp or mov in sub inc jg cld jb mov lods mov (bad) icebp mov xchg fcoml fdivr mov ret xorps cmp sti data16 fst jge call add or mov lahf fcmovnu sub call push jo dec or xlat lods test dec sub push sahf nop scas in shll and clc je stos insl push repnz jbe push mov fwait aaa jo bswap das and mov jl pop dec mov (bad) or sbb dec push cmp fist imul in cld mov pop pusha xchg add push stos lods mov inc add add ret cmp popf dec jecxz inc cmpsb push dec adc pop test mov fbstp fidiv dec movsb pop mov and or cmpsl out jno adc in cmp and rorl push push fcoml push sbb dec add xor xchg shlb fisttp pop push jae mov lahf rol outsl mov push xor push cmp ret push sbb popa mov xchg jae push notl sub add mov jbe adc push rcrl cld in out cld outsb mov cwtl pop add pop mov pop out ljmp pusha or mov clc dec push shrl and mov jl push jg out push and cmpsl fiadd mov mov push xchg lret dec or push lods icebp pop cmpsb inc add push inc xor mov jae subb pop or das sub jge xor lahf fsubl sahf cmp mov dec data16 ja daa das sar xlat bound test dec mov (bad) cmp or jnp (bad) mov push cmc daa dec sbb mov testl shr dec call lea inc mov sbb inc (bad) outsb bound sarl addr16 cmp xor rcrb sahf shrb scas loop sub cmp in (bad) pop ret pop das jno jb mov ds cwtl pop mov cmp dec negb mov jb inc cmp push xor shll mov push sbb pusha push mov mov dec sbb mov call dec xchg or outsb call fnsave in stos and dec add frstor mov (bad) push out cltd pushf sub out pop shl hlt jne lret mov jno or dec mov test adc push rolb add xchg ficoml and out cltd push adc daa xchg lret sub push jle rolb xor and xchg mov stos cmpsb call mov mov jne and cwtl clc loopne mov mov jo dec es jbe dec popf mov sbb dec add scas ror add xor push repnz jecxz ss push pop dec mov pop fs mov dec lret (bad) clc inc dec push fwait daa outsb int mov xlat pop mov rorl insl arpl adc rolb mov adc (bad) incb test fmuls add sahf lock xchg fdivp mov addb imul test inc cmp push imul sub and inc xchg lea stos lds jo rcrl (bad) xor adc imul push arpl mov mov jmp pop mov push mov xchg lods int adc jo jo (bad) or fucom push inc jmp imulb setno xchg out mov cmpsb into daa pop and js rcll aaa xchg jne mov addl data16 jl jmp add add mov int imul (bad) jmp sub pop xchg repz dec pop jo mov sub dec insb cmp xchg mov into sbb or ljmp sahf ret (bad) lock mov aad cltd pop sbb das ljmp into pushf mov mov outsl data16 jnp jo ret daa pop in pop lahf cmp pop adc sahf cmp cmp xchg inc sub and jbe dec mov test dec (bad) xor call mov ja or out dec imul push mov jg repnz jmp fildl push jno xor (bad) addb xor or sti leave jp mov lahf (bad) cmpl clc adc or lret jae in xor xor ljmp sub cwtl fisttp jb pop sti and xor leave shrb loopne sub mov xchg fcmovnb xchg rolb pushf das lock mov pop jns gs pop loopne inc rcr hlt adc and push cmp push idivw xchg sub leave cmp mov cmp pop xchg lods or xchg out stc jmp imul sbb loope push nop (bad) leave add push mov add rcrb pop ds pop lret out cs repz adc test jmp int3 rolb aad add add std mov mov icebp mov das or cli add data16 pop cmc testb lods pop jle mov lods push cmc cmpsb xchg (bad) push inc mov aam cmp sbb (bad) xor adc leave mov mov lret add jmp sub cli fsubs sub data16 cmp push ss stos movsl xor push shrd test pop mov fild icebp mov sbb popf xchg xor mov mov (bad) loopne in lret jecxz pop sub dec and jmp xor icebp out stos pushf lods in jbe mov (bad) gs sub xor lods xchg or rcrb mov pop movsl sti sahf add fyl2xp1 pushl (bad) sti ret mov fsubrs sbb out mov stc loop rcr jo adc cli cmp insb outsl push cwtl jns jbe outsb cmc add sub xor or or into xchg (bad) call xchg xchg and jbe punpckhbw cmp jg pop push gs movsb out insl test jmp xor pop dec xor xor add bsr (bad) jnp outsl mov sahf mov jecxz,pn ret xlat dec mov movsb mov push add arpl lret sbb sti repnz enter sahf lahf aas out iret sbb popa mov lods daa ds sbb shrl cmpsl lea dec sbb dec cmpsb mov jmp mov ja jle outsl or hlt mov fadds inc xchg out into pop in enter stos fs jbe repz rorb push lea dec and test hlt cmp jp fwait (bad) cltd push mov xchg xchg out shrl inc mov jns mov sarl popa pop pop fnstsw pushf sub lods in int faddp push cmp pop je xor call ja sub dec loopne xor (bad) pop out dec jb stos and adc xor add and inc inc stc lret test xor or xchg pop aad mov in jno loop int fwait jp lods dec mov pop or push cmp sub in notl stc sub bnd mov into cli enter lods out cmovl mov pop fisubl aaa dec pop add mov dec push (bad) bound shr fwait imul jb push xor add xchg insl dec adc add roll inc (bad) pop imul mov fs xchg push (bad) push inc cmp push icebp xor xor pop mov popa ljmp add cmp lcall or mov sbb inc mov add das dec mov imul inc popf dec imul dec sbbl (bad) in or add xor mov mov in fsub xchg push xchg ljmp cmp imul mov loop shrb and ret xchg call pushf pop scas mov jge mov test pop push dec pop mov sub addl push or cli std in jmp cmc push jno fbld data16 push sahf dec int3 test mov jg loop lret icebp int pop cmp mov pop je les mov xor mov jecxz popa mov test push dec jns cmpsb pop or dec fnsave or mov pop outsl scas mov jg jge cltd in gs sub mulb adc fmull jbe sub dec in mov push and mov notl mov dec call mov pop je xchg out mov pusha mov lods ds jl aam adc jns push scas dec jl sub push adc xchg stos adc lock pop inc pop fcomps roll cmp mov jl punpckhbw (bad) fdivs outsl add sub xchg push fst test pusha (bad) in xorl leave stos mov mov cmpsl or std rcl sbb jge add inc rcr ja pop push adc shlb mov sbb or adc xchg sub ds (bad) (bad) and idivl mov adc mov cltd (bad) jge rclb dec das xor aad and test xlat push push icebp js or lret or mov add jne pop mov gs mov sbb and (bad) repnz sbb out in insb movntq sub mov and in ds pop fstl and mov mov mov inc aas stos mov xchg cmp sbb test ja sahf and xchg adc cwtl clc push jg fbstp lock pop les cwtl fcompl mov jle out insl inc xlat sub pop in xchg ret xor dec mov add test (bad) push xchg push rcr flds pop lret (bad) cmp or mov or mov loop lock or cmc xor adc pusha sbb icebp je rol pushf inc rcrl mov rcrb xor adc test lods push dec mulb mov movsb pop inc pop je or xor scas hlt xor mov mov ss je mov fsubrs push sub pushf xor cmp int jb pop mov fsubs ljmp in int3 cmp out out jb jno,pn cli ds mov fsubrl add or mov scas xchg push lock sbb dec jg push adc mov cmc push push (bad) mov in cmp mov xchg and xchg pop (bad) insb or mov adc fldenv xchg add cmp fstl daa cmp sahf frstor data16 or stc out xchg aad and stc inc mov pop in add mov and addl insb insb xchg pop dec pop repnz lret sub loope dec jo insl cld ret adc jbe rcll mov scas aam adc jge push pop adc cmpsb aaa pop jmp or xchg mov aas add sahf arpl mov (bad) dec cmp xchg pusha xor les adc mov out lcall gs inc (bad) ja or std fcomip push sub mov pop mov insb jmp cmove ds pop in or adc cli inc xchg mov xchg mov cmp das (bad) sarb cli xor add mov lahf mov mov or scas or and je test loop lcall and (bad) das sti sar jle,pn lcall xlat mov shrl and push jmp adc inc mov inc and fidivrl cltd mov (bad) push in clc mov add cmp xchg inc mov mov xor stos aas push movsl stos push cmp pop daa pop jle cmc or jae jl stc mov and add jg pusha push lret push (bad) mov daa enter dec dec aas xor sbb repz fmuls daa add sahf (bad) cmp mov rcrl imul cmpsb add rcrl mov aas mov xor add loopne,pn mov push loop shll lret xchg ds mov cmpl push gs push lret test fisub popf cwtl cmp jg cmp lock push (bad) jae (bad) aam sbb pusha xchg jb push fistpl (bad) call xor (bad) out pcmpeqw adcl xchg pusha enter fcoms pop stos adc mov fistpll pop jns pop adc lea in add sti xchg cmc jmp mov cmp mov aaa (bad) fcomip xor mov jnp add mov pop adc sub cld xor mov mov push bound cmp arpl mov ljmp insb adc sbb xor loopne loope jl pop and inc adc iret ds sub or lret adc ja cmp cmpsl mov (bad) xor jge jae jg addr16 aad sub lods mov dec mov or jp orl pop xchg lret add addr16 scas mov xor idivb or pop ljmp mov shr push pop push push in mov imul loopne add push test aaa push mov and add popa pop orb out sub shll lret xor in or push shrl sub adc cmp repnz lret es outsl shrb mov std pop lret mov das fisub mov xchg popa lods cmp pop or jmp jae out cld cwtl sub insl ja (bad) pop test js std push (bad) or lods add lcall (bad) in sarb jg incl or adc daa lock loopne sarb jg incl or adc jmp lock or (bad) nop sub lret add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lock add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov test inc push push inc sbb mov fistpl in lds sahf insb (bad) leave pop scas (bad) insl sti jns (bad) sti mov or add jb mov aam lods mov inc adc add jmp mov std xor and mov inc iret cmp jo cmpsb cmp iret push notb mov in push test into or mov pop dec or lcall fwait shrb xchg or pop lret mov hlt mov ficompl inc or sbb in sbb enter out adc mov test js repnz mov pop (bad) (bad) sbb mov fdivr out aaa lret add push pop test dec push in dec stos mov or fdivrs test adc lds icebp pop fidiv into fldt inc push xchg push shrb or mov jns lret out test call testl mov pop sbb dec std sbb int adc add fiadd loop jne fdivr adc cwtl insl stos rcrl add pop jnp (bad) test mov es imul ds mov roll pop inc jbe jnp loop (bad) fistp movsb out or mov mov cs fstpt jns inc clc lock sub push fsub mov mov xor lods rcrl inc imul daa adc mov nop mov dec cli cmp xchg mov popf cld dec loope out (bad) in scas add or rcll adc mov pop or push adc xchg cmp (bad) inc int jb cmp inc mov jmp add sbb mov push test mov arpl dec ret into dec adc repz mov iret enter scas mov inc outsb push (bad) push and test jno push fs mov cmp mov mov (bad) out pop inc adc cs mov (bad) ljmp sub repnz fmuls imul lret push adc prefetch aam pop jg gs and (bad) inc stos subb lods lahf mov inc mov (bad) inc (bad) aad aam std dec repz lret push sub sub (bad) mov jae aam dec xchg dec jne lret insb cli inc (bad) inc jae jmp mulb sub xchg lahf es jle sbb addr16 rcrb in sub pop jnp fnstenv xor fcomps popa test or and inc les mov popa dec cli xchg mov jno xchg adc mov xchg sub test mov out enter cs pop dec xor lret push dec mov jmp mov ret jge pop push inc (bad) push pusha sarb dec cmc sti addr16 cmpsb mov mov or les daa and mov stos faddl cmp mov pop lods (bad) pop inc jge lret arpl and or sbb fimull out arpl mov add dec cmpsb icebp cmp leave push stos push std mov and mov or mov addl inc fdivrl outsl js roll bound les xor mov cmp jg push inc mov fldl adc in popaw imul dec lods push push sub mov clc mov rcl out dec mov dec fwait mov jg mov aas inc out (bad) jp or or out (bad) daa in in push outsl mov xchg dec mov jl lahf cmp into jns cltd sbb dec loope push mov in push and mov fnsave insl (bad) aaa sar inc std pop popf stos xchg pop mov in cmp add pop xor and xor sub popa in jns inc xchg in data16 rol aas sbb mov inc mov (bad) xchg pop push and jmp imul cmp sbb loop outsb add push shr setl out repz push pop outsb test pop inc push iret cmc aam xor mov jg aad push and sbb cs lret cs push test iret jae ja inc add xchg mov lods and leave xor (bad) xchg pushf push pop ficom adc js popf cmpsb mov jbe arpl sub loopne outsl imul xchg clc add xchg jns (bad) stos jecxz sbb jge cmp ret es out push fiadd or popf sarb rcrl xor or jp movsl aad inc or xchg (bad) (bad) mov mov sbb dec js push insb insb roll mov pop sbb loop je,pn nop dec xor cmp outsb jb and adc mov push mov sbb mov lds jl iret mov pop pop aad sub sti push cmp jno std cmp lea push cmp daa rcll cld fisttpll repz xchg sbbb sbb xlat dec dec add jns fnstcw mov out add loop cmc (bad) xor push repz sti mov (bad) pop or daa incb in (bad) xor sbb imul pop sahf pop (bad) ljmp dec and xchg cmpsb enter dec bound and inc es mov mov xchg mov pop arpl sbb push push add and and mov rclb pop and cmp test cmp push jns jecxz mov call dec inc jecxz lret add inc sbb pushf pop cmp push test add dec jmp sbb push xor (bad) sbb sbb nop mov add ss stos lahf cmp out adc ljmp xor mov (bad) push loopne cmp dec fisubrl add xchg pop fcomps or imul and sbb mov mov push (bad) xorl and mov lods aad or pop (bad) xlat cmpsl push push sub ffreep pop repnz mov loopne fbld jbe aaa testl loopne adc addl mov dec iret lock mov arpl movb adc and sub inc ja outsl test in or jb sub inc data16 dec (bad) out pop mov or (bad) jne (bad) sarb cmp pop fildll outsl jo lret add test js lahf jb push hlt xlat dec mov push jb std rcr dec pop cs push jbe push or sbb jb jb jo mov mov out sbb mov out enter mov and push aam adc or roll adc lock jo add lods bound push pusha (bad) popa ljmp push jno adc in movsl imul jmp mov shll sbb pop testl stos das mov xor leave fistp lock stos dec call push pop adc (bad) mov enter inc add iret mov imull or fidivr movsl push stc push and cmp adc inc adc mov test outsb ja daa fild mov mov push dec sub xor cmp pop inc popa in and xchg aad mov roll in ret nop cmpsb inc cld push inc ds mov push or dec (bad) jb fiaddl lret or adc dec out cmc mov aam jnp les rcrl adc sahf sbb dec adc (bad) ss mov jmp out mov inc lcall bound ret pop dec fnstenv fcompp dec cmp xchg fistl dec lret repnz das xchg sbb push sbb fldenv mov mov fdivl xchg jge out add ror dec (bad) repz mov in mov xor test dec insl dec frstor sbb lock xchg ficomp adc jmp xchg xor (bad) inc rorl sarl push xlat mov bound loopne pop scas in clc inc mov pop cld in je cmp inc dec fmuls cmc adc jg outsl sub jmp or mov dec xchg cmp sub insb inc mov leave sbb and inc je test je dec lods adc cmp dec mov jle icebp repz inc retw mov mov out add pop pop jnp xchg jp dec sub xchg sbbb jne mov cmp imul pop add arpl sti (bad) stos push outsl mov dec mov xlat adcl push cmpsb mov add jg inc lock popa add popa insb (bad) jl test mov push outsb scas mov scas push imull aad sub inc jb outsl (bad) or jb bound sub xor adc or cmp sub pop in insl clc adc ja cmp lods ret sbb nop (bad) fsubrs adc mov fldt cmp cmc mov das in (bad) xorl lock fldenv cmpsb lea mov scas mov push (bad) in cmc xor sbb popf imul pop push test jo sahf int3 sub pop incl mov mov pop outsl xor insb mov roll push and add icebp inc add mov ja inc cmp je mov jno cmp jge pop fsts xchg mov pushf arpl lret jae insl into dec fsubs or js push jae fs movsb (bad) mov aam cmpsb jecxz jle sub (bad) enter inc insb adc mov cmp cmp sub hlt out pop lret leave les out jle cli pop sbb jo xlat idivl in mov sub xchg arpl sbb data16 lea jbe bound mov push clc jmp gs loop jns (bad) aas lock sub (bad) out jae and cmpsb mov in insl and shl sahf jns cmpsb mov aas jbe push xchg add fs xor mov pusha lahf cmpsb cmp in rcll das mov icebp aad pop stos mov mov push pop stos addr16 movsl int fcompl mov shrb xlat add sbb mov mov push add leave cld mov push dec stos lcall jge inc push cmp (bad) cmpsb push inc sub add pop push pop imul push leave enter (bad) and push out push fiadd pop arpl (bad) xor pop out or gs push inc mov push mov inc jecxz jle push test pusha xlat mov jae imul add pop lret data16 sbb mov into lds sbb dec les inc pop inc pop (bad) cmc mov mov into insb in and xor aad cs pop adc mov daa sbb ja out mov popf xchg mov or test xor stos mov jg inc aas inc test add lock or jne nop or inc cmp push inc jo pop jmp test mov rclb inc push out add mov aad (bad) mov dec stc cltd inc sub aam sub xchg les loopne pop and mov jae and outsb insb js test cs sub push leave insb (bad) sarb xor in pop fistp movsb inc cmp push inc mov inc jne adc hlt lods and call cmp jne (bad) dec push mov fs popa popa mov faddl sbb jg xchg jae push aas xchg fstpl inc xlat jle out test dec push xchg lods inc les push stos mov push jnp insl fwait sbb xchg (bad) (bad) sbb or push sub imul sbb int3 rol inc sub idivb pop mov psrlw sbb lcall stos je or cmp rcrb aam rol pop mov ds mov cmp xchg hlt mov outsb push movsl add mov pop pop cli sub pop cmc daa push fwait add and lods aam leave imul push jae (bad) negb clc pop rol (bad) into scas mov sbb adcl mov add and or xor sti imul test mov lods xor out aam cmp sub inc mov adc out mov jge xchg inc add leave aas add sbb add pop rcll lods int pop test jmp jle pop pop out inc or lret popl xchg call aad inc sbb mov es sbb sarl ljmp fs jno cmpsb or cmp sub mov shr pop in inc add (bad) repz mov xor popa cmp test test or inc nop cmp or insb aaa (bad) shl push es pop xchg xchg xor dec fildll mov fistp fstpt shrb mov (bad) hlt pop (bad) jmp mov insb jbe cltd test loope (bad) jb mov and xor gs xor cmp mov xchg psubusb mov pop (bad) icebp dec jnp adc mov and xor sbb (bad) aaa sub or push sub sbb adc test sub mov or fnstcw imul mov les mov jnp in in daa enter xchg fwait mov jne inc fidivr outsl pop push fs inc cmp xchg xchg out (bad) push and stos xchg iret cltd dec xor mov push dec push rolb lret jo inc cmpsl inc repz and pusha dec lahf xlat add add lahf lret push sub imul rolb rcrb sub (bad) arpl push xchg or mov stos jmp pop test sahf jp,pt pop pop scas xchg adc lcall or add inc push fldl sbb (bad) pusha inc stos imul pop mov decl push arpl push pop movsl sarb inc or insl add ud1 cmp adc out fistl cmpl mov jbe stos in sbb sti in xchg pushf mov cmp gs xchg sarl pop xor mov lods in (bad) rol popf or and into popa in ficomp loopne mov mov stos ljmp mov and mov lods popa in add push stc nop jmp pop or sub sub test test out fisubl mov imul push pushl adc neg xor fcmovnbe xchg push push pop aas sbb sub rcll mov sbb lds mov or (bad) repz push jge,pn inc cld popa fimull xor (bad) dec scas (bad) jne mov add jg dec adcl fldl gs in mov pop mov cmp (bad) mov pop test jae mov aaa addr16 xchg nop leave jno stos insb mov (bad) test outsl dec inc jno sbb nop dec add cwtl mov iret cmp adc pause add jle mov (bad) xor or sahf xchg pop mull jge test xor bound jb lret (bad) xlat jmp and dec pop pop jbe out in cmc push xchg inc sbb subl repnz aad dec rolb std mov inc add inc (bad) and pusha xor jecxz dec test fcmovu xor xor call dec or cld inc push xchg push out repnz jge popf dec inc cmpsl (bad) inc adc push xchg (bad) mov push mov push pop es (bad) push jne into addr16 push shr leave aad ds sub adc insb fmull xchg add dec xchg clc into repnz (bad) cmp faddp aam jle mov push jg ljmp popa aaa cmp ja out rcrb and das fisubl es pop ds xchg mov out or loop insl xor push icebp xor or push push loope pop sbb xchg jmp enter (bad) jne push push mov outsl scas mov mov insb adc icebp pop cwtl lret xor addr16 push (bad) lret xchg push popf dec sub test mov push scas call cmp das add and movsl jae mov mov out push fucomi jp jmp inc jecxz jle notb leave sbb and daa out pop (bad) mov pop aas outsl jb clc pop clc in mov sbb movsl mov ss sub cmp ja mov rcll cmc (bad) pop es dec mov jle pop push shrb mov mov and pop mov jnp out push sbb lret dec fwait mov mov push std fs pop xchg addr16 nop rcll pop ds adc les data16 adc cmp inc mov icebp stc xor adcl mov push cltd add sbb inc out mov inc ds push push sbb lock pcmpgtw mov xchg dec js (bad) jns sbb cmp out xor cmp nop pop adc add dec std jnp hlt ljmp movsb xchg cwtl cltd repnz push cmp movsl daa shld xchg inc and dec andl shrl movsb push imul xchg push leave and sbb lahf nop aaa mov mov xchg mov fnop lods idivl lea xor ud2 leave or out cmp into sub pusha mov mov incl push test out cmp rolb (bad) or iret ret out scas cmp fcmovnb test (bad) pop scas and cmp loope xchg out sub mov jmp jmp loopne scas fldenv inc mov fsubrp (bad) (bad) hlt lret mov mov (bad) fs xchg (bad) or dec lret ja and or je movsb ror jl inc mov sub orl outsb inc fldt sbb sbb xchg mov fnop jne jle mov fwait out adc ljmp outsl hlt jmp inc pop rclb sub mov jo cmp sbb push (bad) ss mov mov and and add sahf in repnz out jae jne imulb dec lcall out mov das mov xchg mov pop lret divb imul je mov fmulp aaa int arpl or mov pusha mov xchg imul data16 fnop lods sbb ret pop xor mov ds int push neg mov xchg sbb loope loopne sbb mov add cmp jmp lock popf add movsl movsb sub mov push (bad) test mov test pop call or cmp jne jmp add test xor or xchg into in repnz outsb push loop mov orl rcll jmp out popf xlat jmp pop xor dec sahf ljmp repnz sbb cmp into pushf in mov mov in xchg test jo ret repnz or int3 out sbb fiadd pop cmp loopne add jmp add fs daa out into into loop cmp mov rcr bound mov addr16 and das loopne lds mov insl xor xchg outsl cmpsl cwtl sub jl push or lret arpl mov mov imul cmc push cmpsb jbe pop pusha popa mov push fistpll ljmp ss inc pop fnsave cmp (bad) aad jmp cmpsl pushf out enter fidivr bound daa arpl xchg adc rcrl fstl sbb mov mov into popa lods xlat pop adcl sbb insb sub xchg es ja push popa sbb push mov jge or push mov ds xor mov pop push loope data16 pop call std jmp sbb mov out imulb aam xchg sahf es push sbb jnp push call cwtl (bad) popf lret aaa popa lds imul call popf test adc jno or cmpsl and dec cmc xchg (bad) es dec push pop pop sbbl or pop push pushl inc insb enter adc dec cltd sbb sahf pop mov pop mov jae cmpsl ret xor sarl loopne cmpsb mov test xor in test mov inc and jno adc lret icebp inc dec (bad) jl sti imul (bad) (bad) ljmp scas mov addb pop test int push adc out xor mov in insb add sub fimull lret out stos jo iret cmp lcall int (bad) and adc jp push mov mov mov push (bad) pop dec adc fs sub stos movsl jmp mov out es cwtl cmc pushf or add add push pop mov cmp cmp shrb or or jbe je dec jns (bad) xor xchg dec inc inc xchg jge jns pop bound pusha mov test pop or aas jno add mov pushf fs and and sbb xor movsb lret aam pop mov std adc sub loop ret jle aam push sbb sbb pop fistl dec xchg mov pop outsb mov (bad) lret pop mov pop fs lock mov loopne inc test mov jo xor in push leave fsub dec push (bad) jb add lods incb hlt shll add dec and cmp inc adc aam fdivrl movsb aaa ret pop test aam cwtl or pop jo adc jbe inc stos pop imul sbb rcrl push jns push dec xchg (bad) lahf repz mov or test mov or fwait inc xor push xchg mov lahf fs pop test push push push or das xchg jmp and jecxz dec xor jg mov xchg or (bad) clc sbb mov and in sbb fxch leave scas iret or xor xchg scas jnp pop insb inc jne inc in mov test fcompl xor fwait mov push sbb stos push (bad) into dec jae cmp mov add fimul sbb push xchg andl push scas cli adc test out aaa out ret mov push repz jmp leave xor hlt in lds jmp call pop jb mov sub lea and ljmp inc inc test ficomp add ret jmp mov shr movsb test adc dec sbb jmp loopne push pop aas daa cmp incl fmulp cwtl mov dec ror dec adc mov lret pop add cmp in mov push add wrmsr cmp cmp jp fisubrl pop inc cmp lock (bad) mov arpl je lea pop inc sbb and push daa ja pop call inc mov aam mov mov mov jecxz xchg jns push insl icebp dec fcoms shll lea mov sub and iret popf loopne hlt loope push in das dec jl jbe in cmp inc popf popa mov xor cmp cmp loopne int3 push scas fsts lods testb xchg or inc mov cli mov sub js adc scas rol xorb lret out pop addr16 test inc call add (bad) scas in push pop out fsubrp fmuls xchg inc js inc xchg pop sbb adc jle shr (bad) push sbb (bad) aas test stc xor cmp lcall nop xchg nop lods push int ds or mov fs lcall loope icebp ret mov and mov push fnstenv dec dec roll rcr jne pop arpl inc arpl inc sbb dec in dec mov repz xchg insb adc and sbb pushl in add out sub std call pop daa addl ljmp fnsetpm(287 in adc sub mov ds mov aad or pop or add sbb movsl add daa add push xchg sbb push pop mov jae sub xor sbb dec icebp add adc cmp daa adc mov pop in scas (bad) enter cmp xor and push popf push pop xlat clc aad addr16 add std xchg hlt ja outsl sub repnz mov push mov test (bad) pop adc std mov add cli mov xchg ljmp out insl out mov jmp (bad) ja sub movsl jp mov sbb test mul jbe into (bad) std sub out cmc aam mov cmp xorb push (bad) and push adc enter arpl insl inc aad dec mov add sub mov adc add cmp cmp xorl add jge inc sub clc push clc mov dec shll (bad) sub pop inc ds push adcl fwait mov scas and aam enter loopne push mov ret scas (bad) xchg and sub inc (bad) test movsb fcmovnbe mov inc push push jge (bad) sbb push shrl sahf fsubl xor (bad) and lea test out aaa movsl xchg aam enter or rcll testl dec push sti lods cmc stos ret les sbb mov inc jmp fwait idivb sarb lock sarb or daa lock sarb or daa lock sarb or daa lock sar cmp xor add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push jp mov add push mov mov stos mov fisttpl pop lea cmp xor fistpll out dec js lods mov or add and sbb mov mov xor jg in inc jl test adc push fs push mov pusha jae dec fistl pop pop mov ds fistpll inc mov lea pop sub lea out ja push mov pop pop and clc (bad) mov dec enter fisttpl add in mov test xchg push pop icebp xor mov adc pusha dec inc addl in push bound xor icebp jb mov mov idivb push ret fdivrl jg sub add mov xchg rolb pushf mov pop in mov inc cmp stos inc inc sub mov push jl mov stos dec fs arpl imul dec out int3 inc pop dec cmpl push (bad) jns push adc pop sbb pop addr16 loope ret in xchg push jg pop sahf adc pop test clc orl sbb fiadd test mov mov (bad) call ss dec out aad cmc out loop pop mov cmp mov pop stos lds sbb mov fwait pavgb jle xchg push cmp call and test mov pop gs jbe sbb dec cld and into pop mov (bad) popa sbb and out arpl and jns stc rcr or enter mov push nop sti sub inc xchg cmpsl xor repz stos je xor into imul inc fdivs and adc xchg mov fnop cli jp aad add jl nop or (bad) xor inc fidivl ud2 pushf push mov xchg sbb addl daa jnp inc sub cmp arpl adc imul sbb dec cmp or fistpll or jne pushf mov mov add mov mov xchg leave xchg cmp aad lret push jae mov sbb lea or out sbb mov inc or popf (bad) sbb push enter (bad) enter mov addb mov push clc sahf xor paddw in push or data16 lds cli inc in div out cli dec mov addr16 and pop shr fmull mov add (bad) xchg cli adcl les (bad) jnp (bad) pop dec push or xchg jmp test cmpsb jmp mov in mov enter call jb adcl cwtl xchg outsl sarb xchg and mov push mov or mov pop ljmp mov lock mov ja inc test pop je clc pop push jns int popa fsubrp jb dec cmpsl stos hlt add adc (bad) mov push pop fwait jge and jno insb outsb sub sub and lods shr cltd leave xchg (bad) mov test jo fs rorl pop jns add or push push sub lret lea stos loop mov inc add and (bad) pop pop xor push and add outsl add lcall push shrl shr mov dec ss je pop leave fdiv xor lea mov jb imul (bad) sub push bound mov fmuls int3 test aad and clc es testb push addr16 je sub cmpsb dec movsl lret and mov (bad) adc jl mov rcl and jno sahf pop add jns (bad) pushf (bad) or push mov mov movsl mov or cmp cmp push lea mov in addl out jmp inc enter les push push mov xchg bound fisttpll sbb dec xchg lds xchg int inc std insl lods or and pop ret push lret (bad) in clc add loop dec cwtl xchg sbb in stos mov loopne scas les lret movsb cmc push or dec lock icebp por mulb cwtl int dec adc mov cmpsl outsb mov mov stos cmpsl dec pushf mov pusha fwait cmp cwtl adc nop cld test out std je push cli mov xor les insl jp outsb mov xchg and and push mov sbb mov xchg mov daa test mov cs xchg ret sub add mov dec pop xchg cmp insb mov pop in sbb lds sub cmp aam mov imul fsubs sub (bad) xor xchg xor outsl cmpsb dec mov jne mov add sbb movsb test jp out add xlat rorl push test out push ja in jnp getsec js ficom lea in mov jmp adc sbb fwait dec pop pop pop out cmp and pushf or xchg iret in sbb jns inc push js pusha sahf xor jecxz push mov pop or cwtl in fnstenv sbb xchg pop inc call xlat add mov sti sbb (bad) cmp cltd das cmp mov sti enter pop and push jge inc mov es xor inc lahf pushf xchg roll mov (bad) mov test (bad) sub mov hlt fimul lcall pop nop cmp lret jns insb push aam cwtl jecxz insl and (bad) fidivr leave sub aas lcall cmp push dec mov sbb jae sbb dec test mov lret cmp push mov push sbb mov stos test and mov lea mov imul xor loopne and fsub and inc fstpl fldcw lea xchg mov and cs fiaddl and cwtl int outsb cmp sti stc push test push xchg test out xchg ja subl in mov jge mov mov ffreep xchg mov or fmuls out push int3 in pop repz js out movsb push mov (bad) in sub mov pop repnz xor sti inc jne add xlat test cmpl xchg mov or push push dec cmc inc inc in call jle cmp out adc xchg sbb outsl outsb add cmp adc fsubs js (bad) or or mov rclb std push call popf daa lcall sbb bound je test mov adc push xchg dec daa in xor and adc push mov dec (bad) sbb rorb pop adc mov out (bad) dec dec test js mov or cmpsb jecxz pop add ds push inc and dec cld pusha xor fstpl in stos and das or xchg icebp jmp lods outsb sbb nop scas in scas mov outsb lea mov lods adc fidiv scas (bad) (bad) sbb inc test int3 inc sub int xor mov repnz mul cld push push jl jbe rcrl in aam aaa adc sbb hlt loop xchg out xor dec sahf mov cld push mov mov and xchg mov popa ljmp or sbb outsb dec das mov mov imul push cmp dec adcl push xchg mov out fnop lods cmpsb imul or push or jge and mov arpl sub loop and pop sub inc and jnp hlt rclb pop pop lcall cmp inc or jb or lock popf shr (bad) xor xchg pop xor iret push decl pop int lahf ror cmc aam popf paddusw jo,pn xor cwtl repnz push leave lcall int dec inc lods mov pushf loop push loopne ss hlt lea sub dec jae loope scas stc xor dec mov lock (bad) cmp mov add dec (bad) lods adc adc add loope xchg cmc lcall or fdivp jns and nop mov cmp icebp cmp (bad) fsts out and pop jmp in jae shlb lods ret mov inc aas jp add aam dec mov loop jmp addr16 or lcall loope lret jb or cltd mov pushf hlt jp jge test (bad) int3 push pop sbb idiv jl scas imul add fisubr dec xor dec push xchg and push add sub dec inc idivl sub sub pop mov push push mov adc mov mov mov and inc push push out cmp insb xchg jb test pop or mov je mov cmp insb jnp xor jp fs mov les (bad) insl xchg bound scas xor add lds lret add jg jmp xchg mov cmpsl pop fs test and mov leave xchg dec mov lahf sub (bad) stc lods rorb sar push std jge jl daa outsl mov pop pop sarl lds mov repnz xor mov xor push pop les pop jl mov pop out (bad) mov daa aaa pop mov int push sub call je or ds hlt loope jg in rcl fcom sarl mov add xchg push push pop fst rorb push icebp xlat mov adc inc ja cltd dec xchg jbe fcoml jg push and sbb aas mov sbb test in test dec jne fildll inc pop dec jno sti gs roll sub lock mov in xchg inc and dec mov cs jecxz mov (bad) jmp ja imul outsl rorb sub aaa rclb stc cmp cmpsl cmpsb pop popf pop mov jbe cmp mov push or dec xlat popf xor mov sub je cli ljmp shll test cmp gs mov jle jae dec hlt mov xchg leave dec into pop sbb mov js notb daa lock data16 dec (bad) lahf addr16 dec (bad) cltd xor cmp sbb sub sub mov outsb add jnp jle cmp out pop push mov mov adc adc push nop inc xchg in jb adc cli push add repz push gs mov imul xchg outsl xor sub mov ret mov movsl in rolb jp sti mov pop push into out pusha inc pop aas clc mov push mov adc sub std popf jo add and and fstpt xor push pushf or push (bad) pop (bad) push fisttp xor repz out mov imul aas mov or pushf push lods out out repnz inc aaa pushf mov and ss mov mov mov mov xchg (bad) test jp xor adc or data16 or push jl xor fdivs xchg mov inc divl aad jge cli lret (bad) dec add cmp dec addr16 in or cmp ljmp mov sub mov xchg mov mov (bad) imul jmp jo es (bad) mov orl stc mov push cwtl push in mov push out cld mov dec ss xor jne in add add push sub mov xchg imul mov outsl movsl inc repnz push or int3 scas enter dec xchg and aas fldenv std mov enter push push out popf loopne and pop jbe cmp sahf call add lahf mov lock in xchg cmp les test mov dec or push mov mov dec pop fcompl ljmp clc ret inc mov push not fisttpll (bad) xor inc cmpsb mov pop inc xor or jno adc shrl scas and or icebp add leave jo leave or inc pop cmp and push les or mov mov (bad) mov icebp push div sbb iret int3 (bad) mov xlat insb into test nop loopne,pt pushf fsubrl mov jle push sub insl and xchg rolb test (bad) int3 enter sub xchg push into mov sbb mov test adc jp aaa mov insl and aam xchg mov sbb mov sub repz fldt xchg cmpsl xchg cmp pop push sub in sub cs stc repz loope mov stos xchg cmc shrl jg adc (bad) daa dec fnstenv mov adc dec scas pop or xchg test out mov mov pop mov (bad) dec hlt cmp xchg mov fs imul sahf inc mov lret and jmp xor sbb in inc mov daa adc mov out cmp sub jns js inc imul lret xchg push and mov xor xor loop loopne pusha cld jne jb,pn dec cmp jecxz jg daa jno lret pop fistpl jb jmp popf xchg scas and les loope add jmp fistpll xor daa mov sbb cli in (bad) cmp jg and mov inc mov movsb std sbb insb jg jb popf (bad) repz xchg aaa push pop jg jae cld sahf mov neg sarb dec xchg popl mov pop aam pop out cwtl int ficomp push inc sub enter sarl call mov pop cmp mov jb sub (bad) loop sbb xchg or mov inc cmc stc loop inc test pop pop adc daa jae rorl outsb and ljmp (bad) or xchg mov (bad) test (bad) pop dec xchg sbb mov in popa xor xchg xor jp add add insb cmp and inc scas sahf divl sub nop int3 mov in xchg fdivs mov xor lahf stos das test mov pop cmp sbb nop jl (bad) mov add in int xchg inc sbb jge mov (bad) ffreep sub inc push std xlat mov sub dec sub xchg add sti sub (bad) cmp jp push mov jp push sbb sub movhps out faddl jo int3 sahf cltd sbb adc push ljmp add fsubl push loop cmc ja (bad) mov loopne (bad) lock mov sti sahf push in dec or jle mov mov mov push ja ds es cli mov adc xchg sub repnz pop ljmp mov xchg xchg jecxz add pop add or test sub mov push shl mov paddsb stos lea jecxz cmc cmp es addr16 flds mov or pop or jmp sbb fs mov or movsl mov aaa mov add movsl pop mov jp aad mov inc cs mov sbb (bad) pop xchg out xchg fs (bad) mov in push int mov sub cli in inc xchg mov sbb aad aaa jecxz sbb or adc sahf scas pushf pop pop arpl repz push jb jl sti into mov mov pusha pop lods addb sahf pop ss rclb cwtl sub cmp rcrb dec cmp lods fwait adc mov cmpl mov sub add test cmp mov sub jbe jmp (bad) push xor mov inc cmp jg jbe lock insb enter enter jge lock mov dec cmp cld arpl mov xchg push rcrb pop mov dec dec xchg xchg ss mov sahf call sub xchg ror inc clc xchg add mull repz lock (bad) in cmpsl jmp pop in push and rcrb mov ss ret (bad) mov lods xchg mov pop mov pop jmp hlt ljmp pop dec int or je adc enter daa movsb nop mov sub loop test cmpl or jne add cld mov out add rorb xchg pop mov inc cmp and pusha iret fs push leave imul xor aaa sbb sub les sbb movsl sub mov jo push pop adc sub add sti jmp (bad) lods jmp int3 das daa test gs inc orb enter int3 lods data16 xchg lock leave pop lea adc lods bound sbb idiv fildl mov dec pop and out pop adc jnp push fldt scas (bad) and inc or aaa out xchg stos out cwtl mov jb daa xchg jae jmp test addr16 movsb mov ret push mov iret out leave popa sahf es ds mov fldcw iret push aad mov inc and lods push push inc push cltd inc aas fisttp add sbb mov mull mov jno inc push dec and jl imul cmp outsb pop mov jge jg xor cs inc cmp dec fwait ret jg mov cs imul jno or add pushl and jbe imulb mov test jmp mov xor inc push pop test fnop dec hlt push (bad) andl test sbb adc xchg push fnop test into push inc cmc rorl addr16 mov mov lods mov daa gs sbb push std push and into aad data16 xchg mov (bad) hlt pushf in pop punpckhdq dec out loop inc js outsl scas dec (bad) ror push sbb pop dec lahf (bad) lahf adc dec adc roll pop xlat out repnz sarb movsl pop cltd enter mov xlat mov mov (bad) and scas outsb xor test cs sub popf subl inc mov imul inc or sbb pop push rcrl dec es in rol pop scas subl cltd xchg addr16 add mov or inc jo and add dec cltd jbe enter and mov mov mov inc push push mov cmpsb pushf mov repnz sbb xchg aad sub cmp aam leave inc or das gs jl jo je lahf in mov stos aad sbb leave lcall enter xchg aad fdivs ret xor add mov sub fsubs jo scas jae push faddl dec lock stc sub jmp adc addl cwtl xor xorl pop adc xchg sbb dec lock cmp inc incl mov aad es (bad) xchg aaa mov (bad) fadds inc pop dec or scas stos xchg pop nop mov stos sub push jl cmc enter mov leave cltd mov jae hlt les dec adc cwtl fldenv dec adc push std inc cmp dec mov adc dec rcr loope sbb mov and lods xchg jbe std cmp es jmp and jno xchg sahf mov sbb hlt ja mov insb or ss shrl adc push push xor xchg cltd cmp jmp dec and cmpsl mov das ret jge (bad) jbe cmc aaa mov outsb mov push pop into xlat loope mov ljmp inc stos (bad) aas push popa dec insl je sbb mov pop inc xchg push jns popf clc adc push (bad) ljmp (bad) push lret stos sub and sti mull sbb cld or rcr xchg inc in rcrl adcl add sbb xor sub (bad) mov je imul pushl push sbb adc (bad) xchg sub cmp insb xor ret and imul stos mov mov or cld adc inc insb test inc inc out fsubl rcl in stos sahf dec out mov lahf nop stos rorl add frstor add xchg jp push pop test ficoml push adc push push inc fcmovnb lds outsb movsb inc inc jle dec sbb stos cmpsl ficomp and imul adc add outsb mov xor dec mov (bad) cmp sub ss xor jbe cli ficoml roll jae jg idivl bound aas push jae (bad) mov rcrl sub mov (bad) jno popl push in adc add insl scas out cmp and xor in push loope mov (bad) sti xchg sbb add and fdivrl xchg mov out mov or fsubrs add mov push clc cmp push inc in mov sbb stos mov lahf lcall mov aad cld push in mov fsubrl sub pusha ss movsb pop push cwtl cmp lret xchg pop popf rorl icebp (bad) cmp add out les pop cmp les sbb pop sbb (bad) jmp lods scas jb mov rcrb inc cld bound mov inc mov outsl cltd push fimull subb imul xor (bad) xor dec mov push movsl add (bad) popa mov out mov out (bad) (bad) dec mov mov rcrb lods push cwtl and lahf jne jne int fcomps cli (bad) leave sub es xor xchg add stos cmp adc leavew pop mov es lret rcrb pop mov leave dec (bad) jns es xor lret in lock inc cltd sub jnp aam inc xor inc xor and into cmpsl adc fdivrs jge int test lret adc dec cmp lret int sbb ss jl push jb jg push pmovmskb push mov cmp nop and push xor mov push out cld ds lahf fisubl mov adc jae and xlat xchg popa mov loop loopne std add insl xor xchg into fwait pop pop popf mov mov popa add inc push push pushf cmp inc shrl fcomi sub outsb sub dec push insl loopne rclb mov lock cmp push js jg rclb call scas jae inc mov test push push and loop lds mov ret outsl xchg iret fsub lods mov and ret push mov pop cmp fildl mov (bad) or adc mov mov xchg xlat sbb dec js jg mov inc fsubrs adc pop (bad) pushf popa movsl mov lret fcomip jecxz insl adc cmp (bad) push in aad adc (bad) pop sarb jg pop sub pop dec dec sbb in call lcall xor dec xchg fisubrl cmp cmp aam pop pop jne push add cmp aam and mov jnp add mov pop aas popl xor test popf and ss pop or jg mov dec je nop or notw pop mov or ljmp adc or jo xor add mov jo js inc subl mov mov daa outsb incb or dec incb jl in insl adc loop ss test imul out cmpsb xchg and arpl jo pushl adc jge mov cmc mov dec and sbbl lcall pushf shr dec sahf cmc test in fsubrl add cs dec divl iret dec sbb scas insl cmp xchg aad pushf sub xchg leave lods (bad) mov pop jg sub push lods cs mov sub repnz jb lock push (bad) addr16 and cltd cmpsl sbb lret aaa mov pop pop nop shll jle (bad) sbb push arpl bound in int push jge jecxz arpl stc inc mov sarb or fisttp pop (bad) jecxz mov out rclb imull je out pop rcl dec or inc push push push adc roll xchg pop mov aas xor and push mov cmpsl cmp jge push enter add enter into inc shrl (bad) loop pop jb push in mov dec mov shrl fnstsw ja (bad) and or bswap std adc mov icebp in inc (bad) jno jmp dec out in fisub mov imul push mov mov in mov add cmpl jmp cmp dec inc cmpsb mov in mov je adc ret inc fstl ss sbb (bad) mov cmp cmp sbb into push xor out pop repz aaa addr16 outsl stos lods pop rcrl imul and pop lods xchg jnp cwtl cli and or pushf rcrl insl insl std cmp mov and das rorb pop (bad) addr16 jg mov les aas xchg and pop cmp and (bad) push pop call fdivrl sub xchg ret xor push cmp fisub mov mov lea (bad) out pushf push movsl mov mov scas add out lahf sarb jg incl or adc daa lock loopne sarb jg incl or adc jg clc pop and aas stos and sub add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add icebp and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push inc and xchg insl mov in push mov (bad) fistpl dec arpl lahf sbb and add mov pop push add lahf imul xor mov xor insb push cmp xor loope xor jae xchg loop adc addr16 adc in out ljmp and mov aad fcmovnbe mov imul xor jno lret es out sub inc arpl cltd adc jo into pushf mov das inc sub movsl das mov lahf sub sub xchg call fdivrl (bad) or xchg lods jle sbb sahf inc add sub pop push xor popa jno rcll jmp (bad) push mov test mov stos out xor jae lcall (bad) test push es mov sbb pop and mov cli and mov insb scas mov scas andb mov mov movsl jno (bad) loopne inc popf sbb jle test enter adc imulb fbstp add mov pusha mov xchg (bad) aad dec inc push add repz jbe jg hlt mov fnsave push add icebp or jns imul jo das sbb das (bad) xchg cltd loopne scas mov mov lahf fbstp roll loope sbb xchg cmc pop dec sub pushf shl rcll popa pop pop aaa jge nop out (bad) shrb xchg pop jns push (bad) ret mov (bad) nop push xor sub adc mov jle jmp mov xor lret outsl add cwtl pushf es pop xchg aas incl xchg lcall cmp shlb and and popf rcll sarb shl lret clc mov dec mull out pop xor (bad) and jne (bad) dec insb pop stc cmp xchg jb push loope pop notl arpl test jae shlb dec ret cmpsl pushl xlat push push xor inc fcoml lahf in imul mov jo sti in stos add outsl and andb mov call sbb mov mov outsl sbb add mov xorb fisubr and adc dec mov mov cmp add (bad) ficomp aad cmp les in stos rorb or and dec mov mov (bad) int test xor dec sub out (bad) fist sahf out mov in test daa in sub pop sbb fidivrl jmp jmp mov mov imul adc fcomps mov pop xchg loope sbb (bad) loop fcom adc mov fild pusha lcall aaa imul add mov scas aam pop stc aaa sahf pop es scas movsb xorl in cmpsl mov dec imul nop xchg mov test add cmpsb or test test rcll adcl jl arpl pop push imul daa inc pop sahf in ja dec in lock leave and jmp call or enter pop dec sbb xor outsl ljmp adc cmp jae (bad) (bad) rorl sbb lds loopne push cli in jmp xor xlat or sbb xchg jecxz movsl xlat inc push xchg and (bad) call iret ret fmuls sub daa (bad) ja (bad) fcmove aas stos or mov or lea cli (bad) xor push (bad) (bad) jl das dec sbbl stos add enter test mov pop js ret into cmp pop mov (bad) lds shlb fcomps and jp dec xor and jmp and into mov leave or xchg lcall fidiv shll cltd or (bad) (bad) (bad) xlat lcall jp xor inc rorb cs lahf in xor sbbb popf inc sbb adc or pushf inc insl jge dec cld mov outsb test fsts scas mov in and lea add jno mov lods popf ja inc mov (bad) icebp cmp mov jmp test sti xchg pop fild mov jecxz cmp sahf xor dec les je fdiv or ss mov sarl mov (bad) push sar fidivl fadds jb jl scas jp and xchg aas xor not gs lahf (bad) mov mov pushf test out dec fnstsw cmp (bad) pop arpl enter fmulp insl pop pop or push dec xchg xchg ret out test cwtl jmp xchg add out ss fcmove mov xchg cs inc sti mov repnz xchg inc adc aaa jb mov mov jmp dec adc jb lcall mov cmc jbe sub int add mov adc (bad) mov out rcrl mov into mov adc adcl into cmc pusha fdivl xchg icebp adc pop pop push mov negb adc mov or movsb push ret jne ljmp fiadd or sbb jecxz mov push loop jle mov or andl data16 sbb ja fsubp shrb pop jmp cmp dec add popa ret outsb mov es sub mov dec sub mov movsb dec lods jbe test int fwait dec test sti pop and movsb in dec xor mov or fnstsw clc fdivl fadd popf pop mov cmp insb dec mov add nop add stos in inc pop xchg sbbl jmp or in pcmpgtb dec inc cltd lahf mov (bad) je add fstl sahf jno inc push xor xor xchg xchg enter out pushf divl punpckhdq mov mov cmp pop inc test stos (bad) in shrb lods jmp mov push dec cmp popf loop mov inc (bad) rorl js ret lcall xlat out xchg push les ja adc lcall je fwait aam (bad) idivb fdivrs hlt call xchg outsb mov lahf mov imul xchg iret mov movsl jo loop,pt fcomps cwtl lret xor dec jp xor lahf push lcall cwtl test lods and pushf pop xchg push xchg jo pop pop push lret xorb lods or pop add jmp and push pop xchg loopne mov xchg pop stos jl mov fisubr js xchg sub ficomp sarl sbb inc push sti xchg leave mov push cmp mov fmull xchg ret jno add gs jmp pop xor push nop pusha dec and sub inc push lret adc aaa sarb nop mov cltd jns pop aam ja push inc mov adc mov push pop ljmp jge aad icebp mov or jne lock fnop jg xor ret xor in push xlat lds (bad) clc and mov push icebp cmp adc push xchg es hlt mov cmp cli xchg into orl xor scas in sub loopne mov push in adc lea jmp nop in mov cmp ficomp adc lods sbb sub fnstsw jecxz loopne jle dec sbb push xor imul lea outsb aaa cmpsl sub scas add rcll insl xor popf outsl cmp pop rcl xor fsts out xchg test push dec or loop (bad) xor sub inc mov adc pop cmpsb in pusha (bad) push mov mov sbb outsl add push loopne or in sarb push out std adc jbe movb enter loope inc lods mov lahf leave cmp test pavgw adc xchg fs dec push cli scas push and and scas in cli xor push push outsl push lea cmp aam lds push adc mov out ficomp js sbb rcr icebp xlat inc jle sbb gs mov mov addr16 lea mov rclb int rcll pop pop xchg push cmp addl out dec popa push jmp xor in inc jbe scas in push js lds scas pop cmpsl ds push icebp jecxz adc outsb out inc nop add push sbb push pop mov enter out xchg xor jmp adc fbstp es and test and and mov mov cs jmp (bad) jae jb,pt (bad) sbb mov mov lods popa in sub jl mov xor push int jae cmovge bnd jae inc push popf lods out mov lret in push mov ficom es mov (bad) div jo fs fdivl fldenv mov inc push add es idivb dec cmc xor aas idivb test xchg sub loope aam jp mov scas je fmuls (bad) fidivr ret out aas mov jae jecxz jp inc add data16 sbb icebp das lret scas lret (bad) jae pop dec les aad push adc fnstsw dec mov dec ljmp sub sbb push std lds fnstenv and roll or out call icebp fwait inc or sbb imul xchg ljmp insb nop (bad) dec pop push (bad) shrl push das lods mov mov push and xchg xchg mov push nop inc or mov lret mov jl cld push jmp lret lcall xor movsb (bad) aaa cwtl sbb nop cmp mov xor sbb (bad) push xchg test sarl dec push (bad) clc mov mov cmp ret lods lds sbb adc vpshuflw jmp inc mov lret pop xlat add mov cmp fs fs cwtl imul nop lods cli xor xor mov jge pop pop loopne pop cwtl mov pop cmp leave jle pop insb stos (bad) mov add clc mov sub cli jnp sub leave enter mov xchg les mov lret sbb pop pusha imull and or gs inc test test xchg add xchg call repnz xchg dec cs test push xchg scas (bad) out dec jp test pop out ficompl hlt jns fdivs mov mov mov lock (bad) mov roll sub mov sbb jns popa subl inc mov and mov cmp mov xor outsl and and insb (bad) repz fs and or arpl inc outsl pop xchg cmp pushf callw push scas mov cmpsl mov (bad) gs lods mov (bad) into sub mov push mov lret in xor (bad) pop in dec and test xor add and rcrb shr pop xchg add adc mov mov xor test dec add int sbb fcompl add add xchg mov nop dec mov mov sbb aas enter fwait in xchg lods or pop adc mov enter das adc stos cmp fcompl (bad) and test push dec push popf cmp mov fs icebp pop jne mov pop sbb (bad) xchg inc inc xchg jnp sbb test cli clc xor mov ret cmp lods cmp (bad) fldcw mov jne inc mov pop jl into or push cmp cld xor inc cltd leave add jp leave out jne ja ficoml ja mov int3 mov jmp pushf lea cmp stos push popf cmp movsb mov push jne repz and xor es mov jecxz mov dec nop cli cmp or lcall adc sub mov test idivb mov aas dec and or mov pop mov lahf aas sbb jne pop mov imul mov mov in subl dec mov mov adc arpl push (bad) pusha dec loope insl and dec xchg imul aam ja stc (bad) mov fdivl lahf loopne scas scas cmp mov mov add data16 sahf mov subb mov fs pop outsb mov leave adc mov aam daa idiv mov sbb inc ja popa stc add inc push adc inc nop mov mov fnstenv mov dec cltd out mov or mov xchg call outsb cmp lret mov outsb xchg nop sub mov xor or cwtl negb fs fwait cmc jle jno cmpsb xchg das hlt cmp call scas mov push cmpsl mov (bad) je hlt xchg sub movsl insl out insl stos addr16 pop ja push aas stos mov add jnp call insl inc in in xlat xchg cmp mov mov insb popf (bad) sub cli xchg imul jns stos loope inc gs icebp xchg xchg lret push out jns lds in push pop push adc inc and mov fistp es les ljmp jp in jnp xchg pop das sbb outsl cmpsl data16 lret repz inc xchg cmpsl sbb jae popf cmp out aaa popa mov mov push jae sbb (bad) pop out dec xchg push mov lea fdivs enter adc xchg stos push sti mov fnop scas jno cmp (bad) out lret sarb xchg inc cmp add incl (bad) inc xchg push jp call cltd jne std int3 pop loopne inc lret ss jae sub push pop add imul push test xor int3 pop ret mov mov xchg stc sbb mov cmpsl aam xor aas js pop mov arpl call adc xor add adc jle push xchg outsl mov mov pop jns (bad) testl jle push add mov add jecxz and push (bad) lret test sarb out mov aas in scas jl inc or add mov dec dec xchg push jp mov sbb lds cmc lahf jmp scas push dec inc jmp adc xchg ljmp xor mov mov adc in stc add push pop arpl scas mov into jg mov mov or lahf cltd pop je fsts add dec ss (bad) mov mov rolb std js repnz fldenv dec jb or stos add iret dec dec xor clc mov cmp sbb pop sub test cmpsl adc int dec ror (bad) shrb clc jo or aam enter xor or or cs fs pop and or sub mov int3 mov mov jne sub and lret or xor fwait out gs adc popa pop dec in xorb call rorb inc std (bad) or or push movsb push pop fisubr mov cs xor stos (bad) cmp sub iret roll ret mov js and pushf cmp inc in int3 push (bad) sbb into sbb rclb fwait lds mov or mov test jo jecxz mov pop pop cmp and mov pop faddl add and cltd add jns sti paddq jl and mov out inc test pop lds mov (bad) aaa mov jmp mov jl lret cmpsb and aam sbb mov push arpl fisubl test or ss lcall mov mov pusha push lock adc (bad) insl movsb pop lods sbb jb mov pop icebp dec push (bad) mov aad gs add scas pop cmpsl jno icebp pop xchg xlat rorl daa adc jbe xchg test das aas lea loop push cmpsb push fs sub cmp cmp dec jge loope cwtl clc aaa jmp adc std test (bad) jne pop xchg sub mov (bad) sbb sahf or add rcr or hlt inc (bad) cmp lea out mov das fcomip sbbl xorl lods inc xlat (bad) hlt jg test cli sahf clc pop dec mov sub mov adc test dec and mov xchg pop jae mov iret sbb lds ret jp cmp jge (bad) jnp sub mov dec or sar jmp push add lcall and insb mov jbe jns bound call add ret (bad) jmp scas inc clc jb fidiv lcall ja or xrelease test ret mov mov js icebp inc or push ss rolb cld std cmp mov mov test jno (bad) sub int3 cmc daa jb jmp dec vpgatherdq adc aad lods pop add js je dec aad mov insb inc jg popa aad pop leave mov xchg xchg cmp cmpsb or cs push stc lfs xor mov icebp mov movsb mov rcrl adc cmp cli stc jne ror enter push jo in repz inc out push js scas into arpl cmp push fistpl xor aad sbb inc cmp sub pop jmp inc out loope mov fcmovb frstor and mov add pop xor cmc sahf repz rcrl stc dec in stos jge (bad) cld dec je (bad) mov cmp push pop imul das aam cmpsl addr16 add jle movl (bad) outsb inc loopne mov loope dec je adc mov mov xchg mov fsub idivl mov cmc adc (bad) test cmpsl add cwtl xacquire mov insb ja nop ret sbb xor dec leave jge mov jbe test or ret cli xor and cmp mov jne xchg popa or or and popl (bad) loopne adc mov xchg lcall mov sub pop sahf add (bad) je repnz cld cld xchg outsl stos lret int3 arpl repnz cltd or outsl arpl jecxz dec sti cmp xchg and ret sub out push cmc or lret out jb inc mov push xchg ss insl movsb div mov loope lds std inc in je fwait adc fimul push insl into mov movsl sub leave sbb xor mov ljmp jnp shrb ficoml sti sbb leave scas aaa xor out mov push mov xor jl in (bad) aaa and lret iret mov (bad) insl popa stos lods pop call mov fbstp add push rolb mov push mov xchg outsb or test mov xchg push subl jecxz fs dec (bad) xchg daa ds pop push xchg lods xchg fstps int fwait pop xchg pop pop mov pop push xchg insl push cld pusha add stos cwtl jne push push aas addl push xor repnz sub jno and imul jb pop mov (bad) scas sahf jp loopne fistpl jp aam or sbb bound (bad) divb dec pop das ljmp adc cmp mov jmp movsl sti daa ja ja mov (bad) ret xchg or add jl pop pop xor pop (bad) inc addr16 das enter push fdivr dec inc aad or (bad) xchg clc inc icebp dec sub vpand negb cli (bad) mov dec push cmp icebp push imul jp fnstsw or xor outsl xor ss xor cmp jae test jge adc (bad) xor lods div sarb imull imul stos sbb pop pop lahf sub push add cmp fs jne and mov inc mov out out mov sbb (bad) sbb sub inc or adc cmpb idivl inc lock ljmp and nop mov add mov movl jo xchg loop ss sbb push push jl or mov xor fbld or mov jnp ror jne sub imul aam fcmovb or mov pop mov fidivrl test hlt dec push push pop loop test pushf (bad) mov jecxz out jb test int3 (bad) push lret (bad) mov imul nop aad dec inc in sub adc add mov mov movsl ret cmp pusha or adc ror push inc out mov incl (bad) xchg call cmp jbe nop dec movsl xor push gs adc rcl push insl mov xchg and inc ss xchg gs popa xchg mov lahf adc (bad) popa push jp call pop and notb aad jbe dec scas and dec or xor and jle mov (bad) call sub xchg inc cwtl jo dec (bad) mov (bad) fcmovnu or adc scas lods (bad) iret pop in pop jl sub addr16 test push nop popf inc pop aam mov inc sahf insl cmp or mov pop push fidivr and jge sbb push push pop push in sub xor fldcw movsb or pop jb jne cltd cmpsb das addr16 outsb leave shrl pop sahf jl inc mov (bad) gs mov popa test sub cmpl xchg aam stos mov outsl out ss dec loop (bad) dec int mov das adc push insl mov sub inc xchg sbb daa and jbe xor pushf jbe (bad) jb test fadds xor mov shrb inc cmp sub mov and (bad) adc jae mov cltd adc (bad) lahf push aas mov fistl arpl pop mov in mov int3 inc mov add xchg int3 xchg (bad) sbb cwtl add push fsubrs mov (bad) mov dec or out (bad) mov bound repz mov cmp and call cld in adc test roll mov or mov inc cmp or je and in dec sub pop mov or sub fimul icebp sbb fisubrl adc mov and loop fsts fldcw (bad) mov xchg out mov dec std (bad) mov arpl sbb aas mov xchg fdivrl es in outsb cli dec mov push mov cmp (bad) fsubrl test cmpsl out jmp cli fidiv or fisub jnp push jnp (bad) icebp pop adc jbe mov popl xchg xchg xor mov lret lret ljmp jb and (bad) xor xchg rdtsc ret jo inc mov mov negl cmpsb xchg repnz les ficomp enter sbb nop xor push lcall insl push aam push push fisubl pop imul (bad) rcl shr and dec sbb push lea jmp or fcomps data16 lock pop loop je imul faddl or daa ljmp mov lock cmp shrb sub push adc xchg cmc arpl outsb xchg push mov cmp push fisubr rcll or jg (bad) cs sti rcl push push pop sbb pop lods pop das cmp ret pop enter cmp xor mov xor jge popf fs mov cltd test mov adc fs cmpsl push pop cmpsb mov mov (bad) cld imul call call cld leave popa outsb xchg sbb xor mov scas sbb xchg (bad) hlt xchg mov ror shrb pop push mov cmp dec repz ljmp sbb out je add jbe adc cmc sub sub mov loopne cmp xor push jns mov (bad) adc dec jne sub pop cmp or xor jnp sbb sub adc aas pop pop dec push sahf or dec leave push sub mov or andb mov sub fucomip cmp repz mov scas outsl sbb daa idivl imul in ret test call add jns int inc mulb rorl xor vandnps inc push sahf sub in repnz pop inc mov inc (bad) cmpsb jg mov ffreep in loop or fs popa shrb push addr16 fcoms xor cwtl adc addr16 jge in jb loope mov cld data16 dec push push push mov dec mov addr16 dec add pop sbb stos add push adc mov push outsl jg dec repz mov adc mov das in sbb mov dec xchg sub xor (bad) add aaa xchg and mov inc jne xor and mov ret mov and lea out fsubl adc das adc cld daa lock sarb or daa lock sarb or daa lock sarb or daa lock incl add jle out add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mulb add add or or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop and sbb xor (bad) aaa fnstenv insb dec mov in insb (bad) pop out jge xorl pop add leave sub add inc push push and lcall or xor aaa jge push xchg repz addr16 mov fadds insl lods mov popa mov xchg mov sarl add xchg adc mov mov outsb subl xor mov xchg ja adc cltd jae dec sub scas adc aam sbb mov add cmpl push jg mov or sub xchg (bad) cmp and dec mov nop nop xor pop inc adc mov stos pop xor jb aaa mov xchg test mov add icebp mov int push loopne pusha rcrb sbb mov aad sub movsb and lods lcall sti xchg mov in dec mov in mov push (bad) (bad) jecxz jmp jp pop pop (bad) (bad) fwait rcll xor adc push mov cmp push arpl fldcw test push inc into xlat sbb pop xor test iret pop inc faddl sub lds fwait shufps sahf xchg mov loopne jmp sub inc rclb pop dec inc loope out inc mov mov jae loopne sbb adc xor (bad) cmp cmp and sahf adc test imul cmp or enter addl (bad) enter stc sarb pop cmp sarl xchg sub sbb mov call mov mov xchg push push fst mov sub add (bad) cmp fidivr mov xchg out ret push loope das div std pop dec jns jl loop jb sub pop mov push ja insl imul mov jo stos sbb push es jecxz bound cmpsl push outsb mov jl fadd and les lahf loop fldenv fucomip or xchg cmp out mov xchg bnd lods (bad) fbstp push repnz jmp loope mov mov cli jg hlt rol and cs divb pop popa mov je mov add in sub push int3 cltd mov shlb dec adc stc adc xchg stos test mov cmc aas mov lcall cs push dec sbb jne xchg xchg sub stc add das add jle xor (bad) push (bad) pop sbb sub imul cmp fwait lcall dec xorl lods sbb xchg sahf fbld ds fbld pop pop sbb inc loop aas leave sub fwait repz out mov std pop or insl (bad) jecxz enter sub fistpl rclb lds scas test (bad) hlt stos lea lahf sbb xlat (bad) repz mov pop sbb xor xor jmp mov push hlt jmp xor stos repz cld int3 jbe cmp lods std adc mov lret push inc les mov jmp das jg loop cltd cmp bound xchg cmpsb cmpsb inc std mov ds and and jmp cld rolb fcmovnb loope bound jl out pop stos jg into fldl les negb int3 loop lret mov lea (bad) movsl aas or hlt jg xchg je jnp or js scas xchg and lret data16 inc (bad) mov or fs (bad) rcr dec in push dec bound jbe (bad) sbb stos nop mov mov dec out cli add mov jmp (bad) fs add add aas shrl or mov lret lea jbe dec xlat mov adc roll (bad) or data16 es add enter sub mov push and fisttpll push test int xchg dec leave mov addr16 mov sbb inc or push and cmpxchg mov sbb xchg das pop dec and cltd test stos mov leave mov or mov cmc dec es popl cwtl xchg (bad) mov sbb mov scas sub jmp push xor das jae sti mov lret (bad) inc xor (bad) fcmove mov mov loopne imul in dec cmp mov lret mov mov sub inc xchg mov insl mov pop mov mov pushf pop and loopne and mov sbbl ja cli push out scas (bad) shrl mov arpl push xchg popf test in push fdivs mov xchg popf sbb mov lds lcall push lock outsl pop jno test xor test dec ud1 xchg xchg xchg call push es push js outsb adc add and das xchg add push push test fisubl adcl sbb mov dec and mov lahf add cmc jecxz nop xchg cld iretw movsb fcos ds mov sbb int3 jnp jno pop fdivrl add bound leave fsubs gs jg push mov xchg es and movsl sub push add jg sbb jge shll mov xor pusha faddl mov jmp xchg xchg xchg mov fldenv pusha (bad) icebp outsb lods rcrb jge (bad) mov test jp test cmp dec mov xchg or aad pushf jo mov xchg sub sub loop lcall test stos cmp adc divl aas fdivrs pop addr16 lods cs lods lds and ja fucomp outsl outsl sub xor mov mov addr16 sbb ret or out pop jp or jns les addr16 jle adc inc lahf lods or push mov (bad) mov or cmpsl lea movsb adc mov inc push gs dec cs daa add pushf in mov jb sbb int3 lret jge ljmp dec in pop scas sbb (bad) sub test pop push mov mov push mov lds call cmc push ret aas mov mov sub inc inc and (bad) cld rclb jns movsl outsb push push mov std pop adc xorl inc movsb mov jmp stos cmp mov test push ds out leave (bad) ljmp jo add jne and lods cmp movsb js clc (bad) push mov cmp add add in stos mov fs add pop push fcmovbe pushf xchg jecxz adc push xor xchg jbe cmp inc imul lahf fbstp mov sub test push (bad) fistpl add lret sbb jne int3 cmp dec jae icebp push repnz push cmp or mov sbb xor loopne stc shrb mov (bad) out test scas popf mov xchg mov jno popa int3 lea movsl mov or push mov pusha push out dec cmp pop loope xchg arpl (bad) jno add mov (bad) out ss test loop dec cmp popl sbb adc inc pushf and ljmp push jno mull xchg push fidivrl push out cmp jns and jno cwtl incl scas (bad) pop scas in (bad) lcall leave xor mov jbe mov lret fnstenv fisubl notb jmp cmp mov push test dec xchg and sahf fstps and bound mov movsl fsubs sahf sub cmp mov shrl ss daa jecxz xchg xchg out ds jmp (bad) lods pop push mov inc jo fcomps imul jns or loope mov mov sahf mov and pop pop jge fisub xchg inc call (bad) mov lods stc add aad pop faddl pop in movsb lods sub shrl (bad) fsubrs cmp jnp xchg incl ja sbb test movsl adc xchg mov and cmp sub xchg pushf test or (bad) lea mov sub mov outsb cmpsl jb and test daa jnp hlt xor rcr cmp add dec or mov sub lret or daa pop push jmp aaa nop loopne in jo sub call xchg and xor push dec stc jae aaa xchg in insb mov xchg dec stos out stos lahf add xchg adc mov jo cwtl gs test inc test pop inc sbb das push cmp fisttpll mov add jns mov pop add jmp (bad) dec int or jo xor mov movsb (bad) in cwtl ds dec push lret pop js xor pop push insb es mov arpl notl sbb in (bad) int3 sbb fild (bad) loopne stc lds out ret arpl mov (bad) lds sbb out cwtl xor clc add cmp sbb sbb lcall daa xor pop loopew jnp,pt jae push loop leave mov mov rcr lods cmpsl leave push pusha inc in data16 pop xchg jl divl jp bound lea fcmovu ret hlt dec lret cld mov mov adc dec insl xor int xor or xor (bad) jmp daa cli jl test xor clc sbb mov push shr rolb dec out pop (bad) xchg addr16 shrl ret inc into das movsb test or or or xorl push clc sbbb scas jbe adc mov cltd pop inc jecxz pushf xlat (bad) (bad) cmp and sbb (bad) lret rcrl adc (bad) repnz mov sti imul cmp jg movsl adc cli sub mov arpl sub call push ficompl lods fstpt ss sub push je,pn lret mov cmp cmp xlat iret faddl movsb push ja adc (bad) mov add xchg adc inc sub mov pop cmpsb sbbl insl fldl out mov sti int3 aaa jmp pop les adc and add int sbb and adc aad cmpsb in cld sar iret stos das test mov adc mov adc mov in fucomi addr16 sbb sbb imul out ficompl notl into flds (bad) (bad) in jmp loop call int ficom fwait sub fist lahf (bad) (bad) jle dec jno nop push cmpsb test pop stc stc lock add out push mov jle mov nop test mov out cli jmp push aam jns pop inc int3 notl mov ja mov cmpl mov pop call xchg push cli in jg xor shrl push jg xchg xchg flds daa jo xorl fidiv int outsl xor mov xor sti fucomi xchg (bad) dec in dec mov lock dec adc ret add jecxz jnp mov mov xchg dec movsl das sub out push repz incb das repz lock add addr16 je or inc hlt pop imul leave xor add or loop mov ret pop xchg loope sub (bad) mulb sub adc push sbb xor je lock sbb jns jne popa ret dec mov mov fwait add sbb fildl aam push xor mov cs loopne int mov jae cltd mov ret (bad) outsb xor sbb push adc enter pop es add xchg mov sbb fnstsw sub popf push push dec cli aas jecxz shlb fldcw setno or test push cwtl lods dec ja sub mov adc cs mov insb ror lret test pop (bad) cmp xor dec pusha in ret xor add mov xor inc add pop ljmp mov pop mov fsubrs fdivrl inc es idivl (bad) es in stc mov nop movsb movsb inc adc add jae mov xchg lds stc or mov or arpl leave (bad) jp sub sub outsb aaa shrl xor lock sbb imul inc in cmpsl outsb (bad) (bad) cmp cwtl dec and inc xor popf add clc arpl fchs mov mov or insb adc inc pusha mov sbb add inc push lret popf hlt inc aad (bad) mov push and je (bad) enter mov (bad) dec addr16 push jg xlat cld ds jmp mov enter mov movsb sar xchg ret pushf pop out scas sub nop scas xchg xchg push cld or (bad) mov in sbb out call es decl pop jo (bad) pop std ljmp sti cmp ja or cmpl mov dec pop cltd dec arpl fisubr int jge xor xor loope jae sbb dec mov push xlat xchg lds incl fdivs add mov mov imul outsl sub or or (bad) leave cmp mov movsl mov or or stos add fldl flds pop push xchg out and je xchg pop dec hlt movsl out pop sub (bad) pop movsl cmp in push mov rcrl mov mov pop ror mov jg loop out cmp imul pop cmp and cmpsb inc insb mov std js adc sbb ret cmp iret shrb pop test iret (bad) out negb adc out jae cmp mov fsubl js in lret push inc sbbb enter sbb or inc mov pop xchg (bad) jb adc cmc push cmp adc inc fidivrl pop xchg mov xor fistpl mov and lea lods mov cmp mov ret dec adc add ret cmp into xchg jo nop enter or push push add lock adc jb movsb mov adc cmp xchg add pusha add push jae,pn sub cli push out cltd xchg aad in (bad) push jmp dec adc sarb dec cmp aad push add fdiv repz jge adc movsb idivb fdivrs aas rorb dec fdivp rcrw xchg jmp test in inc jb (bad) decb inc sbb pop (bad) lea xchg inc inc dec nop popf ret xchg pop mov cmp and jae rorb int imul loop jae leave fs add adc arpl ret lahf xor or push mov mov sbb mov dec cmp cld xchg sub ja cmc cld fmul fwait xor inc (bad) mov cmpsb mov aad enter push ja xchg or pop repz cmpsb inc enter roll mov cmc xor jmp mov clc aam mov clc cli stc jnp loopne out mov push fs je mov sbb bound loopne xchg mov dec cmpsb mov jb inc cs ljmp jbe (bad) lods test mov xchg sbb ljmp pop sbb xchg lods ret aas movsl pop (bad) adc or outsl inc add and cmp mov or stc dec sbb es dec imulb xor call push ret mov lods cmpsb daa cmp or int3 rclb loop push adc push xchg mov and daa lret jg mov test or sbb call out or in popf pop fsubrp ss pop mov enter imul mov jae movsl lods lcall (bad) inc pop ss shrl psllq (bad) in out dec loope out mov adc jg cmc (bad) lret xor xor ret jge cmc vmwrite sahf sub jle push xchg inc sbb faddp mov or adc cld dec lock ret pushf cmpsl popa in jl pop cmp leave jne loop pusha jmp or push xor adc mov fisub fimull shlb fistpl mov popf nopl mov cli or mov mov mov adc lret push and jmp scas or outsb loop lds push jl add popf sbb lea sub sahf add or ja gs xchg push mov lods shr push ds jg stos dec in (bad) jmp leave xrelease fs mov cmpl out sub push rclb xor lods popa pusha and mov inc or outsb out aam jmp ret mov icebp cld scas lcall mov xchg pop xor mov add orl cmpsl pop in mov into pop rcll sarb fistpl mov inc sar mov add mov dec mov xor les nop pop call dec pop mov cld jp sbb xchg outsb mov lods addr16 jmp cmpb adc movsl stc mov mov and stos push test lret stos or mov das cwtl add xchg lods mov mov insb fild sub hlt ja adc stc (bad) jbe mov fisub or mov mov cltd in xchg icebp mov xchg fnsave and push sbbl dec cmp jb xchg xchg lods and int pushl push lcall (bad) cld mov fwait jmp dec xchg mov int jb out inc mov out js aam sbb inc lods ficoml mov cmp mov xor icebp dec enter (bad) dec sbb sarl xchg or les insb ds pop cmpsb ret (bad) jo repz xor inc mov mov xlat (bad) xchg push inc inc push cltd js sub sub xlat adc repz paddw ljmp or lods cmp jmp mov xchg push push fiaddl negl fistpll mov lock sub jne (bad) mov adc aam lret aad jo push jge push int in mov mov and fldcw xchg xor pop imul lret fsts (bad) mov movsl xchg movsl call adc scas lcall divb adc and ret cmp pop dec cli push xchg insl orl add xor lock mov out ficoml mov fistp pop add lods xchg pop mov mov fstpt rcr jae insb and mov rcl push test icebp movsl mov negl xchg cmp push outsl push cmc push jns mov mov lret xor mov arpl scas mov xor sub (bad) add pop jns jge push jns pop mov xlat loop pusha pop mov fwait mov mov (bad) sub call test mov rclb xchg dec cmpsb jle or fldt dec sub jo dec or dec movl imul push pop test test loope bound pusha insb sub fild nop lock mov lahf lahf lods add cmp arpl pop sbb cmp icebp xchg sbb add ficoml jp mov dec lds dec dec dec enter popa lcall sbb lods mov addl enter fsubp inc jp cli daa (bad) lret or fistpl dec jle xchg ja cli jmp adc push in aam and mov dec adc inc stos xchg cmp rcrb pop mov cmp lret mov push adc mov xchg decb adc sub (bad) or outsl mov adc push jmp xchg mov pushf (bad) scas lret pop mov enter push jle pop and mov mov int3 dec outsb push push xor push pop sti in mov mov sbb inc sbb loopne pop sahf lods jle xchg je test dec ret icebp out call outsb lea and mov bnd hlt scas out bswap sub (bad) test fisubrl sti pop call sbb rcrb xor test fwait inc mov fistp stc test jmp mov xchg lret push sbb mov sahf pop dec or inc jbe mov scas icebp jp sub (bad) lock daa imul xchg mov popf dec dec mov mov sti lods push jno arpl leave std outsl jno xchg cs jo pop fwait rol mov (bad) adcl outsb inc aad dec or add leave mov sarl iret cwtl lock fwait mov cmp mov sub mov sbb mov and or iret stos cmpsb iret sbb inc pop fistl (bad) je jl pop xor (bad) lods inc sbb inc inc mov je xor aas jmp int out stos mov es pop sbb push daa add xor adc push movsb add lods jno adc addr16 xchg push pop xchg cli pop loopne sub jae (bad) ljmp pop loop mov lret pop mov int3 sti dec xor and and ret outsb (bad) popa dec jb pop inc (bad) fildll int outsb xchg dec jmp jne inc iret mov popa jg ret mov imul mov (bad) pop data16 repz pop inc int jns add cmp mov fs mov icebp cmp xchg push ret pop fimull aad dec mov xchg lsl outsl and xchg push jle add adc ja jbe jno lods mov loop lret int bound lcall pusha cli xchg sbb pop int3 outsl or jne pop pop dec test sbb lods push pop ffree xchg jae xor mov xor mov nop adc sbb adc cmp xchg lods add mov cmpsl dec sub dec xchg jb sub mov mov sub inc incb inc lahf jae xor inc add pop jb lret mov out add lock push xchg sbb dec adc in mov lods test sub pop push ret jns cmp inc arpl jle aad lock arpl inc sbbl jmp push xchg iret sub mov add mov push das (bad) ret cmp mov jecxz test sti add mov movsb cld nop (bad) (bad) in out jg pop push aam cld lds xor daa (bad) sbb push mov stc ss pop (bad) outsb push into mov call (bad) jbe xor stc mov add addr16 stc mov fimul ds lcall mov sub push ret cmp ds jp mov sub lea fs push sub lret pop (bad) rcrl sbb movzbl je ret mov (bad) gs xchg mov jp push mov sbb scas loop lahf jb mov je stos and les sub mov in and insb xlat push cmpsb mov mov dec stc add pop adc loop in ljmp xchg jns int je jg out push loopne add mov jbe lahf mov inc ret mov mov or shlb aam daa cmp pop jmp cmc insl (bad) mov (bad) sbb push outsb mov stc inc inc and fnstsw xchg fiadd xor (bad) stc fcomps jnp xor sub test push add xchg mov outsl aam xchg inc pushf pop movsl adc mulb dec push xchg sbb roll adc and pop decb inc shrb (bad) push jns orl sti hlt insl sbb dec jmp sub je sub test cli mov dec (bad) ja fucom sbb pop idiv repnz cmp decb adc mull hlt xchg sti push lds and fcompl or bound dec dec adc push dec fs cwtl add xor sub jl add stc inc xchg mov sahf (bad) jp sti push sti (bad) push out push fisttpl push cltd lock scas (bad) sub rorl stos test arpl and mov rcrb mov jne push nop lea or mov jne mov xchg mov scas adc xlat int3 sbb cmp inc in push loope insl loope sub jmp inc int3 inc das (bad) mov xchg mov mov push imul mov les dec (bad) jb movsl imul pop xchg cmp or out xchg and nop mov pop lcall lods repz mov repnz add shrl inc push adc ss (bad) push mov (bad) cltd jge test (bad) jge and fdivs inc (bad) test pop xchg cmp xchg mov sti or (bad) xor cmpl fs jecxz insb mov push mov lret pop (bad) je push mov jge mov xchg insl js xchg sbb in ret ficom xchg pop inc in lahf jne push jo push adc push scas mov dec cld popf lods xlat das stos hlt jne cltd pop cld outsb push xchg sub rorb int mov scas pop (bad) lods aaa outsb (bad) bound xor movsb fisttpll icebp add mov jns and cld push ds scas add fnstsw decl cld daa lock sarb or daa lock sarb or daa lock sarb or jg clc aas mov xchg fstpt add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop and popf fistl es into mov jnp in (bad) mov out pop out aas loope (bad) xchg popa add inc mov add add test lret xor sbbb shll clc mov push sbb (bad) pusha enter stos fadds stos fadds movsl xorl sub push jecxz push mov sbb adc out sub bound xchg (bad) movsl and mov jge xchg cmp mov scas mov xchg sbb movsl loopne arpl (bad) or (bad) dec lret dec and pop ret das inc adc xchg sub push sub pop (bad) clc adc lcall gs loopne outsl inc call xor push sub push push lds negb sti lahf push add shrl ficom data16 aas cmp (bad) mov pusha inc pushf insl orl inc push pop iret aas ret pop or pop jp xchg xchg dec push fdivrl in pop adc frstor mov ja xchg mov push (bad) lock inc jbe (bad) pop stc imull stc pop shlb lock push ljmp mov shl outsl fmuls xchg outsb pop mov mov add push xchg not lret enter fwait push pop mov cmpsl jmp jae xchg push inc inc push push push pop mov jle iret scas jb or inc cld add (bad) shrl mov ss xchg mov adc arpl mov xor push xchg (bad) out out in (bad) icebp add sbbl mov or lret js test cwtl jae sub loop subb (bad) icebp push nop data16 outsb cmp lods mov leave rol repnz mov cmpsl imul or ljmp out call std inc jnp xor and aaa jmp sbb ficom xlat sub sahf jle sbb mov (bad) loope add cs jae cmpb fs mov or icebp addr16 push mov fs (bad) jo loope mov loop adc repz dec scas popf adc popa mov outsb dec jecxz cmp sbb push cmovbe pop in imul imul cli mov jp add cmp movsb pop jmp js arpl psraw test insb mov mov or (bad) (bad) mov lcall sbb mov xchg addb sti arpl xchg jns adc je mov out mov inc jo mov add adc daa cld cmp inc nop lcall leave scas fcmovnu ret orb jo aas xchg sub in jl fist fstpl jbe aam int adcl decb repz sub inc push jle and scas sub xchg xchg imul add pop inc fstpt aaa sub and inc cmpsb lods roll cmp enter addr16 iret jno pusha repnz push rolb (bad) stc adcl stos add (bad) xor jbe rcrb bound pusha arpl dec ja imul sub les xchg out mov push ja jl stc jae cmp ret (bad) lods lret (bad) (bad) sbb mov and cwtl cwtl cmp or mov sbbl sbb test sub jb pop cli or call pop add ret xchg int3 bound mov or rcll sbb mov mov xlat les cld inc dec jmp xor shll outsl adc xor daa out inc and outsb jmp inc mov ss cmc dec stc in cltd inc lahf and imul mov std movsl roll imul popl icebp push cmp mov imul add mov and imul or test push js xchg mov adc jne (bad) ja pop or int3 push lea jns sub mov fs or xchg sub ja stos sub mov pop ja stos std push mov cld push scas pusha jl jecxz jle adc scas sub add pushf fstpt and adc jecxz idivb pop shrl repz scas add iret insl sub cmpsl sysenter mov fisttp cli outsb mov into fwait lock test adc in shlb (bad) jecxz decb call data16 inc mov (bad) xchg dec or sub (bad) clc adc out (bad) sub dec js lcall insl mov mov mov hlt and les repz int pop das xchg mov fs addr16 push fisubrl jo lahf cld xchg adc jbe lret mov xor out jbe jbe cs mov pop (bad) and dec jle stos mov rorl pusha test jp sbb cmp sub inc lahf jns daa add mov inc mov shll ljmp mov in adc dec sub movnti leave or roll fistpl pop aaa aaa adc xor test jbe mov sahf out jno dec dec push mov es jecxz sarb pop sub rcll aas xchg in sahf jnp test ret adc jae pusha pop imul xor jnp mov mov sub fs xchg fucomip mov roll insb jmp pop cmp sbb lret mov xchg jecxz xchg repnz imul xchg (bad) mov jnp mov jecxz dec cmp sub hlt add and sub (bad) xchg push push ja repz fbld dec jmp dec in fsub mov imul jmp push data16 loope or mov xchg jl in mov xchg inc cwtl sahf jp pop (bad) xor mov das inc or push mov fs icebp out in mov or repz bound lock iret sti popa mov les hlt mov jmp and lret mov (bad) icebp push icebp jecxz sub into mov lea stc sbb stos subb push int3 add push inc or add xor inc out repnz (bad) movsl test out xchg lds ror stos adc cltd out js pop pop test sbb cmp loope cmp negl xchg cmp dec stc or (bad) icebp fisttp dec test cmp test sar daa js cld out mov fadds (bad) fdivs ret ret fistpl adc inc lcall arpl loop loop adc mov jg sahf xchg sub sti aad adc fisubr stos lods ss cmc mov mov fstps lock jbe cmp sub and push jl test pop imul fmul adc pushf inc mov out test outsl push sub data16 leave sbb jb add and pop (bad) pop adc cltd mov arpl push (bad) or stos js and mov jb daa jbe jge mov aam sar push xor in jnp pop push mov mov lods sbb push sub icebp aas roll or sbb mov adc inc popf push fsubr cmp test cmp test bound imul adc xchg lods and sbb cmp cli iret pop mov rol cmpsb addr16 sar in loopne test into cmp fnsave jbe sahf push lret pop xchg mov fwait (bad) pop inc orl jnp lret repz fnstenv scas xchg je push sbb rorb jnp cwtl push in in cmpsl ret stc outsl pop jnp add insl fwait lret pop leave or outsb or (bad) sahf cmpsb in push jmp and push lahf pop push mov lea (bad) rclb sahf in pop or pop mov mov mov je scas (bad) pop mov jle and (bad) or or jl lret mov lret and sub push pushl stos xor stc fwait push jmp jo out or and xchg push iret push xchg ljmp mov xchg cmp stos leave or sbb popa sub lcall jns adcl mov dec push xor or push bound push push cmp xlat (bad) jle addr16 ds inc (bad) in test aad std inc stos (bad) push and out mov mov push cmpsb mov lods jae and popa xchg mov in mov icebp fwait adc jecxz insb cmp test mov dec incl mov add xchg mov movsl mov daa adc pusha aam stc lahf arpl lret ret xor rcrl jg pop xchg test or xor add and push xor or or insl mov fistl sbb bound or (bad) pop sub pop sti repnz fcmovb mov jne xchg fsub pop rclb hlt adc sub jb jp imul lods in xchg arpl sbb mov or inc inc pop push and push jae xor js pop push loop sub push pop das sub loopne xor jo mov ss ret lret ja (bad) int3 leave sub in jbe or orl adcl xlat fs vmovntps sub pop btr int3 cltd pop out mov pop xchg data16 lds mov cli ficom inc std pop repz xchg fbld push mov mov out aam ja (bad) arpl sub in ljmp lea out std sub pusha or andb fnstenv adc lods out inc cmp (bad) or rcrb mov cmp and mov sti (bad) repnz dec pop test pop jl lock ret adc inc fimull mov push push jge cmp dec jecxz cmp jnp push es push rorl faddp aas pop fs mov lret and es sub sbb pop movsl jne push push or push mov cmp ja jno inc or mov sbb sbb psraw sahf loope (bad) dec add push inc jb mov dec ficompl test divb decl loope cmpsb cmp (bad) loopne and add xchg rcrl das mov pop push jno icebp cmp je aas aam adc scas push lcall jp dec enter xchg or rorl jo or xchg jae jb ja jle pop sti nop out sub xchg or xchg dec clc mov rcrb les movsb in xchg movsb xchg or mov mov imul stos mov ds push or nop iret in sti mov aas push or cmp dec loopne or push push (bad) push and in loope stc fnstenv inc in dec cmp cld cmp add fimull push jb in cltd mov test mov cmp cmp push cmp adc pop or bound mov outsb cmpsb push xor mov stc xchg subb mov mov jmp bswap daa jno les xchg ret mov cmp pusha add lea repnz cld out inc sahf pop aaa rcll pop mov push loop add (bad) enter and repz add ret pop aas dec sbb sbb jnp and add mov jns xlat xchg sub test clc or mov mov cmc mov jno fnstcw (bad) scas cmp pop cmp xchg std cld outsb hlt pusha pop xor test fadds vmptrst mov dec xor lods mov loope jmp movsl scas mov cmp pop outsb pushf push out and test xchg addr16 xchg jle mov xor mulb jo inc daa pop in cld sbb lock dec cmp mov aaa repz cli lcall cmp stc push in pop pop outsl sbb mov mov shl out mov mov insb scas adc sbb mov cwtl pop sahf gs movsb add sbb aam xor adc (bad) xchg fsubp mov pop pushf jo stos adc pop xchg mov ljmp insl cmp adc bound sub adc jbe stos stos lret sbb outsl ret loop outsl sbb repz sub cmp adc scas jge daa push mov jae and lahf iret cwtl outsb xor mov (bad) sub mov outsl enter cltd mov adc mov in push sub int jns setl into je out sbb mov clc jnp cmpsb outsl sub push mov popf (bad) cmp add insb pop inc jne js push push or stos lea mov sub (bad) aad mov int3 xchg cmc xor pop jb sub jle mov jle arpl lret fmull fwait aad popa mov sahf inc inc sbb mov pop imul push enter popa xchg fucomip fsubs mov jmp push cwtl pop lahf cld std cmpsl mov in scas outsb pushf fistpl xor imul xor add std pop iret sub mov mov push xchg adc mov orb xor mov push inc dec stos cmpsl adc mov iret xchg jecxz xchg cmc xor rcrl je dec mov or pop xchg jg imul xor sahf ss fisttpl aad icebp test adc pop mov and fiaddl cvttps2pi das cmp popa ljmp (bad) mov jns repnz sbb inc mov mov jne insb (bad) pop mov outsb sub cwtl decl xchg mov jo cwtl inc loope rol cmp arpl mov or cmp and into add cmpsl stc fdivl jge mov out (bad) cmp movb jb,pn push mov sub insl icebp mov adc jmp test mov int3 inc xchg xchg xchg (bad) sbb push add mov divb fs jmp jne sub aas mov testb enter add popa loope gs stc mov dec fs loope cs fwait cld dec mov push je xor (bad) loop mov int3 mov pop popa inc rcrl (bad) flds or or cli ret jg pop push adc push gs adc xor add icebp or in cmpsl insl adc push sub mov sbb jb loop adc jmp jp fsubrl pop jl and push lcall push and push imul hlt push lds and scas loope add adc sahf lds imul movsb or lods lods cmp jl dec (bad) mov (bad) sub mov mov outsb push xchg int outsb enter movsb addr16 int3 mov mov mov adc add test xchg imul mov sub daa adc in adc int sub or push jl xchg imulb je aas pop stc sbb fiadd or shll dec scas or sahf shrl mov data16 push pushf xor push push jno cmpsl and repnz jns xchg push add sbb xchg add and sbb nop je cmc inc cmp cmp mov dec push dec les mov cmc mov std sbb mov mov aam cmc in xchg mov lea inc push mov jns fsts scas movb jmp xor jae sarl ljmp mov and fwait imul subl inc inc mov sub mov leave sbb arpl pop ret cmpsb test rorb adc imul dec inc lods mov ss jecxz test mov cmp mov int3 inc icebp xchg xchg or das divb jne mov fnsave inc or jge xor (bad) in and imul jb pop sub jbe dec adc fcoms es cmp outsl cli xorb daa cli mov or push sub inc js out lcall push pop jmp cmp sbb stos sbb insb add jl jmp jecxz xchg insl (bad) mov ret dec fldcw daa cld adc fwait dec std dec sub push test xchg dec jns into push xorl ljmp lret aam cmp pop int in sbb hlt mov adc ljmp or mov or lahf xor insl js in out xchg mov dec xlat push xor jp test lret inc mov subl pop xchg mov icebp cmp sbb bound call mov push into pop mov add int3 add mov lds ljmp push mov push or add popa clc xchg out cli xor dec js enter cwtl ss jb jnp aaa lods clc lcall shll imul inc movsb inc cmp andb into mov dec lock icebp mov jbe out or dec fmuls or push vcvttss2si add out lahf xchg mov jns jnp mov (bad) bound xor (bad) mov push ret and dec jae cld mov and fistpll jbe pop lcall out lret call clc pop (bad) das mull cmp pop add repz lea ljmp mov test mov mov mov dec sub repnz mov inc je pop fwait xor roll aad xchg mov test xor jo jo callw es mov js in sarl push xchg push repnz scas mov pop mov dec cltd pop add fstpl sbb cmpsl ror imul inc cld out lea (bad) sbb fwait inc iret fs xor (bad) adc mov jno mov pop mov in fcoml push inc lcall xchg ljmp loope insb lods sub outsl aas out cmp mov inc add pop cltd jbe mov mov ja and test rol jno cmpsb addr16 adc ret test and and insl sti sbb or jecxz and lods sbb movsl in testl cmp fdivrl jns jg movsl popa cld mov ds adc mov (bad) pop push fmull sti or and lods fs adc (bad) jecxz popa xor sbb je loop pop add std mov add sbb xchg je in (bad) sub fmull xor pop in pop aas cs mov pop outsb lods sti sbb pop mov adc aad iret lds jle xchg jmp push fdiv fistl mov outsl or or xchg pusha and cmc or rol add (bad) push lret pop lea pop or out push rolb push ljmp pop (bad) lcall fs mov aam in icebp mov or xor and xchg data16 mov mov push inc sbb lock ds push mov frstor ficom insl and into test cs jge in adc pop movsl aaa call xor sbb sahf mov adc and into xchg mov mov fisubl fistpll pop popf sbb popf push iret aam mov mov and outsl inc xlat rep push jbe push mul mov jae adc sub and mov imul dec insb mov into test push and rclb add outsl mov mov jmp pop or xchg test popf out repz dec pop negl pop aas scas push add adc stos pop cld inc fdivl aas add add inc movsl pop mov test inc outsl inc cltd and pop data16 mov and mov dec dec arpl or bound subb pop repz mov cltd out xchg sbb dec loopne cmpsb lret in xchg jnp add movsb jno inc sbb dec sahf popa add jo pop xlat and cmpsl lock insl loope push mov and mov sbb dec jnp fcmovb mov int and pop scas outsl adc sub lret loopne dec and xor jns scas adc das adc popf hlt push lea push shll ret test lahf mov andl or adc mov pop mov addl test mov add inc xchg cmp jecxz fnstcw push mov cmp push inc xchg xor push in adc inc shlb mov mov leave jl sti mov dec in or sbb xor jge arpl mov cwtl testb sub movsb and jp push mov cmp shrb fnsave mov movsl iret and and or ljmp jmp xchg loope sahf lahf cmp or icebp fistl scas bound and je ficoml iret mov inc cld mov or pusha sahf mov test aas adc mov inc mov stos jbe ja incl loopne jno pop ja xchg rclb mov push and mov mov adc sbb fnstsw cmp ficompl (bad) and add mov rep jbe inc test ljmp xor stos pop adc outsl rclb xor (bad) jnp rcrb aad test jb aam mov push xchg xchg jb add cmp adc adc xor mov cli adc pushf xlat imul inc adc imul add pop mov xchg cli jg,pt mov jns jle arpl mov mov pop icebp adc call nop jge xchg xchg jns jmp dec adc (bad) xchg xchg shrl xchg add mov pop fldl ljmp shrb insl dec in imul inc lea and enter mov xor insb (bad) fwait xchg xchg pop pop jle or out sub push into insl push pusha in ljmp jl inc insl pop popf orl mov mov push push test xchg add int3 mov ror clc (bad) mov fwait sbb or and ss cltd cmp or mov mov pop lret pop adc xchg or lea sub popf cmc out xor gs inc push xor loopne jae push xchg and push jb jmp and stos and jns mov sub or pop sbb in push movsb shrl push or mov divl adc dec mov repz mov jb fsubrs cld jnp loop ffreep xchg outsb push cli sbb cmp lcall (bad) incb test pop mov sbb adc cmp subl into add cmpsl lock es adc inc cmp hlt clc sti loope jae (bad) pop outsb movsl pop out and (bad) mov mov sbb sbb pushf outsb insb cltd ljmp insb jmp cmp cli stos jns (bad) daa (bad) xor push cmp sub out add xchg pop jb xchg push xor fsubp and sub inc xchg sbb scas xlat test mov jmp cmc scas dec test adc mov out jno xchg jno jbe sbb loopne xchg cmp adcl jmp xchg in inc mov call cmpsl pop lods mov pushf in fnsave lods cmc mov push adc and push movsl push add ss mov adc sub add mov or iret dec out icebp mov std (bad) imul and pushl lret fcompl mov std repz dec add mov jb loop mov clc movsb cmp sti mov (bad) mov inc push fdivrl mov add ficoml rol and mov inc cmpsl repz out mov adc dec mov fstl mov push and adc sub out push pop nop pop mov shr les jg in aad add out rorb pop cmc mov ljmp (bad) xchg cmp in inc call test je mov (bad) int3 jno (bad) dec push mov ss mov add xor sbb sub cmp sub daa dec rorl stos gs mov pop pop push es nop push xchg mov ja jge xlat jp push insl cmpsl and enter push in or das imul or and orl ror jmp pop addr16 fnsave mov into jbe shrl dec movsl insl fcmovnbe add push sahf push or out sub (bad) cs cmpsl int xor pushf pop mov xchg cmc fdivl in lahf jecxz (bad) in cmp pop mov (bad) xchg xor jb mov in nop lret adc and (bad) or aaa jecxz mov mov sbb xor ret inc (bad) gs pop pop push cmpsb push lods dec xchg xchg bound push lcall stos xchg jne fildll or add shll xor mov xchg test cwtl iret inc push inc call das fstl push lcall mov xchg test xchg cmpsb xchg (bad) or mov lret jg decl cld daa lock sarb or daa lock sarb or daa lock sarb or jg clc aas outsb movsl lock xor add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push inc sbb xchg insl (bad) fistpl dec divb mov (bad) fdivr jg imul jp lahf pop fild add or add andb push into add stos cmpsb xchg sub mov insl nop push jmp mov aad jne fwait cmpl cltd out rcrl rorl mov fwait adc adc insb jae addr16 pop call daa xchg push dec sti mov inc push in xor and test sbb lods loope add rcr jg dec imul out add (bad) cmp ljmp std call fadd subl test cmp dec mov cmp add mov std cmpsl das add mov sbbb inc (bad) fnop js in sub stc push (bad) lds jne test push pop or and inc (bad) jecxz mov mov and add stc jle jle sbb xchg fsub mov push sbb fildll sarb mov sub add sbb movsb and mov jae lret push xchg lret inc mov ds push sbb or insl xor cs push mov out scas adc sahf cld lahf or xor inc mov ja outsl dec pop and mov sbb pop mov dec pop mov xchg inc or in movsl lret fistpl loope pop mov xor inc push jae and aas test sbb out lcall inc fsts jno pop cld and pop std faddl dec nop xchg dec or ret ja sub pop mov test mov dec scas cmc icebp addr16 xchg out mov push out sub inc sub pop adc mov sarl (bad) (bad) iret push fs cmp iret jg outsl or mov rcll mov cmp mov lock scas shlb push add mov dec jns pop popa es sbb cmp and xor push xchg lods sbbl or pop andl leave outsb dec push lahf jmp lods pop pop pop push mov inc dec out sbb enter inc fdivrl shll aas push or or popf mov fcoms sub adc stos xor daa shlb loope pop imul and scas test das subl cld dec xchg add test and in sahf jmp jno clc xchg jnp jg mov push push lret (bad) mov fmuls jle ret xchg in and test bound cmpb sub rcr push outsl icebp push inc std cmc sahf cmpsl std xchg test roll mov repz xchg aad push dec (bad) sbb mov repz and leave jmp mov sti ja adc lcall cmc jne fwait and xor pop popa cs push push (bad) std rcll sbb movsl jp mov jle and outsb fildll inc xchg xor out aas (bad) lods jge call outsl pop (bad) (bad) jae (bad) push mov sub adc mov add insb cli push scas rorl jmp xor inc sar ds dec lds add repnz clc icebp cmp sub cmp push and push insb or fs adc inc sub jno bound and and std cwtl popf push xor frstor inc aad int3 fdivrs push cs in xor xchg xchg outsl mov pusha mov cmpl (bad) cmp das dec inc jmp enter movsb sbb add bound inc adc outsb les lahf stos add xchg mov (bad) cltd cmp ja fidivl push aad or pop xchg xor adc add jns push cmp leave cmp outsb xor (bad) pop jle test stos push cld lods xchg pop push xchg or pop xor test aas addr16 das ja mov mov inc pop adc out ret or jle sbb (bad) mov push mov in mov repnz fbstp out aam lea out ja cs lretw ficoml add cmp inc ret lret push cmpsb out test mov hlt and and pushf sub inc fidivr adc lds (bad) sbb fs push add imul dec inc jge xchg shr in add or fxch push outsl sub cmp rorb sub dec imul add dec (bad) ret fbld cmp lds push fiadd sub mov pushf les rcr sub fadd aad jns jbe adc ret test lret mov or cmp sub das das jne (bad) int3 loopne jns jae iret pop shll cli int3 leave in loop dec inc popa addr16 adc addr16 xor pushf out sbb or pop ljmp nop mov jmp mov stos pop in out sub and lea xchg int xchg pop xor mov xor xchg (bad) jne fisttp sbb mov push inc aam lcall (bad) xor push aas push mov mov pusha cmp pusha (bad) or stc push lret in mov popa imul xchg aaa push stos xor mov sbb and mov dec mov in push (bad) mov xor sbb adc fs lds inc jecxz push ljmp arpl (bad) ficoml mov mov pop nop or iret mov jne xchg sub sbb or or push pop es nop leave repz xlat fstl xor std jnp inc adc loope dec inc loop divl test push pushf mov cli dec sub mov test rcr push repz movsl mov inc pop repz push push mov pushf pop into into aas in test ljmp xchg in mov push or cwtl stos fsubp pop popa and movsb addr16 call fs dec in push fcoms test mov sahf and xor pop xchg (bad) sbb mov movsl jge pusha jle pushf jmp fld (bad) dec cmp outsl adc dec (bad) aaa out mov aam adc sbb push hlt test imul push popa jno cli enter mov aad loopne int inc fisttpll dec mov push dec sub (bad) pop push ficomp sahf out out mov bound aam aam ret test add jns loopne,pt dec or add push cmp mov das mov jbe sub lods mov imul jl pop movsl fwait cmpsb dec int3 push push xor jns mov fbstp sti xor repnz cs (bad) or in jg (bad) mov ja mov shrb mov in stos push mov mov xchg pusha int gs in repnz mov cmp jne mov jge push sub test out orb add xor push rcr inc popf int int pushf pop dec in mov inc dec jbe mov fadds jnp fwait or gs repnz mov dec cmpsb add fild out jmp add add jne sbb jecxz inc outsb push pop dec mov lcall fimull adc in pop aas mov adc movsl stos nop out or cmp mov cmp pop sahf ret popf jbe jne dec jns sub (bad) out daa jnp clc push aaa xchg insb in mov adc je scas push arpl dec mov mov push sub sbb je repnz push in (bad) movsl mov xchg cmp in enter test imul push ljmp pop adc adc mov dec out mov mov mov cmp add xchg lods inc add inc jae jb rcrb call (bad) mov xor sbb inc insb cltd sub cmp xchg sbb mov out fistpll test mov shrb mov mov pop repz (bad) jae mov cli inc inc sarl cmp push adc out inc inc ss xchg sbb fs stos and jae dec mov arpl pop jnp outsb test data16 add mov sbb sbb xor ss aad mov sbb mov fsubs xchg push jbe mov js lahf or dec mov mov shlb mov mov es mov jecxz (bad) dec mov mov daa (bad) lods cmp inc aas dec ss mov call mov jl (bad) jne pushf fiadd out mov bswap popa (bad) clc push movq lds jb into sub xchg sti dec ror or xchg sahf out sbb cli inc ds mov or adc in test xchg pop out sbb cmp leave leave rcl xchg fwait xor ja jo adc pop xchg inc cmp dec test bound outsb (bad) std push xchg dec pop xchg inc xchg cmp les or push pop test je jns xchg xchg mov xchg mov cmp test mov or aas xor fdivr xchg dec mov mov lea xchg cmp cmp icebp lcall ret jnp je sub sbb ficompl sub test mov cmp in dec (bad) push pop shrl pop loopne inc adcl mov xchg xchg ss pop cli (bad) stos (bad) and add adc sub jb lret movsb int repnz sbb cmc inc and mov mov or push cltd pop aas rolb mov xor rolb ja inc inc dec dec jecxz xor dec jbe cli sbb cmc into loope ret or iret jno rclb xchg xchg mov insb dec shrl cmp stos (bad) sub push dec xchg mov into in insb push lcall loopne pop adc pop cmp pop das cmp push mov sub push dec (bad) popa dec sub aad in push and daa jg jo js pop mov das aas sub add mov cmc loopne stos mov push push pop dec icebp (bad) jo out insl rcr adc ja jle ds adc mov cwtl add cli pop mov inc gs cmp xchg mov fbld mov jge sti dec xchg add (bad) int lret adc pop cs (bad) ss das fbld pop enter insl mov fistpll push add inc mov mov xchg stos jae adc imul sub push mov sar rcrl mov sbb iret mov ret fild xchg scas and in push ret inc and inc and ffreep sbb sbb cmpsl sbb push pop fild mov mov pop ss add push jg div int3 mov pushf push ljmp cmp scas out rorb (bad) ja scas bnd and in push pop popf sbb into mov push mov jge aas addr16 mov fnsave mov lods mov adc enter rclb mov xchg cs mov es js jg in cmp adcl mov xlat sahf and ss lahf jo ljmp imul into push and add lret lods xchg add insb fs pusha mov test adc (bad) ja pop jbe ljmp xchg xchg fnstcw or mov mov outsb xchg rcrb pop fwait or jae mov lret xor jp (bad) add xlat std insb push insl inc scas jp xor xlat mov imul dec sbb adc decb pop es xchg (bad) (bad) mov adc adc inc push or aaa mov sar xchg enter in scas int xor pop in pop sti sub or or rorl fdivrs loope adc mov aam arpl idivb daa inc outsb pop stos xor jae add sarl (bad) xor dec stos jbe mov movsb and or xorw push push push cmp pop rcr jns jmp xchg in (bad) (bad) lods int3 nop std aas test je xchg dec rcr mov sub lcall cmp cmp jno xchg xchg out jle pop aaa pop or and sbb fistpl mov test sub jnp stos pop adc orps pop add sbb (bad) idivb (bad) mov cli pop inc pop movsl dec dec xor popa (bad) frstor loope add neg scas inc (bad) lods in add xchg out outsl std push in inc push push jae mov inc add or xchg pop mov shlb pop pop pop loop scas sbb mov test dec push out jp into push int3 and jecxz inc test jo cld mov rcl xlat cltd (bad) mov (bad) push aad jno cmpb inc push fsub (bad) sti bound dec imul jecxz lcall dec or jns call push cmp mov inc push adc addr16 xchg cmc out (bad) test xlat xchg ret jg or jecxz addr16 pop leave add bound out pop lcall sbb pminub mov ficom inc cmp cmp adc dec mov and push adc or sti notb test pusha xchg cmp xor push ja (bad) arpl mov fmuls outsb (bad) (bad) stos jnp pop or mov inc adcb (bad) mov pushf jae mov xorl jp push jno cmp mov cmc push ja fstpt divb xchg add scas (bad) cwtl out enter adc xlat mov ja scas dec in sti cli push hlt xorb repnz jno jp or jg ja dec decb xchg cmp jno popf sbb movsb sbb sub cmpsl int3 jae mov or xchg lds xchg mov inc stos cmp mov cmpsb jne push (bad) popf sub in imul dec cld xchg mov enter jge push int inc test jl hlt out jp insl pop fisubrl js mov jle sbb push cmp pop icebp movsb push cmp imul scas repz nop pop mov xchg jge jo push inc cmpsb (bad) mov outsl cmpsl movsb xchg insl push out and mov bound mov pop push or sbb pop movsl adc sbb dec fisubr pop xor and or enter aas jb xor dec push fildl ja bnd mov and mov repz iret xchg and cmpsl ret loopne or sub and scas enter cmp inc pop pop pop xchg clc mov inc jle xor mov insl out dec mov mov arpl mov addb cmpsb add ljmp add mov jecxz mov fidivrl jecxz xor (bad) mov cmp mov and pop push cmpsl xchg mov inc jl sbb sub (bad) (bad) add jae add shr jmp add (bad) loopne sub jnp jbe fcmovne inc in lds (bad) mov ret sub and mov adc pop (bad) enter (bad) mov into mov or jo adc int push xchg fcomps notb fistpll and jge add mov insb pop cmp push test mov mov fdiv mov mov pop dec push icebp insb hlt jmp mov fwait lods push lds in cmp jecxz fild mov jecxz and imul pop add or mov xchg jmp adc test into daa add cmp inc imul or outsb sbb push aad (bad) out or push pop iret scas ficom cs fsubs call fsubr inc scas sbb divl clc ds push add sub test jle mov icebp enter lods and jnp cmp push and addr16 test pop push in cmp inc popa mov xchg sub lods sub (bad) sahf loopne dec push pop mov aas xchg push add pop test sub add les adc cmp pop push iret sahf add insb or and cmc mov fmul xor fldenv cmp mov cwtl out dec xor add mov mov jnp adc jg sti test dec and mov das xlat or lret dec je inc and mov ljmp jnp stos es ljmp popa hlt mov lods inc movsb repz pop rol pop or movsw mov sbb xlat fsubl loop sbb push mov decb loopne movsl mov pop inc or mov and mov push cmp inc xchg pop aad scas jae mov xchg (bad) sub or jb out xchg ret mov (bad) cmp pop (bad) or push jne mov out mov jb outsl pop xchg dec adc imul fdivr push flds nop lods das (bad) ss mov sub lods (bad) mov mov pop adc icebp leave jp outsl jnp cld movsb adc mov arpl lret js scas adc outsl jne jecxz push jo loope mov fs icebp or lcall xchg neg les out pop jbe jg mov push sarb shrl int3 int3 sti cs adc xor push jmp das into xchg out and movsl jg mov push js or and les fstps lods scas sbb mov lods div mov in jae jge jno fbstp int3 push rorl call out scas pushf xchg loop,pn adc fdivr xlat cmp dec in or and out bnd (bad) xor mov add ss repz xor mov push adc push push cli jg cld aam or sub lcall movsb cmp sbb dec rcll add imul dec loopne sbbb push cmp and cmp jl cltd (bad) lods sub dec test (bad) push scas cmp and out cltd mov cmp loop test jmp (bad) arpl popa pop mov xchg (bad) enter xlat jo adc push sbb out mov bound repnz mov push lret repnz push rclb (bad) and out jmp shl jmp jmp dec fnstsw dec imul ss lods fistl adc sahf sub add push dec cwtl loope jmp pusha push mov imul ja inc (bad) dec cld mov out or fisttpll hlt adc pop in sbb (bad) mov int out inc icebp or std cmp test fildl jbe aaa push pop sbb mov mov adc pop popf cmp pop add xor ret (bad) fnstenv fs cltd in pop bound loop cmpsb ja sahf inc mov ja fisub inc cmp mov mov pop or jecxz comiss fdivr add mov sti imul xor loope out loop sbb lret mov add xor and and jecxz jp insb sub mov xchg out cmp stos aas mov inc sbb jp mov stos sbb jg ret pop pop mov adc sbb inc insl push rcrb (bad) sarb jge mov jg (bad) xor jge push out enter aas icebp pop fsubrl dec cwtl sub pop mov push pop mov xchg dec int3 sub int mov mov mov fwait xchg xchg mov push out jb int3 insb push mov ljmp sbb jo pop mov lds jno push inc arpl inc inc lods add jge cmc mov fcoms mov cmpsb (bad) jb jae nop xchg pop shrd mov sbb sub outsl mov mov cmp ret push push dec or (bad) ds or adc jp push les sahf sub inc xor mov ret cmc mov inc push jle in insb xchg sbb pop jns in xchg xorl std jle mov stc xchg andl cmp test xchg xchg in pusha jp cmp and popa stos pushl loope xchg addr16 mov sbb addr16 imul data16 (bad) mov add test addb inc loop daa jle loopne xchg sub aaa fdivs cmpsb (bad) out or mov xchg fwait and fcmovnu into add cmc scas jb es pushf or cmpsl insl lods sarb (bad) and subl shl pop xor sub out (bad) cmp fbld leave pop cltd push out pop clc mov or push testl fdivp fwait push push mov xchg mov pop sub sub mov ds popf adc mov pop imul push jmp add xlat inc call add push in cwtl (bad) mov add fwait inc and fwait xor daa pop fdivrp shrl ret stc (bad) or fistpl push dec loop aad jecxz popa cmc cmp pop (bad) xor adc fldcw out test in lods push xchg decl fldt and int3 sti ret cmovae pop sub sar jnp lods pop push cmp jnp dec int inc sbb iret push push fildl add fisttp or pop dec mov stc test lods lods sub mov outsl push add repnz mov mov push daa (bad) add rcrb fcoms xchg push sub lahf rcr xchg jg (bad) cmc lcall sbb adc push sbb lods pop xchg xchg sub adc push dec xchg inc pop jp dec add enter mov into cld es inc pop ljmp pop nop es shr in sbb aas (bad) out xchg stos pop mov xor and inc test jge stos negl inc sahf sbb push imul cmp dec mov xor pop ljmp cmp cld sbb aad rcrb outsb pop std add mov adc push sub xchg arpl jmp xchg bound movsb sbb sbb mov repnz outsb outsl or pushf xchg rcrl das push fwait jecxz,pn gs mov and and jecxz sbb out mov pop push ljmp jle mov insl movsl sbb int3 inc and cmp jns mov ds push mov ret pushf (bad) out ds jo jecxz (bad) int3 inc in jecxz jg inc pop xor dec es std idivl pusha mov jl cmp lods movb comiss jne out pop lret test hlt or jns rol out out push ss cmp ja or imul jno int3 add sbb pop jmp adc (bad) (bad) cld xor xchg xchg loope or inc inc and xchg pop jne xchg out cmp sub movsb xchg or scas push cmc test es jmp dec out pop inc inc sub fiaddl gs and (bad) sbb jmp jp cmpb into fisubrl add outsb rorl cmc pushf test adc mov mov mov daa or add cmpsb jo xlat jge arpl mov dec xor or cmpsl cld sub mov mov loope sbb mov xchg int3 inc sub or jne dec fadds push call lret push inc ljmp adc call and pop mov into out mov loope xchg jle andl mov in sbbb leave adc sub mov push dec jecxz pushf xor ret cmp jg mov push and ss lods inc cmc pop insl into cmp stos popa inc std adc out mov jmp or data16 bound mov ret xchg sbb jbe dec popa mov lods jp fcompl mov adc jge sbb jo lret daa rorl in cmp jo mov shll xchg int3 cltd fsubl adcl ret xor jecxz sub scas out in xchg or leave lcall ret shl jecxz mov clc or inc adc addl jnp cmp push (bad) and adc add xchg cmp jmp lret cmp repnz test pop xor push sbb push jge cmp loopne (bad) xor fldenv movsb push jo cmp mov lret sub inc pop addr16 push sbbb push push test repnz cmpsb movsb sub mov adc in sbb jne xor xchg adc jb xor ret jns popa mov cs mov cli sti xor mov (bad) in mov sbb fimul mov inc jnp pushf inc std mov cmp mov xlat mov pusha cmp call (bad) aaa aaa iret repz push mov and inc pop fisub pop push popa mov out arpl sbb dec fbld mov std dec xchg shll jne sbb daa sarb mov mov jl xchg sti lods out into sub lret ds add mov lret cli in mov adcb xlat sbb mov add inc jo aad (bad) or cmpsb jmp jge (bad) jmp dec icebp jo or ja clc outsl decl cld daa lock sarb or daa lock sarb or daa lock sarb or daa lock incl scas mov out (bad) push add add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push jbe or mov xor sbb jbe cwtl lea (bad) fstp mov mov fnop (bad) dec arpl pop mov add add dec add lds lock arpl mov add pop aaa pop clc fs iret push sub cmpsb pop popa movsl aaa jbe push push sbb dec pop ret rcrb pop jecxz,pn lahf xchg adc insb ret js mov sub and mov xor hlt cmc sbb or xchg mov js xchg mov std loope mov dec popf inc fcompl inc push jecxz mov loope mov push jbe lahf push aad cwtl xchg std fldcw dec jge add jmp or pushf cmpl jne fidiv decl jnp or out ret bswap add lods dec sub les push sbb add and lret negl (bad) scas cmp les pop jae cwtl mov jo imul iret js pop andl negl adc xlat mov pop test push xchg das sbb out sbbl mov jnp fwait add ret lock or test mov jg stos gs imul mov lcall pop icebp outsb in test pop rclb mov in cwtl jns xor nop ret or stc cmc sbb das or into jno and test shrl push insl dec xor fdivr push repz add divb lcall fnop outsb add mov scas in push add adc pop int das dec xor or int3 xchg xor testl out std (bad) mov sub xchg sbb and in stos xchg pop stos lods rol stc adc fs test push jnp cmp repnz mov pop mov and xchg adc loope adc adc adc pop ljmp pop push cmc out out xor xchg and mov bnd rorl push lock inc mov aad loopne or jmp leave std enter xchg leave or inc or mov push icebp incl aad xor insl dec cli mov jne adc dec jg lahf jl push leave mov add xchg stos fdivs test xchg dec and cli cmpsb jge jecxz in std sub inc je sbb lods cmp sbb fidiv dec lock stc xchg push std xor add mov test jg int3 lahf sub mov mov cmp xor sti xchg cmpsl test stos nop push lods adc push pusha sub aam movsl adc or add xchg test sub adc rorb inc (bad) imul cmp rol mov imul push mov jno xchg incb stc xchg pushf mov aas dec jmp cld dec mov xor gs vpmaxsw xchg fild xor push adc inc (bad) scas lds xchg mov sub cli sbb nop mov xor sub xchg sbb hlt sub mov lds pop mov push lcall add dec clc push pop loop pop xchg lret adc repz inc xchg sub imul (bad) dec addr16 (bad) out sub mov jae add adcl dec rclb repnz (bad) cli push inc insb cmp roll addb (bad) and add sub (bad) int or aaa jge or inc mov cld out dec sub jl fidivrl ss pop iret mov xchg jbe mov adc push mov jle fmuls lea movsb mov nop pusha mov rep jne (bad) mov cmp sbb (bad) mov mov xor fidiv sbb mov jns in mov push stos repnz add stc adc ja inc ss cltd fsubp push loope mull and jp cld adc sbb (bad) stc cmpsb mov out cmp mov out xchg clc or stos ljmp (bad) mov sbb lock adc push shll pop xorl mov das (bad) cmp je pop inc pop mov int shrb jb insb or lret loopne adc cli mov dec (bad) cmp fldl2t ffreep mov iret out adc ja sub notl (bad) or in cvtdq2ps add inc jb mov adc pop (bad) movsl dec cmpsl in insb pop gs add pop pop fsts outsl lret pop rorl scas jecxz jns sub adc cmpsl int3 cmp jns in pop pop int or decl iret pop aaa pop (bad) test jge ret mov fisubr add sbb hlt je xchg mov sub cmc jl dec adc mov loopne sahf push jecxz pop outsb sbb jecxz,pt insb mov fmull xor inc orl dec (bad) and add mov nopl sub ret pop fwait jae cltd les mov shrb out in xor lods pop jo mov or aad pop push (bad) cmp cmpl in xor ljmp rclb iret (bad) and add ljmp cmp jmp adc and orb movsb mov or and setno cmp aad push andb xchg and lret shrb mov cmc inc inc mov sbb push cmc ss mov mov stos sub scas loope sub hlt cwtl imul repz ja mov test or call scas lds out jle inc subb dec cwtl or dec stc and dec dec lods fisub divl dec jmp mov and les inc adc movsb aas push hlt mov ret (bad) ret jge outsl pop lret xchg jecxz sub call pop (bad) call dec pop in xchg mov in xlat push sub inc lret cmpsl cltd (bad) push movsb outsb add dec sarl in out jb jo leave iret cltd push xor nop leave (bad) jae ret iret sub add jmp add push out jg inc pop jge xchg (bad) lret add shrl cmpb xchg xchg mov push xlat pop mov pop cmpsb sbb jae test sub cli ss rorb insl mov push jge aad sub jae faddl jp sbb push xchg sahf aam add xchg xor es imul sub lds mov mov pop mov aaa cli cmp test mov pushf pusha testb ja adc fadd and mov ja jge addl jne out insb xchg jnp push rorb or mull (bad) mov mov in xor adc lds mov or mov mov lret ret and or aas fstp imul mov mov addr16 movsl (bad) jge out rcrl add mov fldenv mov pusha nop sarb inc imul or sub push in mov inc sbb jle stos mov xor sub fcmovb mov icebp lret sub inc imul pop lret mov sahf mov enter outsb push out and mov insl je daa (bad) notl (bad) clc (bad) (bad) xchg outsb dec cwtl or mov mov mov call (bad) push ret loopne leave idiv pusha in jne cmp hlt fistp push divl jge in addr16 mov movsb sub lahf cmpxchg mov orl inc mov divl aas xor and push cmp push stos jmp push mov shrl loope int3 lcall pop cmc and pusha insb inc xchg icebp fsubs xlat adc cld add movl ret sub xor jbe inc arpl lods pop mov xchg popf imul or outsb pushf out pusha (bad) dec outsb jg pop and adc pop jl and cmpsb and call cs mov mov and pop mov andl lock xor cmp lock mov mov mov xchg sbb push je pop xlat movsb fmuls movsb jl jl cltd rorl push xchg jmp fnstenv or loop ljmp adc shr dec je cmpsb adc push cltd loop push dec out imull and mov cltd (bad) mov (bad) outsb repz (bad) mov (bad) sbb lds dec jb pop arpl repz or sbb sub ljmp fwait lahf imul mov jecxz sahf mov xchg push pusha jne out add in dec test mov push lods mov xchg (bad) mov cmp push add pop insl das pop ss stc cmp cmp xor mov jne rcr pop inc or adc xor or subb and lods pop ret and lahf jl jo mov mov scas in dec insl outsl divl bound cwtl xchg int3 xchg fs mov and adc nop xor push movsb sbb fsubl or add stos push pop cwtl int3 lods sbb (bad) lods pushf ret sub dec andb ljmp xchg and and xchg dec call and jno xchg leave pop sub adc (bad) out (bad) movzbl add insb cwtl push xor pushf mov jae push scas lods cwtl outsb jb sbb into jl and ljmp jecxz cs outsl shrb (bad) lret je xor push mov mov sahf mov pop pop mov lock or pop xchg push xchg jg orl xchg xchg imul cmp in (bad) fmul mov ret test cmp inc dec loopne repz add mov hlt jno (bad) ficom gs sub sbb push jo dec jmp jo push sbb sub mov out (bad) fsts lret (bad) pushf incb in (bad) (bad) (bad) xor outsl push mov or mov ret es loopne add jb jb adc mov xlat lods hlt int bound mov in outsb cltd pop test xchg or sti lods in adc into push xor nop xor sbb xor movsl les adc xchg jle or cld out push clc cmp test or test cs jo (bad) insb insl mov fs int cld movsb cld or jbe push push cmp fdivp xor cmp pusha dec aas mov loopne rcll jg lods sbb dec push xchg jns and sbb aas lret fstpl lock lahf or add jbe adc sbb sub pop in jle repnz movsl cmpsl (bad) cmp fsubl movsb or mov mov dec xchg addr16 pop dec inc cmpsb (bad) std int3 xchg out ret jno jl rolb jbe cmpsb (bad) adc jecxz clc scas pop mov xor cmc push aam rcr rol jb enter dec jmp ss test data16 mov xor fisttpll xchg jns xor xchg mov ret sti mov inc pop inc bound cmp add jne dec inc mov loope pop or out jnp xlat ja out adc mov movsb arpl lret out inc pop hlt out push les int jnp pop scas pop in sub push mov sub xchg add out mov stc (bad) or adc (bad) adc in imul or cmp loopne inc xlat jns jae aaa in jne in insb and adc jo stos xor adc jl imul addr16 lahf dec lahf pop pop jmp sahf and (bad) lds mov cmpsb xor push add cmp in mov push das inc cwtl add add jecxz adc repnz inc xor mov sti out cmp and lcall mov cs ret mov jb jno in xchg push dec int pop hlt stos xchg aad and cmp lahf mov popa es cmova lods mov dec cld vcmpps loop add push mov lods leave int3 xchg fwait pushl dec jp out xchg push xor mov xchg push pop pop push push sbb push (bad) cwtl pop cltd jbe mov cmp mov aas out sahf lahf fdivrs xchg lods leave jbe jae xchg idivb pop icebp cwtd cmpl ljmp sbb mov xchg dec negl cmp ds xchg pop les lcall mov cmovnp fsubrl lods jae push lret cli ret scas fdivrs mov mov fs stos push (bad) aam jg sbb ffree push out cmp mov pop mov outsb add mov jnp movsb pop iret call clc arpl xchg fist sub lods push jno mov xlat and jns xor push lods and lods test inc jbe lds seto test fisubl (bad) push inc mov inc inc std mov adc cmp das xor sahf jbe dec lea jo pop cmp (bad) xor fsubrs clc xchg cli or sub aad out xor lea pop jbe das (bad) call sbb dec int3 push popf inc (bad) fs mov scas add xlat and jl mov or stc fsubrs frstor (bad) sub int adc push and inc or test outsl add jmp add fs xor nop outsb cmpsl bound push imul rcl aaa push add push pop out js cwtl sub lahf daa sub stc ds out adc sahf pop mov ret adc sub lds cmp pop add jecxz sub test movsb sub sbb aaa out and mov xchg cmp rol jg pop lea fs jge sbbb jecxz (bad) mov mov lcall push inc ds or and ja push mov adc stos inc xlat stos (bad) push std out cmp xchg and sub or or in out mov mov jg ss nop jae and sbb push dec mov mov jno push cmc jmp cmp mov xor jg lea cmpsl es pop or jbe jns mov sbb or lods sub mov pusha in sbb sbb fcoml data16 inc mov sub add lock sub jl sub xor out ds js jb sub inc push repz cmp mov icebp jae not iret and or pop out jge mov leave arpl or test adc jl vpsubd pushf jle and fwait push int3 jmp mov cmc xchg cmp es cmp mov daa cwtl push mov cwtl mov icebp sti jle std xchg scas sahf jle or push movhps add out dec jg or sub pop jge dec negb cmp aam fisubrl push inc (bad) xchg push push dec imul in (bad) neg arpl jmp or fisttpl int3 jne adc fucomp xchg ja or stos add sbb pop xor push out aas lods or ret loopne nop xchg sti mov adc pop jmp movsl dec cmp sub gs scas xchg outsl adc gs xchg xchg daa dec cmpsb sub cmp xor (bad) push xor jno xor scas cld arpl loop push xchg xor out test mov test push clc mov dec sub les pop in mov iret imul (bad) add pushl jmp dec sbb icebp nop push xor sub mov mov or mov mov cltd in adc push test jno aad sbb lods dec pop shr std pop push cmp and jns (bad) mov dec cmp xchg jnp in es mov data16 push cs int3 dec popa mov (bad) dec ja mov xor aaa aam sub xchg lcall ficoml pop push (bad) cmc sbb cwtl fchs in dec inc mov mov mov (bad) out cmp js lret enter push mov xorl and add scas xorl sarl xchg nop orb aad mov mov sbb aas testb fldpi push sub mul mov mov aad inc sarl imul sbb daa mov dec inc arpl push test sub lea push imul mov push mov inc pop mov xchg (bad) dec mov xlat nop testb leave inc gs ljmp hlt leave dec je lret push andl sbb clc sbb push or imul daa mov push idivl xor xor frstor mov add dec out out sub add push dec pop inc sub sahf stos cltd fcoml rcr mov jg repnz arpl aad push fs jg sub jg inc fildll push xor cmp cli mov mov clc mov sarb inc mov cmc call js movsl cmpsl lds (bad) xchg sar faddp sub punpcklwd jae addb sysenter mov or mov sub popf int3 jnp das pushf jbe iret and mov out mov mov addr16 or cmp popa jge std les jp mov cmp call xor xchg push sahf xchg add cmp cmp bound pop mov jg test outsb push mov and dec in lea (bad) cmc sbb in ret cmovle (bad) sbb dec test (bad) idiv cld pop mov das pop mov ljmp (bad) fdivp mov xor in addr16 push test hlt ret mov enter add adc and lods imull xlat inc lock outsl int3 aaa sbbl loop sub mov mov (bad) divl ret in mov insl fwait ss xchg nop (bad) cmp mov dec test add mov ret aad icebp shrl push daa mov popf (bad) jmp repnz fwait dec (bad) sub cmc test gs xor cld pop sti add fs lods into mov leave mov out fstps pop dec je jle popa dec inc mov dec mov sub (bad) sbb int3 or (bad) sub mov pop jae out sbb pop pusha pusha pop xchg xchg sub xor mov int or repz xchg lods dec out ss inc add and mov push int3 mov lds cmpb pop movsb push dec mov fstps inc lds sbb jb cwtl and inc jmp stos cmp fstl sub add xchg lret ret rclb mov lahf inc dec cld or test inc movsl or out popf gs sub pushf ljmp adc push push aaa inc pop add fldcw out push and jns loop scas imul and inc jmp push ret adc repnz (bad) cmp inc (bad) pop add not jmp mov mov xchg and shrl (bad) test popf add in sub jb cmpsl mov scas and push lcall jne (bad) xor arpl shll imull jp repz jle out dec mov or pop push mov add fnop ds test adc mov xchg jmp add xchg aad ja pop ds cmc jecxz pop cmp pop add insb std test movsl pop or lods nop mov push (bad) stos push fs test lahf daa adc data16 outsl jns xor stc cmp sub jns ret cmp (bad) cs imul mov xchg sub mov mov mov rcl mov push xchg mov mov bound (bad) mov (bad) sub in push and (bad) ret in sub mov jno mov jo lcall test inc push mov cmp roll lds jne sub out es mov or push mov mov xor cmpsb icebp loopne subl push push mov inc in mov jno cmpsl test pop lds cmc stos and dec js test (bad) mov cmp adc (bad) repnz xor cmp aaa dec sub out pop pop inc jae sub mov cs aam std dec arpl aad notl (bad) or cmp mov gs lea or sbb scas mov ljmp and dec dec or pusha and sub inc jp and cmpl xchg sbb jae ds popl inc scas outsl lahf (bad) mov mov and outsl sub mov pushl into push cmp fbld ds cs mov mov inc mov cmp out js js clc out xchg arpl cmp loop int3 orb adc hlt adc lret xor ds enter push es mov pop dec adc data16 sti movsb fdivl (bad) lcall adc ds jl cmpsb mov add scas ja cmc enter push loopne adc sub mov cmp (bad) out jmp mov (bad) je mov fsub repnz out push nop pop stos cld cmc roll in xlat mov mov lea push stc outsb mov dec hlt mov xchg mov leave or rep cmc in lret push bound inc std out (bad) mov pop movsl sti inc fcomps repnz bswap inc lret xchg ret stos stos adc jo lret (bad) (bad) fwait aam arpl and sub adc sub adc cmp jbe notb ljmp cmpsl in mov cmc out add sub jle inc (bad) hlt popf pop and sub js adc in pusha rcrl push pushf fild jne mulb in xchg data16 scas adc add fnstsw enter inc les or sbb loop xchg sub push adc and xchg inc mov loop pop pop in loope sbbl das adc out je test mov cmp movsb inc jmp jmp jns xor outsl lock dec (bad) mov push xor in dec adc lcall fwait mov xor movsl or movsl push dec std sub cmc lods fnstenv out jbe (bad) fnstsw and pop mov jp sti pop (bad) icebp ds lock mov daa (bad) pop stos or mov mov mov inc popf out or into mov in sbb clc comiss mov bound mov mov jnp clc push test mov add xor imul xchg xor shrl xchg lahf das xor push clc daa (bad) fnstcw call imul xor (bad) or jmp inc push pusha shrl (bad) int3 imul add out bound inc cmp mov cvtps2pd insb jecxz xor mov dec test mov inc stos lret mov xchg mov sbb jg outsl pop mov mov mov mov jne imul push and push dec xor scas add push gs ljmp out adc das subl cli in das xlat fstl pop (bad) push push dec xor loope jno sti mov je add repnz xor int xchg flds std arpl ljmp adc outsb mov push fcomps cmp jmp outsb xor pop mov clc push mov xchg repnz push push inc sti std xchg push inc clc fstps jmp adc int3 aad out mov stos fistl cmp test sub xchg cld (bad) xor pop sub ret mov and (bad) popf fbld push add dec push fimul and insl mov mov ret mov sahf push mov rol aad mov aad test enter jge xchg stc addl lcall bound arpl mov cmpsb jno add mov pushf or pop pop test xor vsubss push ficoml and and aam rol pop pop pop pop aas mov mov aas lods xchg enter ss adc push and test push mov fwait adc lods xchg push or popa test pop jp xchg enter inc test cwtl sbb addl dec mov cmc and or lods pop xor cmp out iret mov or clc mov or push sbb add rolb cmp xlat (bad) pop jo xor lock or ds lea fimul adc jo loope (bad) pop imul mov das adc jmp inc sub lods sbb add dec jmp sbb mov mov lock push fstps push jmp lea inc cmc dec inc cli mov jp mov pop sub stos lret mov fstpl aam mov (bad) fcoml neg (bad) pushf push andb sbb mov jmp mov test push sbb je jbe inc adc mov cltd sbb jp loop mov dec loopne cmp dec loopne cmp dec loopne cmp dec loopne cmp dec in (bad) jmp or clc add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add icebp and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push inc sbb mov mov gs (bad) xchg insl fstpt ljmp ret jae add or add add sub xchg aaa movsl cwtl mov iret movsl or (bad) orb data16 (bad) outsb push mov mov jl ja (bad) sub stos xchg pop test sbb mov (bad) mov lods outsb sbb outsb cmp in inc xchg jbe pop xchg or ja dec test dec int3 mov push mov call and push mov xorl (bad) in mov add dec insb sub sbb jbe hlt in dec scas cmpsb stos ljmp pop or call mov mov scas inc in sbb sub mov lods lahf sti lock lcall cltd daa pop pushf mov jge pop (bad) cli add roll sbb into ror sahf push sbbl pop jae (bad) sub push jle pusha fidivrl adc pop ret das shll inc and insl or push unpckhps add ficom mov rclb imul mov mov shll data16 pop dec rolb sub and into cltd mov mov jmp add bound sbb mov xlat dec pop or push repz jns mov xchg mov mov cmp insb dec ret jb ja push sbb fmulp mov mov outsl jp scas mov mov and imul fisttpll mov test outsl hlt inc add mov cmp add sahf push push xchg mov dec notb xor (bad) adc ja or je dec xor lret sub imulb test sub sub mov add or sub adc test pop into sbb lret bnd mov ljmp dec std xchg sub mov repz lret lods add dec inc mov pushf adc cmc push mov xchg out lock scas dec movsl stc mov (bad) enter mov iret icebp int mov cmc ljmp outsb xor scas push cmp repnz mov mov stos lods sbb pop loopne dec sub mov and out push mov xchg lea loop adc and jns xchg gs jle mov jle mov cs jb mov out mov pop lcall fmuls hlt sub arpl icebp mov adc inc (bad) xor or mov out and pop jo add test sub mov and cwtl lret jp dec enter mov add add pop mov mov mov movsl sbb inc xor fcompl push das ss mov mov dec bound pop gs jg inc (bad) gs sahf cmpsl mov jnp ljmp ret jge and or inc (bad) xor add in mov pop xchg iret inc mov fidivl xor fadd stc fisubr stos mov push mov push add jne loope gs xchg sub rcrb pop pop call insl sub mov mov sarl xchg cltd or pusha test fbld in outsl push mov loope mov adc fmul add movsl outsl lret mov adc rcl adc into mov sarb in pop lock jno jnp mov xlat movsb dec in ret rolb mov lahf push jb mov (bad) add push xlat rol cmpsb pushf mov mov dec repnz clc push dec mov jge (bad) (bad) jb shr xor and movb mov fwait dec vpcmpgtb mov add icebp dec aad xor xchg mov push sbb test cs sub xor js add cmp orb out pop fsubl sti add pop movsl xchg cvtpi2ps das leave in push add (bad) stc in call xchg gs xchg out sbb mov test dec scas xchg xor add das cmp sbb sbb pop dec int sub je cmp mov stc stos decl and mov les (bad) xchg add jae int3 jp mov idiv adc sub inc dec rorl (bad) push rcrl mov cld jp ret sub xchg imul cmp scas int3 andl test repnz pop push mov xor sahf and xlat inc push mov fwait cmp sub xor test jg stos gs dec out icebp mov xchg xor cmp sub int3 mov xchg mov mov fdivrs scas dec mov adc cmp dec adc jae clc xchg bound lock in adc sub dec xor dec in test mov lock out cmp lahf outsl jae gs ds rol (bad) xchg push inc push mov sub loop cld jp stc ret cmp jp pop xchg into pop into dec leave and (bad) ja sub int3 ficomp or or lcall mov xchg mov mov push cs test loopne cli in mov insb adc jno push mov imull push adc clc xchg jo cmp fisttpl dec mov xlat clc cs (bad) push xchg ret lea cwtl xchg or adc inc (bad) xlat in mov sarl (bad) mov data16 pop adc popf sbb cli or dec push pop rcrb push gs je and aaa icebp (bad) mov in test push call stos ljmp pop lret or add cmp jno ss pop xchg or leave or (bad) test sub out into sahf mov adc xchg cwtl xchg mov nop pop je (bad) mov popf jno es into imul jle dec test jl fistpl scas shrb stos popa js jp jne or sub shr add into mov lret loope (bad) imul adcl push mov dec jge ja repnz lods mov dec lods xor push outsl cmp fcoms mov fldt les test inc insl xchg fistl push les sub call inc cwtl and jecxz xorl or imul ja outsl fnstenv cmp mov xlat dec add je inc mov lods pop sbb nop mov jbe sbb daa (bad) in jg adc lret adc sbb mov mov sbb jg adc fcompl adc inc movsb pushf jne lods sarl js roll sbb hlt in cmc jle cmp (bad) ret sub dec jns inc push or lret fmul lahf xchg xor into aaa cmc pop xchg cld data16 call imul repnz push xor sti iret mov lock mov jp jb in call cli lock push cmp mov outsb dec dec in (bad) or into mov lret stos xlat inc stos cltd mov mull fcoml (bad) jle sub sarb (bad) adc fwait mov add sub clc sbb es (bad) push sbb add adc test sub mov push and pop sbb outsl push jb push fs push mov sub data16 out sub sub popf mov les jecxz inc mov clc in cmp icebp xor and sub push adc idivb xchg addr16 (bad) icebp xor inc jns cltd loopne mov inc lea xchg mov xchg (bad) dec enter jo jae (bad) dec xchg and push and add or xchg push pop sbb and cmp mov mov add sbb xchg imul mov popf icebp cmp dec clc sbb stc jns sahf xor loopne imul (bad) mov mov out push ds mov lds push bnd aaa cmp lcall fnsave and push sub mov enter ret fisub xlat rcrb daa (bad) in lea std mov lret push xchg jge or outsl fldcw mov mov or int3 popa push sahf mov xchg lock sub and mov addr16 adcb sub fcomps arpl (bad) jne cmpsb sbb or cmpsb xchg ret jmp (bad) and jp mov mov lret aad insb xor aam xchg scas ja into clc inc fwait cli insl fiaddl adc sub push bound stos inc rcl inc cmc and ja stos negb dec jecxz sbb mov shr jecxz int (bad) jbe mov out xor cmp fldenv test popa aad aas mov pop roll xchg ds scas pop (bad) xchg movsb test jp stos mov cmp dec mov cmp xchg xchg out in sub adcb daa fnsave (bad) pop jge outsb movsb daa push popf sahf sbb inc mov push (bad) jl mov repz pushf push and insb pop inc jmp shlb pop dec and fnstenv test inc xlat add sahf leave push js sbb adc mov dec test inc jmp std xchg mov xchg mov sub pop and mov or jne mov sbb (bad) (bad) bound sub ja cmpsw and stos lret sbb adc xor dec push cli xchg movsl les enter sub adc sbb cmpb mov xor bsf test gs arpl aad xchg xor push cwtl cmp dec popf xchg mov das cmpsl and cltd dec pusha jmp out scas movsl ficompl fidivrl pop mov outsb das xchg repnz or mov clc (bad) insb (bad) jg mov out pop ss mov lods adc repnz xlat mul fldl fistl or repz (bad) mov lea and sarb stos jnp jg (bad) push imul sbbl pop and loopne xchg mov xchg mov sbb insl das mulb or call mov add jmp roll popf sub and out pop std sahf test call push xchg ficoml push aaa sbb pop pop push jmp lods ret stos jnp pop loope push jno std cmpsl fistpl aaa xchg (bad) cli add inc xor jp mov add pop cmp out fcomi fisubr sub out lret out mov scas scas jns lods cltd lods out jl jb jge mov dec and and sub inc in mov loopne inc pop enter adc sub mov mov inc or andb ja add stos mov mov xchg mov aas sbb insb cmp ja inc push ficompl imull loopne or dec movsb sbb lret sbb push out movsl pop xor fcompl imull loop mov lahf nop scas repz pop xor add and add xchg mov rol (bad) out pop push mov mov loopne xor or adc jo fistp mov adc jae fist in sbb addr16 sahf sbb push or mov mov dec mov mov pushl adc mov adc pop (bad) test sub jb sbb and mov mul sub jns or out outsb jne aaa in xchg xchg mov out cmp push xchg pop jae mov xchg xchg insl in sub jbe inc scas mov inc mov sub xchg daa sub sbb cmp repnz mov ret mov add push out add sbb aas in ret xchg aaa push sbb cmp test and inc push in push sbb push cmpl mov lock jnp in jl push cmp cmp insb pop inc fwait pop xor inc mov push xchg fdivs push push data16 xchg push adc (bad) xchg ror dec sub fisubrl (bad) fwait sub daa mov inc das jle sub notl (bad) mov mov ljmp das adc out test inc lret pop xor dec lods stos rdmsr push fisubrl les add push adc adc add jge sub mov stos aas mov inc cli (bad) sbb stos (bad) rclb add jne fmulp jle and andb fldl fwait xor inc out into add or cmp (bad) sahf sarb adc sti push int3 (bad) fmull fiadd (bad) faddl mov sti pushf xor mov aaa test insl jl jns mov out test int je push mov push push stos (bad) in das cwtl call push mov stos push test out push or push insl repnz gs jge mov inc sbb lods es aaa dec mov mov clc aaa popf sub pop adc mov adc cld adc or xchg mov sub sub std jno xor pop leave daa sub shrb mov pop adc mov mov cld sub cwtl or icebp push jae mov push fimul sub adc (bad) inc scas lds stos dec pop in mov xchg sub out rcrb push insl mov les fisub jmp mov bound mov sbb mov dec add xchg add push addr16 push mov adc jo inc dec in jb cmp adc mov (bad) das sub pop test (bad) mov sub inc (bad) cli inc jns jmp ret ss xlat ret imul (bad) stos xchg mov test dec xchg stos dec xchg shrl bound cmc pop mov pop xchg pushl mov cs js push fstl sti (bad) (bad) cmp fisubr iret mov cmp sti popf dec addr16 popl pop xor stos xchg enter lcall fs (bad) ret out imul inc mov outsb fldcw shld sbb push push pop lahf stc dec cmp adc or and xor inc dec sub movl and repnz push in out loope or dec int lcall jmp lret jo iret mov pusha jg dec xor adc mov mov xchg lret mov inc into and xchg dec or pop pop sbb mov movsb bound (bad) mov out push (bad) sub ljmp das (bad) les dec mov add mov repnz movsl fmul in add jb push ja xchg pop sub popf lods cwtl inc or es mov push stos or jne in into mov pusha into popf add add movzwl pop xor cmp ret pop in or lret jne jg sub lahf sub jae je,pn dec and and sub mov jb xor inc and insl das or adc negl inc sbb and outsb shld cld in (bad) mov mov mov adc jecxz les fimul pop je cmp inc pop mov mov jle outsb imulb sub dec mov mov mov xchg push frstor test lods aaa xchg xchg mov repnz testl jnp lods inc cltd mov jl add sbb cwtl cltd push jge imul push pop movsl pop ret fldlg2 (bad) inc and and in xorl sub adc pop dec and out and mov xchg leave sub lcall pop adcl adc cmp out pop in mov insl jle or js aad shl xchg pop add (bad) sti stos (bad) repnz dec sub fs jae pop into (bad) or (bad) aam jnp stc jo cmp insb out add jmp fs scas cld jmp sbb lret jae call mov jne pop sbb push nop and cmp jo stc or jo pushf mov and out mov into adc xlat mov fisubl and test add xor stos mov inc jae sbb inc ja dec and repnz lock push inc dec push xchg aas popa (bad) aas mov mov insl cwtl mov int3 pop in jmp add xor push jmp or mov jecxz lds jmp fsubs jl and mov or jbe inc mov insb jg je mov lods add fadd push mov sbbb mov cmp add jne int ficoml lahf insb push push test and mov arpl jno pop imul test inc popf xor mov inc mov push lock jo dec hlt or ss cwtl xor movsl xor adc sub aas test inc popf or insl shl fdivrl xor pop sbb (bad) in (bad) mov xchg pusha add lods repnz movsb outsl cmc outsb divl xor iret in or push fdivr loopne movsw mov jecxz clc ss test test addr16 adc sbb dec fs pusha leave xchg push add arpl push pop inc fldz pop adc hlt std popa push cmp cmp lahf data16 fnstenv xchg out ja add out repnz jne mov jne jbe sub sahf inc inc push call int fs (bad) adc std add jl scas sub push repnz arpl mov cli test xchg pop xor pop adc addr16 mov push pop or cltd data16 xchg jbe scas and dec mov call and in fwait jb pop test lock cmp shl and cmpsb stos test mov push pop dec mov push pop outsl and (bad) cmc push repz jno jne sarb outsl xor movsb test into lret sbb insl and mov ds pop cmc lods jno orb cmp dec clc xor or mull jae loope mov fcompl cmp xor lcall push lcall sbb (bad) cwtl pop adc ljmp popf and test mov mov add aam mov loope scas cmp and xchg dec cmp into int3 or movsb shrl xchg gs cmp jns push mov add cmpsb sbb sahf cmp push addr16 pop and ss inc popf fimull insl dec pop dec bound adc loope inc pop lock cmpl push iret out fwait ja dec mov lods cs push lods cmpsl dec cwtl jg jp cli repnz fldcw jecxz je jno hlt xchg push mov popa lds and inc cmpsb call sub add (bad) mov mov fwait sahf pushl push add fwait pusha inc or outsb outsb rclb push cmc in movsb fidiv dec mov cmove adc addl mov adc jo pop int clc dec out daa test mov daa popf dec out mov sbb je and ret sub int nop jo xchg or xchg bound icebp test and movsb mov jae dec pop cmp mov push mov or imul sahf cwtl arpl pop out std push push fnstenv fisttpl in lahf test cmp add sbb and inc in inc mov mov faddl test xor sbb dec fnsave cmp hlt adc mov jle nop xchg inc inc lcall mov pop adc cli insl adc lods outsl in dec pop push stc out jg sti (bad) adc (bad) setne stos xchg jno,pt add fistpll test jb push int3 shrb sub test inc jmp cmp mov cmp test inc mov mov jb dec int outsl lahf into adc pop out iret jmp lcall fistpl cmpsb ret pop outsl push add int3 pop lcall xchg cmp xchg bound add mov arpl mov jl outsl fwait inc pop rclb call mov repz fcomps inc inc outsl fistpl mov test outsl ret mov or sahf adc sub sbb sub (bad) jb in pop test sbb push or mov ja pop mov mov xor call aas imul rolb cmpsb sub leave cmp mov js sub pop push inc pusha stos sbb add xchg jle stos das imul sbb sahf xor insl pushl push pop pop push jl outsl inc pop ljmp iret scas sbb aad bound roll jnp jo in jl sub ja mov sbb dec sbb fidiv imul pop jno arpl stos aam jmp xor leave daa loop sbb dec popf pop aam mov push dec test mov dec inc icebp mov xchg imul mov lods mov xchg or cs xor lods aaa hlt in jp cmpsl scas pop add test aam mov inc jp add lret addl cmp test in aam push sbb outsb inc adc mov (bad) call js out jle loop (bad) inc xchg mov dec lret and repz test das hlt inc ja dec push stc in sub bound pop test fistp adc fstl in xchg sbb (bad) xor cmc mov push mov push daa xchg mov fstpt xchg sbb cmp cmpsb lret sub or leave xchg lock (bad) or rcrb or leave sub dec or cmp (bad) lods sbb push dec dec (bad) or or xchg pop add incb out je mov xchg sbb fadd out adc addr16 in loop adc or jns imul push adc fisubl inc mov push (bad) jae cmc jo icebp xchg jae sarb test mov pushf jg sub pop test mov add pop pop jg lcall cmovs mov gs rolb and jnp pop sub mov inc pop mov sbb sbb out fnop jne iret mov mov add or sti test les dec adc shll rcrl push pop jecxz lahf mov int inc mov notb pusha push push pusha cmp xchg mov ss push divl rorb sbb adcl mov aam fwait adc cld push add push jae jecxz out out xchg (bad) pop mov je imul hlt fwait ja push jne hlt addl mov repz fidivrl and cmp sub sbb dec push xchg loopne mov add loopne inc lods add fldt addr16 lret add lock add xchg mov daa inc (bad) hlt mov shl ds pop out push out jmp adc mov adc (bad) aad loop pusha jae fmull cs jnp cmp (bad) fldt mov or imul cmp sub outsb mov sub or (bad) cli push lret flds add xchg sbb inc push lahf cltd sbb into outsb sbb inc test inc ja aam cmp (bad) in lods pop dec jle sarb ret push push in lcall stos mov sbb or inc lahf add dec inc jmp jne cmpsb or inc jmp in jp jecxz jne add inc jns (bad) shll inc cmp push divl scas hlt aas mov xor mov xchg inc adc sub xchg clc jns pop fldenv mov xchg lods sahf adc daa ja rcrl jb jmp sahf sub dec loopne or fstp mov sbb inc adc movsl jne or es mov cli sbbl dec out or or hlt mov push fstps frstor jmp xlat xor inc out das imul mov mov add adc jp lods call mov shll iret mov mov scas cmpsl mov das (bad) fld int3 jo xchg and xchg pop push sbb cmpsl ret push imul ret mov stos mov dec pushf or cmp sub xchg sarb fsubrs mov push mov (bad) hlt cmp fcoml jp jne stos jno and sahf jmp movsb mov mov inc pop aam mov aad subl jno (bad) (bad) mov mov mov or mov or mov fdivs cmp add lret gs ficomp jns cmp and fcompl inc and int3 sub inc push cmp icebp xor (bad) sbb movsb lret jmp (bad) aad pop cmp repnz sbb dec push sahf in fs bnd fsubs add adc jle call lret int xor int loop add mov insb inc jmp out and sub rcl mov data16 imul mov leave or cmp mov fimul rcrb (bad) pushl clc das decl cld daa lock sarb or daa lock sarb or daa lock sarb or daa lock incl sub pop pop cmp add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push jbe or add mov (bad) sbb ss (bad) insb fnop xchg dec cmp les popf out ds mov negl add mov add sbb mov mov adc push into xor loopne mov packssdw pop loop sub cs cltd jmp jb xor iret daa jg stos sahf xchg jns push and sub mov xlat mov lret into and addr16 cmp icebp cli mov cmp xor or popf inc repz cmp push adc sub bound cmp into jnp arpl mov and dec or lret fidivl daa int3 or cltd outsb or or sbb sub mov scas mov mov push out mov adc (bad) sbb addr16 (bad) nop inc push idivl jne popa pop sub adc xchg int3 in in ret push add mov aam rcll xchg mov jb popl fwait add push lods push pop incl subl shrl icebp cmp imul add stos into or aaa sub pop pushf dec push addb xor in in dec movsl mov push cmp out jl cmp ss (bad) fisubrl jge enter sbb int3 fsubrs mov sti aaa xchg jbe cmpsb in loope or or (bad) and add jno imul int3 fcomip or dec push and lret pushf out gs lods addr16 jb sub test shll mov jb sub pop imul xchg push lods push sbb adc rcrl fdivrl mov xchg jg adc outsb cwtl lock fwait mov test icebp adc or aam addr16 xchg jb cs mov psllw pop fadds popa lret cmp sub aaa dec repnz cs jg inc pop cwtl dec sbb insb imul or in xchg sub sub or add clc push outsb add mov sub (bad) mov subl mov jae popa dec jle insb mov fist hlt or in popf addr16 pop outsl ds pop sti rorl int3 aam mov aas adc xor mov (bad) ffree jbe ja add or out cmp add loopne push js xchg jae scas sub (bad) sub jl sti inc inc decb enter fisttpll ds outsl in inc in faddp inc roll test xchg imul xchg xchg mov dec popl pushf js ja mov mov dec adc int decb inc and daa or (bad) xadd popf out jle ds inc nop sbb cmp fsubs imul lret sbb in out push adc movsl xchg inc inc jo iret adc loope pop sub xchg and stos ficoml mov sbb in mov enter orl or push std scas adc cmp xor mov sbb ja popa fsubr jle xlat into fistpll popa sub inc xor pop addl cmpsl loop dec dec in jecxz pop addl mov das test mov sbbl das sub push gs cli sub mov push xchg scas pop loopne sub pop adc ficompl fwait sub daa in ret ljmp xor out sbb mov xor cmp mov shll add mov inc jmp dec inc mov cmpsb fbstp in dec imul leave xchg out data16 (bad) push fcmove cmp push fmuls add fstps mov lret pop and (bad) sbb js push ret pop out out movsl mov jb dec inc and (bad) (bad) out hlt lods hlt dec pop xchg (bad) xlat cmp cmp add dec xchg clc push push and jns cltd in jno sahf in cltd js je inc scas mov mov sub clc lock shl lret sbb loope mov in rorb out data16 lahf imul inc sar mov mov pop mov hlt je dec push (bad) pcmpgtw std xchg fisttpll fwait cltd sbb out gs inc enter pushf mov push in scas popf lock mov mov or ucomiss in popa xchg lahf (bad) out ja add or jg mov xor mov mov mov mov sbb lret cltd cmp in cmpsb push lods push lahf fistpl cmp mov sub enter scas mov movsl jge sub cmp outsb dec xchg and sub enter scas rcr loope xor adc icebp hlt inc aad and js call or push movsl jnp out inc sub icebp add test mov cs xchg inc int push mov nop jg cvtps2pi inc xchg clc sub push dec pop push into ror push xchg push in sub inc lcall add mov aam xchg pop mov std lcall cmpl gs and adc lret stos stc mov ret inc in mov cli sub xor in out mov adc push push mov (bad) (bad) xor inc or push ror pop pop mov out adc gs fdivrl (bad) adc stc jle popf loope mov js dec insl add stc push addr16 (bad) pushf push or add js cmp sti (bad) ret fstps and dec jnp lds cwtl xor cld scas and add pop adc iret sbb add cltd sbb lcall cmpps stc mov mov ret dec pop jno rorb inc cmp mov cmp jle cmpsl (bad) shrl (bad) scas fst push mov jne jp mov jg aad out (bad) dec mov mov sbb movsl jg mov cmp mov ret les fwait sbb xchg xchg test jle mov push push (bad) sbb pop ljmp daa cmc pop mov push into mov jg leave push add sbb pop mov or divb sub sbb sbb ds dec or push pop repnz divb cmp mov fnstcw jno mov (bad) (bad) xchg or or jb in clc test adc push shll sbb pop addr16 xor adc pop nopl cmpsb lods pop (bad) je cs out (bad) jle sbb test lahf mov scas pop int3 inc dec dec mov dec pushf roll push (bad) and enter adc cmp jo test xor add mov or add push dec sti cmp out (bad) and in out cmpsb jbe push shll or test mov cmp bound mov sub (bad) jb addr16 ds bound jle and fcomi int3 push enter or inc fistl nop enter inc jg stc and add and repnz xor int mov jne rorb xchg loop lret test push xchg subl or mov (bad) or push or xchg mov sub xchg jecxz jnp loope mov iret push pop aam scas sub or ret dec imul mov enter jb mov movsw jl cmp popa cmp repz jecxz dec jo mov xor fwait mov push sbb mov add das push (bad) xor add scas (bad) inc pop sbb fisubr out fwait jmp aas es xor imul xchg mov lcall lahf ds mov sti int3 loopne mov sti aas pop addr16 mov jg fdivrs lea push adc mov push lds lret push cld jns mov sub add ret jbe jne (bad) movsb in test dec sub push and cmp pushf cld shrb pop or mov add or cmp loope jns add divb mov movsb ret inc jecxz mov aad push loope jecxz mov xor dec mov mov (bad) add jns jns lds outsl mov popf cmc fnstsw movsb mov fsub mov push add pop or cmpsl lcall inc or shlb ja stos mov jbe cs jl out xor sub mov adc xchg fdivl sub sahf cli sbb jns cli in sahf jne sbb mulb outsl cmpsb jp xchg sbb sbb jo sub movl cmpsl xchg xor dec cwtl xchg and and fucomp inc (bad) cli mov in into xchg pop icebp dec lea std popa add jecxz xor int3 dec adc shrl fsubl mov cmc jb push sbb (bad) mov (bad) push sub push pop cmpsb leave push add mov mov cltd pop cli loopne clc aaa nop (bad) mov loope jbe xchg sub mov out leave int movsb out popl add int pop (bad) mov xorl movsb ret push gs and jp and pusha scas sbb insl nop jge xchg or rorl mov mov sub jno pop cmp fwait imul (bad) stc inc stos push loope cs ljmp (bad) aaa mov inc popa enter mov mov (bad) faddp and dec dec data16 mov jge cmp inc fmuls stos sbb pmulhw call loope mov pop xchg push cmp cmp inc inc in sub push lret push dec (bad) xor pop push scas cmp push pop int3 pushf sar sub pop add gs scas sbb rclb push repz jb xlat call push cmc shl jbe ja in paddw iret mov movsl xchg xchg out xchg mov push aad xchg xchg call cmc sub push sbb inc fimull jne mov sub inc outsb or add mov addr16 xor das stc fstl das jp adc sub mov mov pushf leave cli mov xchg jmp fwait or (bad) xchg lock into arpl mov sbb pop push int3 sbb jbe sub and fldt int3 popf add dec add mov int3 lods pop andl push mov insl pop stos cmpsb clc sub js inc jb mov push xchg int3 and sbb cmp xor xchg xlat mov in or mov cmpb std lds int3 js xchg mov push push xor mov xchg js xchg sub in lods (bad) sbb mov stos mov and fistpl les (bad) fdivl inc push jmp or push pusha out jbe adc sarl sub fcoml jne rcll int3 fs neg jl fdivrl adc mov loopne aam push push fnstenv mulb dec in mov push dec rcll sub xchg inc gs cmp dec int fstpt loope xchg mov iret jge mov adc ss lods pop dec insl negb scas std mov inc fcomps ret ja pushf or jge push test test out pop mov imul push push iretw repnz out xlat movsl fistp dec push outsl test inc cmp jne (bad) (bad) cmpsl jecxz add bound arpl jnp mov repnz mov push mov jl lret pusha sub xlat jmp pop mov in xor gs movsl pushf mov jp (bad) addl je outsb inc mov and and sbb pop pop pop inc (bad) int fadds mov add sub xchg sahf dec add xchg scas lret mov lea lock adc mov or mov daa scas in (bad) mov xchg sbb pop xchg decb cmp cli (bad) sub pusha nop insl out mov and lds fistp inc scas jb std aam jae ds pop xlat stos sbb fidivr (bad) aaa (bad) ret and mov rcrb mov xor lret das or pop mov mov stc hlt add push (bad) es stos adc dec or decb ja mov int3 xchg rcll inc mov cmc js mov push mov mov test add push divb fdivl inc sbb mov xchg pop out mov mov mov push xchg add out jp sub loopne jo lea xchg fsts repz imul iret imul jne and push and pusha out or lret mov imul lods aas sub fnstenv pop in pop loopne dec das int3 mov xchg (bad) call pop pushf and and mov lods (bad) ror movsl es loop loop xchg adc scas mov dec mov lahf xor sub cmc test mov mov dec aaa lods and cmp and sub cmp push idiv out das fcmovb jmp dec (bad) addr16 cmp cmp xchg aas mov add cld push movsb jne xor shrl or inc (bad) (bad) cmc mov mov cmp dec push loop push jg insb pop jb mov mov sahf mov sbb mov push ret lods mov aad add jecxz xlat xchg xchg mov mov mov inc xlat (bad) push sbb mov mull pop pop sbb sbb aad fisttpl mov lods lods mov push or (bad) std push add iret enter pop fisttpll sarb incl es push imul push pop iret adc icebp roll movsb push scas sbb sbb ds ljmp dec out jmp addr16 insl insl dec jne adc jmp rcl lock dec fildll rorb and xor in ret daa jns (bad) fistpll and enter jbe xchg xchg repz fstl ret push mov xor push sub (bad) pop mov in jbe cli and movsb sub mov addr16 es js fxch xlat adc add push stc xor scas or xchg mov ja mov insl ja jnp pop sub fstps out daa lea push sbb adc xchg inc jge loope cld hlt pop aad dec jbe mov (bad) call push mov lock push inc das adc jne vmovntps dec cmc inc pop add jl out mov sbb movsb jae mov xlat or sbb cmpl sbb lahf and testl rcll jle mov cltd adc jecxz (bad) dec bound shr xor in loop insb mov fstpt ljmp dec add aad cmp xchg and divb js push mov mov xchg arpl cmp cmp xchg leave mov (bad) or add pop xor adc js push sub jnp inc pop in lds loop aam fsts mov xor inc xchg es inc add fild clc or mov jnp idivb sbb stos nop sti mov ret mov push pop rol negl daa mov les add subb mov inc cmp fmul cmc inc ja jge push pop pop or adc adc mov out leave inc fdivl sahf push jle push add sti dec adc rcr enter jbe push pushf (bad) mov adc or hlt xor shl lock pop sub (bad) lret cmp popa and outsl adc cmc pop jmp gs test stos in cmpsl roll pop cmpsl ret mov dec nop cmpsl pop cmp ret inc jg out fcompl lock adc sbb lock jp (bad) fsts lods sub jbe (bad) js int3 scas cmpsl sti (bad) ss jle mov push in push or jp jbe sbb scas test pop xchg push popf mov pushf cltd pop push fwait sbb jbe mov jle aam dec bound mov xor negb divb push push int3 or ret mov popf test stos cmpsl sub adc loop nop notb fldt add jge or jne adc js inc rcll sbb rep dec sub outsb das orl sbbl sbb loope sub jecxz enter or cmp fnstenv pop jecxz daa push xor loope or mov inc es or and jge cmp pop scas outsl inc mov fisub mov mov scas pop cmp int3 cmpsl push pop mov in sarl negb mov bound imul cmp cmpsl push or jmp les and call xchg cmpsb push mov repnz xchg imul fst dec rcrb aam pop dec iret inc (bad) es push sbb cmpsb xor jp lahf pop lock mov inc push pop push inc ret shlb cs test je dec call (bad) xchg jo fmuls (bad) jg fs leave test jo dec pusha sub jne lds int3 mov add cmp rorl jp (bad) xor add adc or lret hlt add fcoms out sbb mov xchg lods ja in mov pop add sbb xor sub or cwtl xor (bad) cltd mov push scas and (bad) rol adc jge jg,pn cmp std rcrl xlat scas push sti mov fprem cmpsl mov addr16 rorl inc mov fimull sbb pop daa cmp cvtps2pi iret hlt jb (bad) lods sahf and inc inc sub inc addr16 inc or adc xchg fstl push jl insl inc jecxz adc pushl (bad) mov xchg imull stc dec jns adc push outsl jnp stc inc std pop mov and test popa or arpl (bad) loope test idivb mov dec inc mov pusha dec jge mov mov movsl and out sti push lods inc sbb and insb mov push jecxz adc jns or sbb (bad) mov jno leave out pop dec mov xchg push arpl xchg xchg and pushf mov add rcr (bad) int3 push fs pop (bad) sbb arpl cli add or clc jne mov cmp pop fidivr pop push jo pminub adc sbb push or inc push jp je scas xchg sub xlat (bad) jno in std xorl xor add push in xchg pop imul hlt sbb mov pop xor loop xchg dec sbb xchg dec into addl add inc xor xchg add mov pop adc cmpsb dec xor inc int jo lds sbb rcrb inc sbb mov and mov add inc stc cmp sarl inc push stc sub movsl fdivrs stos and cli pushf push add inc jl pushf (bad) dec rol fcmovnbe push push mov xchg cltd push mov adc fucom xlat push inc push sub add in (bad) adc push jp fmul mov lea stos jge adc gs inc out dec push leave push cmpsl and push stc add inc adc push jg fisubl flds out js andb pop dec adc lds cmp jno and mov add in cmc add nop lods lea icebp adcb stos ret xchg xchg imul sub lcall iret test jae or push test mov dec aad stc jle push jbe cmpsl add xor add into lds jl icebp (bad) bound repz push lock xchg jle in (bad) out cmp mov aam gs btc push dec daa mov aad cs lock mov popa or ficomp dec sahf (bad) in das xor xchg or push stc or adc push xchg mov push pop stos out jmp (bad) mov mov cmp sbb push and xor aas (bad) adc test into aas sti inc lods inc jae mov xchg in (bad) xor mov fldcw out jae pop cmpsl mov add in xlat mov ja lret lret add js xor (bad) xor push adc mov mov in sahf sbb stc lahf inc loopne xchg jmp data16 sbb mov pop insl ret push jl pop (bad) pop xchg push movsb and (bad) int3 stos sarl and push adc push jb rolb lds sbb fs int3 dec out jle psrad faddl dec pop ficompl adc nop or (bad) sbb jb mov dec in fwait add add std out cmpsb or add out mov inc fidivr inc sbbl cmp jecxz scas (bad) add sub cmp ds mov dec push mov arpl das and das fcompl in push testb jl dec xchg sbb ss in scas (bad) sbb in ljmp push and adc in push add sub xchg lea sbbl lahf popf push add lret mov negb sub jne add hlt std sahf xor push repnz xor or xchg dec bound jnp rcl enter test xchg repnz mov inc jmp mov mov insl and (bad) cmp in mov and enter cwtl dec xchg jns pusha add mov sbb push je pop scas mov xchg (bad) test xor out and add sub scas mov addr16 pop push jae dec insb dec ss mov insl lds mov cmp inc cmp jae push inc lock leave (bad) loopne mov sub dec ljmp cld (bad) lea push push or jns loop outsb shrb shll and push pusha cvtdq2ps sub not repnz add iret inc cmc lods sub add jnp ret loope addr16 pop cmp call mov lods lds scas push push mov test std daa mov xchg cli daa sbb jmp imul insb mov xor sub sti inc add pop (bad) xor mov jg into leave pop ficomp int3 test js dec aas sbb mov sbb les inc adc cmp scas stc shr dec pop adc lahf shl push hlt scas push cmp mov jg lods push mov dec popa js adc repnz iret mov pop js jle add inc sub popa clc daa and sub hlt mov cmc cltd xor xchg mov pop ficomp mov je jmp adc (bad) ret adc inc aas push data16 std and fstps in fcmovnu dec addr16 add fcmovnbe btr push xchg or push dec jmp pop push scas cli leave jnp xchg loopne xchg enter test mov add aam in out nop fmul add dec cmp mov in jp jno (bad) jmp daa in xor push cmc cltd iret jne jmp gs xchg movsl rcrb ror js push leave andnps and cmpsl add sti cmpb lods cmpsb imul xchg in leave cmp fldenv (bad) xlat or (bad) imul push jno pop xchg mov daa in jbe out jle sbb adc push xchg add mov lods movsb and fs jae push nop xor idivb rcr movl enter sub dec cmp xchg lret std mov xor dec add mov mov mov mov shld incl (bad) repnz sbbb movsb lock dec xchg push sub out inc cmc mov lcall pusha pop push imul and or rcrb jae aam dec ss lods mov aam sbb sar shrb je ss jnp dec mov ljmp nop add rcll pop cmp js cmp pusha fwait aam mov jecxz popf ljmp popa std scas pop mov (bad) xor icebp xchg sub xchg adc movl ficom ret mov in loopne repz mov imul pop (bad) enter addr16 push or lods rcrl fsubp xchg pop dec ljmp sbb pop mov outsl pushf stos flds sahf imul lahf fild gs jg cmp mov roll adc sbb (bad) les mov (bad) mov pop test mov push sub xor xor fbld aad sbb es dec xor jns enter scas push add loop dec xor in dec icebp sti mov xor data16 cli jmp fadds lds mov imulb orl in es (bad) pop or cmpsb int xor fiadd sbbl stc cmp lcall jno mov repz popf loopne out mov rclb xor dec mov (bad) iret cmp test repnz or loopne dec imul sub adc mov mov (bad) repz fiaddl mov (bad) xor std arpl cmpsb mov inc cmp repnz cld int3 out stos jg nop pop push sahf sub cmp inc mov cmp (bad) test inc ss cmpsb repz jge xchg faddl cltd mov adc mov mov sarb or daa lock sarb or daa lock sarb or daa lock sar cmp test xchg cmc or add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repnz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push pop and popf es mov (bad) fldt jnp out (bad) fs lods lahf jo pop xlat mov add add add add (bad) add out xlat insb icebp jg (bad) fdivs lret lret int3 jl testb fsub xchg dec fs test push sub push fmul fs pusha or mov pop roll into mov pop sbb jmp cmp mov mov xor jns out aam and test fstps (bad) dec bnd data16 push inc test dec and outsl enter (bad) sbb ret inc xchg xlat clc cmc xchg adc int3 mov push scas sbb cld and mov clc mov sub jl aaa test xchg addb inc sub jno pop xor outsb aam adc sbb mov mov add test jns and pop in int iret dec cmp cmpsb test mov push sbb (bad) pop cmp xor out test jo mov fsubr push jbe cs insb orl out cmp (bad) cmc call cltd (bad) aaa adc aad xorb repz jmp fsqrt mov adc mov xor or jecxz sub lods outsb (bad) xchg and jb test cmpsb test push xchg adc jbe add mov das xchg sbb xor mov push sbb sub push sub or out mov xor pusha push insl jp gs lock mov cmp pop loop sarl fsubrs cmc dec rolb push stc je push (bad) pop inc (bad) fistp lds nop frstor push out ljmp pop mov icebp (bad) jge divb mov xchg mov or inc mov sub js bswap daa push cmp mov xor in xchg xchg pop xchg sub jge clc push push or js jno adc mov movsb loope add or loope xorl adc aad lods fnstsw (bad) and (bad) xor adc movsl test test (bad) add ds sbb (bad) fnstcw xor imul cli lahf (bad) in setg add in pop and fwait mov in or push insl mov cmp add mov mov push stos cmpsl cmp je mov inc add aas push add imul mov bound sti rcl mov push push insl lcall mov mov add xchg push je gs mov out (bad) push xchg (bad) mov cmp out or lds sub pushf leave jb dec mov mov inc aas adc adc sahf jb jo xchg wbinvd (bad) (bad) jbe adc xacquire pop pop insb shrb push imul repnz push cld jg aad dec lock fwait (bad) cmp and lods add loope (bad) das nop fdivrs sub aas cmc push sbb mov jne scas xchg (bad) xor jb out mov mov inc cmp cli sub inc out inc in adc (bad) mov adc mov add pop mov mov adcl lcall add cmpsl mov test mov and sbb xorb adc (bad) ja jmp cmp jbe or out movsb out pop lahf subl cmpl xor insl aas leave sbbl sub xlat cmp (bad) or inc stos xchg call ja test lret mov gs ret pop in jle arpl lock lods adc out add clc cmp fcmove bound aad loopne lcall add mov adc push cmp lock xor lahf cmpsb xchg push scas int3 loop inc lret xchg fldl xor xchg scas test or ficom pop andl ja mov sbb sahf out push cwtl in call and (bad) lahf lds dec inc mov enter pop mov inc sbb mov xor sub loope insb push ss xchg aam adc in and addr16 insl inc loope cmp subl and xchg mov fdivr lret push fwait ljmp stos or popa mov je movsl dec mov movsb push pop mov into or daa and leave or aaa mov insb jno lods inc ss cli sub inc push dec adc stos sub and outsl push cld mov mov out js jge add lret and xchg mov (bad) xor idivb inc xchg flds in call loop mov or rol scas xchg adc mov mov mov (bad) outsl push lahf mov or lret mov sahf mov mov out aam mov mov scas arpl repnz punpcklbw loope push lea sbb sub push mov jmp pop arpl push inc xlat xchg sbb fist inc or scas bound es cmp sub push push xor inc mov cmp hlt or shlb jecxz cmp pop (bad) icebp push cli or push add push pop cmpl and loope gs cmp call iret add addr16 out mov xchg shll test ljmp (bad) mov (bad) jb shrl sub adc jle dec mov push mov xlat pop adc dec (bad) roll cld push lods pop pop nop mov outsl pop imul cli xorl pop mov and pop pop add cmc sub fildll aas outsl int js js sbb mov stc lret adc sbb mov jmp or jae fldenv stos test and lcall add xchg cmpsb bound clc mov out push mov loop adc aam movsb push inc jne push dec dec mov das fdivrs lods or outsl int3 and out stos imul test ss inc dec adc lods dec sti add adc lods int je xor (bad) push ss jge xchg jle aam insl xor jge cmp sub add mov fidivrl mov xorps in xor je mov je sbb cmp (bad) mov (bad) xor sbb mov adc adc push mulb dec addr16 (bad) push daa pop add jno adc aaa pop xchg mov and sub inc aad cmpsb iret xor mov pop xor add xchg sahf xorl dec push mov pushf out pop (bad) shll incb stc or pop push aad push xlat xor add in test ljmp push stos iret pop mov add ja or fildl mov inc cltd mov lret dec ss cmpsl in mov inc lds push pop adc mov mov xchg mov jl insb cmpsl and pusha int imul pop (bad) arpl cmp or push add and out push cmp xchg sbb andb inc xor stc mov inc lcall cmpsl lea dec xchg cmp jg xlat or mov sub dec mov jns mov stc add sbb sbb cmpsl xchg mov ja ss fstps ret lods xor nop int3 aad imul mov cmp jne cmp jnp ljmp jns (bad) repnz mov or lahf push jge pop test repnz lods pop pop mov dec mov (bad) xor mov sahf mov fisubrl cltd (bad) mov sub inc inc (bad) xchg fmul jo pop pop out xchg (bad) nop leave test pop jb outsb sbb xchg ljmp xor gs push push cmp dec in push mov int sbb (bad) ljmp sub lret xor bound js mov pavgw xchg jle popf insl out or mov loope aas popa imul arpl push adc fnop mov dec sbb push jle cltd stos insb clc test mov fiadd adc shrl fsubrl xchg fsubrl clc repnz jne inc daa mov frstor ja push jg cltd push movsb jae add out sbb and xor push inc pop lods in pop jae add loope (bad) and test repnz pop cmpsb adc bound shlb mov int inc sbb lock or fwait movsb dec lock repnz nop ds xlat lea sbb and adc int3 add ficoml fist mov in dec mov xchg add les scas data16 imul xchg bound mov mov jle sub pop or cmp xlat out cs gs pop sahf cli leave cmc xchg (bad) mov xchg push (bad) aam pop f2xm1 pop rcr xchg sub (bad) jno leave push pop jl jp cwtl jl cltd test xchg leave cmp cmp sbb pop stos pop nop fadds push shll test and cmpsb mov fisub xchg push jno and add je iret pusha pop fildll test jl add inc cmp inc rclb popa mov pop sets addr16 lock dec push mov outsb call or xor xor cmpsl sbb stos mov test imull int3 or (bad) pusha test dec xor in xchg sarl cmp dec xchg pushf lea aaa loop fsts cmpsb add (bad) jp,pt mov enter jecxz mov pushf cmpsl pusha sbb pop lods out push (bad) fnstenv jbe lret jmp mov in mov sbb je repz stos jae,pn rclb aam addr16 dec fldenv cltd rcrl insl test cmp push mov rcrl mov dec bound pop or mov test pop addr16 jns repz push test into dec fistpll stos mov call sarl loop mov mov mov lea cmp mov mov test arpl (bad) repz ds inc imul push pop jnp push or aam jecxz (bad) add stc fcoml repnz jge inc ret fdivrl pop and or pop sub xchg jno jb mov dec loope rorb or movl out int3 (bad) pusha sub das popa sub std aaa mov lds or jl out (bad) bound mov jmp loope outsb (bad) (bad) dec dec int mov mov cmp sbb das data16 sub cmpsb jg fcoml push push push ret cmp lds xlat push aaa pushf aas jo mov xchg push xchg inc or repnz pop push inc imul jle pop test jle pop cmp pop ja ss js cmp rorl incl cwtl add dec mov fmul fisttpl shrb and fstpt push add in adc mov je cwtl daa subb cmc cwtl mov jns xchg iret cli nop inc sub jecxz repnz out sub inc sbb add fadds mov movsb mov xor and stc cli lock xchg insl pop mov jg jb bound lods adc push pop dec fs rcrb mov rolb notl divb cmpsl sub adc data16 add in and (bad) decb lret test xchg add imul (bad) or mov pop mov movsb mov xor push xor xchg test (bad) jmp hlt fstpt popa mov fnstsw das sarl ret sub sbb and dec cld scas fs push push pop xor pop dec loopne test inc out stos xchg (bad) xor rcrl pop out or mov test andl (bad) cld sti sbb jo xchg mov cs cli push jno sahf push sahf push pop fsubr mov test jns (bad) into inc cmpl sbb xor fs or push or lahf pop icebp adc imul gs mov push ja repnz ljmp imul jo and xchg jne xor ficom (bad) or dec enter int mov subb inc nop lea xchg into lods push jmp fs add movsb jo fnstenv or mov out int mov xor loope imul mov mov fidivr lret int sbb shrb lds gs aam call xchg lock pop mov sub leave sti repz std xlat nop movsb (bad) int3 ficoml or push inc pop sti fimul cs test dec rolb push outsl cmp arpl addl imul inc into xchg inc int3 and or js loopne pop xor xchg aas insb setl pop sbb test mov (bad) mov mov sbbl cltd sbb (bad) xlat insl inc mov js push push mov xor and pop xchg (bad) mov inc (bad) div aad sub popl adc js cltd out aas (bad) out push fildll pop xchg mov add add mov xor fwait loopne inc add pusha dec ja adc push repz jb repnz and dec mov pop sub dec xchg mov ret aas test jp mov out cmpsl cmc mov sahf aam ror sarl and xchg leave jno (bad) negb hlt adc cmp sub imull jae add and xchg mov inc xorb js clc fbstp loop and clc iret pop mov addr16 cli pop into push pusha fild inc ja inc pusha pop addr16 mov or xor bound insb or mov add xchg mov int3 dec test push inc out inc test push fistpll and or mov push sub inc arpl sub push or test sbb push cmpsb pop out push mov mov jns adc insl and cltd mov cmp mov dec adc flds call sub dec inc sbb mov popa and test mov push sbb cmp sbb fwait sbb pushf push in add and gs loopne popf rol jl pop popf es addr16 mov sahf lds loopne dec and orb jne inc test jl (bad) sbb xor push push cmc popl add push aad mov jbe (bad) shrb rcl cmp out pop sub iret jb test cmp inc or push push rcrb stos and mov push fcompl sahf movsl loop xchg das mov push jae int3 push mov ljmp push rcl push mov (bad) cmpsb leave xor loop jo push shrl adc shll movsb xchg sbb in jmp decl into mov mov xchg out push out mov cltd test out lds lret movsl iret add aaa repz ja aad cs inc gs mov stos pop stos push loope into or mov and sar sub negb leave ficom pop cwtl popf add sbb pop stos add or out sbb outsb lahf vpacksswb call mull mov pop dec adc mov sti sub sbb cmp or ss adc inc aas sbb inc stos adc cmp loopne mov jg aad jns mov roll lods imul add pop push nop xor jmp dec jae pop imul mov std pop cmp cmp pop out sub or sub cmp lret fdivl mov fiaddl xchg addr16 xchg inc movsl jno enter fdiv divb test (bad) (bad) jmp dec scas pop addr16 xchg cmc jb xrelease test jnp stos data16 std in (bad) fcom xchg pop sbb loop inc arpl xchg (bad) fst sbb fistpll stc or pop add loope push jle mov push addl push loope push xchg mov and jmp iret mov rcl jecxz add dec mov je xor andl idivl push adc scas and lods mov inc popa fldcw aas cld push cmpl and xor sbb or rcl (bad) hlt jl xchg ret cli push mov insl jmp repnz sub mov lods arpl bound jb movsb daa add push ja inc xchg das inc data16 mov jg mov pop pop scas or lahf rcll sub push jge imul test clc sbb js (bad) mov dec insb ljmp mov psubsb sub int and lods dec adc mov shrl cmp sub frstor ret in mov mov or loop jp adc push mov test push jo push clc push aas push lods jmp xor int3 fdivl pop or xchg cld push adc loopne sbb and jp dec jb xor pop fnstcw loope pusha sub aaa cmpsl test mov lret or pop bnd int iret call cmc jne std adc (bad) mov loop xor pop pusha xchg push dec lcall je das mov xor jge je mov clc lret adc push adcl jo mov out pop mov js enter dec fcomip adc cwtl sahf add mov imul lods pop rorb adc xchg dec mov inc scas xchg in (bad) call cmc movsb cmp test adc or inc xchg das imul xor inc sbb sbb mov rolb std enter inc xor test fstpl es sbb sub mov sarb (bad) movsb xor xchg adc (bad) adc sti sbb enter jg add call push shrl cmp and jnp lds jecxz fisubl daa popa or pop int3 addr16 jp sub mov push sbb xor jp jb (bad) lret movsb dec cltd mov mov jg imul fldl mov push cmp and loopne test mov pop cltd pop cld or xor xchg cld xchg mov sbb push xchg pop ficompl (bad) jbe jae mov clc push add call adc sub dec repnz fisttpll xchg xchg lock scas sbb cmpsb cmp ret xchg push fstp xor jle add cmp push test mov adc out imul shl pop mov xchg outsb gs and nop jns (bad) push dec jl in push lock xor and fcom popa pop fidiv lock cmp pop sub fdivs pusha push ja mov mov mov cwtl cltd push clc adc subl xchg add xchg or and lea std scas mov cmpsb mov jecxz rol scas jle cmp mov xor fsubl mov inc mov (bad) in and jns sub int3 inc outsl or cmpb test mov adc aam inc (bad) or stos pusha push push subl mov add lret outsl add dec push int inc cwtl test iret sub ss pop ja out xchg int mov sti fs jns or add lods loop pop lock cmp es and int3 aam or pop push and loope into ret fldl (bad) dec and int xor int3 sub fs leave push aas out sbb data16 fimull mov push pusha mov dec xchg sbb mov in test scas pop pop loop mov nop cmp dec jns jbe cmp ret pop mov shl dec ss mov lret test jbe jbe dec dec mov rorl push enter cltd leave (bad) repz mov mov mov cmpsb lret cltd dec cmp push pusha (bad) imul (bad) jo push dec mov add cmp mov pop popa cmp imul shrl fsts stos sub push (bad) inc lock ds adc cltd rorl ds mov jns cmp add pop aad sbb push arpl ret mov sub jb test add ds inc aas sahf addl add sub or mov sbb loope mov lret mov lock fsubs fsubs inc adc cs sbb mov ss push dec mov sti push popf add sbb sarb test divl (bad) jp sbb mov insl aad lods mov cmp xchg or pop adc mov push sti mov mov xchg lret ret cmp inc push or (bad) push stos add and push dec cld nop neg mov fist mov (bad) ss out add mov push cs push and inc add mov push rcrl sub pusha adc sub into data16 outsb push fbld lods mov xchg jmp loop andb pop adc pop ds leave scas std mov rolb jb pushf repnz adc ret sbb xchg fcomip jp xchg jle xor add int3 cli loop sbb sbb movsl shrl or dec sti iret pop fbld leave jp cltd inc sub pushf jnp mov push mov data16 (bad) std mov mov addr16 (bad) sbb xchg pop cwtl push mov sub lret dec inc aas dec xor dec int mov adc je lret es lods test rep ja ret push mov sarl call mov int decb lock lret mov aas inc sbb and mov sub jne in enter (bad) mov out lods mov (bad) fsubrs cmpsl lcall mov daa (bad) mov sbb test pop bound inc xorb cmp jp in mov mov rorl pusha loop push into add mov push dec js inc (bad) and cmp mov or or xchg jo mov xor jl xchg adc ss pusha mov sub (bad) jmp jno or es mov fwait inc xor popa sub pop movsb pop mov inc mov aas cmp or leave xchg dec icebp dec hlt incb lods adc ss fiadd sbb xchg shrb fwait adc out ja cmp push adc fwait mov (bad) hlt jg adc roll decl outsb int3 and inc lret dec sbb jp pop xchg ss movsb call add outsb sub inc mov jecxz jbe cmp jg mov js dec add sub test sahf sbb dec gs adc (bad) (bad) mov xchg or std (bad) pop scas leave loopne fmull push jb,pt jge fisttpl cmp dec xor stc daa push das aam mov jp ja push or mov jae arpl push out or cmc xchg mov push jae fld1 sub inc xchg push sbb sub push add xchg inc sbb mov pop ret mov scas insl sub jbe (bad) push addb cmp sub (bad) mov inc movsl jns dec cmp mov test pusha xor pop pushf mov rolb jmp js jne mov scas inc pop sbb idivl in fsubl out jae loopne sahf test std xor outsb loope outsb test in les das sub ret adc cmpsb notl in cmp das xchg xor push xor stos sbb stos xchg je cmp leave jne mov (bad) gs push push mov call cmpsl lds sbb out popa fist (bad) aaa pop adc out push pop leave sub add push movsb mov dec and add and fistp mov push (bad) out push outsl ret (bad) negl shrb aas ja push jnp je pop cmp out repnz (bad) dec icebp mov rolb enter ljmp (bad) adc sbb or lea mov xchg lret mov adc (bad) xchg jecxz mov mov out push pop stc int push ja imul xchg inc je push adc jge jo xchg and xor mov jl inc shr jo dec sbb js xchg enter jl ret std and in (bad) cltd cmp push into push lahf (bad) cs aam cmp addr16 mov push push gs aas mov mov in adc mov inc jae or iret lds jg pop hlt push pop mov dec in aad sbb add xchg and adc ret inc in sbb in in pop dec movsl cmc mov inc in aad dec mov mov jbe sti cmpsl mov jno int into dec mov mov sti and push dec mov andl lea mov mov pop adc or shl dec xor pop jae aas pop (bad) xchg jbe inc push cli scas pop push mov les clc ljmp ret icebp stos enter xchg and add stc adc mov imul shll aaa xor int jmp movsl mov pop aaa mov inc movsb mov xor in mov or inc jge pop mov icebp fs xchg out addl or dec jg decl cld daa lock sarb or daa lock sarb or daa lock sarb or jg clc aas and sub add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lock add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov test inc push push inc sbb adc pop mov sub pop lret (bad) jmp mov fstps fcomi mov fsubrp icebp out decb xlat fbstp add or orb lahf shlb jle push jp jecxz std nop (bad) ret cli ss imul adc lret (bad) cs push shl mov push jp or (bad) xor dec pop lods xchg (bad) lcall jmp sahf into sub (bad) pop scas xor in jae add push cli ja sub pop in stc dec sub dec jnp pop and mov clc dec scas and or stos pusha push je mov xlat inc mov cmp test popa lods popl les and hlt (bad) xor and sub sbb push lds jecxz out imul mov shll call adc adc scas or or xor dec sbb je jle cmpsb nop pusha ss jmp xchg sbb xchg cmpsb (bad) cmc inc out bound imul neg inc mov int3 mov fcompl pop jo push cmpsb dec push push push aas fsub sbb sub push mov aaa in sbb xchg ljmp or xchg js dec fidivr mov faddl push imul rorb cmpsl push or cmp mov mov dec dec daa stc ljmp cli inc add out inc dec jbe xor aam cmp js outsl mov arpl (bad) jge sti xchg cmp call (bad) or jg (bad) cmpsl shr jns mov out or ljmp mov (bad) aaa mov xor sbb in mov repnz imul cld outsb mov (bad) mov pop sar fisubrl xor push and adc adc iret and ret cld inc jle xchg or js mov mov aam mov sub jecxz push mov dec ss pushf outsl push pop scas fs push and fs inc pop mov mov cmp jbe xchg xchg icebp xchg xor mov xor ret xchg mov insl pushf andl or je mov mov jle icebp cmp stc out outsl out mov sub lods pop fistl lcall mov testb pop int or in sub mov mov push daa scas xor jecxz add mov push lahf outsb out push mov js cmp fadd pop stc int imul scas leave dec mov aas clc in mov adc lret in sarl outsb mov adc sub cmpsl insl sub popa xor insb (bad) int jmp enter adc jo fisubr ljmp pop push inc push jnp add and outsl push lret jecxz pop dec into negb jecxz (bad) clc xchg or inc out and push cs lods mov jno cli (bad) sbb pop out sbb sub rorb sub mov and (bad) imul inc pop sbb in push fwait adc outsb dec fwait xchg outsl xchg dec mov mov sub je mov sar sbb sbb popf mov shl mov fstps fs outsb mov pop fs inc iret and sub out scas addr16 jno xchg sti ret jp jg icebp jl mov rol and shlb (bad) cli out sahf add out mov jp mov sbb cmp das push fildll inc fisttpl pop sbb adc jecxz cltd fwait push ja and es in add push jnp es movsl aaa xor inc sti sbbl add ret lods pop push gs popf roll pop cltd sbb pop outsl jb popa lock mov jae lods lods out ja (bad) push jnp mov andb ficomp cmc fdivs add or icebp mov mov js dec es jge inc inc adc mov loope jns jns notl xchg (bad) push inc clc mov lcall inc sub fmull int3 loop test xchg xor jp fnstcw sarl mov pusha inc lock xchg push adc jb mov mov lret add mov mov mov mov mov jo push inc popf xchg cmc psrlw loope push fsubrl push lea cmp mov mov ss sbb je out ds push (bad) into or scas mov push test fisubrl lock inc in stc cmc iret fnstenv cmp mov mov mov mov (bad) stc clc cmp sbb push push xchg sbb outsl jne loopne sti lea push jl xchg mov (bad) out jmp jp lods movsb movsb add ljmp sub lea sbb (bad) clc (bad) je cwtl dec (bad) das addb das xchg fdivr or data16 dec dec test pop pop add xor mov lds adc xchg (bad) flds movsl call cld imull stos inc sub in pop dec lods (bad) cmp push loope (bad) push inc adc jge popf add push mov cmp mov fcoml cwtl fstl add aas push repz pop xchg cmpsb dec loop pusha ljmp xor sbb pop sub ja test call xchg fbld xchg addr16 push das insl imull fldcw test mov jns out xchg sbb and or jbe sbb subb xor aaa ret iret or mov mov sbb mov lods jl cli pushf xor push push jl cwtl push or addr16 ljmp inc mov test iret cmpsb xor pop fwait fwait (bad) cld adc xchg hlt jp clc push insl and data16 es push pop fnstsw adc or call call rcrb into jle inc negl push out (bad) punpckhdq lock (bad) (bad) out fs mov (bad) inc and mov outsb mov out cmp hlt mov add jo popf or insb ja test imul ja or and sahf outsb sahf loop push push or cmp pushf jle insl cwtl add stos cli popf iret adc jno ret stos mov mov into das arpl fsubl negb enter ss rcrb jge aaa enter lcall es es fstps and inc jbe out jmp jno or xor pop xchg lock adc sbb hlt mov push sbb and and gs bound out push jmp inc cltd repz out clc cmp test popf xchg and cmp fimull jmp sbb push insl mov (bad) xor pop inc scas mov in dec xor sub inc jno cmpsb pop mov outsl push push stc sub adc or mov pusha out repnz push mov jb cmp in dec mov imul mov repnz addr16 cltd dec pop fwait aaa jp xor imul lods dec mov push icebp push sub push xchg lods jae or xchg jmp sub xchg repnz push movsb fnstcw sub imul in ret into addr16 out sbb gs mov add mov add out sbb jecxz dec das pop sbb dec jb add dec mov repz dec pop jno sarl mov cmc fldl cwtl fisttp bound test mov xchg dec mov flds sub jmp (bad) mov sub adc sub pushf subb or les fsts lahf xor in mov aam (bad) es ret mov data16 jbe popf out test push rcr adc jp repz js ss and adc lea jns mov iret jmp mov jb dec pushf lea jmp aad adc xchg fwait je (bad) into cmp test cmpsb cld or push dec or leave mov dec aam mov push sub mov dec inc sbb mov pop dec outsl push dec mov imul (bad) jns fbstp and call add jmp sub scas std popf popa push stc outsl jnp std pop jno push loope into ds pop push sub jbe xlat jmp mov or aad (bad) fidivrl adc xchg sbb push shlb lcall mov inc outsb mov rcrb add jnp or (bad) (bad) icebp xchg mov inc sub dec hlt fwait cwtl mov add in xchg sub mov insl inc mov cmp insl pop test sbb pop repz xor mov dec out ret fdivrl stc push pop insl add nop je ja jl leave in dec rclb pusha imul or decl jmp rolb or enter mov sub dec push jne imul push nop insl test in outsl pop mov outsb push repnz sub mov fnstsw add movsb mov sbb lahf jae mov or xchg mov aas and inc jne sub pop jns jmp cs fildll mov test ss in xorl push (bad) data16 dec push push mov fistpl sub lds and or faddl xor pop mov xor xchg hlt loope fild cmp sbb mov or fsubr movsb out loop test adc cmpsb pop mov nop jge inc and and pop js movl jg add xchg mov push enter scas (bad) mov adc in in mov xor shrb sub ja,pn int3 cmp pop lock cmp ror add cmp jle loop loopne mov aad int3 test xchg data16 and jp inc mov push xlat out (bad) stos mov lahf aam aaa mov mov ret xchg dec add mov loope lock (bad) fadds lret aam mov xchg mov xor xor mov or fwait cli test cmpl xchg movsl repz mov int3 jmp cmp jmp (bad) (bad) jnp out push pop lds jecxz scas pusha incl daa push cld sbb push (bad) ftst sahf test pop jne insl xchg mov mov mov dec adc xchg nop (bad) fildl mov lock clc scas pop gs frstor insb sub inc (bad) icebp add into pusha pop pop lret sub fnop leave shlb pop xor mov out ror cld pop stos loope call inc ret mov iret (bad) dec hlt scas mov jns inc add add cmc lahf mov adc lcall pop orl stc fild out sbb pop add (bad) fidivr scas in cltd aad popf leave xor mov sbb pop mov cwtl mov inc xchg std divl cmpsl dec sbb xor fwait pop xchg out les or jecxz mov repz jge test insb inc dec cmp mov or push loope and fdivrl pop fildll out (bad) xor xchg add jnp mov shrl mov insb jbe fadd lret frstor (bad) jle loopne jae pusha out push or xchg sub xchg imul cmp push test ss fistp rcr (bad) imul inc jns adc mov jg iret fmuls xchg jle test pop inc and orb ficoml (bad) cltd xlat and cmp cwtl fcoml add std xchg sub push (bad) mov add hlt mov xor popa jmp scas jnp mov jns push or aad cld cli pusha dec out icebp inc fisttp insl xchg sar inc lods loope pop xor lret imul xchg in imull insl cmp nop add xchg nop add daa mov fwait jp cltd mov adc les mov jp add push dec xchg testb enter mov adc inc add push lods push call div cmp mulb lahf stos js dec lds (bad) xor add out add shl stc and mov adc cmp test jg push gs pushf jge cmp push jo sub les lcall dec cmp pop out dec mov mov cmc mov mov jns pop adc sub push jo inc inc sub push cmpb mulb cvtpi2ps push lds push insl push nop (bad) sbb je mov addr16 xchg movsb mov ja adc dec or cltd fsincos mov dec (bad) in cli inc mov pop cmpb mov add mov mov mov jle mov imulb mov push jne cwtl and pop inc dec mov jae lds imul inc mov pop and repnz adc dec in ss (bad) pop fs cmc xlat inc sbb dec out cmp sahf stos popa ds lea sub push (bad) push insl pop mov lea add mov xchg ss dec test mov insb loope enter and inc (bad) sahf mov idivl adc adc iret mov in pop or and (bad) test ds int and mov mov sti dec mov in shrb adc pop fsubl jecxz movsb out outsl mov sbb xchg std inc popf mov cmp pop jno pop nop inc add adcb sub pusha lods rol js pop xor cli mov xor lahf mov or mov xchg sbb cmpsl aam pushf sti in mov pop jle pop std test bound or cli icebp test popf dec test pop mov (bad) (bad) dec lret (bad) xor mov push inc mov arpl ret test stc call fsubrs leave jmp xchg test fmuls add jmp jae xchg test cwtl in hlt idivl pop pop lds leave (bad) sti test daa jne inc popa lcall dec loope cmp fiadd outsb mov sahf mov arpl and mov (bad) mov sub in popa xlat repz cld ja add mov xchg fist wbinvd xor xchg pop psubsw loopne insb cmp or pop ja jbe cmpsl adc in popf repz cmp aad mull or and adc sti push push aad and outsl xor dec xor mov mov inc add add cmc lods fldt cwtl arpl out jmp cmp ficompl inc out cmp inc pop daa repz and cwtl test lret sbb push dec add cmp repz mov sbb aaa loope cmp mov jns iret fsubl xchg and cmp mov jo sbb adc rcl movsl jg jmp int3 add sub mov stos dec sub inc mov add ja add lods movsl jbe adc jb pop test cmpsb pop adc dec gs sub pop fisttp je test pushf push xor lret call jns outsb js xor sub lock scas into stos jb in es or stos or mov (bad) cltd mov push push push sarl ja xchg outsb cmp mov jg sbb xor js daa int aas pop and out jb pusha sbb jno imul pop sbb or stos idiv movsl push (bad) and jl xchg cltd adc xor dec add fs (bad) scas fldcw dec in cmp aad sahf shll dec (bad) ret inc movsb wrmsr fs rep push sub add pushf (bad) cli xor ficomp xor fistl sub dec mov imul push pop aaa imul stos arpl iret inc inc subl cwtl jae ds ja sbb test cltd es (bad) xor inc mov outsb inc dec call stc mov sti rcll xor xchg sbb sub sbb lock data16 lret movsl push and fldenv imul and add mov andb stos and ljmp into add ja dec xor dec pop pop jns mov push jecxz test push std pop inc jmp mov inc (bad) dec jns shl mov pop (bad) mov call sub dec inc pop mov mov mov jg inc pusha or xchg or ds in dec mov or and or push inc dec xor dec adc frstor mov or jl xchg xchg pushf sarb ja dec add inc ret dec imulb imul mov sbb call int3 ja mov loopne push icebp jbe je jl outsl andb jg ds or outsl dec out mov out fild mov dec das repnz sbb xchg adc adc (bad) int3 (bad) les daa je sub push pusha fsubl mov cmpsb nop jo pop out adc inc dec push sbb test or (bad) pusha repz mov arpl push mov ret out mov in cmc xor push lock outsl jmp pop enter js leave cwtl inc pop sub mov dec inc sbb hlt bound pop pop (bad) int ret mov pop pop fistp inc cltd push scas inc icebp enter cltd ret aas out ljmp jne jg test (bad) inc data16 sub (bad) xor arpl mov sub mov xor push cwtl out jnp icebp negb dec sbb mov dec ljmp cld push ret mov mov push dec stos lds outsl or jbe jg sub and (bad) out lods in cmp sub jg lods mov or mov xchg pop adc aas (bad) lar hlt dec adc (bad) mov xchg dec aad and sub aad lret mov (bad) aam jbe dec push push push mov fcomps jb mov mov adc lcall pop sbb lods sar roll mov sahf dec push cmp push in in sarb (bad) icebp add imul bound sub inc xchg ss xchg roll sbb cwtl xchg pop pop pop lahf xchg jns jle popf pop and ds pop lea sarl test jno lods shlb fstps js mov mov and jae and mov fist aaa loopne mov adc (bad) mov cltd and movsl cltd into and or jno sbb mov cmpsl ja mov popf mov cmpb into mov cmp fbstp enter scas mov lods pop fs sbb jno jge and lret in in fcomps push lods scas mov mov out mov lea scas mov push sti pop pop aam sub and xchg lea push and movsb sub jne cmp jo outsb adc mov lods mov jle enter int push mov popf dec sbb dec pop into cmpsl jns push hlt push push cld and dec cwtl mov sub add xchg jbe mov cltd pusha pop sbb and mov clc add aas and inc aam int3 pusha rcrl ss adc inc mov inc ja jae scas fimul lock jno mov jae es pop insl push cwtl mov cmp sti dec lock mov out (bad) stos fcomps clc dec xchg addr16 push xchg pop xchg mov pusha std lcall daa flds xor js xor outsl mov loope leave flds push sbb add dec sub nop loop add mov clc test xchg jmp mov scas ljmp imul jle rcl aam mov cmp cmp pop enter xchg dec pop insb mov lock mov mov mov adc cmp pop sub nop shl pop adc jbe push repz pop fdivl lret push mov jnp mov mov cmp mov adc aam pop pop jae in inc sbb adc mov ja adc stos jecxz inc inc xchg push mov mov sub lret adc xchg dec call sub lcall sub pop mov xchg sar in push cmp repz xlat sbb or mov cmpsl (bad) pop mov pop fsubr ja dec sub and dec or pop ss mov (bad) lods adc fidiv push cmpsb jae rcrb cwtl fisttpll sbb add imul fnstenv or in ret adcb addr16 sub mov sub lods sbbl fnstcw call nop scas cmpsb ja popa xor xlat int3 (bad) (bad) test xchg out mov adc mov pop cmp loope sarb sbb fcomps mov cld xlat xchg sbb icebp xchg inc dec pop push or sub lret fild pop fsubs and ss sahf mov cs pushf fildll cmp fadds add dec sbb inc aam aad inc cli mov mov out (bad) xor push fcmovnu lahf adc push shll and insl cld dec aas outsl xchg repnz adc jns pop imull test mov sub push adc vaddsubps outsl inc ja aaa std xchg mov in jns enter and pusha sub in or add mov dec scas test stos andl out mov in xlat or fsts jbe xchg sub mov xor insb (bad) mov dec xchg jg divl mov adc pop mov mov in lret xchg imull xchg cmp insl cmpsb and fsubp enter cmp dec jb outsl jns ljmp push repnz mov test into cs cld cld test inc pop push lret mov mov out js leave or add jbe xrelease fbstp ffree pusha subl pop icebp insb dec mov push fs adc inc adc sti insl sub mov dec into insl stc sbb scas cmp xchg mov (bad) testb add mov ret popa sbb fildll mov hlt stos fs es in test pop dec dec movsl jb jmp cmpsb and mov frstor add adcb aaa jp sbb sbb dec das aas jae fwait pop pavgb adc jno clc push (bad) mov inc cmc push mov aaa jnp inc and and std and cmp mov (bad) adc push lret mov loop fwait jae fimull mov in nop inc add jmp leave fiadd lock es mov idivb push jecxz mov xchg sub data16 dec inc (bad) mov lock add mov into mov loopne xchg outsl or add mov mov sbb push and pop mov scas aas xchg xorl negl mov arpl clc xchg mov and xor sub inc js int3 inc mov dec mov ficom pop mov scas cmp aam inc mov mov jbe bound popa push scas push mov or xor aas dec mov jo test shr mov sub sbb add dec imul dec out test mov shll fist inc cmp bound lods add push aaa jmp popf inc fildll adc les bound mov out fdivr xchg push mov xor pop push pop lret or orb mov push sub je jge decl fwait aam movsl cli inc pop cmp jecxz shll dec xchg push mov mov or jae push mov push cld jecxz pop mov vmwrite mov aas xchg add cmp rcll mov mov xor popa sub cmp cmp cltd popf pop or call xchg (bad) aam pushf mov mov (bad) insb mov cmp addr16 idivb popa mov notl lea xor sbb jno and jne loopne push cltd out lds xor bound mulb out pusha pop pusha xor push jb fist loope pop shll pop lahf pop cmpsl call addr16 adc adc mov hlt mov stos or mov add fwait mov or pusha (bad) jno xchg or aas inc lea adc xchg adc loopne xor ret dec xchg (bad) jne push fistpll push sti fcomps ret cmpl ret lods inc mov int3 mov pop adcl add mov stc fisubrl std jo scas add test mov iret (bad) cmp mov and ficomp out cwtl pop int xchg or mov mov jge xchg bound mov int or into popl rorl and add mov xchg xchg popa dec pop sub xchg xchg add adc cld in mov fsubrp fsubl fwait sbb (bad) insl into js sbb ljmp test mov mov mov hlt push adc scas insb repnz inc popf cmpsb mov push sbb repnz icebp ret xchg in insb pop in repnz les std out dec popa xor push popa ljmp clc xlat aas cmpl cld adc daa lock loopne sarb jg incl or adc daa lock jg mov (bad) repnz add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repnz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push pop sbb mov stos xchg insl fwait lret mov (bad) fdivl mov lret ss fcomip mov mov add xor add ljmp mov jecxz movsb out test mov or or popf jo dec push xchg fistpll icebp adc inc std push stos xlat fimull sbb pop cmpb (bad) pop xchg aad mov (bad) scas loope inc inc mov and mov sub fist mov clc rorl mov das sbb clc js mov xor xchg js (bad) mov jge mov sub xor fidivr cmp lods stc pop gs insb and out fmuls daa cld repz (bad) push jle pushf sti int3 cwtl andl movsb pop js rcll (bad) lcall cmp cmp aaa and aam jp (bad) mov int cmp inc stc in sub test (bad) ja into inc inc fmul ja xor bound ss aad into popf xchg sub (bad) jns outsl and push pusha test in mov xor sbb int3 clc lods lcall je das mov aad test orb int3 (bad) fcmovnbe lods inc frstor cwtl mov cmp xchg jns scas jecxz aad rorb (bad) xor mov cmp pop stos mov lea outsl sbb popf cld pop or ss pop fmul inc or hlt mov jmp sbb lods pop cmp fsub popf cmc daa inc lea push roll sbb adc mov push mov pop out push test mov sbb and repz or pextrw imul push jecxz push and xchg cmp and add (bad) or mov mov sub pop sbb lret aaa jge adc test lds fsubrl out mov cwtl out (bad) xor out movsb add push add xchg sbb fs jo aaa (bad) ret xor shrd mov lock sbb (bad) into mov inc stc lds xchg lock out or (bad) mov inc or pushf pop jg mov dec cmp inc jb and outsb std jnp mov lods mov dec xchg mov out and cli imul ds in (bad) jg or lret sub fldcw and cmc sahf (bad) and insb loopne ljmp shr mov inc std pop and jo addr16 dec insl mov das loope cli aam mov dec fistpl aad mov cmc (bad) sbb mov add sbb jg mov arpl ds mov out dec add mov or mov cmp and fidivl in or push repz mov or inc and stos mov mov fsubl scas gs sub pop mov sbb jae cmp ret xor jle fmull shrl jns fdivs inc lret pop mov (bad) sub test je jnp push mov mov cltd jno and clc mov xchg and mov sbb je rorb xchg push dec inc sub ja jge das clc (bad) repnz (bad) repnz sahf test data16 movsb mov ss ss add clc rcl push push enter adc xor leave addr16 push int3 mov xchg pop xchg sarb mov shr inc jmp mov push cmp fwait int add push sub mov sub scas add fiadd xchg sbb jns lds sub mov inc int3 out out jmp into lds mov cld popa mov mov sub stos mov lcall sub dec dec or std sbb fsubrl cmp imul cld cli cld adc in jo mov rorb hlt pusha daa push std jae fdiv pop dec adc xor xchg xchg pop (bad) or test ja jle aaa xor cli pop rclb jbe mov clc sbb lods mov dec sbb lods mov dec cmpsl cld push dec insl sti mov mov xor jp cli inc jae pop sub cld das lods mov in mov mov sbb es jp mov imul xchg (bad) leave jl iret or add mov ja sub cmp insl nop imull and loop and dec sbb dec pop pop test or add or lods inc (bad) out sub or inc js push popa insb fstpl jecxz and ja insl dec rorb xchg out fs xchg andl das fistp rcrl call push ljmp sti sub fwait push adc std sub jp or xchg sbb xchg jp loope jl sbb jb dec sarb popa dec mov fwait and xor lods cwtl sahf pusha and data16 cmp mov mov dec adc xorl lods xor out repz xor daa lcall dec lcall loop push cmp nop sub cs jo dec cmp pop pop cmpl sub ret sub out push sub cmpb (bad) stc sub lods add adc daa push mov mov addl mov mov fiadd jp,pn dec adc sbb test rcrl cwtl xchg push (bad) ljmp sbbb add lds mov roll adc xor (bad) mov dec add adc aas stos mov mov cli ret daa pop cmpsb inc push (bad) and push ja push and ja lds mov test dec dec (bad) cmp orb out mov ficom or ret mov cld inc insl cltd nop popf push inc testb sub xchg add jg cmp pop es and dec dec out das stos repnz cmp cltd push mov pushf fnsave mov mov fldcw rcrl jnp es pop sub sarl mov pusha into adc or inc adc cwtl ret dec jns inc sbb (bad) loop aaa fwait sub mov xor sti or lret mov mov xchg sti jp mov lret jbe enter or shrb lea repnz inc nop sti sbb add inc aad mov push pop pusha shrl enter fsubs insl and cmp rcl sahf in jmp repnz sbb jl fldl icebp push push dec fidivrl aaa sbb mov lock xor inc jmp jmp adc ret jae maskmovq push cmp lret decb jbe dec int3 lods aaa imul and cmp xor loop xchg aam adc lods pop fldcw inc clc arpl ds mov jg repnz test cmp jo incl subl test jg std dec inc pop ja and lahf jp cmp pop loope jb sub sarl push outsb jmp mov (bad) mov sub lock or pusha inc dec fisttpl push rcr ss subl sub or mov shrl fdivl sbb xlat jae mov jge in in push jns fs scas adc dec mov in xlat push fistpll (bad) and (bad) les out pop lods into aaa inc ficoml enter in fdivrs xchg dec xchg mov lret add xor movsl aam xor dec fisttpl pop add mov lret dec sbb push pop fnclex sbb mov mov outsl outsb pusha xchg mov repz jl stc jno mov pop pop imul inc mov mov sahf ja jmp xor movsb xor push mov dec roll inc jbe adc loopne jle lock inc lahf flds mov jmp fcmovnbe cmp mov jl movsb xchg cs out sahf adc dec xor jno cmp xlat bound and mov mov das add xor jbe (bad) or dec cmpsl sbb mov lahf in enter mov jge jmp js pop inc mov sbbl dec inc scas lret push sub pop out ret mov add mov les psubq lds xor pusha daa (bad) jae leave xchg (bad) int3 jp cmpsl fprem1 mov or ja pop sbb inc lock aam xchg pop cmpsl stos fcomps lahf jge lds ret xchg rolb ss cs jb popf pop mov fs and jno mov popa stos push adc outsb push (bad) repz and ss and cmp mov into mov pusha and mov (bad) sarl dec fsubs fiadd dec movsl add in fstpt mov cmpsl mov sarb int jmp ret sbb xor dec add lahf or cmpsl mov mov mov fmul in or sbb aaa iret leave div cmp test cmp aaa rcrb fisttpll fstpl jmp gs in xor xchg pop in arpl sub sub sub test add adc add (bad) push daa mov cwtl ficompl lcall cwtl insb lret rcll pop loope test inc enter loope cmc clc aas (bad) push gs and pop cmp clc (bad) mov int3 lahf lds movsl inc xor imul mov inc cmpsb add or and dec insl push out jle (bad) cld aaa call lock (bad) hlt mov stc sti xchg (bad) fisttpl xor pop xlat stos pop pop aaa fs fs movsl push and or push addb outsl jge call and add dec cs mov gs add (bad) cwtl sbb push jl mov ljmp push neg outsb out xchg (bad) jno sbb xor fwait in test (bad) mov cmpl popf dec out push ljmp xchg outsb repnz add data16 int3 les jno xchg flds push cmp (bad) ret push cmp jle out popf jb bound (bad) mov das sbb sbb xchg rcrl test sbb sbb clc add aas dec push hlt (bad) push sbb pop in jg pop cmp xchg dec push xor data16 xor jns inc dec mov movsl call cmc repnz push cmp arpl mov jno out mov sbb jg mov adcl dec movsb pop jp aaa stc fnstsw das cmpsl ret mov fmuls mov push add inc arpl pusha mov cmc mov das cmp mov xor iret mov js push cmp loop es mov inc push out xchg enter js jge unpcklps loopne lahf xchg mov call xorb lahf jo aaa or cmpsb mov loop (bad) iret xorl popf (bad) pop test sub xor sub add sub lds arpl add inc xchg jnp fwait xchg insl ret pop imull andb adc (bad) push dec jmp add stos mov xor xchg popf inc xchg inc push or cmp push mov enter out jle xchg push gs popa js mov mov fsubrl push lods sarl stos and mov xchg lret ja jne cmp dec xor pop or aas xor sub mov addl sbbl rcll gs add pop pushf jge shrl cmpsl (bad) (bad) sbb cmpsb inc adc mov push xchg fmulp adc orb xor lds jae fwait xchg and lret or xorl loop int ljmp pop pop push scas pop lcall outsb ret nop push xor lcall pop jge nop aas rolb int3 fistpl (bad) xor mov (bad) repz fstp aaa dec dec xor mov xchg aas xor insl outsl fistpl call shrb sarl lret add lods cmp scas mov mov or (bad) in pop nop sbb push hlt fist flds loope fisubl add sbb push sarb movsl jbe popa (bad) (bad) xchg jge loop pushf aas cld (bad) mov and sti sub sbb arpl add mov cltd ljmp cmp cmp inc nop dec out and lods nop adc sub je adc xor jle or jl adc adc xor gs push push jge adc mov lds sub mov out pop nop ret add iret mov scas les or dec loope lods xor xchg sahf ds sahf push mov pop lahf push sbb dec and xlat or mov adc mov mov shrb jp push mov inc push sahf mov into adc push aad in add or popa and cli pop sub test mov outsb cmp jmp xor pop jne aas jl movsb stos cmp (bad) mov add jl lods gs xchg out data16 scas jno insb movsl mov push xor push out xlat inc push mov lock in pop fs insl outsl cld mov mov loopne sub dec repnz aas push (bad) mov stc lcall or iret pusha push in cmc into pop int3 sub push mov imul loope test fisubrl les push ja jbe sub in sbb pop push loopne inc aad cmp cli insl daa mov pop xor fs daa ret aad mov int stos icebp xlat testb mov xacquire push mov pop inc sbb cmp mov fsubs push mov jns dec jb iret mov jge lods int mov jno jno std push sub test lahf inc out sbb ljmp pop ret adc mov insl jp xor (bad) dec pop jno dec les adc lahf enter pop popf jecxz (bad) cmp inc ss frstor imul sbb adc roll movsb imul jnp dec lods push loopne sub push mov or xchg mov sti int cmp test sub mov aas jp add andl mov in out pop loope jo daa ret and jae and dec sar loopne push and or repnz ja and adc push in das sahf fwait push dec arpl stos xchg test add stos jb xchg mov stos out icebp mov sbb int (bad) dec adc sbb fsin xchg push xchg rorb ss xlat cld pushf and mov popf std aaa mov and xchg (bad) test dec jnp pushf mov jp push in jno movsl ja adc push in repnz sub xor movsb loopne imul pop popa adc xor or cmc xlat push jnp inc hlt loop mov les cmpsl stos jae dec xor fistpl xchg add das inc push mov sahf imul idiv pop test (bad) pushl stos jne ds jae aas pop sbb inc cmp xchg pop push test adc daa xor add cmp sbb test lahf test jo jle lahf lea push or inc mov xchg mov cs int3 cs pop andb xchg repz ret sbb scas cs pop cwtl inc or mov (bad) (bad) pushf push xor out cmp bound sub jns divb adc in test pop mov adc into outsb pop lods inc cwtl arpl fisub sbb sbb cs dec test pushf dec fisubrl stc inc jns lret aam cmp sub and dec loope les mov jbe ljmp push sbb mov push xchg shll dec subl out lods and test sub shr sbb int dec pop pushf or push jns cmp clc notl pop cmp aaa lock inc leave push xor enter xchg add push (bad) xchg lret repnz mov xor popf cmpsl hlt sub je cmpl pusha loopne push inc sbb xor cmp mov (bad) fisubr (bad) xchg or fisubl xchg pop stos mov clc loopne pushf xor ret fwait mov fadd mov test or ret hlt xchg mov les cvttps2pi mov dec test xchg cmp push in add jae mov xchg aam fs sti and mov stos shl fwait inc mov add pusha xchg in popf js mov into or xor (bad) cmp lcall mov mov arpl xchg xor cmp pop fdivrs add dec jb jb xchg mov lods leave xchg dec loope inc jno push popa (bad) ret cli jge orl mov enter cmpsb cmp or ljmp enter (bad) pop cwtl aas jae addr16 fcoms jge adc sti shrb and inc adc out cmpsl pop xor jmp adc cmp mov pop mov push xor cmp xor mov jbe test fstl js int or push and fwait notl push mov movsb adc xorl and aad mov mov fisub push js mov mov (bad) or aaa push mov fidiv mov xchg ss push les sub adc xchg or xor jecxz or test adc and cwtl aam cmpsl sbb in push cmp dec xchg out cs push sub sahf push push mov mov outsb ljmp push push testb mov clc and push pop cmp push insl rolb and imul jp sub or mov ret jp jmp adc jno fiaddl leave cmp movsl inc lcall shr (bad) push cmp mov and (bad) mov push iret and sub xor and push les mov (bad) dec xchg sbb or xorl mov xor push jg cmp fwait stc pop fdivrl mov mov ror test xor orl repnz bound adc mov pop mov xor sub in jle aas push pop and imul adc mov lret lock xor jge push nop rolb jmp dec stos mov arpl arpl vmwrite pop sub lea into lcall xchg xor mov push jbe jge in hlt pushf inc lcall pop call mov add data16 mov into nop icebp js call push sub imul fwait jne in repz stc pop gs (bad) jno mov les mov mov mov out dec cltd or jnp out (bad) repnz shlb sbb cltd int push mov test mov sti repz in mov int3 inc push sub mov in push mov xchg sub add (bad) fwait and pusha test fwait xor mov sub jp movsl (bad) or pop orl sub mov inc ss bound sub scas icebp outsl stos jmp js sub pop xor pop aad mov jo aas ljmp shlb jne push jns inc sbb add lock push push out lds pop mov lahf or jg jmp sbb andl es popa pushf ljmp shrb pop jns subl mov shrl pop out (bad) mov call pop jle add jl (bad) iret (bad) dec and inc jp aam aaa cltd aas and mov or out dec (bad) fbstp pop mov pop bound outsb adc inc xor into sti cltd (bad) jno loope inc lcall mull and into gs ret push and sarb out ljmp mov add int aas or sbb les ljmp sub jns pop (bad) lock cs push sbb adc cmpsb and test or movsl add jb lods adc imul xor xor bound mov shrb or bound xor pop add push out shrb std aaa icebp add outsl shlb out nop jg js xchg jno insb xchg add data16 and out fildll adc lahf add xor dec sbb cltd insb cltd out outsb clc mov push and and (bad) push ud1 shrb cltd (bad) push sti ret enter pop shrb jne pop cmp je dec outsb in bnd and in jle fildll js or iret jg or mov inc test aad cmpsb idivl test xchg cld mov (bad) (bad) in sti lods jne xor mov insb xor pop inc bound dec xchg adc sbbl mov inc xor lods cmp jb das shrl xchg mov fldcw sahf imul ret out xor pop jp bsr fdivrl jp ds (bad) sti jo test mov pop cmp scas sbb dec nop enter lret sbb or gs inc pop sub scas incb aam xchg imulb mov pop clc xor jns sbb jle xor or stos xchg inc cwtl jg es pop sbb out mov or loope mov imul jecxz sbb jge pop aas mov stos sub jno ret mov pop hlt mov push rorl ss divl pop jg popf dec insb mov addl push dec jmp pushf ss pop ret push mov test xor test lock or repz sbb pop add sub or jnp xchg aas aaa sar xchg and mov dec int3 out inc popf stos rcl lea aaa pop jnp jo sarl lret xlat mov movsl add pop mov cltd (bad) test jle sub popa jb xchg mov adc sub pop mov mov std addb jno iret dec cltd push push dec cmp aas xchg fs xor lods lahf push jnp mov pushf out and inc into jae aas or jo xor das cmp rcll inc bound call cmp mov sarb push jo add int bound jecxz cmpsb push (bad) xor loopne sbb icebp push outsl push repnz dec sbb inc or add gs push les js movsb out xor scas scas repnz sahf cli cld repnz ror testb cmc cmc repnz jmp addr16 sti lock cld jbe mov daa mov xchg aas in loop mov and xchg cmp iret clc push std fwait push loopne roll cmp xchg sbb mov mov out add mov jg xor xor addr16 aaa cmp xchg addr16 loopne sub push (bad) je fistpl in hlt xchg sbb das pop sbb movsl hlt fmull movsb loop out mov aam cmp pop ficompl cwtl pop add loop imul insb jle data16 cmc out gs sbb push dec shrl aad jecxz sbb mov inc cli mov mov bound sahf push mov inc fbld hlt xchg lds xchg (bad) icebp lret adc cld lods movsb or out push js rep ficomp pop orb cmpsb sti hlt mov or or ja sub stos push shr sub lcall cs add jmp sub dec mov jno sbb test mov dec mov inc xor adc push cmp xchg mov jp xor adc xchg lods jl popa rcr loop cltd inc dec lret into sbbl push fldt out sbb xor push adc xchg incl mov xchg cltd popf inc jb push mov (bad) and (bad) mov out movsl mov or popa xlat shlb les cmp sub and jge add cmp pop std daa push in mov leave scas inc das mov cmpsl mov mov xor xchg pop push ja aaa test jg adc int lret jbe push ds sbb mov loopne sbb hlt rcrl enter adc je adc push xchg xchg shlb lods gs repnz addr16 aad int3 pushf fisubl dec cmp push pop jns aaa rorl negl ror add (bad) enter cmc test mov test push (bad) enter gs hlt mov cs pop xchg sbb pushf lahf jb fcmovnbe fldenv jle outsl mov (bad) lods adc and push in cmp push cmpsl (bad) nop mov data16 pop es adc mov jp pop add and (bad) ja test push das sub nop xor mov scas inc imul mov aaa cmp scas xchg mov les push out and out mov stc lcall and or in adc inc pop imul (bad) gs sbb insb fbstp test mov (bad) mov cltd push test fstpt decl cld daa lock sarb or daa lock sarb or daa lock sarb or jg clc aas cli lcall add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop fimul mov in mov scas fisubrl mov insb (bad) insl sbb lret jne sahf (bad) std cmp cmp add cmp cmp xor (bad) xor cmc out mov scas xor push jbe ss pop lret outsl lcall out jg fnop arpl and jno or fisub and fcomp sbb arpl inc les pop jmp pop cld cmp pop (bad) adc adc cwtl lcall xor fldt push icebp scas mov cli mov nop mov xchg stos sbb leave xor and jae cmp inc dec out mov jmp gs jno mov inc mov inc jo dec fnstsw inc (bad) or or out popf inc out fwait movsb aam jb add xor jmp sub out inc js xor xor cltd arpl jae arpl inc popf push jno mov xor xchg xor or jb daa out inc lods sub rcl pop out pop or pop loop cmpsl pop or repnz outsl xchg mov xor je inc fnstcw mov movsl mov daa fstpl fwait inc fisubl mov push mov sti lods mov dec les jns lahf push sarb lock mov or movsb addl aad mov adc push dec cmpsl pop and shlb les jb out imul imul push ja lds dec (bad) (bad) icebp xor xor std ljmp push out push mov mov loop mov jnp fisub loope cltd imul loope std fdivs pop (bad) jns cmp ret rcll add ret icebp jmp pop (bad) lea xchg xor (bad) mov les sarb jmp andl mov movsl pusha not xchg mov aam outsb sbb cltd and push inc mov dec dec outsb xor insl imul jbe (bad) dec mov mov test rcrl xchg nop out xchg testl nop test xor (bad) mov andl sbbl xlat (bad) cs mov call repz xlat (bad) cmp cmpsb lock cmc je repz das inc test jne jb stos jp gs fstl call and jnp in push pop sbb cld mov jne nop bound ffreep xchg insb divl jle int3 test (bad) mov loopne dec test adc jno sub pop jle clc (bad) mov arpl cld rorb stos jne xlat movq cmp pop testb shrb sbb jae insb popf scas cs push fistpl xor imul or arpl cmovne and xor cs dec ss ljmp fsubrl xor pop subl xchg lods loop movsl loop sbb (bad) icebp out movsl fcompl mov aad test mov sbb test out rcrb mov mov add rorl inc aad dec pop mov cltd outsl or dec xchg lds imul sub aaa adc sbb sbb les nop mov gs add push mov in or dec out (bad) xor pop cs mov jg sbb mov aad pop stc sbb jg fisttpll mov mov cli and cmp daa insb orl test lock aaa inc arpl add shrl or ja (bad) mov mov sub pop aam fst pop xchg dec pop aad xor jbe cmpsb cmp adc subl jl push xchg cmp int3 mov imul aad icebp fsubl cmp sahf pop mov and jp or adc xchg rcrl push pop mov js in push or cli pushf inc and xchg iret sub cmc inc inc repz scas out lret push inc mov fidivl sarl push mov adc dec scas xor jo outsl shll cmp sbb push lods dec xor pop les (bad) in call (bad) inc jecxz stc imul cmp pop adc xchg call test push jne pop shrl add pmulhuw outsb inc pop dec in mov mov mov pop fisubrl daa or in dec adc iret jecxz xchg jns xor out repnz lahf jo mov mov dec scas mov pop mov mov adc sbb mov jmp fwait xor push out adc loop add cmp mov in sub in cs into push test je fistl add push xor and or jae sbb ss xchg outsb movsb pop jmp std adc scas mov push icebp insl ret add adc dec or mov out mov inc inc push push mov xchg inc adc test movsb mov rcl lds mov stos fistl je movsb xchg cltd cmp lods adc jl insb mov inc lds push insb rorl test jp icebp rorb cmp shr push int dec xor push inc lret int3 decb dec pop cs mov inc inc (bad) (bad) int test mov cli jae push data16 mov lds sub jmp sti mov push bound test sub sbb fildl (bad) and xor into jbe adc call dec mov loope jo shll lret push dec mov cli ja sub sarl mov jl cmp mov jge sub xor add dec cmc outsb dec enter loop sub sub push dec aam (bad) icebp push push test enter lods in and mov pusha mov fwait add mov inc aad sub mov mov stc gs sub lahf cmpsb mov dec sub ss daa outsb lea inc jns repz inc cmp mov in dec fwait push ret out push add repnz mov out sbb fcmovb in in dec jmp fs in dec pop add cmp mov mov orb jnp push pop outsl add fidivl pop pop sbb shlb xchg lahf sbb fwait sub nop add out xor xor sbb xchg mov jp and mov lock clc xchg fwait mov rcll jns pop mov insl (bad) aam (bad) negl fwait xchg mov pop aam xor mov mov (bad) addr16 and (bad) cmp lock pop dec sub imul inc xchg out inc inc xchg cli or addl sbb mov sub mov inc xchg xlat fbld fld1 pop xor mov xchg cmp sbb or mov (bad) sub pop (bad) aaa (bad) mov aam push mov int sbb gs xchg mov ljmp sbbl inc in cmp push stc fs insb mov aas add aad lret fxch push jno int3 sub pop and mov test pop pop inc lock xchg pop sbb inc pushf lcall add mov push dec mov out rclb cmp data16 mov ret lcall jmp fs jb mov mov iret out mov jbe iret push out xchg mov add jle cmpsb mov pop fistpl inc push sbb push ds pop dec call mov pop or repnz pushf xchg cmp push cmp cmpsb mov jg hlt sub adc nop pop jne cld daa loop scas jne sub popa jg data16 mov daa jle repnz mov orl loop inc sahf mov (bad) push cmp xor mov repz cmp je cwtl xor xorl fbstp aaa inc cli (bad) mov mov cmc pushf xchg cltd out sbb push lds (bad) jo pop jno lds push ret aas xlat pushf (bad) ret out mov lret repz js sti maxps xlat xchg mov adc out orb test in or push loope sub loop test sbbl sahf mov jns cmpsl mov cmp xor aaa scas shrb aaa adc pop mov out dec lods and (bad) icebp mov jae push into xor or add out jno sub mov aas mov xor js fdivl jle sub aad rclb push (bad) scas fistpl aaa sbb (bad) (bad) lret sub add adc mov adcl mov adc jno jp xchg xor in aaa fucomp int3 push mov cmp xor mov mov pop mov das lcall or push sub mov and pop outsl ja inc in rolb adc xor xorl outsb mov and push setle sub xchg cmp fwait nop mov xchg mov xor sbb sbb lret pop sbb (bad) in popf jle orl dec je push cmp add cmp popa mov movsb jge imul sub enter xor das add xor jbe (bad) out and lea fiadd aam xchg jb mov aam jnp out mulb sub pop addr16 and pop (bad) push scas in mov xlat sbb pop pop jmp das lock lcall mov shll xor add aas test aam push hlt sub insl dec nop adc ficom ja and mov mov xchg in pushf into iret mov adc movsb add dec in sbb adc fstps inc mov mov push sbb add dec and leave jle out lahf cmp xor repnz lods iret dec jp bound and insb rcrl pop inc mov mov jmp cwtl enter jno scas (bad) xor mov popa int3 push lea jb fwait lock lods bound push rcrl mov test mov lcall sbb jo mov cli in cmp fmull push in inc rcl push pushf jne or xor std cltd rcrl sbb in repnz in orl jg inc sub cltd fldl2e fcoml (bad) fcmove jmp repz enter loope cmpsl insl jne cmp leave ret cmpsb inc mull pop inc lret mov divl jno (bad) or cmp lock xor (bad) test (bad) ss movsb xchg nop and sub and sub outsl (bad) push fdiv dec ret mov call jg mov in pushf dec cmp cmp cwtl inc push mov cmp jo inc jle jecxz cmc add sbb add sbbl call and push repz (bad) lret mov loope cltd lea test push jne out push inc fisttp in roll sti mov inc push mov fisub lahf aaa mov hlt mov jecxz mov imul cmp adc ljmp into sarl lret daa xlat xchg sbb inc inc mov pop fild and mov das incl loope adc test shr lods pusha (bad) int stos psrld xchg jge test lcall or mov jp data16 xor add pushw or adc cld les idiv roll dec lock or ret mov es es jne lretw push cli dec cmpsb dec mov pop add jle cmp dec outsl (bad) cmp mov out dec push fdivs mov jnp rcrb addl daa xchg jbe outsb xchg fs push xor roll xchg rcrb jle push lea out push jb pop mov nop les jnp lahf insl ss mov pop lret mov lcall in push fimull xor imul jecxz test mov mov mov jbe fcmovnu test push sbb adc sbb pop outsl xor and lock outsl mov xlat push cmp adc ret icebp push shrb lock int3 inc lret inc andl loop sub int cmp into dec cmp rorl andl sbb pop loope mov mov mov adc popa sub add sti push mov jno (bad) ficompl xchg lea add rcrb insb lret pushf dec cmp push cld rcll outsl jl push test aaa push inc push inc adc ds insb push cld arpl push clc call jne xor sub fldcw mov cmp jns xchg nop cmc add loopne dec xchg dec addr16 data16 mov pop xlat stos movl movsl ret push jl negb jne sti rolb outsb mov mov push idivl pop es cmpsb lods and ret fistpll int3 nop mov (bad) cltd (bad) daa cmp jl and loopne imul iret stc subl mov inc es insl in cmp xchg push loop outsl movsl jg sub fwait sahf sar stc test fidivrl iret xchg and lcall sbb pusha mov pop testl mov pop jne dec xchg add out sbb dec hlt add push mov cltd inc test sbb or test (bad) pop jg gs aam cmp loope and cli sub in in pop push inc xchg (bad) push mov jg ret addr16 dec mov sbb or outsb dec rorl and mov insertq sub sbbl dec sahf mov stc lret xchg out sub mov xchg mov and cwtl xlat or stos lock mov in sub nop dec shll pop movsb mov cltd test mov jae (bad) xor xor ror das sub (bad) mov pop mov add lds xlat sub dec shrl mov scas mov shrb pop mov jae or mov adc cli jmp ljmp xchg cmp dec push stos (bad) jo out test insl xchg cmc push xor xchg orl sub cmpsl pop jno daa add clc ja mov lret shl test mov dec fcompl sbb adc xor icebp test lret mov dec cmpsb movsb cmpsl aam mov cld xchg out sub or bnd ss jmp lds push gs (bad) lahf adc mov mov stos pop fmuls movsb mov mov push push cmc divb ss jne or loop adc or fs aas in pop cmp cs outsb popf pop mov loope stc mov xor jo pop outsl add xchg pop add inc inc inc (bad) mov call lea adc fs out scas ret (bad) js dec mov icebp mov and sub std pop add push scas gs inc adc or mov push pop es or xchg rcl sbb jmp dec popf shrl push ds dec cmp in ret xchg and ja lcall jb xor jae das add or inc cmpsb adc jno mov ljmp mov cmp mov sub repnz sub and and inc jge pop mov enter mov jne bound mov mov xchg or inc mov pop dec lret cmp dec out sbb jae (bad) and inc inc aad mov ficompl mov pusha cmp fistp (bad) dec out movsl xchg insb aad mov out dec cwtl ret arpl repnz sub mov xor (bad) outsb xor cmp sbb hlt xor testl js (bad) mov mov sub or pop std xchg mov ficoml and jne jge pop dec (bad) das mov add push fwait inc mov lods aas and xor fildll mov inc jg xchg mov call stos (bad) dec xchg mov mov bound fcoml mov and cmp (bad) jge cmp iret orps sub and mov or mov sahf cmp in shll cltd or cmp sbb push xor jecxz push pop cmp jl movl (bad) gs pop jbe jl or rorb in pop pop mov push nop mov ljmp rclb stos es adc test push dec pop jnp sub pop or jne xor lods mov pop xchg push iret sahf dec adc lret xchg inc inc xorl sbb sub push jle imul inc pop jbe idivb insb ret lahf push push ss xchg (bad) mov pop pusha leave icebp and xchg call cmc mov and fwait loop adc lods add hlt fs add or rcll cmpsl push cltd mov cmp xchg insb fstpl cmp nop hlt scas inc add scas popa fimull add cli mov and jbe lods dec ss inc lahf fistp out (bad) xor lret xor jns jcxz rol lds xchg cmp inc roll arpl imul lock cwtl pop jl fs shl ffree lds cmp sbb (bad) dec daa insb adc xchg jge mov cli dec and lcall cmc (bad) dec stos cmp arpl cmc es rcll xchg and iret daa imul shll repnz movsl in mov inc (bad) sub pushf pop mov ja push push (bad) loopne (bad) je jmp jnp arpl bound mov sbb lods dec outsl mov xor jmp pop (bad) int3 daa sub test push ds mov mov in aas pop into in pop ror or mov xchg sbb pop push outsb arpl xchg jl sub push fs das cmpsb and push pop mov xchg pop cltd popf mov xor mov lret mov ret add addr16 dec pop xor (bad) sub daa xor pop es sahf sahf mov ljmp mov (bad) in movsl pop out and fs mov pop xchg sahf add push inc (bad) fnstenv or movsl add nop decl add iret or fist test cmc sub xor mov in xor (bad) in jnp jbe test lret xchg adc outsl or inc sub ss push sub sub dec mov push inc sbb sarl adc lock mov aaa sbb aas dec ror enter pusha dec sti sub jno les cwtl fsubl push out ss xor loope xchg mov mov push xor (bad) mov sbb in push xor jle mov gs xor pop insb adc lcall pop das flds pop lret mov inc in pop add loopne mov jb sbb mov mov lock test mov imul test jnp lret fimull dec lods xchg push ljmp ficompl mov int xchg ja idivl mov mov fwait test jmp mov fimul lds (bad) cwtl outsb pop call push mull sbb ss aaa (bad) lea sub (bad) je (bad) cmp push ljmp jg dec jl pop add sub (bad) push int xorb outsb push imul pop movsb inc or push sub xor inc (bad) fiadd cmc inc or pop in in sbb sbb stc test sub mov jl mov addr16 mov inc sub pop arpl mov jmp or negl sbb mov enter pop sbb (bad) cli lea iret cltd lods (bad) nop dec aam mov test test cs les ljmp in and xor pop or rorl mov jno popf aaa aas jne sub dec call inc mov and cmp imul push ret and and jg adcl and hlt and imul mov out in jae add aaa cmpxchg (bad) jge cmp aas fs outsl (bad) mov orl lds test xor repnz adc or jl push lret rcrb out push in lcall cli out stos push addr16 fs and add mov enter xchg jmp (bad) add add jp outsb cmp push xlat or (bad) fcmovnbe and jmp divl cmpb lods jecxz gs jmp and mov xchg or lret add mov inc stos sbb xchg cmp push push sahf js adc pop in sbb adc jae mov mov adc je call sub in jl or sbb pop pop rcl dec dec mov lahf hlt or andl pop push lods cmp rol inc stc ret push stos mov arpl enter inc fcompl outsl repz xchg jmp ss jb pop xchg clc dec test in mov aam or mov int add rol pop xchg mov dec jno jns adc loope sahf pop test push sti inc jmp lcall pusha (bad) pop add aaa into push sub leave push mov lds (bad) aaa and jne push notl jge cmp popf enter dec inc stc adc call ljmp ss shr fwait (bad) xor adc adc and jae fistl test scas fcmovnu mov loopne pop jecxz enter mul enter push jmp jl cwtl fcmove or sbb pushf addb in ret paddusb loop (bad) popa push mov mov rolb enter or lahf jle inc sbb lahf cmpb sbbl outsb popf insb ret insl in push mov enter into push cmp adc ret insl fldt movsb pop add or shlb sub outsb sub jae (bad) imul fldenv cli jl ljmp add xlat dec dec inc lock cmp lea test pop popf test sub aas mov dec adc (bad) lcall xor into je mov scas push ret mov ss pop test sub orl cs aam add adc mov pop and adc or insl iret test loop sbb sbbl arpl mov xor mov movsl dec push jnp popa pop lea mov sbbl (bad) jmp cmp push (bad) pop nop lcall mov lret xchg jle test inc inc cmp jmp jmp out pop mov outsb rolb std or int into ja (bad) iret cmp lods sbbl arpl mov jae jno sub jo mov xor jno pushf in out inc mov sub jg dec sbb xor in mov ret inc stc rcr mov xchg push xlat out (bad) stc into pop add inc add inc rorl jbe (bad) adc xor (bad) out jp dec (bad) ljmp clc fwait xor test inc popa adc inc push and dec mov sub (bad) int3 push cmc mov (bad) out icebp int3 pop xchg mov dec cld jmp sbb data16 jo adc cmpsb xchg loop cmp es mov ret sub dec aas mov mov imulb ret push push sbb jne hlt mov cltd leave leave pop inc or (bad) ficomp and lcall clc jl out mov (bad) push fs xchg mov clc int3 push sbb in pop mov decb ljmp insb push rolb aam inc inc sub lods pop mov and cmp xchg and inc mov test fnstsw pop pushf rcll adc fstps xchg cmp xchg xchg ds sbb mov out xor aam roll mov mov or (bad) dec fdivrl sbb cld daa fwait test in aad add pushf outsb vpcmpgtd inc test mov add (bad) es stc int3 cmc in sub test aam jp es mov dec jmp in xlat mov clc aaa inc data16 or bound fnstsw jge ret pop lcall popf xchg je lahf mov movsb adc mov xor dec pop aam stos imul pop dec aad mov fisttpll shl dec sub fxch sti test xchg (bad) dec add test roll lret mov adc mov pop pop push jg cli mov xor divb (bad) mov inc aam cmp push sbb lret jp fdivl loopne pop ss xor mov mov ss mov sub pusha mov mov movsb lret pusha adc cld sahf cli jae stos jp jo cmp push dec popa fist dec push sub ret loop or pop mov fs jp lret ret bnd (bad) das aad jp ror frstor cmp xchg xor lahf push xchg out jmp jbe addr16 es pusha arpl xor pop add decl cld daa lock sarb or daa lock sarb or daa lock sarb or jg clc aas xchg (bad) icebp add pop int3 test add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add hlt and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push inc sbb push sub jnp pop mov fldt fs mov mov xchg insl fstpt icebp cld scas xchg lock idivl add push add add nop mov loope cli ljmp or pushf and mov pop imull or call rcll repnz incb xchg (bad) sahf pushf dec test dec mov fs imul out sub in imul pushf add sub in inc mov mov cwtl or dec repz jbe (bad) les jmp adc aad data16 mov mov ja (bad) xor or fistp add xor xchg dec clc mov xchg adc push push add cli and or add cld inc adc (bad) in imul cmpsb (bad) sbb xchg aam adc (bad) mov iret xchg sar jne add xor sahf daa mov sub and scas dec nop jge mov mov mov into inc push mov add nop mov mov stos jmp out addr16 jae in fstps dec mov add jmp pop outsl into cmp (bad) sbb (bad) les inc cmpsl lock pop mov call or dec movsb and into xchg mov add pop fs insb xchg pop scas test sar inc scas mov jb test xchg xor mov cmp insl mov jmp jg or push push (bad) cmc mov pusha mov into subl hlt punpckhdq mov push mov pop outsl or incl mov shrl sbb clc leave cmpsb xchg xchg fwait call mov jecxz je or loope gs cmp push cmpsl jno loope sub stos stos mov jbe jne (bad) or aaa cmp je (bad) cli pop xlat (bad) lods jne cs dec lds jl mov push es push sub inc fistpll adc jb mov sub cmp cmp jnp xor inc and cmp pusha pop sti lahf popf xchg or test xchg jecxz out (bad) aaa and xor orb push bound repz test pop xorps or aam mov push mov cmc cmp ret xor insb mov adc xchg dec inc mov cmpsl mov cmc testl pop ja mov imul add fbstp and stc xchg jl outsl hlt ret xchg push test or inc mov ja adc mov imul (bad) lahf add es je movsl lahf (bad) jns jbe sub fldt pop testl xor mov stc or dec daa pop xchg jge lds mov xchg in pop pop push iret in lds fnstcw inc scas cmp and push add xlat dec outsb add jg icebp mov fild test jle lods (bad) nop cmpsl pushf adc mov sbb fstpt ret xchg jae push lret push xor fistl mov add xor dec aas lcall cld mov (bad) je das imull stc xchg pop divb call add sahf lds out xor or add push pop xor dec fdiv sub mov (bad) js jp xchg mov push ja jge pop inc dec rorl fsubr sub sub repz jecxz sub mov pop mov call lds jmp cmp push dec add or inc jnp jmp adc and (bad) repz mov jle and into jg adc add or jecxz lea mov mov mov ja add jb add mov hlt sub or add aad inc into lods (bad) fistpll or sub push cmp mov je mov and xchg jo cs inc imul push outsl xor loope cmp sbb or bound sbb dec and into std push inc mov push ret out mov cmp lock mov xor dec das test dec outsb shrb pop pop cmc daa mov insl dec jnp inc lock sub leave pusha sti pop pop pop das arpl pop inc or popl into lods jo in aas add sbb pop sbb das fwait lods jecxz aaa stc lcall cli adc mov rorb mov (bad) outsl cmpsl stc enter repnz mov push stos mov add cmc test fild aas xor in sbb xchg ror stos inc mov xlat sub test sbb (bad) dec ss and loope data16 test cmp out push xlat xchg xor mov dec cmp push out push int and pop outsl mov jo dec sahf add test dec push lds cmc mov pop aaa data16 add lahf aam ficompl sub push and (bad) pop and out push push andb (bad) cld cmp mov out rcl mov repnz into jecxz fsubrl sti jno cmp test mov adc inc adc mov add fcoms jnp fmull inc inc shl fsubrs cltd std (bad) dec inc addr16 xor imul mov mov imul popa inc push mov or push push cmpl push dec (bad) mov sub fbld jne dec lods aad std sub je (bad) cltd sbb nop and sbb mov dec xor mov repz push inc gs jp ret mov dec or int3 jl mov add mov in xor gs or mov xlat std cmp movsl mov int3 dec out and pushf movsb adc lods jo cs int3 sbb ds mov int3 gs xchg mov sub add mov int3 movsl jns insb mov iret clc repz data16 mov dec and push sbb xchg mov das idivl idiv out mov xor frstor sarb jo rclb dec push mov shll mov cmp fdivr dec ret out inc cld jae aad jl out jmp js fisubrl jmp inc out adc lock iret (bad) mov ret mull xor and mov add js sub cmpl and jb and mov sbb or ljmp jno cld fcomp ljmp xchg pop sbb jae test in test or jecxz jb fdiv out test mov push jbe fstpl hlt repz pop (bad) in push mov xchg mov cmp imul or cmpsl dec inc mov mov in popf scas test sti jns cmpsb push push cmc mov fbstp rol in call inc mov insb dec push cmp mov fimull push push mov jle call (bad) mov aaa rcll xor test pop mov sbb push std imul js mov lods add pop push outsb xchg call (bad) lods repz inc pop dec pop popf mov fcom mov stc stos inc mov or dec test jmp pop and ret mov push xchg mov js jg out mov lea pop scas dec mov sarl (bad) dec stc movsb data16 hlt pop pop inc icebp xchg jle sub (bad) push stos dec shrb inc dec (bad) xor js dec jo mov mov or add push bound sub cli jecxz xchg xorl pop jno rcl pop lret icebp addl dec insl add mov mov jno adc mov in pop das data16 or icebp xor sbb adc sub cmp aad nop movsw jnp xchg imul xor add int cmp in (bad) mov scas enter jg sub and fwait es mov pop lahf aam std fcmovnbe repnz rorb in out add and les daa add popf mov dec dec data16 cmc xor fisttp repz sub mov xchg fistl jne cmp xor xchg lret adc ret aas cmovge push je mov daa fxch data16 or out add jg mov jmp add sbb add adc lods sub mov ds add sbb scas sti jae clc jl xchg fsubrl loopne jmp std jg (bad) dec loop out sbb mov push fisubr mov pop out push cwtl sub mov sbb pop and notl jg in ljmp gs aam pop repz and stos mov sub lret lahf js or imul sub push shrl adc and mov cmp clc inc sub lret jae ljmp mov xchg jle adc sub frstor sub cmc adc and xor lods pop fsubl outsl dec pop cmp or lods xor repz (bad) dec inc test mov add ja mov sbb imul test xor jno sub fisttpl insl out popf xorb inc loope adc ret fs adcl push jecxz sbb xchg movl out stos mov jmp mov stos xchg xor mov pop push stos adc mov rorb mov push sbb sbb cmp xchg dec lcall shl lret dec mull aam sbb test fbld bound (bad) xor and scas inc xchg shrb sahf cmp ret loopne fs test loopne sti jno scas mov mov or dec xchg sahf adc inc (bad) lret sub lock std sbb jbe adc push dec mov and push adc jle mov dec jne fldt add rol loope aas or in mov hlt or rorb add jecxz xchg mov push xchg add sub push (bad) stos ja out pop out iret mov jno roll orb mov inc xchg ret into cmc and adc add mov jae test mov add and inc inc dec es fcomip cmpsb adc hlt add and and adc push and xor adc sbb (bad) out push arpl xchg hlt mov jne,pt sub fs hlt test and pop dec pop inc cmp dec add lock add cmpl jmp sarl movsb and lods stos sti je out in js aad pop jge mov jns jl aad test xchg aad jg mov jae ljmp fcompl scas dec (bad) out and mov jnp adc imul mov in sub dec lods sub cmp fldt out lcall fisubrl xchg arpl imul fwait dec sub iret test repz std stos sub arpl mov scas das sti or pop mov les add fstpl and int movsl mov fstl movsb pop jmp push (bad) or sti and add jo push ret or loopne in loop and sub icebp push lea imul popf call inc iret mov movl adcb inc movsb inc dec xchg addb test loope lds loope leave imul call fcompp dec pcmpgtw in nop arpl jge pop dec cli adc cmp pop or push lret mov test test hlt into mov (bad) cmc (bad) popf in mov fldenv jp data16 imul (bad) inc xchg cmp les push dec icebp aaa movsl cmc jmp push add pusha stos popf stc bound (bad) iret dec pushf loop pop dec loop mov push cld dec pcmpgtw movsl insl xchg test (bad) leave sar popf bound xchg in jmp mov scas add hlt xchg imul sbb arpl mov inc pop mov jecxz ret outsb mov mov and fidivl test insb xchg in sub xchg sub xchg xchg stos push sub je imul lret jbe dec lods sbb outsb adc cmp lea add out jo adc mov xchg mov inc (bad) int3 or inc fsubs xor push lods out loope das add clc sbb addr16 call ret in xchg cmp mov xor stos xchg movsl inc pop movsb cmp mov or fiaddl ret sbb mov mov popf shrb loop,pt xchg mov fs adc sub jecxz cmp xor ja loope (bad) shrb jl adc cltd mov into lods push std push cmp (bad) dec jno jl jmp mov adc dec dec or test outsl lcall cmp mov (bad) pop fsubrl push lods cmp jmp (bad) mov mov repnz in push nop push mov or jmp mov cmpl mov and jge xor mov push inc mov cmp jae in and pop adc jns mov xor mov mov xchg rcl divl notl mov out enter sub test lods int3 lret or pop mov out or ss lods rolb lods inc dec aaa sub repz mov xchg jecxz pop shr or sti mov jl sub leave lret push dec or inc (bad) or lret inc inc xchg outsl scas cmp mov nop sub insb insl xor orl rcl outsl xchg out ficom jnp sahf ja dec in add lret cmp mov push and insl cmc pop sbb or jnp lock je xchg mov inc mov push pusha mov sbb sbb test jl push add das push (bad) dec xchg dec lcall iret pushf pushf jg sbb stos pop jo cmpl xchg pop out lock push add cltd shll incl je decl sbb sub xchg jo popa icebp push call loopne divl les or fcoml push pop repnz inc ret out adc lods xchg mov ss fs and mov cmp lahf jae test lods dec xchg mov sbb pop mov js cmpsb mov (bad) push mov mov pop aaa dec or outsl lock (bad) stc push aas sbb iret rcll pop sbb xor int xlat mov lea insb ret push xchg movhps fcoml rclb mov push xchg fistl mov (bad) out sub mov or loope xchg testl add pop xchg xchg jne rcll push dec mov mov das cmp sbb sbb lock sahf pusha sbb xor adc and ds cmp test xchg xor inc fdecstp loope in popa aad test ret fsubs nop mov (bad) mov cmp clc loopne jb dec xchg jl lret dec mov in stc pop not (bad) xor xor push push cmp cmp and sti xchg adc mov negb out mov jo sti (bad) sti mov mov xchg mov data16 imul mov fisttp xlat mov lret mov sbb jecxz lds mov (bad) int3 sub push jb out pop pop xchg cli jns jno das loop mov dec stos jbe (bad) mov es std inc sarb push jae dec fwait adc adc rol mov je int cmpsl pushf mov pop mov adcl xor mov popa test daa sbb sub les and lret std sub sbb cmp in cs inc jb loopne lret pop inc nop push aas xlat sub sahf inc adc fdivrl (bad) mov xchg add mov mov lret call call pop push lret xor mov in inc and or not mov inc rolb ret mov das popf cmp xchg cwtl gs lcall sbb in fwait mov inc lcall lock imul push rcll mov les lds and (bad) lock insb jo pop mov and push popa addr16 xchg push mov push add lds jg or lds sub cltd cmp inc cli pop xor shr dec fldpi scas lods roll leave pushf lret adc pop inc outsb xor jae lret pop aaa (bad) xlat stos repz addr16 pop icebp dec dec fcoms mov in add pop push xor decb add mov mov leave daa and xchg jne andl mov sbb sarl adc lcall xchg lock mov das push shlb mov ret mov call aam popf inc orl and and (bad) lret add sub (bad) cwtl scas mov std or push xor dec or incl add xlat in ret (bad) out std mov add cmp aaa rol xchg test xchg cmc lods cwtl push mov cmp mov pop inc push (bad) std sub leave mov hlt mov stos outsb mov mov sbb mov xchg cmp mov ja dec adc shlb lods cmp mov jl aad dec xor rcrb pop cmp insl dec arpl xor cmc inc test sarl (bad) and jae pop push lret test (bad) cmc subb jge inc push mov dec ret imul outsl es xor jge mov mov loop cmp pop mov xchg jg cld mov pop and scas mul cmp mov mov pop pop cmc test inc pop cli dec sbb xchg jmp inc sub sahf xor inc xor lea cmpsb fiadd out test push movsl daa fadd ss adc mov js mov xchg sub (bad) lret icebp sbb int push lds into popf inc mov hlt lods inc add xchg cmpsl pusha and leave mov push ss mov hlt dec sbb int cmpsb loopne mov and sbb cltd mov fildll (bad) sub cli xchg pop fcomps xor add gs cmpsb out rorl test jo sahf sbb mov mull push lods fnstsw xchg ja pop mov xchg adc sbb call inc or test inc dec pop ret jbe jo dec lcall or xchg push pop xor pop scas out cmpsl inc in imul (bad) fistl push push pop mov clc repnz adc stc in sub rcrl (bad) mov sbb fs mov jecxz mov mov fstps repz inc mov inc mov inc dec or add mov pop or cmpsb test xor (bad) dec and imul test xchg jecxz inc push xchg jg push cli push divb xchg mov fldt sbb pop dec mov sub call lret cltd aam lds imul test mov cli mov mov loop je (bad) fidivr mov arpl into inc cmc (bad) mov ja hlt shrl imul sahf mov cmp jnp insl lods jbe js inc js xor mov enter mov (bad) out jne inc or test mov push (bad) js adc lcall fisttp mov sbb into cmpl ljmp cmpl into inc and leave fnstsw ret cmp in sub fidiv subl xlat test (bad) mov jmp sbbl mov push lahf dec imul repz xor mov stc sbb adc das mov test (bad) cmc into ffreep push pushf in pop hlt and pop dec out push daa push int fwait adc xor or fidivl push sub cmp push cmp aaa in mov jo mov and fs push roll hlt jmp movl inc push dec lahf inc inc (bad) arpl push sbb (bad) rcrb fwait lahf or ljmp lahf int3 sbb fstpl cld inc ljmp dec pushf add dec fsubl movsl (bad) fisubrl psrlw xchg popf leave inc jle jle mov stc testb mov and leave sbb leave sbb popf mov pusha std dec mov xor lods repnz sub popa and push addr16 mov pop push sbb jl xchg sahf leave stc subl adc cmpsl scas cmc dec arpl push mov mov scas jo ret push out jecxz lea sbb or mov sbb xor insb or popa popa (bad) push xor inc add and pop mov push sub inc sub insb out push add fistl cmpsb in pop addr16 xorw mov add mov cmpsl ljmp pop cmp lods (bad) jae test lret inc cld xchg pop xchg and cmp adc inc cmp pushl inc aad jge cmp mov out sub push inc or add fidivl (bad) cmc adcl xor shll mov nop ljmp mov dec add mov mov xchg mov cmp cmp out jecxz cmp in lahf xor (bad) or push sub dec xlat mov rolb in shrl aam mov ja dec adc or push dec add sub or xchg adc stc pop push lcall jge add mov repz stos lcall out sub jnp and out adc or or clc test cli pop scas xchg xor push adcb out mov mov pusha jecxz arpl out or sbbb testl in mov nop mov pop pop ss lds lret stc fnstenv scas repnz or dec push pop scas dec scas mov sbb addl push xor inc repz cs mov xor lahf imul mov sub loopne movsl jo dec mov push push pop out pop les jl adc je mov mov sbb mov into fisttp (bad) jns pusha and icebp pushw pop jns (bad) or mov cmp adc decl repnz xchg cmp (bad) mov pop pushf push jo outsb and jnp push nop scas outsb loop mov jne push inc mov add cmp push xchg mov out xchg cmpsb push xchg inc mov sub xorb pop sub call icebp or cmc ja pop rorb fildl cltd dec jb jmp mov into add add in (bad) or xor (bad) cmp pop in ds cmc les mov loope sub and cmp xor daa mov jns jo cmp push cmp lods faddl adc xchg mov daa mov call sbb test mov aaa or loop inc inc movsl in ja pop inc jae into ret mov and (bad) mov sub adc dec dec aaa stc mov fwait int imul or xchg pop lcall cmp mov lret mov test mov mov out mov or rcr cld add xchg pop mov scas clc sub lret ret js jl push scas add cli xor mov call repnz test pop or sti mov push incb pusha addr16 fstl nop cmp das call cmc push je pop mov adc push add lret pusha cltd imul stos (bad) clc push (bad) cmp pop (bad) dec add call int dec xor jmp push (bad) cld loopne push xchg push lds cmp sub fs fnsave movsl sub add lods add dec pop jo cmp (bad) sub dec mov or fldt and or cmpsb inc cltd outsb rclb pop mov xlat sbb fildll std test in jnp or loope imulb inc icebp pop cmp outsl mov addb push inc cwtl xchg lret or mov push cli and mov clc scas ucomiss ss xor adc dec mov pop xchg push ret inc push dec popl pushf mov fiaddl ret test mov in (bad) loope mov jge jb xchg outsb xchg cmp pop lds test cli mov jg add rcr divb test xchg push imul add mov push mov fwait and cltd imul std loope sbb incl mov xchg adc movsb push inc fdivs scas push push cwtl fs mov sbb popa ljmp lcall jg neg push test lds mov cmp lods sub lock mov add fbld test scas push in clc push int3 out call loop inc inc adc lcall call push add (bad) dec xchg fldcw les mov test cld cmc movsb idivl cmp add or daa lock sarb or daa lock sarb or daa lock sarb fild (bad) and and movsb xchg sub add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add clc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov lea inc push push pop adc ret add add add xchg out xchg mov inc mov out xchg xchg loope inc (bad) int3 stc pushf faddl jbe add loop andb sti mov mov push out loope sbb inc out jp mov jg pop lcall adc ret bound sbb aaa lods lods loope (bad) repz dec fimull jb lret fild cmp loopne and popf sbb icebp inc mov ljmp test mov inc push push icebp test dec adc bts int3 sbb shlb add mov into xchg adc dec addr16 dec test repz cmp mov sarl rclb lock sub cwtl mull mov push push pop xchg ja pop mov sub sahf sbb cmp jmp fsub icebp mov std jbe out repz lret daa and adc cmpsb cmp popf sub (bad) pop cld mov mov push jp dec mov (bad) mov lods xorl mov jle jl pop mov push cmpsb and mov pop push stc push jns jmp adc mov ret js hlt cs icebp xchg jmp repnz mov hlt fimul iret mov mov dec cmc pop xchg int cmpsb pop mov or mov mov in sub je lea inc jmp imul jmp xor dec das sbb outsl or out inc and sbb push lahf sbb pop inc mov lret fimul stos out pop rol mov cmp pop xor push rcr pop dec or dec mov clc mov jg push pop int sub pop icebp clc adc add fnsave hlt out add cmovae lods dec orl pop in mull outsl sbb out nop sbb lods jbe sarl in inc sti jbe cmc push clc sbb mov add xchg aas fnstsw gs fnstcw imul lds fcompl push sbb adc and pushf mov stc pop das and or jecxz pushf (bad) test cmp (bad) aas es xor xor cmp jae fdivrs nop outsb dec popa in adc imul lods xor stc mov inc xor or cmp aas dec ret or or cmp inc inc mov rorb inc mov movsb jle imul testl out movsb add dec pop in test lods sub les jge cmp jne cs cmp mov outsb nop call dec movb sub divb (bad) stos (bad) nop sbbl push into sub ret fildl or push or adc push pushf incb stos xor inc sub lds (bad) xlat jnp ds inc lea data16 xchg fistpll pop icebp push (bad) xchg lcall ret cmp imul jb fimul or fistpl dec fs je pop adc dec iret jmp data16 mov js,pn das add inc add ret js lea mov iret inc ljmp ds and je jl push das mov lahf ds push ss mov subl mov xor push pop inc scas iret push inc mov test adc or ja push inc jae push cli fadd repz xor sahf and mov aam or mov jl or push xchg (bad) out std push (bad) ja js cmp (bad) fsubl sbb fdivs loopne ja mov int jbe mov pop push scas pop daa inc dec inc (bad) jns cmpsl insl adc pop pusha icebp inc fwait push movsb clc xchg insl add imul or scas out sub test sbbl (bad) dec mov inc xchg rorl cld jmp ret dec call push push int in dec or pop jmp dec cwtl imul and sbb ret in jo jmp inc imul pop aaa (bad) cmp jns ret (bad) add add ljmp loop push xlat or aas aas dec cld adc or cmc pop inc push hlt out and test int3 xchg aad mov cmp (bad) push fisubl xchg pop mov mov sti pop test out xor fdiv jle or dec push lods xor pop add in mov dec lods add and push pop repz or add stc inc adc jecxz jno mov insb and mov jno sub or mov push das xchg add lods cmpsb (bad) ja fs popf push push (bad) lcall push sti mov push xchg pop cli inc mov xor jb mov call xchg sbb and scas stc push fdivr dec or pop int3 aam (bad) popf ljmp lcall inc (bad) jbe jmp stos js jae lock add pop xchg cmpsb sub test sti pop push test ljmp stos mov mov jns imul xchg ret push sub jae add mov xchg fsubl test xchg ja mov sub into lcall lods push in push sub ret push and dec push ret fimul rorl cmp xor xchg cld xchg xchg mov sbb negb jg (bad) dec mov sub ret movsb adc sbb dec outsl data16 xchg fnstcw add inc adc stc dec pop fiaddl xor les test dec add stos mov out (bad) and hlt sub mov in sbb cltd mov fisubl nop xchg fcmovne jle jecxz out xchg push or and sbb xor push rorl das fdivr cmc arpl lock push xchg test mov xor cmp fnstsw and mov loop xor push cmp std nop les sbb andl mov js ljmp add push ljmp mov or mov pop mov mov jne xchg cmp das cmpsb mov xchg in mov inc nop int pop pusha xchg (bad) repz leave dec outsl adc mov mov jo mov lret mov jo adc push loope fwait sbb aam lock jecxz pop leave or jne fcompl iret dec mov adc in lcall aas pop inc push jns dec push push jbe mov xor inc jne sbb cmp mov sbb in pop movl pop or lods out out in (bad) push xor loop dec add jg lahf xchg jecxz std fnstsw stos loopne (bad) xor sbb popa (bad) (bad) lds ss add jb out pop pop (bad) and cwtl in jecxz mov sbb (bad) push mov mov and sub icebp jno daa push dec pop add push push fistpll fwait mov icebp aam bound jno inc mov jge add add popf push ret xchg repz (bad) nop jb inc lcall mov adc mov test rclb dec cs outsl sub (bad) inc mov test jbe sti movsl decl icebp jl mov mov scas ss iret push imul repz mov cmpsl hlt jg,pt sub lea leave ja int in xor jmp dec lahf gs aaa and adc daa jae ljmp sbb xchg fistpll adc lds cmp outsb cmp pusha cmp push (bad) mov das fwait arpl shrb sbb and sub out and (bad) and jns lcall mov std in xchg out shrl sbb ss cmc jnp nop rcr xor mov decb push lahf test adc xor stc mov outsl insb mov movsl pop jne je fwait int3 pop daa hlt mov aam out ds in and ret outsb jnp mov mov xlat bound mov push (bad) push jbe or push dec mov and add clc jmp sub jae jo jp cmpsb fadd out xorb xchg ds inc dec pop mov add dec or rorl ds jns xchg adc xchg test cmp push int3 lahf aad jns cmp fninit out xchg daa sub popa sbb sub ljmp mov outsl sahf inc in xchg hlt mov imul pop les mov jbe dec cmp in (bad) aam je jne fdivl lock and lock in and int aas dec push outsl scas iret cli ds pop cmpsb push adc sbb std aad aam jno jmp mov or imul adc in incl aad push mov dec pop pop and movsl out aaa dec lret sbb fwait mov aad cmp inc jmp (bad) pop push lods xor inc xchg js es lret add rcrb sbb xchg or push aas shrl in xor (bad) lret fs cmp mov scas push or xchg cmp inc lret jae push int3 (bad) adc pusha mov add idiv stos loop icebp enter ss arpl mov aas es (bad) sub xor cmpsl adc loope sbb lods add jb lds sbb inc lahf cli popa inc ja cmp xchg orl pop mov cmc (bad) fucomp or imul dec push push (bad) fcompl mov push out out xor mov jae subb or faddl scas (bad) mov fstpl iret out jns pop fs test imul jnp and mov xor push inc cmp bound mov pop pop mov mov and mov inc data16 dec in lods mov bound aad sbb push inc mov adc xorl push sub and cmp xchg icebp mov cmpsl mov ret cmpsl ja ffree mov cmp loope repnz or dec or pop std adc xor jo leave rclb push lret cs ret jbe fisubr repz mov pop push sub not std int3 arpl pop mov add jge push (bad) xor scas popf cmp xchg ds jmp add sub sbb popf inc (bad) jmp mov adc dec adc lahf add add jnp dec mov int3 lret (bad) mov aad (bad) in jne lret inc cmp in xchg and repz fldt lahf js push jns dec jnp jbe push hlt (bad) push cmpsb stos jp adc insb or cmc fmull sub cwtl pusha adc and jbe mov cld ss adc mov sub int ljmp insb mov xlat xchg push and pusha ds movb sub int aaa out mov cli int or iret xchg adc xor mov mov ja cmp cmp or xchg jmp jno andb sbb dec loope xor inc inc and in mov jg xchg hlt cmp or ljmp insb and cmp test lods ja lock pop hlt in ja ret fs adc and aaa ret pop cli test push sbb into ds gs and xcrypt-ofb cmpsl in test idivl pushf inc pop cmpsl and js inc es in iret pop add mov and cmp lret lds (bad) jb pop les rorb daa mov cs hlt push cld push arpl dec ds (bad) add ror jne aaa xor jo xchg cmc test negb cmp xchg xchg mov xchg imul jg faddl push outsl (bad) (bad) ret movsb icebp push adc inc inc xchg push pop jge ss test add addr16 pop dec cmc lcall push xor loop aaa inc ret call cmpsl call insb xor cmc or mov dec daa movsb out dec mov jno pushf aad pop inc xchg les mov mov loop sar xlat cmp sbb jb movsb fldenv cmpsb insl adc popf push push inc and or movsb ja lret cmp mov pop ficoml nop cmc cltd ljmp jge dec cmpsb xchg sub int3 adc popa (bad) xor movsl jo,pn cs jl inc push popf scas sub push popf adc fwait xchg insb sahf adc in arpl push imul adc or mov imul jp xor push jmp jb inc jle les push pop dec je stc pop fistpl icebp add xor xchg and nop movsl cs in mulb jmp push mov scas (bad) or pop pop adc sub fisttpll xor hlt cmp push xchg cltd inc jns dec in mov cmp xor into (bad) into (bad) lods fbld out add cmp jecxz addr16 rcrl dec mov pop test mov (bad) hlt loopne xchg test inc (bad) pop jo sbb imul icebp and mov cltd push xor lret inc pop adc mul cmp cltd sahf test jno mov sbb adc insb cmp push sbb sub sub scas sbb mov inc cmp adc clc sbb push mov repz xchg (bad) sub mov jmp cmp pop out lahf das data16 popf add aas push dec xchg xchg lahf mov ret lcall jl mov mov sub mulb mov xchg jg stos mov stos fwait jo and push mov sbb sbb cmc jae test mov std add push int3 sub idiv push subl sbb cmp xchg push push mov ja xor pop cmpsb or xor xlat cmp pop or mov scas in and cs outsb inc mov in inc mov cli shrl enter push pop mov mov das ror js iret xchg mov push mov or or imulb cmp pop mov or mov fs jo adc dec outsl mov je pusha or pushl mov cli push jae (bad) jmp xchg push movsb into push mov nop (bad) stc mov add inc dec jg fidivr push andb repnz repnz dec arpl lods clc push int3 bound cmp add jbe dec clc push mov cltd ret scas push lea pop aam scas stc pushf xor sahf int xchg cmp incb pop and xchg aad push lret out addr16 push aad add pop gs repnz leave xchg cmpsb xor sub cmp popl cwtl enter push iret movsl jmp popa aas scas shll neg pop pop sbb icebp pop (bad) loope (bad) aad loopne dec loopne cmp test dec mov and or ret mov mov ffree popa cmp adcb shr add repz (bad) aaa test mov les mov (bad) xor and jb arpl cmpsl mov mov out dec (bad) xchg push test ljmp and out jmp sub pop xlat add lret mov ja (bad) jnp cmp or cmpsb and mov ljmp jb xor gs ljmp dec sbb add pop push (bad) or cmc ss mov push sbb imul xchg test push inc subl inc jecxz sub mov les inc aas js ljmp outsl int3 roll in cmp rcrb (bad) and in or and lcall sarb addl loop loopne and stos je jns repnz jbe mov stos jae jne,pt mov inc repnz in sub mov mov shll pop xchg xchg lahf mov push fldt pop sub xor popa lods iret inc xchg jns inc loop aaa push je xchg stos jp cmp or adc mov xchg cli push stos xor push lcall inc stos pop and jecxz ds sub lods mov insl sbb jmp sbb popa mov daa fcmovne mov lock fdecstp mov adc cmp mov out sahf loop and mov push sub mov mov inc push bound sbb fxch movsb pop sub sbb out mov dec cli in or sbb (bad) idiv inc mov cmp mov int3 mov imul (bad) xor icebp test add add mov je arpl or scas sub or push cmp das loope cmc int3 es jae inc pusha scas testl incl add xor push pop jecxz jns lret push sbb int loopne daa sub mov in and and loopne jge xor mov std xor jmp ja adc sbb mov fwait lret cmp xchg jge pop (bad) cld into sti sbb xchg sub pop adc repnz jb fwait inc xchg jne aaa aas ficom adc lods push fwait scas add mov rclb add outsb fadd xchg inc sub mov clc daa std pop idivb sbb js fdivrs rorb adc add xchg push inc xor ds (bad) test sarb rcrb out jae addr16 add mov ficom scas fiadd sub pop and mov loopne jns mov mov and mov ja dec inc inc subl ljmp cld bound sub jmp test and aad adc inc mov or push leave fs pop dec nop repnz pop dec test sbb std fldt sbbl mov mov or aad mov pushf mov mov sahf aad mov loop jb or pop and out add adc scas pop sti lret nop sbbl xor pop imul leave or and mov lcall xchg adc xor test in call and push (bad) lds test jnp dec or sub ret aas mov rcll xchg roll daa jmp aad fs divps sub push loop fs pop xchg jle jge out push lock mov in push nop ss clc inc inc adc movsb fs mov addr16 pop ljmp mov adc scas jge lahf and jecxz cld push cmp pop xor fadds and ds jno ds and xor push (bad) xchg cmp mov loope pop out fcmovnb cmpb push cmc aam daa cmc aaa mov das hlt cmp xchg mov cmpl sbb ret sub and ret inc jbe pop adc dec test and sbb (bad) jo xchg les push sub rcrb mov dec and in dec cmc lods dec add lahf lahf jecxz mov jo mov cmp in inc xor add movsb or enter repnz adc aaa add cli mov aas je test enter jecxz xchg ret in je dec outsb ss mov sbb cmp fstpl cmp notb pop (bad) sbb in mov jo mov fs xchg idivb sti xchg inc pop or dec and xchg dec sbb call push loope sbb out sbbb negb ret addr16 pop loopne test push scas rorl pop clc stos inc pop dec nop mov mov loop loope sahf es jne jle cmp loop xchg pusha repz mov imul bound sbb jb insl into ja pusha scas das lock repnz ljmp mov xchg dec cli cmpsl push (bad) mov mov popa sbb inc jmp iret sub push mov xor in inc xchg int sub or mov sub sub sbb mov sub pop enter in ret or cmp aam inc mov into bound fstpl sbb incl int3 push inc fs mov (bad) sub iret jae cmpsb add js rorb cmp imul subl cmpsl jge xchg sti loopne mov stos aaa mov sbb mov imul cmp icebp enter xchg lret arpl xor (bad) and sub dec sbb xchg dec sbb add push adc push dec inc shr cmpsl (bad) (bad) push adc and sbb mov jg mov inc mov dec mov call mov dec pop out sub mov fist sub aas pop cmp jmp sbb or push cmp mov (bad) jno rorl negl mov fs push mov mov (bad) add loope test xchg mov push (bad) lret lds and sub ror jb push pop or lret stc adc mov xchg add xlat rolb test in and or movsb xchg in cmp sub adc cld sub pop test fimul push dec xchg jle pop stos scas lcall xchg scas mov or das mov mov inc and lods and lahf xchg leave jno fadd jbe mov lret aam jmp pop orb aaa jb ljmp sub and enter sbb les mov leave xor ss repz ficoml mov cmp shl pusha leave aam mov mov fistp roll xor insl dec imul in and outsb mov mov fsubr dec xor popf xchg mov add mov enter dec mov lcall shrb neg inc (bad) xchg popf test cli xorb imul clc in les fsubs jp pop push xchg xor dec xor stos es mov sbb inc aas aad push xchg sti fdivrp mov push mov in dec inc sub pop pop lea inc out daa jg (bad) test push adc inc fdivs enter clc out or mov or or sub scas adc pop adc cmp lock pop js loop push cmc mov xor lods jmp sbb das add and or jb xlat and mov fisttp in hlt add lcall call stc fmuls jmp xor mov mov jecxz mov pop or loop ret adc stc in mov lahf sub inc mov xchg dec pop xor inc iret int3 sub push and rcl lods pop jns stos push call dec xor mov adc in lret mov push data16 scas lret xchg repz insb cld lds mov mov incl adc mov scas fadds inc into mov sbb xchg push sub add rorb stos addr16 jp mov xchg xor das push push aaa imul xor int3 and mov ficoml sti pop test lods lods (bad) pop lcall push sbb scas xor into sub sbb nop cmpsl outsl dec sub out push xchg sub push sbb loopne mov lret or fldcw jns mov gs pop or scas jb add fdivrl outsl hlt and or stos or stos push (bad) cmp push mov mov and lahf stos rcl mov jb mov mov mov inc idivl subb add mov pop mov jbe pushf mov shll in cld push mov aam xchg aaa mov pop loope hlt movsl fs repz jecxz xor and aaa imul lahf (bad) or notl aam push mov adc rolb das dec jbe cltd mov hlt inc mov mov repnz js std sarb aaa sbb push repz enter imul mov aam add aam mov mov (bad) xor sub nop aam mov and inc lret nop ss ret mov fistpll jo stos invd xchg (bad) jecxz mov lahf (bad) jmp cli addl ja sbb lods mull outsl iret inc out imul push pushf push pusha add les loope jge inc mov and imul stos pop jno sbb mov cld xchg sbb push leave iret (bad) sub xchg xlat dec push cmp adc es mov mov xor imul sysenter adc mov xlat pop notb xor pop insl lret stos ds cmp dec lock jecxz js sarb xor hlt icebp cmp aad mov mov mov cmp pop inc lahf fidivrl push (bad) cmpsl jle fwait add arpl cmc mov mov dec (bad) push cmp mov mov sub repnz loope pop aam fcmovnb cmp push aam scas in or sarb stc adc inc mov cli daa pusha (bad) icebp jecxz xorl rolb xchg pminub inc out push repnz inc pop mov and shlb aaa fistpl push cmp (bad) jns xchg jle cli mov pop inc popf mov cmpsl inc clc mov in ret mov into pop jmp repz cld jge mov mov mov dec pop addr16 pop lods lea popf jg repz dec loopne cmp dec loopne cmp dec loopne cmp dec loopne cmp cmp or cmp dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lock add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov test inc push push inc sbb xchg (bad) in insb sub ss (bad) or fldt mov in mov idivl mov or add or and lcall adc xchg and dec fdivr rorb cli mov cmp mov popa sbb test rcrb xorl shlb add push sti jmp inc or jns outsl jmp addr16 xor cmc push jg cmpsl loop mov insl sub xchg inc jmp adc jno sub add push dec mov jge pop jecxz inc jno movsb loop,pn push add das sub ds outsl add sete popf jb pop call lahf or pop data16 fdivrp mov hlt pop add idivb inc scas push lahf push cmp fbstp cwtl int jg movsl lahf cmp (bad) xor subb cli pop ret xor and shl clc scas les mov xor aaa mov jge and stos add add int pusha lods movsb jmp addr16 rcrl es je adc mov cmp dec out mov push mov scas dec fstps (bad) pop adc add add dec xchg hlt dec sbb inc dec pop mov or sbb jle sub (bad) or loopne repz clc dec mov bound cltd jecxz enter mov fldl int3 mov rolb dec push sub addr16 dec jecxz sbb inc push cwtl pop pop aas jge lds in outsb sahf into scas (bad) in or scas out xchg or insl push (bad) fcomps repz iret mov xor sbb mov xchg lret je lahf loop mov mov into (bad) xchg dec out rolb (bad) (bad) push xor aad sahf (bad) pop repnz test lret hlt xchg (bad) xlat int loope fbstp into imul leave sub mov in and pop dec adc dec int daa jl add add xchg mov fs jb frstpm(287 dec push int3 mov or mov adc dec dec mov into scas and jp adc xlat into insl push into insl lods movsl adc popa cli in pop jo mov roll mov inc es decb jae jge add movsb addr16 mov or lds mov xor cli je cmpsb loop sbb mov test out lret int3 scas cld imul mov push cmp rcr or xor ja and or mov pop adcb aam cmp test dec adc xchg fcomps or scas lret or arpl push cmp arpl arpl test dec pop enter sahf push xchg cmp and pop popa lds insb xor pop pop shll icebp mov or in mov pushf (bad) inc mov cmp outsb xchg pop sarb pop (bad) xor cld neg xchg adc jmp inc xchg and and mov loop mov fsubs mov xor scas icebp push push cmp adc sub or mov mov ljmp mov mov pop repz and ljmp cwtl dec out ror jg in pop popa push (bad) jl inc arpl insl leave and mov ljmp pop leave lods shrb add leave sti insl jecxz mov (bad) inc push outsl ret gs or inc (bad) stc jno pop mov ljmp xor in (bad) mov insb pop lcall aad pop cld xor dec stos pop sub push mov pop adc dec jp inc push notl and mov xchg lods pop and aam or repnz es test inc negb out push test mov jmp cmpsb bound into mov das lock mov rclb test repnz rol (bad) ljmp out jae or push or and push fs nop popa hlt xchg dec std pop cmp or fsubrs popa dec outsb sub inc fcmovne jae loop or dec addr16 xlat mov jecxz or ja hlt cmp xor or xchg sub cmpsl dec dec mov dec sub mov std jnp in sbb jmp imul mov xor xor push repz dec fstps out scas add lock pop inc mov lret dec adc iret xor add in add (bad) sbb or sub ja cmp mov sarl jle sub xor lret fisttpl mov in add cwtl sti (bad) jp mov sub sbb in in sub call or aaa mov cmp xchg repz arpl ret mov push leave xor outsb aas fnsetpm(287 test mov sub out popa inc out stos test xchg pop rolb pop push mov (bad) sub pop das or ret sbb and jb out inc mov fcomi out cwtl shll adc mov sbb in (bad) lods lock clc mov faddl sub lds or xchg push out out or out pushf sbb not sub push dec int and xchg push adc inc aad lods fildl outsb and stos sbb jae push cmpl sub xchg stc xor in out loop sub dec dec fimull fiadd cmp mov inc push pop xor pop orb dec xchg push xor aam mov jae aad nop and scas push std loope (bad) xchg add (bad) dec push ror aam push push pop lahf and test add jbe add jmp fisubrl test jmp push faddl pushf or (bad) clc sub iret ds cmp pop (bad) shlb mov and and insl sbb rorb bound divl add in cmp das mov repnz int fwait push orl ret mov int3 outsb adc jno push push pusha mov mov xchg xor mov es sbb fidivrl dec inc loopne aaa mov and cmp test lods in roll jno pop insb in aad pop pop out xchg inc inc aad jns addl cld fwait inc aam inc lods hlt stos inc push dec pop gs (bad) fcoml mov or jmp pop cltd (bad) idivl push imul sbb adc test int jnp loope or jb mov enter idivl aad inc inc leave push mov add out xchg dec (bad) xchg mov adc xchg cmp movsl pop adc test add pop sbb inc scas sub mov mov shll out inc pop icebp and add jl js enter andl js into cltd hlt ret (bad) sti jle pop sbb cmpsb xchg fsubr mov jns inc dec fs or lahf jb dec fnclex jle leave js jns xchg aas inc mov xchg xor xchg shrb call js sbb icebp addr16 pop xchg push cmp dec loopne cwtl sahf pop jecxz mov loop fsubrl cmpsl mov jmp imul cmpsb xor jge mov out adc pop xchg fildll adc dec push xor and arpl movsb aaa pop sub (bad) cmp xor mov pushf adc cmpsl or sbb add das ss cmpsl cmp leave and sub outsb popf ljmp xor shlb (bad) mov lcall movsb lods adc xchg xchg in dec clc call or push sbb jnp xchg inc insl push jecxz mov movsl rcrl sar mov ja push subl add xchg mov dec pop mov jne add jae das stos cld aam mov (bad) loopne xor jnp jae out jb es push sar push push mov xchg push bound scas es dec push push push jb ret arpl es imul lahf sti mov movsl mov cli out mov test sbbl scas loopne jmp cli cmp adc je xchg fsubrp cmc sub in push mov outsl sti sbb imul loopne in lret ret push cmp mov dec adc push add ljmp jmp fs mov push dec add pop mov lds pop mov lret add cmp adc scas add clc jp jbe inc out fwait or jo pop pop cltd mov rorl ds imul and dec out in call pushf shll mov fsubrl xlat lock add push jae pslld push mov xchg stos imul das jge sbb xor mov shr outsl loopne movsb push mov jmp xchg push (bad) jno adc aad jo shlb sbb out lea jg daa mov sbb push popf adc (bad) andl (bad) xor mov sbb push outsl notb push clc push jne cmc adc or aaa xchg sahf test into sub ljmp and pop pop xchg or mov sbb jle cmpsl jl xchg (bad) sub mov mov addb std jnp loop pop into lds pop or loopne test mov sbb mov xchg lahf xchg cmp enter xor lock adc xchg mov mov cmp jp sbb repnz aaa movsb xchg out push out sti push insl leave shr pop and push adc xor adcl mov jge mov test data16 pop lret cld add in in sub stos lods (bad) js movsl add push int je mov out pushf or ja sub out popa aad xor (bad) mov adc pushf jmp push and test xchg jmp adc adc xchg jmp sub xlat or pusha cli mov mov rcl sbb dec (bad) test cltd rorb push les jnp hlt jne sub add mov push pop pop xor loope or add lcall lcall aam fisttpl jbe add fild xchg (bad) push dec xchg and jecxz pop mov or shl dec stos xchg lahf lret popa out cmp out adc mov in and jmp adc aad pop cltd lods or fdivrs cmp mov jl (bad) pop fidivr jb cmp cwtl loopne or xchg test (bad) cwtl jp jnp fstp outsl cmc scas lock mov pop aaa (bad) lahf into mov js popa loop movsl push je sub icebp xchg cmpsl dec outsl loope dec cwtl pop test addr16 fdivs xor test sbb push mov test pop mov ret movsb out scas aam movlps movsb mov mov fildl xor inc popa mov pusha dec mov mov adc scas jecxz mov xchg ljmp adc jl xchg movsb js and cmpsb or jb mov or popf lahf sti inc pop iret cmpsl or adc rclb xor cmpsb loope pop jns jecxz xchg push loopne mov sbb in (bad) cli test xor pop xchg lret fisubrl int jb xchg leave fdivl mov ret js dec hlt loope add (bad) jo or mov cmp gs adc jle les push xchg cwtl push xchg jg std mov nop or sbb rcr xchg aam outsb rol xor push sbb mov (bad) lret inc and ret fbstp data16 je subb add out imul lret negb cld push std and cmp push pop in sub negl pop jno ret aad sbb daa mov push int3 (bad) hlt push pop cmp add scas pop mov mov mov pop stos mov out dec insl cmp aad shrb push mov pop pushf pushl in mov xchg cld inc mov sub mov xor cmp movsl dec (bad) idiv and fwait mov inc xchg lods enter pop mov push cmp mov cmp mov mov lea pop sub or add mov int scas ljmp xchg pop add (bad) mov mov cmp or std push mov ja out sbb push insb sub sahf mov dec pushf and mov nop ficom or inc sar push cmovne insb and int3 (bad) in adc fnstcw out fldln2 lcallw daa sbb lds std or inc das pop or mov inc lock or jnp mov mov adc insb fdivs das dec add xchg mov sbb mov sbb faddl scas xchg dec mov int3 bound ficom das dec push cmp adc stos jle fistp pop adc cld xchg inc jle jae mov mov sarb pop add (bad) shlb cmp jae test pop xor inc jno xor not cmp out lret out xlat inc (bad) lock out inc (bad) mov inc cmpsl ffree ja mov pop mov fidivrl out sti neg mov lods ret icebp or ret jo roll dec lods mov out xor mov aaa sti scas in (bad) and add ljmp mov inc cmp and cmp fimul pop cmc movsb lods mov lock add push mov mov fiadd or mov iret mov gs sbb mov xor mov test dec inc and sbb std scas mov xor xchg ja push or cmpsb add iret out popa or jno jmp fwait cmp push push lods into adc fmulp push jnp pop lret call sub mov (bad) stc add xlat push pop (bad) out jecxz pop repz sbb jmp and push mov jle sbb ret scas ret mov xchg jno mov and jb jbe iret repnz jg ficompl inc data16 or push sub or push inc scas out xor adc cmp cmp push mov add sbb mov cwtl jmp jle loope mov inc int3 imull adc loopne (bad) icebp adc (bad) mov sub rcrl aam adc (bad) adc or xchg jmp sub sbb cmp adc jmp jno popf mov xchg push or call xchg lahf ja dec or sub scas fidiv adcb mov loop addl sub iret xor mov imul jle lds pop push int3 loopne ds mov mov inc cmp and arpl pop add addr16 cmp leave icebp ret add xchg jnp scas lock (bad) mov mov push push push call pushf aaa rol xor jecxz cmp popf outsl repnz mov icebp mov xor jbe ljmp xchg or mov outsl mov fwait jb push jno jne aad cmp mov and in mov and mov sbb dec cmovs in adc sbb lea dec lds in mov inc adc and repnz fwait or sti fstl pop cmp das outsl jbe insl pavgb incb jge fidivr imulb sub mov xchg lret jle add fistp mov pop cld adc mov outsl test movsb (bad) je xchg std add int3 iret jb mov js fisttpll pop jle imul out pushl pop ret pusha xor and out mov mov loop out aam outsb sbb or mov inc push sbb xchg sbb pop jecxz popa push (bad) pop jnp pop cwtl dec push add xlat jmp fstp cmc (bad) dec jge xchg (bad) and daa dec push mov sub scas mov les hlt pop add rorl pop inc sub cmp sub stos add mov (bad) lock or sbb addr16 (bad) movsb ret cli mov cmp push cmc jp xchg cmp jg popa dec or mov mov pop mov and mov in dec sahf iret inc jecxz adc dec mov inc xchg cmp or cmp adc (bad) insb push push mov in push (bad) ja stc cwtl setns add out out outsl xor (bad) data16 push xchg jl (bad) fwait jge bound loop (bad) leave mov jnp mov mov int3 lods lcall shrb add add jg xor xchg clc mov stos xor aad jle jb push loop ret dec jmp inc sbb test dec les test rcr push xchg adc pop sub movsl jp cmp int sti sub (bad) shrl in mov (bad) je in mov scas xchg addb pushf cmp xor in mov mov shll cld add nop sahf sbb jns sub call sub mov icebp icebp jne (bad) mov aaa jo add fimul dec inc xchg mov pop aaa pop fcmovnb nop mov je ret addr16 push aam push jne mov pop stos out adc adc ljmp push aaa and aad xchg mov mov stc ret xchg out test call int3 dec out mov pop sti xor movb shl inc dec push in imul lahf dec mov into push add and call or cmp xchg popa fisubrl dec pop inc les jg or lahf addr16 sbb add adc and ss fwait dec xchg cmp mov fdivs lods add dec inc or jge (bad) lods shl and adc (bad) pusha push iret stos push or rorb mov cld jle mov mov and xor push addr16 dec xchg xor xchg xchg mov mov dec outsb mov xchg daa aad push arpl cltd mov call push xchg shrl inc aas lea add xchg popa out cli or jne in je in sub mov jno lcall scas (bad) ror movsl loopne,pt mov push mov repnz pop pop insl sbb sbb stc int3 jle sbb inc ret fmul insb sbb popa xor or movsb stos mov push fdivl test cmp fwait cmpsb notb push into movsb xchg or inc aas sub rcrb addr16 jne inc sbb cli int3 loop pop movsl jecxz xor mov push cmpsl mov mov es or test jns xor mov sahf arpl ja add insl lea jl inc pop lret (bad) dec mov mov (bad) lahf xchg mov (bad) aas ds les add shl inc dec add loope add push or dec mov sbb (bad) pop (bad) mov imul repz adc dec mov adc out xchg mov (bad) mov je fs push sbb adc jecxz cmpsb out mov lods mov cmp pop cwtl push outsl popf pop and jmp mov in test push push sub pop in sbb repz add sarb xor add adcb shrb or cmp push adc jp je (bad) cmc mov and pop or or push pop add enter jae loope,pt out pop bound pop mov xor and rclb mov mov sbb mov test jl fidivr fsts ret mov jno jbe pop push dec xor jae mov int3 pop into movsb mov (bad) push or sub jo mov jns push imulb lahf cmc push push ret imull xlat or inc clc adc push incb and into pop fstps pop ret fsubr (bad) pop adc mov (bad) pop loope nop push daa cli push sbb fmul jecxz push movsb fs dec sbb outsb xor xor mov sahf mov sub add adc jle jmp push xor fidivrl std fwait adc out mov jle dec (bad) fldl test mov mov test mov mov push popf xor lea dec stc outsb mov popa xor add test (bad) cmpsl lahf cs xor inc mov (bad) mov jmp orb mov push stc es ss gs mov iret adc pop rcl xchg or jo or lahf sbb lret add (bad) ja repz sub addr16 loop sarl jp or int mov roll fisubrl or and dec xor sbb cmpsb mov pop insb xor mov pop mov mov mov loopne ja out fcmovnbe sbb push dec int add icebp dec xchg xor inc or shll enter pop jmp push xlat (bad) jno sbb inc call cltd (bad) loope test push sbbl inc std cmp in xchg shl cmp pop loope leave dec sbb lods in jmp das fiadd rcrl movsb stc push std aaa inc cmp jbe sti fsubs push popf out xor (bad) cmc and jbe rorb mov jmp push js sub mov push pop aaa int insb shl movsb pop test inc sub fmull xchg in pop push mov mov ret xor cmpsl mov or and sbb mov cmp xchg cwtl sub addr16 imul pop stc dec popf push cli mov cmpsb inc sbb mov add push stc cmp xor sub push dec andl leave cmpb clc push adc sbb scas lcall and push in (bad) sub inc int3 cmpsl and cmp and into aas pop mov sub insb aad test test push or xor fiaddl jo shll (bad) idiv pushw dec xchg fs gs mov xor movb loop xor jae sub imul bswap outsl mov cwtl push loope lcall sub sub or pop jb test loopne inc pop stos flds popf jns add mov add lods jb dec push rorl push (bad) (bad) ficomp inc jp xchg (bad) js ds dec add adc lock sarb mulb in (bad) fsubrl rorl cmc sahf jns aam xchg ret xchg sbb dec insl xlat mov jb mov dec jmp popf lock stos xchg lahf mov int pop add cmp scas test push xchg and pop bound jg inc or push mov pop sub dec jae cmp in mov (bad) bound and or jp stos jl cs add stc insb icebp loop add add leave outsl mov nop iret xchg pop ret lahf lahf cmp adc inc mov xchg mov sbb test mov stos das repz cmp mov pop dec fisttpl push addr16 adc movsb ljmp lcall inc xor ds mov shll mov inc jle inc xchg lret dec sahf imul push push ljmp dec xor xchg mov mov jbe stc aaa adc mov jecxz arpl dec leave xor xchg jb es lret xor mov xor pop mov jge fldt lret imul mov jecxz cmp push and xchg dec cmp pushf cwtl mov mov mov inc dec add xchg dec ja inc sub pop mov lret call in outsb push int cs or mov pop outsb imul test mov scas mov in lds cmc sbb jb movsb aaa mov pushf inc and cmpsb pop addr16 xchg dec pop xchg mov mov loopne push sub aas mov (bad) lret dec cmc fldenv inc pop les sub popf jp cmp jg mov sub and jnp jbe popf mov jne test mov test jb dec ficoml sbb cmpsb andl mov add or pop xchg shlb aam jmp mov dec gs lds mov ljmp fildll push hlt jbe adc mov ja in (bad) xor cmpsl sahf loop (bad) leave movsl add jg pusha jb test fstpl mov arpl pop in inc or addr16 mov add xchg mov jmp sub sbb mov pushf (bad) add fwait xchg bound das lods cmp mov mov nop and mov std fmuls loope pop mov jle lods nop and aam repnz cwtl shrl pop into out clc cmp (bad) mov push cmp (bad) pop (bad) into roll push mov dec (bad) fucomp push fidiv jae test xchg dec rorb shr lods mov push out sub stos or arpl stos clc and jbe pop push sub ds xlat push aas inc xlat jmp sub jnp popa faddp (bad) pop xchg jmp rolb cli arpl push data16 push shrb add mov stos push mov push je mov jne sub mov dec xor dec xchg in movb inc inc (bad) aaa idiv jo addl lds push pop xor push fimull push icebp inc adc shll pop push or fmul les (bad) mov popl push mov jo and adc hlt add adc sarl adc mov mov cld jmp sarb jg incl or adc daa lock loopne sarb jg incl or adc jmp lock xchg (bad) lock sbb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add out and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov orl push push inc fimul mov mov fldt fxch mov (bad) mov mov (bad) mov sti jl (bad) out adc mov add add mov adc ljmp fidivr lea imul out xor pop fcoml sub rolb sarb (bad) xor es xor popf dec inc cmpsb dec ljmp test jg push pop mov inc or xor mov pop out es dec enter (bad) hlt push mov insb pop in xchg jae js repz mov sbb gs pop fs (bad) outsl dec mov idivl scas cmp test adc rorb (bad) jp dec inc mov mov inc imul cmc or sub cld mov push pop push lods icebp or insb in dec push jp insl lahf iret push push push loopne enter mov mov or xchg jle (bad) cmp xchg and sub xlat mov or and mov stc pushf jo adc js mov adc jle (bad) or enter in in mov shrl imul scas leave jmp cmp jp xlat sbb jmp and adc or das leave dec xchg in (bad) (bad) out stc fistp dec sbb icebp ljmp imul pusha xor mov lahf xchg into incl add push adc inc mov (bad) cmc in sbb ret insl rcll cmp jp push jg pop data16 je cmp outsb pop scas jl (bad) int3 fildll (bad) xor (bad) (bad) leave mov bound and sbb dec es ja stc hlt stc mov xchg push jmp mov sbb mov sahf nop loop imul cmp jno (bad) ja mov cwtl adc mov sti dec xchg sbb test out js xor jp icebp cmp sub mov daa loopne lahf outsl fwait mov ds test jmp aam fmuls std inc imul dec jmp pop jb arpl into adc mov imul in arpl push out or test ljmp mov xchg sbb mov mov sahf cmpsb mov loopne lcall outsl pushf outsl push xor call add jo and in sbb or negl insb sub sub xor jecxz fsts mov scas pop shrl sub push movsl rep cmpb adc sub add repz cmpsb mov adc and fdivrs mov call inc inc mov pop mov fcmovb jmp in pushf cmpsl push push sbb mov mov data16 sti or ss repz loopne repnz fistpll fldt stos fs sbb or dec sub (bad) popf je push loop or xchg movsl in push aas fcomps adc jmp dec mov out and pushf jle cmc mov pop push loop stos mov and out stos insl jecxz adc das adc jne jne decl ja cld ficoml dec fwait xchg xchg (bad) in push or sub into mov add mov daa and push dec insb jmp orl adc or into jle xchg push (bad) jl mov push popa mov sbb std xchg xlat into ljmp dec dec add xlat xchg cmpsl outsb rcrl ror mov mov dec inc cmp imul lret pushf mov and sub sbb (bad) add (bad) pop scas test out imul repnz sub sbb jno cld decb pop mov pop ljmp rorl push push adc bound inc jns jle xlat dec orl mull (bad) xor pop fdivs pop push pop fs test out sbb daa pop fs fstpl in test leave rcr mov sbb mov or mov push (bad) inc xchg push cwtl fwait je dec (bad) out ret bound pushf pop inc adc inc mov dec arpl mov test ja mov notb lods push or aam dec out or sub cmp (bad) pushl jae out imul push scas (bad) (bad) stos inc sub repz mov pop push stos out mov mov out ret hlt inc push sbb cmpsl dec inc jae sbb hlt jecxz xchg sbb ja pop maskmovq negl cmpsb fildl popa add xchg pushf cmp loopne daa adc inc xchg pop fucomi mov mov xchg loope mov test ja mov (bad) lret mov test fidivl and jnp das repnz or in ds mov add nop mov outsb or loop inc adc inc xchg mov cmp mov nop cmp or cmpsb mov dec xchg (bad) loop leave xor ret push das jle enter imul or cmp adc mov pop leave mov adc adc sbb jmp sahf push ljmp or jbe dec fildl jmp aam inc dec stc out (bad) cmpsl cltd fstpl lret mov popl imul add fwait mov popa jne sbb addr16 mov fnstsw or mov or cmp cmp pop std jnp dec pop int3 cld sbb sub xor xchg fbld mov popa dec stos sub mov adc fdivl pop cltd stc stos xchg je or or shrb cmp insb sub int3 sbb lret sub and int scas push das xor fistp adc lods andl idiv jb (bad) sub xchg pop and inc xorl shl sub pop mov outsl imul mov pop mov mov inc xchg pop mov outsl push sbb fistl (bad) enter mov mov xchg in pop lret xchg imul pop mov inc std iret loopne bound sahf stc in xchg or std addb mov ficoml jmp test repz pop les pop stc cmc fwait (bad) mov xor ret outsb cmpsb push pop lcall lea add bound aaa lea popf mov dec push in mov mov sub addr16 loopne sub movsb in or pop lahf xchg or aaa (bad) ljmp fisubl mov xlat imull mov adc or fmul test dec (bad) shll imul mov sbb scas rorl insl cmpsb movsb popa incb mov ret mov adc mov mov mov cmp data16 pop push sti sti push popf push into add push jb ja push fnstsw ljmp in lret cld hlt xchg sbb into (bad) xlat inc jle adc pop lds jmp cmpsb or fucomi adc mov roll xor and or push cld pop cmp sbb inc push mov or push sbb cld sbb test sbb lahf sbb lds mov and ret mov xor mov ja loope cmp loop dec mov xchg aam ja std scas lea and iret mov ja scas mov into or mov fild into outsb or movb push (bad) jecxz bound lcall movsl add fmuls add pop add pop mov imul mov jne addr16 mov dec mov idivl scas sub movsb shll and cld mov or jns fst xchg imull mov shrb push cmc imul mov pop ds les mov and lock pop push int3 cmp adc imul xor fstpt shll xor test cwtl inc pop sub lret ja mov cmp xchg ds xchg or pop xor scas movsl and mov dec lock call out test jo aaa fwait aaa push in test jp add aas sbb xchg and dec pushf jae push popf pop jecxz insl xor mov mov sub repnz sub or lcall lods sbb push out pop pop sbb push jmp sbb rorb and popa int stos jo cld (bad) xchg arpl add sbb xbegin call rorb push sahf or orl mov mov adc xor xor bound mov cmp mov cmp loop mov pop xchg push cmp lods push popa cmp dec mov andl sbb lods jne jle (bad) mov lods ret scas sbb js jns and stos out and adc (bad) addr16 outsl xor stos mov dec je xor cmp in jns jl outsl cmp jge test (bad) jne mov sbb adc popa cmpsb mov shlb es out lcall xor insb js sub pop imul and hlt iret sub mov or ret mov enter push or jp fldcw push fmull push sbb dec push enter push out push jb (bad) mov stos sbb or ret enter cwtl and push adc daa xor clc or inc inc (bad) repnz pushf xchg xor sti clc mov fwait into bound icebp mov mov fdivl cmp dec pop (bad) jg mov inc cs aaa push and cwtl ljmp mov add mov jp xchg aam (bad) idiv and jle lahf dec bound (bad) mov mov pop in dec je add jae inc into add push push in dec or add mov in cmc icebp (bad) fistpl xor ja pop cs rcrl inc popf lds mov dec test repz cmp mov push mov push test push inc mov sub les xor cld testb fucom fnstsw cmp mov inc inc sub out xchg mov mov or dec fldl jne mov pop imull (bad) loopne dec xchg movsb adc push jo cmc imul dec popa push jge push addr16 lahf and sub iret dec cld xchg stos ja or ret clc inc outsl mov cmpsl je imul gs aam repz push push stc (bad) cmpsl fs out adc ss inc leave ds sub outsl out pusha (bad) pop inc out movsl in outsl pusha cmp lea mov leave or mov or xchg rol mov xchg clc xor cmp (bad) mov es imull pop pusha sbb mov outsl mov pop pop mov jecxz mov cmp mov (bad) xor adc test nop loop test cld xchg adc adc xchg sub jne scas adc leave idiv popa add ret adc rcrl mov jae insb cmc je xchg mov add out int cli mov add stc jae repz push mov cmpsl cmpsl int3 (bad) pop movsl fnsave or or outsb push lret int3 fcomps stos adc sub adc stc mov jnp dec stos dec push fidivl inc push das ja mov imul out mov add pop mov pushf sub mov into int repz dec cwtl mov pop cmp mov cmp leave push scas pop cltd sbbb lahf or pop adc das stc lret inc dec loopne or add xor dec out or xchg fist xchg jo in (bad) mov incb mov add push adc and inc cmp repz push mov sbb push repnz hlt cltd cwtl xor inc dec mov repz sbb cmp add dec outsl pop (bad) data16 and dec cmpsb stc int3 loopne in ja divl pusha sbb outsb xchg adc or popf das adc or and fist xchg pop jnp sbb add xor (bad) jo mov ret fildl sbb mov pop mov loopne scas icebp lahf pop push push or push push loope sti (bad) loopne sub (bad) es sub fnstsw stos xchg and lea icebp fs adc adc fnstcw cmpsl (bad) jbe das jae inc and popf xchg sbb cwtl rclb add inc popf shrl push pusha mov nop sti cli push xchg stc adc add cltd cld ficoml call xor test jns adc jle sub mov pop push sub adc ret int push gs sub push outsb (bad) (bad) enter jle xchg adc jp push orl stc sbb sahf (bad) insl fcoml cld lods ja dec je sbb pop ud2 push test mov push add mov popf and xor dec push dec fild popa mov lret stos enter outsl in adc movsl in jle sbb sub sub dec sub pop ja insl xchg ror jae add mov sub lock icebp popf lds adc dec imul sbb add cmp or xchg scas mov out iret sahf sahf (bad) cltd add out xchg xor cmp sub jbe data16 sbb mov jecxz push daa inc mov ret cmp rclb ds push test jmp push lock test sbb jl into or mov je cld jno mov stos inc lcall in pusha mov mov negb jno inc out jg arpl mov clc pop shrb sbb je xor sbb lea aad xchg in imul jbe mov jg lret fistp (bad) inc jle pop add xchg or push jae loop add adc xchg insl aaa pop out fdiv daa aaa adc out pop popf inc xor adc imul insb dec pop into pop sub por mov fstpt test scas mov cmpsl es (bad) dec sub mov std jecxz mov mov cld push dec lret sub push repz gs out scas aaa lea lds sar push xchg es jge out jecxz mov jne insb ret call adc sbb repz arpl jno mov mov iret hlt jnp rorb push cmp lods loope clc mov jmp orl mov add add dec pop cmp mov adc hlt xchg mov pop mov es jne bound repz sbb push scas mov cmpsb pushf cmp fs adc mov aas inc ja ret cmp dec push fistp adc sahf mov aaa jecxz adc cmc ds cmp push jl rcrl pop (bad) push mov stos dec outsl imul shrl pop in inc mov jmp in pusha xor sbb ljmp popf inc sub add aaa icebp add inc xlat mov lds in push fwait and insl dec mov pop push daa xor inc cs push dec sub std adc mov orl fnsave arpl mov adc out cmp in popf int sub int leave xor cmp lret mov dec sub pop mov cmp sub lock sbb dec pop mov cmpsl jp sti mov (bad) inc lret mov mov mov clc push adc sahf xor push cmpsl fistp inc jbe ror mov xor mov jmp mov in arpl jo sbb sub (bad) xor dec sti inc push out fsub in (bad) ds pop les adc data16 hlt xchg sbb or aad rcrb (bad) dec push sbb mov (bad) push icebp xchg xchg mov stos arpl out sub xchg test sbbl out fstl test repnz (bad) jae outsl inc xchg (bad) repnz xor scas push outsb jmp push mov test push and jecxz ljmp xorb mov mov mov adc dec push push jle leave sub pop jmp loop xchg push mov push mov adc push fnop xor mov hlt xchg sub add jno rorl mov sbb cmp jno sbb call cmp js int3 int aas stos lods inc dec sbb and add repnz jno adc push or in inc fmul imul mov mov jns adc xchg imul aaa or sbb aaa sbb aas (bad) pop js sub scas cmpsl or xchg cmp xchg pop sbb cwtl adc jnp sub psllq add adc cmp scas or push fisttp mov jae fwait subl cmpb aas push jo pop mov push enter std sub repz and xchg push rcrl orl mov xchg jo pop mov cmp clc mov xchg push cwtl aad mov mov lods jno mov mov jecxz test mov adc (bad) aaa push sti (bad) dec pushf shlb jge sbb outsb pop (bad) fcomps movsb out xchg jae mov fwait inc in js (bad) mov test out mov add aaa xor xchg fs das ret dec cli fcompl or test sub insb addr16 ret sbb or ss xor inc adc push mov mov sbb sub jmp inc xor xchg adc or or jmp hlt pop add test jmp ja,pn in lods test pop nop mov js out mov aas xorl bnd xchg addl les and push mov jl scas mov outsl mov add dec lds xchg xchg dec push jb pop sub scas sub xchg ja cmp imul mov repz lods adc lods in js (bad) subl lcall loop inc xor sub imul inc mov cld out ljmp ljmp ljmp xchg cmc sbb inc and xor pop jb xor aaa sbb mov pop xchg cmp mov inc mov lahf adc rcrb or push insb mov inc bound push mov adc insb xchg les cmp xlat nop mov sahf lods aaa or mov or gs pop stos mov sub and mov out push leave jl push fildl js pusha repz lahf and loope mov movsb mov mov or stos ret fcomps mov pushf xor imul iret out or cmp movsb test jle cmp stos jae (bad) (bad) adc rol cld ja (bad) repz mov xchg ret fnstsw mov fcompl push or dec xchg jge lock pop in pop dec xchg insb mov jno mov pop lock dec mov push jo fnop (bad) or out mov ja pop das sbb xchg push mov sbb or rcll mov xor jo jo sarl in rep mov sub stos popf rclb xchg stos adc cmpsl and dec ss (bad) incb loop push lcall test ds aad sub inc xlat dec enter and cmp mov outsb js xchg xor imul and xchg push cltd arpl pop ss aam (bad) insb aam dec push gs stc add inc inc dec cmpl mov jl xchg imul lds sbb js stc mov xchg mov cmpb or add out inc pop enter rcr cmpsl (bad) cmpsl pusha test inc inc jp sub jb xchg dec in cmpsb ret in fmuls push daa iret (bad) xor push mov je adc movsb push dec xchg stos icebp mov xor and pop adc (bad) sbb stos or pop xchg sub pop (bad) jae cli test add or aaa (bad) fldt or xlat add loopne popa pushf call push pop jno cmpl adcb mov or into inc sbb cmp jl add and imul ret inc mov mov mov xchg jg (bad) xchg xor cmp xor sbb stos sbb inc loop and dec rorl cmpsb xor pop pop dec fs mov outsl mov mov sub mov cmpsb xor (bad) push and or push pop push int sub enter shr in sahf mov mov mov mov mov jmp pop inc (bad) je cmp mov dec (bad) daa ljmp pop jmp aaa (bad) loopne inc fwait push mov std dec rep lds pop sub (bad) lock stc std lds jns fdivs mov adc sbb add mov jp or insb dec or rcll je leave xor out mov (bad) fdivrl pop test in pop jne xchg aad pop mov scas bound mov aad test xor cld sbb call lcall pop inc jmp inc mov mov lock sti sbb adc mov fwait sbb pop add fidivr mov sbb adc stos fwait push pop sub decb aaa mov hlt jnp pop xchg test pop push inc loop dec dec lds pop cmp and (bad) imulb (bad) jne mov insb pop es idivl sub pop mov lahf mov mov outsb add push fdivrp mov jg,pn dec loop jb inc cmp popf lahf notb xchg jae ds xorl (bad) imull jnp aad imul rclb mov and fcmovne cltd xchg jo dec mov dec adc adc xchg add lahf or (bad) lret fsubp push sub rorb repz jbe in stos fxch mov sbb xchg (bad) ret test mov mov jae sti rcr sub cmpsl dec sbb scas test fcmovnb sbb jp or jo neg int mov out out decb pop movl or sub idivl test push cltd repnz lock cmp adc sar sarl mov push push or xor leave addr16 sub nop and mov bound (bad) sub popa lahf and xor push dec cmp std int3 (bad) xchg pop pop fwait xchg lds insb pop xchg ret jle xchg mov dec rcrb push lcall into imul mov fildll xlat popa mov ficompl mov loop nop leave loop cltd dec das lahf sbb iret inc jp ss mov push mov sub mov sbb or mov push int3 mov lahf cmp (bad) (bad) stc data16 data16 adc dec mov push jo dec negb mov jecxz cmpsl cwtl lods insl and (bad) jp ret push push scas in cmp sub push xchg pop push rorb int3 xchg push pop pop cmpsb add loopne leave adc je adc pushf push popa push push incb in bound pop push dec adc xchg lcall clc and dec pop out or and cwtl jbe iret sub sbb push mov or cmp jmp inc lahf dec cmp das repz cld or jg add sub rcr daa mov cmp fsubr daa sbb bound mov lods push jae icebp or imul sbb sbb lea cmp cli test adc and mov xor adc shlb mov dec sub jle icebp pop mov test mov mov dec sbb mov addr16 rclb mov mov sub sar inc mov xor out pushf pop adcl popa add idivl fwait pusha (bad) mov fstpl insl push stos inc mov roll popf xchg mov (bad) cltd mov cmp lods and xlat stc adc sub mov pop rcrl or in in or push xor testb loopne mov lds xlat pop sti sbb leave imul cmp mov dec xor sbb inc fwait int arpl sub into xchg mov stos jns cwtl jg scas sub inc jo jno movsl mov fildl out sub daa in in add push or mov mul cmc pop xchg iret xor mov mov xlat sahf js icebp out jle lahf add add ret sahf jg lods aaa jne pop push pushf out mov push (bad) mov sub mov push add mov sub lcall repz cmp cwtl js xchg xor sahf jp lret nop popa movsl iret mov mov or fcmovnb iret fbld mov addb test inc or mov jnp fchs jp stos pop lds xchg lcall add repnz mull and inc (bad) mulb xchg lock mov push dec mov mov fld add loopne mov adc adc pop dec scas test xlat cmp mov lcall aam mov add adc dec loopne cmp dec loopne cmp dec loopne cmp jmp lock jge (bad) sti mov push add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mulb add add or or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop and popf in dec cmp sahf mov scas mov scas popf insl (bad) xchg insl xlat jns (bad) jns dec mov pop add leave xor add mov arpl jg jl inc jne add rolb push jo std cwtl out lret dec jmp leave xlat roll (bad) jl test lods sub xor (bad) out aad xchg mov mov adc pusha xor roll mov or aad not inc jae mov inc dec mov (bad) daa inc ljmp push jge leave aaa mov cli add shrb and adc shrl fisttp sub nop jns ljmp mov ljmp out add dec xchg ror (bad) pop push aaa lcall xchg add (bad) cmp aas mov mov jne mov stos and aaa push and popa imull cs adc mov stos mov sub or nop and pusha enter daa cwtl gs or iret fistp or arpl pop int3 cmp pop and out cltd lock pop push std icebp lret mov sbb mov mov cmp sub xor jg aad (bad) cmp das pusha sbb dec in mov mov jo pop inc add xor xor rolb adc mov xor data16 xchg cmc in lea arpl iret mov pushf dec and cltd or or (bad) notb out enter out pushf jns sub (bad) mov aad bound mov inc add das lret fwait sbb ja js mov cmpsl fstpl (bad) test or (bad) fsts cld xorb sbb pop pop push (bad) in outsb adc rcl fsubl out xchg add pop pushl and sub in repnz xchg dec insl lahf insb loopne iret lods and fs inc frstor pop pop mov lret jo dec repnz out aaa mov xchg cld clc out pop sbb adc inc cmp cmpl mov adc jno add xchg jecxz xchg pop push mov push int3 cmp sbb pop jp dec pop es outsl mov daa lods mov jge pop in sbb inc or cmc test pop mov shll lcall dec (bad) fcompl push int3 sahf lods fnsave (bad) jns es and mov jmp std cmp jno cmc or push push (bad) mov dec notl mov pop lret inc mov call push push push jb mov scas xchg dec lahf sub add push (bad) lock xchg xor arpl movsb fs sub lcall addr16 or je adcl push out adc fxsave shll cmp add es repnz leave (bad) sbb in sti lret push and push push and stos pop movsl mov add mov mov movsl dec stos js fdivrs pop mov cs push pop mov pop aad out fidivl out (bad) scas lahf ss xorb cmpsl fwait or xchg xor push je jae cmp push daa gs or scas mov loopne dec cmp hlt push imul mov fnstenv js orb jg or es je aaa pop outsb xchg in cli mov mov jl insb sub and leave mov outsl (bad) mov jnp insb adc sti in mov dec mov adc (bad) jle lcall mov cmpl mov pop mov mov sub subl das push jne inc fistp mov insl push call pop dec inc pop rorb ja sti sub nop scas inc scas push mov push data16 and mov xor fnstcw inc mov push (bad) cmp nop stc dec cmp xchg rcrl leave shl lret xor (bad) call das jecxz cmpsb popf out adc dec stos xor add pop and fisubr lods pop adc jge test mov sub jbe jbe xor fs xchg aas sbb daa cmp xor push hlt (bad) sbb mov cld jb mov repz dec push jno mov add jmp or mov in xchg rcrb or xchg shlb and push loop in (bad) add push cmpsb push (bad) (bad) cmc push adc cwtl hlt aas or jg adc es xchg sub xchg jno adc sti out es popa into sub adc mov sarb cmp pop out (bad) mov jns mov adc pop fldenv mov rcrb add or jl xlat das insl sbb imul arpl pop repz xor out nop push jb pop adc jb pusha es ds jmp jo lret push in mov push aaa mov call mov dec daa lods dec inc out subb mov clc adc outsl arpl cwtl (bad) mov insl leave and jg fildl and jp push xor mov mov jne cld rol (bad) adc divb cmp dec xor sbb lahf (bad) nop adc das jnp ds lea jns cli das in test cld jae adc jge xor mov push stos fmul and and jecxz cmpsl pusha fstpt xor push movsl loop sbb mov pop push jb arpl mov inc mov (bad) fs sti inc sbb cmpsl adc mov cmpsb lods push pop in pop mov sti in mov fmuls mov loopne in push mov sarl jne notl add cwtl loope jp jns rcll lock stc pushf jg roll sub lret ror sub bound out pop lock inc lock xchg ss jo out add mov pop add movsb rclb stc pop (bad) (bad) or jae ficoml gs adc fs (bad) cmp pop cmpsb add xor and int cwtl pop sub out lea xchg imul lea in (bad) mov dec pop mov push pop push and je mov call and adc mov ja rcl push jge or cmp push fmulp in jg cltd pop in mov ret int3 ds imul pushf cmpsb fild out cmp pusha das adc pop jo cmpsb pushf cmp cmp fadds add cmp hlt adc (bad) outsb mov scas lods popa dec lret addr16 inc jg sub jno mov jne inc push xor mov fxtract xorps mov fwait popa (bad) dec xchg int lret icebp jns or pop dec mov (bad) fstp add lret push or cmc and xor out sbb jp sarl (bad) jge repnz sub dec adc gs add and sbb dec in sbb push pop (bad) lods sub mov mov cmp cwtl sti adc rolb (bad) adc (bad) push enter inc inc xor lret inc lds mov ljmp outsl in adcl push mov sbb mov fisubl inc nop aas les out enter mov lea sub rcrb pushf push aaa mov mov or pop cmp xor out ficompl lret push cmp int3 jb mov xchg inc fcoml mov and inc cld fldenv mov push clc rcr mov jg xchg lret out cli or rcrl in (bad) out std imulb bound jae shrd and stos inc xor pop imul mov cmp push jnp outsl push mov sahf lea repnz gs call add mov jp push into or icebp insl in dec or jns add int mov enter loopne mov ds jle or xor cmp test jmp mov pop sub cmpsb and (bad) iret int pusha pop xor lret and fincstp xchg int cmpsb mov xchg in or loop lcall inc cmp push sub sti xor mov jbe enter pop fisttpl andw aam iret test pop or sbb ficoml push testb dec arpl lea add fsubl icebp ljmp mov gs ret dec in (bad) mov pop sbb xchg xchg test pop outsb pusha nop xchg push fs sub (bad) stos sub pop add jp mov lret push push movsl fs mov cmp pusha ja ljmp repnz mov lds lods pinsrw pop mov inc inc sbb vsubpd mov (bad) in shl test xor pop mov rcl sbb ja test arpl sbb repnz dec repnz fcmovnu jae mov int3 stos or inc cltd add mov pop scas fld cmp mov pop jne bound mov inc scas fdivrs (bad) sub mov sub test negl sbb imul popa cmp in xorb clc int3 pop push mov cmp (bad) je lret aam sti cmp insl jge scas ret fs pop roll insb insl lods push clc mov lahf ljmp lods outsb adc int aam pop pushf inc std jo jmp push jmp bound cmp xchg push test (bad) xchg std xor mov push pop pop wrmsr jl mov std sub das loopne inc push and push sti mov sets int3 adc inc jmp bound pop push ljmp mov mov mov imul aas out jmp loop movsl idivl pop mov nop int3 pusha in jns mov nop loope mov push sub les mov xor dec dec mov push sti ret add scas mov jge sbb pop ret pop in jae fisubrl outsl sbb ret jmp ret sahf mov sub push mul aas enter test addr16 movlps xchg jl test xor push (bad) icebp add push inc movsl loop insb outsl sbb push and xchg xor inc insb or insl xchg lret cmp mov adc xchg std fisttpl outsl mov add xchg sbb mov pop sub mov or xor stc pop mov and popf test stos dec (bad) daa cwtl xchg ret cmp mov movsl jmp add ret inc push gs sub cmp cmp mov data16 pop push dec add cmp and push xor pop push dec jne movsb rorb fwait mov or cmp aad jge jle pop mov repz dec loopne test xchg xor mov test bound dec sbbl xor lret mov fstpl int3 das fldenv adc sbb cmpsl les inc add fwait sub pop pusha lahf mov loopne xchg dec cmp sub imul lahf dec nop sub repz js pop pop adc xchg shrl lock in loopne mov xchg in sub xchg jae movsb rorb mov int jg dec dec mov movsl or mov sahf xchg push dec sub cmp sub cmpsb fs mov ret adc pop rol pop pop (bad) jb xchg add and xchg fldcw inc je lret aas sbb call jno pop jbe fucomi dec scas insb cmp xorl hlt dec jnp jle ffree out (bad) inc leave roll jns jmp std fild cwtl push cmp dec int3 push icebp cmp aad fstl insl jbe mov out push fisubrl lock (bad) sbb stc nop mov daa fs sbb pusha mov adc cmp adc popf sub sbb adc out cli mov enter inc popa or lret les pop and out stos cmp cmpsb cmpsb fimul ja (bad) js test fidivrl add jb push jns dec pop ss adc seto mov shr mov adc fs xor jnp (bad) loopne les xchg arpl stc ja fmull cmp sbb (bad) sahf inc push inc jb mov pop xchg xchg add aas popf inc ret sbbl in lea xor mov mov jae mov ss mov xchg and add sahf jg shll test sbb out mov test jae cs cmc pop sub (bad) mov xor xor int in jmp dec xchg insl std cmp dec ss rclb (bad) xchg cmp add sbb movsb mov xchg push pop icebp popf ds xor repz jg inc int3 inc das and mov cmp stos (bad) adc or frstor out cli and mov scas loope xchg mov rorl jo out mov (bad) push fs fwait cld jge icebp daa aaa add fisubrl movsl enter ja mov mov push mov mov adc scas pop push dec mov addr16 das out mov repnz dec xchg movsb sbb lds test push (bad) (bad) (bad) shr pusha push mov jo mov inc inc jae sarb adc pop lcall xchg fdivp add or xchg das popa arpl cmp ja pop aaa pop call jg (bad) push jmp and mov jmp fwait lret xor stc imulb mov in shlb jle pop mov (bad) pop iret movsl aam cmp loopne xor (bad) mov inc xor sbb test cltd mov enter cwtl ds jo call and insl out push ss xchg movsl cwtl ret xchg (bad) je adc pop inc lret pusha sti mov cmp je into dec pop rorl shrb fidivr insl and jne daa mov je scas and and in cmp ja or rolb mov mov xorb jnp imul fldt xchg ror (bad) leave packuswb test push (bad) xchg push aad mov xchg xchg and mov outsl scas mov cli aaa les stos in sub rcll mov and jne or dec dec and fs roll das sub addr16 movsb or cmp pop cmc stos insb pop mov lret sub lds scas int xor mov test popf int (bad) xor sbb mov push in subl insl sub mov jbe hlt xor dec bnd lds dec sub loop cld fwait popa push (bad) cmp mov cmp xor mov mov push jl xchg xor push pop xor scas push popl push lahf adc xchg inc or cmp gs out and lahf insl sbb push lods mov movsb xchg jo xchg sub fdivrs les mov mov fsub (bad) dec jle mov clc or adc aad ret fwait das loopne sti orl sbb jmp loope xchg inc stos ficoml insb jbe add outsl cwtl test cmpsb push xor dec jns in inc sahf sub push ret and (bad) pushf out pop push stos xor adc mov sub sbb in in (bad) std out pop xor cmp xor cmp dec adc outsl xchg (bad) imul arpl lcall and cmpsb dec scas pop jb xchg in scas adc push cmp cmp xor xchg cmp sub imul int3 jne stos (bad) push out mov mov sbb (bad) rcrb rolb xchg cmp dec jmp dec cmpsb push push repnz in xlat and adc jae test xchg outsl repnz mov ljmp test out cmp addr16 jg pop divb or adc subl inc xor ljmp jae test outsl enter push test xchg jo sti scas cmp sub xchg enter ljmp scas mov inc aam int3 fwait movsb jo loope iret pop int3 dec cmp pusha les (bad) xor xchg and std notl stc call mov ficompl mov xchg jecxz mov push mov mov mov (bad) (bad) imul xchg adc test push mov aad ret imul inc add out and push int inc (bad) ljmp fucom push dec jle push push xchg jge mov inc insb xchg pop mov adc xchg lahf xor popf push std daa cmp out test xor inc bnd xchg call add sub outsb cmpsl (bad) idivl enter sbb bound nop outsb mov xor jne cs mov test xor jbe jecxz sbb aam das and sub outsl fs mov fcompl jno dec mov (bad) mov into out daa out jg notl xor out mov into inc push inc popf jb jg (bad) adc push jb pop test cld and and dec sahf fwait sbb sahf xor cld lds shl (bad) dec popf lea xorl sub mov lcall adc xor sub xchg xchg lds ret xchg and inc mov or pop data16 std adc (bad) hlt out cmpsl (bad) sbb ret scas push mov dec xchg sbb cmp shlb clc and arpl sub xchg cmp pusha mov push xchg push xchg sbb iret lock rorl add into dec xchg cmp fisubr adc insb xchg or addb sub jge ja jmp leave jo and inc stos es std cltd push loope aas gs jg jmp int int3 dec xor jb aad iret nop popf int xchg je xor inc repnz popa scas xchg mov push push aaa test or adc cmp sti je imul sub or testb rclb and call mov adc test jb inc or sub outsb pushl inc fsubp test jmp mov insl mov mov cwtl jnp xor ja (bad) stc jb hlt cmp dec xchg push je adc jp add fcmovbe mov faddl loope adc negl cmpsb mov cmpsb incl (bad) lods aas es fsubl int3 sbb xchg jne xor jb bound mov xchg mov lods pop xchg cli xchg stos adc push into mov ljmp movsl in mov insb enter (bad) ret jmp pusha stos (bad) mov mov dec add xor mov aam sbb or jge jae add add aad add mov dec xlat inc insb inc ljmp cmp inc stos mov add out orb cmp ss jl fisttp aas ljmp adc sar mov call cltd test jno and nop sub mov (bad) push (bad) fldcw fs mov (bad) mov or mov or (bad) and jp fs xlat mov pop int3 (bad) pop jmp mov addr16 xchg (bad) jle xlat fcompl in add test jecxz out pop fdiv popl insl inc (bad) dec mov pop xchg je scas vaddsubpd repz jecxz (bad) (bad) jno and nop mov push xchg cltd iret int3 xor insb lcall sbb adc shr xor cli add or fdivrp (bad) jp jecxz lret sbb icebp out jbe adc sub sahf mov hlt xor cmpsl insl mov mov lds in pusha push subl inc aaa imul or cli scas in data16 (bad) shrl adc mov hlt fildl pop rcrb lret xor fidivrl mov cltd mov stos push mov repz frstor popf ja out out (bad) lret out aaa add scas scas pop pop mov jp xlat data16 stc ja dec and and jbe cmp imul daa mov out scas aas fstps inc sub mov mov adc sbb mov nop fisubr jb arpl mov push push adc cmpsl adc imul dec jecxz loope sub ljmp jmp jmp popa jns adc dec fadd sbb xlat pushf out lea dec and add je sub cmp les xchg cs cmp stos push push fsubrs cld add dec pop mov mov sar mov or sbb fisubrl out lret nop inc pop fistpll (bad) ds ja add mov call in jle clc sbb jno das dec outsl bound xchg push aad mov pop mov and and pop (bad) and pop cmp push hlt mov ds jne xchg rcll pop popf jl or sti pushf out pop pop and jb mov lds int3 mov inc pop aam (bad) jl (bad) stc sbb sti test (bad) rcr mov aad pop add jl mov mov push mov push mov ret lods inc adc mov das push push cmpsb pop adc add xor pop mov sub imulb sahf push cmpsl sub mov or push jbe or sub ret enter pop mov (bad) outsb jnp mov ss dec add cmc ret out dec pop and iret es imul cmc arpl (bad) jae into dec int fcoml popf mov lahf nop xchg mov in mov pop mov into cmp lods jge mov jmp iret or xchg sbb test inc dec or fs push sub inc sahf cmp test movsb je or inc pop sbb jg and lods mov xchg push lcall popf mov fdiv addb insl gs pop mov lret jge in dec inc ret xchg sub fnsave jno sub lds enter pop popa cld mov add jbe sahf and cmp fcos cli stc push mov push lcall outsl dec inc icebp sar inc cmpsl cwtl or xor xchg test repz xchg pop bound push int3 call out sub test pop jmp in dec dec outsl sub pop lret cmp icebp and adc jb push lds jge xor push in fs aaa je mov loope int3 (bad) mov mov pop cmpsl jns sbb mov (bad) fldcw pop xchg add bound adc sub lods out mov in loope bnd mov jp lds sahf leave std rcrb lds lods adc js mov cltd push add ret mov and push cmp xchg jb adc mov inc sbb xchg or jae jmp shrb cmpsb cmpsl mov add fisubl mov push decl jns dec cmp data16 mov lods es inc je in fs outsl aas sub sub sarb gs inc mov push or jl sti and xchg sti dec ljmp icebp test adc pushw test enter mov ret inc inc (bad) add xor in out loopne dec xor dec push jl xchg or sahf les pop jmp cld enter push inc mov push sub aaa pop cltd test mov push and push mov jnp test cmpsl push movsb push push subl xor inc rorb xor aas adc cli or lock pop mov adc movsb push and ja mov mov sbb jle int inc sbb mov push or aad aaa in nop (bad) nop bound inc mov jb out movsb stos loope rorb push sub or jl mov fidivrl jo and jb mov fs dec pop push outsl jb add pop push push jp or aad xchg daa xchg aaa jmp lret mov pop das mov sbb adc aaa insb loopne and (bad) or dec es sub xor or push pop cld (bad) in aaa cltd lds adcl int3 nop sub jno sbb sbb xchg les add push adc je aaa mov mov data16 imul test cmp mov imul leave rcr roll jl negb mov push adc notb inc inc xor sbbb hlt jb fistpll jne inc dec sbb pusha pop add jle cltd mov (bad) fdivrl fwait add pop add ds enter gs and mov jg les (bad) mov xor cmp or aam data16 ret jb jne and rol xchg jge outsb xchg mov or sub movsl rolb mov adc (bad) mov call sbb cs std lods pop pop shr cmpsl push or in les inc and adc int idivb pushf pop adc pop out xchg xchg xor mov aam jg cmp add or daa lock sarb or daa lock sarb or daa lock sarb fild psubusb add push (bad) xor dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repnz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push pop sbb push daa mov fistpl popf insb fistpl (bad) mov imul mov mov lods gs cmp test jmp repz nop pop add add mov push lcall hlt outsw push dec fstp cmc mov jne mov sbb mov xor mov je dec call pop loope sbb xlat dec pop fidivrl aam sbb lods scas test sub mov je sub sbbl dec pop (bad) jbe out mov sbb outsl pop sbb xchg out mov xor sub leave ret in or push push jg push lea sub repnz cmp add cwtl sbb ficompl jp mov cmc add mov in sub push imul fisttpl mov and div ret mov inc enter ljmp in mov (bad) or inc push cld aas and mov call pop mov sbb xor and dec jns cmp mov aaa repz mov jne call jp test sbb int3 imul push movsb adc lret xchg pop and test (bad) test adc mov jno ds adc outsl mov mov in js ret xorl int cmpb arpl stos adc adc cmp jno mov jg das sbb add dec or xchg cmc jne sti mov in pop cs xchg sub les inc jae sbb mov cmpb stc into cmpsl add daa rcrl cmpsl iret insl emms mov mov nop fcomps xchg in jmp dec mov adc das mov arpl (bad) ss xor adc sbb jnp into pop xor jb lock int3 cmpsl insb dec stos cmc loopne int jb xchg lret inc cmp fcmovnbe je mov icebp pop xchg xor or bound xor scas push ret call and and lods jbe mov xor jb icebp inc lret inc fs cmp xchg mov rcll out mov adc cmc repz adc push mul sub lcall mov pop fidivrl push mov pop push pop sub adc mov and push fsubs pop pop or mov lds cmp push aad inc ds dec test or add stos push loope mov cmpsb cmp xchg pavgb lret outsb cmpsb cltd mov and insl pop out popf stos hlt xor mov mov cltd scas in out loop and cmpsl (bad) cmc pop xchg and jb push adc (bad) negl cmp mov mov fs add sub test add mov stos int push stc or (bad) out pop (bad) pop fnsave imul in lcall (bad) and int xor add or xchg icebp pop xor (bad) es mov and xchg or outsl mov cwtl lds jmp push ljmp dec movsl or aaa loop pop push cs dec ja dec mov push pop push mov cld inc ljmp xor add aam ljmp outsb push insl push (bad) popa insl cmpb sub add fmuls ds addl enter mov movsb sbb or in sub xchg xor mov sub rep adc lret push sti cmp icebp xor xor or dec inc push push xchg sbb test adcl hlt push mov enter add and lret push cmpsl jno fstpt div adcl jmp outsb into je loopne mov add lcall daa gs xchg fmuls ss or hlt aad and xor sbb pop rorl or mov mov out jne mov nop push xchg outsl into mov cmpsb mov shrb pop cltd mov mov inc cmp or lds inc fs xchg push jbe xchg rorb inc cwtl mov or mull mov mov push (bad) and mov imul mov popa xchg ljmp in xchg outsl push cwtl mov add sub lcall test sti xchg fnstsw add inc pop icebp and movl pop lahf mov or iret daa stc inc mov ret clc (bad) mov les or stos clc push jg sub iret insb mov add js ret lds inc test int sub lcall push sub xchg js cld inc jmp gs addl and cmp addl hlt in push mov mov xor pop dec sub call mov call mov xor loop rorb arpl lahf push dec out jns mov mov pop lahf dec push mov lds gs jg push je mov inc add cmpsl in ss (bad) dec mov mov cwtl aam cltd mov and xor aaa xor repnz pop adc popa jmp outsb cs mov (bad) and xchg mov or cmpsb pop xor call inc stos or push pop fiadd test mov movsb (bad) imul inc loop (bad) mov stos cmp das loope test jnp add mull out mov xchg jecxz shrb ss int3 dec out or call cmp repnz push xchg mov out cmp clc mov pop push inc lahf dec mov push dec sbb add imul sti das ds gs and lds and mov int3 cltd iret nop out in imul or sti outsb xchg rcrb sub faddl jp cmp not mov mov incb clc sbb mov pop jae iret int push sbb test (bad) in xchg pop out ja cmc movsl or roll movsb add lea push mov divb xchg jp (bad) add cmp sub test jl mov outsl icebp test fcom sbb leave lret adc fnstenv imul jns add popf xor bound sbb mov negb xchg fsubs fstpt xlat repnz fwait es pushf xchg mov mov fxam pop loope inc adc scas orl (bad) (bad) pop or (bad) lods lods cmp stos sbb js mov adcb add push es fistl mov jp outsb mulb dec adc lahf mov add sarl cmp pop sbb outsb xchg movsl mov adc cmp aaa mul ja mov addr16 jno adc mov out (bad) rolb jecxz adc mov lret insb rcrb push and faddp cmc ret popf adc aas jo icebp test lock jecxz dec pop cmc dec cltd and shr mov adc inc ljmp sbb insl (bad) (bad) mov and dec sar mov push popa inc movl dec cltd les mov adc into cwtl jmp lret inc pop sbb int (bad) xor push repnz je xchg (bad) iret adcb xlat dec add and pusha (bad) dec into rcrl mov cli xchg dec xor and dec mov sub in jnp mov mov dec push repnz sti clc lsl out xchg addr16 cmp out adc addr16 mov xchg inc std std fstpt loope sarb jecxz repz aad ret mov testl or or fs (bad) lock mov dec ljmp aas xchg in push push outsb fwait cmp mov pop cltd inc and cmp xchg scas hlt dec pop rcrl les xor lret dec test loop ja mov mov dec (bad) xor inc dec iret cmpsl mov push movsl out dec sbb push mov aaa mov mov jg push pop ret mov mov fdivs sarb jp in lret or xor pop test roll addr16 int3 pop cmp jle mov push scas push stos insl js js xchg sbb cld cmp cmpsb loopne out (bad) dec ljmp push sub jae push mov dec dec dec push or stc pusha add iret and inc lret jb fadd movsl (bad) call insl into mov divb enter pop aaa lret or cmc xchg inc mov into movsl mov repnz pushl mov in add test fs js and cmpsb leave jnp pop retw mov xor out in cld sub mov sarl test mov pop lcall xchg fistpl and mov ret add pop daa movsb ss mov ret cmp popf incb xor cmp add call fisttpll cltd dec adc mov pop test arpl js pushf out or dec jg insb adc mov add add sti cmp add stos add cmpl addb int add ss movsb xor (bad) sarb dec push gs dec sti ss dec pop rolb movsl sub push add fnstenv and jp push movsb mov dec or jbe pop and (bad) xlat mov push pusha nop out imul pop data16 scas inc test jno pushl sbb std lods mov loop pop or xchg mov or sarb into pop outsl fdivrs ds or das les in pop popa mov pop popf cmp in jp data16 call in inc sti cmpsl xor pop loopne push outsb sbb insl cltd adc dec jecxz mov jo scas dec xor loope,pt xor inc adc mov mov cmp sbbb out bound or cmp cmp imul test dec xlat pop pop mov adc inc lcall lahf xor dec jnp mov leave data16 mov xor xchg cmpsb xchg and jecxz cmp and (bad) fsubs bound (bad) scas fs movsb push sahf ljmp push sbb xchg nop mov lock ja out sub dec pop jge cmc push lds and mov xchg cbtw add lret inc xchg arpl cltd std mov or js inc sbb mov inc mov cltd outsl mov in fisubr shll jne add or scas pop dec push mov mov pop add cmp insb aas jl add stc movsb int3 lret xor mov ret xchg mul lret cld push arpl ret scas pop sub jnp roll inc test and pop repnz mov adc dec dec aas xchg xor ss (bad) sub int dec add gs aaa pop and sub cs push add adcl iret pop icebp pop mov mov gs movb adc jp ds and xchg lret sbb inc sub outsl push pop in jge int jp popa les aad add jo mov push sub pop stos cwtl pop aaa sbb jns jle xor js hlt stos jb test or outsl lret shrb imul (bad) leave add mov jb movsl jo xchg xchg frstor sbb pop rcrl dec scas xor fstpt paddw pop mov adc mov jb pop dec sbb inc cs add mov fldenv mov dec pop scas jb aam jg into pop lods jbe ret xchg lcall add jnp aad jecxz fistl mov pop mov mov adc add ror (bad) dec ss mov cmc sub sarl cmp push cmp dec ror lods cwtl das scas and popf or lahf lods fwait gs sbb std fsubr sbb iret int mov mov repnz mov cmpsl push ja xor or popa xchg add lea (bad) push jmp adc out xchg cmp negl (bad) inc adc cltd cmp push sti xchg pop jbe push pushf add lods and mov pop cmpsl inc stc adc push jne mov aas rorl ss dec cltd daa loop clc addl push lea and icebp mov mov insl mov and fs aas mov mov (bad) cli inc jmp pop movsl dec movsl cmp or ds lods addr16 or xor push jne ljmp ljmp mov xlat dec push aam cli mov sti sarl dec jbe (bad) lcall sbb inc arpl mov sbbb dec insl (bad) int3 push cmpsl inc lock push rorl inc and (bad) lret pusha push or insl in mov mov ret shr mov nop adcl ret sarb out outsl out (bad) and push cmp lods adc inc movsl sub shl pop loope popf pop mov xor add mov sub (bad) mov int3 sbb test jne into shld lock push scas xchg ss mov jge push daa jmp push sbb (bad) jae jg inc mov pop inc lcall mov add dec test out addr16 jo aaa mov pop lea jb adcl xor adc mov out out stos out xchg jecxz fs inc jbe mov lock popf jmp hlt into jecxz (bad) scas add mov (bad) jnp jbe insb mov mov scas sbb ss mov jo sub sub nop mov sbb popa inc or insb loope sbb scas mov jo (bad) fdivrs gs aas dec hlt aam cli repnz sbb clc hlt mov test shr push xlat or test add or lds sbb cmp fcoml fisubl inc arpl loopne jle adc (bad) adc addr16 jbe mov mov lods push popf mov data16 xchg mov push popf mov xor or loop xor mov pop das jle fdivl and int fdiv cld fs mov jb (bad) pop or cld mov mov decb nop ss or pop cmpsb cmpsb (bad) mull enter jns int cld ds and mov cmp shrl inc (bad) in fisubr mov lock mov lods (bad) pop mov dec fiadd mov xchg scas lahf stos xchg push outsb jno fs push jbe push sub movb (bad) out into push ror lret test dec nop mov fdiv dec cld fs out fild xlat out icebp sub movsb jmp pusha and loopne mov cli jl jae push lds mov outsl adc inc cli out lods xor js stos mov mulb cmp adc lret imul pop sub mov fbstp dec out jne pop and arpl add fstpt or and lret add mov jb in call mov jmp jmp test push sub hlt sub in push ret xchg dec lcall cs mov test xchg lods lock (bad) jns pop adc sub jne (bad) pop nop push push cmp jbe xchg xor and adc cmpb push sbbl sbb mov jo (bad) shrl and add pop sbb fs inc dec daa sub pop adc push sub sbb push jge jle ja or cwtl pushf into cld cltd mov sbb jl ret fistpl jne std arpl or jb pop cmpsb inc cmp inc imul ljmp and or outsl test mov cmc push hlt pushf fldcw scas cltd inc mov fmulp das cmp and lds add cmp pop repz jecxz jno jbe mov mov pop hlt pop add out push and xlat fiadd xor leave add push adc fdivl and es pop push adc data16 imul mov inc lldt xor cmpsl cmp add xchg or xlat or mov xor aam lods mov imul outsb mov test imul mov push jp (bad) int3 mov (bad) mov imul push cmpsl popa ja (bad) cmp pop cltd (bad) ret enter sbb push mov or xor mov sbb pop movsb fldl fdivrs jle shll je pop pop pop inc sub nop rorl or cwtl gs cmc xchg in dec stc or (bad) xor sub hlt cmp daa lds adc test xchg (bad) push jb mov fstps xchg cmp or pop repz mov sbb adc cmp stos inc dec iret mov add cmp lods divl (bad) frstpm(287 lcall jmp lret (bad) xchg out jbe cmp sub cmpsb sbb negb outsl test in jl lods mov xchg inc movsl popf add test jbe xchg pop enter cmc xor cmpsl xor cmp mov adc inc loopne lahf cmc dec mov scas and out mov and and lahf dec jno aas mov shlb cli (bad) jae sbb adc xchg in mov xlat ss fmul daa loop xor int push fwait sub dec jle imul ret sub out insb cmp fistp ret bound xchg fsubrs cs push jmp inc sub dec (bad) mov popa mov mov (bad) jle xor hlt pop mov pop daa jecxz popa mov mov jge mov mov outsb mov in orb adc xor out sub xchg add sahf mov mov jnp sahf leave xchg jle pop (bad) mov mov dec test jp xchg outsl fsts arpl jbe pushf cmp rcll shr sub push mov cmp mov lea repnz lcall sub mov pushf pop scas addr16 xor out pushl pop in outsl test jns mov (bad) jl adc cs and jo cli daa xor sahf mov add sub sub sub inc jae aas and mov stos cmp das mov cmp add ret xchg addr16 mov aam dec (bad) fidiv adc fbld xor adc scas push sbb fdivs jns jne gs xor xor cld fistl incl mov xlat add lea in stos mov je or std cmp add jmp jmp inc mov loope pop (bad) lret in cwtl jns pop in inc shlb mov sbb sub xor sbb test popf dec cmp popf cmp or sahf pop leave add xchg push repnz inc (bad) hlt push fs stc add mov cld je push ja (bad) cmp add dec cmp aad jno call (bad) xlat and mov add ret in cmp cmc or nop popf ret inc lahf in mov sahf inc (bad) xor in leave aaa mov adc idivb pop mov js mov jbe or jns mov stc in fbld sbb enter inc sbb mov adc push dec inc mov xchg outsb (bad) (bad) scas mov pop inc aad jno inc pop jae jmp lahf push mov xor imul xor pop xor sub fmull rclb loop adc out pop clc mov xchg sub dec and ret jo rcrb int lock xchg xchg dec dec mov and and xchg pusha xor (bad) lods adc sub inc jmp dec faddp pusha repnz mov push scas cltd xchg stos (bad) scas xorl xchg mov mov rolb or lock pop or cmpsl rclb and movsl negb or or mov mov movsb insl jge and ljmp push gs pop push lret (bad) adc cld les lods clc movsl sbb in mov sub cli push out (bad) hlt mov stos in cwtl ret loop dec sub sahf in adc movsl mov xchg push js jge jbe mov pop fist movsb imul imul sub sbb mov lcall iret int3 and insl mov gs cwtl mov fbld test es mov add jbe mov outsl push mov scas or nop xchg fstl and pop dec mov fimull mov inc dec out (bad) pushf loopne std xchg ljmp (bad) int pop je sub fnstcw mov add lahf or push sub xor bound cs rclb jno jb pop icebp mov testl mov push adc cltd les (bad) ss jns xchg sub lea sub jg or adc cmp test maxps fs inc idivl sbb (bad) icebp xchg inc cltd xor popf lea xchg arpl xchg outsl cmpsb cltd dec add les adc dec insl xchg sub sti dec xchg and and push aam or fistp sub dec mulb int3 sbb or cmp loopne xor adc jp int3 pusha inc dec hlt dec popf adc adc and ret mov jnp cmp dec icebp sbb jmp enter popa and dec jg pusha pop pop mov aas push ja cltd bound (bad) insl inc arpl test sbb insb xchg xchg xchg bound lods xorl push mov push and jge sub mov xor ds fiaddl push mov mov mov js jno dec push mov mov ljmp sbb lahf data16 or inc push jae mov out push xchg bound out add sub cmpl (bad) dec enter cli push adc xor dec popf pop and aas clc xor outsl (bad) int3 cld leave sbb repnz mov mov jne and imul hlt test lea xchg jle mov push inc sahf std daa pop adc cmp sbb fwait adc cmp (bad) int3 cmp mov repz lods orl sub mov clc lock in mov aas in rcll stos gs lret inc push mov scas out mov lock pop aam (bad) xor stos inc inc popfw or (bad) push sbb mov sarb xor enter xlat mov (bad) mov dec pop add jbe push mov jp xchg shrl mov faddl pusha mov xchg lods cmp fdivr je mov iret jmp mov dec sub std or rorl insl inc ret dec movsb inc sub aad lret push data16 jbe jbe pop vsubps enter sbb adc pop push cmpsb dec mov js inc add cmp (bad) imul mov in xchg add repz je fwait inc ljmp lret xchg jnp (bad) ljmp mov pop es popf xlat add and rorb or int3 dec cli notb fnstsw adc fs mov jnp in push in fidivr scas insl and rorb negb fsubs fistp int jg and push aad dec dec mov cmpsl mov out bound jne xor xchg mov out or iret pop hlt cmp jno sar mov dec sbb out daa mov lret pop in inc nop sub push inc sbb aad lock xor jecxz mov jb jo outsb mov xchg stos sub mov loopnew jp and cmpsl and enter aad dec dec adc lcall pop scas cwtl jl stc test mov or arpl aam jno add in push mov loopne xor sub in dec mov fstl (bad) sbb pushf mov (bad) div sbb cli out sbb int3 rclb shll adcl js sbb aas push jo sub dec adc sub cltd sbb pop test pop sbb aad or loopne fisttpl or sahf leave or inc or movsb sbb flds xchg and je fisubrl fld sahf lods jmp pop testl mov add je xlat sahf adc andl lcall push push sub pop cmp testb jmp shr aas pop jp ja fnsave fucomip lahf cmp cmpsb xchg test inc jne mov (bad) pop lods mov push fisub lret push rcl mov out movsb xorl movsl mov cld repnz inc lahf mov loopne xlat or dec mov or or clc or insb ficom inc scas jns jecxz test cli push xchg inc cmp add shrb in ljmp loopne loope cltd inc cmpsb or (bad) scas pusha cmpsb mov xor arpl lods mov mov and daa aam hlt push inc jp lods and or xlat std std pop jle sbb adc stos clc jg sarb loopne cmp dec loopne cmp dec loopne cmp dec loopne cmp adc into sub mov add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add icebp and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push jp or test mov fdivs fldt cmp jno fldt out cmp mov fisttp add mov add push xorl adc addr16 push pop pop fs insl pushf cmp iret push arpl flds test fimull fcoms cli dec dec cld les cs pop rcr out ss lea jae mov pop and mov ftst jmp roll mov jmp in xor test lods mov cwtl pop nop mov out ja ds jmp mov mov stos push xor push sti xchg (bad) loop or cmp mov push (bad) (bad) lock cmc fsubrp cmp sub pop fdivs cmpsb sub cmp dec mov add jmp sbb loope fmuls bound xlat daa mov add inc cmp adc icebp add sbb jns popf sub into inc int push xorl rolb cmp mov lea and clc aaa mov or pop (bad) test cmpsb push cmp bound dec lahf and cmpsb jge test mov xor jg lods mov nop mov mov dec cmpsb lods push pusha cmc mov pop mov jae outsw dec push popa pusha ljmp orl aaa (bad) mov movsl mov dec js sbb mov add push out ljmp sbb clc les iret ret sub (bad) jo fisubrl adc gs jmp mov mov (bad) push (bad) popa mov inc in (bad) in call adc adc cmc mov loopne inc mov fstpl push mov xor push and cwtl jae jo xchg mov and (bad) (bad) cmpsl and sbb mov push dec (bad) popf xchg mov ss fisubrl cmp lock mov data16 insb leave ret addr16 outsb cltd ss mov or xchg and in jno jp mov mov and mov push sub xchg test insb push (bad) lock sbb mov insb and fs repnz lods dec fmul jmp mov add push scas mov popf adc cmp mov push mov xor mov test rorb push jg mov add and cmp (bad) or jno fistpl stos outsb pop mov (bad) aaa xchg push mov inc cld mov imul cwtl fdivp xor push inc pop movsl shl pop sub bt mov adc xchg enter mov imul pop jle (bad) push jmp leave mov (bad) out jb pop outsb icebp sub insb stos lcall in lret outsl ds jno cmp scas add decl ret mov mov push (bad) in push jle mov fisttpl shr aas lret adc xchg or imul mov jmp int3 dec daa pop call stc (bad) push fidivrl out push loop adc push adc insb cmpsl leave sahf es ljmp lahf xchg xchg mov jge mov jge nop je cmpsl int sub fs negl mov push push mov sbb aas jbe outsb (bad) pop popf xor xlat xchg inc or and popf aaa imul adc iret shr add sub sbb mov add push cmc and fwait (bad) xchg cmp jb push cltd loopne push mov test scas push cli ja mov mov shr adc inc flds (bad) xor pop repz sbb (bad) mov add inc popf push xchg (bad) loopne inc xor stos and cs hlt xor xor outsb mov movb xor mov shll sahf xchg dec jp xorl fstpt jae aad mov inc adc cs jnp aam lods xchg push jl inc cmc jno xchg in cmp dec xchg loop xor push subl stos or out pop clc mov sbb sarb or cmp fs fs es mov cmp addl stos shrb nop add loop stos cld sahf xor add sub js cmpsl fcoms inc pop add dec test loopne les add aas daa dec push mull push loopne jae shrl subb mov loopnew movsb out sbb push lret cli jg or enter addr16 adc push cs (bad) setae fidivrl push lret or dec cmp cmc jl daa dec mov imul and mov sub outsb cltd add dec sbb js or lret sbb mov aam adcl push pop dec lock in ds sbb dec mov jle sahf add dec aam ficomp negb lret jmp inc icebp movsb loope sbb adc or subb or (bad) xor jnp ljmp sahf ret xchg aas addr16 mov movsb adc push (bad) sbb (bad) bound xchg push mov divl xor test (bad) ds mov int3 aad mov adc xchg fwait inc cmp test jg mov nop mov aaa fdiv cmpsl adc mov jno push xchg fidiv sbb aad cwtl lds cld sbb sbb in faddl add lret and shll aad sub orl clc bound nop cli sbb popf and insl and inc sbb xchg mov fistp jb outsl loopne cmp pushf insl sub inc dec and cmp (bad) movsl dec xor cmc (bad) clc test mov and fildll ss (bad) cmpsl xor out lret ss insl js fld or jns mov and or sbb (bad) jmp aad sbb lods xlat ljmp sub xchg pop inc gs repz es mov aas push inc out pop pop imul adc cs dec add fistpl (bad) jae cmc roll lds cmp out (bad) jl (bad) inc mov addl in add mov outsb fildll and (bad) (bad) call lahf dec test xor xchg cmp lcall lea shll mov and push (bad) call fisttp lahf push pop push jnp xchg ss iret cld loop and cmp or mov xchg repz jmp pop xorl inc xchg jb into js mov adc jo and (bad) aam dec dec and test mov cmp test loope test out les sub and jmp push lahf lcall dec nop cmp int ljmp out cld mov sbb pushf lcall jns pop mov sbb ja pop je pop scas jbe cmp cltd dec arpl pop fidivrl ja test stc xchg or jmp (bad) adc adc stos movsl xchg (bad) divb add test sbb push stos pushf mov mov jb add jne pop inc fdivs jecxz add std pusha repz sub sbb sti fwait pushf les daa cli cmp cli ja std sub (bad) jb mov das ljmp mov inc xor into sub iret mov add adc add (bad) push notb sbb fwait jnp jmp pop xchg rcr nop and xchg cs sub repz loope sub mov add lahf mov adc dec addl stos orl pop insb insb cmpsb sub pop add pushf pop adc push jne (bad) shrb or sbb pop js insl insl push popf mov cli mov jl es mov mov scas std scas stos inc loope in je ss push sbb clc mov inc sbb add imul xchg jecxz lret inc xchg int3 pop and sbb push jg gs or pop add xchg aas lods dec sub fldt jno enter xor mov (bad) sub pop test push cmpl sub in cmp imul jl pop sti xchg jbe adc jbe mov add scas (bad) fs mov inc mov sub pusha mov ja xchg pop into xor aas sarb dec out jnp aam xchg adc je sbb or mov adc xor push inc mov cmpsb sahf pop sbb add and stc imul pop and inc lods hlt (bad) cmp lods call js mov push gs mov jb enter inc insl sbb mov xor fiaddl xchg adc ljmp bound lods loop mov loop mov in mov cmc sub lock leave in popa fldcw pusha add xorb mov imul sbb andl xor and out push rolb sub xchg fstps sub imul out or xor xchg adc leave xchg and sub test js or push sub lret and add int3 incb add fcompl std in ret test ljmp mov aas add push popf rclb adc call add mov outsb imul loop scas into ficompl fstpl mov lret mov mov aaa xor and shrl fdiv cmpsb mov inc aaa stos jns pushf adc scas dec xchg xor and and or sqrtps mov pop test jae loopne outsb sub icebp mov sub sub push in int3 pop add jecxz test add test out pop out (bad) in movsb mov push in push mov jno enter jne sbb out or mov pop loopne cmc addr16 mov sbb out mov push in sti mov std scas outsl inc mov punpckhdq push cmpl jecxz cs pushf add sub sub jno mov std jecxz cmp adcl dec out cs xchg lahf xor ret xchg push clc mov cmpsb nop int lock mov jno cmp clc fimul or or xchg push adc lret dec or jae inc xchg andb out dec jb incb fwait icebp in ficomp xchg hlt inc int3 and aas movsb lcall and fmuls pop and mov add mov shl lea xor nop loop xlat mov push add lds in mov insl cmp pop push stos push cmpsb cmp outsb out dec shlb (bad) sbb xchg mov sbb (bad) dec and dec test pusha or fimul adc adc jmp jp adc mov jle cli icebp push pop lret das (bad) out add insb into lret inc or push mov jno test xor cld xlat jmp out add setle (bad) jb sbb (bad) and js cmp sbb out lods loop dec in xchg jg mov (bad) call push pop jo sbb rcll cs lock je ds sub cmp xlat fstpl and fdivrl push or jnp jle add pop (bad) push (bad) repnz jnp insl add mov mov outsb mov mov stos addr16 shlb jno cld cltd (bad) (bad) lock cwtl stos xchg push loope xor inc out addl mov push int3 sub mov push int in xor scas mov lods jae shl xchg out rcl loope xchg jecxz fldl mov xchg mov and sub addr16 mov leave lock jnp sahf ret loop mov sub mov dec mov enter cmp scas pusha outsl xchg call fmull push cmp mov (bad) jle dec and xchg jg testl out ds repnz push mov push cmp inc mov nop or jle fwait mov in push mov fnstcw dec fsubs testb xor jp pop and ret (bad) cld out jle inc mov test frstor cmc and mov js stc mov ret (bad) jb xor int pop inc lret mov push ss and cmpl ret xchg in aam adcl sub jle fsubrp inc or dec repz lods pop mov sbb ficom xorl jle cld lret sbb dec push mov push cmp (bad) jmp cmpl xchg dec pop push rcrl push push jge nop push ds rol dec bound pop and sub mov mov cmp iret xchg ss imul mov mov push and pop or mov daa mov pop mov cmp scas (bad) adc mov sbb out test cmpsb sub cmp faddl sbb xchg mov je mov rolb cmp (bad) fcmovnbe cmpsl mov ret ljmp sti (bad) jbe (bad) pop test cmp inc repnz push (bad) xor mov jne sub xor lret dec fsubs cmp xor sbb fucom jb (bad) (bad) dec mov dec cs test cmp cltd xor xchg mov pop cmp pop cli and dec (bad) hlt pop push cli rorb mov add pop (bad) add xor jae unpckhps loope fidivrl pop ret inc pop aad and xchg mov cld movsb in icebp jmp into inc sub mov inc je xchg mov jns iret out inc add test test in lods scas loop orl inc ret inc out icebp jbe sbb inc adc mov btc xor xor dec into aad mov or hlt jno scas sbb test mov and arpl subl or mov and fcomp push test ret dec insb outsl popf arpl stos mov inc xor scas das insb int3 sbb addl fmuls cld jb outsb subl push cld inc adc mov and jge cltd sub iret and mov pop imulb jae mov movsl ss push xor (bad) pop lods notb fdivl sbb aaa xchg scas cmpsl xchg mov mov add sbb dec enter inc ja inc aaa xchg jb imul (bad) sub push pop push sbb xchg adc dec or push push test ds cmp out aad (bad) andl jl ljmp lret push mov fs lds int3 or leave sub insl lret movsb pop jne xchg push adc into idivb std adc xor repz and mov xchg pop xor inc rcrl loope icebp test nop decl mov push cmp in sbb pop fidivl outsl add xor sub add movsl sub jp outsl call add pop lock pop xor loopne jns sahf dec scas arpl and adcl movsl sub daa push push and out icebp mov fwait xchg (bad) push sub mov pusha in out mov dec daa addr16 mov sbb mov xchg lret xor adc aam cmp mov into jmp cmpsb pop or mov insl out (bad) mov and xorl mov and test and lods clc push add jbe pop (bad) pop jno js inc mov loope inc cmp cmp divb test dec js outsb mov idivl mov jbe lods add (bad) xor jb xor push cmc xor mov inc sbb sbb sti lret mov cmp cs outsb add mov (bad) iret or inc mov aad divb test inc push out out mov push popa jo cld in aas lret pop push jg dec fldenv sub ret sub icebp movsl je and clc iret dec cld inc dec xor jo popa jns scas and mov xor pop inc mov and sbb sahf ret dec sub aas lods mov jg and jle sub xor lods lods and in repz or stos dec cmpsl divl es mov (bad) in add push push icebp scas pushf cs mov dec loopne mov push out lcall push lock lea rclb std pusha imul ret (bad) (bad) mov out push push push insl mov push sub adc cmp pop je lods inc sub push xchg jp mov test add mul lds stos xchg jp fwait push cmc and mov inc fwait je adc inc jnp jp and sub lea mov addr16 push jne mov mov push mov imul mov lds fsubp mov push push add mov xchg es rcll jbe (bad) and sbb xchg out mov aam push sti pop pop cmp or sub ja adc jl xchg sahf idivl fidivrl push cmpsb movsb mov push out subl sti mov push imul pop dec xorl (bad) dec scas pop xchg out adc imul lahf push push xorb xor addr16 (bad) ja lock aad or je jmp iret push adc cli scas sbb lods lret mov mov jle pusha jb lcall push (bad) les stos out in xchg push xor pop mov scas push sub imul lea mov hlt sub push daa int3 mov dec (bad) in nop push (bad) loopne inc jecxz jne js jle cltd lds fmuls push mov bound ret (bad) xchg mov mov pop xchg je mov js call jmp and icebp pop decl sub popf into lock clc repz and das in dec (bad) lock into cltd adc popf les mov sbb xchg pop xor xor xor jg push adc ret je pop jmp sub js in mov dec mov dec inc int punpckhbw lahf ljmp push dec clc jae cmp and mov daa mov jae shrb mov jle fstps arpl adc add mov test cmpsl mov mov xchg inc push imul jbe scas xlat push bound insb add inc add push jle mov shrl push dec jle fistp sub xor mov pop or or aas js imul js frstor cmp cmpsl inc mov xor pusha cli (bad) loope or mov rol mov out pop xchg dec mov out and insb lock mov pop cwtl jmp movsb sub adc lods or sbb pop mov sbb push arpl fnstsw jg in xor in xor enter movsb xchg ds jne pop xchg jmp std repnz (bad) jb loop cmc cld pop add inc mov dec xor cmc sub pusha std enter dec pushl (bad) ja add loopne loope add pop cmp dec push or dec sti lods or dec or inc pop shl mov cwtl adc adc and (bad) xchg sbb notb aaa cmpsl lahf (bad) xlat cmp and js jo mov outsb cmp cmp xor cmp cmpsb sbb ret cmp xor xor jae and addr16 fxch popa xor (bad) cmp mov sti push xchg fidivl iret xchg je push jmp lock mov arpl push and iret sbb sub shll sub call fldt lods mov and out mov icebp sbb rcrb repnz cli daa dec outsl lcall outsl jle sarb arpl pop jno sub shr repnz outsl cmp (bad) fs adc outsb je leave data16 int3 mov ljmp lea xor push mov fs iret mov in xchg adc sub add into test repz dec test pop gs push faddl gs or out and rcll fnstsw mov and sbb clc rcrl xlat iret or iret or sbb movsb out shrb push jnp and xchg fild mov xchg dec in inc cli out mov mov or jp cmp push cld hlt mov push adc arpl or (bad) aaa (bad) mov outsb int xor in or rcl xchg mov sub push lahf (bad) ror loope jl stc in pusha push mov (bad) mov or pop jnp cmp fcmovne mov xor jne inc push sbb push or jmp pop shlb mov mov or mov bound call cmpsl xlat out fidiv fisub lea inc call adc ss xor sub stc dec push inc rorb jno (bad) daa xchg push inc aaa jne fildl lahf cli sbb mov lcall aam pop jns sub sahf (bad) mov sub push xchg jb mov popa adc insl mov data16 mov xlat mov jne pop jmp lds jb sbb stc mov cmpsb mov in lret cmp inc hlt cli popa in fs mov add inc pop out pop sub sub jnp mov popf mov lcall popa jge fwait sahf mov nop cmp dec push insl ljmp in sbb or (bad) and cltd rorb jo or push pop xor mov cs arpl pop mov sub adc or sti rcll add mov jne xchg sub cs xchg dec mov int3 mov sub mov cmpsl pop dec sub xor xor ret test and pop add cmpsb jp or xor xchg push adc jp sar mov outsl imul gs sub jmp sbb loop addr16 dec sbb dec in cmp jnp enter add test mov push jle ljmp pop push inc and jge adc jecxz aaa div rorl cmp inc loope mov fimull push cmc shl lods and cmpsb movsl xchg div sub push rol dec cmp int (bad) cmc imul shlb cmpsb cli mov pop xor jmp jae sbb xchg xchg popf push notl xchg mov into sbb jecxz mov push dec adc pop jns dec test ja das rcrl xor add or aas add pop imul xchg pop adcb jp mov imul mov fisttp adc jg ss pop pop (bad) xor sub pop outsb lea dec pcmpeqd mov in aad xchg ret xor sub das mov push cli add push into mov push outsb icebp mov inc data16 ja int3 sbb sub pop in outsb fist mov push cmp dec mov sbb sbb sbb adc and daa lods (bad) dec add pop or pop mulb aam sti stos mov loop call mulb xchg lret inc xchg mov jns arpl dec xchg les sbb fs or jle cs adc in cmp push mulps (bad) lahf das sub sti aaa or mov fs scas cltd dec movsb rcr scas jge pop fdivr in lds in or mov xchg mov in repnz pop jmp (bad) jo mulb inc in ror insl clc cld inc mov or sub gs jmp and and loopne (bad) rolb mov mov lock and mov or arpl mov repz jl and xor clc fldenv and mov sub xor xchg sub cmp jo add push xor (bad) popf lea push data16 in inc sub lcall xchg lock daa inc dec add int3 add ficoml pop leave lret lea out insb repnz je aam lods test shlb push in inc sub ret sbb mov in int3 xchg daa test and lea test adc repnz push pop jo add xchg xchg movsl xor iret push adc xchg adc and mov mov insl cmc and pop mov dec sti jge add xlat aaa mov add and pop fistpll int3 shll adc fldenv subl jb sahf bound cmp mov stc div inc fstl mov test add jno adc mov push jecxz (bad) inc xor add pop and xchg arpl (bad) mov xor fs insb mov mov test dec sub mov pop push mov inc sbb aas sbb pushf pop mov shrl dec ret ja ds sub and add mov pop repnz in jae inc adc (bad) sub rcll mov loopne inc sub imul sahf (bad) lahf push cmp sbb or sti cld mov popf push hlt dec push mov imul push add jne bound pop int3 push adc or (bad) imul mov daa inc test addr16 mov das lahf roll enter (bad) (bad) out sub push loopne std daa lock sarb or daa lock sarb or daa lock sarb or daa lock sar cmp data16 xor add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mulb add add or or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push inc sbb push daa (bad) sub insb scas gs xchg insl popf insb mov mov mov ds fcomip adc dec scas daa pop add adc add cld add xor pop mov insb jb sbb aam adc cmpsl lea cli in mov rclb mov fnop mov mov adc cmp and or fisubr (bad) or mov or xor xor cmp jno push jo and sub imul out pop sbb aaa dec popf xor xchg fbld lock mov repnz cmpsb jmp mov imul cmp inc sbb movsl out sbb mov xor mov scas (bad) lcall or pop push into or test popa pop (bad) inc fiadd cmp or sbb cmp (bad) mov xchg ja popa ficompl sub sbb movsl mov cmpsb push ljmp daa push (bad) stos fwait and and push aas sub lock jne sbbl test jb jbe shr ljmpw mov xor loopne aad fcom mov push jne xor sar gs push imulb lock imul fwait pop movsb push dec lods out sub ljmp mov dec (bad) movsl or movb and dec popf lcall arpl jmp clc and (bad) lret or dec adc mov jmp stos es data16 stc jecxz sub test arpl outsl adc int in loope cmc mov sub mov pop stos push shr or imul dec cmp push or sub int shrb and clc (bad) push fptan arpl test fs sub sub mov xor add xchg test xchg push jbe mov (bad) mov pop or jbe mov push add sbb mov and sub or push (bad) hlt mov scas fdivrl mov mov scas mov aaa fs aas int3 or pop and push arpl inc jge add mov gs imul push dec fdivrs dec jnp mov sbb xlat push sbb int3 dec inc pop xchg mov pop test ja cld (bad) mov jmp push repz push aad mov mov sbb adc or or jmp test sub or or fsubs cmp outsb call in inc cmp aas push cmp subb (bad) ret and or and aas adc or sbb inc push mov fld mov pop or cmpsb fstps mov decl js cltd sub push mov cmc adc faddl xor jge cmp jp dec and scas mov repnz adc int3 je sub in in sbb int adc std sub mov imul fnstcw outsb loop inc inc xor repnz fincstp jns dec inc and ret aas mov pop pop adc pop not mov or iret pusha leave stc pop repz lahf ja es addr16 jbe les add ret in xchg push push jb imul ds pop jno aaa inc xchg pop aas popf mov mov ret mov shlb push pop stc hlt push mov pop or mov inc scas lea mov scas into dec jbe xor push ja ja (bad) dec add sub scas fcmovb scas mov xlat add test ds ret int cmp adc (bad) loop out test and pop (bad) adc aas jmp enter or pop (bad) and dec jge lahf and sbb push addl and lahf sub pop ds shrb jmp test int mov (bad) jne scas mov or jns jnp mov jbe adc cli lods iret jae add ss push (bad) jmp mov cltd xor push jg enter or inc enter cmpsl jmp pop adc test dec xlat enter push nop or xlat xchg ds mov movl xor jl loop loopne inc fiaddl mov mov into xlat jp dec addr16 jae push mov fwait in pop stos sub out fildl mov adc stc ret rorb in sti cmp jno or push movsl mov adc testl (bad) ss rorb jle fnstcw xchg das dec lret pop movsl pop cltd pusha xchg lahf and les or es (bad) cltd movsl jp sbb mov or push lret outsl and aas outsb cmp out push cmpsl mov or sub dec mov movsl outsl out inc dec ja inc (bad) inc add addb push and push fwait aaa mov cltd int cmp cmp xchg pop xor mov jno cli mov ljmp jns ds (bad) lds fiaddl bound bnd mov pop stos popa icebp loop in ljmp xor cmc push call rcll fbstp mov lods and push ffreep ret or lods stos mov pop inc enter test or loopne ja jp fmull or addl (bad) jmp mov adcl or sub hlt arpl sbb xchg adc insb xor rorl icebp mov and nop pop shrb (bad) mov ljmp inc mov or call icebp in out dec lds dec lret cltd jmp ds jmp scas dec test jge icebp and xor in rcrl frstor mov (bad) jae mov popa bnd inc ja or adc push loope pushf out popa add push out sub jge and inc pusha sub push fsubl jb movsb add mov mov mov cli and pop adc inc or push and fs mov ret dec adc push push cmc sbb adc ljmp xchg pop jmp cltd sub mov rorl jp stos pop xchg cmp push pop loope sahf push outsb pop addl imul add mov std inc aaa push enter inc pop outsl or xor das es (bad) fdivr cmpl scas test dec sarb or jmp add pop and xlat (bad) in pop inc cld xchg jp dec mov ja cmpsl int fistpll out pop movsb jo push adc push int pop push subl pop sub inc jb push mov lods mov fistl inc notl or mov outsb test decb push push fiadd (bad) out shll mov push lea push jo lret or pop bnd mov cmp dec mov mov lods mov jmp or mov dec lds and push add jp sbb das into pushf mov cmp cltd sub or stos xchg lods mov mov jno pop or out dec test ljmp in (bad) lea stos sbb mov mov pop jle lods dec jmp mov jmp fs ficomp xor xor scas or loop das negl das add jb test psrlq test outsb (bad) imul ljmp and adc sub add cmp inc adc sub sub xor scas pop cmp inc jns jg leave insb sbb andl scas sub push enter test or jbe mov in stos mov sbb pop add gs jge mov aam sbb push hlt leave hlt lcall xor pop (bad) pusha xchg test adc xchg data16 mov pop xchg scas mov test (bad) jmp mov push cld push cs sahf pushf mov adc cli mov xchg inc (bad) enter xor mov pusha pop sbb sbb lods fild incl icebp sarl es arpl add mov fucom lret sub pushf adc or test adc cld in aas outsl paddq mov inc je cli dec (bad) push dec xor decb or fs outsb stos adc xor adc pop andl or or loope mov mov push jo lret daa cwtl out add xor aaa in pop push inc jo fs (bad) jo xchg idiv shrb out add add leave jge xchg or jmp mov mov push jbe lea jns mov mov lock gs test lds sbbb sub pop fldcw scas xchg add xchg lahf jns push push das push or and pop popf push sub sti inc lret sbb jbe cmp xor xor sub adc loopne push mov xchg inc xchg inc out pop pop lods std cmp cwtl orl idiv stc add push xor scas pushf loopne push shrb xchg gs insl dec in stos xchg xchg jno,pt inc sbb in mov ret inc fs bound dec mov cli or xchg mov xchg lea repz push adc les mov cmp adc jae int3 add jb insl pop pop pusha add into sarb lock jle mov fcmovnu data16 mov jbe sbb xchg js xor clc push dec dec xor mov cltd cld xor mov imul mov rclb push mov cmp inc xchg adc cmp mov sbb mov (bad) divb int3 (bad) cmpb sbb out or sub mov inc loopne add sbbl stc add (bad) cli dec mov popa sbb fistpl lahf mov jne ja or cmp dec dec and xchg std push in sub adc pop cmp (bad) xor cmpsl mov dec mov mov xchg pop (bad) sbb sub aad (bad) (bad) repz ficompl or mov jne and xor pop call shrl push (bad) xor int3 or gs add (bad) outsb sub mov dec stc mov rorl add jae and inc inc and jns insl fidiv rcr lods push pop decb in movsb sbb arpl hlt inc out arpl les popa outsb mov enter mov je xchg jg inc xor (bad) es divl aas loope jmp test push lods jns lock inc fmuls cmp jne pushf (bad) sub out loop cltd pusha inc f2xm1 shr jmp add lahf nop out inc or aaa push jmp mov adc movd aam (bad) mov shrl cmpsl pop gs add out mov daa test outsb shrl sub outsb fsubl js inc (bad) lods xchg stc xor push jg movsl dec bound or or mov ficom aad int push xor fcomip jb jle jp stos xorl mov lods or jns sub pop and mov shr jge enter out scas inc cmp sahf and stos stc repz std (bad) mov and bnd rolb std cmp sub (bad) push xchg mov inc movsl lret les xor cld inc les sti mov or inc xor mov cltd out test xor fnstenv jns mov jnp xchg (bad) push fcomps push or jns or cwtl shlb (bad) sbb ja pusha sbb fisubl xor sahf rcrl mov push mov out mov or push lret dec test cmc leave xor addl stos movsl jbe sub sti pushf insb sub loopne mov iret (bad) inc outsb addr16 popf ret push insl call (bad) jno xchg (bad) pop movlps call outsb sbb lret or xor sbb add push cs loopne (bad) ja ret sbb popa push push cmpsl pop loope insb mov inc sub nop incl and jns cmpsl fldcw pop push inc mov xor xchg cmpsb dec fimull fldt mov sbb add jns scas mov mov inc (bad) int adc subl (bad) es sbb inc lret sbb mov sub (bad) jg idivb sub mov outsl cmpsl (bad) stc cli out jge sub pop mov loope jp sub xor add cmp pop fdivrl cmp pusha adc add add xor roll inc mov add xchg jne push neg xor cld sbb push bound lock (bad) lds nop mov in sbb lea mov pop or in jne cli dec pop mov lods push sar std ret dec cmc loope xchg lcall imul or or or cmpl add out fmul mov lcall sbb scas mov jmp scas dec push and inc jne pop sub add scas push ffreep bound inc mov dec lahf iret xlat insb lods cmpl std stos fcoms enter cmc inc in sub jae inc out pop inc imul test ja lods nop push jle lds xchg pop mov lahf ret leave cmp xor push lcall mov shll xor pop mov sti dec xor scas mov sbb pop or imul call aam mov jo rolb sbb fdivr sti or adc add add dec int mov sbb xor ret (bad) faddp out jecxz add mov loope out aam push xor mov inc push (bad) inc mov adcb ss xchg cmp jmp movsb inc lahf aaa loop pop fcoml sbb pop cmp icebp jecxz jg aaa hlt xor push xor loope (bad) and orl pushf jno jno lods cmpsb mull mov mov movsl daa jb ret loop cmp cmpsb arpl addr16 (bad) out xchg mov in int dec mov and (bad) ds stc cmpsl ret adc cld (bad) push xor icebp adc lret out push test jb pop dec nop xchg sub add push insl lods mov sbb (bad) cmc inc or (bad) imul and icebp pop xor js sarb push cmp inc ja incl dec outsl arpl push in lret add pop mov inc pushf cmpsb mov lods fbld scas shrl sub adc cmpsl gs pop jns adc pusha jbe enter hlt (bad) mov mov ret mov mov (bad) clc or pop (bad) cltd cmc test mov les jp adc test mov sbb mov lret jo mov push mov xor sub mov dec xor rclb outsb int3 mov aaa fldcw rorb int fdivp fstl aam test and icebp mov adc sti fdiv rcll hlt inc mov dec fwait aad sbb mov cmpsb and cmp push (bad) jl mov sub repnz (bad) (bad) and leave ffree add jp sbb push add loope add lods jns test leave (bad) stos cs and ret inc rorl leave xor (bad) (bad) sar cmp out in mov sbb adc iret out xchg and pop negb mov add sub in sahf cwtl mov add arpl mulb pushw cmp push mov or lcall rcrl mov enter xlat cmc and jle notl pop push adc mov js aam and pop das jp mov stc cltd sbb stos jl repnz ret pop in add push push jecxz xorb inc xchg dec xor and push mov cmp cmp jne jo mov shrd andl ss inc xor lahf sub dec cli gs jae and adc lcall aaa sbb sub mov imul divl outsb in subl push or lea pusha jns gs sbb mov xchg inc jp adc sbb inc stos shr daa nop jl mulb adc lret push mov iret movsl mov movsb sbb andl hlt cld data16 (bad) pop and fldl2t xor push jmp mov repz mov dec lods int3 stos xor pop dec sbb push xor clc rcr sbb lock ret inc mov xor dec loop hlt inc pop cmp pop push sarb cmp pop loop and mov sti mov icebp xchg inc dec mov inc enter das inc repnz cmpsl mov clc cmp lods or dec mov mov dec (bad) pushf mov fildl (bad) ja (bad) nop pop in inc fs mov add aaa (bad) dec repz inc push dec push sti dec mov mov cltd int3 xchg inc xor lock and jp repnz mov inc pop jbe xchg fxtract dec jle push push or add pop xchg sbb lahf cli popf (bad) pop jg dec (bad) push out cli mov sarb pop xchg adc push mov inc push adc imul (bad) lret cmp fisttpl scas push aam push push imul fwait divb sub sbb xor push jno jne sub xor cmpsb (bad) fstpl fst leave lea sbb xchg and sbb scas js lods push jo cmp xor inc pushf push cmpsb imul arpl mov add push dec clc pop fisubl and push fstp fbstp mov je push (bad) xchg sub lret lock (bad) mov cld sub mov aas sub xor add les pop dec rolb enter scas dec in fidivr pop push rol push add fldcw dec lret jp and push push lahf ret lcall sti data16 mov mov sarb data16 repnz int inc push fmuls jne adc cltd pop in loopne xchg adc xchg nop xchg adc inc (bad) fwait inc sti inc into jne push fisubl out dec cmpsb popf aam xchg popf mov ret stos mov push sahf mov flds call ret cwtl xor jmp ret in push cltd mov sti cmp fnstcw xchg mov ljmp in jbe mov rolb jnp mov mov outsl loopne mov cmp dec cld out enter dec cs in lret (bad) loopne pop mov cmp jge jnp arpl (bad) loopne sub in js push fwait loope (bad) int (bad) out cmpsb mov (bad) insb iret bound sub and mov cltd xor mov stos pusha push add daa popf fisttpl fdivrl sbbl cltd jbe callw push push add lods add sub jmp cld cld out push xor xchg popf in ficompl out xchg and inc dec cs or inc mov movsb orl clc sbb sub daa mov jae mov adc xchg cmp mov addr16 mov mov cmc mov add cmp or scas mov rclb mov rclb jno aas mov leave mov jl xchg pop in sbb add repnz jo adc push cmp sbb pop lock push int xor hlt loopne pop jo push push push sub cmp fcomps adc jl and ret sub adc sub inc or xchg sbb mov (bad) mov ds or lods cmp jnp fimul xchg das je les jg xor sbb call mov xchg mov mov and add stos mov xchg lock (bad) scas cmp xchg les inc jp das iret and enter xor ret mov js ds popa push cmp (bad) fnstcw or pop loope inc add lcall inc and mov out sub outsl sbb fstp imul mov jbe inc fldl jecxz lods addr16 jle pop lock xchg bound movsl lcall cltd lods pop and sub pusha mov or pop pop in stos mov push or arpl mov xor nop scas (bad) enter imul out dec (bad) mov dec dec lods and mov pop adc mov xor outsb lods cli dec jo jp jp push lcall (bad) imul aaa pop mov xor insl jp pusha cwtl insl sbb inc sbbl xor cmc out in add (bad) pop mov sub push mov movsb (bad) adc movsl ja scas inc (bad) hlt cwtl and cwtl mov cmpsb pop cmp mov outsb cmp xor nop jae push pop lods lret dec loope test pop aam repnz sbb je adc roll lahf in outsl int3 movsb and push cmp fnstenv ficomp (bad) pop or jl and les mov mov or imul xlat lods and es (bad) in sahf or repz mov inc outsl adc adcb das dec and hlt mov pop mov sahf lea (bad) stos popf sub sbb lods dec push bound sbb movsl dec and outsb ljmp test push jno xchg cld push sub (bad) jmp add push inc push mov out lret sahf mov clc add add and xor mov mov dec adc pusha popf or push pop mov mov adc imul rcrb loop pop aam (bad) jp mov fistp out or dec rclb mov push popf mov fucom aaa push (bad) fisubr jecxz xchg les pop mov pop adc push jg adc pop jo call mov rcl pop adc cmp push in lret in inc imulb das push adc xchg jle xchg xchg xlat mov out enter and mov pushl (bad) movsl ret cld or jmp push inc dec cmp repnz jp jle scas and cmp mov nop pop mov in jle adc jo sub sub mov dec mov sbb xchg pop adc fwait inc xchg fcoml sub pop scas lea inc loope sbb mov cmp loope inc sarl push mov lahf jmp stos adc loopne xchg mov and iret adc mov mov (bad) popf pop (bad) movsl sar or mov pxor movsb popf out add and and js jge mov xchg rcrb out xchg sbb add out pop sub hlt push std fwait ret lock xor mov mov adc repz mov dec popf int lock ljmp pop cs mov outsl incl fdivrs push addr16 stc add push fs inc (bad) cmpsl stc xlat cwtl andl aam push mov fld int3 je test (bad) push push iret mov mov xor flds dec out dec ss sub adc xchg ficom loope mov fbstp sub mov lods imul xchg pushf mov xor icebp cmp das push idivb add and pop insl cld mov inc adc pushf sub mov adc and adc push mov add test sbb lahf lcall (bad) imul cli jge pop stc mov or jne sub int3 sbb aad sub sti (bad) xor popf pop cli push pop add push aad cs lcall push aaa cmc mov repnz or inc outsb in mov sbb rolb rorl idiv cwtl nop push sbb in scas shrb mov sub sub icebp scas test inc out int mov insb sti dec (bad) sub dec sub cmc dec xchg xchg add bound jge cli cmp rclb cmc pop push mov sarb cwtl dec hlt cli xor add bound js xor popf test jmp loop sub stos (bad) call sub sbb jnp lret adc add jo pop xor xor jl dec or dec ds (bad) add and push js fnstenv mov ja (bad) aas pop jp mov addr16 jnp jp mov pop jns xor movb call ds xchg push xor push hlt dec fidivl ja sbb sarb sub adc in test fistl insb xchg not fnstcw in roll mov pusha jnp loop nop sti push leave and mov movsb out xorl push jp cmp xchg cld dec aad fisttpl push cmpl xor cld std insl pusha dec orl adc clc push scas sbb clc call push movsl jg xchg mov clc btr insl hlt leave ficoml inc cmp jnp jg sarb loopne cmp dec loopne cmp dec loopne cmp dec loopne cmp rolb mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add stc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop adc mov loopne add jb out mov inc inc sbb mov mov sti mov pop lods sti pop (bad) push add das add rolb mov xchg adc sub adc sbb dec dec out mov inc sbb mov push lret inc sbbl xlat daa inc (bad) mov pusha scas cmpsb daa (bad) bound loopne mov jmp cmp fwait aas outsl scas jns add jge mov sti bound pop and and push push cwtl or cmp lock push pop call out fwait das scas pop mov outsl mull and and mov jne adc cli push outsl xchg pop pushf jge jl mov les ss insl ljmp adc dec inc sbb and jmp dec test aad (bad) rclb fcoms push xor mull xor adc xchg jecxz push inc aad sub cli jle (bad) cmp jnp outsb or mov dec enter push sbb aad lret popf inc call mov ficom (bad) push push dec icebp ljmp outsb lods xchg outsl scas jno enter test js sahf (bad) loopne (bad) cmp fdivrp xchg rorl inc dec lcall jno or or inc dec aaa mov or mov mov jnp mov insl xchg gs push pop push cmpsb sub inc mov adc push inc sbb loopne sbb loop ljmp int pop inc iret mov and jge push jbe mov cmove sbb je sbb mov lcall jne fmuls push xchg outsb dec insb aaa sahf push push jns fmull mov push insb iret ret xchg or inc sbb lods (bad) mov movsb lds in inc xor pop mov pop lret outsb in jle test inc cmc inc mov mov or (bad) cmc adc dec push mov or mov (bad) add cmpl sti std xchg push push dec mov test (bad) andb push incl int3 rorb movsb xchg daa xor dec sahf test mov mov inc xchg jmp sbb lds or sub (bad) pop adc repz sub sbb and outsb xor push cmc int3 rcrb (bad) clc int xchg push icebp (bad) sub mov adc or mov jge mov dec out nop lods add sub unpckhps inc dec dec dec cmp xchg push cmp cmp jle xlat loop mov enter lock cmp xchg out popa (bad) repz cwtl outsl push out mov inc push xchg mov loopne,pt in cmp pop cmp dec mov mov test pop inc mov adc sbb loopne,pn jmp mov iret adcb jg adc mov push xchg test outsb (bad) in std rorb xchg faddl xor xchg aaa adc jp and push xor mov loope sub stos inc push jmp push push (bad) bound stos out in inc (bad) fnstenv or (bad) fnop xchg cmpsl pusha leave addr16 pop xchg cmp je in call push mov es mov leave mov xchg jle jo out xor loope cmp inc dec popa adc pop cmp push outsb pop xchg in xchg add dec xchg sbb lods aam jno orb outsl sub stos or inc mov mov dec cmpsl cmp xor xchg push fistp in cmpl mov add popa test adc sbb test push mov mov sahf add mov mov movsl xchg jp dec pushf insl add and in push les push out rorb cmp jnp pop mov pop ljmp or sahf mov gs xchg fnstcw aad cmp aad add push pop scas inc (bad) mov sub cmc outsl mov sbb and dec jg,pn stos ds or pop insb fidivr fldt push iret hlt cmpsl dec push mov fiadd jmp sbb movsb xor insb fcompl cmp push lret int mov (bad) sahf shr lock sahf cltd ret mov roll gs mov xchg cmp jecxz and dec dec (bad) xor scas repnz addr16 pop movsb popl mov idivl sarb adc repz inc mov ret xchg movlps or sahf scas fidivrl xchg xchg aas mov dec mov imul mov insl dec add arpl add insb lods cs or in jge aad je xor ficom mov or loopne xchg sub incl cli fsubl sub cmc or mulb adc inc inc jecxz mov push jbe in push iret stos notb (bad) out inc push cmp cltd mov addr16 mov sarb mov repnz dec jbe jle pushf xchg in or mov push xchg inc cmp sub icebp push hlt mov enter imul mov lock push cmc cli cmp inc (bad) mov sti insb sub daa stos aaa push mov dec push adc cwtl popa pushf std (bad) jbe add popf push xor inc arpl dec mov ss ljmp mov ret push repz aad adc je daa (bad) lods pop fidivr arpl jle ret adc lcall push push js cwtl aas add jns inc adc pop mov mov insl jne add enter fscale pop mov mov push sti outsl and xchg js leave ljmp iret roll cmp mov fs push clc test cmc and cmp das or inc add movsb mov je mov push std popf (bad) xor aas sub push inc and (bad) sbb out mov test push js mov rcrl mov inc mov mov stos aam xchg repnz inc dec or fdivs imul shrb mov sahf mov mov jnp push cmpsl sub push jge popf xchg mov lds xor repz sub pop inc add mov sub xor stos (bad) mov lret stc or lcall push jae push adc cmpsb insl aaa jno loopne cmp aas clc cmp jecxz int3 jecxz xor push mov fwait xor sub addr16 adc jmp or mov push int3 push fistpll mov sub (bad) jae leave lret xchg mov addr16 mov aas add lahf xor inc mov insl ja adc push push dec decl into xor jo push jb inc sbb add dec pop pop mov (bad) loop sbb aad adc xchg js xchg mov mov mov (bad) sahf mov mov insb xor lock int lcall mov movsl aaa cltd ret imul (bad) stos jmp cmp jbe fsubrs out mov add lock sahf ljmp or and psubusw jae sbb jecxz adc xor push mov xchg test sbb adc mov test bound hlt mov sbb std scas (bad) arpl pushf cmp lret xchg aaa lret stos or adc mov sub insl sbb jecxz ret adc aas xchg inc sub fsts stos out fcomps push ret and push adc xchg and lock xor int or in jne or shrl dec push cmp mov idivl add xchg jp dec cwtl push jns shr gs jno outsl dec lret cmpsl out loopne dec pop js xor jnp mov cli imul into in or test rcrb xlat sbb clc jge xchg sbb and push iret push bound stos pop pop xchg xor lea (bad) scas and mov aaa (bad) cmp out rorb cmpsl dec jb and leave lahf or sti repnz hlt (bad) outsl add sub pop aad stos lret or adc mov push adc mov add and xchg es into push jmp pause test dec sahf mov bound insb test lcall out cmp xchg fdivrs lods inc in xor test jge ret pushf sbb push in ss mov mov mov scas cltd xchg orb out and outsb cmp test or push sbb test es jecxz inc test pushf in mov js movsb sub cmp mov cwtl ljmp aam add daa test sub jecxz sbb out scas (bad) dec lcall mov sub cmp loopne sub push leave pop stc leave xor fistp enter nop (bad) push mov or stos or xor mov bound xchg popa or lds js add xor mov (bad) mov or insb mov lcall (bad) (bad) imull mov pop sub sub cmp dec dec test cmp (bad) dec mov stos addr16 adc outsb (bad) jecxz push insb popa lods negl xchg dec lods lcall jns xlat sarl incl ds jbe in and jne sub out cmp (bad) jbe mov mov out or jne js sub xchg psubq xchg imul jge mov push mov ret imul test sbb dec xor insb (bad) cmpsb mov dec fldl2e fisttp shrl jne jns aad js sub repnz fs mov fild fsubs dec xor xor adc dec push rorl adc pop sbb out xor or dec mov aam fdivrl or in ret sub cmp cmp dec mov repnz dec fnop leave test ficoml jne ljmp in (bad) in adc (bad) dec or push dec mov mov jecxz popf inc daa xlat push jbe insl add cmp ret adc mov jg mov scas mov dec fcoml cs mov xchg xor int3 loopne push pop frstor mov clc xor ffree mov sbb test mov lock js nop cld push push cmp jo cwtl loop lds and out mov loope (bad) xor push dec addr16 repnz xchg subb aam push (bad) rep (bad) pop call fwait test (bad) adc es insl aaa cltd inc das jmp push sub iret adc sbb jb sar (bad) (bad) mov dec push xor std pop mov sbb or mov cli aam push in pop jg lds (bad) or mov clc cmp adc enter adc int outsl add icebp imul dec mov jge daa push sbb mov mov mov and jb jne mov fcmovbe in cli outsl xchg loope and fs pop mov scas mov scas outsb inc cmp cmc dec dec push adc sbb fwait jp gs pop jge je inc inc data16 xchg push (bad) test sbb data16 pop pop xchg inc adc push lahf stc jne fwait sbb mov cmpsb mov mov stc in js or outsl jne xor sbb rolb rcr test iret jnp mov and mov fadds mov jecxz mov jecxz jmp aaa adc mov ficom rorl mov add int3 je loope push fcompl daa or sbb mov rorl mov lock push pusha mov inc mov mov jbe and std insb into outsl xor push lods push ficompl push mov gs popf xor mov xlat push in fdivs test and push (bad) in fldenv in ss shlb movsbl mov and test inc sahf pop mov out cmp (bad) jmp or divb inc jl lods js fdivrl lcall ret insl cbtw or loope (bad) cmp or lds shl lret lcall call inc aas xor jae insl dec xchg inc xchg adc cmp or xor sub or fdivs std loop sub push or cmp aad imul cli leave jmp xchg cwtl inc (bad) push inc mov repz jl cli push adc out das adcl movsb bound roll test adc inc and and and adc dec dec add (bad) pop testb sub mov and jle xchg xor cmp xchg (bad) jecxz sahf pop fstpl push lahf add mov rolb cmc pop push jle (bad) fist push daa ret out push stos lea sar pop shr lea adc inc jecxz (bad) popf push xor add push fnstenv fisubrl mov clc push (bad) lods (bad) daa dec cmp xchg cmp scas movsl cmp hlt jno mov cmp mov xchg je cmp jns (bad) inc jg loope cmp mov lret xchg sub sbb add repz in ds fbstp push fldt fs sbbl mov mov mov and xor movsl jmp inc repz push sub sbb sti movsl cmpsb pushf movsb cmp sbb sbb idiv pop stos adc mov pop fistpll mov scas jmp mov mov sbb jp fiadd sbb dec mov mov cmp jb mov popa pop mov test icebp pop jns lret xchg pusha or fwait jns jo mov ret mov test das loopne ds into push xchg inc lods loope xchg arpl cmp push (bad) es loop addr16 cmp and (bad) xchg jb cmc (bad) mov dec pop mov (bad) add test ret jp pop sbb in xor jp xchg (bad) pop mov lret xchg add xchg xor cltd push imul jp sbb (bad) pusha pushf data16 cmp divb iret in (bad) lods (bad) cld insb inc dec imul jg testl ds aam inc mov clc (bad) addr16 divl push adc dec fadds pusha out xor loopne out jne xchg pop outsb out test mov add lcall mov sbb (bad) pop test push adc sbb imul fdiv insl andl or sarb jge ss sarl push adc mov cmpsb mov jecxz push inc enter ja jbe movsl fildl clc fs jno xchg mov dec pop iret cmp mov ds mov sbb mov xor iret outsl pop loope or inc jl int3 ret (bad) das push lret cld insl jl pop testl xchg roll repz outsl out mov fldenv les jae jno jne push repnz inc dec cmp out inc and inc adc leave jp pop and pop out dec pop jle fdivl outsb sub in fwait aam jnp test jmp cmpsb mov aam xchg add xchg mov in (bad) mov in fs sarl in sbb ret rcrb out jo addr16 push xor cwtl mov xchg int3 mov push fnstenv sahf sti push into sub sub fs ret push enter jno popf sub sub sub sub push and fiadd sbb sub jmp in inc jne es pop repz mov icebp sbb dec inc insl dec nop adc mov mov (bad) cwtl hlt or jbe push stos stos or lret lcall daa out loope pop pop aad pusha pop xchg ds pushf scas ss in cmp test mov xchg sbb ja lretw call add adc dec jmp pop in insb mov loop inc aad mov imul xchg movsl push inc clc cmp sbb aam in jno fs push push mov and jmp or adc clc cwtl mov or mov jg lock pop xchg mov outsl push xor iret mov sub xchg xchg nop sub jnp stc mov icebp cltd ds (bad) ds push dec stos pop out scas cli inc pop rolb pop aad inc xor ja stos fld arpl (bad) loop je jbe mov fist push cmp inc or sbb mov dec imul xchg xchg sahf inc (bad) outsb rcl mov fnstsw dec or push (bad) lock push ret adc stos sub pop push cmp mov mov loop outsl sub adc out inc add mov insb lea imul xchg mov sbb lahf fs push pop sub or cmpsl pop mov jg (bad) scas lods rcrl mov test mov xor int3 ja inc lods call sbb aad addr16 into popa sub jne inc inc mov leave fistp lahf lods es push xor in rol pusha ds jns adc cltd cmp adc imul jno pop and faddl repnz es test and rcr xor inc inc int ret sbb mov dec sub stos lds ljmp test sub test xchg popf test test movb (bad) add cmpsl cmp addl rcrb lahf ljmp inc lock and mov lds sbbl inc int3 inc pop add lock inc inc inc or into (bad) in cmp mov das push adc jb pusha push sub push sub out mov xor cs and adc in mov int3 scas jne dec mov xchg and aad xlat (bad) adc mov inc (bad) lea cwtl push inc (bad) clc aaa (bad) inc xor aad fnstsw adc rcl inc mov xchg lahf out jb neg fidivr lcall iret lds xorb flds adc imul shll jbe push scas xchg fcoml xchg pushf or mov out std cmc in scas je lock push mov pop mov scas jns fimull mov outsl mov adc push popf es push xor (bad) mov aaa sub ret push push mov pop push mov xor loop sbb cmc xchg pusha test stos add call mov mov (bad) adc sub push cmp jbe fisub outsb xor cmp lods sbb cmp test sbb mov sub mov xor xor imul lds jbe roll shrb scas inc dec jmp dec jno pop sbb sbb fdivrs in loopne divl dec lock adc outsl je pop inc pop or xchg ret xchg cmp push js dec xchg das bound jo arpl int3 cmp xchg out das push repnz mov xor pop ret adc xrelease mov movsl mov push jg aas (bad) jg sti ret inc repnz and or lock mov cmp dec pop sub call and in add add ljmp mov mov push cmp repz adc inc push mov sbb popf xchg fnstenv or dec push cmp jp iret xchg push (bad) ds lret jge sahf dec jo xlat sarl and pusha (bad) mov loope ficoml inc dec leave and shr enter test daa add rclb test push xor adc sub scas popf sub inc jb push shlb jns aas gs sub push xor pop sbb sbb jbe sub mov daa jae int3 jae lea and insl dec int out outsl mov rcll lock dec mov pushf les push mov lret sbb inc cltd mov inc jg mov jge pop jp sbb adc push mov call insb dec ds les outsl mov dec inc shrb stc (bad) jns inc fwait imul popf mov add fdivrl mov rcrb push lock xor flds aam lcall pop sub jge lret push sahf out jne push xchg js cltd sbb xor dec jno insb (bad) leave add xor pop xchg sbb add mov mov pop sahf push adc jae in adc mov push in loop ficom aas pop push xchg sub mov mov test mov add inc test push loope xchg inc stos paddusb fidiv mov and scas pushf xchg pop stos mov fidivl ljmp stos and loop loop sti xchg test xchg mov in fwait xchg cmc bound pop xchg mov mov addr16 mov arpl sti mov ficoml sbbl sub iret mov push js cld push sbb nop test add inc push pop int cvtpi2ps call cli int or push cld shl push sbb cld gs repz cmpsl pop fiadd adc inc (bad) out (bad) xchg pop jp fldl push sub sub sub xor xor pop sti pop std out pop imulb xchg jmp adcl and jno xchg pop or and in int3 xchg les pop push sub dec jb ret dec xchg loop icebp shll push cmp jecxz clc sbb inc popa sbb fucom xor (bad) mov je lds shll repz sub push mov aad inc out in push jle cmpb jmp popl movsb mov adc add mov jns fdivs mov clc lcall (bad) push repz pop mov popl fnstcw adc testl (bad) xor dec push cmp xchg mov mov insl or cmp xlat cltd mov mov dec cmpsl in jecxz push mov push jno movsb mov xor sub and addr16 call xor insl mov dec inc pop leave or xor imul sub mov xchg call ss xchg xor mov insb mov lahf mov sub jecxz dec test sbbb sahf dec mov adc and (bad) pop cmp push jns jl pop dec push call (bad) das pop jns pop aad dec xchg sub dec insb cmpsb cmp addr16 daa bound stos mov push mov jo jae xchg loope (bad) aas mov jmp scas je and in dec fstl (bad) xor adc xchg rorl pop std mov xchg frstor gs (bad) rclb push mov dec jno sahf ljmp sbb xor call add jmp mov cmpsb outsl clc pop insl jmp inc push mov ss out jl push jae jg fsubrs mov (bad) or insb cmc mov rorl mov push xchg xchg xchg mov rolb pop out std pop rorl and imul neg and int jns mov inc insb jl out mov cmpsl sbb imul fwait cwtl push cmp sbb test cmp out nop xor repz sbb frstor lcall dec mov test (bad) fldenv les or dec hlt notl mov xchg inc ror lahf xchg push cmpsl lods mov mov xchg xchg iret rol gs sbbl iret and add add (bad) aaa movsl dec add aad push hlt insl outsl es mov (bad) negb mov stos push ss or lods leave adc iret ljmp xor aas cmp outsl aas add ljmp pop jg iret xor push jne mov stos inc mov inc lods mov out rep das pusha push fiadd mov enter cwtl xchg mov test jo sbb xchg add icebp jbe pop lahf cmpsb cli add lret roll pop fwait pop xchg pop mov push xchg push mov imul int3 adc std push lock mov imul jmp mov fisubl lods xchg dec pop ss adc xchg cmp pop fmuls push xor arpl mov xor mov dec pop hlt lock (bad) sbb mov test jne lods rep xchg mov loop fldt or xchg jmp mov pop mov daa mov clc gs cmp jp dec pop push loope je xor xor xchg bound ret pop and mov and enter mov mov jae fsubr xchg iret test or mov outsl orl gs jb dec sti add mov mov xor mov rcrb fdivl (bad) ficomp rorl dec sub pop pop shl rcl sbb push outsb and (bad) in dec xor jle aad dec xor push ljmp popf test call test mov lods (bad) mov dec outsl bound dec cmp rolb fidivrl xorps mov scas int inc and sarl lret mov adc sarb sbb cld pop jbe iret rorb dec ja dec leave or je stos stc mov lock daa lock sarb or daa lock sarb or daa lock sarb or daa lock sar cmp or add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add icebp and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push inc sbb xchg in dec pop jne mov (bad) fstpt fxch mov (bad) leave lret ss insl lods mov pop das loope call enter orb nop jg or pop xor mov sub and lods notb and test lods jle jne pop cmp cmp out repnz loopne test cmp push sub shrb xchg xchg pop (bad) (bad) cmp sarb (bad) push lods mov fisubrl mov jmp or gs rcll lret ret pop aad je jl scas movl jmp sub dec pushf dec cmp adc in (bad) adc or push fisttpll mov stos inc cltd push cmp jmp jl dec jmp mov int (bad) push add xor xchg pop into inc scas mov or gs fwait push pop sti lods fs je rorl add cmpsl in movsl adc rcrb add clc jle or mov mov in xor push icebp out in shr outsl fbld xor jmp nop push adc cmpsb cmpl mov scas xchg in sbb dec pop aas imul mov stos push mov and mov inc sub push sub rolb (bad) ss mov fbstp test sub in dec lcall lret repz dec pop in pop adc mov addl add lcall dec dec cmc mov into or cmpsl jg movsl ret sub adc jle and cltd sbb mov jmp ljmp xchg outsb cmp lahf dec xchg das pop mov adc mov cld jmp mov js push mov inc cltd or jo push xor ja jnp adc and mov dec fs gs call and push sbb enter cwtl pop ficomp test push jb jp xchg (bad) mov jl test xor mov int3 add dec mov out jge mov fiaddl adc push mov (bad) xor aaa (bad) lahf mov mov psadbw lea mov cmp int3 or movsb movlps out daa addr16 jb cmp dec jne bound dec cltd stc xchg push jno mov dec out push call jg stc test jo stos (bad) sub mov fdivrp lods mov and ret std rcll dec ret sub loope pop or rcl popa jbe push jp cwtl cmc add jno lock dec add stc xchg mov push sbbl sbb rcl ss inc inc dec push call lea aam sbb shr add addl scas xlat xlat inc pop clc mov pop adcb test out jl xor repz andl out inc (bad) pop (bad) pop aad lods push lret jmp and in call (bad) mov add dec (bad) cmp push cs xchg js neg mov sub fs into (bad) mov or enter js leave sub mov pop (bad) cmpsl repnz and pop stos and cmc in push iret mov and mov in rcrl iret clc jg orl mov test in add mov incb nop fucomip sti mov pop lcall loop das addb (bad) and ds mov jg lds movsb in outsb dec pop jmp xlat and cmpsb and sub push mov adc out mov mov mov cld cmc fsubl jo xor test ffreep ret imul jno sbb mov lret sub jbe inc mov xor dec and cmp daa lods sub nop mov rolb push pop imul xor jmp call xor sti dec loope xchg rcrb dec stos or mov (bad) xchg cmp cmc stos xchg movntps fistp icebp sbb push inc dec mov xchg or xchg mov in pop mov aad jg scas les (bad) loopne jle (bad) fiaddl pop loopne jmp fldcw xchg mov js out jns sub in sbb cld in jl xchg scas mov fiadd fildl cmp outsl or pop rcrb in imul cmpsl mov in mov in das or push aam lods dec sub xchg scas jecxz sahf fistpl (bad) sub leave int3 pop xor push xor and loope imul mov stc xor adc addr16 jne popf mov jl inc cmp stc cld push fisubrl dec jle ret jg pop scas or pop mov xor lcall push orb std add hlt (bad) fisubl inc mov or repz dec faddl stc xchg push pop inc dec (bad) testl insl or adc adc xchg xchg cld fisubrl call and es iret adc stos dec ja imull or icebp inc inc fadds sbb cmp rol mov lcall test mov push mov cli fldl jo mov sbb scas or jp push or sub and mov push testl dec test cmp pop cmp mov sti aad mov (bad) and pop and test adc dec pushf das cmp mov (bad) push sub insl inc sbb push push je repz lea dec (bad) mov les int3 jns add jge lret ja imull pop xor je mov push mulb mov mov arpl jecxz jl,pt lahf gs movsl xchg les cmp inc xchg scas sub push push out cs pop and xor mov push shlb int3 push mov decb or scas adc cmp shl xchg inc enter pushf and daa adc cmp xchg mov dec lcall jecxz jb ret call mov shlb (bad) cmp mov sti sbbl je sti mov lods daa mov dec cmp and fwait push inc sub bnd aad bound adc or cmp out test jbe test xchg icebp (bad) in cmp inc imul repz cmp (bad) xchg cmp mov dec inc and xor insb xchg xor daa int jge fstl rcr sub outsl inc adc jae ds fsubrl inc rcrl test mov outsl pop nop loope inc call dec (bad) mov pop pushf (bad) mov std sbb pop scas lcall mov enter dec mov mov lock sbb dec push sbb add push fldt arpl pop jns pop add fmull jle js add push out adc imul flds add lea stc push inc jno mov fldcw ss (bad) ss rorl sbb iret jb ljmp cmc dec and loope xchg cwtl add mov fsubrp repz popa hlt fistpl mov shr jnp cmc pop fwait (bad) leave scas fcomps lea push jl pushf (bad) clc mov fadd sub push pushf lea mov clc mov pop xor pop cwtl push sub jae adc arpl mov repz xor out lret sbb repnz mov leave js lret daa push cmpsb sub dec repnz scas (bad) in mov push (bad) fstpl dec aad push (bad) xor mov mov ds stc lcall adc int3 mov mov bound je add xor fidivl jne mov mov sub data16 mov mov aad and adc cltd pop aas sub pusha pop inc mov insl mov add cmp and xchg xchg loopne mov push (bad) insb adcl lods jno rcr inc xor cltd out mov das pop dec out jmp cwtl xor scas sub rolb cmp aaa cmp sbb ja cmp scas sub pop inc sti fwait lcall push push push movsl adc mov sarb clc push adc les lcall decl mov jo addr16 xchg cld jbe xchg cli cmpb stc scas inc mov (bad) push in test leave sti sbb cltd pop mov or lret insb scas insb pop xchg xchg ljmp xor cmp pop (bad) sti push sub mov mov test xchg jmp mov js cld push sti ljmp mov lret pop les insl jmp jmp dec (bad) xchg adc pop jns adc (bad) out mov shrl mov jg mov loop cmpsb shrl and push jnp data16 pop mov mov adc push (bad) ficoml (bad) icebp cwtl (bad) mov in adc cmp sub sub lret test push in cmpsb (bad) xchg and insl iret fisub loop roll adc dec icebp (bad) out negb out mov jae pop rcll fs int loopne lods or loop aam (bad) test mov pop stc xlat mov bound push repz add adc jns mov mov adc rcrl iret add adc add arpl ss or repnz data16 negb mov pop fld pop aam or in in iret aad lret test xor mov aaa pop outsl push and scas sub cmc push sti dec sarb pop sub jo popa fs add int3 mov push inc jo or popa pusha fisttp shrl jo cmpsb xchg in pop cli lcall pop push adc stos jmp fistl aas fwait scas adc imul push add daa sbb adc or hlt adc out lret sar inc loope negl push mov xchg pop iret sub mov xor sub test sbb lods popa and js mov in jae cs in jg cwtl shlb hlt loop daa adc xor cmp pop add dec aaa es mov aad cs mov fdivrs add loope sti xchg incl xchg lods xor inc ljmp mov mov mov or push out push jae movsl int3 in jecxz mov jnp incb ds aas mov lahf popf je std cwtl and fcmovb xchg jg or pop (bad) lods push int3 add sbb lods add dec cmp xor wbinvd ja xor sbb pop (bad) jg mov lods rcl xchg insb push pop push (bad) sub stc ljmp mov push ror mov cltd mov push loopne push dec push addl push call (bad) jp jmp mov mov jecxz lock pop cmp xchg data16 pop fbstp std cs or sub lods jno pusha xor push pop repnz pop dec leave mov sbb das xor mov jg push sub xlat test pop and loope dec jg outsl push add cmp fwait mov mov jns inc stc pop cltd mov sbbl test mov adc xchg insl mov popf cmp fidivrl aaa mov cmpsb pop bound roll test push or xlat mov hlt imul adc aas gs xor push faddl xchg stos pushf cmpsb inc out sub sbb xchg pop push mov lahf mov inc daa ret cmp xor and lret fs mov loopne nop sub xchg push push xchg add sahf mov lods xchg ret jp xor xchg daa imul pop mov in xchg in cmpsl enter or addr16 adc add (bad) cmp cmp divb ljmp or (bad) pop mov stos add in lods js nop pop lret (bad) push jmp cmc sub cs mov je or push mov inc sbb push das xchg pop int3 add fcomps std and xchg cmp popf (bad) mov test mov and sbb repnz bound mov imul jecxz pop (bad) mov stos and adc pop std stc sbb int3 or jp mov sub out inc mov cmp in dec xchg outsb adc int mov inc sar adc mov hlt lcall dec enter and stos mov pop pop es inc push mov (bad) mov push dec xor in mov popa out fisub ja out mov in ljmp mov xor cmpsl push outsb mov push mov ja and rcll fimul xlat fistp (bad) es jnp cli fild or push loope xchg cmp jp mov fisttpl jmp lea and loopne,pt jl cld sbb stc mov inc xor repnz sbb or cmp pop xchg inc ds add mov dec fidivl xorl loop dec in pop or mov out mov jg jecxz inc fnstenv or adc es mov fbstp inc enter dec insl lret ret mov fsts and mov mov pop cli fs clc out cmp pop add fwait jo jmp dec mov addr16 dec push xchg data16 aam cmp popf fldcw sti jo leave xchg int3 lcall lds dec popa aad xor jecxz out arpl push pop mov mov repz loop xor push addr16 shll sbb loop cld mov jno jnp andw push out xor xlat shll fstl sbb inc fild mov mov or popa mov xchg and xor addr16 xchg push es fnop xor cmp and bound inc push push addr16 lea mov or pop pop loope mov aad pop jecxz and movsl inc nop stc mov mull movsl rorb mov lock or movb mov jo popa mov cmp mov sbb pop psubb dec push sbb movsb scas pop mov cmp pop jbe cwtl gs or push leave dec les loope int3 pop mov mov fnop in or subl pop in ret inc (bad) mov or or imul xchg gs leave mov insl and daa inc xchg pop mov (bad) cmp and or arpl cli in xchg add mov pop or add arpl dec fsubl rclb push loope or adc mov pop fadds hlt xlat stos ds leave dec rcrb aas stc rolb cmp popf adc add cmpsb mov fmuls and mov sub pop movsb mov add jg or adcl sbb push adc mov xor je out cmpb mov jle xor lea sub add mov mov stos mov push pop dec loop sub and inc cmp js mov ret out cmc out adc push and cmp dec mov mov xchg inc subps int je adc lahf add lods jp lea shlb aam mov or imul fild jno mov adc xor push pusha jl call dec (bad) mov inc fucom mov mov cmp imul insb test sbb jbe cmp out xchg inc xor dec push (bad) (bad) dec out pop pop sbb adc mov int fmul sbb test sub jae addr16 out cmp inc cli sbb loopne and mov iret rcl add imul ja sub or sbb jno cli adc and sbb in bound dec mov sbb mov mov fxch ja add insl test mov mov fnsave mov js lds adc mov xor and push xorb push mov xchg inc push mov mov fisttpl cmp push xchg or ss push in aam cmpsb hlt inc xchg scas fwait pop or sahf into out add push (bad) aam mov leave xor iret xchg sarl mov inc (bad) negb add into dec lock into pop popa lret lret pop xchg mov addr16 pop push in dec mov mov lret dec std out push jg rcrb push xor xchg pop loopne int cli sub data16 push or cmp pop mov pushf xchg fisubrl xor mov gs fs pop mov dec add int3 cmp js call in dec push inc ret dec xor negl mov jne push or push xchg jmp stc rcrb mov lock adc push loopne adc and pop (bad) push xor xchg (bad) jb cltd ja frstor pusha cmp jo sub lea fldcw addl inc cwtl shll jge push lea mov stos push les enter js and pop sub dec sbb mov (bad) or and mov mov hlt aad push xor mov pop xchg inc stos cmpsl lods (bad) out sbb push outsb lret outsl fucomi sbbl pop and fwait mov jecxz in dec in dec popf bound data16 push sbb cmp out ss adcb inc daa or mov ss push push xor inc adc ret mov pop sbb js mov inc imul and mov lret sbb jns ja mov je lods scas jmp xlat or xorl je fcmovnu shrb inc sub jp rclb jae movsb xlat dec inc xor (bad) outsl xor es jl sub jl ret push fwait ret pop nop mov sub cmp loop repnz fcomps imul stc inc sahf test dec mov lock sub sbb sarb adcl adc mov pop ds cmp cld jle lahf mov xor (bad) daa sub cli ds incb test in sbb test mov addr16 test (bad) mov mov sub and cmpsb aam popf std and dec dec (bad) xlat jo mov mov outsl cwtl inc call fcoms mov add push jl mov fsubl mov pop mov dec rcll jle,pn or mov push cmp mov mov ss xchg pop and lcall inc or arpl jecxz ds lret xor lcall scas push xor inc mov mov add test or out mov xchg arpl dec pop loop stos or inc mul xchg xchg mov lret fld test pusha jno imulb ficompl pop push ret mov shlb stc (bad) xlat mov inc out fdivl mov lret out lods (bad) mov popa jg cmpsb jno jbe cmp (bad) push (bad) and push xchg sahf or lods fisubr cwtl adc mov xchg cmp pop movsb sbb (bad) add mov shl aam cwtl dec jo dec push iret mov add ljmp sub jbe push and movsb popa mov add mov daa arpl cmpsb inc ja and imul xor mull and xchg adc int movsb loope aad mov sbb cmpsl movsl fcmovbe pusha inc loop jmp mov stos incb or rclb pop jae dec fstl or mov sar or lods sub negb fwait cmp test jp mov ret icebp mov orb out pop addr16 popa sbb pop pop hlt shrl sbbl pop xchg inc dec bound inc outsl push xchg imul fbstp mov jmp push fwait xchg push sar push jp hlt (bad) jno xchg lock mov leave test xor xlat jmp std xchg sbb movsb jp or leave mov outsb jmp jp mov mov xchg in or popa pop fs mov les sub mov das jmp xchg les or das test sbb adc xchg in or es clc jb enter ljmp lcall inc int3 lret mov xor fwait inc imul dec xor out loopne dec mulb inc int3 pop in ds adc inc inc fwait mov jg mov sub fistpl ljmp sub mov lods or or outsl dec pusha aam (bad) ss das and dec aaa mov xchg push mov push and xchg adc ja scas or incb xor push ds sbb test jbe add (bad) cmpsl aaa mov cld insb and in clc cmp add pushf jnp sarb arpl hlt jmp test jne dec es (bad) xor (bad) mov lret mov jle inc cs and push or fsubrl in out mov jo stc and inc dec push int lret data16 mov lret cmpsl shl jb leave jle pop mov test mov inc movsl jge repnz pop (bad) into scas cli jge (bad) jb ret lods xchg fistpll push ret pushf xor cmc mov inc aaa leave mov mov push mov fimull pop pop mov cmp call sbb loopne faddl lds inc (bad) repnz cmp mov jle mov test xchg test xor pop mul mov loope push pop aad cmp ffreep or jg jb into mov cwtl dec jecxz adc lods aaa cld or test fsts or test outsb add sbb sbb mov (bad) (bad) or mov das outsb and in add mov sub in mov mov cs mov mov and mov mov outsb jb push fistpll ficompl negb mov (bad) addr16 fdivs inc sarb or sub jp cli sti xor (bad) psllq inc mov mov jle push mov pop outsb pop aam dec sub icebp out xor push add (bad) mov aam sbbl inc dec inc add loope and xor sahf js enter ljmp lcall jno (bad) inc lret clc adc add xor fwait stc scas sbb ret sbbb aaa aad add lock bnd repz fsubs mov repz sub jmp xor mov fstpt es mov call adc pushf fistpl addr16 sub out mov xor into mov ror pop add js adc xchg mov jo mov cmp push pop popf out pop sti push pop jns cmpl call loopne jbe imul sub fcmovb popf out adc std mov lret sahf gs pop mov stos cmpsb dec pop adc outsl imul cmc (bad) sub lds mov fnstcw lret jne leave mov jecxz lods jecxz lods pop add jbe fisubrl cli mov cmpsb adc pushf xchg clc in jnp mov movsl mov dec push mov pop sub push enter mov mov in in test xor scas fs push pop jbe jmp jne shlb jne sbb mov rolb icebp xchg mov or not fs pop pop pop jmp scas das cwtl inc xchg push cmp dec sar pop sub pop (bad) pop dec mov mov jg xor mov dec cmp mov movsb es dec out mov mov sub out sahf add loopne adc lods pusha xor lcall sbb ret xorl cmc ret cmp inc fist sbb idivl subl jb nop dec cltd dec scas out loop jbe sbb subl fcompl jno fwait add push and jge das cmpl adc (bad) je cmpsb shrb add rcr mov xchg xchg sbb xchg mov into lods out pop mov or dec in shl jno pop shll mov dec xchg pop fadd aas loope sti mov xchg imul xor pop insl push mov sbb (bad) cwtl icebp inc add mov add movsb mov popf scas rorb out call and mov scas xchg bound dec iret mov loop cmp lahf outsb icebp cmp mov xor xchg push xchg jecxz add (bad) pop cld adc outsb les ss inc dec ja and rorb mov sahf cli mov daa lock sarb or daa lock sarb or daa lock sarb or daa lock sar cmp jne stc aas aas add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push inc sbb xchg insl pushf mov imul fldt leave daa pop lret mov xchg mov sub std ds fcomip adc lcall add add add push jle ficomp hlt push (bad) inc mov jo cli mov outsb push mov pop in popa sub (bad) cmp pop mov incl repz sbb sbb je push hlt or sub cmpsl pushf imul push ret out sbb fdivrs ret add jae mov inc sub cmp jecxz hlt xlat negb xor mov push jnp movsb fs jg lret aaa out iret or in test gs nop adc addr16 jae sbb sub adc mov cmp not mov jge nop mov andb jne xchg lods xor cwtl and sub mov (bad) mov arpl sub jg bound fnstsw mov fisttpl adc test jnp,pn xor xchg movsb push negl (bad) mov push stos xchg pop scas test push push sti jp fcompl iret addr16 divb sbbb push loope jge aas loope cwtl imull cmpsl (bad) out jne cmp jae loopne inc mov fdivl movsb inc iret mov mov dec xchg nop and add stos cmpsl and inc repz stos repz pop sbb nop fidivrl je or (bad) ljmp pop xor stc dec fdivs cmp or stos mov rclb inc mov push cmpsl movsl js xor inc loope lahf gs clc add je dec xchg sahf cltd jmp (bad) mov cmp xor sahf adc mov hlt xchg push sahf mov mov (bad) sbb gs (bad) and mov pop insl cmpsb mov mov stos mov ret popa jecxz mov xchg or pop outsl dec cltd xchg or jecxz mov xor fadds daa aad inc xchg das sub and aaa sahf cs mov mov jl inc out xchg cmp lcall outsb mov or (bad) int mov int in mov dec mov cmp mov inc xchg xor cld mov and scas fstp jl mov js mov das out insl int3 mov push dec daa inc imul fwait cwtl cmp ret mov pop repz mov in xor push fcoms in sahf (bad) mov imul mov push decl iret xor jl loopne arpl outsl stc fimul gs idivl mov repz push sbb stos notb push ljmp jle pop xchg jmp cli pop inc or adcb push cmp clc add lock in ljmp inc add mov divl jg jl scas pop sahf xchg in lret push rorb int mov or lea aad fs adc push and (bad) sub adc push stos push or sbb mov xor or subl inc mov aaa push (bad) xor pop inc mov in cmp mov (bad) test popa stc adcl (bad) fstpt mov lcall loop adc sbb loop cmp xor aaa arpl cmpsb cmpsl xchg xchg pop cli add notl adc call pop add stc (bad) bnd fistpl imul sub xchg jecxz loope inc ret arpl pop xchg repz fdivrl fwait bound pop les negb hlt sub xchg mov daa xor and loopne inc in jge je pop in dec scas pop (bad) or inc and cmp js sbb mov je xor shl cmp or call pop rcrb aaa call out nop repz jl add (bad) cli mov lock mov sahf push xchg xchg jbe pop fs fs fs push xchg push sub out lods sub aam or sub mov movsb sbb (bad) sub xchg dec (bad) shr leave mov cwtl jns pop lret orb adc outsl add add test adc inc mov in mov mov xchg or jle cld test push lds jo std dec and inc mov adc and leave or bound push les shll in popf pop in xrelease andl mov repz xor mov loopne xchg inc int3 sub push add jge sub push in repz or cwtl mov ret in cli mov out clc inc aad lret in mov mov inc fbld jnp lds popa dec out lock mov enter and ret sub dec mov lds mov sti inc or mov int push fnstcw aaa arpl mov ret out pop xchg ds cmp pop cmp loope adc (bad) mov inc mov mov gs icebp add sub add or or add mov inc mov sub push aam (bad) xor adc or cmpsb pusha pop repz jg icebp mov jb pusha aaa mov pop test jge (bad) repz icebp lahf sahf pcmpeqw push stos mov (bad) mov or mov xchg mov sub das xor ds or fmuls mov shll inc jae xor inc dec repz outsb mov jmp and sub sbb adc or repnz jecxz adc popf fnstenv sub mov repz cmpsb (bad) xchg cmpsb movb das test jbe cld in psubusw jae pop (bad) cli jge cmp push loope int3 push xor (bad) or dec je pop jl add test sbb shll jg shlb fs insl sub sub jg xchg dec repnz loop sbbb xor je push test mov cmpsb out cmp cmpsl jbe sarl enter repnz pop xor pop fs iret jge inc test cwtl inc fsubr repz mov call sbb dec lods insb mov (bad) xchg sar arpl jbe test std sub cmc jle mov data16 mov mov out pop cltd loopne (bad) out inc mov jl fisub nop loopne adc outsl fildl cmp int3 aaa subl lods or adc xor jmp mov push add fstpt dec jmp xchg pusha sbb (bad) jae push push out out mov mov jno scas jns scas sbb outsl xchg popa test xor jns (bad) jo push sbb mov popa es add (bad) push push movsb js fwait into scas fstpt cltd push pop jo aas in mov aas nop mov sub shll fidivl adc (bad) cld ficoml hlt cmc mov lods insb pusha push or les (bad) lahf mov or pop fwait hlt mov lods in cmovo xchg mov jns cmpsb out dec (bad) cmp inc imul je (bad) fcoms jle push push and test stos xchg aas cmp sub mov pop push lcall lea cmp fdivp out inc or cld inc fisubr jne jae mov clc into pop repnz inc lret jge jbe dec (bad) daa inc in fwait xor xchg or adc clc (bad) (bad) and jo fist cmp scas call test mov lea cmpsl or int3 mov push js (bad) aam mov add pop rorb and mov cmp pop sub jno xlat lret in xchg mov out rcrb insl xor addb sbbl stos ds inc subb push jo jo pop pop out mov movsl data16 jne repz cmp fstps mov fsubrs clc pop mov xlat adc lods outsb movsb jg add sbb out cli aaa cmp lods dec mov add cmp orl jp repnz ljmp xchg das adc mov xchg cmpb mov push xchg lahf mov std inc cmpsl pop inc int3 addr16 xor mov data16 insl add pop sti or inc or shrd cmp pop xchg stos mov js hlt sub sbb inc and xchg enter aaa mov pop pop sbb lret pop mov xchg pop xchg in or xor ss gs jecxz adc sub mov jmp std pop xor cmc jb lret push mov mov fiadd adc js or into jmp movsl xchg int mov xlat sub stc xchg inc mov loopne dec add jnp push and fwait outsb test mov mov jne jo xor pop (bad) jns mov mov ret jno xor xor xor or xchg or mov mov ret lods sar mov orl xor bound push mov aaa mov lea xchg cmp insb sbb push pop inc shr jge pop imul xor ss arpl inc and in out or fadd gs shrl or test pop xchg mov pusha fcmovnbe insb repz (bad) push mov aaa push inc pushf dec or inc cmpl ljmp test push fistp cmc push push push enter xor inc fdivs loopne insb lods out inc fstpl push das pop or push fnstcw lods xlat xlat dec xor jl iret xchg mov or push in cli sbb adc jno (bad) sti push dec mov pop inc xchg lret subl insb pop mov shrb movsl test ljmp aam cmc cmp push xchg jnp xchg pop leave loope into or stos ficompl test lods or push aam jo xchg lods or aam ja stos ss mov inc jg dec shll inc mov aaa int push mov cld xor jno lret lret (bad) scas jae popa sbb cmp call movsb inc fcmove dec add add aad jo pop dec mov insl loop cmp (bad) out out dec lret or (bad) lea jae and lds xchg ds insl dec push jo lds fisubr js (bad) xchg gs in push hlt mov sub out push test incl pushf lods xchg mov push addb xor push mov inc test int das mov (bad) push mov out (bad) cs lds xor jg (bad) xchg cmp (bad) cwtl or gs repnz jns jo subl movsl xor nop add sub std imul cmpsb dec jae out mov and adcl loop (bad) pop dec int movsb inc pop fsubp lcall popf sti xchg lea das push mov popa fdivrs mov mov and xor data16 ss mov lcall pop lahf sbb insb xor push push cwtl and jne or mov loopne push mov pop sbb clc jbe mov aas stc mov into pop aaa stos jb adc in sbb sahf lret orl sub loope cltd ret cld sub das jmp popf addr16 mov pop xor mov mov aam add mov push push in out je push or popa je aad dec mov je fiaddl jb negl mov loop repz ljmp xchg mov lea mov push mov push xor hlt stos push into imul or jge pop fldl add xor sbb jecxz jl jno push dec push insb jno push lret sub test lret ror loopne push xor out nop cmp std add into dec imul clc ret lods cbtw (bad) out in xor ljmp add orl mov pop mov repnz gs pop shlb das push mov fsubs mov (bad) mov sbb cmpsb sbb cmp ret pop pop fldcw sbb xchg cmp add leave jb dec mov sbb sub mov and fdivl fist jb mov fs lods mov mov adc xchg push cmc cmpsb add dec shl push cli or cmp xor popf dec addr16 out daa jb push lret ds and insl lods push sub add adc pop mov inc xchg (bad) ss ret mov xchg pusha rcrb aaa mov lods cmp into (bad) outsb les pop lret jne push enter cld movsb pop jb enter call and movsb inc xor dec dec or jl addr16 mov mov push cld sub dec out lret inc add xchg fistpl fidivl pushf adc out dec mov xchg stc cld popa sub dec jns fs insb jne sub arpl jl test test mov orl cli sbb sbb ret push pop stos cmp vcvtss2sd xchg popa mov adc aad mov adc or or subb mov les jmp loopne lds or adc xor pop or add jne addr16 adc js out xor xchg jg inc xor mov addl inc dec push loop cmpsl inc rcrl mov mov push cmpsb cmp mov faddp jns icebp jbe mov pop xchg adc adc ljmp es cli sub (bad) xchg push test or mov pusha mov mov repz mov jns iret push push mov in adc lea sub cltd xchg push pop sbb sbb ja ret mov popf pushf fisttpl ret jae loopne gs aad mov pop push xor jg ljmp fcmovu test jecxz lds push fsubl popf add dec stc jnp add dec lea lret cli fistl loopne outsl xchg jmp out test xchg roll or pop jmp xor stc mov adc mov mov or jle js sub xor cwtl movb xchg stc cmp ljmp xchg xchg test cltd mov adc (bad) push xorl nop hlt mov cmp mov jg ret jg or clc push arpl cld dec sub xchg aaa fsubrl pop cmc insb jle test (bad) movsl add pop inc (bad) cmc xchg pop rcl mov mov add xor das jecxz leave mov pop sbb ret cmp in xor push fsubl push imulb adc xor outsl shrl repz fcomps lea adc dec dec (bad) mov iret and pop sub addr16 shlb (bad) enter ljmp fcmovu push fisttpl and xchg cwtl andl ljmp dec pusha nop test sbb mov in xchg out and and mov inc divl mov mov push daa push cmp push push (bad) pop adc mov jg xor movsb or aaa (bad) cmpsb jecxz lret aad jb push repnz mov repnz mov ljmp pop jno xchg ret ds pushf mov push xor mov dec inc mov test mov jg lahf js cli lods sbb mov cmp mov jbe or mov inc mov stc push ds mov fdiv loop jg adc jle xor int3 js cmpsb pop or insl int3 push push mov (bad) lods stos adc cmp or adc cltd sbb mov xchg pusha jae add cmp popf pop neg js xchg loopne insb inc push xchg ds mov out lea push xchg mov ret sarl call ja xchg rcl pushf mov ficoml scas in fcoml mov decl mov aad cmp ds add mov insl cmp mov push movsb (bad) leave or (bad) mov shr inc hlt les pop pop inc test mov jle dec into out and dec arpl dec dec pop aad ret (bad) jne iret rep icebp push push sub or xor add pop scas int (bad) pop jno and xor loop push jns sub sbb inc inc and loopne enter call jno push push and sbb push inc (bad) mov pop mov cli mov jbe inc insb leave pop ret xchg sbb cli jmp lret push in jae adc pop imul lds int3 add mov xlat dec xchg xlat push jno pop or or sbb (bad) out es pop cmpsl addr16 jl fmull pop ljmp (bad) hlt pop sbb mov (bad) out add xchg pop adc (bad) stos mov movsb jmp pop xor mov inc in rcr arpl int3 insl subb inc call (bad) out xchg and cmp je mov push (bad) jno out lret lock std sub mov and jae icebp je or test dec pop xchg add sub dec int3 fistpll push cmpsb stos mov xor test test xchg cmp pop ja iret or loopne jo pop bound jge lods dec sbb or sub pop insb popf mov add pop incl out or dec pusha (bad) dec iret mov test push xor pop cltd arpl (bad) mov test stos popf outsb pop int add div cmovg xchg mov test std stos js push jne mov out and mov out jl xor xchg sbb push push (bad) xor dec mov (bad) mov fidivrl outsb mov mov adc popa jge fstpl outsl inc adc stos xchg jmp push inc and sub sti fstp jbe cs or stos sub aas cs mov xor and lret dec dec adc fcoml (bad) jb sbb out movsl dec cmp cmp inc mov mov test cmpsb jle pop push insl dec mov xchg in ss ret out adc or pop (bad) and mull adc and aam jmp mov rorb push mov lea jmp sbb jb (bad) sahf jnp mov adc int loopne mov jb xchg jle (bad) jecxz mov push lods xlat aad int3 hlt sub mov mov stos xor int dec stos scas push ja lea xlat cld flds xor and adc pop fwait add pop not adc mov cwtl cld mov add cmp push addr16 loope sbb inc loope xor in cmp std sub test stos leave repz and std pop rcrl adc shll stos xchg icebp cld out cmp jmp out xor push stc cmc jp sub mov lcall (bad) pop add mov adc ret dec repz imul push mov gs or inc leave xchg jae push mov xor cmpsb fst js xchg mov pop xor cmp xchg push xor mov pushf sbb into std jo popf ljmp sbb cmc cmp jmp fisubr mov in inc pop jne gs lret xor add das insb daa in mov pop push xor iret sbb pop es adc sbb ss xchg xor fisttp push ficoml and sub cltd push or mov jo push jg and sbb adc jge fildl cmp hlt enter lahf mov mov add jmp adc sbb nop loop sub cs ret sbb xor icebp or sub das mov xchg jecxz ret dec adc push divl push frstor rcrl sbb dec mov ficomp test pushf nop (bad) dec cmp int mov (bad) psubusw xchg jne loopne jp (bad) jno gs adc mov xchg mov mov adc mov inc int3 stos dec add lock mov mov push cmp pop pop testb mov xor xchg leave lock add fcompl cmp pop adc aaa adc inc test cs orl out jp lret push push out rclb icebp stos mov cltd pop repnz lret jns lock and jno or bound cmp dec xchg cmp imul sub inc nop fildll lcall dec imul push lcall out inc sahf pop out mov std insl loope fcmovnbe adc xchg movsl jbe aas je jle nop push and sbb adc jmp push js or fcomi pop jge push popf xchg cmpsb das jge cwtl cmpsl xor sub or push mov jmp and ss lret jg sbb mov sahf fdivr push in pop adc jmp add fistp sbb lds sub cmpsl pop ds xor mov aam arpl ret (bad) dec inc mov shrb mov stos and sub (bad) cmp mov out mov bnd aas imul dec xchg int3 (bad) mov in sub cmp test inc test jl inc shrb dec xor xchg dec mov mov mov pushf dec cmp out test pushf xchg inc push mov push push mov and push out test add mov jno sbb add in daa call cmp les or aas ljmp (bad) sbb push mov dec fistp push or ja inc sbb pop bound or (bad) in pop clc icebp dec (bad) int jb (bad) shl pop jl jmp add push (bad) das jle push add push mov imul test jo sub push xchg xor inc or push les fwait add es pop jl sub jge inc aad mov xor pop lret popa jg hlt push rorl pop sti jmp push xor pusha sbb and cld xor leave fcompl push sub cmp xor fisttp xchg inc xchg movsb pop popa out sbb pop arpl int ret arpl mov test pop jecxz (bad) shrb sub add sub xchg pop nop and mov adc push or (bad) fstpl adc inc loop xor sti insb hlt pop leave jno xchg lock movsl inc lret cmp out mov je xor adc xchg std inc pop xchg jle adc or sub sbbl sahf dec (bad) lods mov mov (bad) aam sub pop sbb (bad) ja sub outsb aas or aas sti rol jo add nop je imul call cli xlat sub mov sub clc sub or inc pop loopne pop ja mov sti cmp xor outsl fimul or and or jns subb adc popa stos rcll ds ljmp hlt fcoml loope movsb rclb stos mov xor mov pop enter or mov ds pop add or xor sbb jmp nop adc cmp iret dec fild cmpsb sbb sbb push sbbl popf and push mov or mov adc out mov rol mov inc jl cmp or mov mov inc fucomp sti sarl ret cld xchg aam push jno sub push cmp lahf imul ss sub or out movsb loop mov mov and and loop negl popl and jg and mov (bad) xlat fdivrp jae in dec inc mulb push mov in cwtl jns jo mov xor cld hlt push jbe jl repz insb lods pushf mov add add rol fst mov idivl jo cmpl cmp inc les insb inc push fwait stc xlat lret fninit es shlb and lea mov fwait cmp sub jae pop adc cltd cld push fwait lcall aas jnp adc addr16 jo xor jmp mov mov dec adc sub repz fwait pop pushf dec mov mov adc cs fdivs push sbb insb pop lret out test mov and out sbb into cs jno in mov cmp mov ja mov mov lock ds lea adc push leave or aam je jae dec scas dec sahf dec dec add xor mov repz and dec lock jns jb movsl mov xchg xor mov stos mov stos sbb divb mov jmp add out lret ret (bad) test mov ret push dec pop sbb pop rcrb leave outsb test push cltd push xlat and ja mov mov adc ret stc insl das fcomp (bad) cs dec (bad) lret inc sub rcrb int aas imul fs add lea sbb xchg (bad) call jbe call pop adc and push imul mov std jae fs mull daa xchg inc gs inc pop mov and jns push dec push and inc mov mull xchg dec sbb xchg mov gs jae push adc cwtl lret loop add scas mov and pop sub (bad) adc dec loopne cmp dec loopne cmp dec loopne cmp dec loopne fwait sar fsubs dec sbbl add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add icebp and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov xchg inc push push inc sbb adc in mov (bad) xchg insl mov fistpl jle divl test out sbb and add ja pop aad out int3 movsb dec dec pop mov bound cld (bad) hlt push cli jno cmp pusha (bad) ret push mov ret mov mov in ljmp repz stos add lret test lock jnp mov jmp jo or prefetch or inc add fyl2xp1 mov icebp dec push xchg outsb sub addr16 cmp fs and (bad) negl inc out insl jo ss mov fs cmp rdpmc sbb sub cmp fucomp jns popf pop fldl cmp imul xor je vmovq ret mov jp cmp movsl sub lret (bad) lock test or std add int lahf pop and mov out sti fwait or (bad) in sub fidiv push gs vandnpd jg int daa or cmpsb mov (bad) daa in dec jp popf imul pop inc mov pop and xor imulb adc faddl jae pop mov xchg sahf test inc stos inc stc pop shr inc xchg mov or cmp shrb mov mov movsl and nop lds enter xchg call mov add push test sti (bad) xor popf cmp adc ds cmpl sahf dec mov sahf in das js shrb or inc pop push and outsl cld in (bad) cmp cmp sbb pop cs xor mov lds mov xor loopne fistp lcall out pop (bad) jae nop jge (bad) xor hlt setl scas cmp pop mov push addr16 mov mov cmpsb scas int3 cli or mov mov pop mov mov and lcall and fstps mov sub xchg insl dec sub ret aad xchg shrb mov jbe adc mov sub push popf in push test add mov fsub das pop xchg xchg sub sub ret aaa insl cmp dec and lods lret add mov push mov divps ffreep jnp hlt scas add outsb imul jp mov fs bound insl dec dec mov insl pop jecxz roll mov sahf sub repnz xchg movsl icebp adcl lret jmp or sub and cmp clc (bad) pushf cmpsl (bad) sbbl test call mov (bad) sub sbb or inc jno outsb loopne or add jnp ja sti or es push mov push mov jnp mov mov cmpsl arpl stos movsl sbb mov pop mov lcall int3 out bound (bad) dec cmp movsb add jno rorb jle gs out popa jns outsl adc jecxz jns sbb in adcb add pop push stos mov ds cld clc gs xor mov ret ret lret pop xchg shlb cmp pop inc and mov push push inc push (bad) popf sub test jno mov mov mov lret bound push xor cmp ror lea ror fucomi pop push jg pop mov push icebp psubusw aam (bad) mov enter arpl fstpl movsl (bad) fwait push push cli mov jge jnp test mov orb jmp std push jae sbb pusha mov adc jno push xlat and mov adc add mov repz sbb cwtl cmpsb mov xor push xchg xchg add push sbb fcoms in cmp push negb shlb jne inc lret cld rorl inc out adc arpl int3 js cmp push js int3 or jmp mov mov inc adc push cld dec shrl insl fs xchg pop es fld1 ret mov shrb (bad) jnp mov ja inc cmp push test push test cltd xchg add pop adc ja sbb push (bad) mov xor mov push cmp push arpl movsl push std inc rorl jns stos ss xchg or xchg orl inc shrl lods pop out xchg push outsb std pop lds pop (bad) mov (bad) je pushf jb jbe xchg in sti lret push ljmp insl push sbb fbld and sbb jmp imul inc mov lahf mov movsl dec ja lds jp in mov (bad) fcmovne sub stos in add (bad) rorl lcall push out outsl daa sub popf pop jbe push orl dec mov and and sub test xchg jl ret xchg add dec orb pop and pop jg dec xlat cmc inc sbb dec aas orl xchg push cmp aam mov xlat push push out mov cltd dec dec adc (bad) repnz sub movsl sub or jo mov cmc bswap mov cmp inc sub adc add or popf pop push or jno roll xchg mov ja sub push adc pop clc sbb sub loopne push mov mov sub mov in pop add and adc xor or mov cld (bad) or xor jno stos sahf les sar loop fwait aad inc lods dec and or ja push fnsave shr lods dec inc dec xor mov jo mov es pushf mov gs xor insl cwtl dec push jle mov and mov addr16 pop stc inc add adc (bad) in clc jmp hlt inc inc xchg and es repnz mov jle testl and xchg lods push (bad) xor xchg add (bad) dec arpl inc xor rorb adc sbb into sti jno inc int push test add inc ret test push je jmp ljmp fwait mov test lods ret ss adc lcall ret (bad) js sahf push push (bad) mov inc adc or jecxz or jbe or push ficomp pop jecxz adc ret add aam das lret std leave (bad) push xchg xchg into inc arpl popf or mov xor pop xchg in pop lret cmc jmp fildll inc xor imul lods into ficom jae in mov jae (bad) and (bad) jb jp outsl add mov popf cmpsb xchg (bad) mov sub icebp (bad) xchg shll dec loop popa enter push mov xor adc stos xchg ja dec movsb inc loopne fistp popa imul in cmp mov adc jle dec icebp stos shll cmp lea ljmp xchg fs nop popa ret inc scas sub lret mov dec inc mov xor xor mov adc imul pusha push lret jbe sbb stos xchg lods xchg fmulp cmp adc (bad) xor inc push xchg adc aam pop inc jl add pushl fdivrl lods (bad) dec dec stc and iret aam lcall add sarb test sub cmc cmp (bad) ret push insb and dec addr16 cmp inc inc push push sti insb sbb ds movsl popa mov mov (bad) pop xchg dec (bad) xor push pushf ds (bad) jbe sbb fsubs jnp test orb cmp jae cmp (bad) and or ret fistpll cmpsb xchg ja mov repnz loope shrb and inc push lcall or leave std or push xchg jle or mov scas fadd xchg mov mov iret xchg xchg outsl ljmp add sbb xchg (bad) and sti push (bad) out loop mov sub mov jne inc sahf dec xor inc mov pop add jmp aad and sbb mov mov add gs xor pop cwtl (bad) fmull jbe (bad) add mov push cmp fs mov and mov xor xlat mov xchg adcb fwait ret lret mov pushl sti scas push aad ret add xchg or mov dec push (bad) je xor pop aas push xor aad jo xor pop repnz adc or rcrb mov out xorl int leave orl imul outsl loope lahf cmp loope pop dec out dec jb mov push adc outsb or mov sbb pop pop outsl adc mov iret les and mov cli inc popa aam fstps stc (bad) ja mov pop hlt xchg repz inc push lret stos inc cmp pushf and cmp dec outsl fwait xchg xor (bad) sbb pop fdivr push inc mov rclb sub imul push push xchg jne xchg mov mov loop or sbb inc lds clc jmp or jns inc pushl movsb cld pop inc lahf mov ficomp mov lods inc imul jmp outsb out adc call lcall add pop icebp sahf or adc fdivr out int and cmp xor add shrb cmp mov mov cmp in cmp xchg xor std cmp pusha mov out mov movsl pop call mov and mov sti je fnstsw and dec sub std sub enter dec mov rolb in (bad) push pop xchg popf inc or push xor fcoml push bnd sbb jo (bad) (bad) sahf mov ret outsl dec push inc int3 inc sbb mov push jno push and or mov xor push shl adc (bad) roll negl dec movsl cmp mov fwait rcrb xor mov push inc jb arpl (bad) sub inc mov arpl adc fcoml shrb or rcl int inc (bad) mov mov push add xorl gs pop adc lcall test orb mov sbbl jns mov leave inc sbb mov outsb inc pop push fstp push push jo jae pusha push push cs mov data16 mov fnstsw cmpsl adc shlb pop (bad) test std fsubp xor dec jb and (bad) out cmp mov jmp cli dec mov clc push insl adc adc xchg adc mov mov rorb jo jmp mov mov aaa cwtl push mov ret imul mov jns pop jno stos or aas jp,pn stc cmp cmp pop jae or xlat mov pop jno pop pop and hlt add imul add rorl aad cmc iret loop sbbl mov scas push xor scas test adc mov rcll mov jmp jno cmp test inc pop pop add stos pop xchg out xchg pop out test dec add cs stc (bad) push and rorb rcrb jle push es popf pop divl pop mov jb sub inc fldcw push (bad) inc push add in (bad) leave mov cmpsl cmp sbb clc or add nop jg lock cmpl pop outsb (bad) daa sbb lods cmp cli xor into xor lods push mov cmp stos aas xor mov (bad) or notb inc insb lret mov es sbb je and mov ds insb es push shrl mov insb cmp fdivs jae mov cmpl inc aaa out dec dec sbb sub cwtl scas scas insb push aad dec mov lock pop fisttpll icebp pop mov xrelease adc js mov add inc mov cmp mov adc cmpsl mov ret and dec cmp push mov test loop cwtl ret jg inc ficom int3 dec add mov xlat mov or pushf xchg or cmp outsb push (bad) repnz mov dec or cmp mov mov inc push icebp pushf div jne mov pop out cmp pop add cmovs xchg aad pop enter mulb out mov mov or gs jge scas dec jp cmp mov adc int3 adc (bad) lock jnp daa (bad) cmc jl les add scas inc and jle call roll xor loope divl pop int3 mov jno out sbb stc cmpsl arpl ret push and imul dec jge and sbb jmp mov cmp adc jge adc loopne jns cmpsb loope xchg dec sbb popf add shll cmp data16 in jno push and mov sti sub popa jnp fist add std inc sub mov push fild fs inc add dec mov jne (bad) push aam test lret fisub mov sahf pop or stos jecxz sub jmp jns,pt pushf scas ret xchg inc in movsl out adc ds push cltd andl inc in ret (bad) jbe andb cmpsb cli sub outsl fmulp int3 pop sbb pop ljmp mov or movsl jl and (bad) pop mov cmpsb das xlat cmp cmp sub outsb movsb mov jmp push lea movsl (bad) adc gs shr dec jp (bad) push pop addr16 sahf jns mov aas add icebp into add mov dec enter mov in dec scas sub mov and (bad) cltd inc (bad) push mov scas js arpl xchg aam fcomp insl pop jle sub push lcall pop pop jg pop add mov rcrb sbb ja xor push negb out popf popa sub pop popl loop fldenv leave sbb mov leave jb sbb aad fisubl stos mov lds xchg xor xor push test aad push iret je sbb subb xor fdivl inc xchg mov ss loopne ret cli dec out shrb dec fistl dec arpl xchg addr16 jl and loope push mov fistl shrl lods sti pop icebp inc lods lock sti dec ljmp (bad) notl repz jge fs lods nop orl repz scas pop fimull in cld (bad) ss sbb mov loop xor and movsb push arpl adc fwait aad out dec popa lahf ret dec inc rcl test mov xor data16 push sub dec ljmp jne pop mov lret mov and aam pusha out dec push rclb cld int loope cltd lds jno int inc inc jnp fucomip aaa out xchg mov mov mov call pop and adc (bad) rclb jbe cs xor fwait push and inc movsl inc cmp jecxz mov mov xor add mov in stos scas or inc dec shrl addr16 out sahf rcll add in mov jno (bad) push and out adc sbb pop sbb out mov fisttp mov dec nop xchg mov shl ret arpl push cld out add lods xchg cmp sub stos adc cmp dec inc mov rcll lahf sbb imul inc adc inc add mov rcr out fcmovnb adc inc dec dec test dec in dec je out xchg sub pop dec jne jo outsl mov es cmp mov and cmp push inc jg,pn pop test call and and leave xchg push jl outsl mov nop rcll sbb mov icebp in mov and scas jbe shrb cmpsl mov fcmove mov loop push sub ljmp es dec add jae scas leave aam (bad) adc xchg xor lock clc adc rcrl or inc rcrl cwtl cltd cmc jle or and push and sahf call fnsave out pop jbe and xor jnp scas jg inc sub movsl dec inc xchg (bad) icebp iret stos fimul sbb dec aad jmp cld std scas outsb jp js,pn bound clc fcoms gs push xchg rcrl scas scas lds outsl push lds mov lds inc mov and xchg (bad) (bad) inc mov xchg xchg xlat jnp jp push mov stc loop xor xor dec mov inc mulb insl xchg lcall mov adc push stos (bad) fs sbb inc pop fmull push shrl push push mov add clc xchg push xchg mov jle daa mov inc test cmp mov push in cld adc push sbb test jle mov test and mov ja inc loopne lret or popa push inc lock sbb mov xchg daa sub mov les push pop sub xor ror aam jecxz aam adc (bad) test or enter cpuid mov cmc scas xor push pop cmp cmp (bad) jle rolb sbb sub jl mov test arpl rorb mov shrb jl and push add call cmpsb and cmp add push test mov jbe adc out cltd (bad) (bad) lret sub lods nop pop fisttpll ret cs or jmp or sub adc je out nop fwait pop sarb and out xchg cmp pop repz jl mov (bad) fnstsw add ljmp xchg jp aad xchg popf ljmp ljmp push xor cmp test (bad) jp or pusha loop inc mov bswap adc and pop popf ficomp (bad) jne push xchg jns dec aas daa cmc clc rcl jno mov int inc push insl mov dec mov jo (bad) mov xchg or loopne ljmp js push (bad) and lock movsl jl notb imul in jecxz sbb ss (bad) divb dec out dec jo cli and vaddsubpd lret fdiv add inc ret add inc aas push jl and insl push jo or pop pop inc sbb xor mov inc out out xchg dec je ror cli jae in (bad) cmpsl loop jnp mov xchg lret arpl test imul adc daa xchg mov mov lret push sbb adc mov data16 dec pop dec (bad) jo cmp ret cwtl push popf push jnp mov rcl fcomps xchg sbb cmp rcl dec loopne ja in insl push test sarb in mov and cs out in ret out mov inc repnz or xor jbe icebp push jno xor adc mov cmc stc loop popa push mov rclb std addl mov icebp dec or mov lods lods je movsl test xchg add xlat sbb inc (bad) rcrl pop dec adc jnp add mov pop dec call lret push pop dec mov insb nop out sub in mov mov jno (bad) lods jp push arpl pop jo test icebp jns jmp (bad) push shll fidivrl adc pop dec gs test shrl test push jl jp pop cltd mov adc daa push fwait mov jae sub stc test gs setp lahf mov push or or sub loope in cmp cmp jbe mov and push pop sahf or (bad) (bad) xchg jns push repz loope push int3 push push out and leave xorl lock icebp rorb int pop or (bad) mov mov jl (bad) jae shr jge popa outsb or lret call cmp pushf pop mov (bad) outsb imul mov push or inc (bad) into into or xchg (bad) xchg xchg jl jge movb iret sub stos jnp push andl add je xchg mov (bad) xchg dec rcr shlb enter shlb std or add push popa iret adc push cld outsb dec sbb mov icebp sub (bad) lcall idivb mov repnz mov add jg out fisttp jg mov ret mov pop adc aam cltd scas xchg add outsb stos roll inc test scas push fstps fwait dec dec in gs xor ss loope dec dec inc sbb xchg imul fsts insl in dec xchg test lcall sub xor add mov xchg jb enter dec sub sub aas fdivl push (bad) enter lcall adc inc inc enter and test cmp add jae (bad) push mov lahf jnp out cs std sub imul jge aad arpl inc mov cli and mov les push movsl jmp insb sub xor icebp add rcrl int3 imul je nop and adcb shl (bad) mov mov les pop sbb push fcompl sahf bswap or stos (bad) sub dec sub arpl pop repz aam xchg xor cmp loop addr16 inc (bad) stc ret insb adc pop and pop scas in jb in in int3 jne mov and inc mov push out cld iret les push call fnstcw mov mov leave aaa adc cmp mov fiaddl jne mov mov in out mov adc scas pop xchg mov fidiv inc aam aam mov loop sub bound mov pop test sbb outsb inc lods mov fwait popa mov std pushf ss pushf stos cmc mov scas xchg insl xchg sbb fcompl sbb movsl dec repnz es and xchg lods ret push sub (bad) xor dec mov pop nop mov adc xor mov push loopne lret jno adc inc and dec cmpsb jg lahf shlb and jnp fistpl cld inc fisttpl inc adc xchg test (bad) pop mov (bad) jne aas aaa push pop add or leave lret mull loope and in cmp cli mov lcall lock dec mov pop pop ret or test enter loop mov xor fcom or mov in repz cmp inc mov pushf je gs in push aad pop mov lea scas xchg testb fsubs pop sbb push outsl call and sbb mov or xchg jp stc push pop jmp scas inc mov sbb push push mov test jg xchg rorl mov imul lahf jae sbb inc push adc dec adc pop mov outsb aas test mov enter cmc clc (bad) aaa xor hlt add pop xor inc out out pop ret lcall lods xorb inc mov sub les jecxz out pusha or sarl jbe xor xor push test and (bad) jno out adc stc or mov jp dec mov pusha fs inc dec push push mov pop ret das out push imul rclb mov mov scas ds arpl call imulb les pop (bad) dec lock xchg inc lods mov pop (bad) mov push pop mov cltd xchg ss addl lock mov mov xor and mov insl in push nop or sub nop enter ret xchg push imul mov xor cltd mov js js sbb adc movsb orl mov add xor sbb sub (bad) mov pop dec pop and test lods popa push fisub icebp in (bad) push adc mov mov lahf inc xchg or mov fidivr push xor js inc adc xchg les and sti cltd leave mov gs mov scas stc fs daa push notl leave inc mov fsubs gs add iret das cmpsb pop lds and mov push push clc aas jb test outsb daa mov dec cmp gs mov ficompl inc outsl jo sub dec movsb pop mov lahf outsb into mov ds dec leave mov mov pop or add std jge out repz xchg outsb (bad) or jae add fstpt dec dec in dec (bad) mov push ja popl dec sub sub in int3 in cmpb sub jno mov outsb shrb stos sub int3 jno scas sub fwait sbb repz aad in sbb adc jl imul add add lret cmp ja ja cli or sahf sti leave mov addr16 sub stos sub movsb subl ss jmp sbb test insb xor divl rcl nop xor movsb jg (bad) int3 xchg arpl adc hlt stos lock jp aaa insb xchg xchg lods ret in es (bad) xor dec clc or cmp lret psllq mov fimul stc insb out clc pushf push stos cmp out add adc and ja mov ljmp lcall cmp jg daa lock sarb or daa lock sarb or daa lock sarb or daa lock sar cmp pop dec mov outsb add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add hlt and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop and popf insl imul dec (bad) scas es xchg (bad) leave mov lcall (bad) into mov ret lods jmp add jmp add jb pop jmp (bad) imul or (bad) xor idivl leave loope aaa lahf jmp (bad) orl or addr16 mov xlat mov sbb jecxz test pop or pop negl pushf push cld or loope aam or arpl pop fcom cmpsl test xor cld inc mov mov test lods pusha push jne xchg lds sbb frstor popa stos xorb and in lret stos sub or loop push (bad) pop or mov pop xchg leave ret jle cmp (bad) mov mov lea (bad) out push jns pxor add shl push sub push cld sub fsub fsubrs enter sub jl aas int mov setle or sbb jae out adc xor inc movb orl mov jo jmp push adc sbb dec shl add sbb push cmp shrl cmp mov cmp push rorl mov inc sbb add aas dec xlat loopne mov mov push dec js jb push stc into xorl ja mov mov lret jb inc outsl stc pop loopne mov xchg jp xor aam inc (bad) fcmovu cltd pop dec out jge pop in xor sub lea push xor cs idivb notb (bad) jno in mov imul in push sbb ljmp add or ret ljmp shl stos jae mov push jmp sub xchg dec add daa out (bad) adc jge inc jmp std subb push xchg dec fstpt ljmp pushf xchg sub add inc xchg mov jne dec movsb pushf add pop (bad) cli aaa add cmp shlb movsb repz add sbb push enter and xchg gs adc dec jae xchg (bad) sub inc xchg lcall pop rol movsl and jmp clc and lds sbb (bad) mov adc lds fstps and push loop inc cmpsb xchg loop jl ss repz add adc dec scas mov ret test mov idiv movsb iret cltd mov scas push ljmp sub je xor xchg push nop scas in inc lds out mov hlt cs adc and and sub jns push mov (bad) (bad) aaa (bad) jbe negb mov subl out push loop incl rcl add movsl clc mov mov or or pop push dec fildl in scas mov out mov xchg xchg in push call mov stos and loopne mov mov sub cmc mov or sbb sub xor xorl or or mov scas mov xchg (bad) je add sub jg int3 and daa or imul cmp shll push inc sbb stos into add mov cltd mov inc pusha sub xchg lock xchg push adc xor mov or dec mov sub pop xchg dec pop lcall (bad) call cmp mov pop mov adc stos push loop lea (bad) in or push sub data16 jnp lahf test jp out jns push fcmovbe rcrb cmp push (bad) cmp mov xor inc sahf adc gs sub cmc xchg rorl push push rcrl push scas sahf cmp jbe cs xor sbb orl test aam sbb sbbl fnstcw or enter popf sub fnstenv test movsb lcall mov ret mov cmp cmp jg aad cwtl fidivrl xor imull mov mov mov popa jo and mov movsb push or mov mov add sub (bad) push int cwtl jg sub pop stc in fdiv xchg xor loop (bad) lods cld ljmp daa add xor xchg (bad) insb dec insl sahf (bad) push pop push sti gs jp mov mov mov mov pop add jecxz pop int mov cs movsb sbb and ja mov (bad) mov sub insb sbb std outsb aad mov (bad) xor inc pop mov jp outsb iret sahf mov clc adc (bad) xlat arpl or mov jmp sbb inc arpl push lea inc stc cwtl rcl (bad) iret or bound push lcall jmp push jbe decl or push enter add sbb push or and cli js lods xchg mul and mov je imul xor jg sbb cmp push rclb (bad) xor cmp loopne xchg ds pop out push xchg add (bad) cmp mov inc into pop pop dec xchg inc aaa xor dec pop subl inc pop jae (bad) hlt cmp push inc mov jge xor scas ret push shrl push mov sub sub adc popa movsb push stos dec outsl je pop (bad) fadds xor fbld negl leave mov sti adc lcall mov push cmp xchg mov loopne or sub sbb pop sub scas mov sub lret popa movsl dec xor je push leave xor cld mov add xchg (bad) lock stos jno xor int enter out add and ret bound das ret mov aaa movl adc fadd or push inc ljmp in arpl les mov add repz repnz enter inc xchg stos insl or test lahf gs arpl aaa into daa imul decb add lret pop dec sahf (bad) and cmp xchg test data16 fs cmp push add push push adc clc pop mov sbb jmp dec out push cwtl mov adc dec mov push xor cmp pop shrl cmpsl das add adc jae inc scas addr16 fnstcw in lods jmp (bad) test loope push jg fwait dec pusha sbb push cmc adc push lret jl into ja jmp inc scas lods out xor xorl loopne pop cmpsb daa push shrb imul push and jmp in imul jg dec shr stc pop in push pushf out cwtl xchg ret shrb mov mov (bad) mov cmpl mov jne push sub movsb or dec data16 adc push outsl cwtl mov pminub mov out xchg mov js jg ja gs incb es cmp clc push stos pop xor or jge xchg push sbb mov fidivr js mov roll clc push pop xchg fcmovnu pop jl xchg out cmp pop push (bad) push pop dec sbb repnz mov bound gs xor pop gs jmp cmp pop fild push imul jle cmp pop mov jns jp push cmp scas cmp out (bad) call iret xor xchg jle (bad) add fisubr lret push mov xor imul test push aam push mov (bad) mov jo,pt cmp (bad) adc lret xor fistpl outsb push pop push sbb addr16 cmp out dec ss movsl mov into sub sahf mov leave dec aam in push jle loope push adc xor popa rorl pop or fisubrl pop push sub lcall pop jbe mov pop push jle jb or fdivrl (bad) sub mov mov stos jbe inc mov loop mov mov xchg sub (bad) cs push mov aad cli mov arpl stc fdivrs pop fsubrl push mov dec in aad enter mov or pop inc inc loop jl xor jae push fldenvs hlt xorl pop in mov movsl pop push and cmc fisubrl fld1 dec outsb (bad) out dec clc mov idivb dec stos hlt inc inc jae movswl add ret shrl pop lret lods cmpsl pop (bad) mov jne pop mov lea push lods xchg lcall je cwtl push mov xor sub lods insl fidiv mov adc xchg fmull xchg test jp imul add daa sbb sbb xchg pusha mov stc test mov rorb pop pop sbb add xchg inc pop enter das in out addr16 in call sbb xor inc into inc jg inc mov in push out and sub pop jge fcmovnu loop mov jl leave xchg mov jns and sub (bad) dec pusha xor in fsubr cmp add addl movsl mov movsl int3 and cmp (bad) repz pop pop pop ja stos and inc fwait jge mov cmp (bad) sbb ret int sbb std inc stos xor loopne insb mov nop daa mov jge or inc je mov mov push mov rcll xor data16 inc mov adc pop jle xchg inc bound (bad) mov sti push jge mov inc sub or inc mov pop or sbb sub (bad) nop out cli sahf jns shl in sub jp fstpt or jmp inc fimul leave add sub stos jne inc repnz clc in loopne dec das inc aad mov (bad) mov mov cmpsb leave mov call push fsubrl pop imul (bad) int ss mov insb inc cmp pop dec mov arpl js push out stos outsb out mov dec scas sub xor clc pop and testl dec pop rcr iret int3 jle frstor push and sbb lds pop cltd ljmp movsl nop out sahf lahf xchg jns shr cltd dec pop ljmp mov inc sbb sbb add in cld test cmc xchg mov fcoml cmp jecxz add sbb fwait insb divl mov pop cmpsb xor cmc and push cmp mov mov pop ja adc cmp jne mov dec enter jge dec adc cwtl dec add sarl mov daa fidiv inc mov ss push ret nop xchg mov test cmpsb xor nop xchg (bad) je adc jmp icebp add stos push mov out jae mov sub repnz mov or jb or push xlat and (bad) mov (bad) lret pop into xchg stos outsl add ljmp cld sub push test lea (bad) imul sub movsb inc or and dec or std add imul out adc arpl imul imul int3 in pop and repz jle inc dec sub scas mov push cmp sbb jns lods adc (bad) mov add jge test cld lods inc xor xchg or inc lret cltd mov xchg lret imull fs mov or outsb daa mov cmpsl stos mov jg (bad) (bad) stos loopne sub jecxz fcomip scas mov mov lds mov into mov mov cld cmp push rolb es or xchg bnd loopne jno xor imulb xchg xchg pop (bad) cld repz (bad) pop pop cld xchg nop jb addr16 shrl scas rcrb clc cmp and xchg pop push jnp ficompl sbb mov xchg fisubrl mov lret jg add test icebp mov int3 mov (bad) mov les in jge daa outsb orl test lods pop sub insb cmp lock sbb fisubr daa xor (bad) sbb mov test pop jle jbe clc push mov (bad) in cmp mov cmc (bad) inc nop mov das outsl cmp jg bound jge inc cli jbe lods mov pop pop lret sub or movsb dec hlt (bad) cmp ja popa xchg xchg mov cmp stos and inc cmp fwait scas xchg rclb xchg mov fidivr jae faddl movl rcrl cld xchg mov cld add sub popf jmp jp cmp fdivrl inc faddl test pop scas push insl test insl xchg int3 pushf imul popa mov jno std adc aaa mov jge push out mov psubsw mov inc ret icebp jbe (bad) int int mov and in or arpl fmull js jecxz adc adc pop xchg daa dec push bsr mov mov loope sti neg sub dec mov cmc mov mov and mov stos xchg call ret inc enter sbb hlt mov (bad) push xchg xor jno das dec loopne rcrb adc and popf mov jge (bad) xor aam jle enter mov rorl cmp jno lods jmp in enter mov lds inc fwait pusha loop push insl (bad) stc fldt sub mov adc or rcl add sub aaa ds pop mov (bad) jns lock sub pop push test cmp pop addr16 cmp cmpsl inc jnp pop push xchg adc mov repz js loope loop cmp (bad) sbb push jecxz pop xchg (bad) out push sub lds (bad) int out pop dec or call incl sub cmp adc sub imul dec dec notb adc icebp adc push pop in add jecxz stos inc jg pop lret bound xchg dec mov les repnz inc imul int mov sbb xlat es jns xor stos pusha add ljmp pusha test mov enter scas or fbld sbb sub sbb push cmp xor loope jmp loopne cmp test mov xor sbb (bad) push mov jmp popf pop stos xor out test xchg bound test mov test push push xchg mov cmp das or adc adc popf and xchg sbb fcmovbe sub dec ja (bad) jb jb sbb mov roll sub sbb sub stc pop pop dec xor (bad) test cltd jo jno movsb add xchg mov adc jecxz adc lea sub rorl dec into fwait inc xor fcompl cltd cs mov sti jbe insl stos push (bad) sbb or pop sub js cmpsl repnz scas sbb rcll rorb cwtl fcompl gs push or test sahf (bad) jle fwait inc push sbb ficomp lret inc imul (bad) push sub pop ljmp es cmpsb daa inc xchg sbbb cmp dec (bad) or mov shll popf out call cmp ss jmp out imul ljmp imull xor pop repz pop (bad) push xchg push fbld pushf inc and cmc mov jecxz lods mov jo scas popa je (bad) mov mov push sbb (bad) (bad) jno cmp int3 inc xchg mov mov aam push nop sbb sti je add imul (bad) sub sarl pop jae jns sbb sub add xchg lret fisubr (bad) sbb mov xchg sahf inc int3 lahf in out and push movsl and outsl ds or dec test ds leave in arpl dec fwait and insl pop lock dec jnp xchg cmpsl jae (bad) jbe leave push sub (bad) and mov enter icebp sti xor lods mov shrb fisub test sbb or xchg iret int3 sbb inc fisubrl mov in jo mov repz decb iret push dec xor mov adc dec (bad) adc mov or psrlw popf mov xchg inc xlat mov adc mov test jbe dec pop test jae jg cmp iret or out stos inc lds call sbb ficom and cwtl or push (bad) mov mov mov loope jmp lcall dec test push adc add fimull pop adc sahf xchg in pop and jge sbb dec push cmpsb in jns fwait mov lods jg mov mov sub (bad) mov mov mov xor out imull hlt sbb pop nop and into xchg das push sarl cmp lcall push sub ss mov test sbb sub mov xor (bad) idiv jl adc imull js cwtl adc jbe adc mov aas les sarl add pop jg dec fs rcrb divb pop popa mov xchg jno addb call enter in sbb fisttp in int3 mov jle xchg or pusha jle mov add enter dec pop adc imul pushf or ja mov xchg je dec and insl add push sbb fwait lret sub and pop mov mov mov sahf sbb ja adc dec loop xchg mov sbb in jno lods and and cmp inc popa pop pop in std add pop sbb nop pop (bad) xor imul pop sarl (bad) and dec mov mov xlat gs (bad) push xchg lods shlb mov in and out or mov dec sub insl inc out icebp push sub out and rolb call lock fiaddl das ret lds ret push cli aad in adc fdivr into aad and insl xchg and lcall aas scas and mov inc clc (bad) adc fcom ror addr16 push mov inc inc fmull mov push cmp hlt cli cmp cmp mov rcl pop cwtl (bad) xor ss adc push xor mov arpl or mov cmp or aaa jecxz mov mov aaa jp xor inc jbe cmovge in std cmp push xchg cltd sub scas ret pop cmp mov or push jne or or push test pushf and jbe lret in andw mov adc test int adc cmpsb (bad) cmp inc fmul popf scas (bad) cld mov dec dec mov add jl mov pop repz xchg mov ret push add gs (bad) xor dec fisubrl adc sbb decb jmp into dec cli cmc fdivl ds (bad) int jb iret je sub lcall in xchg lods dec popf stos mov dec subl dec jb daa lcall push cmc pop incl push scas push cld push int xchg out sbb (bad) ret cmp fadd cmc xorl jae fist mov mov jae sahf adc dec mov (bad) mov sub repnz or mov mov dec mov addb add (bad) sub xchg clc out ja adc jg pop movsb es mov add dec ficom repz inc hlt lret sbb push in mov jae fsts xchg jmp daa or pop cmp stos mov mov rol repz lods fwait data16 and sbb clc jle pop movsl sahf mov xor (bad) pop sub pop xor xor xchg and clc push arpl ret decb lret dec int pop out fadd dec dec shl mov jne inc hlt jnp rclb mov arpl mov push mov stos lods call pop notb shrl xor cmp and dec sub and shlb mov negl dec stos enter daa mov stc ljmp mov mov gs test int (bad) mov xchg lods mov and shll mov int3 xchg sub sbb (bad) test pop fucom ret notb cmp jb lods xor movsl call jo popa jbe mov xchg inc mov popa lods xchg outsl insl push mov loop xchg arpl pop jae cli add jp ficom std (bad) das adc sbb jb and insb push scas aam push jne jp cmp and and mov sub je and push sbb loope (bad) jo sbb mov xor nop xchg inc ds cld lret xchg daa lret lret jge xchg popa into push dec popa (bad) adc bound cmp mov sub out fsubrl (bad) xor sarl imull dec sub scas fs sar enter xor dec xchg dec pushf mov popf inc les sbb (bad) lahf jle xchg inc jmp push sarb rcrl adc sahf xor into push daa pop inc rcrl daa iret in jne inc push ror bound (bad) push pop and pop push (bad) sub mov mov jnp xor mov cld lock or xchg je lods call fstl jmp popa loopne or clc into or cmp jp dec add mov pop rcr dec mov movsl jbe sbb pop daa lea push pop pop add insl mov cli arpl xchg lcall mov nop sbbl (bad) addr16 clc icebp jle loope jne arpl jbe lcall arpl mov (bad) sub mov test add imul sub inc test xchg insb jb add out pop push xor mov sbb (bad) pusha dec mov popf leave (bad) call xchg ds push inc jl mov stos cwtl or jo xbegin push (bad) fnstcw and ficompl in pop out sbb sbb lds (bad) mov push jne test arpl and pusha cmp mov inc (bad) xor pop stos lock scas jg cld in fcomps fbstp cmpsb dec dec cmp arpl xchg xchg (bad) fdivrl pop adc mov insl js insl sbb aad ret lock cld fsubr or das mov jge mov pop (bad) mov iret lret (bad) ljmp loopne pop in rclb outsl int3 stos adc mov jp lahf ds cmp scas inc daa aas iret inc daa xor sub ss std nop push cmp test (bad) (bad) aaa inc fadds bound jnp lea add sub rep (bad) bound and out cmpsl rorl fisub sti add jnp orb inc dec sti ret inc repnz pop sub mov sti (bad) sub xor stos mov cmp out movl lods cmpsl adc (bad) ja sbb aas pop scas pop loopne mov and push sbb inc jmp dec mov in fisubr xor sbb adcb jge mov imul or lds pop lods mov insb mov or lahf mov addb push daa outsb cmp test push xchg roll push and pop or pop cli push xor sahf lea xchg inc mov cs xor out xchg sti sbb mov test das jp fadds stos lret and lods adc cmc jo fidivl lcall inc aaa and pop add loop nop mov fildll push popa insb fistpll nop je jbe add dec (bad) jae and mov or pop mov mov stos jns xchg mov test sbb icebp sti popa fldl (bad) aam rclb mov lret push insl mov dec cld add mov test pop imulb add mov jae adc mov mov mov test addl (bad) adc fsubp lds xchg mov mov dec adc cmc out xor shr outsb shlb jge scas ss lcall and push fwait mov aas repz sub aam mov xchg call lock add xor and mov pop pusha fsts lcall mov jae xchg fidivrl inc scas fcompl je (bad) dec cmp imul xor arpl and adc push fwait iret addl or ljmp aaa loop aas add fnstsw enter mov pop dec sub int3 sub dec sub inc into push ret (bad) std fildl pop (bad) xor sub rclb mov jae or (bad) push ja popa mov and arpl mov (bad) mov rolb loop int cwtl in insb movsl (bad) test cmpsb stos sbb subl sub addr16 out inc lds insl xor lds add (bad) orl mov jae aas fcmovne jnp and (bad) scas test mov xchg js (bad) jecxz push push in push jmp mov inc and dec popa xchg jb in scas cmp mov push insl mov mov int mov daa xchg pop fwait lcall dec jg decl cld daa lock sarb or daa lock sarb or daa lock sarb or jg clc aas mov clc xor sbb add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push inc sbb xchg insl imul pop outsb jns (bad) repnz in fs leave cmp fnstenv xchg insl fwait stos xchg insl jmp mov ret or add and mov in repnz aad lret cltd jp mov cli sub sbb stos dec adc sub rorl push sub add xor mov lods push fnsave punpckhwd out sub lock daa mov in jecxz dec fistpl stc inc lret stc movsb lds add lods mov out push cltd (bad) xor pop lea (bad) xchg lcall jns cmc aas lock fucomip cwtl lds and mov adc scas sub dec mov ds xchg dec out sti xchg mov jl and addr16 lods ljmp sub mov xchg pop outsl jns mov mov pop sarb push or lods jno push and push push jb and insb cmpsb adc stos rorl shll cmpsl test clc cmpsb stos sbb iret fcomp xchg cltd ret adc push rcr jecxz aaa sahf sbb mov push and daa sub pusha sub mov pop lds dec les sti subl push push cmpl leave movl sbb imul inc je in jbe scas and sbb xor or jg dec sub jae dec movsl scas stc and jno lcall fstl int xchg sub adc pop xchg dec std mov jge dec int3 mov fwait mov pop out je fs fdivr push or iret cmpsl and out push fisttpll jge sub mov int sub das cld add jae sub fcompl jle cmp inc inc jmp inc jg mov ret mov jl jne imul scas icebp lahf jmp mov rep in in les fdivrl stc xor or inc stos xchg inc sbbb sub mov fdivr das or mov xchg push sahf sub pushl dec pushw pop loope cmpsl xlat ja lahf or loopne pop inc mov lret mov push outsb out hlt jnp sbb lods push fist into adc adc push or xchg (bad) adc lock adc addl lcall sbb out mov xchg and rorb subl int3 mov push push imul lahf out lret clc fmull int3 mov out mov enter js iret nop int3 sbbl push mov mov pop decb lret bound (bad) dec (bad) pop fcomps es dec or lahf bound in ss pushf jne call fcompl or and aaa jl mov cmc cltd sub std adc add test ret stos or xchg xchg sub lret xlat mov lret jle sarb out jmp sub outsl and (bad) icebp xchg or sbb fstpt push test lret lods sbb jne adc push jmp sub mov xor inc jg mov int3 stos das fisttpl shll jae fcompl enter adcl dec jl lahf aaa or pop fucompp arpl pop (bad) mov frstor insl dec sub inc std sbbb jmp xor jge cltd mov outsb mov out adc imul sbb xrstor ja mov adc cmp mov sti mov outsl jp dec mov or sbb cltd adcl jmp leave fimull pusha inc bound and neg sbb add ret mov pushf xchg std push das fwait adcl std sub inc ja xchg movsb (bad) cltd sub pop xor in nop or add je jp mov cmc or inc inc cmpsb pop in fbstp mov xor shlb and das push xchg xlat xchg add mov pop rorb mov pop das sarb mov xchg shrl and mov popf lahf sarb dec add aas xchg cmp pop sahf movsl jge cmp fwait cmp lahf loop scas adc popa addr16 inc mov cltd sbb lods sbb lea add out mov pop aaa jae inc cmp dec mov add lock out rcll xor pop and jno pusha mov pop jl push sbb les jo jbe fsub data16 mov mov cmpsl push xchg clc push lahf out scas jbe cltd clc inc movsl iret hlt jno ret push mov sbb daa pop mov dec sti add inc mov test test cmp stos xor (bad) fisttpll push pop mov loopne mov out divl (bad) lock lds (bad) jecxz sbb loopne cmp pusha sub rorl out jmp outsb pop movsb inc inc insb cs mov pop mov ret adc and jp cli jle jae xchg fdiv cld and push inc sub jnp (bad) iret rorb sbb pop negb int dec ds or jb fs loope cmp push mov lds sti (bad) icebp pop push push sub loope cld inc mov cs aam lahf adc rorb mov ja jno pop jae lock cltd lods sub rcrl popl sub inc bound xchg sub mov inc adc cli scas jb or out sbb fnop jns ficomp jmp outsb hlt mov into sub rcrb jno inc insb ljmp lock adc xor insb je mov or loope in aas cmp out dec mov into lock cmp enter loop jle cwtl cmpb out popa insl ds push popf cmpsl in int3 cmp fbstp pop mov push jne sub fstl adc pop push in xlat lahf out jg cmp push cltd icebp push pop in (bad) dec sub sub sbb dec cmp dec push cmp jmp add fbld fisubl loop shll lods imul in cmp jo pop dec popa inc mov and and (bad) into pusha or cmp into outsl adc movsb xchg fs insb gs iret movsb loopne fsts sub insb clc mov cmp and mov fwait pop (bad) insb popf mov inc pop and pop shrb xor fcomps sub dec jg sbb xchg out mov mov push lods iret (bad) ss or cwtl fsts sbb push inc xor ss roll ficompl pop pop mov mov mov push mov sub das inc cs xor (bad) in pop stc loope insl add and inc scas jne dec imul (bad) push xorl stc dec pop (bad) dec sbb xor jb rcrb cmp stos popf add movsb sbb addr16 mov sbb fisttpll or xchg stos ja addl int adc rcrb cwtl iret icebp cmp mov idivb adc cmp sub fwait data16 pop in or jecxz std pop lcall xor dec pop and sub test (bad) cmp ds je fmull imulb popf jmp xor (bad) cmp mov (bad) mov xor jmp cmp dec dec js sbb lret xchg xor andps push lds mov adc push lahf mov mov stc dec mov out xchg lods mov pop ds pop pop or imul and loopne mov pop mov imul jp pop pop dec in call mov jp bound repz or popf mov (bad) movsb mov negb ficomp sub sub daa jle push inc bound int testl cmpsl popa mov shll mov ljmp push mov movsl rcrl iret push das pop nop inc lcall add or sbb insb mov cmp cmp cmp lret gs inc fisubl icebp (bad) nop sub pushf add nop cwtl iret inc sti push mov (bad) jmp and int3 mov dec lahf aad ljmp lret adc inc ja fwait int add pop mov ja jecxz inc pop mov pop int enter fsts xor xor (bad) jmp push iret mov fdivl pop outsl sub inc inc pop jnp jmp movsb pop je repz push dec mov daa pop xchg adc adc stc stos or xor pop int3 push out scas add push imul shrl imul aam push lahf xchg adc pop lea scas mov xor lret mov push push and adc test outsl test cmp mov dec dec mov mov push inc jge xchg and out jp pop jno push cld or mov add sub inc mov testb or lods popl test xor jb test movsl cmp cmc popf (bad) or inc jnp mov cvtpi2ps dec aad lods pushl push push (bad) cmpsl adc lahf push movsl mov add add xor (bad) xlat out aaa cld ljmp dec popf fisttp insb sub scas and sahf movsb addr16 je xor mov fbstp dec rorl mov pop imul (bad) lea or sub mov cmpsb lcall hlt fidiv push lock pop mov adc outsb or stc lea adc dec lods pop sub inc (bad) jae dec mov lahf outsb test dec ffreep (bad) or dec adc out jmp sbb mov pop repz inc jno das pop mov xor sub pop jbe addb leave lcall fild lds xor inc mov push lods lock nop dec in jg push outsb (bad) sar dec std pushf push xor lret imul and xor outsb jecxz inc test jmp or xchg mov fmuls mov xor xor mov jbe jp push das mov pop mov and add xor sbb xchg (bad) stc mov mov fcoml pop fcmove mov mov jge (bad) loop jne push cmpsb mov dec and cmp bound movsb add es mov pop push mov les (bad) mov or enter add xchg fbstp inc inc sub sub jge icebp insl clc (bad) push loop loopne outsb in and aaa js fstpt cmp inc xchg push mov jge cmc cli push outsl push sub xor add andb sti lahf mov popa inc in xchg lods dec test or int3 daa sbb mov lret out pop shll decl fidivr (bad) ja fs mov jnp arpl scas mov subl fisttp mov mov dec cmp push mov outsl mov sub ds rorl mov mov data16 repnz xchg test inc jle sub pushf cmp pop out mov sub dec or mov out (bad) mov es popf pop adc mov inc movsl (bad) sti push jg adc rolb sbb and sbb imul inc lock jno and punpcklbw dec arpl jp sbb fisttp cs into test sbb xchg mov pop ret js jae or jns mov xchg jg addb ret mov jge sbb lock jle les mov fldt insb rcll push inc push jge call and inc les jnp xchg jo lea jb mov outsl pop faddp mov stc fcmovnbe sbb adc cmc out add xchg push cmp les xchg mov sbb cmpsl out sbb movhps jns (bad) test addr16 sub xor fnop repnz xlat test test or or pop lods xor push incb idiv push iret clc aam jne sub jb or sbb icebp sbb popa mov stos add enter into jne jge sbb (bad) mov iret pop mov movsl fistl stos lcall inc cmpsb pop jne sub push cld xchg xchg sti dec sbb in imul aad loopne sahf sub mov sarb xchg or outsb adc shlb (bad) and ror fneni(8087 in jo movsl xchg mov dec cmp fs cmp shlb fldt and sub inc arpl mov mov mov mov push jle jg pop das push popf and xor enter add pop cmc mov nop imull addr16 lret jmp and shll js push add cmp (bad) fsubl test jl add jnp push outsb mov mov outsb scas push and bnd (bad) (bad) jecxz push cmp add dec mov xchg imul out es bt pop dec sub mov sub or pop movsb addr16 mov out xchg repz (bad) in pop mov rcrl or mov arpl push adc xlat push cltd pop fildll push rclb imul mov sub pushf jno sub nop stc jp cmp cmc fwait (bad) mov rolb in mov inc lock sub mov jle inc push sub lds iret out jle inc ret or jbe xor mov dec out push push std mov cmpsb mov jno fs mov inc sub popf mov roll sti sub cld cwtl loope out outsl jle test and and out fiadd aam stos hlt push (bad) jge sub pop insl aas sbb dec fsub add push (bad) addr16 and add xlat sbb cltd mov es out push enter inc dec imul sbb sub je jp iret dec jae adc or adc clc xchg dec push out jmp mov movsl jl es inc xchg jno mov int mov popf fsubs mov stos stos stc jle imul mov mov xor arpl pop lret jp out push mov imul xlat pop add dec sub fwait inc sti js ljmp mov dec in popf insl pop mov jbe hlt inc std push imulb fbstp xchg cltd inc add addr16 in mov adc mov xchg pusha repz pop adc mov out (bad) push (bad) push push dec cmp out ds lret push je (bad) push mov xor jo loop cmp (bad) jne dec mov pop sbb movsl cmp push out or adc xchg adc inc xchg push pushf cmp mov pop sti or xor sub lock es mov fmulp push negb xchg lret negb sub jns cmp fnop std mov jg loop lods ljmp sub xor (bad) leave adc cmp lea xor mov aaa sub xchg jmp cwtl js popf push dec les pop mov (bad) mov shrb cmp pop sbb adc test mov data16 fwait add dec adc add sbb lods popf push sub jbe xchg sbb movsl cmp mov repnz std or popa inc shll mov sub mov aad lods setg inc into sub fild hlt lock adc mov pushf fisubl in pop cmc inc fisttpl popa sbb cwtl sbb cmpsb in cwtl jno lret mov mov das cwtl aas pop mov aaa xchg enter aas aam xchg push pop add leave fsubrs push sbb ds scas or sub sbbl pusha mov test push punpckhwd fcmove push fwait pop sbb cwtl mov add or and jp fildll fs pop in and xchg xchg int aam popa jecxz mov je jno (bad) (bad) lods push dec push movsl mov sub ret pop sbb cmp lods cmpl (bad) gs jecxz add lods leave xor ljmp into jbe sub jno nop adc jg xchg mov cld or out jle insb pop inc sub xchg xchg in repnz int3 inc adc ss sti aaa push iret push mov mov jg or xchg xor aas test adc insl sbb push dec and imul inc cmpl insl fwait lods adc jl xor divb xchg mov pop push fist mov jg mov addr16 test imul mov rcrl mov jnp add sub hlt adc add xbegin (bad) mov test mov lahf (bad) (bad) jb push movsl jp aas popf xchg jnp or push sbb mov dec adc jne push std lcall mov inc pop push ss addr16 cmpsb mov test and push int mov js jbe add out ja mov push (bad) ss sub test mov ds pop fisttpll cmp pop lds in popa dec and fildll popa mov xor int3 jbe mov jmp psllq stos inc push cli xchg cmp push add cmpsl rol fmull add les mov inc pushf ljmp leave pop sbb mov ret mov addr16 xor test cmp mov shr jp xchg inc add mov lock xchg or adc stc popa movsb xchg cmp ret int3 mov dec add loope sbb iret repz (bad) and lahf push cmp divb imul push xchg pop rcl les pusha hlt and or fadd addl and std inc cmp lods mov lahf dec or int3 js adc adc ds dec add mov or mov nop mov or das das push inc and mov mov and inc movsl nop mov (bad) mov mov or jb xchg jae lcall inc loop or mov and test xor dec push repnz jle dec fisttp push leave mov inc jae loopne scas pop sbb out jl mov lods push (bad) mov and leave or cli mov cmp test gs dec cmp mov mov inc inc into scas jbe fistp mov xorb mov bound call daa mov sbb adc and adc and es jne jns test mov mov add int dec dec add in xchg pusha mov or (bad) cli adc pop mov mov loope ljmp aas fs (bad) cli std adc or mov and insl sub cmp repnz push dec mov xor xor imul lods dec movsb jle xchg cmp adc jmp popf pop sbb (bad) mov mov addl mov or mov xchg xor insl test notb mov and sub mov xchg idiv dec orl fisubrl lock subb push adc into (bad) fistl negb out aas fisttpll cmp icebp fsubr stos mov xchg test int stos dec or xor inc push xchg cwtl in daa pop icebp (bad) nop les push add mov push lcall lahf lds inc pushf test mov pop mov or ret cs inc jno scas sub imul stos xchg add mov (bad) lods adc jecxz mov jnp mov popf sahf cmp notl sbb (bad) repz adc outsl rclb repnz loopne cmp scas mov pop mov sbb push mov dec mov xlat stos addl daa mov aaa sub mov xchg xor es push sbb and hlt leave arpl and xor cmp aaa mov cs lds lcall mov es imul cli popf xchg out xchg jbe loopnew imul jp iret leave mov (bad) stc add addr16 es roll rcl pusha (bad) (bad) roll fist inc repz andl icebp xor jmp mov shrl je out icebp data16 dec imul ret fnstcw adc push das sbb adc xchg scas jl push jp das add push call sub pop jbe movsl je out outsb pop pop (bad) cld repnz fwait jo loop mov xor xchg out jecxz (bad) inc imul mov jp mov (bad) (bad) fstps popa loope iret push jle jo mov clc dec xchg pop int3 xchg push pop enter and (bad) out lods cli (bad) xchg int3 aas xchg adc push push xor mov js or in mov mov outsl pop fwait jne dec daa cs xchg xchg mov faddl push mov inc lds push ljmp mov xchg dec pop jnp call dec (bad) inc push xchg mov or ja in mov fmulp cld dec lcall pusha mov dec in add outsb xor and test push or mov xor clc lahf ljmp loopne in inc stos pop cwtl mov inc adc clc add lcall int or dec dec sub je jb iret pop test call cltd repz nop gs or (bad) mov adc mov lods (bad) cmc outsl inc mov sarl and pop jnp sbb add je loope test inc push push sbb jns leave add xchg ret loop sbb js cld mov mov inc loope aam jnp ret (bad) mov mov mov fs addr16 mov push movsb and pop je outsb ds cmc and ss or xor adc (bad) sbb cld movsl jl repz jg (bad) mov fist inc sub test and pop push jne add addr16 mov test or (bad) adc lss cmp sbb fwait add sub add movsl adc sbb mov xchg push das sub xchg mov fwait push arpl ss cli ret nop fs insl imul movsl rcr int3 arpl pop inc addr16 movsb cmp push xor dec lcall mov leave sub out jne ja xchg inc lcall cmp cmc fimull jmp sbb les mov mov sbb mov xchg jno je stc push out xchg jge mov cmp xchg (bad) cmp dec mov dec xor mov imul adc pushf popf call dec sahf in imul (bad) push push mov inc xor mov leave enter fstps mov cli insl pop jae cmc int push es mov mov or xor cmp ds fadd sti xchg leave xchg in pop rcl push rorb jg xchg push sub fistp sahf push cmp insb push inc lea stc pop ljmp xchg inc sub inc icebp push mov out test mov lahf xchg mov (bad) push repz arpl inc mull jne cli daa adc add outsb mov xor mov add adc rolb out push (bad) enter faddp clc icebp cltd sahf mov scas pop and xor push sar test lcall stos loopne lahf loop inc push sti mov pop pop and dec add inc ja (bad) ljmp int3 push lea xor push add sbb mov test arpl test test push dec test sarl push and push mov test or insl imull (bad) sbb sarb data16 fwait aad mov jmp and or inc xlat xor dec ss ror mov push pop std (bad) loop dec stc jle fisub hlt sub mov dec and es mov aad bound mov mov sti test imul cmc outsb pop and sbb inc dec sub push add mov lret mov ret xchg ja (bad) aaa pop inc mov icebp or push add popa pop (bad) push ret stos xchg repnz jo bound mov lahf pop xchg inc inc jo mov dec test ss push mov add ljmp lds nop ficompl ds mov jg xor aad out mov stos rcll in ljmp pop mov test lret imul in push or mov push cmp mov enter xchg loop mov (bad) pop jns sub pop mov addr16 insb dec jo mov mov fsubl idiv (bad) xor ret movsb sub lods or mov jae fild test imul and cwtl cmp in cmp pop pop int3 stc (bad) sbb inc mov cmp mov xor (bad) sub js jg lods arpl dec or cmp test iret push cmpsb mov int3 xchg nop aad dec lcall out arpl rcll dec leave sahf nop dec xor push push mov popa cmp aaa or xor insl mov fiaddl cmp roll adc and call fiadd mov cmpsl (bad) mov enter sub xchg (bad) (bad) call (bad) cli dec loopne cmp dec loopne cmp dec loopne cmp dec loopne cmp sbbl lahf add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add clc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov lea inc push push push sbb fwait insl sbb (bad) repnz (bad) xchg outsl outsb fnstenv sbb mov std cld pop fistpll into jns jns js add add pusha or mov push cmpsl pop (bad) adc xor pusha xchg out xchg jmp imul push je lea shl xchg cs ret dec call and jno push mov rorl int int dec aaa jns push mov mov sub int3 arpl out pusha outsl push mov jle jno cmp sbb sub dec andl adc out ja cltd das test sub pop jo fsubrl stos push or fdivrs (bad) scas adc pop and leave mov jnp out ss adc jnp pop aas jae sub cmp xchg push idivl scas repnz pop cmp mov cmp xchg (bad) movups stos scas fsubr out jb mov jmp insb adc push out xor sub mov icebp imul adc lahf out aaa int3 nop mov jne jnp loopne dec dec sbb mov jge sbb xchg mov inc pop mov bound ljmp and xchg enter ret and (bad) and mov pop orl mov mov add mov pop jo out push mulb imul sbb leave adc or mov xchg cli and sub stos out sbb fwait jnp (bad) mov pushf inc mov repnz lock mull (bad) xchg push push sbb push sub fnop sbb sbb clc cmp adcl fistp mov pushf test xor mov jae fisub cld bound data16 loop push mov sti or push je and loopne (bad) in popa push data16 ret sar inc mov mov movsl cs pop or and mov cmpsb add fsubl call xlat jp mov bound cmp (bad) and in mov (bad) fldenv sub cld test xchg push sbb mov mov inc sti daa imul adcl test insb mov outsb (bad) decb nop push (bad) enter xor xchg cmpsl or or mov enter or fwait jbe andb push sahf xchg icebp dec les jl push mov mov push insl test dec call les hlt fcomps inc inc aad or ja jge and add pusha push cmp lret fnstenv outsb scas cld push fs (bad) add adc (bad) sbb jg inc xchg xor jp repnz sub ret xor scas or cmp adc test and out add cmc add loope mov (bad) mov or jg inc loopne stos cmp icebp mov jge push adc test fs and jg lds push scas and in mov push jmp mov (bad) cmp push mov push or adc jl adc fs notl iret xor fcomp sbb add ret dec arpl push arpl lcall lds cwtl imul add or into mov icebp mov xor fwait pop rcl adc test lods out lods cltd daa movsl sbb mov icebp jb sbb lods lret inc dec scas sbb pop mov jle aam adc mov push addl ja repnz cli pop mov mov je jae sbb cmp into mov cmp cld lods or adc push fs jo cmp sub inc dec xchg xchg mov push fstps stos sub js outsb (bad) in lcall mov (bad) in mov and mov mov jae fisub iret cmp (bad) xor loope dec cs and mov cmp sub std mov cltd or xlat sbb dec push sub mov push sub sbb mov mov jb jno add std js mov das cltd push cmpsl xchg push sar xor fnsave in loop,pt jl out pop jnp dec or cli (bad) pusha xchg jns movsb or out sbb sbb loope mov cmp je ja xchg inc jge sub sti bound or mov mov (bad) dec hlt mov jg testb mov aaa in sub and sbb (bad) cmp insl cmc loopne (bad) movsb in xchg mov push movzwl push or js pop rcr out xor pop scas or jo sahf call xchg dec adc ja cmp add jns pop ljmp fadds enter (bad) int enter dec out or (bad) aaa fisttp mov cwtl dec std sub or mulb aaa sbb jmp scas fisttpll call sub test repnz insb dec aaa xlat inc push test and insb je xchg sbb push sub mov adc hlt aad cli outsb dec fisub addl fild jle ror jle inc cld push scas mov std repnz sbb insl in mov mov mov in loop sbb cmp mov leave imul mov add jg jo and or shl (bad) int pushf jb xchg ljmp inc fnstsw xchg rcrl ficompl sbb (bad) cmp add inc rcr sbb aaa std xchg xchg fisttp jp jmp jnp adc jmp mov insb pop sbb psrld int3 xchg dec loope outsb fnstenv mov pop and popl xchg and mov cmpsl lret lret aas sub mov imul cmp hlt ljmp and repz js dec cmp scas ja int dec repnz das ja fsubl std sbb and pop shrb cmp lahf lret mov pop pushf sub xor xlat cmpsb lods pop std xchg push cmp inc xor sub cltd push testl jge cmp dec leave call fs add or ljmp adc rcr lea mull cmp inc add adc test in je daa ljmp addl incl push jecxz jne rcrb icebp mov mov inc (bad) jmp icebp repnz mov or inc out aaa sub mov (bad) sub jle push loopne in xchg mov jnp cli ret push xorb push jle subl jmp leave dec (bad) rol jl sbb cmp xchg dec mov mov inc mov loope icebp jl in dec pop (bad) bound fisttpll jle arpl int mulb lea mov inc aad (bad) data16 scas rorb out inc pop movsl lahf or adc decl and sub push stc push lahf xor sbb sbb cmp sub pop push pop cmpsb test inc frndint addl arpl and stos push out jp push mov rorb mov or lret xor nop (bad) bnd xchg loop add pop pushl pop cli inc in and in mov stos sbb lock fisttpll add mov xor and xchg push pusha xchg repnz jo sbbl test imul negb jecxz fnstsw dec ss jne stos das cmp mov mov (bad) rcrl xchg mov jp fs jns dec push lret lret cmp js xchg cmc and (bad) movsb xor jecxz mov sahf and out xor cli imul mov sbb fldl add or cli dec mov int imul jge sub or xor push les mov sarb pop cmp mov lea negb cmp mov mov (bad) cmp xchg ss jae flds aad bound jne jp mov dec xor or push in inc imull xor or sahf dec mov mov inc mov (bad) cmp (bad) negb std push inc test ljmp iret ljmp jns inc jnp cli mov fstpl leave mov sbb adc xchg int inc mov mov push sub jecxz lahf or xchg dec aas push cli fnstenv push ljmp (bad) out rorl mov jbe sahf mov add dec mov outsb cli xchg aad insl inc jmp call shll cmp cmp loope pop push dec xlat and fdivr fidivl mov cmp pop push arpl push aaa int3 div repz (bad) icebp sti outsb adc mov xlat inc push pop fstps mov rcr cmc lret xchg jmp nop ret or loop mov jg sti fisubl jp xchg xor arpl in add pop je xchg pop add push mov int3 lods push in pop adc rcrl adc push insl mov adc lds mov jae mov adc and cmpsl movsl test xlat mov pop fisttp pop shlb cmp jo dec aaa push test mov push sbb sub cmp xor pop int jl and pop js mov dec push inc cmp adc jmp out dec test loopne push movb and push and fsubrp xchg jno sarb or (bad) movsl mov dec lahf sub jp dec popf aad cmp in push pop rol and inc lods mov and std jmp mov mov mov sbb mov sarl mov pop notl pop cmp sub (bad) fcmovb mov testb cmp aaa xor dec loopne xchg out lods pop arpl int3 lret jmp adc loopne xchg cmp mulb insl pop inc pop xchg mov shll pop xchg ljmp dec push mov xchg or xor rcll or or repnz sbb (bad) fdiv lret aas lock or xlat mov ljmp lds imul xchg pushf or data16 fistpll adc lcall xor dec and daa dec dec push insb stc je mov ljmp addr16 roll cltd sub mov imul sub (bad) ljmp inc and adc and ljmp add jne xchg inc push xchg mov push or (bad) mov mov adc mov cmp xchg insb or xchg mov enter rolb clc push test mov sub inc std mov (bad) jbe insl std aaa mov sbb test cmpb cmp movsl les dec or in std jnp fbstp loop test jno cmp ja and scas dec mov mov cmp in xlat sbb lahf mov cmp push in (bad) xor add cltd push cmp (bad) sahf mov stos retw or sbb (bad) ja pop mov mov push jne push push (bad) cmp loopne pop lcall pop adc (bad) ja pop inc je dec inc xor cltd (bad) je roll popa pushf lods pop cmp negb lods push mov fisub imul sahf or cmp inc mov movsb add testl jmp mov (bad) pushf mov icebp lods call xchg ja mov negb frstor into cmp mov int3 xchg pusha (bad) pop add in adc pop add (bad) mov adc mov test test and push pop imul xor lds in dec aaa pop adc repz mov fistl adc out lock mov insb mov popf adc xchg outsl clc add inc and sub mov mov test jae scas bound (bad) push cmp test test int3 mov orl icebp rcr mov xchg inc dec or push es pop fstpt jmp ljmp pop mov bound cli out sub out and push movsl int3 gs loop jge pushf jns jle sbb push in in xor jnp std lods pushf xor sub les hlt mov mov rcll jb or fs loopne jbe jnp push push inc sti sbb sub or (bad) out or jge ret call aad push lods jne lret rclb test mov bound data16 out sbb jns aaa and pop call add add jle mov int int adc inc int3 scas cmp into daa stc pop inc or out bound fistp in xor hlt mov fsubs addr16 add xchg adc cwtl lcall sti ja inc testb lods lea rolb popf xchg jle ldmxcsr mov cs (bad) fnstenv ljmp (bad) movsl add dec inc mov mov inc add shr icebp jle ds jbe outsl test sub add jg mov lret push and pop push mov or push sbb mov leave cwtl pop femms jmp (bad) outsl add xchg leave jmp pop cmc push xchg inc outsl call push int3 mov ret xor roll and lods aad adc jae xor and or aaa inc in rcrl jbe adc mov adc mov push pop loope ror sbb mov cmpsl out xor imull jnp adc in push mov mov movsb cwtl jecxz imul push test decb mov ds sub fadds mov insl and fimull xor in push sahf fcmove adcb jae push lods mov sub push add les daa jnp shrl sub aas sub repnz mov adc lds mov mov adcl xchg dec jbe push call sub insb sti lods ds cmp jne mov ja lcall or jge sub vpcmpgtd cmp outsl out cmc stc mov lock adc in call push jne xchg cmpsb (bad) adc pop xchg mov js iret and cmp dec mov add mov shll dec cld push jmp pop jl sbb sub arpl orl push fsubrs (bad) jbe mov out out xchg and dec mov lods call in mov pop jbe ret xchg test (bad) and inc mov addr16 movsb int3 pop call push xor test xor pop mov mov nop gs lds jle dec cli scas push rcrl lock mov push mov adcb outsb lret sub sub cwtl sbb xchg pop mov mov mov jnp cmp add pushf outsb cmc (bad) mov dec pop fcom xor add mov sbb mov cwtl (bad) sub mov fdivr rcll mov adc in lods adc sarb mov repz xor scas jmp sub out inc roll mov in ss mov mov hlt sbb test cmpsb rep cmc adc cld (bad) mov mov into push (bad) rol lea movsl cmp push arpl fdivl orl icebp pop arpl lock add cmc cmp rcrb sub mov (bad) fadds and or pop sbb lahf adc cltd inc jl xlat mov cmpsl add ret mov pop cli cmp mov mov lods lahf sbb push cmpsb inc push sbb dec in int fcomps out add adc xchg xor insb mov pop inc sub fs out sbb (bad) mov jo loope mov lods jl mov jbe insl je sbb movsb jae mov xor test cmp mov sbb jo pop std lds sub mov or das roll out cld mov negl mov sub adc ljmp sbb lds arpl jp test cmp sbb mov push or add pop icebp jb bound xor mull jbe xor stos pop testb pop insb pop mov cs jmp imulb sub or lahf ss mov push inc adc mov stos dec incl add inc test push fisubl lods and jno andl jl adc cmc cmp inc fucomp popl lret dec fimull lahf push adc insb rcrb push xor decl lea hlt insb mov xor mov inc ja dec cmc test outsl cmp mov int jne popf arpl and out fcoml push jbe adc push loop inc fs cmp pop aam lret subl dec mov in outsl inc xchg int mov repnz movsl adc push adc stos xchg mov jecxz mov mov jns aaa mov mov std sbb sub push int fadd fisubl push inc pop mov aaa mov stos stos xchg dec push mov dec mov push aam stc and fwait inc mov add insb mov (bad) hlt lods jbe out mov or mov pop push fadd mov jg clc and jp repnz push mov cld sub out imul nop mov outsb or pop push push mov int jmp xor pop (bad) pop fwait js inc scas mov loop or jge cmpsl movsb (bad) (bad) repz and outsb adc (bad) dec xor or outsb aam push inc pop cmp es sahf cmp lahf pusha aad pop jo mov pop sub pop aad popa ja out jae into test out or aaa xchg mov cld adc mov cmpsb xchg pop gs (bad) clc xorl rcrl pushf add cmpsb cltd popa stos jae jp test das mov sti pop scas data16 jg and test xchg int3 mov (bad) clc cmp inc movsl stos hlt mov push push imul sub inc out jmp (bad) rolb cmpsl leave lahf mov xchg repnz sub popf push or dec mov jl mov stc aam jmp mov aaa (bad) testb inc mov cmp adc fldcw insl stc adc and sub push mov cmpsb mov push mov insl daa push cmp ljmp sub test xchg sub out and stc mov or pusha add int3 orb push cmc xchg xchg mov jge mov jle pop cs xchg cmp sbb (bad) es (bad) mov in dec addr16 fwait mull in mov sbb into (bad) lea imul ds inc jb pop dec cli jno jp adc pop mov lods ret repnz call inc in push in ss dec cwtl and (bad) push mov mov mov push jge mov dec lret aam cmp dec dec mov jecxz cmp push jbe outsl aam inc fwait inc jl inc ss mov xor cmp hlt push push inc scas add movsl (bad) jg hlt xchg hlt or sbb pop cmp sub outsl mov lea inc jp xor inc cmp jl popl ljmp stos push fs pop add pop bound dec jno xchg clc (bad) cmc out lock push lods std add pop pop loopne inc cltd mov cmpsb adc xor inc in in into mov jecxz or jnp mov add push pop sarl dec sub pop int sub push pushf or inc ret and imul outsb or inc add sub mov push iret mov pop pop jmp jb or int3 and push mov mov inc sti outsb data16 rcl out xor ss add test ljmp jno push out (bad) push std xchg ja mov test xlat out and scas (bad) addr16 pop std cli mov mov inc cld cmp sbbb clc xchg inc loopne or inc push push sub out icebp xor push or cli dec pop add and pop int ja mov loopne jbe mov sub arpl adc int cmp mov mov inc sub push cmc rcrl stc icebp mov xchg cmp leave inc repnz into jmp jb cmpsb addl xor fwait xchg add aaa lret pop ljmp scas jl sub (bad) xor ds dec jb sbb jge push out dec xrelease test repnz and cwtl adc arpl aaa loop fisttpll popf scas xchg decl mov icebp push or adcb dec or (bad) movsl cmpsb mov ficompl adc mov int mov jne jbe icebp ficomp jae mov lahf mov outsl (bad) mov push loop push arpl loopne add or cmp mov sti sti into into pop and push mov push fstpt fidivl push dec (bad) mov sbb pop lods mov add sbb jns xor pop fldcw into bound (bad) inc inc (bad) iret pop pop jbe mov cmc xchg and push iret xor mov xchg jmp and test enter popw xchg mov pop push xor mov daa ss mov inc mov outsb push xor out jae leave inc aaa or pop loop mov in hlt fwait repnz lds test ljmp adc xchg mov lods sbb sti inc movsl fdivrl je add aas dec dec call and outsb jne hlt push repz and cltd aam sbb mov xchg xchg cwtl dec adc push fwait mov imul pop push test push mov clc sbb and sub sbb mov fcomip ljmp pop or cmpsl xchg push lret clc push gs inc xor or xchg jno xor or stc xchg (bad) std adc pop sbb pop call jnp pop lret sub fnsave mov (bad) (bad) movsb cmp in imul dec dec jmp mov push clc jp mov in ds es jmp (bad) mov mov insl push js and xchg leave pop inc out mov imul out es xchg mov (bad) xor mov pop sahf outsb out (bad) xor pop hlt mov test sub sbb push test clc xchg stc pushl lds push arpl mov popl insl ret test mov dec jle adc ja add mov addr16 xchg push cmp aaa or mov jl sbb mov push (bad) (bad) enter or jl sti fnstsw mov or mov sub inc loopne adcb xlat (bad) (bad) addr16 xor mov mov jns loopne movsl inc mov xchg movsb mov lods dec cmp in daa aam pusha ret add rcrb dec cmp push mov std incl cmp jle or cmp inc xor push clc or push repz push mov mov aaa pop imul mov mov mov mov mov jno fstpl xor or xchg and cmp pop lods xchg or movsb push mov cmpsl mov add jo movsb dec and outsl jb,pt stos in icebp and push pop (bad) lock sbb jge adc rcr lret jmp mov pop out enter sbb pop pop sbbb sbb (bad) jge xor lds mov cmp in or add xor xchg sbb dec insl pop outsb popa jbe push dec std adc inc or inc (bad) mov fs (bad) add mov call jnp mov je les dec loop icebp enter pushf cmp xchg icebp notb (bad) fsubl movsb sub push xchg dec sbb leave pop pop pop loopne movsb xor or cmpl stc rclb inc aam dec jnp jae int repz test and mov inc insb dec push xchg pop test mov xchg fwait add je push mov jb mov add cmpsl stos fsqrt test xchg dec xor sbb add cmp lds outsl loopne push xlat pop jge mov dec push sbbb pop fs aam add cli cli mov xchg sbb daa jge push cwtl fldenv fnstcw jle scas sub sbb ficompl jb out push adc xchg and ss jnp fs fdivrl mov and test nop (bad) jno sub pop cmp or mov cltd push data16 pop jecxz jbe adc jmp lahf negb loop clc pop mov js adc divb out xor insl inc push fstpl fsubrl cmp adc sbb orl dec out mov test mov xchg xor or iret pop push mov icebp push push jo pop or push cmp fist into int3 arpl nop mov dec addl (bad) mov mov lock decb cld adc daa lock loopne sarb jg incl or adc daa lock loopne sarb pushl cmp fucomip lds add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add clc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov lea inc push push inc sbb xchg pop xchg mov fwait pop mov daa sbb daa arpl mov aad fucomp fs (bad) out jecxz jge ret jne mov adc add pushf leave dec into sub test xchg pop test rorl adc fucomi out lahf pop xchg dec ds int3 xor arpl jmp push mov jb cld dec in lods jecxz scas shrb movsl pop pop out into cmpsl mov xlat ret stos movsb js out xchg adc or jbe je mov xor mov xor loope sub push and sbb out outsl pop ja js (bad) dec and sbb lret pop jmp xor (bad) xor repz loopne adc push mov adc jne into icebp (bad) int3 cli ja dec inc sub jno hlt jno dec int aam mov sahf sbb mov pop xchg cmpsl in loop fdivrs inc ljmp xorl cmc mov push (bad) fnstenv inc notb inc dec mov fbld lahf jecxz lret imul out cs mov pop add pop fdivs mov push inc test addl aad xor sub cmp inc and cmp (bad) and push lods jecxz jle adc stc mov mov and sub pop fistp pop inc addr16 lcall pop xchg test xchg mov push and add adc jnp lret xchg call fisubrl add popf nop lock das adc out mov mov loop out out (bad) jmp ja scas mov fwait lcall jnp mov (bad) jno mov fistpll (bad) jae pop test lret clc fyl2xp1 cmpsl stos test xchg mov mov loop lahf cli adc jl adcl in and dec movsb mov sub mov xchg push xor xchg bound push and stos push sbb pop cli xlat adc xor mov enter xor cmp push out out adc cld (bad) jo xchg shl jp movsl scas imul mov in aad cld (bad) jmp (bad) repnz adc mov push in inc out mov popf bound jge inc popa loopne popa mov mov sub jl xchg xor mov xchg sbb and mov lds fidivl (bad) mov push xor fwait inc (bad) cld push inc fcmovnu in jb cmp leave push mov pop enter stos adc cs daa mov roll pop pop loope mov push aaa mov cmpsl or and mov insb mov bound and push enter xchg sbb ds test stc push pusha inc notl sbb orl pop scas mov (bad) pop dec lea imul and mov push xchg mov inc mov inc jno push xchg sti shrb pop stc lea loope jmp jnp fdivrs sti pop xchg punpckhwd into mov xchg int es out jbe jbe scas popf call lea sub (bad) mov andl int orl loop mov outsl fs lahf mov mov inc pop mov les cmp pop cmp jp xor pop test dec sub jb fidivr mov aad push hlt leave or aaa cmp subb xchg std inc insb dec mov mov dec ret frstor jnp cs imul cmp or mov mov mov or je mov jno pop sub dec (bad) mov nop sub (bad) push test cmpsb inc push test xor mov out clc in inc fsubs push repnz movsb (bad) in loope xchg mov pop fisubrl xor pop mov xor stos (bad) xchg or ss loope jne pop or mov pop mov push add (bad) cmp addr16 jl push inc push push test inc or test pop mov cli fist dec mov pushf pushf out xchg xchg dec sub mov add cmc mov stos push pop xchg pop punpckhdq aad jecxz lods cltd stc js xor fsubrs pop fisubr sbb lods mov push bound or loopne aaa push sub fs loopne mov or add pop adc les into ja mov jns mov sub (bad) mov or jmp jne (bad) rol mov and push int3 fnop lcall loop cmp cmp adc mov xor and xchg add jne jb repnz jl and icebp jne fstps subl dec or aas adc and imul clc mov dec ret fadds xchg push jb sub inc icebp pop xor pop cs insl out ret mov xchg pop mov aam cmp pusha (bad) adc lahf or inc lock test jne lods cmpsl xchg in adc divb mov cld pop cmp pop repz popf fsubrl cmp mov add jg or dec mov push (bad) mov ss shll (bad) loopne ss je ret inc loopne gs movsb aas dec jecxz loope mov icebp sub xchg inc aam sbb mov or and pop es jb xchg orl test stc jae push in jp je sub push mov in inc pop adc push mov cld (bad) adc in outsb dec inc sbb repnz or or (bad) hlt shlb xor sbb das dec xchg int3 test daa pop mov imul mov sbb lea xchg push int3 adc scas imul sub enter mov push mov (bad) sbb and (bad) xor push mov add inc popa or cmp and or fldcw mov or inc cmp push outsl or (bad) into (bad) pop inc sub sbb xchg leave pop test push adc leave sub push fs jle rolb loope sbb in gs and inc rcrl and test adc stos push pop stc sub pop out xchg out test out out lods dec aad push (bad) jge outsb in adc int sar test cmp push mov jl lds mov daa jge cld and add fsubr and jbe mov in fsubrl jnp ret and jp mov jne fxch jg jbe (bad) in mov aas in aam cmpsl cmpsl sahf mov dec adc or rcrl lods fstpl aas rclb popa pushf int iret subl mov sahf mov mov adc or int3 pop dec jge inc mov sbb aam jb (bad) repz inc or mov push pop das inc scas mov push fistp mov pop (bad) lods jl divb dec test push mov mov jnp inc lcall mov dec xchg pop pusha mov mov fs das enter and int3 xor cwtl sbb inc pop or inc push inc or imul cmpl xor jp push dec ret aam stc mov xchg jnp test lahf mov mov mov pushf imul or loopne fidivr push xchg insl and mov mov js mov mov outsl xor (bad) pop jno dec cs stc ret mov jmp dec test push out mov xor jle pop or mov (bad) ljmp cwtl pop xor (bad) jo and jae cwtl test jne add mov call push mov mov aad xlat scas add pop inc arpl sub aam in cmp jg out push loop pop ror int fist dec mov lods sub and push pop inc lret inc xor (bad) add sub cltd aaa mov mov int3 mov sbb sbb mov dec lods bound rcrb into push adc inc inc stos dec scas jecxz cwtl cmpsb inc aas sarb icebp gs fnsave mov add push addr16 sub sbb loopne stos mov mov cmp or add adc es stos inc lds xchg jmp cmp loope ffreep and add test push clc test xchg loopne cmpsb mov mov sbb inc xor into inc pop outsl mov cmp ljmp or cmp hlt clc adc dec lcall lcall out inc sbb sbb movsb and loope sub adc cmp sub test cmp lahf popf (bad) je jle (bad) out fidiv test jge and jnp jl jmp xchg dec jne pop and std mov adc outsb or into test in movsb adc mov add (bad) int cmpsb add notl pop es (bad) mov adc xchg push loop push xchg ss out das add push jecxz push loopw push outsb sub fwait push (bad) in (bad) test leave fsqrt push out hlt mov sbb adc jmp or lods mov (bad) stos jnp pushf gs mov or cli cmpsb lahf inc test fdivs mov xor mov leave lret stos add mov add (bad) cwtl dec fcmovnu mov or adc fstl or movsl popf sbb leave push xor push xor in or int3 cs xchg cmpsl pop lods repz aas mov mov cmp hlt sbb push push sbb rcrl jecxz adc lds xor pop xor pop sub nop dec rclb stc pop sub movsl xor push and insb mov leave fidiv jo dec push rclb das fdivrs sub mov jno ret fcompl cs xorl mov fmulp imul ss mov add test cmp mov sub dec mov lea mov jecxz int3 dec data16 das sti sub lret mov jnp test aas rcr dec jbe xchg cld test loopne mov (bad) pop xchg clc mov cwtl pusha mov mov and adc adc sbb sti dec and sub xchg add xchg out fadds lahf std inc out mov mov call fistl outsl push add xor les js gs in fstpl adc je enter mov scas adc adc adc sub or cltd aad mov mov jge or dec push repz fisubl add les mov into push adcl stos scas stos jns negl gs call rorb jle sbb lods (bad) mov (bad) lcall push add fwait pushf push stos adc cwtl rorl dec jle xor jecxz test jnp and int3 outsl jmp adc test sahf mov and pop cmpsl lds pop sarb (bad) jmp xchg push and and ret cli jl inc push nop mov popf aas in mov xorl fs cmp call and mov push jge push (bad) fsubrs xchg out fildl into cli or ss fisttpl (bad) insb jb cmpsl out fstl cmp mov mov xor es mov insb cmp stc aad push dec in ljmp shrb outsl icebp mov mov inc iret js notl icebp (bad) lret dec fcmovnbe int3 ret loopne pop dec rclb inc pop test xor leave cmp leave aaa idivb mov mov cmp xchg adc xchg xchg test xor xor mov (bad) cld fnstsw sahf into inc or push push cmovl push fldenv mov divl iret in sbb push mov adc (bad) mov jmp inc jae push lret mov lock repnz pop gs loope test xchg jbe jecxz mov gs aaa repnz aas mov mov sarl mov xor add fidiv cwtl hlt pop or das aam xchg jb mov imul into sbb stos fisttpll mov fldl int push cmp in jp je sbb mov pop repnz outsl xor add scas add cmp test or and loop xor add cs sub and test insl into jne xor (bad) (bad) notb add mov cmpsl hlt dec enter jecxz add sub ja addr16 movsb jnp dec mov sub cwtl or and mov dec je jne push rorl dec shll gs and jg std cs mov rorl add pop pop push test cmpsb xchg adc lret sbb pop (bad) dec pusha mov push xchg out pop stos mov iret fcmovnbe sbb (bad) stos cli cltd xor sahf cmp je iret xchg cmpsl in cmpsl or mov call push in iret mov out (bad) scas jbe mov xchg mov loopne push adc ja inc fwait scas movb cmpsl sub mov gs ficoml push cwtl add jp in out aaa or push jns jne jg jo cmp push out lods adc divb icebp adc cmp js push je adc fwait out dec mov mov jae inc cmp test popf sub out sbb fbld or add aas rcrl popf or test and addr16 mov push sub ja sub mov (bad) movb mov or lret mov enter out mov dec insl mov xor lds sub mov or sub sub ja add lahf cmp mov dec out lods add mov and imul ds sbb imul xlat arpl pop sub or jb mov push gs xchg mov xor mov inc out lea push imul insl adc lret popf push inc ja push or inc xor fisttpl ss sti lahf stos testl pop mov pop cmp pop lcall cmp jecxz mov inc mov and jne push lret rcll pop sbb sbb test lods or je inc and insl pop mov rorl shrb jo mov fdivs sarb popa cmpsl insl fbld add jns (bad) lret leave test fbstp jbe (bad) dec add pop nop xchg outsl test bsf jbe and int3 xchg movsb movsl pop mov stc and in push das or sti aaa or cmp movsl pop lret fnstenv sti ret daa pop (bad) icebp mov push mov mov jl adc adc cwtl dec stos add pop (bad) fnstsw lcall pop shll hlt ret (bad) xchg int3 mov jle mov cmp or and cmp js mov (bad) mov cmp adc std jecxz lock sub xlat mov gs push adc push in jle mov cli or xor (bad) (bad) inc movsb push xorl fiadd arpl js outsl pop or and outsl dec and inc add xchg test les mov mov cmp loope cs mov jecxz into in addr16 shrb mov jmp sarl sti fwait push or inc test jns sub mov and fimull adc rorl add test scas sbb push pop xchg pop ret mov pop pop push adc lea hlt outsb mov adc imul mov out outsl dec nop loop inc dec sub cmp notb lahf lds mull rolb jg mov (bad) int3 ret lods imul negb fadds in (bad) sti pop loopne (bad) (bad) xor in ja mov and pop mov fild pop push cmp fadds xchg or and add out dec or aad ret insb jl mov bound fisub hlt xchg imul rcrl pop aaa inc jns dec cmp inc cltd sbb pop sub xor jge add jle gs neg inc lods sti sub push jno cmc stc arpl iret mov lahf jne xor inc push lret inc cmc add sub pop xor push or mov push push das push inc ss stc (bad) sub popa xchg adc mov test mov negl push mov cmpsl cli inc cmp std adcb (bad) stos into jecxz insb dec imul mov addr16 ss leave shrb mov test xchg out or in jge imul int3 cmpsl loop outsl in push scas inc cld pop imul stos and std push stos push cmp pop scas repnz mov sub mov cld cmp std cmp bound out inc adc jnp xor adc pop into movsl jne pop cwtl xor mov push sbb jne mov mov popa leave jbe shll loop sbb icebp test adc mov xor push pop and imul push mov push ja push mov dec (bad) arpl cli imul jae mov dec add mov and shrl repnz shl pop cmp enter sbb xchg out ds (bad) lods push push or fnstenv leave lds sub (bad) ja imul insl cli (bad) add in (bad) sti fadds push mov insb in inc jb lds pop push imul stos fsubrs push ds jecxz pop xchg add cmp lcall jle sub lahf js fs sti adc out imul jmp add aas int stos ficom insb pop ret scas inc pop jge (bad) repz cli xor pop dec addr16 bound out out aas inc loopne push lods inc jns mov jle add push ret (bad) cmp mov push push enter ds pop sub (bad) ds or pop add push mov mov mov shl fistpl and mov cli int mov mov cmc jns mov sar cmpsb pop fidivrl fldcw ficompl push sbb fdivrs lcall jg pop inc pop xchg iret rcrb sub stc cmp add inc mov push out xchg push (bad) lds push cmp xor xorl sbb jo sahf repz subl fisubrl lds mov leave or cmc xchg xchg jle cmc push mov (bad) aaa mov xchg xchg lock (bad) jb outsb jae inc ret mov inc and jl and pop mov icebp push sarb sbb mov imul and lea lock push or mov cmp outsb push test push fmul add dec sbb movsb mov fldenv cmp adc out cmp xor xlat add and cmp testl cmpsb je (bad) (bad) sub xlat jne jae xlat cmp sub cmp fldt movsl mov dec imulb or (bad) or enter mov inc imul ret out add and sbb sub pusha dec xchg jmp sub pop (bad) fdivrl (bad) loopne mov in flds out stos push mov lea adc jne (bad) and xor addl sub mov mov fnstenv cmp mov and in jne cmp ljmp pop ljmp dec push mov sub (bad) mov fimull xchg in jnp inc xchg fdivl mov or iret pop mov bnd lret jns push out fidivr push pop gs in test mov pop (bad) and jno dec push icebp jnp cwtl mov push out enter dec dec ljmp xor xor push mov mov or fild rorb push xchg negl sub mov cmp xor sub ds data16 fadd lea sbb mov (bad) in xor or inc fidivl popa pop pop cmpsl xchg push cld add jmp push in dec lock call jns addr16 xor pop mov jbe jge and sarl cmp xor ljmp sbb stc cmpsl (bad) or jo rcrl sub aas mov mov inc pop mov movsl test or rclb or sub movsb hlt orl call adc pop inc mov inc sub dec popf fs mov push flds push push add cli cwtl jmp jb or loopne mov rcll fiaddl adc mov clc adc sbb push int3 aas sbb fnsave scas icebp jne outsb movsb fildll fmull or enter test xor cmc (bad) (bad) mov inc (bad) out lods popl cmpsb jo roll and adc mov sbb outsb pop mov movsb lahf sbb xchg mov inc cld sub inc mov aaa mov adc mov mov enter adc (bad) aaa mov mov xor int push adc jne cmc pop mov mov mov sbb push lods sbb sbb cli pop mov and ja negb jo or loop in xor push dec ljmp pop test ds xchg js stos in cmpsl lcall pop rol cmp mov call sti dec lock or leave es dec loop and jo mov pop iret jbe jecxz push leave fstpt cmpl int3 cmp mov (bad) xchg popa (bad) or (bad) (bad) iret int3 sbb cld jp pop imul stos (bad) rorb daa (bad) inc xchg test fldt mov pop xlat adc push adc or sarl push mov cmp jg xor test movsb test jnp push pusha and ficoml and and mov aas mov aaa icebp loop adc (bad) push ljmp (bad) outsl and pop lahf xchg lock ljmp mov mov pop mov in or in out xor add or stos leave jecxz loop icebp push out std mov addr16 test pop int aad fcoml fidiv and nop addl cmp lds cmp js mov pop mov js sbb xor fldcw leave mov sub clc inc jp pop loopne fadds xlat cmpsb scas push sahf mov test out mov fdivrl mov and cmp (bad) js std (bad) imul xchg icebp out or roll sub lock imul push leave xchg or pop loope and icebp xchg (bad) faddp mov jne cld xchg xrelease in xor pop sub sbb mov push xor icebp push out stc fistpl cmp and (bad) out adc xchg xchg test mov in decl jge and fldl mov jmp cld inc mov mov push lcall adc out fildll int bound sahf jns adc jnp (bad) aas out mov push pop sub data16 hlt popf inc imul jne scas mov mov shll sbb (bad) mov mov or sub into jl mov es cmp add xchg test aaa fwait sub and xchg dec xchg pop mov xor outsb fmull xor cmp cmp leave mov scas popa jp mov jae mov in out jp dec fimul xchg ja out cli xor fxch std inc clc lods cmp xchg xor or add adc mov and inc xchg and es inc mov mov in xchg lahf hlt ror mov xor cmpsl aaa mov rcrl cli (bad) lcall push cmpb (bad) jae sbb je push in push pusha cs jne or das dec call xor xchg push imul xchg cmp inc or stc jle inc mov push cwtl outsb popa (bad) jo inc std inc push imul mov xor leave adc loop jns mov cmc inc jbe (bad) mov dec hlt add pop cmp mov sarl aas dec lock inc and outsl lahf mov cwtl lcall push (bad) icebp cs stos ror fnstsw jno add ljmp fsqrt mov inc loope lret fsubrs ret jne xor lret xchg rcr xor out (bad) cmp dec (bad) enter std scas xchg xor xor es sub sbb call iret imul call addr16 xor sbb mov insl mull mov xchg idivb lock scas jp std lea cmc adc aaa movsl sub push nop cld cmc ds cmpsb lret sub mov daa (bad) lock icebp (bad) pop out out (bad) mov cmpsl and js pop dec in sub add xchg test dec sub sub aas mov inc lret dec pop sub or loope jmp jne mov scas daa xor xor xchg xchg and sub xchg lods mov ljmp call and dec nop add sbb das and jns jle add imul sub mov or (bad) push cltd xor cmp imul xchg pusha fcom jl sbb fwait loope xchg mov (bad) mov or daa lock sarb or daa lock sarb or daa lock sarb or daa lock incl sbb ret and add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lock add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov test inc push push inc sbb xchg xchg in in (bad) leave mov insb fcomi mov cli gs lret daa (bad) cmc mov adc add add nop add movsb aas jbe outsl cmpsb jge xchg repnz dec mov sub insl dec aam add icebp xchg lea pop add in cli xchg lahf sub (bad) dec lock inc mov sub dec xor loopne xchg mov mov sbb mov sti lods jmp das jo ret fsubrs cmc stc mov mov or loopne loope xchg lock mov hlt sub mov jno push fstps pushf sahf xor popa dec lods push (bad) mov insb inc jp outsb pop add test psubusw xor dec inc loop sbb fldl jmp adc dec dec xor add xor push adc and cltd adc loope cltd loop cld pop out jae scas ret imulb or mov pop cwtl mov mov adc sub fstl test cmc mov lea mov repz in jne ret nop pop jns mov xchg cmp xchg and or adc mov cli daa lock dec mov xchg inc push add push lret mov movsl ror xchg jbe test push pop inc lea scas loopne push lcall out pusha inc mov inc jbe or xchg (bad) or pop daa movsl adc dec ret jle aaa jne cltd mov scas xchg sahf push aam xchg adc mov mov add jb and cwtl insl outsb sbb hlt loopne (bad) xor mov lahf inc fbld pop movsl nop out cmp jno mov loop fnstsw mov loopne pop push lods into dec xor jg pop mov lods xchg cmp insl out (bad) aas xor inc dec les push push and xchg div mov push int3 in into adc lahf loop js int3 mov push add sbb sarl aaa and add lret or mov insb jl stc inc xchg push dec sti (bad) ss test lods dec sarb popf pop imul popf mov or pop jp fdiv test xchg pop std ret pop scas xor adc jbe out lock lret mov jmp scas xor roll add aad sbb and cs outsl bound (bad) je push ja push and jns mov add pop out scas (bad) mov and mov lcall or in jno xchg lea jne (bad) jns mov fidivrl sub in pop jmp and test rcl cmp shrd push movsl and gs dec (bad) data16 xor ret movsl xlat mov mov pop and popa jno (bad) les pop xlat or xor pop pop lret (bad) les leave mov inc fsubl xchg aas das dec (bad) ficomp and aas and pop xor mov cmp call add aas add dec gs sub paddusw push test mull lcall jno int insb mov add mov stos mov mov mov mov (bad) stc jbe or insb call call jmp ds ret xchg or pop popl mov xchg and add sbb mov mov push fwait and (bad) pop sub push rorb cwtl sbb push mov aad adcb and shr mov je (bad) cmp jmp pop cld icebp insb push sub jnp iret js das (bad) pop dec nop adc jl adc idiv push (bad) or lock ss cmp mov sbb xchg repnz mov hlt lcall cld sub loopne dec imul dec xlat movsb dec sar push inc lahf (bad) clc inc xlat inc dec dec (bad) pop sub fucomip and imul fcoms or or outsb adc in adc or mov (bad) shll sbb dec (bad) ret mov xlat rol fwait orl jnp repnz cwtl addr16 sbb jo mov push push jb ljmp mov inc lahf (bad) repz pop xchg xchg orl arpl (bad) push sahf dec (bad) fisttpll cmp mov cmp pop jmp mov test leave and lods subl (bad) mov add mov pmaxsw mov icebp cmp and lahf call pop (bad) xor push hlt clc xor outsb inc pop ret inc movsl aas cmp movsl aam inc jl arpl ds lret mov test (bad) hlt fisttpll mov jae and popa add ljmp (bad) pop aas mov pop adc dec push stos les mov (bad) and jge add je or cmp add cld jae and xchg into fisubr push popa mov adcl sti jl mov cmpsb (bad) icebp adc fs pop add xor and push inc jle push add dec jmp fnstsw jg xor (bad) pop sub cwtl cwtl jg cltd cmp bnd inc les mov adc outsl dec mov (bad) insb xchg testl test sbb jp stos pop and loop fist jae cmpl add repnz test mov insl adc sbb in inc xchg lahf mov lods loope out loopne (bad) mov mov adc dec inc pop mov cwtl (bad) imull and cli adc pandn xchg rclb xchg popf (bad) inc inc stos test or imul out mov shll bound rcrb jle enter inc push sbb lock add mov xchg fmul in jne add mov out (bad) cs jae ja dec insl shrb int and dec (bad) mov divb and jne in and stos (bad) jmp aas (bad) xchg or xchg cli jo xchg mov clc push cmpsb cmp inc in jmp dec aaa dec push cmp aam cwtl ficompl jo pushf dec fcmove mov pop fidivr lcall and fldt pop add cmp data16 jg pop incb enter es push ljmp pop jmp mov nop dec push inc dec ja jmp mov cmp idiv cmpsl aas lea adc mov ret cmpsl sbb jo (bad) icebp fsubl or adc je sbb test push adc sahf jge pop push and mov scas mov dec decl int push dec ret addl xor cs mov cmp and call jl ljmp and sub mov roll sahf punpckhdq aaa or into repnz ret or test aas adcl addr16 sbb sbb sbb std ss jns dec pop mov inc (bad) dec sbb outsl movsl adc lds xchg es dec jp stos fbstp cmp mov push clc outsl cmp (bad) push sbb inc and xchg pop and sahf xchg push fs enter mov jne push cmp (bad) lret sub (bad) leave ljmp lods fcompl das sbb ja mov push rorb add iret push icebp pop add push jbe aaa jae scas push jg mov jmp inc fistp mov pushf std cwtl mov add cld add jge scas movsl push push xor (bad) lock push dec in push sub enter and xchg or sub mov fs bound sti pop sbb ficompl pop mov ljmp sub outsb pop inc lret add scas dec stos sub nop leave add xchg std stos inc or std aam push repnz inc lret cmp pop sub pop mov jb mov and loope inc adc gs in and mov jmp icebp jecxz sub cmp and std push fistl jbe (bad) sti sub xor inc lret fdivl loope pushf sti xor loop repz xchg cmp fistl popa jg sbb cwtl out mov outsl jge or pop inc sbbl and ljmp or xlat iret pop mov loopne xchg fmuls xchg dec and cmp in and sub cltd arpl pop repz outsl inc jbe ficompl bound ds push mov pop dec or ret or dec ss cmc test pushf addl bound pop cmp cmpsb sbb or inc int fs or sti jge and sbb adc pop mov sub sbb mov int cs out jge cmp hlt push (bad) ljmp mov add fldcw xchg cmpsl or adc xor inc outsb sbb xchg sbb stc mov (bad) arpl push mov in test (bad) das outsl sub push and inc ss (bad) cmpsl push pop popf stos push push stos inc lea ja cmp dec dec add mov clc insl mov sub add stos mov movsb mov insb jo push (bad) lds lock cmp loope cwtl cmp addl sbb ret mov int3 sti mov ds aam cmp dec sub jg or pop (bad) int pop adc jmp loopne cmp cs pop cmp add int3 (bad) mov jo sahf or icebp lods aas loope lods cli cmc ljmp jo das sub scas jl push (bad) movsl es out jnp jae sti and jmp sbb div adc in js in or in popa lods mov outsb negb fsubs sub or push cmpl cmp subl push lds jecxz mov pop popf lods adc xor jnp movsl arpl and jbe or fwait daa mov daa dec push sub arpl xchg dec pop inc leave lret push call adc and fwait in push dec outsb sub aam nop cmp mov fs (bad) sbb pop mov mov or pushf push mov in fldt fwait inc popa (bad) add in xchg or xchg jnp into adc sub pop mov ret adc mov xor int inc fnstsw and js pop cld stc adc dec cmpsb in mov std rcrb push imul mov loopne outsl fs push or jo js mov push push (bad) lods fsubs int push and adc sahf pop lds ret mov cmpsb pop leave pop or push divb inc xor xchg lods adc jmp popa mov ljmp dec cmp outsb sbb mov cld call sbb subl not pop adc fisttp in mov dec das fadd push mov push cmpsl lods outsl das popf loopne mov mov and es jle gs xchg ljmp inc add jecxz pop das jp push stc xor insb push (bad) sbb xchg push out mov sub sub fnstcw loop xor or scas aas or mov lcall or mov in mov xorb fwait rcll inc mov bound call ja or sbb popa xchg jmp lock adc jp xchg inc push stos loop int mov pop cmp ljmp dec stos xchg inc das (bad) and fs lea ret lcall pop adc sbb mull dec xchg dec dec adc jmp xchg and mul xor push in or cli jmp sti sarl (bad) aaa int3 jnp aas ficom aad js push sub push test adc (bad) int3 movsl out je outsb push dec ljmp movhps adcl dec mov add rorb cld pop jle repz dec and mov inc push push jbe lcall into xchg pop xchg pop ret nop je cmp movsb and mov pop fiaddl cmp lcall xchg stos fmulp rcr jns push cmp push (bad) lea test sbb inc and pop jp bound inc sarb jb push sbb es push (bad) or push push sbb mov addr16 inc xchg ss pop jp mov mov sahf insb imul (bad) pop pop out mov or xchg fldl out std pop ret rcrb or dec inc iret jl (bad) ja rol inc cmp cmp and pop cli sahf push stos jae out mov outsb mov and push jge inc loopne mov fiaddl pop adc int xchg or (bad) jne stc jns xor cs lock mov outsl gs jl or add cmp pop jns and fistpll push mov movsb xchg add test bound mov mov out aas jle xchg inc mov push push shrb cltd ja std push insb or or sbb push pop mov jno scas aam xchg push movsb inc shlb fadds addr16 jge xchg (bad) lods fcmovnu xchg cmp rclb insl rorb (bad) jmp lahf repnz adc adc lret cmc popf negb pop int mov inc dec lret jl adc and fiadd push les lods push sub dec cmc orl fldt adc out and xchg idivl fcompl (bad) jp fildl aam xchg adc bound pop xchg js xchg mov out shrb popa jns cmp lret cs add in movsl add fistpl sbb popf cs inc sub idivl lea repnz jae inc pop xchg mov xor or adc add test dec or fildll addr16 sub dec and stos lds mov jge clc outsb jmp mov mov or push push ljmp (bad) ljmp adc cmpsb mov adc enter popf mov push (bad) (bad) nop mov dec ret mov mov mov xor lahf dec mov mov cmpsl jae push sub xor and dec hlt or arpl movsl loopne pop out in adc push push mov pop stos stc mov les jecxz aad inc push xor add mov mov cmp and jo mov fsubrl mov into setb jo inc pop jb outsb ret pop mov dec dec mov xor mov ret mov sahf not xor dec (bad) int3 stos scas psrlw mov xchg ds in dec data16 fs lock (bad) pop aaa aad daa leave (bad) cmp or dec arpl adc sarl pop loopne jl sahf adc in arpl hlt pop add pop fs pop jae int3 mov dec das and sub sbb aas insb mov push push dec mov sub dec mov mulb data16 dec mov xchg xor sbb sbb call jecxz or jb in or adc add xchg das xchg gs xchg or das in dec and sbb dec pushf fsubl sbb sbb ds out outsl mov push add jge cmp fistl pop pop and inc popa mov (bad) push in xor outsl sti mov lcall insl xchg les pop xchg sub cmpsb add mov (bad) pushf lahf movsb or pop frstor ss cltd adc movsl push jg cmp sbb push dec and jb (bad) sbb xor imul into es pop mov push pop insl sbb push sbb aam push notl in test sbb mov mov add movsl je jb in andnps and test scas and jno,pn add int rclb test jns ja fildll dec movsl stos add mov scas pop adc in icebp dec cltd xor dec cmc xchg mov xchg push xor lea sbb or mov pop ja push fstl test mov pop cltd inc cltd (bad) and jae inc cli mov fmuls enter jle les xchg dec sbb test mov jns fsubrp mov push inc cmpsl sti jle test out push add (bad) xor adc sbb lea aas mov pop test ja mov add fs sbb push std in int3 repnz in mov jmp inc outsb push jecxz pop imul mov push mov into cli cwtl (bad) test and jne xor adc int3 loop rclb jno inc jae mov sahf mov sar movsl xor jnp stos mull push push push inc push lcall in mov mov mov sbb lcall scas jbe aaa add inc push push es shrb or fwait xor cmc scas hlt mov push adc cmpsl cltd adc cmp loopne movsl mov imul add leave les mov lret (bad) and popa bound outsb mov jo (bad) pop inc test xchg jne repz pop adc jns ljmp stos xor push pushf and mov inc fcomip xchg fisubrl adc mov push pop xchg dec xchg shll or les mov data16 or lock push rcrb and out (bad) mov shl push mov push shll or or xchg adc xchg leave sub sbb jg loopne inc movsl loopne lret icebp test xchg inc cwtl ljmp mov dec movsl mov sbb (bad) xor stos ja or mov std and dec push sub adc aam dec dec popa pop dec in jge andl push add ss mov scas or ljmp (bad) push cmc mov icebp mov sarl or int3 sti mov leave push test out cmpsb rcrl popa push cmp pop psllq lea add mov mov movsl sbbl scas (bad) popa and scas insl jp lret addr16 pop mov mov cmp clc pop js or in jle sbb add insb adc mov mov fsubs repz jae fldcw popf sub pop bnd add mov (bad) mov popa addr16 lcall xchg movsl insb inc mov ss repz (bad) icebp sbb fidivl mov test xor adc inc add in add adc dec jge (bad) lods mov push mov cmp ja mov xchg cmpsl mov xor jge inc xor mov or nop inc sbb cmp add cltd sbb (bad) pop icebp mov jno in jg push mov dec jnp repz mov inc xchg imul jge or pop inc add movsb mov insl enter or lahf add cmp add int inc lret or stos sub adc push xlat xchg sbb and test cltd jno mov neg daa dec jg sbb mov cmpsb jge out lcall push sbb sbb pop out leave ror mov push mov gs sbb mov lock xchg cmp push mov dec mov sub jbe xor (bad) xchg lds rclb loope lret jo popf popf jbe cli mov (bad) fstpt jmp add ds push add mov (bad) cltd out rorl (bad) adc jno push insb je dec sub stos mov cli xchg clc insl sti incl adc push scas adc mov out int inc sub call (bad) stos sarb (bad) lock mov cmp cmc test pop js cmpsl mov pop and rcrl cmp outsb fldl xor xlat mov mov fdivs (bad) ja imul cli inc jle sub push cmc mov js mov out repnz stos (bad) jae xor pop sti icebp pop cli jge xchg push (bad) lret aaa or mov adc es cs pop das insl pop pop jb xor test and sbb push sub ret jg mov test (bad) sub xor xchg data16 imull push xor sbb hlt jge aad xchg negb pop xor cmp pop test dec cmp pop clc pop mov push pop in mov push xchg mov jo (bad) cmpsb pop pop ss stos xchg pop jno xchg pop (bad) xchg pop push sub fidivr add add jmp leave sbb arpl in aad sub and enter mov sub insl es cmpsl xchg test setle mov push pop scas into lahf outsl sub (bad) (bad) and push and iret ljmp sbb pop inc seto push fsubrs sub inc mov sub repnz bound scas mov jp cltd push mov pop cli or and xchg lcall push jg sub adc outsb stos daa or iret sbb cmp daa pop sub aaa or jl repnz and lcall dec dec loope cmpsb icebp (bad) mov es mov shl sbb mov inc (bad) fdivrp in pop inc push pop arpl lds xor lret popl js int3 mov aaa shrl popa xor jno ds jmp icebp notl fsts xchg mov push add dec and es or jle dec or pop fildl xor xchg out out test mov jae cmpsl push lods cli mov xor mov cltd loope cmp lcall adc mov nop xchg mov movsl popf jae ret xchg xchg cmp lret mov xchg dec test imul cli lret lahf add mov jmp int xor push dec (bad) jae repz sbb mov int3 addl (bad) out xorb sbb jne mov or leave and add push sub xchg dec adc xchg cltd aaa sub mov cli jle,pn sbb nop mov xchg mov jecxz dec mov xchg stos pop mov lret sbb mov fcom push add fstpt hlt ret fnstsw push mov cmpl out int sub add repz or push les cmpsb sbb imul dec xchg (bad) subl ja jl jne (bad) push lahf enter jae mov cmp out loop roll mulb fs lods pop outsl xor xchg in icebp push (bad) cld mov fcoms sub (bad) ds ret push jp push stos cs jae dec les xor fstps aas dec push push and xchg enter (bad) (bad) into xor fldcw insl push add int3 roll adc push ret ljmp outsl in (bad) jno pop xor xor pushf pop out lahf mov and out mov sti pop add adc outsl and popa imul sub mov and xchg cs xor out cmpsl jl sbb mov pop ja add mov sub push inc cltd inc sbb repnz cmp fs fcoml out pop ds sbb sbb lock scas pop dec testl sbb outsl pop jo scas mov sar jle mov stos jle (bad) pop push nop dec test or cld in xor push ja mov in mov push int int pop sahf test sbb push sub nop mov pop fistpl clc xchg add ja mov pop sub std (bad) and mov xchg int3 divl mov rorl fmulp dec test ds sub mov and aad mov mov andl mov xchg jmp mov mov lcall mov fwait or xor xor mov pop jmp (bad) sub cmpxchg popa dec rorb cld jg xor bound mov jbe lds mov adc fucomi fwait adc cld iret jnp ja jle popf fnstsw fnstenv push data16 icebp mov xchg xchg shrb cmp sub dec insb aam imul pusha es gs repz movsl add (bad) push push sub push sub rorl pusha dec in adc lea mov cltd pop je inc jecxz stc (bad) mov subl pop push inc cmp mov rorb pusha inc pop pop cmp adc jb mov bound loop cmp push lea imul xchg ljmp mov in cmp stos int3 lret push das loope xor sub cmpsl cmp xor ds aam call out setbe das push adc leave je add loope in sub xor mov sarb repz push inc jl push (bad) gs mov repz lds adc cmp sub sbb pop mov gs push mov mov dec in xchg xchg (bad) pop frstor dec lret mov scas cmc sbb adc and and xchg mov lahf pop ds pushf add mov repnz adc jbe in adc sub xchg and das dec xor xchg stos test popf add sbb (bad) xchg and stos int repz movsb xor fistp push pushf addl cmc shr jnp fldl pusha ja insl test imul push test jecxz leave ljmp lock loopne sarb jg incl or adc daa lock loopne sarb jg incl mov pop or add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mull add add or or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop and ret add lods leave outsb mov mov (bad) mov fisubr out fwait fwait insb outsb mov lcall inc mov push add add add add sbb pop xor test popf stos or adc pop cmp (bad) push mov fistpll movsl aam outsb cmpb sahf mov loope je icebp imul jecxz repz pop pop mov out lock aaa je xchg pusha jp sbb ljmp adc pop adc cmp pop mov pop test mov fs into movsl sbb inc add in adc repnz mov push stc cmp add jns into enter nop mov je jmp add fninit mov or mov xor mov and dec int3 jno and insl sub cltd fdiv fidivl or pusha jne add mov popf sahf pop sub cmp xor sub and mov adc divl movlps fstp sbb add (bad) cltd test js push imul cmpsl mov test xor push int3 push (bad) sbb dec imul cmp cmp push sub adc out lret gs addb repnz mov pop sbb insl pusha dec roll mov pop and jle dec orl mov (bad) arpl fimull les movl dec and or in xchg add lock and stos xor fcompl push and jmp sub dec (bad) xor dec xor lret sub cmp dec adc in cs inc pop stc pop mov (bad) sbb das subl arpl jae cmp jl pop adc xchg pop mov (bad) dec cld add (bad) sub mov les movsb fiadd pop hlt adc jp (bad) leave out dec xlat adc dec (bad) inc cmpb loopne (bad) ss popa scas aas jp mov aad dec xchg mov in dec mov jo out fstp fdiv fwait mov lock xor jp inc jno cli hlt call push jl dec mov jns mov outsb lea in add or mov pop and fcoml ret xlat pushf int mov mov outsl mov dec mov cmp imul and test jno out jg repnz and fstps hlt cmp jmp shrb hlt pop rcl push repz imul sbb adc inc (bad) mov sub dec pop or (bad) push fildll nop and inc mov test pop aam mov xchg nop push mov xchg fildl mov rcll fdecstp push inc adc inc mov out or es dec fistpll pusha mov add inc mov jno adc add dec xor call lods cli (bad) fsubrl int3 xchg and adc jecxz loop int3 test sub and fildl fnstcw es mov test in pop out mov aad sub cmpsl popa cmp test mov mov pop cmp lods push xchg jne cmp pop movsl in aad sti cmpsl push pop or loopne and mov push adc mov inc test mov adc cmpsl hlt jne ja (bad) lock stos insb and fs in (bad) mov int3 mov fwait sar lods insb cmpsl incl mov push ljmp ret inc shrl xchg sbb arpl dec test add lret add sub test imul (bad) mov (bad) (bad) (bad) adc in mov pop dec call dec sbb scas fwait jne mov pop xchg ss push xor add push les dec jp mov mov or inc inc push fscale sbb dec add mov jecxz stos cwtl mov lds sbb pop pop cmovg xor or cmp cmpsb ret add lret mov or or sahf pop push rorb fistp pop push fnstsw sbb push push mov pop aaa test pop sub pop pop leave jb icebp outsb clc jmp push fwait or repnz cli ja,pt popa daa mov push mov iret icebp ljmp jp xlat rcr test into jle sarb dec pop pop lcall sbb hlt hlt pusha pop mov mov aam inc pop sub scas popa xchg xchg push cmp xor add jbe scas dec lahf jne cmp test leave sub mov or fidiv lret mov push push sbb xor cltd or xchg in xchg jae sub pusha in bound xchg in mov mov clc iret orl sti mov push mov js insb fdivrs mov jg adc jno mov sti int3 push push (bad) leave notl into cld jecxz or mov ds xlat aam rolb stos divl inc mov lock test pop dec sbb cs xlat xchg push push fsubl in in add fsts pop xlat add out fistpll scas xchg int3 mov pop xor loope les dec dec fnop call std in cwtl addl lahf popf inc pop mov gs lock dec fs dec mov dec aaa cmp push mov inc push daa rolb cmp jb dec mov sahf popa add sbb lcall leave add (bad) mov nop or lret aas mov push push pop cmp mov push aad add sarl fucomip scas mov xchg dec xor scas push sbb icebp ljmp (bad) xor lret insb inc test (bad) fiaddl repnz xchg lods dec inc ss lret mov dec add xor mov cmp inc rcll jle,pn xor je mov stc xlat jb mov out push rcr jb dec or add jmp cs (bad) or or cmc cmp loop jmp popa mov inc pop add push jbe andl addr16 jp in movsl test out jle pop ljmp out xor ds dec sub ficompl adc loopne lods xor push xor mov inc cmpsb push or sub imul mov mov pusha xor mov repnz test xchg (bad) sysret stc cmp xchg and repnz movsl inc cmp push mov jle cmp dec add dec ds xor imul dec or into es testl adc jle adc xchg fwait jne push sub gs mov test movsl jl jbe divl outsb or std pop stc paddusw and addl jne addr16 mov push push mov mov or (bad) in sub aam jl in sbb dec mov sub test jae test out loopne rcl pop cmp cmpsl es jmp pop xchg xor lods fstpt pop push jae cmp jnp and (bad) xchg push (bad) (bad) push push inc dec push out rorb jnp jnp gs push dec mov shl push inc dec xchg lds divb scas mov ja aam pop dec fwait adc outsb and aam call inc pop jmp dec aam jnp addr16 push mov xchg out mov xchg icebp xchg pop lcall int3 jge aam xchg aaa leave stos loop out and push addr16 jmp (bad) lret cmp lods data16 adc int3 test mov sub repnz and mov clc negl roll cmpsb dec arpl icebp mov inc dec mov out sub and jns and test push imul add mov out xlat (bad) ja jns shr mov and xchg rcl cmp sbb xor movsl push xchg adc inc adc cmp into pop lret mov je and aam imul jnp fstl or enter out xor lcall rorb out jg out data16 jge outsl ss cld dec ror jp bound sub incl (bad) bnd lock repnz cmpsl jno inc dec inc lods cwtl inc maskmovq testl pop pop add ds jge cmp out sub lods cltd jl sub inc sbb mov mov je movsb roll lea out bound inc xchg repz scas add pusha jo or or jno lret add sahf mov aad dec or cmp lcall inc mov lret mov jbe jo xor cmp out or sbb (bad) int sbb inc pop sub mov ja adc testl cmpsb cmp or insl roll (bad) (bad) mov (bad) mov addr16 cld inc mov sbb lea ljmp sbb push sbb loope inc outsl push push nop int3 inc xchg pop mov negb pusha loop xchg cld mov mov enter jae jle mov faddp add nop sbb adc gs xor sbb daa stos pop mov rcrl (bad) movsb shll mov scas push shl add adc pusha cwtl xor insb pop (bad) push (bad) xchg and xchg test imulb loopne shrl movsb dec mov mov push addr16 ficoml js ljmp lock xchg push fsts push dec cmp and push bound or dec xor outsw push out test jns bound jmp negb inc mov dec clc push xchg (bad) je hlt sbb test mov jp cmpsb (bad) jp xchg sbb clc (bad) cmp (bad) (bad) movsb orb adc lds mov sbb sti lods incb loope adc xor xchg xchg push adc cmp cs xchg fldenv cs pop ja mov xchg ret pop push xchg mov jecxz sti and mov pop sub mov cwtl shl inc push call and in sub mov mov add sbb notl (bad) in imull pushf fstpl jbe fnstenv adc movb adc ret mov push out or push in stos xchg push test inc adcl decl faddl loopne test dec loope push adc (bad) (bad) icebp flds fsubrp test imul mov mov sar pop sub push push cmpl mov jecxz ljmp sbb mov sbb popa inc (bad) or push fcmovb in in loope scas jecxz or xor jne fimull cmpsl mov ret cltd das dec or mov pusha xchg xchg sbb sub mov mov loopne add mov or mov jns cmpsb and xor shlb dec xor pop inc aaa xchg jne loopne lret je shrb fidivr repnz scas mov shrb add scas or lcall push mov mov (bad) idivl (bad) imul es mov js xchg xor or jnp aam int3 mov push addb cmc aam cmpsl mov push ljmp pop imul xchg dec mov mov cld xor in lcall mov add sbb roll bound xchg fbld push sarb fmuls fistpll scas aad mov and scas mov je sahf adc jl mov cs in mov in dec lahf shrl lret lcall cmp (bad) popa jge or lods adc data16 inc and or xorb sub addl (bad) xor and or shr add pop jmp mov frstor mov jne and xor ds or es nop in dec hlt and pop shlb xchg xor push sbb inc sti or js xor mov push or jmp xchg loop adc adc mov jge loopne pop movsb lods jge arpl data16 xor mov pop push insb push ja scas into loopne pop cmpl (bad) sub mov and adc xor xor push je xchg in cld insl repz int pop fistl rorb out subl jo call int3 cmpsl (bad) repz jecxz loope jecxz in adc aaa dec int3 jbe push dec loop xor loopne dec hlt out inc or mov stos dec je int dec movsl push out inc pop mov push jecxz push mov or mov fwait inc push jle push jge fs out dec notb xchg push loope pop scas xchg icebp lret cmp push cmp ret movsb cltd adc pushf sbb mov ficoml jbe mov and xor ret xor cmc ljmp fcompl (bad) xchg inc cmp cmp add jle sub ret sub ja push mov loopne lret mov (bad) repz inc fwait ret ret fldl mov loopne lods mov sbb test loope cmpsl loope pop rolb mov aaa insl insl out mov mov jg cltd roll ss or cmp mov inc mov pcmpgtw sbb lret rcll fidivrl lret xchg or jae add inc mov adc mov mov pushf in sbb jge test or mov fidivr jmp cmp cld ds iret data16 xchg arpl and lods repnz repz insl add mov in xor push popf xor sahf popa jge sub mov push and add xor mov insl loop fsts adc enter sub sti mov xchg fbld js call pop cmc aas mov rcrb mov dec loopne dec clc jnp mov dec ss das leave push adc adc adc decl (bad) loope icebp nop bts mov into mov lea xor dec icebp mov fcoml adc dec out adc add test mov push out sub lods ja sbb js arpl mov sub lcall adc or imul std sub inc xchg in jecxz dec pop pusha mov push into sbb clc or push ja hlt or lret pop inc xor mov mov lret sbb imul cmp idivb icebp int3 jb out iret add (bad) adc sbb cwtl jne sbb push cltd mov sub (bad) jmp pop sub mov test mov ffree icebp mov cmc aad lahf add xchg stos mov lcall or sbb data16 jo lahf mov clc cltd insb les dec fadds inc dec xchg enter inc cmpsb mov ret adcb mov (bad) lds cmp or sub cmp jno pop stc aad or or mov pop cmp push clc test outsl rcrl pusha dec outsl lods and dec fadds xor fadd cld sbb jns cmp adc in maxps inc cld or push push out inc push push arpl jge fldpi mov sbb dec sub (bad) aad adc xor adc xchg push add jmp sbb aad mov icebp push das fwait sbb mov loope aas test shrb call (bad) dec adc outsl stos xchg scas sbb mov mov adc shr fwait shlb mov mov mov mov cli sub add (bad) add int sub xchg and in (bad) mov jns ljmp (bad) mov cmp test sbb pusha xchg scas sahf mov dec mov in jno insl push stos push add lock lea fwait test enter mov mul inc xor push xor lds xor gs push loop test pop mov push (bad) ss cmpsl scas mov pusha push insl jg lahf xchg mov cmp dec aas iret dec bound push addl hlt and das ds push data16 mov lcall movsb call xchg dec inc sub lods (bad) pushf es imul js icebp adc adc sub cmp in stos pop lahf fs call mov mov jns (bad) scas dec sub pop pop sahf push stos add sarl jbe out icebp add inc rorl jg mov mov insb push sbb loope or loop add fild pushf orl (bad) ja jno ljmp jg sbb out adc push loope mov dec pop inc mov add data16 cwtl ds hlt and cmc lcall popf jae jmp mov inc dec test test out inc jp repz add gs sub jecxz jns jmp dec pop cmp fcmove mov jecxz pop (bad) addr16 xchg stos inc mov sub mov stc or mov jae xor adc pop pop inc into fucompp dec push xchg xor fs fcoml pop sub push dec call jne fsubr xor out cmpsb jnp and out push shrb mov jnp pop adc pop test jbe in xchg xchg lahf cmc add call in push data16 mov test mov sti or mov inc sub or mov jns xchg mov mov mov sub (bad) in pop dec mov (bad) icebp lret pusha mov js pop outsb out mov inc fs aas popf jg mov pop xor imul rcr insl mov cmp inc xor out aaa dec ss jmp repz mov xchg add mov cwtl lds xor jge (bad) cmc sub fstps leave xchg dec jbe sub dec pop imul loope pop pop jmp fnop inc (bad) aad fsts divl dec (bad) out into aam xchg and rcl mov cmc pushf xchg xchg out mov outsl dec or sbb repnz cld rorb aam sub jge xchg mov and cs movsb (bad) lret mov fildl (bad) outsb loope or jbe jo mov lods pushf and push scas push pusha xlat add mov mov (bad) cmpsb xchg xor mov xor or daa xchg and fs scas and cmp xchg jae sbb pop add push sub adc jp les cld dec lds inc or icebp hlt out sarb cmpsb rorl andb jmp push lcall rcrl loopne stos gs mov add adc out jbe mov (bad) fidivrl sub mov lcall retw xorl cmpsb adc jl cld mov jecxz out fisubl jge int jnp jl mov cmc and xchg mov jns jg pop lcall (bad) xor das mov xchg je insl jbe hlt lahf repnz jmp ret push pop and xlat cmpsl dec fisttpl cmp mov andl cmp loope js jg xlat shrl lret adc loop pop lahf push aaa add mov mov sub sub mov mov inc push push mov jmp shlb inc jo loopne loope stos (bad) ljmp dec adc test mov pop push je add dec aaa add insl add jle add mov xchg sub out inc jb adc aaa js xor lcall pop xlat cmp in roll push icebp add jmp xchg fcomps lds movsb mov add mov mov repz pop add xor or fucomi pop cmp adc into ret inc add or negb je les loop imul push jge fdivrl lcall lock push xchg inc fisub cmp sub xchg sbb aaa pop jle lcall jle into ss popl (bad) sbb xor push sti cwtl mov add dec in push sbb inc int mov loope add jne mov pop jecxz std out jp or imul stos addr16 jbe sbb mov in inc push cwtl sbb sti and adc mov or popf sub fsts repz and es inc xchg movsb sbb test jo sahf pop ss pop jge add pop test mov push jge shrl fs push and cmp sub fnstsw mov mov dec icebp sbb fdiv sbb push xchg adc jle popf mul (bad) outsl das jl lds es lods scas (bad) or out xchg add jbe test aam push (bad) (bad) mov lret leave sbb fldenv (bad) in test pop (bad) int into pusha mov xchg and in jns and test shll out idivb pop push stos outsb fldcw in outsl cld lea xchg iret (bad) adc cmp dec fildl movsl or fild cs gs cmp mov scas daa push and in inc idivl stos adc adc inc rorl or insl inc push rolb mov repnz shll dec mov xor test or rcr adc sub mov scas sub lret mov and outsb ffree and cmpsb bound xchg adc cwtl jecxz mov lahf leave lods mov cmp or insb xchg mov std ds nop les sub xchg outsb jp mov push mov sbb jmp add flds iret adc mov lods ss pusha jge mov sub cmpsb cmp sahf mov aas test dec mov ret (bad) adc lea fnstenv jo (bad) mov and xchg fnstenv dec xchg cmc dec (bad) jo lea lds push dec mov sub cmpsl imul gs add mov fs push fstpl faddl out inc (bad) jge or push mov popa push sbb xchg jecxz addr16 pop dec push xor mov daa pop in dec clc dec int3 icebp xchg add cs stc xchg int push push or movsb jno jge pop ljmp das (bad) sub loope jl jae sub decb mov in dec test adc cmp decl (bad) sub sub and fcomps pop or push aas inc cmp add push dec add fistpll arpl test sub out add lret mov pop xor push mov xchg jg lock mov das mov xor xor icebp lahf inc adc dec (bad) pop pop out or inc popf loope mov js cmpsl stc sub pop sbb push mov adc push mov stc stc dec iret lock or shrb ffree inc and mov mov in (bad) pusha mov lahf lock mov sub out imul insl cltd inc in loop cmp add call mov push jl das cmp inc popf jg jae (bad) lods mov push insl daa scas cwtl addl xor xchg mov mov or daa (bad) or jmp cmpsl dec shrb pop jb push mov dec aas sbb pop clc ret inc cmp jae push push cld inc je push inc inc outsl mov (bad) fdivrs scas lahf xacquire add jo int3 js mov movb sti ficoml mov and dec inc movsb out shrb inc (bad) jo out jmp test inc sti lret dec jg clc aaa inc ret pop dec cmp and dec mov pushl lock mov xchg jmp push xor (bad) iret mov std jns xlat lret inc fs xor push shrl es dec cmp mov adc or or sti or inc sub bound cmpsl repz aad aas je (bad) imul lret cs pop std in fisubl aam pop fs andl gs cmpsl addr16 arpl mov andb inc sbb xor das push popf lods stos add mov mov outsb push adc test add popa xor (bad) lea in movsl jns dec sbb addr16 jle fs cmp dec jecxz fisubr mov jbe sub fs lret jp (bad) daa out es stos sub cmc loop add in xor das fwait and jle nop (bad) lahf stos or out sub (bad) dec js cli imul dec add inc and xor in fbstp fimull call out mov mov call aad test rorl repnz das xchg or cwtl jecxz mov fwait jno pop les inc ljmp insl cs xor cld loope sbb call lds imul dec inc ret mov pop movsb fsub or lods jg or std mov mov ljmp xchg shl insb and ja mov js mov push mov mov mov pushf cmc lcall mov sbb xor (bad) cmp in xchg xor pushf jnp jecxz sub xchg xor out cs sbb sarl ds fs mov push cld fist mov sarb or daa lock sarb or daa lock sarb or daa lock sar cmp adc pop lock add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop and popf insl mov (bad) xor (bad) mov fnstenv es xchg insl xlat dec out pop addr16 dec mov or and add jo dec mov insl xor sahf (bad) (bad) ds arpl push push pop pop sub pusha icebp clc loopne add aad (bad) cwtl inc ds add xchg lods or gs inc cld jecxz xchg push popf repz (bad) nop mov adc int3 (bad) gs or inc sub cmp into js outsb stos movsb add add lret je jge lea fwait dec sahf mov add loope fmull inc test pop xchg je jbe inc iret and xchg jl and mov mov lea lcall fisttpll inc fs nop pop test movsl sti ret adc int movl shlb loope scas insb cld xor push insl dec in out (bad) lods jo shlb xlat nop adc pop inc push (bad) jae js xchg jp enter pop xor pop sbbl ja sub notl movl push fistpl iret (bad) mov sub daa in loope leave (bad) or ja mov sbb jno cmp cli cmp sub sahf dec cmp lods pusha cmp and mov xchg outsb cmp push fdivr nop mov addr16 push dec jle and add mov sbb jae or or fnstcw or aam outsb add pop mov push fidivr xor mov xor les divl adc call or lock pop push xorl call (bad) sub mov mov inc addb leave adc xchg push gs gs nop test repnz ss cmpsl aad sub loope testb inc fnstenv mov mov in sbb aaa ja nop (bad) icebp sub dec test inc xchg mov sbbb lcall aaa cmp xchg call repz adc jne sbb movsb jl stc cmp cmp adc pop aaa mov (bad) cli (bad) or popa cmp jne jno cwtl xor fistpll and (bad) jecxz xchg and xchg jno lock roll xor add ret xchg fnstcw cmpsb mov mov repnz enter lds and in push adc ljmp dec and add hlt push mov ds xor xchg fucomip pop jmp neg cs add aad cmp sub roll loop jo aas in xchg pusha rcrb jno xor lock jne xchg int3 gs and orl mov add cmpsb (bad) xorl cmpsl add (bad) in sti dec push push in xor cli jo cmp arpl lds push mov jbe lock lret mov sbb sub push out aam sub lcall in stos outsb cltd mov mov inc mov sbb aaa pop ret idiv and out sbb mov popf dec in pop inc mov insb sbb inc cmp and ror and fs mov inc push cmpsb push or xchg pop or mov sahf cmp rcl movsb and into mov mov loop lods mov data16 mov mov jo inc pop sbb imulb aas (bad) pop xor in inc push jb adc xchg scas shrl lahf xchg mov lret mov mov (bad) jmp jne pop (bad) xchg sarb add repz sub pop mov or insl mov cli mov mov jmp mov mov (bad) mov mov xor inc dec (bad) lock hlt andl stc scas mulb dec imul add inc mov push test inc xchg jg adc out adc lods call mov sbb xchg cmp cmp inc sub out cmpsb notb sub stos xchg fwait test out (bad) push call mov aad (bad) loope (bad) loop vpxor jbe (bad) mov fdivrl fdivrs jmp loopne loopne ret pushf mov sub jle test movb imul push add adc (bad) jge mov scas pop jnp imul push sbb pop movsb lret inc divl or sbb mov iret sbb sahf stos add sub in rclb ret add adc lea testb pop adc ss jne adc test lcall sub aam sahf insb jp push cmp jo hlt jns lahf or stos sbb fcoml mov enter adc out mov insl inc icebp sub leave mov pop (bad) cmp push fisttp (bad) xor sub aaa (bad) and movl and inc mov jno neg dec imul cmc lock out mov notl add sbb outsl push push arpl mov in pop pop into mov lds out leave repnz movsb aas out iret mov lcall and and cltd (bad) loopne stos lahf xchg cwtl jb dec adc aad into push sti iret push test mov repz push in dec push xchg mov xchg test or divl int or push sbb imul sbb inc jne mov sti ds (bad) lret clc mov push jg (bad) hlt test add popa test inc cmp sbb dec mov mov inc movsb or mov cmpsb aas mov push pusha sub inc cmpsl jne mov inc xchg popa enter test mov jg daa pop pop cmp test pop fmul out or jmp push jb (bad) ja mov ret lods mov pop sub cltd pop sbb jno mov inc push pop fsts or jne mov cld roll sbb inc fadds enter and dec mov pop cwtl add xor inc xchg push xlat std out jb fwait int popf daa inc push mov mov js adc imul js insl mov negb inc and mov and jns lret out lock stos push pop cwtl and sub pop push ljmp xor dec sahf rorl xchg sub pop in lahf popf jno cmp and xchg and mov movsl xlat cltd xor insb and xchg subb imul ret cld (bad) push pop aaa jg rorl push inc faddl push push mov leave inc fisttpll mov jno push add jnp push mov xchg lock es loope adc sub scas jae,pn repnz rol je aam xor popf sbb or scas stos jmp pop xchg cmp pop int3 or inc inc pop mov mov lods adc sub loope ds inc sbb aam mov dec inc inc xor jns mov mov pop xorl mov out jg xchg dec or or add jle cmp popl xchg sub xlat shll int3 mov push sti push jb cmp push out or loop jne cli scas lahf cs fld adc jmp or mov pop iret jne test pop or add movsb dec add adc ret push into mov call out sub push pushf es loop cmp ficoml sub cmp pop adc sub push test and movsl add pop mov pop jle push mov lahf (bad) and sbb and inc mov enter aad mov sbb rorl ljmp ljmp pop ja lods mov aad sbb imul ss stos dec cmp in xchg push dec jge mov and inc xor sub push out mov cmp fistpll sti push pop xchg aam dec or inc outsl rcll out jnp fistp cmpsl xchg cmp ffreep jge mov out jmp pop into les push and or jle inc mov mov and lods push jnp sahf dec xchg cwtl imul fimull lret call and cltd out cmp or jo mov inc sti or shlb adc mov and jnp adcl sbb mov mov push cs and push jne outsb mov or cmp cwtl sub pusha minps or iret in stos iret (bad) out cmp pop mov je push push dec xlat inc mov dec sub lods data16 repz ljmpw (bad) xor jmp mov adc push jmp xchg and (bad) clc pop mov add hlt and les test loopne cmp das push mov iret mov movsb cli clc insb sub into push add jecxz fstpt jmp cld (bad) ds pushf jg sbb xchg lea jo mov ljmp stos or mov adc test mov iret movsl sahf ret fisttp dec mov outsl enter (bad) push ds and js cltd xchg mov mov xchg fbld stos push mov push mov push aas push imul inc pop push aam jno in fwait icebp push adc xor jae imul xor inc push iret cmp (bad) dec ss repz xchg in js jbe inc les and sub inc pop stos mov outsb push ret or cwtl test pop pop sbb pop and mov loope xor mov cmpsb cmpsb and aam dec sahf (bad) mov adc xchg shrb mov ret ja clc sbb ret lret dec push inc popf cmp loop or push xchg cs and (bad) fiadd push sbb pop sub movsb jle sub xchg popl jmp mov or fcomp lods fadd stos dec or push fwait repz lret mov push loop inc inc or push hlt ret ja fildl inc mov int xor ret sub (bad) ds xchg lcall adc roll sbb mov movl mov sbb (bad) (bad) xor push pop (bad) divb lahf in jo ret loopne push and pop stc (bad) or pop das ret add sub std pusha sub fnsave inc bound add jmp lea addb jp test and out nop shlb nop push cli stos and rorb jnp jb push and aad jp inc inc sbb shrl cmp stos cs les adc mov xor dec lret mov inc flds fwait stos dec mov cmpsl aam shlb mov sub jl xor shr mov push mov xlat cmpsl xlat jns cmp sub dec xor adc xchg fisttpl adc insb push pop es sti sahf hlt mov cwtl cli mov arpl jns xlat pop clc daa dec xor mov jmp gs (bad) out jno in in or ret add (bad) in pop xchg or sub inc xchg repz cmp xchg ljmp stos inc dec mov mov outsb sub sub push jb ljmp gs inc cmpsb pop and sub jecxz fsubrs add stc ficompl mov movsb push xor xchg dec push dec push (bad) or adc mov andb test push mov popl push imul enter mov push insb dec xchg out or mov mov pop in subl mov adc mov in inc imul sti xor pop ret (bad) adc je popa mov jno ljmp push cmc jge mov ret lahf movsl push jmp sub inc jmp mov leave ds mov movsl jl cmpsl xor std xchg pop xchg je xor cmpsl add cltd cmc adc imull or pop and ds in repnz shll dec xor insl repz scas addr16 pop push jno js mov jmp (bad) inc test jle or pop insl push jmp mov mov fldcw (bad) les (bad) adc mov jmp (bad) stos xchg push out jp scas repz mov xor inc out (bad) loopne scas (bad) js lods nop cmp mov mov pusha int insl push push notl mov pop std outsb bound adc xchg dec jge insb fildl in lods and pop or mov pop ret ftst or sub xor inc call es adc mov cli test repz lds push cmp fwait cmpsl pop into xor jns pop lret pop add cld push or outsl scas xchg int repz dec sbb dec dec call and mov sub gs or push add scas mov jmp lahf loop jno push mov push inc lea jecxz cmp jmp sub xchg cmp mov mov inc sarb dec out mov push das xchg mov push (bad) (bad) jl sbbl addr16 ja add xchg mov lret mov aas pop xor pop ret and int pop bound lods fs xchg cli cld popa rclb mov ficomp out push ret int insl cmp inc lahf jo in lods or xchg mov pop aaa hlt js fs icebp push xchg push iret pop jecxz pop ljmp fnsave sub (bad) cwtl fidiv dec mov sbb mov dec (bad) inc or dec jo jae pop and scas dec (bad) icebp dec cs jno (bad) in sbb popf das push push mov or push fstps xchg mov sub stos pop sbb sahf xchg mov push (bad) jb mov dec or daa jl jecxz jge call dec push pop inc jnp xor jae (bad) fidivr sub push mov add leave lcall clc jle mov mov fdivrl mov adc sarb push mov (bad) iret and roll hlt jmp push out ret fdivs sub jp and and sub aad loope mov jae push (bad) jae dec mov push cli cwtl push push adc repz repz out jl push push addr16 lea divl es pop inc adc daa andl mull add das or (bad) mov sbb mov jmp mov stos int3 and and popa negl and in (bad) aam fistpl shrl sub jns push push mov jle fsubrp les cmpl pop mov loope int pop lods mov aad cmpsb pop pop jle hlt das inc stos cli gs pop push aas mov aaa mov add inc lret jns xchg xor add xor inc (bad) fisubrl fcomip pop stc and jmp hlt add leave pop loope shl in and pushw (bad) ljmp jnp ja,pt mov and mov adc adc jg pop mov cmp mov repz out lea lea ss mov aad cltd mov (bad) imul sbb nop lahf sub push cld pop adc pop mov jae mov mov or pop lods punpckhwd dec in std jb dec sti xchg or iret int3 mov stos pushf mov sbb pop inc dec dec push adc push jge call icebp sbbl call xchg fidivr add cmp jp push sub add adc pop test adc inc xor inc xor jg mov xchg lahf in jnp cli adc out inc incb dec lock scas push or pop mov (bad) pop pop inc adc sbb fwait lods jge in rclb mov mov repz cltd add push stos test ficompl outsb adc lcall in jg stos cmpsb je je test test push lret mov ljmp ficomp lods fwait inc mov int jg pushf pop test icebp outsb jg repnz (bad) jno mov insb movsb ffree data16 iret jae jo sbb fcomps or dec mov pop mov jl sbb add and nop add lods ja add les xchg jbe and cltd js sub sbb (bad) sahf mov lods push arpl mov cmp cmp jno jne fs js nop in outsl sub lods add xchg aad int and inc xor aad (bad) pop sub adc push pop push pushf ret mov (bad) xlat (bad) push cmp stos (bad) pop mov les clc mov jns sbb imul jl lds mov jno int3 adc scas push cmp jecxz fs jbe push xchg pop daa stc push mov cmp jno jl push cmp pop les movsl mov xchg (bad) xchg mov push cltd sarl push ja xchg inc jecxz lock or sub mov and jge aas lret mov or mov add (bad) dec pusha dec pop insb notl jbe movsl xor jbe data16 mov add movsb pop fisub stc jb and adc movsl iret pop and jbe clc add mov stos addr16 out push test enter popa mov fadds repz pop (bad) jne or fdivrs mov dec in (bad) mov test adc sti add rorl xchg hlt fnstenv sbb imulb jle jmp mov sbb inc jae das (bad) (bad) clc dec das aas or inc sub jecxz push hlt cli ret popf pop dec jnp sti pop inc into js addr16 (bad) jb mov shlb add inc inc mov sbb pop xrelease mov mov imul jge dec push lock adc out repz lahf fwait cmc pop int3 xchg mov mov jle jne neg or incb mov jle adc rcl sbb mov test test popa es mov xchg or int3 lods repz das fwait mov iret aas pop aad lock push stos jno jnp jp jl dec mov je aam ret xchg and es inc dec addr16 test stos or repz mov aam jmp jns lods jae mov repnz aas xorb inc (bad) cld inc push call cmp push shlb mov ret aam pusha jb iret mov and mov mov pop jl neg mov nop (bad) mov xchg fisttpll mov psrad js or out push xchg inc mov loopne idivl insl xchg xor or cmp mov test lods enter mov xor test cmp insl sub jl daa or lret lcall and sub cltd push aam adc xor in push data16 scas mov or stos xor mov les lea jmp call sti hlt xorl fcompl or dec xchg xchg das sbb sub pop enter test sbb pop test add cs icebp fwait daa mov ret lods fisttpll xchg (bad) frstor and les push lds mov pop stos push stos (bad) lods lret xchg cmc into cs push in adc int jmp enter aad sbb ffreep loope cmc push (bad) js dec sub push adc pop sbb std xchg fdivrs lock cwtl sahf xchg std repnz lcall jge push int3 fwait xchg add xor fldl outsb lods data16 popa pop jbe jecxz xchg ss or sbb add xor pop xor adc int3 sub or mov xchg jne fdivrs inc arpl dec sub inc aam enter add xchg shrl sbb fs popf mov mov sub pop in dec pop ljmp fidivl pop mov sub (bad) loopne add insb sub (bad) in xor jb iret xchg adc dec cmpsb (bad) out pop xchg insb imul adc jae insl lcall push lret addr16 addl rcrb (bad) xchg push fnstenv lsl pop mov nop pop imul xor adc stos mov or adc or test (bad) lock lahf sub pop movsb dec adc push xchg decl imul icebp sbb std xlat jne movsb out out into andl push arpl lods xor jp mov clc sbb lds sbbl inc (bad) xchg fisttp mov pop cmp mov sbb jo mov sarl mov add cmp lret add mov rol popa pop popa lea les stos mov jo adc rol in addr16 inc xor mov mov (bad) jbe mov fistp sbb lret sub jge test rorb lds sub mov test ficoml inc stos mov cmp pop and stos lret outsb xor push int popa je jb cmpsb das adc (bad) dec stos roll fwait inc or mull jbe adc inc or jnp adc push mov mov sub inc add fisubrl insb ljmp dec mov je,pn lds cld add xchg (bad) push jmp jb insl mov or in dec pop push stos gs inc mov xchg adc sub shl lock jbe ret das imul popa enter lods pop dec mov aas arpl test rclb adc pop insl fisttpl jl or ss xor adc xor aam ljmp dec dec mov dec add cli sub (bad) das outsl fstl je hlt stos in and (bad) out in cs int cmp add and push rorl stc and dec and pop cli mov stc push pop cmp out sahf jg divb push push jbe aas push add movsb roll xorl std mov mov cmp popf and xorl jb push sbb vxorps and xchg ror push (bad) gs mov dec (bad) (bad) ds mov in js mov add xor pop jnp push loop jle cmp lret rclb inc mov cmp dec mov stc lea jle xchg int3 (bad) dec psubsw aaa xor imul jmp xlat test bound xchg jmp or scas fsubrp aas scas test jne pop add test addl dec leave xor cmp (bad) daa mov push or call ret pusha sub clc dec into xor mov imul xlat inc mov jo ficom jge or mov xlat pop test (bad) cmp lea cmc dec xlat jae jne dec fcmovnu cmp js orl mov hlt mov scas xchg aas stos inc push inc faddl mov mov push int add fs fcompl dec in flds jge insl mov add insb jmp or jecxz data16 or sbb stos xor lahf jecxz shrl scas fucom aaa pop ret push push xchg iret clc outsb insl mov inc cmp inc sub mov push push dec lock fs lock es lcall push or and push xchg sbb ljmp sbb popa cmp lret popf into and sub push js inc mov sbb cmp imul mov push push cwtl xor lods clc mov or jmp cmpsl add loopne clc ljmp dec pop jae (bad) rcll bound loopne dec (bad) push sahf fcmovne lods rcrl mov std js popf pop push pop jmp gs test sti cmp or pusha scas add sbb fldenv pop (bad) mov lret push xorl pop jle and mov push mov sbb add jge stos push std (bad) mov cmpsl push cmp xchg mov mov movsb jae movsb sub mov rol dec pop out jge cmp repz test jb cmp mov sbb bswap pop rcrb add mov fwait adc inc xchg or cwtl and lret repz dec xchg js mov int3 mov or fs addr16 in fstpl xor push lret fdivr mov (bad) or lcall inc out xor and dec pop mov mov mov push cltd loope jp mov lcall ficompl xlat (bad) pop sbb push cs and fmul xor lds jnp out pop cmp push sbbl pop (bad) xor sub aad in dec jne fstpt xchg test rcr (bad) jg pop adc les cmp ljmp mov bound jnp push shll pop sbbl sti dec add insb push xchg xor sti sub pop stos imul lret sub jnp pop int3 daa mov (bad) pushf push dec fisttp and leave push out bound mov cld cld (bad) pop jb sbb lock jb mov rcr out and clc ljmp loopne sarb jg incl or adc daa lock loopne sarb jg incl or jg clc aas lods xchg stc and add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add out and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov test inc push push inc and xchg (bad) leave mov lcall sbb (bad) sti cmp cmp clc push add lods add cltd out push sub xor mov je repz or pop jns mov sub enter test mov aas movsl push (bad) icebp repz jne nop sbb and pop mov insl iret sbb cs mov and and push stos les cmp pop data16 leave pop comiss xchg bound sbb (bad) int3 addr16 sbbl rcr iret pop (bad) jecxz mov sub or jno out push sub jno xor repnz ljmp call pop pop popa pop mov cmp je add sti fildl (bad) int outsb pop aam or ret data16 sbb or mov jae pop lds fisubr fsts (bad) icebp mov xchg lods add ss mov jge cltd pop ret xchg pop imul in lock fisttpl cmp movsl or mov pop jle sbb negb imul addr16 pop xor pushf test divl sub pop lret in adc daa es data16 or jecxz rcl inc (bad) rclb dec insb dec mov jp (bad) cmp pop pop lock in aas paddq shrl movsb add add xchg xchg nop mov aam mov fdivrl nop idivl and adc cmp aaa adc and mov sbb mov (bad) xor cmc push lahf aad stos addr16 jne add mov and xchg fwait into push jo jne xchg pop inc xlat (bad) adc lahf insl and jnp and repnz fnop lods mov int3 (bad) loope mov lahf sub xchg pop movsb pop and dec ljmp sub (bad) jbe jmp out leave sbb aad and mov pushf adc repz in movsb adc int add xor aas test arpl adc pop stos add mov (bad) aad add sbb iret clc add (bad) add push pushf leave arpl das enter pop cmp orb pop xchg fs nop adc add mov dec fidivr push pop inc lcall sbb es xor in daa jge out jge mov in repz cli (bad) cmc das sub dec bound adc out mov hlt lret inc iret push scas hlt in rolb and pop in hlt daa lret inc out mov jo inc mov mov sarb dec pop push inc les fldl mov inc pop and mov das gs dec movsl not pop lea in rcl mov (bad) fisttpl xlat insb push cmpsl enter sbb push xchg jo repnz stos inc sub orl movsl popf sub adc hlt lods leave imul cld jns jno pop lds jle or xchg push fmull or in or pop sub movsb sbbl daa popf mov pop mov cmp push sbb dec in lahf scas and dec fildll push out clc or and out adc ret pop xchg into daa out add xchg (bad) sub and jo push mov lcall scas cmp sbb mov out inc sub lea jb or lock repz xor jno rcrw adc pop add out repz jle mov sub lcall mov inc or das cmp testb jne insl inc mov or popa push jbe adc add shlb cmpsl mov jg cmc inc arpl jae dec mov subps dec pop pop xchg jmp add popf lcall ret adc rorb xchg jecxz clc adcl jne jnp push jne add sbb ret jg push outsl inc (bad) (bad) hlt add pop das jg stc sbb fildll lock aaa dec pop adc push pop jg les jle pushf inc pop sbb add xlat add dec add std (bad) mov fildl scas pushf inc dec out (bad) mov push hlt sub xchg fs (bad) push repnz adc sarb mov dec inc in hlt inc into hlt pop lcall xchg xor jl cld mov enter (bad) sub into xor fs jnp icebp cmpsb mov sbb in lret lcall add rclb idivl fidiv xor aam xor std mov or pop nop jbe or aam sbb das repz scas int jae sbb mov rcr mov or (bad) imull pusha sti xchg bnd or push (bad) sti sbb pop sbbb dec pop in mov sub out jl jnp adc inc mov lea xchg popa sub (bad) cli sbb cmp movsl aad repnz sahf and imul loope mov sub fisubrl sbb outsl (bad) mov shrb icebp wrmsr out stc cmp lods cmp icebp cmp push xchg push cmp jno xor pop leave push mov es mov addr16 jns aaa push mov fstp sub mov pop ss push cmp lret push sbb ja pushf mov xlat sti mov jmp inc out cltd movsl sbb mov je int xlat test add xor xchg add mov jl sbb cwtl je adc pop bt cmpsb aas pop hlt insb (bad) mov iret push in dec xor and hlt or inc addr16 aas fwait add pop fmul repz mov jno mov mov jae mov mov xchg cltd stos mov xchg and scas adc stos jmp outsl enter mov dec cmpsb rcl es sbbl jmp ret push (bad) lret outsb int3 push sub iret addr16 adc lds cmpsl outsb mov inc outsb pushf leave push fldcw mov fbld scas aaa insl aad cmp movsl lods jl inc sarb divb test jns insb sub and daa dec imul mov push adc mov pop loope mov push add aad mov sbb inc cmp pop or inc rcll inc inc or jns cmp out cmp insb loope in stos das enterw pop pop lock (bad) jno std mov xor cmp sarl push or push sbb cli aad dec push dec mov cmp scas mov cmc and das pop ret shrl icebp adc dec lods cmp movsb (bad) (bad) rclb mov push dec or push inc xor sub out repz add ja mov cmpsb cmp fistp inc sub leave sub add (bad) cltd and (bad) mov mov mov dec inc sub dec in mov xor inc adc lds in in mov or (bad) xchg (bad) fwait jns pop imul rol cmp jbe clc ljmp hlt push pop dec fsubp into out dec sub inc mov repnz je out jp mov ss in clc sub in scas std and cmp fdivp inc mov ljmp mov out push (bad) lds test shrb (bad) pop test mov scas sahf iret bnd aas in test pop test js add (bad) xor (bad) fcomps sub out sbb mov sub xor sub xchg push jbe jle test (bad) pop cld adc (bad) int3 jecxz xor mov pop pop lods mov cltd insb sbb das addb out mov nop mov out lds cmp mov imul aas mov fwait sbb xor pusha add popf (bad) mov ljmp adc stc pop daa pop fdivrs add inc xchg das push arpl dec mov lret mov imul pop mov ficoml stos dec pop sbb mov mov movsb push jl test mov add push clc cwtl stos and (bad) pop cld arpl push xlat cmp fmull dec mov or sti inc jno int xor mov cwtl fs and call push lcall cmp mov stc inc xor mov cmp into (bad) fldt pop leave andb and xchg pop mov sbb jbe push mov adc mov std inc mov xchg lret iret sub cmp (bad) mov cmc sub mov push add arpl push ds iret cltd scas imul cmpsb mov cld jnp add out push lds sub cld jg jp and pop rorb or cmp push outsb ljmp cmp outsl sbb lcall (bad) jge sti pop lret cmp int3 cmp dec or loopne int cli aaa cmc out mov push stos and mull cwtl stc mov pop inc adc les cmp popa inc jmp rcll mov arpl sti int sub mov push inc mov lret mov jne sbb push xchg sarl pop call adc cmpsb cmpsb jo pop (bad) aaa xlat aad cmpsb cwtl sbb std dec xor dec mov adcb inc xor jl pop push lret pop sub hlt sbb lock or cld jo jp,pn out insb (bad) loope scas push (bad) addr16 test jnp addr16 add mov in clc inc mov xor and arpl ja pop push lods scas clc in pop sahf punpckldq mov mov mov and push inc mov clc jmp jns add scas jnp ret (bad) pop xchg fistl pop xor inc imul mov pop dec add popf or cwtl sbb mov les ja adc push dec cmp out inc test (bad) (bad) pop push fsubrp clc adc mov mov mov push cld imul mov or pop push mov jge (bad) lahf ljmp loope loopne push aas push dec (bad) shrl call loopne repz fdivrl es int dec dec scas mov jge mov idiv cmc movsb and out (bad) je stos into dec in cwtl das stc add sti add xorl (bad) arpl in sbb shlb xchg mov aad mov iret xchg and xchg dec inc scas mov mov xchg inc loopne dec jge and cmp cmpsl adc dec and out mov or jecxz sub mov loope adc add sub and jo pusha lock mov add xchg mov adc xchg out rcl pop scas mov leave adc dec sbb clc pop inc push add lahf xchg repz rcrl jno call jnp mov cmc xor sub mov lds inc xorl sbbl cmp nop icebp xchg cli dec sbb push popa in fdivrs cltd js aas aad test push push lret (bad) test adc push (bad) jnp lea sti out jnp leave xor mov std aad sbb xor xlat frstor mov in mov cmpsb dec pop jg sbbl or repz dec or mov icebp aam adcb inc hlt dec daa ret xor pop xchg or pop jmp xchg adc das and (bad) dec xchg lret push jmp mov aad int3 inc add xchg xchg sahf jno pop rcll outsb fcmovne (bad) aad dec mov mov sar pusha out test inc lock mov test sub and insb xchg negl jg es mov gs sahf fwait out add loopne ds sbb movsb push mov out push faddp stos ss stc (bad) sti lods mov loopne (bad) jecxz (bad) or xchg jl adc mov mov pop jg and xor loop lahf in or sbb sub jge movsl pop int3 das ljmp popl int3 scas or movsb push out sub jmp outsl add inc and jae push push pop mov mov pop loop sbb imul insl les sbb push test fdivp pop test in mov aad ja xor cmp and int3 in roll insb dec (bad) mov add cli and fstps jo xor leave iret push inc fidiv movsb lret out cmp jl fisttpll (bad) xor adc sahf insb push adc orl test xor dec xor xor sbb jne mov das les (bad) xor daa lods cmp mov push andb pop rcrl add push mov insl fldl aam mov xlat cs xchg and iret xchg into stos stos into stos (bad) mov sub pop inc sbb stos lods push sti movsb jl mov mov inc cmp mov add xchg cmc adc out xor stos and mov jne in xchg mov or push inc xlat repz out stc jno popa cli cmp pushf xor lock xchg and enter cmp lret or mov xchg mov dec mov sub daa inc sub popa aad mov test ds fist insb push mov pusha or sbb das cld mov out mov out inc rcrb cmp sub mov ret clc fldenv scas sub je cmp sti test lcall xor jo loopne mov mov dec adc jne jo jle mov xor leave je xor in xchg dec add xchg int3 xchg add ret and mov and mov and xchg (bad) std inc inc and cwtl fiadd out cmp insl mov in mov (bad) rolb out mov mov je add stos in lea pop insb (bad) mov inc sbb sti dec sbb jp dec es call gs pushf out lea jp test in fisubr xchg popf aaa fs sbb lret fisttpl inc jne repnz roll add dec jmp enter (bad) ucomiss adc aaa (bad) xor jge dec imulb lahf fs cmp inc sti pushf repz cmp sbb out jb cli mov xchg mov xchg popa nop insb ret (bad) push mov (bad) lcall stos repz ror add dec sub je sbb xor inc push add addr16 outsl shrl inc enter je push lret repnz les loopne or ds movsl notl inc repz lcall sbb cmp cmpsb lcall dec in out cmc cmp sbbb xchg dec push cmp rcl push push pop mov xor fidivl mov jle push jle or inc sbb sub inc test repz ret test daa ret lock sbb push xor mov punpckhdq mov adc ret mov addr16 dec push insl jmp adc cmp ror dec lret lock cltd loop in iret stc sub pop mov mov and das les pushf jge pushf inc sbb rolb sub (bad) jbe cld int3 adc jmp lcall fisub ficomp cmp and repz push sbb mov lahf or mov into scas out popf push push arpl pop adc fdivp add repnz insl hlt imul iret dec lret push dec pop loopne dec sbb fisub cwtl pusha pop lahf sahf xchg xlat or mov lahf addr16 inc into dec push jge cmpsb stos nop mov jp call scas pop pop ret or in mov mov (bad) lea mov inc xor sbbl pop icebp (bad) ret or das ret scas push (bad) adc (bad) mov push or dec adc mov lret and mov mov lock cmp outsb int mov es and jae pop ret sub xchg mov lds stos pop xchg dec stc sbb xchg adc and xor xchg loope out mov sbb insl mov push adc loop fisubrl fdivrl add lods pop adc pop das popa jns xlat cwtl fwait lret xchg sub ljmp push loop (bad) xor cmp in push int scas into jecxz xchg adc les imul popf (bad) pop sbb out jecxz push mov inc es ljmp pop and sbb rolb lahf dec pop (bad) loopne push adc mov fnstsw outsb pop push dec sbb mov mov sti cmc insb xlat fnstsw jl (bad) mov dec out push pop in sbb pop cs ror loopne inc nop mov mov orl and mov xlat pop insb ss pop dec dec lret js sub jbe xor mov inc in shrb imul mov out cmp int ljmp adc dec dec sub pop pop or sub mov int out jo mov mov fwait aas out out inc xchg (bad) mov lahf fist mov or lret jne push pushf mov add imul push mov or ja bound xlat pop inc js or mov es popf xor dec cmp xor test lods xchg fldl pushf cwtl inc xor mov jns and pop inc mov negb inc adcb sti cwtl jecxz subl mov dec adc sbb shl dec push jecxz cltd loope pop fs adc int xchg add mov fnsave push daa xchg or jmp pop push push xor mov cmpsb outsl (bad) sbb mov sub jbe jo dec xchg cli pop rcl add lds mov leave sub mul mov (bad) flds push xor jbe out lea add neg jp mov pop dec test jns fiadd mov cmpsb icebp pop push ljmp push push jo xchg (bad) pop sbb push mov mov cs hlt cld jns ret pop push push push cmp lods push push movsb sub sahf bound xchg imull (bad) jmp stos sahf inc add inc iret sub fsubrl lret les adc mov mov dec jne mov or (bad) push sub push or and and (bad) test ror mov cmpsl (bad) in jecxz inc loopne imul inc pop add sub mov push jnp push pushf lret mov mov mov sbb mov mov adc push xor pop enter pusha mov adc mov xlat xchg in inc je bnd test sbb sbb cmp dec push imul loop or mov or loope,pn inc sbb cmp xchg add jle cld leave inc jle insb cmp jo sbb lock cmpsl divb mov ja call adc ret icebp (bad) fimull xchg sbb push loopne popf pop push inc insl arpl and xchg pop mov inc push mov mov imulb pusha or adc cvttps2pi sbb mov mov pop push add or mov mov pop rorl ss push push insl ret dec pop push push (bad) jg clc jne mov popf mov mov popa xchg pop arpl and insl jle orb call stos les (bad) je push stos iret insl imul lahf shrb xor lock call pop (bad) (bad) cmp adcl xor es jecxz int3 add lcall into outsl aad cli pop jp cltd cmp inc stos mov movsb xor rorb push pop fstpl xor cmp add fimull rcrb subl sub jo dec pop xchg loopne movsl jle dec popf dec sbb subl xchg add sub pop sbb mov js sub fwait mov xchg subl push fmull in jo aam je,pt dec fcomp jge stos xchg inc mov cmc and mov mov popa add and xchg sbb xchg pop arpl (bad) pop ret out mov xor movsb or add ljmp dec subl xor test xchg mov xor dec fildl pop pop xor push cmp cmpsl mov sbb scas orb jnp jo jmp das mov push jmp xor push push jge jmp (bad) push and jae mov lcall movsb adc gs or into out mov push xchg dec aam insb mov ficomp inc sbb jbe cmpl xchg mov cmp outsl lock sub sbb and je loope jg jns sub aad adc jo popl in test aad das pusha or mov or cmp mov push fmul pop loopne jmp test outsb jno and stc jo fldcw pusha fldcw mov add mov into lods (bad) dec movsl mov push adc pop xchg sub in inc shl jmp mov add lock data16 out fwait push aam jbe ss cmpsl enter sub icebp dec mov mov adc sti neg jno,pt daa hlt jb push sarl jns mov rorl sub adc movsl xchg stos mov xchg fdivl push pushf jl xchg sub sbbb shll int sub mov dec jg jno mov xlat imul cmp subb hlt mov and cmp fwait push mov pop sub adc lds stos inc inc jne sub jo in mov pop dec xchg jno out push push xchg push lea pop lcall call mov dec xchg lock std push loop pop hlt xor jb mov bound or ja fld mov lea inc mov insb lods (bad) pushaw les fstpl imul add xchg or mov add adc add push push fs jp jge xor (bad) xchg movl add pop sarl lahf cmpsl (bad) sub sbb test pop pop xor bndstx sub pop pop push mov push ficompl jns sbb dec addr16 je aad mov adc or (bad) jecxz js outsb fidivrl or cmp bound cli ja stos aas mov cmp jno shlb mov push dec popf test shrb mov addr16 mov scas jle call test mov out and lret loop cmp pop mov stos jp lahf popf pop aaa cmp outsl mov fabs cld test push push jnp stos test faddl sbb in out inc jnp pushf movsb push das rcrl sar jo dec les xchg cltd mov xchg dec pop hlt into inc dec sahf mov xor pop ret adc dec mov pop into xor sbb (bad) push jmp enter jno cs inc ret jg push xchg jl js lods (bad) out mov sub imul add or hlt insb dec mov jmp xchg adc or mov xchg add in fisubrl out daa imul (bad) mov cmp iret movsl mov (bad) outsb mov xor arpl (bad) loopne loopne push mov jmp out inc scas add mov mov icebp adc xchg sahf xchg push or pop dec icebp mov cmp or outsl mov xor insb mov mov pop movsb rcrb push jl bound or insl mov pop xchg ja out xchg aaa xor push adc cmp cmpb sahf pop fmuls pop out sbb inc dec popf mov (bad) lcall pop fstl jge rclb pop insl nop lret mov cmp cmp addr16 xchg mov push ret push cld lret jne pop repnz loope xchg int3 aad jmp and push mov cwtl inc or outsl lea mov shlb arpl pop mov xor les (bad) jbe mov js sahf mov das in and lret movsb jg mov (bad) cli push mov int iret and pop dec inc ss jmp test pop lret es inc lret mov jne out adc push xchg xchg push xor aas push hlt push lea jo test or rolb addr16 cmp repnz mov jmp fs and fiadd push rcl imul scas ljmp adc mov push sbb pop sbb aaa and nop jg fiadd mull sbb xchg loope pushw aaa lods pop mov js icebp xchg push bound mov lahf mov fs and add test mov leave insb jl pop repnz fsts call stc dec fs push jae lret rorb push fnstcw mov cmp dec clc jp dec test and repnz or jne sahf fimul add xchg ret lahf or pop daa pushf lods leave mov xchg test popa adc mov mov fwait xchg scas sub sub mov nop jbe mov aas lret adc bound add mov and call repnz inc addr16 imul dec stc fisttpl dec dec out aaa lretw mov loop rorb aad stc arpl decl (bad) fstpt decl cld daa lock sarb or daa lock sarb or daa lock sarb or jg clc aas mov in inc sbb add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mull add add or or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop sbb xchg imul sub in (bad) leave mov (bad) icebp xlat cmp jge mov popa cmp jle lahf mov add lret or add and dec cmpsb or and outsb inc aam and mov aas push xor add jge aam xchg aad shl jbe movsl dec or adc scas addr16 adc dec ret inc fistp mov pop cmp mov popl dec lods fs fwait mov rcll inc dec xchg mov or pop sub fldenv loope jne ljmp and or jb pop adc cld out scas push pop dec cmp faddl xor pop sbbl mov scas xor push jl mov subb scas ja jmp aad xchg dec fistl lea xor popa stc imul jg xchg jns pop push xlat inc enter xchg cli idivb arpl and shll dec mov fsubrl in scas inc imul jne test nop xchg fistpl clc roll (bad) clc std arpl push push shrl push cmp push inc xor popf xorb lret lcall popf and ljmp cli imul mov les mov loope ljmp or movsl push scas pop mov nop mov sbb push cltd std js add (bad) sarb pop stos aad out xorl scas in gs sub jmp jle in mov (bad) jne sub sbb outsl (bad) push mov push sahf add xchg fildl in mov imul lcall adc jl inc push mov push sbb sahf dec mov xor jp xlat mov cmp push push sbb (bad) leave or movsb sti mov inc fbld loopne mov and fsubr testl and xchg push hlt add pop in mov xchg ds std (bad) arpl cmpsb lret mov sub (bad) sbb cs pop mov into stos out cmpsb lahf jns or fsubr shrb sti sahf pop jecxz mov pop sub in orl xchg mov xchg pop xor pop mov jmp and inc cli mov sbb inc test sub aad in push cltd and or inc adc mov push push push push pusha movsb incl adc and adc rcrl mov or push adc js pop pop into outsb sbb adc inc inc xchg xor push sub aad xor adc lods fsqrt xchg dec add and shlb pop (bad) xor xchg pop sbb jbe xchg cmp cmpsb insb je mov ret aam xor mov leave test mov stc push rcrl push inc decl push adc push jp inc lods jno scas repnz les lock (bad) pop insb in daa mov lcall js pop (bad) inc sub lcall sub mov pop fldcw or fs cmp rolb js mov or dec push in loopne lods pusha dec ret pop loopne pop xchg rorl mov les xchg aad iret mov pop xor or xchg sti in andl jnp hlt jge push xchg lcall xor push jno add arpl mov call pop call shlb inc stos sub arpl aam pop dec pop xor fwait (bad) jp cmp push push test pop das jl lods aas add inc int mov lret push add ljmp mov enter sahf fucomip lods mov and pop fsubrs add jo fsubrp lret push cwtl jl mov mov stc add testl mov jle ret addl inc mov fbld or xchg or pop xor ret loope stos xchg or lds imul das cmp aas xchg xchg xchg sti jecxz jle push push or mov cmp fnstsw out or mov cwtl push les xor pop push cmp fs sub ja sarl in push or cmp xchg scas out jns cmpsb add psubsb push (bad) (bad) repnz into aam pop add xor fadds push jnp je gs pop mov fistpll cmc pusha adc and repnz enter ret sbb inc mov sbb lods or aas lahf push adc stos test orb negl pop loope decb out repnz mov fadds cmp outsl add inc or mov sahf jp mov mov mov xor sahf mov inc outsb sahf scas ret and inc or jmp int3 ljmp mov or add push movsb sbb (bad) mov pop flds push jb xor xchg and mov cld sti lods mov insb or ja sub sub push nop push into lock xchg jl cmp mov mov (bad) mov test gs cmpsb dec and xor (bad) nop rclb jmp sub push xchg loopne shr das data16 inc jae inc and add cmc and lods jb mov mov push fimul cmp insb xchg sub inc jecxz xchg test push int (bad) dec hlt (bad) in and mov adc xchg xchg pop leave shl xor dec outsl sub insb add push adc lods ja or cmp loop hlt lret mov imul push mov cmp mov mov push pusha mov inc idivl push inc mov jne fs lods push pop adc stos jb and out push push jge pop xor aam test test hlt or mov xchg loope mov rcrb test xor scas mov jecxz or fcmovu outsl fmul push cltd add mov cli and (bad) sub dec mov into aam daa loop fisttpll int3 pop inc mov add inc ljmp leave (bad) adc sarl lret mov mov enter test pop mov or cmc and xor lods and iret cmp inc xor test and loope sub and inc sub clc out scas mov sarl pop add aam decb jae (bad) test and mov or std cli int mov jecxz mov repnz xchg push cmpsb iret add add xor mov push orl xor sub test inc lods pop sub xor jmp dec add fstl pop dec les popa inc out sbb inc lods sahf (bad) jb cmp push out popf push (bad) cmpsl leave add int3 stos arpl pop adcb sub and movsl pop movsb mov (bad) push push sti mov notb sahf imul mov lret and xchg push mov sbb jne jmp or popa pop loopne mov dec mov xchg fisubrl xor fpatan cwtl mov (bad) aaa or sub popf jae adc mov jb outsl fcmove dec repz mov enter fstpt fbld int3 jae aas lret cld scas call sbb mov xchg jnp,pt out sbb sbb insl cld cltd mov (bad) stc aas inc decb xchg xlat push scas jo cmc stos mov inc cmpsb mov xor mov pop mov daa ss rclb icebp or mov cmpsb imul push xorl mov push xchg loopne cmp mov outsl jecxz js cmpsb pop insb push or jecxz dec sub mov sar (bad) xchg shl dec (bad) lea das cmpsl jg xor add adc cmp cmpb outsl jg icebp and out push lea add out sahf mov mov xchg out test lret xchg xchg jns insb test sbb mov gs imul cmpsb shr pop xchg cmp push dec jae add mov push leave pop add lret hlt xchg loope (bad) xor hlt jle xchg jae clc jbe xchg adc test loopne cmp (bad) jmp nop mov sub (bad) jne xchg jg mov aaa jp or cli mov js jno (bad) jge cmp dec pop (bad) mov loopne das mov xchg ss xchg in shrb loopne jb sbb mov call and or movsl aas (bad) mov test decl scas mov or cmc cmc lret sbb movsl adc cmpsb xchg mov lods mov mov sbb sub lea ror mov pop ja sbb cli out mov push sub movsl lds xor jnp and cmp and push and das mov push hlt xor ja icebp mov lods adc (bad) rcll lret sbb ret push dec test or jbe xchg movsl repnz scas es sbb xchg cmp mov jmp dec xlat std add sbb mov arpl jne push xor mov add les cs and jmp loope xor int ret daa dec adc lret mov sbbl enter sbb jne and jmp xor inc add mov popaw outsb jns xchg repz jp push push push cmc xchg sbbb push out fnstsw xchg cs dec add repz jae sub outsb cmp mov popf inc insb lds int3 mov fidivl xchg jno ret dec daa fdivl lods sub adc add jle xlat xor mov rol stos adc les arpl pop into jg and fstpl push jae aam flds jl cld clc jno mov cmpsl cmp mov cmp inc cmp das mov add inc in or inc mov aaa cwtl popa sub pushl jecxz pop loopne push mov lea push jle sbb arpl and sub jmp fcom add enter mov mov inc dec push (bad) (bad) sub lds nop push outsb jns sarl xchg push sbb adc mov mov push std std jb cmp das xchg out cld mov movsb push jg ret mov mov push cli jle pop and push xor push xchg push sub sub fwait inc loop je,pn push idiv pop lds xor sti clc pushf pusha and shll repnz inc lea lds or jmp icebp aaa or call mov rol fcomps mov addl inc cli mov cli gs xor (bad) cmp call scas jp repnz imul loopne and in adc das scas sub mov adc cmpsl mov out popf ret jmp cmp cmpsl imul je mov mov mov inc repz add inc sbb adc cmp ja inc xchg dec lcall xchg xor (bad) and and jae mov cmp inc les mov cs popf push mov or into push adc and dec pushl insl pop or and mov mov repz out in and sbb ret cmpsb sarl pop loop cltd xor cmp arpl mov mov fs xchg pop mov scas pop xchg lahf jb in pop fist push aam rcl loopne and xchg lods (bad) cmp xchg and iret imul pop jns ret mov mov js mov mov stos adc cltd mov aam mov jle push xchg roll imul cld out ja pop xchg ja add fs adc adc inc jnp dec sar clc sub adc jno lret adc xchg push addr16 imul pusha (bad) mov enter xchg pop inc cmp mov cmpsb call sbb mov sub pop roll test pop les popl (bad) mov jecxz out xchg jmp mov arpl arpl iret bound outsb sbb mov test test or dec test test sbb bnd push fistl adc sbb xor xchg scas or jnp jmp (bad) or xchg out jne mov jo mov sbb fstl cmp or jnp ja jnp lret notb jge dec (bad) sahf out out shrb data16 dec fxtract call adc out sub dec in icebp pop ja arpl push js pop cmp xchg adc pop int3 adc pop push popf pop ds jbe mov nop ds or les pop and pushf xchg pop jae movsb insl test or mov jmp (bad) xor cmpsb popa sbb jnp sub mov fsubl les lods out pop adc xchg repz aam jbe insb int3 cs leave loopne pusha xchg in int cmpsb hlt (bad) mov jecxz sbb mov jbe dec add xor mov and clc test data16 arpl div push sbb iret pop dec xchg out lds add out das cmp test pop add je hlt int3 cmc bswap and sbb mov cmpsb decl ja pop and cld cmc imul out jne xor fisubrl rol mov loopne mov xchg into inc fild jle add in std lcall push lret stos push les xchg ljmp repz adc stos or rol jecxz je ss gs sub lret xorl mov mov jno push repnz std insl imull nop and jne (bad) sahf das jae mov and sti jge mov (bad) xlat sahf mov lock mov mov lret in or fdivl andl inc icebp sbb fldcw cwtl mov lds jne and mov stc inc dec inc cmp add lods push jmp aaa inc cmp mov adc in loope gs fstpt pop or out fs (bad) fisttp pop mov mov (bad) xor add popa frstor mov cmp mov mov jno jb xchg sbb arpl and adc imul xchg fldenv or lret xor or pop mov (bad) mov stos mov add movb cmp addr16 xlat stos dec loopne mov test and fs sbb xchg pop cmpsl cmp test mov pop inc mov ds push inc xchg push mov xor xchg movsb loope,pt push xor mov ljmp cltd int3 mov cltd xorb adc fstp (bad) repz xor jmp xlat push addl cld inc add jnp ss out fcompl stos cmp mov in lea mov push out imul jp mov insb leave inc gs outsl movsb clc inc iret es cltd std rclb adcb fbld mov sbb insl test ss xorb lcall mov add hlt or cmc and js pop lds sub xorb sbb cmp mov shll fdivrs xor shrl (bad) mov cmpsl push mov out outsb cli or ss int dec jle xchg mov jl,pn dec mov insl mov pop mov pushf jecxz hlt shlb dec inc push gs out push mov out adc test sub jno pushf inc mov pop lea cltd jle lock lcall pop dec push jle loopne (bad) lock les inc pop xchg pop insb sub jecxz iret imul or int3 mov fcmovnb les fldln2 hlt xor mov jno sahf pop aad lahf int cld inc popa fsts leave inc or xor bswap push sub sbb (bad) ds cmp cmpsl out push js aaa pop jo cmp pop loope (bad) popf lock je std adc push aad aam or repz dec mov loopne mov mov and push rolb adc data16 and nop ja jecxz jecxz retw sbb cmp fwait stc and cld adc lret dec rorl test lcall push mov sub adc and mov lahf mov in cmc js jb shl ds push js pop aas ret cwtl leave loope push fsubs fsubrs sti sub push mov orl imul adc jae xor ljmp rol test movsl notl outsl pop jo push mov sbb scas in cmpsb mov add loope cmpxchg gs pop repnz pop lcall push pop push cmp test cltd repnz mov inc xchg inc ret pushf pusha xchg add out cld shll test mov jmp daa sbb orl push sub and inc cmc ret sub or jb addr16 pop lahf sti imul and dec hlt jb xor inc jb mov push pusha jnp movd cmp sahf cltd ret lahf fnsave jecxz pop iret cmpsl pop movsl popf cmp or inc (bad) dec ds inc inc lods stos push cli out pop inc popf mov adc stos pop bound xlat loopne out push lcall pop xchg aam addr16 stos pop push call adc push adc sbb jmp shll pushf mov fsubrs lock popf fist push js nop je sub xlat je jecxz loopne (bad) mov push lea lea pop dec mov inc repz into popf mov rcrl jne sarl fisttp and push jnp pop lcall or je or pop mov xor arpl add stc adc iret movsb dec in cmp sub gs mov push mov inc popf dec negb lcall mov push push (bad) dec shlb adc cmp mov dec popf outsl lahf (bad) cmp xor mov imul lds adc loopne sahf stc jo jmp enter mov outsl jge loope in addr16 xor shrl push stc sbb sub cmpb idiv cmp dec shrl (bad) (bad) negl or repz fsubrl pushf in cs rorl dec push or or cmp (bad) int3 insl sub loope inc aad ja movsl sbb mov mov or leave xor sub loopne or sbb es (bad) and fwait mov das std cli sub icebp xor out mov imul sti xchg sbb jle inc mov rol mov decl or pop repnz dec xchg cmc fdivrl mov sarl enter inc xor fwait cltd sub sub cltd inc cmp outsl lock hlt add (bad) int xor jmp scas icebp das js push divb addr16 xchg cmp sbb add sbb outsb pop cmp or ret aad jg dec stc xchg xor jae popl int3 repnz push idivl int js out add jne mov jae cmpsb mov mov mov or xchg repz (bad) xlat cwtl mov and sub push sub test push rcl jno mov xchg ja cmp out les mov sub cld cli jno aaa clc xchg dec mov daa arpl mov hlt int3 xchg ja fwait ret repz sub (bad) jne sub (bad) outsl enterw sub inc insl scas and add pop cmpsb push cmp scas pushf loop loop jo add lret mov sub mov cmp dec push fsub int bound add lret gs pop cmc mov popl inc hlt loope inc pop imul ror ficomp hlt pop xchg insb pop mov imul mov jmp lea in cmc xchg dec mov aas or or xchg (bad) push lds test in dec out imul (bad) xor pop outsl popf mov dec data16 push das insb repnz nop or clc push outsl add lds inc adc es movsb aas or xchg xchg add sbb mov push mov cmc xor inc ret pop pop cld mov push mov (bad) popf aam clc vpunpcklwd xor arpl scas dec push jne dec push call jne,pn sbb push (bad) bound fs jb xor add jns push jbe cmpsb push or in hlt or data16 add cmp sub adc sbbl and aam sub push aas mov mov addr16 repz subl movsb push es es pop aad add push test push (bad) mov inc hlt xlat rclb add (bad) mull int3 pop icebp mov clc adc mov test pop arpl and movsl (bad) adc int sub fnsave call or clc les and sbb push movsb repnz and mov fs mov and jno pop out xchg push inc jg outsb (bad) ljmp clc mov cmpsl scas daa sub cmp stos jno aaa pushf lds xor jo mov rol push jge aam jns repz cmp xchg lahf adc inc iret test outsb pop cmp pop add inc (bad) xchg mov in and sbb dec adc dec adc cld aam cmp dec (bad) sub jno jmp pusha mov cld pop pop (bad) jbe push shrb inc in add xor push (bad) mov or cmpsb xor data16 (bad) iret lods dec fisub outsl scas dec mov mov lret inc and push or jns subl xor adc fnstcw daa mov xlat andl sbb dec jecxz pop jecxz push push xchg or adc mov movsl mov je repnz lcall imul push pop dec test lock inc mov jo in mov pushf jg xchg xor insb (bad) xor fisub and xor lret das shlb jno jbe daa sub and pop dec out jb testb sbb pop mov outsl pop cmp adc sub sbb dec out (bad) in add xchg lds and aad pusha sahf nop loop js out adcl jmp aaa dec and std ret inc in pop fcmovnb aaa sub bnd xchg es dec (bad) icebp aam xchg movsl and add and push aaa insl je popf in (bad) mov fcomps pushf fidivl pop int3 xlat cld (bad) or mov jno js mov add and in inc loop and xor addr16 mov cs ja pop pushf movsb (bad) cmpsb and or sbb jl sahf and nop enter adc (bad) popa inc xchg pop pop (bad) cmp and jne cld pop dec jle les xor je test in stos lods mov adc out push sub lods out test sub loope incb xor test adc jae jmp lock inc xchg sbb js xchg and out xor inc push sarl add stc sub mov pushf leave lret hlt lahf mov sbb inc (bad) je add ds leave mov pop xchg scas dec hlt call ljmp adc imul clc push add movsl dec test cmp in test lock stos adc iret jg dec lret stos sbb push pop dec insb loop int3 cs xchg ror mov shlb ret jnp pop sbb lock insb jno jmp jo mov mov xor and sti pop sarl xchg add ds pop lcall std std insb xchg test repz adc loope addr16 in xor jle (bad) div inc stos add ljmp push leave adc out dec rcrb out push pop rcr xlat pop or sar sti jae or (bad) fstps xchg xchg dec pop mov fnstenv push and movsl sbb aam jmp push cltd and rol jns adc popa inc xorl (bad) xor into add sbb (bad) add loop int loop jb push fadds leave xor sbb in sbb add test aam jae iret lret pop dec addr16 sahf sbb dec add inc shlb repnz pop cmp pop scas xchg pop mov (bad) mov push xlat es xchg mov xchg jb pop enter and and test cmp push faddl adc sbb fildl cld fldcw ds loop adc push push addr16 fcoml adc lea mov inc jo pop push push or dec arpl pop inc xlat sbb rcr in stc and dec jg cs sub icebp lret f2xm1 adc into inc loop jnp or ret push xor movsl mov gs inc xlat movsb addr16 mov pop inc js outsb into mov addr16 or add xorl (bad) mov test jp sub cltd mov int3 jo stc je lcall mov in pop lods cld add out pushf sti addr16 pop leave cmp scas out mov dec cltd mov adc (bad) out sub das incl or adc daa lock loopne sarb jg incl or adc daa lock loopne sar cmp imul add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add hlt and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push push and xchg insl jnp shll mov fisubrl insl mov ss jmp (bad) idivl mov add mov add je push aaa sbb bound mov sbb mov test loopne ljmp inc loopne in pop andl mov pop jo nop lods xchg adc and xchg insb mov sub aas notl rorl sub adc jns adc repnz mov repz mov bound push fmull outsb cmp stos in ja in jmp rclb push es aad cwtl int3 xchg hlt push movsl call dec adc pop sti ss sub mov into xor push popa jb add mov test mov in or out icebp jns stc sbb adc (bad) iret xchg insl dec or out inc int sub (bad) cwtl xor add or add std outsl bound out dec push mov or lahf inc cli pop xchg icebp jecxz iret pop (bad) cmp js aaa fcompl aam push sarb push lahf (bad) push pop push or mov out imul test pop scas add jge ja movsl add std pop (bad) pop push pop cmp mov or add mov leave sub push lret (bad) cmp movsb mov or fcomp adc sbb out jbe push pop pop pusha add dec js push inc mov and aad mov (bad) adc int3 xchg (bad) mov xchg imul repnz mov int sbb cmc sarb pop je iret clc sbbl out daa add std cmpsb test clc mov idivb dec push popf inc insl pushf enter pop adc sub loop push shlb (bad) aas ret (bad) (bad) mov fisttp xchg outsl lret pop mov mov xchg cmp mov in aad push pop adc in push popa ss lds int sbb sub add inc adc dec mov xchg push cmp mov stos scas and and lds mov inc inc or xchg mov loope inc pop imul lret mov daa popa repnz dec mov add dec sub arpl cmp (bad) mov push push fs rorl fdivrs dec add jg and dec imul xor dec ss test adc mov pop and repz xchg jge xchg adc es and out les out lcall inc rcrb fimul mov cltd in inc jle jmp mov into adc mov mov ret inc adc sbbl imul sub test fdiv push ds int3 dec testb pusha cmp sbb jg mov cmpsl mov pop push xor or jo cld hlt cmp loopne sbb popf insb cli in dec arpl jb mov subl stos cmp shrl push push and and scas test mov les nop rcrb mov loopne bound pop jae mov insl rolb mov pusha pop ret dec repnz mov xor adc inc ss rclb dec fadds lcall pusha (bad) popf xor test pop test sub test mov negl nop mov ljmp ds ret repnz add jle jb fwait lods inc out push xor xchg push xchg jns (bad) sahf into fisub lret mov jbe ret pop push lods and cmpsl sbb fildll mov fs fstpl rcl out inc dec mov (bad) xor divl lods and dec xchg (bad) nop push jmp (bad) out pop sbb sbb mov push lock (bad) pop inc sub xor in sbb outsb sub push js stc and push orb out sti repnz sbb lods jno and mov pushf and mov mov adc xor and je movsb mov test adc jbe fidivl leave orl pop inc add mov mov out and insl (bad) mov jecxz out flds loope scas sub jl lock ljmp addb pop test repnz push adc ljmp (bad) negb les push repz mov lcall into sub jnp or cli mov adc add addl mov jae xlat outsl and xchg pop divl and sbb add call bound inc mov xchg (bad) cmp insl jge or and popa add std mov pop (bad) cmp loopne mov adc cmp cmp aad jnp imul add xchg les or in pop jmp in (bad) push (bad) cli ret adc jo (bad) adc mov mov xchg es test (bad) scas sbb out pop lods jecxz out push scas pop mov imul sbb stc cmp out jge fmul fcomps push jae movsl cmpsb and enter or test xor aad std jns stos stos iret xor mov cmp cs das mov out outsl cmp add insb movsl daa lods adc sbb lret mov movsl xchg jbe xchg mov test or add push je (bad) out repnz adc mov lcall int or lcall (bad) jno outsb inc jne jle inc fwait or popf loop or sub jmp rorb ljmp rolb add das jb xlat rorl jae mov jle popf push loop outsl mov and jnp cmp inc cli pop iret jnp stos xor (bad) stos je sahf xchg mov mov pop xchg ret xor es adc mov adc xchg jl popa shrl cmc pop push scas orl xor in data16 adc adc adc adcl mov cmp ljmp std sbb inc xlat cmc cmp es in (bad) jae addl xor in mov stos pop loopne mov ss ds imull pop in mov sbb dec or and leave andl sub fistpl not or cmpsb sbb andl data16 loopne test jo inc push (bad) lods ds fldt aam hlt loope rcrl test push push arpl dec inc push dec mov mov xchg mov sti sub pop inc jp mov jo push dec pop cmpsb es fmull sbb mov (bad) movsl cmp outsb cltd xchg ret sub dec xchg xor test mov (bad) or and or lret scas mov jmp inc ljmp fs js sub repz sbb mov adc imul pop adc mov mov jno push xchg movsb cbtw mov fidiv out mov rcrl mov sub jno lahf fsubl scas cld sub sbb cwtl ja movsl roll in cmp pop loope jge inc and xor fistl sbb pop fsubr in inc gs jb fbld (bad) sub mov idivb dec mov cmp adc (bad) xlat lds mov mov add data16 aad xor hlt and cmpsl or cmp mov fucom sarb pop inc insl mov out test outsl into xlat cs (bad) mov arpl mov add out mov iret pop mov or mov mov insb sbb js aad push fistpl sbb cmpsb cmp pop xchg enter popa js adc mov add mov xchg mov repz fistl inc movsl pop clc lret fsubp clc cli dec repz or repnz and stos pop (bad) scas jae cmpsl inc (bad) xchg movl mov jp mov dec mov stc adc lcall repz ljmp inc lcall push dec scas mov xor and xor cmp dec mov dec pop mul jecxz test int3 outsb cmp xchg xchg sahf jle and or rorl add xor xchg adc jno mov sbb cs aas daa out sarl je data16 pop cwtl nop mov inc adc push arpl push fidivr inc gs cltd sbb adc inc outsl popa and mov dec jnp mov mov test mov cmp fdivp sti dec mov and jl ficomp mov cltd add inc stos outsb mov ret mov jge push add scas mov mov pop scas sub or ror gs sub and mov add outsb int dec add inc movsl nop test fmuls and imul mov xor push repz test shlb inc js movb into inc xchg cmp scas fcmovu pop aas popf mov xlat pop xchg push gs jmp or xchg sbb jge je fistp jge ss inc repnz in incb push push mov xor fwait pushf push out push cmp stos enter mov jnp js sub dec or (bad) jmp lret cli nop dec xchg push mov mov sub aad mov cmp inc lock outsb test sbb push sbb je adc jmp pop mov xchg add lret dec hlt sbb inc push dec enter ja ljmp js mov xor mov arpl jno mov dec mov dec gs inc xchg jae push and cmp iret fs cmp cmp sub sbbb out cld test cmp fistpl cmp xchg les pusha push mov (bad) push add jno clc mov jbe xor xchg jo popa mov jne vucomisd ds movsb jb adc cmpsl inc push out subb sbb fs inc sub sahf sub mov es (bad) or in dec jbe mov adc mov dec and xor insb xlat add xchg into out jae out syscall pop jl cmp cld jns xor test in cld cmp sbb adcl cmp jmp mov ja push mov lock adc dec (bad) jae dec aam or leave xor dec jns mov and inc mov add enter ja jmp and (bad) mov inc xorb dec cmpsb sbb incb cmp push add mov jb fdivs sub cmp push xor adc inc fsubr imulb xchg and popf and or mov jmp lret cld adc and cmpsb push or das andl (bad) (bad) out mov mov push xchg (bad) cs or xor mov and lods lahf leave ret jno movsl imul sarl sbb ret cmpsb cmc inc pop sbb fwait sbb mov dec mov jmp (bad) ficoml mov imul pop fisubl mov pop xlat jp insb rep push cmc push xchg pop sub (bad) cmp aam sbb inc cmp mov jg fnsave div mov dec and pop lds mov xor mov sbb int3 inc mov lahf aad jo out and xchg movsl out fstps das xor es push incl fldcw cmp sub push mov push push xor pop add sub out mov inc cltd cmpsl in mov fcmove pop inc mov xchg add sub enter aaa inc aam test into insb sbb add cmp add jecxz loope rclb sbb or adc ds mov loopne outsb (bad) std mov xor imul add sbb dec stc mov lret cmpsb dec test cmpsl cmp mov inc adc bound (bad) push jle cmp pop loopne (bad) jle xchg daa aaa push push sahf cltd pushf mov mov adc sub je mov cmpsb pop repz push pop adc push lret leave xchg pop movsl dec gs and cli sbb int3 aaa xchg scas pop sbb mov ret lea lret stc push pop cmp test testl pop ss mov pop and sahf cli test sbb (bad) xchg pushf lock jns lcall mov or imulb ja pop jbe call jle arpl fmull pop sbb mov out into jl push mov sub imul stos lods jle push fild pop lcall xchg inc inc ss iret loope jecxz mov addr16 xlat leave idiv mov std and lods adc cmp cwtl ret mov xor popa mov clc xor pusha mov pop sub mov push mov std insb cmp fdivs xor sti repnz divl imul outsb adc or fsubr lds sbb xor fcomps in call jecxz std dec inc ja inc std add jb ficomp mov ja lcall sub fcompl aam jecxz jl loope push fcoms lcall rolb mov or sub (bad) cmp dec xor movsb cwtl int3 lret iret divb jnp or in xor lahf pop (bad) mov push pop pop jl xor mov stos adc or sbb jg jecxz clc dec lods call pop cli jno mov push xchg pop (bad) negb aad outsl or (bad) repnz test jns (bad) ja enter outsb pop sub xor icebp push rol mov dec mov shlb dec int mov mov pushf stos push pushf jne (bad) mov repz mov cld inc insb push arpl xchg adc add push dec notb ret cwtl inc push adc popa int3 cmp addr16 dec cmp jmp out repz insl sbbl inc xorl hlt popf inc and mov add stos jae rolb or test cmpsl adc jae sbb pop cmp mov cmc lods inc hlt cmpsl lea xchg sti imul inc loop mov jecxz test (bad) mov jno imul jle push icebp and jne dec mov mov call int icebp mov pop jno mov pop lods call xor dec mov scas std je int3 jbe jge inc insl int3 adc mov lea out cltd mov xchg dec cmp cmp or sub add sbb pop data16 pop mov dec cmp ret push mov mov insb push mov dec xor (bad) adc out and subl or mov pop push xlat cmp inc mov jne lods add push mov jnp xchg and jl scas repnz inc jnp xchg adc adc or push add test push mov push pop jp mov push pop test (bad) adc roll xor pusha cmpsl sti push xchg mov jecxz cli xchg dec divb testl xorl test sbb imul add outsl dec mov and nop out xchg dec fcmovne loopne pop mov adc testb sub lds addr16 push jnp jmp (bad) outsl and ret jae xor cwtl ja jmp sub xchg lods jno or mov in enter mov lea rorl dec sbb sub imul pop pop js int add iret push jae clc pushf cld data16 push shl rcrb adc mov cmp pop mov cs rcll hlt les push cmp out dec xor fwait enter (bad) test enter pop rcrl cltd sarl mov dec cld sub notl imul rolb enter sahf lds into push js pop mov out rcrl inc push clc pop sar pop cmp test mov sub loope call outsb (bad) out insb test pop loop imul sbb int shr imul (bad) in aam and or mov cmp ljmp lahf arpl pop shrb lret xorps popf (bad) daa in adc xchg fidiv ret fwait popa popf jg push dec jns imul pop lods orb repnz sti iret lods sahf (bad) out mov outsb and inc or test rcll in popa notb ds sub jae add xchg in mov lods add aas fisttpll je shrl iret stos pusha push dec xor pop cmp mull fwait fs mov cltd fdivrs enter pop or aam iret insl fimul sbb cmp jl icebp cmpsl xchg push dec les mov and mov pop jle imul nop out pop scas mov and mov in outsb cmc orps call add test xchg jg xchg ljmp shrb ss xchg dec inc imulb jp sbb sub rcr (bad) std (bad) xchg out jb fstl iret cmp movsb add mov mov enter jo dec fs cmp pop jbe jbe xchg or jecxz pop cmp sbb in (bad) jp mov sarb sti (bad) xchg pop cmp rolb sbb push mov ljmp push ret leave stc movsl adc cltd movsb test dec dec (bad) in sbb sbb sub les aam test dec push mov mov sti xchg insl push fmuls mov cmp int3 mov lea test addr16 mov frstor cmp (bad) insb lods addr16 arpl int lods dec add out call lret sub mov dec mov sub xchg mov pop loope dec xchg clc jge gs iret add sbb cmp xor (bad) in push aas cmp fs sub dec or and into jo arpl popa fcmove pop jo xor sub rorb mov outsl int3 sub xor es mov or enter add loopne lods clc adcl cltd insb iret xor pop cmovle and push push js roll jnp lods stos fisub cmp push fstl mov lock cmc xchg add and mov mov cmpsl cmpsb fistpll inc cld add out jg ds ret outsb pop leave imul cld (bad) push dec dec inc mov fstl pop aam rclb jnp lret lods scas pop mov or mov addr16 clc fsubrs dec xchg sbbb pop add ret mov arpl jmp and rorb mov push loopne into cwtl gs dec push shrb rorb push and je ljmp xor shrb insl test cmp arpl dec add aad outsb popf out mul iret add sub dec or jb pop sahf mov insl das jle shr sbb outsl xchg repnz je imul push pop push insl pop lock mov dec mov cmp push xchg sub add cmp mov push inc adc sarb mov mov cmp sbb repz xchg sti push ret add ljmp dec mov cmp mov or cmp popf mov add add mov dec mov push cmp out and (bad) pushf (bad) pop mov adc inc push mov in and fcomps sbb es mov test or mov div mov sub dec rcrl into xor sub popa out aas rol in call push jne imul jb mov xchg jno int3 mov leave mov inc add testb pop fidivl sub stos sbb aad sbb jg jb (bad) movups mov pop (bad) nop push adc outsb sbb jmp icebp (bad) js sti jmp xchg and andl and sub mov adc mov or jnp ror popa sbb jne leave nop xor jecxz stos pop idivl lods lret and cmp pushf and ljmp adc scas fisub mov (bad) testb in and (bad) dec xor adc arpl fldenv sbb (bad) cli dec movl xor push movsb push sbb mov rorl jp (bad) push rolb mov lds add xor add aad stos xor cmp bound in (bad) mov sbb loopne jmp pop sbb lock (bad) adc add arpl adc das pop arpl stos or cltd icebp mov scas mov je sub inc pop (bad) repz sub daa call rcrb stos push mov fdivs mov adc adc jae cmp imul mov data16 mov mov popa add (bad) iret add in push add je out lahf add cltd mov dec rolb pop cmp mov adc mov jle pushf gs push cmp dec subl incb xchg jmp mov jmp repnz sub aam cmp pop rorb or mov std loope or pop inc adc mov adc jb add push (bad) jnp fcoml lds (bad) mov rorb cmp xor scas mov push add cld pop mov nop rcrb xchg scas in jne stc fmuls pop lea addr16 push cltd mov mov out cmpsl ficoml add add pop mul push add nop rolb sbb add lea leave mov push inc or loope sbb pop push fsub mov adc into mov fisttpl jg xchg or xchg stos xor popf inc repnz cmpsb push xchg stos cmp jl lds push cmc push in aam ret dec inc xchg adc xor cmp pushw addr16 pop insb (bad) nop out and push (bad) test pop and fucom les popf call fsubl push ret fisttpl pusha dec or (bad) test cltd inc mov aaa jecxz adc mov sti mov jnp cmp sbbb movsl imul sub (bad) jb mov clc popa or insb sbbl jecxz mov mull add xchg int3 xchg add xor adc ljmp negl xchg in pop (bad) jnp pop out stc daa cmc inc outsl ds mov jge sbbl in pop sub sbb fsubr in call pop ret xor test dec pop jne call push jle cmp iret mov lds rcr fs inc mov or and push lret fnop sbb (bad) out repz lret rolb lret pop dec sbb adc mov cmp push cmp jl test add data16 shrl mov sub adc sarl (bad) fildll jns fs inc repz sbb and je and xlat xor jb loopne ljmp and cmp push mov loopne hlt int3 out into mov xchg push bound dec (bad) lret jb dec out sub push ficompl outsb or mov mov cld into fcmovnb lahf xor stc (bad) sub mov sahf rcrl into aad fs fidiv jl xchg je out shll out addr16 ljmp cli sub ds jmp cmpsl dec sbb mov jmp lock and scas xchg movsb push in sbb push xchg dec mov into pop pop push mov stos inc (bad) or push adc shr add out cmp ds jecxz (bad) mov pop and cwtl jecxz sub outsb and sbbl out leave mov scas fildll pop lods adc (bad) mov sub cs insb mov and sbb clc repz sbb pop cmp (bad) push dec push mov dec addr16 xchg mov mov mov dec gs mov jae rcr mov cmpsl fcmovb pusha mov lods enter stos int3 mov fs mov ficomp sub pop xchg mov sahf into push jbe push mov or xchg mov cmp push sti (bad) insb rcll into inc in add mov incb mov dec (bad) xchg int pop push leave mov mov sbb clc ja sub out stos lds aaa sbb (bad) fs adc js push fs fcompl mov mov sub sbbl push mov lahf iret pop sub add mov imul test pop jle stc push nop aas imul and push push (bad) add cmp insl jo cmp fwait xchg sbb push dec aaa mov lea cltd cli lods sbb es push add jle inc stos es lcall (bad) mov clc dec loopne cmp dec loopne cmp dec loopne cmp jmp lock movsb sbb push mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add dec pop add add or or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov fimul inc push push pop and ret xchg test xlat data16 (bad) fwait aaa jae leave mov arpl out xor repz sbb add push add add xchg or stc lea inc fisubl xor movsb fidivr pop (bad) (bad) cltd xor fxch mov pop mov rcl cs pop stc pop mov xchg jne pop stos sub jp pop push pop jge (bad) mov adc mov fidiv ljmp cmp xor (bad) or or int3 imul dec mov push rcrl orb fdivrp pop mov movsb xchg dec dec js rcrb pop lret std pop stc test xchg sbb loopne out inc mov fstpl out mov call jg add popa jb xor push push adc pop or aas inc cli in ds inc or mov cmp ss and fstl aaa lahf addr16 jb fldl push scas popa xchg movsb std and out fbld dec popf data16 scas mov aaa lock popa ds cmpsl adc addr16 mov mov jae pop pop in bound jnp mov (bad) mov mov sbb jg in outsb sub or cmp call push aas inc pop (bad) (bad) fldl2e out clc jns pop test sub xor ds roll and push push add test out mov sub push add (bad) or dec insb xor mov clc mov sub push add mov mov (bad) stc or dec imul add in fisttpl andl sahf push in addr16 pop imul (bad) pushf mul pop fisttp int inc not insb sbb sub jg call fnstsw sbb test jge lods adc push pop in pop imul mov mov xchg jb repz in fs adc cmpsb xor push or sbbl fiaddl push or hlt add pop lea pop push repnz cmc pop mov fidivrl or lret loope mov cmp in idiv ljmp push jg mov push loopne (bad) bound aas int3 leave jmp mov fdiv push scas shr test add cmpsb mov cmp into popf (bad) sub ja mov xchg (bad) jg cs push ss js lahf push dec popa mov shr mov inc sti inc mov lahf push sub add movsl pop lret pop sub (bad) aam push xchg js ficom jne cmp orl cwtl test xchg jno pop int or sbb fs (bad) mov mov add out pusha popa add aas lret js xchg movsb imul jbe push nop or and jb fmul mov cmp mov jecxz out pop int3 (bad) out nop cmp pop scas jmp cltd testl and sbb dec mov jo leave mov inc (bad) out sbb div bound xor jnp jmp cmpsl sbb iret add xor (bad) mov cli std jno sbb jmp cltd out jnp gs pop outsb hlt xlat lret out xor cmp ret push xor cld cmpsl fcomp xor mov xlat or addr16 and jns stos and mov std cmp ss jl jnp fnstenv out mov mov jnp clc mov icebp add sbb dec mov xchg inc add mov mov pop jo adc into sbb mov pop xchg mov jecxz and jp daa (bad) in imul pusha mov movsb aaa sbb and jnp ret push mov aas rorl sub clc jno (bad) xchg push rclb mov mov add nop test imul dec pop adc int3 sbb and popf imul mov mov inc sub hlt cmp mov pop push fs shl mov xor shrl sub xchg inc flds mov xchg lahf aaa inc xor aas cli pop sti pop fldl2e or add jo adc pop ljmp aaa push pop pop mov mov jbe xchg movsb or add push and popa jns push out cmp jmp push ss insb fcoml int3 push mov movsl stos js xor xchg test or jl dec nop sub cltd and fwait ss push dec jb es inc cmpsb dec stos mov dec out insb cltd out gs enter aaa xchg mov ljmp (bad) ljmp mov out and inc outsb inc cmp movsb (bad) mov sbb pop add push jno inc xor mov mov or lret mov testl js push adc popf push jp dec adc xor das fidivr jnp xchg ret mov rcr pop push mov (bad) jb fs push xlat mov ret cmp sahf imul pop jb xor and iret mov rclb (bad) fldt sub push insl pop dec xor arpl mov nop push imul bound hlt push loop pop push mov insb or pop or push ds stos or mov aaa leave xor inc rolb cmp inc push or mov insb ret shr push cltd jl leave and and out (bad) push sub test sub xor std xor fcomip cs mov or cmp pop inc ja mov movsb stos mov add inc jno mov jne popa inc push cmp push xor in add xchg mov arpl cmc or mov inc ficoml js insb cmp popf fs inc fcmovu fldenv fmulp sete cwtl scas fcomi lret cwtl mov cld test mov adc (bad) or jno,pt (bad) pop jno sar pop mov mov add out outsl xor jg loopne sub mov mov jp mov fistl xchg dec push xor jmp cmc je sbb mov fbld pushf les mov loope ficompl orb mov stc iret in adc inc clc loop mov in push shr adc enter inc loope ret cmp mov mov hlt mov inc xor imul cmp shrb mov adc and loop fcmovbe pop ret xchg test in lret xor pop xchg dec jne outsl xchg mov or adc push sbb dec (bad) adc push sbb push push xchg inc mov mov xchg mov mov xchg cmpsb daa stos shld mov test and inc int test jns mov imul pop ret sbb in aas add jl pop mov rolb lock cltd cmp mov push ds sbb jnp out sbb cmpl mov push ret xor push addl mov dec pop addl mov mov cmc ds dec mov mov aam lret jo arpl and ljmp mov call add fwait mov dec sbb cwtl mov mov fst lods dec into mov sub dec push push insb xchg rolb mov (bad) adc fs jp neg push and adc adc shrb dec jle xor enter inc hlt xor jecxz mov lods lea adc cmpsb adc push and daa lods mov or fs int3 popl fisttpl mov xor dec imul fisubrl andb pop push in ret and dec dec das sub cmp push push aas not hlt (bad) cld push pop cmp repnz incb jbe mov in mov insb jmp int3 cmpb test jle imul pop dec loopne fcmovb loopne sbb stc sub mov outsb and mov mov xchg or in jne cltd push or lods push push in adc mov lea mov mov test cmp push adc dec js mov arpl ficomp mov int3 push insl fimull xor sbb sub pop jns shrb pop sub push jg lds or mov and js pop jp xor lods jns add xor arpl shrb cld cwtl fisubrl in (bad) lcall push fsubs push jmp adc jecxz sbb or je (bad) dec aas lds std fwait test addl stos cwtl js mov nop mov inc jle push or sbb xchg and and popl pop jp jne out xlat sub leave aaa int3 in inc lds mov repnz mov jg enter push push xchg or loop cmpb stc lahf lock inc aas mov pop loop aam push sti xchg mov and xchg cld xchg pop or xchg jne lahf push xchg subl insb lahf cmc push (bad) in mov ss sbb ret cmp fbld adc insl mov push and xor push fmull mov ljmp (bad) cld and cmpsb add xchg insb out pop (bad) iret (bad) stos jl mov aas mov mov das jmp nop cmp js stos inc add mov cmc movsb aam xchg ljmp push push bound outsl push (bad) clc add adc pinsrw inc xchg jmp dec fcomp adc adc mov stos mov jns popf cmc and dec ds (bad) fldcw xchg cmp jne in cmpsl cli ja sub and add inc ja sub icebp mov shr daa icebp xor ja fiadd mov push stos mov ret mov cli pop sub outsb mov and mov inc inc mov lock cwtl aam push jge inc fwait int3 out insb fiadd es test and jle mov repz cmp inc scas (bad) imull pop outsl call adc aad lret adc popf inc adc jo scas sub adc or aam popa lods push popa jge loopne push insb fcoml sbb sbb ds jne mov data16 mov out lds xchg sub int3 mov jmp jo jg xchg jns mov fistp fwait rcrl inc jecxz push jle into aad push push lock jo push imul push sbb and scas (bad) mov in xorl push mov fisubrl outsl fdivr adc adc mov mov mov int3 pop sbb hlt inc out movsl lock push inc lahf push idivb sbb popf mov add jae mov mov push cld stos gs mov cmp push lea repnz jb fsubp cmp pushf push cmp sub xor xor cmpsl enter mov push jl int aas lret push mov jb ljmp fmuls push cmc adc scas jns aam loopne pop pop cmpsb mov das jnp clc jne adc outsl adc shl lds fisubl push add xlat adc mov lret cmp push xchg movsl bound ja fucom hlt outsb stos fsub and mulb sub scas (bad) leave jae xchg fdivs lret xor mov lcall cmp insl push gs pop jo dec add jbe in xor xor js popl fnstsw fldcw insb mov pop inc pop xchg mov test jle add adc out loop out lcall push push pushl jp mov das ljmp dec mov fcoml lret cmp inc fs push repz sti gs sub sub je mov lret pushf roll mov adc pushf insl push sub cmp fcmovnbe push inc mov ss push jge mov into adc xchg adc bound cmp dec cld pop in push into mov mov xchg jbe cmpsl std mov sbbl loop sub out (bad) push sbb sub xchg dec lea pushf mov insl pop and pop cltd out pusha jo outsb ljmp lods repz stos or mov test outsl ficom lret jp jle ljmp and out ds out cmc jle push mov repz push lret sbb mov in xchg stc inc cs nop in lret push (bad) inc mov mov or mov gs (bad) stos push imulb xchg lods fadds cmp add pushf pusha sahf mov int3 ljmp daa fisubrl xor popf cmp push movsb sub cmpsl (bad) mov out push mov push cld pop faddl fildll inc jnp cld fs sub dec ss add xchg mov fnsave dec test inc outsl popf push stc imul test fs es out (bad) push addl int cmp pop js xor mov cmovno lods mov xlat fs aam mov lock push mov data16 aas cmc pop xor es adc aaa negb jecxz subb clc pusha pop enter pop daa cmp (bad) xchg icebp adc insb cltd iret and add sub jle je test jno inc push mov ja jo adc iret sbb test int3 cmp and pop fsubr arpl pop out mov test test jmp ret scas push andl fs mov fidiv in xor xchg push pop cmp or xchg fs fwait jbe jo leave call xchg xchg sub ret test lea xchg cmpsb mov scas pop seta push cmp fwait adc mov into push icebp fiadd leave nop pop dec pop mov shrb cmp pop lcall inc or xchg mov xlat push mov lcall or pop dec mov cmp mov jne mov push adc test in or dec movsb and lahf sub rclb je fwait inc mov es dec scas lods xchg test cmpsb rorb outsl nop ja rorl (bad) bswap jp adc lret lea sbb leave daa push jle mov mov xchg and mov call cmp (bad) repnz push mov xchg pop jl mov stos loop mov in fninit out jge jnp (bad) notl test std mov pop inc out or insb adc sahf mov lock aad jmp and dec pop and loop iret push (bad) (bad) and lea xchg sub nop push inc xor in (bad) and ljmp mov sbb test into mov mov fildll dec push cmp sub jne es movl mov bound sbb mov adc lcall sub pop insb mov cwtl ret lods dec mov pop cmp addr16 jae out push adc xchg xor cmp popf (bad) cmp std movb stc pop and sub cmp repnz inc xor xor or lret ret aaa cmp int3 sub xor cmp dec sub cmpsl xor sub std push (bad) jbe mov loop out push adc or mov pop sbb pop cmpsl arpl loope adc and dec push and or push lret pop orl or xor fsts call aam or push pop mov push arpl (bad) inc adc dec jecxz add mov dec fmuls in xchg mov arpl xchg (bad) cmp push jmp mov imul mov add push inc in jno lods aas lods push inc movsl xchg push je in subl mov jb mov dec mov jle ficomp adc and jle or add push and clc push lock inc (bad) imul lds pop mov sqrtps imul add or aaa jnp dec cltd sbb fcoms shll lds cmp nop mov and repnz inc mov inc icebp xchg (bad) repnz dec jg jb pop cmp pushf inc jbe sbb dec stos std and inc mov sbb dec stos lods pop inc icebp jae mov mov dec mov add sub sub pop cmpsl pop push rep js ds push out xor sbb iret mov hlt cmp inc sub clc inc rcrl mov test push ret xchg mov mov dec cmp xchg clc cmpsb sub pop cmp mov jge adc and mov push mov sub imul fsubs pop xor aaa or cmc and fldcw mov ret and xlat lods or in shrl add fcomps (bad) sub push ret js cmp jnp jle pushf mov cmc sahf mov sub mov dec std mov mov les sub imul mov lret clc adc lods movsb jae icebp push out fnstenv mov les pop push aas jnp leave jb add hlt sub jp mov pop popf mov rclb push in aad xchg ds cli and jo and dec jnp or ret popaw pop push and rcrb leave movsb push fisttpll mov data16 mov push add push mov dec cmp js lods outsw les fistp bound push scas stos add fadd in (bad) into adc and data16 notb bound dec add shll xchg repnz arpl xor push aad pop icebp in add in push inc xor call push push (bad) ficoml sbbl popf out push test add scas (bad) sbb in cwtl int3 aas int3 rol adcl or movsl mov (bad) jge xlat jno (bad) sbb lret mov mov imul cmp stos mov and imul sub outsb imul ret inc mov pop adc fildll jge cmp in cs scas pop arpl mov inc mov mov icebp (bad) leave or scas outsl cs dec dec dec gs sub out jo or adc sbb cmp leave push lock ret add aaa xor cwtl xchg insb fildl iret ss aad icebp or mov das fildll sbb loopw ds ja cmpsl mov jno sahf aad add xchg xor push mov push cli js incl nop cmp cmp or stc scas cmp lds lret dec (bad) lock popf inc cmc dec test mov mov stos inc push and push je test pop jbe adc xor daa jae out aas inc mov lret stos addb mov mov loop test aad xor pop std (bad) mov (bad) loope sub iret jo inc dec outsl movsl or subl jmp push stc and add arpl sub mov mov std xor jbe xor dec jbe test out in mov scas adc sbb push fdivp pop jns es hlt popf enter add inc jns dec lret mov xchg shl ss test std mov xchg rcr cltd (bad) aaa scas insl jecxz pop xchg ljmp imul repnz mov cmpsl jns aas in sub and sbb mov add fldl movsl cmpl dec or outsb dec mov imul loopne fldl push arpl jno pusha test sbb jg es aaa rclb cmpsb lahf cmp jbe mov add jb jmp test mov int pop aad std pop xor push dec mov xchg push in fdiv iret mov sbb in (bad) mov mov pop sarb add and mov cmp fisttp icebp sbb adc gs add sahf add cwtl xor stos adcl or mov jnp outsl or js imul je sbb sbb pop and mov adc mov lds pop push inc xor push pop cwtl shrb mov daa mov lret mov push add es fisub lret loop sub pusha cmp jmp hlt dec das mov push jl cmp pushl gs in xchg jo sbb sub cmp pop and xchg dec mov adc loop pop data16 add fistl imul in xor outsb inc into in call xchg xor js mov bnd pop cmp push popa mov lcall loopne loopne and cmpsl pop ret jb ja pop xor adc movsl push xor jae jl push xor adc add mov cmp out mov inc aad mov daa xor jb inc in sub push addr16 jecxz lret sbb (bad) test jle lds sti cmp mov scas mov lahf enter mov push mov pop jne (bad) lea jo js popf sub in pop mov cmpsl pop or mov test adc push and xchg das (bad) ja pop inc test sar jbe cs in or jecxz mov fs mov repz push mov (bad) movsb inc adc out lahf xor rorb repz aaa clc push mov lods push add mov scas push cmc cmp fbld pop loopne sub aad dec (bad) js into inc mov ds int3 dec xchg xor ret xchg jb jle out enter xchg movsl mov mov lcall adc xor dec jp pop pop movsl test push mov lcall test das lods lods and lret push mov adc adc fadds (bad) rolb ss sub mov in mov inc int adc dec add cltd sbb addl or xor ljmp dec or cmp adc rorb mov push or jae pop pushf mov jecxz cltd jbe jg in incb fnsave lahf aas inc mov cmp pushf (bad) jg cmp ret cmpsb mov (bad) pushf (bad) cld in lcall movsl fmull cmp je xchg imul xchg inc loopew mov movsb mov cmp sub mov aam push adc adcl je dec scas inc rcrl fist mov sti sbb mov mov mov adc or jne mov mov ja inc add sbb sarl lods sbb wbinvd pop scas es mov pushf popa movsb les push faddl out xchg lret jno bound pop adc cld icebp pop lcall push (bad) inc or fmull lods jns xlat adc outsb and insb sub movsb fwait jae inc sti mov mov or xchg cwtl add ret xchg divb shr insb mov icebp push dec dec inc rcrl (bad) cld mov jnp or jo pop add xlat (bad) pop sbb (bad) or aad test mov mov int mov mov mov jne imul jbe mov push bound inc jp mov cmp clc aas fiadd shrl fwait imul in gs popf adc (bad) fwait push inc sarl mov jae outsl mov out or mov ja jl xor addr16 xchg inc (bad) mov cmp push jl adc or pop mov xor mov fsubs mov imul mov mov adc mov int3 mov cmp clc xchg push push push add add ficomp xor imul (bad) sahf mov js rorb mov xchg or xchg or mov cmp lret and xchg sahf dec ds andl mov lea rcrl push xchg mov or push dec loopne sarb jg incl or adc daa lock loopne sarb jg incl or adc daa lock incl insb push jmp sbb sub add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add hlt and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push push and adc cmpsb leave cmp mov test insl (bad) mov fcomi ds mov in mov pop sbb and (bad) mulb mov push cwtl sar fwait ds adc (bad) cmpsb dec mov popa push ret cmpsb flds cmp call adc pop out enter mov daa adcb outsb inc mov and xor jns mov lds mov or or (bad) cmp add idivl in sbbl cmp jns mov popa mov movsl push movsl aad jns mov call adc (bad) pop sub (bad) pop mov dec push test mov stos out or cmp sbbl add inc mov xor daa jge out xchg sbb add loopne cli mov (bad) scas adc xchg inc fdivl or add xor scas dec mov xlat aam cmp mov mov fidiv das mov mov ljmp dec sahf pop mov repz adc test push lock pop xor pop lahf lock out pop fst adc repz int3 xchg mov jae inc js inc adcb insl dec pop push in frstor adc push pushf lret push pop pop into insb add bound jle jns (bad) lock movsb fs xor inc imul cmp sub jp nop enter jo,pn out push jl pusha fmull dec ljmp sbb fisubr and stos ljmp jne push mov cmpb imul cmc movsl shl ds lret push in or scas add aam sbb mov adc clc (bad) popf enter bound sarb jl arpl mov fsubrl js push into je addr16 mov cmpsl das fs add outsb lods push les and sbb movl cld push xor push and mov insl hlt fsubl aaa fdivl addl rolb cwtl pushf sbbl in jb lods sbb mov fsubr sub mov (bad) xchg adc mov and lods jg outsl loopne sbb or xor adc mov (bad) mov loopne mov sbb or xchg nop test cwtl test mov dec fadds lock jbe fisttpll xor xorl pop pop gs mov repz (bad) xchg inc enter ret int3 lods push mov mov in pop scas mov adcl xor shrb test div or fisubrl fcmove inc bnd je mov xor add push add mov lds pop pushf pusha jmp sub cmp mov scas fdivrs jne sti imul scas mov arpl test adc pusha adc test and mov adc je fidivr adc out cltd test xor push scas mov dec (bad) xor sub mov sar out dec xchg sub leave (bad) aad popf stos mov mov mov push mov mov dec test add (bad) lock fmulp push mov sbb iret (bad) mov dec iret mov movsb sbb pop pop xor push sbb push mov fist push mov pop roll sbb jle jl jecxz sti and push sarl fbld outsl adc ljmp test xlat out sarl pop or dec leave movsl sub std stos jecxz adc incb rol xchg and (bad) out (bad) push cmp mov xor shll xchg dec push push fimul jecxz and mov sbb dec testl or cltd add arpl push lret jl ret ljmp or push mull mov sbb fisttpl push aas pusha sbb insl icebp pusha cld push cwtl test loope cmp das cmc mov sub and adc jge xchg dec inc cmpsl ss cmp scas mov (bad) adc popa (bad) jne inc cltd hlt cld inc inc adc dec fnstcw and fnsave mov push aad push jnp adc and es pop outsb lock jnp mov ret pop je out push repz (bad) (bad) lret repnz inc icebp lcall jp inc mov imul lret push sub fnsave or pop iret inc and data16 sar out fucomip cmc xor rclb sbbl je and mov sbb scas in (bad) dec jle ja clc xor aad ficom jecxz sarl pop xchg and movl bound in and imul pop icebp mov cli js dec js into iret scas sbbl test push call out int3 jecxz insb pop xchg les out mov inc mov aaa jns cmc sbb lods or pop (bad) sub fdivl sti add push jns mov mov sub pusha push cltd stos xlat (bad) or inc clc test outsl jecxz jnp mov aas negb add xor mov mov push pop sbb adc inc (bad) cmp movsl push scas loopne xchg add add insl push test imul movsb mov das bound mov and sub (bad) repz xor mov icebp gs call nop iret lods pushf clc jl loop sbb cmp push and outsb sub xor in out (bad) cmp gs push jns adc adc in jmp mov (bad) pop add and sub mov or aaa cs mov sub popa fisttp pop mov lret imul jecxz xchg jmp lods cltd lret sub (bad) cmpsb push data16 inc repz xorl fildl (bad) (bad) mov (bad) xor mov orl mov lds hlt sbb mov ljmp outsb mov arpl fs sub out inc inc ret (bad) hlt mov std mov (bad) popl mov sub aas mov hlt push jle and test dec push ficomp inc xlat (bad) sbb outsb imul sub gs dec nop ret push ret ja mov test pop mov dec add fcmovne jl dec sti call add inc add inc inc dec mov dec push nop loopne pop inc mov jnp mov or out jmp push jo push or mov sti pop mov ret adc mov mov pop das or inc mov mov sbbl cmp mov sub scas add testb (bad) lret jmp pop loop cltd pop pop adc stc mov icebp daa mov (bad) les aam icebp (bad) clc or scas (bad) adc push dec shrb hlt lea das aas movsl jl mov and sub mov cltd ss pop xchg sti lods jns sti insl fcoml pusha pop stos in iret insb cmp repz lock sarb push rorl mov outsb xlat loope jbe xchg mov jl push pop mov aam xchg add or mov or sbb cwtl xlat jp shrl or mov adcb (bad) mov mov stc mov rcrl adc xor nop int push sbb in imul sarb loop push xor shll popa popf mov jg xchg add mov into pop enter pushf push push pop mov xchg adc loopne cmp pop out and aad ret inc loopne sar mov int3 lds dec add (bad) aaa out repz data16 inc push into adc scas pusha jne xchg xor xchg popa adc inc cmp iret mull shl out dec cltd mov xor jae and arpl scas jne aad cmp stc call cltd xchg loop (bad) das sub lods (bad) les adc sub push jmp mov loopne imul mov (bad) inc fs stc int3 mov jne cmp mov adc mov xor cmp mov sub sub bound roll (bad) sub mov cmpsb mov add adc cmp mov or or sub loop pop mov and fwait push nop inc div pop cmp (bad) lahf popa lock int3 and xor data16 mov sub and jae movsb cwtl movsl inc cli push add cmp xchg pop sti jbe aas pop das call jmp xchg idivb test mov bound push push mov insb rol fdivrs stos jp (bad) pop mull ret sahf and jnp movsb aas add xchg add mov pop push lahf fbld inc inc clc loop pop (bad) adc xor dec dec inc jb cmp data16 bswap xchg icebp push arpl sbb mov adc daa ret fiaddl mov (bad) jne push lcall pop icebp cmpsb test sti stos add addr16 sar cmp leave sub out mov pop outsl adc cmp mov pop xchg clc pushf push adc les scas adc fcomi xor lea int3 (bad) (bad) rclb fwait inc imul xchg sub dec mov outsl sub lds mov (bad) fld stos (bad) pushf push xlat ret and push data16 mov enter cmp outsl add sub lcall inc adc addr16 pop jbe outsl mov loope es lea repz mov aas mov stos mov dec jno push lcall jp in jnp das or mulb push sbb insl xor mov ds xchg fdivl or das (bad) aad fsts std or inc mov test hlt jae mov inc lods add jo cmpsl mov aas mov push loopne xchg leave add sbb cmp stc xchg add adc add jbe push outsb sub cmc stos dec add ds scas push sti cmp fs rcrb sub sbb cs inc push jnp pop sub inc or pop lock push jno push sbb xchg sub inc notb sbbb inc rcrb lods mov jge leave jp push das ljmp mov enter pop xor cmp xor or adc scas pop mov xchg push mov xchg cmc pop imul hlt push pop imul cmp mov out dec movsl push inc pushf roll stos xor mov mov push lcall leave add ret into inc ds mov cli xchg sub cmp out mov inc icebp jl rcrb js addr16 les sub adc lock cmpsb repnz cltd sub inc or pop (bad) (bad) scas cmp mov jle cmp addl movsl loop dec pop pop test adc sub inc cmpsl adc loopne ds aaa insl aam cmp dec cli pop sub mov or scas clc jge in mov sub aam out cmpsl shlb outsb cmp clc rcrl cmpsl popa or mov popa das int jne fwait pop fsubrp das mov push pop mov stos (bad) lret inc movsl mov or pusha add enter pop pop or cli and lock subl mov and pop push mov (bad) xchg (bad) repnz enter or sarb ja fwait mov add repnz jge jg jb cmc out adc jge out push cmp iret mov ror lcall aad xchg fs test fadds shll dec inc mov or cwtl ffree mov cmp ja mov insb fdivrl jl inc iret (bad) dec mov or push lret movsb push rcrl xor push addr16 mov inc xchg xchg inc (bad) das mov jno cwtl xchg pop push data16 cmp outsl nop jmp jecxz mov push icebp or adc pop in jb inc mov xchg enter add xor jge in (bad) hlt nop les push rcrl dec in fcomip add in aas push lods mov xor jecxz pop sbb and sub int lahf add (bad) xchg in mov mov push cli mov sub mov add mov pop mov cmp push (bad) jb je dec out popa push mov lret imul inc mov shll andb cmp add sbb jg mov adc test popa and ret pop movsb sarl mov stos lcall push sbb cld roll jne xchg xchg jo arpl and (bad) movsl adc sbb xchg adc xor push rcr shlb push shrl mov push sub pushf pop inc fistp outsb shrl fildll cmpsb mov xchg pop jmp out test or sahf push mov jnp xchg add gs xor push jo mov ret aad (bad) ja les mov mov es add mov sub aad push lods mov shll lods jns inc xchg push xor ja dec dec inc jmp fs ret test movsl mull adc sar fstpl push lret sub jne xor into (bad) mov aaa pop pmaddwd test (bad) pushf fst pop jp call test lods push cltd rorl pop (bad) insl push mov movsb push stos xor das xchg pusha insl mov jne nop push lahf push adc lahf xchg pop pusha pushf scas (bad) test sub push push (bad) jb (bad) xor pushw adc jae lods mov jbe pop mov mov jns add in in (bad) rolb lods bound push loopne and inc daa add jle rolb pop push (bad) xor addr16 scas inc mov ja (bad) pop sahf and add xlat iret fsubrs jmp std ja sbb inc into add mov notb inc mov push adc test leave and int rol (bad) mov rolb push push out es mov loope xchg and mov (bad) hlt mov xor fwait adc push mov subl pop pop xlat jno (bad) and lea mov cli dec jl pavgw pop mulb pop in cmp stos mov aas or mov aad xchg in inc mov adc out push inc add lods cli in ret leave add adc (bad) mov mov aam add shrb sub sub dec movsl sub (bad) xlat (bad) fldl2t mov stos aam and push lock popl rorl xchg xor dec loope in dec cmp sub jp jmp mov mov xlat sub pop dec ficomp cmp loope dec lock clc jge adc cmpsl (bad) mov push out fs adc ss mov pop or ljmp mov ljmp pop push icebp add sti push fimull or dec fadd leave and cld mov nop in cltd mov cmp scas (bad) dec cmp fmuls or aaa xor sub jmp cmp ljmp call adc sti out cmp and push mov inc lock adc xor aam stc mov or xchg out (bad) mov jl outsb jb lahf cmp sub cmp imull aad pop or test pop gs pop neg fmuls mov jl sub mov data16 stc dec (bad) iret xchg inc sbb scas popa inc adc js les popf andl inc mov loopne mov (bad) xlat dec adc test repnz sahf mov test jns loopne xor push test stos (bad) (bad) lret stc outsb push push dec cmp xchg cmp push push mov daa popa add aaa jge jmp aam mov inc ss das aad pop lcall xchg xor ja lcall inc test jle sbb dec sbb lahf inc pop mov stos pop mov test ja repnz push out fisub push repnz ficom (bad) and jnp mov push mov test popa repnz jg sar pushf lods je,pt pop jecxz adc lock push or inc add stos sub cmpl lods mov decl ss das inc push mov cmpsb stos mov xchg mov (bad) dec push data16 inc xchg jns dec jmp dec push and xor or jb notl add push push mov add pop pop cld loope (bad) mov mov sbb adc inc adcb adc aam sahf jge clc fwait (bad) in mov or sub bound mov mov jl lret pop cld arpl xchg mov adc scas test (bad) ficompl shl aad movsl lods and pusha mov int3 push nop arpl ja shrl xor add lahf cmp into stos xchg sarl pop jbe jb push (bad) shrl frstor ret or inc jns or mov bound pop sbb mulb in ds jmp int or outsb arpl mov mov cmp call cmp inc shl and inc icebp jnp pushf jg icebp xor dec mov jp std mov xchg mov mov lret inc and xor add stos mov mov mov xchg sti flds cli cmp loop das jne es mov rorb dec jl mov push jae or outsl push push int les or pop ret pop imul testl push negb xchg xor inc inc sti rcr or push add adc or test popa inc mov arpl add or testl or jns lds ret inc outsl mov add (bad) dec sub inc jle cmp movsb mov repz inc lret inc fdivrl lahf mov mov mov push add inc add jl ret add adc in cs or gs jge aas adc add call int3 test leave and fimull mov sbb mov push xor roll ljmp dec daa scas (bad) jo sub pusha mov lods push jne push sahf push pop adc jb jl pop arpl stos mov add ret ljmp push in or xor aad test sahf or lahf push outsl loop push cli or mov rcrl xor out subl inc shr push mov outsb loope in push xor loop sub xor xor daa daa sbb jo add xchg fs jmp in (bad) sarl cli ficomp out xchg (bad) ja ret (bad) hlt cltd int arpl ss xor inc adc or cmpl in and push leave mov cltd sub mov paddq loope cmp stc fsub mov lret add cmp (bad) out imul ret adc inc mov daa sub mov (bad) jnp (bad) adc xchg cli jge lret test sbb cmp xor into xchg lret sahf (bad) adc int adc mov cmp or inc lret and xchg cmp push sub leave push mov jmp fdiv inc lds mov jp std cmp push lret cld xchg mov pop sub xchg clc push ror add fnclex xchg adc sbb jnp movsl call mov call icebp pop pusha cmc push jmp xchg pop fdivrl xchg in inc cwtl shrb enter add jns hlt jp sub and and iret in sbb xchg or mov sbb dec cltd bound push (bad) into mov pop sbb movsl pop ds stos adc or lahf xor sub jne enter arpl pop mov sbb pop popa insl pop out push shr aas xchg idivb (bad) aam dec pop push fsubl jp sub stc push jp xchg popf or mov pop jae jno out or aam xlat xor sub mov pop ficomp pop mov pop (bad) pop pop ljmp xchg data16 jb mov push jae pop xor outsl dec or or xchg ljmp mov lock mov pop inc and jg jo ret dec sahf bound dec inc fidiv push cmp call (bad) fild sub notb icebp daa or cmpsl aad test jns dec inc in out or rorb mov sti push mov push test lds xor add cmc shr iret xor fbld out pop daa lahf mov lcall in out push mov popa cli clc and imull aad cmc or xchg mov cmc lret lods xlat and mov gs and loopne inc lock xor fistp sbb shrl imul or push imul sbb ja jnp fld in dec mov lahf lds dec mov cmp subl mov lods sub cmpsb fnop dec into icebp loope scas movsb in (bad) in iret stc cmpsl clc loop,pt add push or push mov test cld movsl sub jecxz arpl mov mov sbb stc shrl cmpsb dec leave xchg dec push adc sahf pop inc sub call rcrb (bad) jecxz pop pop xor cmp pop gs add stos inc test mov xchg aas jns int out sub aas push aas xor and lahf gs mov ljmp pop mov lock xor in sbb xchg sub lea and xchg jecxz push xor data16 mov aad (bad) cmpsb rol loope mov lcall push mov addr16 stos lds negl sbb (bad) fimul leave push add je pushw push lea mov add cmp repz inc xor dec in pop mov push push sub adc movsb cld movsl xchg mov or aas daa inc xor or mov divl pop in cmp sub and pop js jo sub cmp adc clc aam and mov sub dec jl add cwtl sub std scas jnp bound jg cmp pop sarl loopne popa adc mov fstpt sbb inc (bad) xor pop outsl dec and daa cmc push dec mov shrb bound mov add fstpt imul xchg movsl aam jns (bad) stos adc push lock aam add and cmpsl daa adc ljmp xchg ljmp jge sbb mov cld ret ds incl xor mov mov pop adc rcl jbe cwtl loope movsb xor lcall nop data16 xor stos cmpsl ljmp jnp sbbl dec ss (bad) lock bound xor das cmp stos mov mov test or mov mov inc scas std out inc ret inc ss dec sahf mov push lret mov arpl pop jb jp aas xor pop insb shrb and clc xchg cltd dec xchg mov icebp fwait and push adc ljmp sub pop xchg cli mov popa xor jg and sbb aas push inc (bad) xchg ja pcmpgtd cltd and or or popa add scas pop in stos hlt sbb dec mov xchg ss add jbe bswap sub cmp inc inc imul fmull sub aad sahf pop mov inc ss fcoml (bad) mov pop sub pop movsl in jb pop es add fstps (bad) jae mov cmp mov pop popf mov adc jp cmp mov pushf inc or jb outsb cmp pop aad xor mov iret mov xlat inc mov mov push adc ret js aad hlt lahf mov cmp jb in fisttp jnp mov add and stos mov mov inc mov sahf les mov test adc or arpl mov ret mov xchg sub clc dec addr16 cmp xor aad and inc (bad) ss pop and nop pop cmp pop add popf aaa loope out push mov mov sar lret jne xchg dec xchg loope jno,pt lret daa stos and scas in fcoms dec push pop jle fsubs test dec (bad) cltd sub imul xchg mull movsl fcomps mov (bad) mov and jne imul or in imul sub adc inc jb in movsb add or inc sarl pop xchg jecxz xor xchg sbb into cmpsb dec xchg (bad) push fcmovnbe imul mov addr16 pushf add sub cmpsb es lods add adc xor mov fisttpll inc xor popa inc mov mov movsl cli imul sti cltd lret jno arpl pop inc cmp sub (bad) repnz test test pop cmp fidiv ja sub cmp shlb and cmp mov adc jo dec pop cmpsl (bad) aaa ret or lea bound push fbstp bound push out sar fist mov sarb or daa lock sarb or daa lock sarb or daa lock sar cmp test add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add repz add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push push and xchg int dec dec mov leave ss mov mov (bad) test (bad) adc xlat or add add add aas aaa jle cmp into inc ja in lahf lcall movsl add xor lock pop mov jo iret pop (bad) cmp and call lds dec std rcl mov fstpl mov dec popa rcl ljmp sbb mov cmp add and sub push cli inc jbe jecxz aad mov mov popf mov push test ret js inc loopne or jmp push push test push mov jo into mov sbb test add jae and add pavgb adc movsb dec gs or pop push pop ret loope dec mov push nopl xchg push notl test mov fsubrs pop ret into sbb bound jle adc jae fmull stos mov jo xchg dec jmp jno add dec add cmc jnp idivl data16 leave je imul int3 in imul lret push inc mov sub out xchg lcall inc xor (bad) cltd push loop mov stos add jb sub sarl cmp cmp lds les xor fisubrl mov test and test mov fst pushf jo pop fs sbb icebp sub and xor adc push cmp xor cmc sbb cmpb popa dec dec pushf fisttpl sbb ja (bad) out xor js xlat idivb and pop fs and sbb (bad) ja xor xchg jb insb mov icebp mov inc inc push (bad) dec push (bad) in inc xchg shr xor adc in mov mov jmp mov out push jmp fmull cmp imul dec dec dec pusha sahf pop xchg push out hlt je stos in mov aas dec push push aas insl or arpl xchg sub out sub in or in push jg adc jp sbb lods or add jno push pop scas lods pushf scas dec pop inc adc adc lods in inc in lods sbb cmp cli into mov cmp push repnz loope shrb push xchg (bad) imul or adc pop sbb aad (bad) pusha fiadd sbb mov arpl imul test push inc cltd xor sti in sbb daa cmp push outsb mov and xchg loopne out xorl fldl (bad) in pop jbe lahf call mov push ffree inc icebp cmpl xor out lds jmp mov and iret test std inc xchg pop push test jecxz push rcl or insl std in inc jae movsl mov xor fldl cltd in push iret inc rcrl and cmp (bad) sbb notb scas mov or jns mov cltd js shlb clc icebp pop mov cld outsl mov cmp stc stos (bad) lret out mov xor xchg push pop inc cs cmp (bad) aad mov cmp adc adc mov jbe in adc pop sar mov ds cli mov jns loop or js data16 pop cmp lds inc aaa mull adc dec (bad) pop imul cmp fcoml xchg arpl mov adc pusha outsb lret int3 adc movsb ficoml rcr aas inc jle cmp jle insl xor test iret lods xor push fdivr ljmp or addr16 push mov test xor push or popa and push faddp mov adc jbe adc xchg arpl stc mulb aas or sub repnz loope out push xchg jmp inc pop sub cmc xchg inc or mov popf mov mov icebp loope popf cli pusha dec js mov fs movsl in pop mov imul push nop (bad) (bad) clc xor lea inc dec mov roll push imulb cmp xchg incb push insl mull in mov sbb imul push pop mov sbb dec or or shr mov das jge jecxz cmp mov leave cltd orl push dec testb jbe pop cmp ds loop iret xor xchg fucomp xchg sub xchg je mov inc lahf mov ret inc xchg inc mov mov inc lock divl push xchg fisttpll mov push xchg fstl xor sbb xchg cld stos lea aaa inc cld sti cmp or fsubrp and (bad) cli pop sti in xchg fimul (bad) in enter cmp dec jb fdivrs cmp cltd pop ljmp aas mov sub outsl (bad) jo test std xchg jl cmpsl clc jecxz add push adc mov ja sbb mov push jbe sahf mov data16 xchg movsl call push popa lods dec (bad) lret insl leave call adc ja sbb add add into jp sub sbb arpl xor pop cs xor jnp pop jl call in fwait xlat (bad) mov repnz inc ja adc mov dec add mov adc fsubp mov test jle rorb int mov xchg xchg scas or daa mov inc dec cltd mov lods jg add dec dec cmp or push sbb fidivrl int3 mov loop es paddq add stc inc cmc pop test pop mov push mov adc adc punpckldq or int3 xchg clc jmp movsb mov inc or mov lret mov sub add call and sub xor aas fldcw insb ror fsub mov in stc faddp (bad) xor xor adc jae repz fnstcw jmp scas add mov lods (bad) xor mov inc pop push aam out (bad) repz cmp cmp push rcll xchg fisubrl fcmovnbe gs mov es sahf xchg sti lock lret jno xchg adc sub xor mov mov or out mov xor sahf add push in js test mov jb aam notb int mov shll test cmp xchg xlat sbb jae ret dec inc jns cmp dec or clc stos in cwtl sub imul aaa pop (bad) cmc lock fdivrl dec cmp and push mov pop jae (bad) sbb sub mov and cmpsl (bad) leave jne (bad) lret or add or add hlt adc imul dec std rcl mull pop (bad) mov jne enter sbb imul xchg xchg mov das sti xchg adc out xchg js repz xor xor cwtl frstor mov sbb stos add jg push inc (bad) (bad) and sahf jecxz push imul aad outsb cmpsl imul mov pushf fisubl repnz repnz clc cltd shrl cmp add lds xchg sub sbb cmp or sub lods push jbe dec xchg movsl pop fwait push fwait (bad) imull pop mov sar (bad) ja sbb hlt loope xchg add push inc rolb mov xchg pop loopne xor cmc pushf inc leave int xchg addr16 lea or nop adc push call mov lret and rorl and xor lds adc sub inc test xchg rcrl push push lret push jne push push dec sbb fldenv inc rcrl insl shl movsb xor faddp sbb push push pop or popf rcr jnp or jae (bad) jmp mov sbb xor cmp stos gs xchg mov incb nop jp rcll xchg fwait jmp addl dec xor out arpl stos xor pop lcall cmpsl or int3 push lea or inc push pop cltd daa add mov xchg lods add nop (bad) lret jnp adc dec push fidiv add mov jmp jmp lds xchg mov je fisubr clc aam mov ja rcrl aas fldcw xor inc test xchg out rcrl in jbe jge pop mov loope push sbb add mov jo push pop cmpl (bad) inc int mov jbe push sti sub repnz cmpsl sbb subb jg mov int3 in adc inc push mov mov sbbl or (bad) ljmp mov mov jmp lret cmp mov dec jne push (bad) repz jne push xchg daa mov jmp pop dec lret jbe mov pop cmpsl and push or je aam test insb cmp pop push pop int3 inc sarb sysenter inc sti inc int3 jmp sar push and movsl je jns sub sub sbb jnp dec fwait out sbbb aas sbb notl clc pop sub xchg and cmp add pushf sub push and jg mov dec inc leave mov mov ffreep mov mov xor out jno inc sbb jbe xlat (bad) ljmp sub (bad) push repz jns jmp and daa sub xchg int outsl ds mov ds inc xchg test enter ret mov aas repz daa sbb jmp les pop mov xchg sub sub cmovb inc test push mov mov push lcall adc fistp aaa gs imul push jg fsts inc es sub fadds jmp xor mov leave mov out je (bad) fcmovnu jmp sar scas mov (bad) es stos sbb sub int insb cmp xor xchg ret sub (bad) jle mov jo pop xchg push pop stos out mov dec dec adc movsb mov je imul sub jno enter insb das dec sbb mov stos stos pop push cwtl sbb sub sub bound sarl cli (bad) bound fisttp test ljmp mov in in cli ds pop pop rorb mov imul (bad) mov xchg and data16 pop sbb xchg lock mov stc (bad) mov lods mov sub dec test jno jnp pop pop mov gs das jle fpatan cltd out xor and cli js icebp pop jp in sub insl int or pop mov dec and push int shlb mov mov popa cmp mov adc shrl adc ljmp (bad) push pop cs add sub repnz in sub and push xchg (bad) pop pop (bad) into aas inc iret sbb sbb ja cli fsub fsts xchg sub cmpl push and notl mov outsb mov sub cmp mov mov lock imul add mov xor push mov pop pop repz jne mov scas jmp scas lahf lea xchg mov jae shrl mov mov addb popf dec daa or mov and stos or xor push sbbb jp pop add lea inc mov out lds xor inc mov mov out push mov das and movsl pushf jmp bound aam push cli es cld dec sbb push fcmovnbe ljmp inc stc mov mov ja aad aas sbb mov or iret imul jo inc (bad) jae mov sub add or adc xor jb mov jae inc fwait mov (bad) lret mov lods or xor mov push mov addl mov pop xchg mov xchg inc cmc xchg lock in xlat inc add sbb mov xor push test insl pop xor lahf inc pop lods and sbb or inc stos xor fldt xchg les loopne ds mov mov xor cs or push sub outsl (bad) les leave and iret sub xor xchg sbb fwait jl xorl lds repnz adc push lahf cltd xor xlat jae push in inc push push xchg stos fcmovne lret or hlt loop test xchg jb call fcoml mov loope rclb pop inc aas or js subl int inc xchg mov mov mov cltd sbbl or add mov mov sbb pushw jp cli push mov js inc add mov movsb addl inc dec cs sub jecxz (bad) fdivl jmp (bad) jmp xchg jp pop aaa aaa movsb push mov and ljmp add and mov fcomps xchg pop lret gs jbe xchg adc push test dec cmp xor xchg loope mov or jmp addr16 jg lods adc cmp mov add mov push sbbb rorb inc mov shr imul in sub sbb sub incl sub xor (bad) push xchg insl in in sub repnz add out pusha stos adc xor or loope call (bad) xor mov fstpl test jp cmp or iret popa jne push or shrl push jle mov inc sbb lea cmp jl xchg test and add mov test push lea sbb jbe stos adc ss lods mov inc jmp inc loopne insb hlt adc js loop jmp xor loop sahf loopne xor lret lods xlat adc scas sarb xchg mov cmp shl mov add jnp add lret dec lods idivl mov popa das (bad) repnz lods jo je (bad) cmp sbb jmp xchg mov shlb adc clc in dec clc lds pop adc or insl or mov add lds push (bad) jmp xor inc outsl add adc pop xchg daa cli xchg adc mov pushf mov leave mov mov mov push jp cld (bad) pop int3 sub push cwtl dec out pop add cmp fdivrl or rol inc aad outsb mov jb add pop insb lret sbb lock movsb ret sbb sub bound and adc aaa popa push shrb imul movl jbe mov fidiv notb (bad) (bad) inc scas clc add xchg cmpb xchg int xchg push xor add daa or rolb cmc pusha xor mov pop jae call or popa fbstp xchg pusha ficomp test scas test jmp mov push push jo jno out shll mov cwtl std mov mov cmpsb or and (bad) jnp (bad) popa jne dec mov out iret nop test orl pop in in push pop arpl imul add sub mov mov or inc imul xchg adc popa mov jne mov jge jbe add fmull inc xchg loope int mov add fisttp mov jle addl mov daa sub jle das mov mov ja mov ficom test jae setp xchg test jecxz cmp in sbb rcll movsl repnz pop sbb shrb data16 into popa sbb loope arpl xchg jl cmc jecxz or bound push aad push outsb or subl xchg loop inc dec int3 dec mov mov mov scas lret xchg outsl xrelease lods adc push dec (bad) cwtl push out sahf mov and inc cmp xor fsub pavgb jp pusha jno inc outsb dec inc add adc aas jg xor xor push and and xchg inc dec testb in xor xchg dec sub xchg pusha aad and mov and test dec nop je adc jb or push lods and jne lods mov fsubr inc daa fild into jle imul push ret lret push push xor push call test jmp and cmp pop mov sti test popa (bad) push jae (bad) jne lret add pop aaa cmovp dec jb pushl pop imul xchg cmp faddl pushf mov out jge leave xor js es sbb sarl and mov jl push jae xchg adc jge inc dec cltd cli xlat jb push inc bound test xchg add sub (bad) mov mov out decb or xchg and xchg arpl push pop jp xor mov ret mov leave push adc (bad) mov ret mov dec adc push movl add lahf push adc xor xor xor cmp ret and negb in mov mov mov sub mov and inc jne inc jmp jnp lods jecxz ljmp push movsl insb mov adc pop ds xor sahf pop cwtl mov jge ss inc and and jl jg xchg call mov cmp bound push andl xchg push movsl jno push pop dec lahf add sub into aam xor dec popf mov mov cli repz icebp test or jne loope push sub sub xchg cli adcb add inc ror mov pushf dec ret cmp popf in xchg loop test inc stc dec dec mov pop xchg lret jne dec sub jge daa fwait mov mov aaa jg push sub jp mov (bad) je sbb sbb lea popa in insl jae sub enter push (bad) out cmp push mov sbb out ds mov and xor pop push inc mov sahf test pop sub xchg roll (bad) gs sbb ss andl xor mov mov mov cmpsl fdivr in lods mov sahf cld pusha mov pop or pop or dec js clc (bad) out jae daa inc add inc leave jle mov bound cmc fdivl sbb cmp jle mov cmpsl scas dec xlat outsl dec dec aas jo loope lods add test and test jp mov push ja ja aad adc push enter xchg cltd in mov xchg pushf js movl and sub loop rcr out dec or stos fwait cltd sbb incl fisttp inc js lret and jle movsb add cmc fcomp into inc push cwtl jns pop sar sub into (bad) repz outsb sbb (bad) ficoml add adc sahf in (bad) stc and mov pop add adc rcrb dec inc pushf mov mov in push jl mov mov inc out daa mov in int xor in les mov fistpl iret xlat jb mov mov aam inc push sti sbb xchg ret inc pop mov lea mov fisubl out xor jae pop nop bnd dec push test or xchg xchg cmpsl cmp cld (bad) or and sub popf roll inc (bad) lea faddl fcomps mov loopne xor push out fdiv fnsave xor cmc ljmp out cltd lcall sahf ror cs push iret xor gs imull sub out movsb xchg js dec idiv or xchg or into jb lock dec mov inc mov in dec adc stos push inc push pop lds outsl mov pop gs stc aam insl xlat jbe clc xchg arpl fsubp hlt mov add aaa aaa pop jl xor repnz adc jno or repz pop inc push push lods leave push fiadd ret pop pop pop cmpsl scas repnz incb testb mov mov (bad) gs sbb dec es mov fimull fisttpl aaa addl xlat adc fdiv lahf adc mov adc loopne sub in cs leave add pop dec test frstor sub scas pusha cmp pop nop push fs inc inc xchg mov int3 sbb shr push shl mov adc lods movsl dec leave cmp and push pop xor mov mov push dec out mov enter mov pushf mov xchg inc insl jnp push xor lods xor lcall mov xorl (bad) sub cs std jno xchg call sti fwait sub lods mov addr16 ret lcall test loopne popa mov sarb std jg in fstpl xor and loop jb das cs outsl mov mov xchg movsl jnp sbb jg test mov scas cmp roll xchg mov sbb push loop mov dec (bad) xor sub sbb add mov orb jo cmc ss (bad) neg inc mov sub out std push sbb push mov shr mov pop popl fmul fiaddl add mov xor jl stc ja addb cmp shrl add add clc dec int ret clc nop cmp (bad) jb mov jg push icebp and test xchg cld fldcw dec mov inc out xchg flds rclb jns pop daa sarl test sub inc add xchg inc test fcmovnb arpl sub out mov mull rolb xchg jne je sbb jno iret stos dec xchg fwait loopne inc pop mov out and pusha daa push sub xlat inc out cltd jge mov lcall push add or mov daa pop or (bad) mov and lea dec das dec cmc mov jbe mov mov test xchg jae mov push push (bad) and lods sti repnz inc pop cmp inc test pop sub adc jne sub in addr16 sub loopne shl lret sbb cmp pop dec pop jae fsubs stos cmova in mov lds cld cld dec or sbb jbe push arpl aad out mov stc sarl test push sub cli js xchg adc and (bad) cmpsb xor aaa outsb aaa cmpb add nop cwtl out dec dec sahf sbb mov push jge movsb cmp adc fwait ja (bad) cmp mov in sbb jns pop aaa (bad) rep leave aam sbb leave scas mov mov hlt (bad) inc mov adc mov int3 rcr xchg mov in jns pop xchg pop and xor stos dec mov loopne insl std xchg push mov dec les das pop in pop iret jns mov scas sub loope or sbb stos loopne jb (bad) push imul pop mov cmpsl xchg cld stos lds pusha sbb sub repnz jmp je lods test dec adc and loopne cmp stos sahf jno repz lea xor push xorb out lea (bad) xchg ret aas adc fcmovne pusha ret xchg dec test (bad) adc sub push jmp fisubl add out mov mov cmp pop insb les call ljmp loopne jae fisttp pop push stos notb fdivl (bad) or arpl test mov aam jns jae lea pop jle scas call cmp sbb sbb mov xchg jnp inc add mov aam (bad) (bad) push repnz hlt mov lahf pop (bad) jb xchg pop aaa cmp js int lods into xchg push outsl sti mov (bad) ss pop movsb in xchg jae dec jmp pushf je pop cmp sbb mov mov (bad) inc mov addr16 pop sub sub fistpl lea push inc rol int and movsl dec xchg (bad) push loope dec sbb and ret xlat cmp iret jle icebp into push or outsb mov and outsl jno jb lods mov sbb adc in (bad) ja fnstsw lret into sbb lea outsl fidivrl loop lods cmp (bad) cmpsl js lcall fimul mov js xchg xchg xchg rcl idivl (bad) sub imul mov add inc xchg imul into push xor sub lock (bad) xor fwait out push pop cltd push mov xor sbb inc jne (bad) lock cmp imul push push or test stos xchg outsl pusha sbb loope jmp lahf pop jmp sbb addr16 (bad) loopne in inc dec pop iret int3 mov outsl or (bad) jge sbb ret int aad sbb int inc fisttpll cmp cli lea cmc ss addr16 adc push inc cmpsl mov sub int pop pop jmp sbb stos out adc sahf xchg fs mov mov sub sbb pop cmc movsl in jl sti je add call mov cli out arpl mov outsb push pop push sbb rorb push out test imul mov add cs add lds push inc fdivl (bad) cmp xchg loop inc push xlat xchg lea jl add and and lock clc arpl lods sub fadds je setl addr16 fstl mov cmp xor (bad) mov mov ds cmp loope mov das mov mov mov mov insb sbb out mov mov mov into or adc jne leave inc push maskmovq negl ljmp loopne out cmpsb in jecxz pextrw inc adc das cmp add mov mov or ja or daa lock sarb or daa lock sarb or daa lock sarb or daa lock incl ret popa vpunpcklbw dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmc and add mov inc or add or add add add inc or add add add add inc inc add add add inc dec inc add mov or popa add jo pop jae add jae add jae mov mov mov inc push push pop and popf pop xchg insl (bad) cmp (bad) lcall js cmc adc (bad) pop (bad) jne add mov adc push push mov jnp mov adc (bad) cltd cltd mov in adc pop xor outsl popf inc rep pop push jno,pt mov pop adcl lea jbe cs mov push repz ss sub add add sub div pop cmpsl xor stos cmpsb pop jb and pushf add sarb push jae push adc push lahf (bad) jecxz inc adc int3 or ja repnz cmp leave test fwait mov les dec out mov mov (bad) shll xlat imul incb leave mov add call inc push pusha gs jle jae jge lahf xchg mov jg cld mov and pop iret (bad) jno xor rcrb xor jns scas push loope push jnp repnz mov mov nop push (bad) addr16 push imul lcall mov push leave out push in testb mov sbb inc sbb (bad) push lcall and fadd jbe shlb xchg pop mov pop (bad) mov xchg dec xchg dec mov (bad) xchg xchg jge add push clc push mov and mov jno loop jg sbb jp incl dec pop pop loop and in scas fsubrl das mov push inc mov data16 nop adc (bad) or jle lcall push js cs sbb push push mov or mov cmpsl xor dec iret lods cmp (bad) js mov js inc sub cmp mov je adc in fwait sub outsl inc into xchg (bad) mov mov addr16 (bad) pop loop pop add outsb pmulhw pop cmp mov repnz cmp pushf sub (bad) push insb push push fidivl gs imul iret mov inc pop sbb mov out or sbb pop push mov mov lret inc dec mov adc adc ret dec fmulp mov dec pop sub lds xchg scas xchg imul stc rcll xor imul push mov add addl das sahf loope cmovnp fwait dec adc lods enter loopne dec xchg ficompl adc jge insl int3 push cwtl inc cltd loope dec rorl (bad) ucomiss cwtl (bad) sub mov mov adc mull scas push fisubl or or pop cmp repz push push lods jne sub imul mov push push loop jmp out mov mov inc mov ret fiadd push mov scas dec jmp adc in and dec mov push inc (bad) sahf adc ds ja ret (bad) jbe cmp pushf test call aam fsub insb xchg add xchg xchg sub push pop rorb insb pop jne (bad) cmp xor dec negl inc fildll jle flds mov and sub adc loope dec subb sbb xchg jbe or xchg cmpsb or add mov dec in mov imul dec test imul les lea jbe cmp mov lret cld mov fsubrl test repnz fs int sub (bad) in push loopne fwait lret out idivb cmp (bad) movsl imul sub jbe jo mov sbb lret xchg or cli in aaa jo es loop dec sarl mov push or popa mov xchg lcall mov outsb stos xchg mov xor (bad) dec popa sub add sbb (bad) leave insb inc xchg add fstpt fnstenv push mov fiadd xchg jnp xchg or or xchg mov xor sub stc in pop mov aas (bad) lahf mov (bad) iret jmp fs in aaa fs jmp out std fcoml pop lods and les push xchg jns nop in daa lock pop notl divl pop sbb pop and inc adc and pushf js flds mov in ss into les (bad) orl fsubrp and xchg add repz es insl inc lods pop adc dec loopw ret sub jg test sbb mov (bad) and mov sahf pop fisttpll pop adc adc fwait test stos sbb mov cmpsb aaa xor dec and loop push mov lds push dec ds ret xor call jnp add outsl mov push mov out (bad) roll inc leave push inc stc fwait mov xor int3 push mov cmc sub sub dec into jecxz xor in xor sub mov adc add lahf mov repz push dec repz adc pop cs cld arpl insl mov fdivrs push or repz cmpsl aaa in nop dec shll bound lock es and jmp xor (bad) mov fwait lret and pop fldenv lret scas mov cmpsl andl mov arpl and cmc das cld xchg dec mov data16 repnz in cmp jo jecxz add cld ret pop mov mulb call (bad) jb (bad) push test mov jno sbb mov sbb mov mov (bad) fiadd lea aad loop,pn sub subb in inc mov fist cmp (bad) out jne (bad) rcl push shrb cmp test cmp jge push jns fcomps push sbb scas insl jo ret (bad) mov dec lds (bad) push or sub stos mov sar fldt dec mov test sbb add jg sahf lods sbbb leave or js mov mov jecxz and sahf loope mov pusha cmp in (bad) xor (bad) lret fsubs add mov inc ret cltd add or imul cmp bound stos jl adcl incl xor xchg in ja ja nop sbb jp dec cmpb mov cli (bad) out sub push (bad) push sbb lock scas or push std cwtl pusha xchg (bad) mov test mov lahf pop mov dec adcl pop daa arpl ficomp aam insl pop inc decl mov int arpl aam xchg or cmp cmp out jg jle outsb cs rol xchg (bad) aas and cmpsb jge push movsl (bad) mov add push dec fistl jb jae iret xor cmpsb cld mov push inc (bad) or lret cmc and mov adc nop mov mov lret push loopne lods mov or inc lahf leave lock inc in popf xchg testb repnz xor ret in fstpt lahf (bad) xor adc dec outsb andl pop mov cli std jp cmpsb xor mov hlt mov pop jbe sub cmc lret xor push push outsb stc popl or fcmovnb iret sbb (bad) mov inc lock ds (bad) les push xor add int sub or mov rclb repz dec outsl cmc icebp mov xor inc push xchg loopne cmp cmp jg das xchg adc dec adcl roll fsubrl enter repnz jo mov xchg mov xor push int3 cmpsb jp sub movsb testb mov adc arpl mov dec jno ret cltd inc mov andl pop lret stos push mov pop test inc (bad) out movsb push mov xchg lret insb cmp pop cltd andl dec adc push sbb in ret test inc xchg jo arpl dec popa cmp sbb call mov xchg xor mov and mov dec ljmp movsl jae xchg pop add addr16 mov dec stos fisub mov xor mov xchg cmp push cmp test mov mov inc ja cmc dec and addl push out bound add (bad) (bad) out or fcoms cmpsb insb jmp cwtl push ret inc movsb xor mov addr16 ret or mov xor jne xor mov push and fcoml aad adc (bad) enter insb sbb sbbb dec sub and push and (bad) cld out adc decb aad (bad) sbb cmp in arpl xchg aas xor in bound jp xor xor ss dec mov popa jmp iret xor pusha hlt adc jne mov jbe jg pop movsl inc ds (bad) lods sub sub jmp lahf mov sub xchg out and hlt in iret jecxz and iret xor outsl addb xchg sbb arpl hsubps in pop and adc fldcw ja mov mov pusha mov pop and xor jmp mov nop mov xor add mov pop push jae adc mov mov mov adc inc or inc sbb pop cli iret jle test xor push jne scas xchg outsl jle (bad) lock jg lret (bad) sub sbb adc jg and jbe out cmp push add xor pop lods sbb cmpsl inc dec popf arpl aam das lret adc push in div gs test jnp pop sbb testb adc sbb call ja mov pop cmpl mov mov or push neg push lea cmpsl xlat clc into nop stos pop sub mov ficomp inc nop inc lcall or mov dec mov (bad) or add push (bad) sbb je lods mov push test imul push rorb aaa subl ret ljmp enter cmp loope mov cltd mov mov dec sbb icebp les xchg aaa pop mull and pop sbb (bad) or movsl push movsb push mov pop push push ret push notb jnp mov push mov addr16 ret in lods push pop dec sar cwtl fildl stc or repz repnz add cmp lret mov ja pop and inc fcmovu pop xchg mov xchg sub dec push insl nop fsubs roll dec fsub lea leave push sbb cmp cmpsl mov ror xchg jae xor or cs (bad) pop dec sub leave scas paddusb popf lret xor add lods iret jns enter mov mov sahf inc mov dec or xorl sarb std mov add xchg ljmp mov inc fdivrl inc sarl or lcall mov mov sub sbb add mov cmp leave cwtl inc out mov sbb sub into popf movsb mov fdivr popf jnp negl leave mov loope add push push xchg inc jp jnp,pn inc sbb xor ds pop jmp cmp xchg mov cmp cmp scas lret sbb pop mov or movsb imul pop mov push in xor iret call mov hlt xchg jmp and xchg aas ja fidiv xchg sbb les in push fadd stos in mov sub add (bad) cmp leave inc adc mov loop clc lret cmp enter pop sub mov ror fstpt mov out fbstp aad or les addr16 js icebp divb je test lock or dec data16 mov xchg cmp inc cmp (bad) (bad) insb xchg gs adc sub xchg push dec test cmp std xchg mov push (bad) push aad add push popa xchg jmp pushf sti mov stos mov sarb pushf mov add hlt push sub idivl shrl test cs mov jg add into dec out js das adc cmpsb sbb jecxz push insb ss push fwait sub jle cmp imul push mov xchg gs sarb and repz int sub dec xchg rcl fiaddl push (bad) pushf sbb insl outsb sub fistl inc pop xchg repnz add dec lcall push je out movb inc or or push mov fcmovu mov stos adc aad subl imul dec jbe in popa mov mov icebp mov ret mov jo jl cltd push ljmp dec cltd xchg mull mov push fs jns adc cmpsl lds push jl push push dec shlb je je es adc (bad) fdivrl in adc in test mov in cmpsb pop daa cwtl call movsl cld lods test mov xlat fwait into and sbb lock or test xchg push and xchg shrb dec lods rorb or les inc sbb pusha cwtl mov out inc inc lcall fildll sbb dec cld (bad) sbb scas imul dec outsb push cmc aas das les inc push push cmpsl inc sbb mov loope lcall mov lds xlat out and scas pop push fiaddl les mov scas (bad) jbe jnp inc xchg push jne cmp scas xor in fs icebp push das scas push ljmp insl cmp sub (bad) enter push adc lret aaa dec aas xor in adc popf bnd or int3 out jno mov mov jg (bad) jae lock xchg jae aam mov das imull fildll and jae and cmp push mov mov pop lahf jne xchg cli or rcr lods rcl shll cmp test dec ljmp sbb inc test fidivrl mul pop sti out inc xchg push mov lret jmp or pop or int sahf jns pop xchg pop adc xor int mov lret jae pushf jg jp pop mov notb jmp (bad) dec or cmp out pop push test call jp xor xor push out sub jmp int3 stos sub push lods add cmpsl fs push inc fildll sub cmp repz addl push gs mov ret divps aaa fisub xor leave adc or (bad) xlat ss xor repz into add arpl sub je movb cmp loopne pop xchg mov out in out popa mov dec shrb push iret inc adc dec xchg and sarb dec add call jl (bad) jb mov fstl int sahf ss cmp bound aas and rcl push sbb (bad) jno scas push adc rolb pusha js mov cmp enter fstpt loop repz (bad) mov xlat test push enter lods stc cs sub in or movsb popa mov jg out cwtd dec mov push cmp jl and cmp ljmp int mov adc cmp mov xor mov or jle or cmp push dec mov lret ficomp cmpsb push (bad) jge pop sbb sti cmp fiaddl mov xor pop inc sbb pushf pushl lea or (bad) jp insl andb mov scas stos gs push addr16 loopne xor mov pop nop (bad) cmp fistpll xor dec push (bad) jle dec adcl in lret popf stc inc mov mov push cmp inc push push rorb mov mov bound pop fcmove and sbb push xchg mov and mov stos out xchg jmp jecxz mov add sbb and loope sbbl xor loopne xor fldt pop jg rclb aad scas insl ja dec add fsubrs ljmp jle negb sub fldl and pop adc inc aas insl jge cmp sub xchg mov inc jae sbb mov xchg (bad) jp or hlt dec into dec sub xchg es loopew,pn push aam and pusha jecxz je (bad) je je xor (bad) push (bad) movsl ja ret test xchg xchg fistpll dec cwtl dec in ljmp cmp cmpsb stc cltd jmp jns or mov jcxz lods out or js pop push in mov mov enter ljmp xchg pop stc xor icebp repz or out rorl xchg mov call and adc jbe outsw xchg mov aaa sbb ljmp inc push mov mov lea sbb das popa test xor scas out sbb scas sbb mov sahf or sbb dec scas xor jns sbb mov pop dec inc lds inc push neg jnp out rcrb add lret in mov fwait sbb into arpl jno cmpsb loopne movsl stc cmp xchg fwait rclb and push push sub cli js movsb fdivl inc bound jbe ljmp adc jge pop cmpsl xchg je inc xor jns pop addb push mov insl cmp cltd mov inc fild pop sub insl out push popf or mov cmp cmpsl push xchg xlat mov mov and test leave xchg pop stc jae inc arpl jp cmc xchg enter xor out or or jne aaa jp mov push mov popl mov mov (bad) jmp inc lcall jmp jb ret sub pop jle (bad) push mov out cmp mov lret add test shrl mov popa jg daa mov xlat jne,pt or or sub sub imul jo inc pop (bad) call cmp inc out push mov sbb mov jns dec inc cmp dec xor mov mov fwait movsb mov push mov (bad) sbb (bad) in sti std fwait push test outsl int3 push add mov aas pop ljmp mov jb cmp mov insb pusha sub mov mov mov adc leave push cmp xor jae pop cmp pop cmc (bad) sub mov mov je xchg jae xchg test in mov dec or sbb fs push inc jecxz lret aaa and lods ret out cli pop dec cmpsb stos (bad) sbb scas enter imulb int jge out lret pop jl hlt push (bad) adc cli xor movsl popa add rcr mov sub cli (bad) stc cmpl cmp xchg adc sbb mov adc ret aam dec adc ja btc mov (bad) push or push jnp leave inc push pop sbb popf xchg pop rorb or mov lcall cmpsb cs movaps ret fcmovnu push call mov icebp sub das ds push adc dec loop inc int3 lret or mov dec push mov pop pusha mov cmpsb sub divb lock jbe jmp lock hlt push pop testl mov popa add cltd adc ljmp stos mov subb fwait popa xor stc ret sbb (bad) icebp mov aaa mov xchg arpl in stos mov mov and (bad) inc sarb adc jns jo nop pop or mov jg cwtl das (bad) jns mov into ja mov jno fmuls rol loope jns clc pop and xchg rcr jecxz stc pop add push cmp sbb mov mov sub mov push adc mov jp cmp fdivs xor xor adc xor xchg xchg xor inc mov shrb mov push mov push sbb adcl pop call add pop mov mov mov pop cli fnstcw sbb jle or fucom lods stos aaa jp mov jb mov xchg fcomps bound dec jg push jecxz and xchg cltd lret and sbb inc gs addr16 leave cltd mov out inc sub (bad) and lds xchg mov in jp xor mov mov push pop sbb (bad) int cs pop add cwtl int3 and mov out inc nop xlat push mov lcall push (bad) aam fadds popf lahf sahf sub cmp loop xor daa pop outsl mov lahf or mov push xor jne stc pop sub js mov addr16 (bad) dec sbb insb data16 mov mov arpl sbb std test push adc add test fdiv fs fstp std inc aam cmp into pop pop add mov fs sti add (bad) or (bad) cmc out decb cmp lret dec xchg inc leave int jo or mov xchg mov sub or ljmp sbb loopne fist pmullw mov clc dec js jge sbb mov call jge mulb dec mov push ficompl cmpsl nop (bad) mov mov cmc int and push push iret test gs or xchg mov inc sbb orb in push add xlat add insb cltd lock xchg mov or dec inc (bad) leave cmp scas inc jl add pop push pop movsl rcr inc test mov (bad) fisttpll adcl sub enter fiadd dec mov pop push xor push mov mov bound push pop and lcall jne jnp cmovns out xor pop adc mov dec (bad) shlb je fsubl ret dec (bad) incb fildll into jmp xlat mov push jne ret mov mov test jp in (bad) jge add xchg imul and popa xor ret in sbb icebp sub sub outsl fwait dec sbb (bad) mov movsb aas aas out cmp sahf mov cli mov push jb popf lods jno daa ror xlat cwtl lds push sahf dec mov imul add pushf pop ret leave xor add sti mov jo ret test or sub inc clc jno and jg inc pop push mov lcall mov or andb pop xor cwtl aaa stos inc mov out loop roll aam push mov fnsave xchg push jl cwtl cltd orb cmpsb mov fldt test icebp loope and fstpt cld mov scas fstpl lock jl mov inc jg enter clc dec xor xchg xchg (bad) push xor jne pop inc sub mov push aaa pop or push cli xor xchg clc pop in lret mov imul aaa push push pop les pusha andl mov inc imul push cmp lds mov (bad) dec xor aaa mov add or lods cli fstpt or (bad) shrl ds pop pop push (bad) fisubrl inc and lret and xor clc loop lock mov mov repz call dec mov imul add and test or inc imul aam jl jbe mul jp push popf push pop dec outsb out pop (bad) push (bad) adc pop nop cmp or and xchg xor mov pop jno movsl fistp xor out jle xchg sbbl int sbb cli and and mov jno sti clc add lods lea loopne lret leave jbe inc dec int push cmp mov dec or lret stc and push incb pop enter movl xchg ja in or les lods out xor popf rcll xchg mov cmp xchg pushf mov pusha clc sbb orl jmp pop out jno inc jb stos mov mov outsl or sbb movsb daa (bad) sbb xor sahf pop mov ss pusha jecxz mov inc je inc add mov in jno fs cmp pusha js push mov lret xor cli les ret sbb mov fcomps xchg xor xchg iret dec insl xchg outsb push lcall ret movsb jl gs inc outsb sub cwtl pop dec icebp or push out std pop push test mov dec test loope pusha push mov std adc xchg adc push lds adc fidivr lret and dec lret popa push and dec cmpsl mov decb ds jno mov cmp xchg jno pop (bad) adc xor outsb adc shrl push call push jnp pop repz jge mov aaa or adc es dec mov ja push mov mov jmp adc addr16 add cmp add das imul pop repnz fidiv aad inc daa xchg xchg mov cmp lods cmpsl fadds popf (bad) mov icebp setge sbb jns cmp lods mov xlat dec inc sub mov lahf int or aas ljmp loopne jecxz sarb xlat pop mov imul pop enter push jp pop mov sbb push sub (bad) daa lock sarb or daa lock sarb or daa lock sarb or daa lock sar cmp mov add add dec inc dec inc scas inc pusha (bad) or add add inc push dec inc add add add add adc add jbe xor xor or test add or add and add add and jb outsb addr16 add add add and dec inc add add add and outsl bound add rclb add add add inc push dec inc add add push add add add and jb outsb addr16 add add push add add add and outsl bound add call add add push arpl insl popa add add add add push aad jmp add and add add add add sbb add add add add add add add or add add add add add add add add add push add add add add add add add sldt add add add add add add sldt add add add add add add add lahf add add add add add add (bad) jg add add add add add add or call xor push add jnp or scas xor or in xor or xor push add or mov adc scas xor xor xor add or push xor add xor add add xor xor add xor sub cmp add pop xor mov push add imul imul mov push add ss push add ss push add mov push add aaa mov push add or call aaa mov or pop aaa push xor add push xor add mov aaa or jnp push add add aaa or or mov push add cmp add inc cmp add or or or or jnp push add cmp popl cmp add push add add cmp push add cmp add or push add or jb or sarl xor add cmp add in cmp add cmp add mov push add add add add add cmp add fdivrl push add cmp cmp cmp add fdivrl push add add add add add add add add add add add push add add add or add add add add or or adc add add or sbb sbb add add or and and or and add add daa add or add add sub sub xor adc xor add add add add add cmp add adc loopne add or sub add add xor add add add add xor add add add add adc sub add adc xor dec add xor add add add addb add xor add add add adc add jp add add add add add add add add adc sti xor add add insb add add add add add add add add add adc add mov add add adc add xlat xor aas add add add xor aas add adc add adc add add add add add add add add add incl xor and jnp add add and add jmp add dec add add xor and xlat push xor and push rdtsc add add rdtsc add add xor and rcll add add add add add add add add add add add add push jo add mov and and out add add add add sbb pushf add add sbb add add and add mov add and add add xor and add xchg and add add add add daa and add je dec add add sub add insb sub add enter push add xor add add xor add add xor add add xor add add add xor add add xor add add xor adc xchg xor add dec xor add sbb jmp xor dec xor xor add add add xor adc ret xor add add or adc add add add xor adc add add add add push pop add add add add add add add xchg add add add dec and add add add add and add add add add xchg add add pop add add add add pop add add add add sub add add add add pop add add add add sub add add add add pop add add add add add add add add xchg add add add pop add add add add pop add add add add add add add add add add add add add add add sbbl pop daa add add pop add add add add pop add add add add add add add add addl sbb add add pop add add add add xor add add add add pop add add add add pop add add add add add add add xor addl push mov xor sbbl pop daa add add xor addl and add xorb add add add add ss add add add add ss add add add add pop add add add add add add add add add add add add add add add add add add aaa pop add add add add add add add add add add add add add add cmp add add add add pop add add add add cmp add add add add pop add add add add add add add add sbb add add add add add add add add sbb add add add add sbb add add add add add add add addl xor add add add add add xchg sbb add add add pop add add add add pop add add add add add add add add add add pop add add add add xchg sbb add add add cmp adc (bad) xor add add ds add add add xor add add aas pop add add add xor add add inc pop add add add xor inc pop add add add xor add add inc pop add add add xor add add inc pop add add add xor add stos sbb xchg testl cld inc pop add add add add les mov add pop add add add add add add add sbb addl add adc add add add dec pop add add add add pop add add add cs pop add add add mov add add add xor add jl pop add add add xor add add add xor add rorb add adc fdivl jne add mov pop add add add xor dec pop add add add add pop add add add cwtl push pop add add add or pop add add add xor pop add add add xor add mov add add xor push pop add add add add add add xor add adcb add adc dec xor add fs pop add add add fiadd add dec pop pop add add add jmp pop pop add add add testl pop add add add add add dec pop pop add add add inc push pop add add add pop pop pop add add add push push pop add add add or add add add insl push pop add add add jl pop add add add inc pop pop add add add xor add mov pop add add add or pop add add add les add add add cltd push pop add add add test pop add add add mov pop add add add add pop pop add add add nop fs add add add xor add jl pop add add add xor add mov pop add add add xor pushf addr16 add add add xor shrb add adc inc xor shrb add add add jle add mov pop add add add mov add test pop add add add xchg add ficomp pop add add add in push pop add add add add add ret add add xor add add xor add add pop repz add pop fwait add add pop daa add add pop daa add add pop cmp jmp add add pop fwait add add pop daa add add pop sbb add testl jmp add aaa dec add add pop dec add add aaa push add sbb jno popa add nop add pop cmp cmp cmp cmp cmp cmp pop daa add ret add add cmp and testl mov add add pop mov add pop daa add add add testl testl push cmp cmp add add cmp add add rolb add fwait add add fwait add add add add add add add add add stos cmp test add jge mov testl cli cmp sbb jno and xchg add ja jno dec cmp cmp add add mov jno movsb cmp cmp add rolb daa add add cmp add add sbb sub daa add add cmp push jno aas cmp xor inc cmp push sbb push cmp add add jae cmp mov testl test or cmp testl testl testl sub push jno xor out cltd add add cmp inc cmp push roll push cmp push stc add add add sarl and fidivrl add add pop add add add add add add add add lods add add add add add add add add add add add add add push add add add or cld add jg jg jg add sti push add add add add add add add add add add add into add sbb add in add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add jo mov fadds inc push arpl push push or adc add add xor add add xor add ret xor add add xor add data16 add add add add add add add or add outsb add add add sbb mov add add movsb stc stc (bad) dec je mov inc hlt pop sbb jecxz lret push rcrb adc lea mov fldl or cmp dec sub mov xchg cli pop or mov mov cmp cwtl and (bad) pop std mov push mov sahf mov and adc sbb inc (bad) das insl out movb xor xor dec pop pop and in lret add sbb pop clc (bad) mov add das add add (bad) jg add add add add add add add add add add add add add add sbb or add add addl add add add add add mov add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add add add add add add add add add add add add add add add add movb add add adc sub or dec push cmpsb add mov pop push adc dec push or dec push call add push add add push mov rolb add push ret push repnz push push add pop add or or add add add sbb or add add add adc cmp adc mov adc adc adc lea adc lea adc add pop add add add add add add add sbb sbb sbb add pop add and jge and cmp and lea and lea and jge and add add add add insb gs outsb popa jb cs add gs orb stos loop stos loop lods loop lods loop lods loop scas loop lods loop scas loop lods loop mov subb loop scas loop scas loop (bad) loop lods loop mov orb mov subb mov orb scas loop scas loop scas loop scas loop stos loop scas loop mov subb scas loop mov orb subl mov orb scas loop mov orb stos loop (bad) loop scas loop stos loop stos loop mov subb mov subl (bad) loop stos loop (bad) loop lods loop lods loop scas loop stos loop lods loop stos loop (bad) loop mov orb stos loop stos loop lods loop lods loop scas loop scas add arpl outsl jb loop (bad) loop mov orb mov subl loop lods loop (bad) loop lods loop (bad) loop scas loop lods loop lods loop mov orb loop mov orb loop lods loop lods loop lods loop scas loop lods loop mov orb loop scas loop scas loop lods loop stos loop mov orb scas add subl mov orb mov subb lods loop scas loop mov subl stos loop mov subl stos loop (bad) loop stos loop lods loop lods loop scas loop stos loop mov orb scas loop stos loop mov orb mov orb scas loop (bad) loop scas add subb scas loop mov subl stos loop mov subb scas loop lods loop stos loop lods loop stos loop scas loop mov subl lods loop scas loop (bad) loop scas loop stos loop lods loop lods loop lods loop scas loop stos loop scas loop stos loop mov subb lods loop lods loop lods loop scas loop scas add loop lods loop lods loop stos loop stos loop (bad) loop scas loop (bad) loop lods loop lods loop scas loop mov orb lods loop lods loop (bad) loop mov subb stos loop scas loop lods loop stos loop stos loop scas loop stos loop mov subb scas loop (bad) loop lods loop stos loop scas loop mov subb scas loop (bad) loop scas add subb mov orb (bad) loop (bad) loop stos loop stos loop mov orb stos loop mov subb lods loop mov subb lods loop lods loop lods loop mov subb scas loop (bad) loop (bad) loop lods loop mov subb lods loop mov subb loop scas loop scas add subb stos loop mov subl stos loop lods loop lods loop stos loop scas loop lods loop lods loop lods loop lods loop stos loop mov subl scas loop mov subb (bad) loop lods loop (bad) loop lods loop (bad) loop stos loop lods loop lods loop mov subl lods loop mov orb orb loop stos loop stos loop scas loop scas loop lods loop stos loop mov orb loop scas loop lods loop scas loop mov orb scas loop stos loop (bad) loop stos loop scas loop scas loop lods loop stos loop mov subl loop scas loop stos loop (bad) loop stos loop stos loop lods loop stos loop scas loop scas add subb lods loop stos loop stos loop lods loop mov subl lods loop mov subl mov orb (bad) loop stos loop stos loop mov subl stos loop scas loop stos loop lods loop lods loop (bad) loop mov subb stos loop mov subb stos loop stos loop scas add arpl insb imul gs jns add jae gs add subb scas loop (bad) loop scas loop stos loop lods loop scas loop mov subl stos loop scas loop lods loop (bad) loop (bad) loop (bad) loop stos loop lods loop mov subl stos loop stos loop stos loop stos loop mov subl stos loop mov subl (bad) loop stos loop stos loop scas add subl (bad) loop (bad) loop scas loop lods loop lods loop mov orb scas loop (bad) loop scas loop mov subl loop stos loop scas loop scas loop lods loop mov orb (bad) loop scas loop scas loop stos loop mov subl stos loop scas loop scas loop (bad) loop lods loop scas loop scas add subb lods loop mov subl stos loop (bad) loop lods loop mov orb scas loop mov subb mov subb loop mov subl scas loop (bad) loop scas loop mov subl lods loop mov subl mov subb scas add orb lods loop lods loop (bad) loop stos loop lods loop lods loop mov orb loop mov subl mov subb lods loop stos loop stos loop lods loop lods loop stos loop mov orb stos loop stos loop (bad) loop lods loop stos loop lods loop mov orb scas loop stos loop lods loop scas add subb mov subl mov orb scas loop stos loop stos loop scas loop lods loop scas loop mov subl mov subb mov orb (bad) loop lods loop mov subl scas loop (bad) loop lods loop (bad) loop scas loop scas loop (bad) loop lods loop scas loop scas add subb loop scas loop stos loop scas loop scas loop mov subb scas loop mov orb scas loop lods loop mov subl scas loop scas loop (bad) loop stos loop mov subl lods loop scas loop lods loop lods loop mov orb mov orb stos loop stos loop scas add arpl add subb mov subl stos loop lods loop lods loop stos loop lods loop scas loop (bad) loop (bad) loop mov subl stos loop lods loop mov subl lods loop lods loop mov subl mov orb scas loop stos loop stos loop stos loop scas loop scas loop scas loop scas add subb lods loop scas loop (bad) loop mov subl scas loop lods loop scas loop stos loop scas loop stos loop lods loop stos loop lods loop lods loop lods loop mov subl stos loop lods loop stos loop lods loop scas loop lods loop scas loop stos loop lods loop scas loop stos loop (bad) loop scas loop lods loop scas loop lods loop scas add subl mov orb scas loop scas loop stos loop stos loop lods loop lods loop lods loop scas loop (bad) loop (bad) loop stos loop stos loop mov subb lods loop lods loop stos loop stos loop lods loop lods loop (bad) loop stos loop scas loop stos loop lods loop stos loop lods loop stos loop lods loop lods loop scas loop scas loop scas add subl mov subb loop stos loop mov subl lods loop lods loop scas loop (bad) loop stos loop (bad) loop stos loop lods loop stos loop stos loop lods loop lods loop stos loop stos loop lods loop (bad) loop stos loop stos loop scas loop lods loop stos loop stos loop mov orb mov subb scas add subb scas loop mov orb mov subb loop stos loop stos loop lods loop stos loop mov orb loop mov orb stos loop stos loop mov orb lods loop stos loop lods loop (bad) loop mov subb mov orb lods loop lods loop lods loop stos loop scas add push arpl subl lods loop scas loop stos loop scas loop scas loop mov subl lods loop stos loop lods loop scas loop lods loop lods loop stos loop (bad) loop stos loop stos loop mov subl lods loop scas loop (bad) loop stos loop mov subl mov subl loop lods loop scas add subb lods loop (bad) loop lods loop stos loop stos loop lods loop (bad) loop lods loop mov subl scas loop (bad) loop stos loop mov subl scas loop mov subb lods loop lods loop scas loop mov orb loop mov subl lods loop mov subb scas add subl lods loop (bad) loop stos loop scas loop lods loop scas loop mov subl (bad) loop lods loop lods loop lods loop scas loop lods loop mov orb scas loop stos loop (bad) loop lods loop scas loop stos loop mov subl loop stos loop stos loop lods loop lods loop scas loop lods loop lods loop scas add jb popa insl add jae gs cs dec add subl lods loop scas loop stos loop (bad) loop stos loop scas loop mov subb stos loop scas loop stos loop lods loop (bad) loop mov subl scas loop scas loop (bad) loop stos loop mov orb lods loop stos loop scas loop lods loop stos loop scas loop stos loop stos loop stos loop mov subb add orb scas loop mov subl scas loop lods loop stos loop stos loop stos loop (bad) loop stos loop lods loop lods loop lods loop scas loop stos loop (bad) loop mov subb scas loop mov subl scas loop stos loop stos loop scas loop stos loop mov subl scas loop scas loop lods loop scas add subb lods loop stos loop mov orb lods loop scas loop mov subb stos loop scas loop stos loop scas loop scas loop scas loop mov subl stos loop lods loop scas loop scas loop scas loop scas loop scas loop stos loop stos loop scas loop mov orb mov subb mov subl subl lods loop stos loop lods loop lods loop lods loop lods loop stos loop lods loop stos loop scas loop mov subl mov subl (bad) loop stos loop stos loop scas loop scas loop (bad) loop scas loop lods loop mov orb mov subl mov subl subl loop stos loop mov subb scas loop lods loop lods loop stos loop lods loop stos loop lods loop (bad) loop lods loop stos loop (bad) loop lods loop lods loop stos loop lods loop stos loop lods loop scas loop (bad) loop stos loop lods loop lods loop mov subb (bad) loop lods loop (bad) loop mov subb mov subb subl stos loop (bad) loop stos loop mov subb (bad) loop mov orb scas loop lods loop stos loop stos loop lods loop lods loop lods loop lods loop stos loop lods loop mov subb stos loop scas loop mov subl scas loop lods loop scas loop stos loop (bad) loop stos loop scas add subl stos loop (bad) loop lods loop stos loop scas loop scas loop scas loop lods loop stos loop (bad) loop stos loop mov orb stos loop scas loop stos loop (bad) loop scas loop mov subb lods loop mov subb lods loop mov orb loop lods loop (bad) loop (bad) loop lods loop lods loop scas add subb mov subb lods loop scas loop lods loop lods loop stos loop lods loop lods loop scas loop scas loop mov subb stos loop lods loop mov subl lods loop stos loop (bad) loop lods loop mov subl loop stos loop lods loop scas loop mov subb scas loop scas add orb loop lods loop mov orb stos loop (bad) loop lods loop stos loop stos loop scas loop stos loop mov subl lods loop mov orb mov orb stos loop mov subl loop lods loop scas loop lods loop scas loop lods loop lods loop (bad) loop stos loop stos loop scas add subb scas loop lods loop lods loop scas loop stos loop mov orb lods loop lods loop lods loop mov subb mov subl loop (bad) loop mov orb stos loop lods loop lods loop mov orb lods loop stos loop mov subb loop stos loop stos loop stos loop scas add orb lods loop stos loop stos loop lods loop lods loop lods loop scas loop mov subl loop mov subl stos loop stos loop lods loop scas loop lods loop lods loop stos loop stos loop stos loop (bad) loop scas loop lods loop (bad) loop (bad) loop scas loop stos loop mov subl lods loop mov subb subl mov subb mov subb lods loop lods loop mov orb mov subl stos loop lods loop stos loop scas loop lods loop scas loop stos loop stos loop scas loop scas loop (bad) loop (bad) loop scas loop stos loop (bad) loop lods loop stos loop stos loop stos loop scas loop mov subb orb stos loop lods loop stos loop (bad) loop (bad) loop lods loop stos loop lods loop scas loop lods loop lods loop mov orb lods loop (bad) loop scas loop scas loop lods loop scas loop lods loop scas loop stos loop mov subb mov orb lods loop lods loop mov orb scas loop scas loop stos loop scas add orb (bad) loop stos loop stos loop mov subl mov subb (bad) loop scas loop scas loop lods loop scas loop scas loop stos loop stos loop stos loop stos loop (bad) loop lods loop stos loop lods loop scas loop lods loop scas loop stos loop lods loop stos loop mov subl mov subl scas add orb (bad) loop lods loop mov subl mov orb lods loop lods loop mov subb scas loop stos loop stos loop lods loop stos loop lods loop stos loop (bad) loop stos loop lods loop scas loop mov subl lods loop lods loop scas loop stos loop mov subl lods loop scas add orb mov subl loop mov subl mov subb scas loop (bad) loop scas loop (bad) loop mov subb stos loop lods loop scas loop stos loop lods loop mov orb stos loop (bad) loop lods loop stos loop mov orb scas loop lods loop stos loop stos loop scas add subl (bad) loop stos loop stos loop mov subl stos loop mov subb lods loop scas loop stos loop stos loop scas loop stos loop stos loop scas loop (bad) loop stos loop scas loop stos loop lods loop scas loop stos loop (bad) loop mov subb loop (bad) loop mov subb scas loop scas loop scas add subl scas loop lods loop scas loop stos loop mov subl lods loop (bad) loop stos loop scas loop stos loop lods loop scas loop stos loop stos loop mov subb scas loop stos loop lods loop scas loop mov subb lods loop scas loop lods loop scas loop stos loop lods loop scas loop stos loop stos loop lods loop scas add subl scas loop scas loop mov subl stos loop (bad) loop scas loop mov subl stos loop (bad) loop stos loop scas loop lods loop (bad) loop mov orb scas loop stos loop lods loop lods loop stos loop lods loop scas loop (bad) loop lods loop lods loop (bad) loop scas loop scas loop mov subl subb (bad) loop (bad) loop lods loop lods loop mov subl loop lods loop scas loop mov orb (bad) loop scas loop mov orb scas loop stos loop lods loop scas loop stos loop mov subb (bad) loop stos loop (bad) loop scas loop stos loop stos loop scas loop mov orb add subl lods loop stos loop mov subb lods loop stos loop lods loop (bad) loop lods loop lods loop stos loop lods loop lods loop mov subb loop mov subb lods loop lods loop scas loop mov subl scas loop lods loop stos loop lods loop lods loop stos loop lods loop scas loop scas add orb stos loop (bad) loop lods loop lods loop (bad) loop lods loop lods loop lods loop (bad) loop lods loop scas loop (bad) loop scas loop mov subb mov orb stos loop scas loop mov subl stos loop scas loop mov subb lods loop lods loop lods loop mov subl lods loop scas add subb lods loop mov subl mov orb lods loop lods loop stos loop lods loop stos loop lods loop mov subl lods loop stos loop mov subb mov orb mov orb (bad) loop scas loop stos loop lods loop lods loop mov subl scas add orb mov subb lods loop lods loop scas loop (bad) loop scas loop scas loop (bad) loop lods loop stos loop stos loop stos loop lods loop stos loop mov subb stos loop mov subb mov subl lods loop lods loop scas loop mov subb scas loop stos loop stos loop mov subl subb lods loop mov subl scas loop mov subl lods loop stos loop stos loop scas loop lods loop mov subl lods loop scas loop lods loop stos loop stos loop mov subl stos loop stos loop stos loop (bad) loop scas loop mov orb scas loop scas add orb stos loop mov orb stos loop stos loop stos loop (bad) loop mov subl stos loop stos loop mov subl lods loop scas loop lods loop mov subb stos loop lods loop scas loop stos loop (bad) loop lods loop scas loop scas loop lods loop (bad) loop mov subb stos loop scas add subl scas loop scas loop stos loop lods loop stos loop lods loop scas loop lods loop lods loop scas loop mov orb stos loop mov orb stos loop lods loop stos loop (bad) loop scas loop mov subl lods loop stos loop mov orb stos loop stos loop (bad) loop lods loop scas loop stos loop scas add orb stos loop stos loop lods loop scas loop lods loop scas loop (bad) loop stos loop scas loop mov orb lods loop stos loop scas loop mov subb mov subb lods loop mov subb scas loop lods loop stos loop mov subl mov subl mov orb subb loop lods loop (bad) loop scas loop stos loop stos loop mov subb lods loop stos loop stos loop (bad) loop mov subl stos loop mov subb stos loop stos loop mov subb mov subl stos loop lods loop scas loop (bad) loop (bad) loop stos loop stos loop scas add orb (bad) loop stos loop scas loop scas loop lods loop lods loop mov subl lods loop lods loop (bad) loop scas loop lods loop mov subl stos loop scas loop mov subl lods loop mov subl mov subl stos loop lods loop lods loop mov subb orb stos loop mov orb mov orb mov subb stos loop stos loop mov orb mov orb mov subl stos loop (bad) loop mov orb loop mov subl scas loop stos loop mov subl subb stos loop lods loop lods loop scas loop mov orb loop mov subl loop lods loop scas loop lods loop lods loop scas loop scas loop scas loop stos loop (bad) loop mov orb loop scas loop lods loop scas loop scas loop mov subl stos loop mov subl orb (bad) loop stos loop lods loop stos loop scas loop lods loop lods loop stos loop scas loop lods loop scas loop scas loop lods loop (bad) loop mov subl stos loop mov orb lods loop stos loop scas loop scas loop stos loop stos loop scas loop lods loop stos loop mov orb lods loop (bad) loop scas loop scas loop scas add subl (bad) loop lods loop scas loop scas loop mov subl lods loop stos loop stos loop scas loop (bad) loop stos loop stos loop lods loop mov subb loop stos loop scas loop stos loop scas loop mov subl stos loop (bad) loop mov subb stos loop stos loop (bad) loop stos loop scas add subl (bad) loop stos loop stos loop stos loop stos loop lods loop scas loop stos loop stos loop lods loop lods loop scas loop scas loop stos loop lods loop mov subb loop (bad) loop (bad) loop mov subb mov subl scas loop mov orb mov subl (bad) loop scas add subb loop mov subl scas loop scas loop lods loop lods loop lods loop lods loop lods loop scas loop stos loop lods loop stos loop scas loop (bad) loop (bad) loop (bad) loop scas loop stos loop scas loop lods loop lods loop stos loop (bad) loop scas loop scas loop lods loop mov orb scas loop lods loop scas loop lods loop (bad) loop scas add subb (bad) loop mov orb stos loop lods loop lods loop stos loop scas loop stos loop lods loop (bad) loop stos loop mov subl stos loop stos loop mov subb loop (bad) loop lods loop lods loop mov subl scas loop stos loop scas loop lods loop scas loop (bad) loop lods loop scas add orb (bad) loop (bad) loop stos loop lods loop scas loop lods loop scas loop stos loop lods loop lods loop stos loop mov subl scas loop lods loop mov subb stos loop lods loop stos loop lods loop lods loop lods loop stos loop (bad) loop stos loop (bad) loop mov orb stos loop scas loop scas loop lods loop mov subb subl loop stos loop stos loop lods loop mov orb lods loop scas loop mov subl lods loop mov orb loop scas loop stos loop stos loop lods loop stos loop mov subb lods loop mov subl loop (bad) loop scas loop (bad) loop lods loop scas add orb stos loop lods loop scas loop scas loop (bad) loop stos loop scas loop mov orb loop mov orb loop lods loop mov subl mov subb mov orb stos loop lods loop mov orb (bad) loop (bad) loop lods loop scas loop lods loop stos loop (bad) loop scas add orb (bad) loop lods loop lods loop stos loop stos loop lods loop stos loop stos loop lods loop stos loop lods loop mov orb loop scas loop (bad) loop scas loop stos loop lods loop (bad) loop stos loop lods loop stos loop stos loop stos loop lods loop mov orb mov subb scas loop stos loop stos loop stos loop lods loop scas add orb mov orb mov subl lods loop lods loop scas loop scas loop scas loop mov subb stos loop lods loop lods loop mov subl loop mov subl stos loop mov subl scas loop stos loop mov subl add subl loop (bad) loop lods loop scas loop lods loop scas loop mov orb loop stos loop scas loop scas loop scas loop (bad) loop stos loop lods loop (bad) loop scas loop scas loop lods loop (bad) loop mov subl lods loop stos loop stos loop scas loop lods loop mov orb mov subb scas add orb loop mov subl mov subb stos loop stos loop (bad) loop lods loop lods loop stos loop stos loop stos loop lods loop scas loop stos loop scas loop lods loop mov orb stos loop lods loop stos loop stos loop stos loop scas loop mov subb lods loop stos loop scas loop stos loop scas loop scas add orb lods loop lods loop stos loop lods loop mov subl loop lods loop mov subb lods loop stos loop lods loop lods loop scas loop lods loop (bad) loop lods loop mov subl mov orb mov subb (bad) loop stos loop mov subb scas loop (bad) loop scas add subl (bad) loop (bad) loop (bad) loop mov subl mov subb stos loop mov subb lods loop (bad) loop scas loop stos loop mov subb loop lods loop lods loop stos loop stos loop mov subl (bad) loop lods loop lods loop lods loop lods loop lods loop scas loop scas add orb lods loop lods loop mov subb lods loop stos loop lods loop mov subl (bad) loop scas loop scas loop stos loop stos loop stos loop stos loop (bad) loop lods loop mov subb stos loop mov subb scas loop mov subl loop scas loop (bad) loop lods loop stos loop scas add orb loop stos loop stos loop mov subb lods loop stos loop stos loop stos loop stos loop stos loop mov subl lods loop stos loop lods loop lods loop stos loop scas loop lods loop mov orb lods loop lods loop scas loop lods loop lods loop (bad) loop scas loop stos loop scas loop stos loop lods loop stos loop scas add orb scas loop scas loop (bad) loop mov subb (bad) loop (bad) loop lods loop stos loop lods loop scas loop mov orb mov subl loop (bad) loop stos loop lods loop lods loop mov subl (bad) loop stos loop mov subl mov subl scas add orb loop mov subb mov subb scas loop (bad) loop (bad) loop (bad) loop lods loop stos loop stos loop mov subb loop scas loop stos loop scas loop scas loop lods loop lods loop mov orb loop (bad) loop scas loop (bad) loop lods loop stos loop scas loop mov orb stos loop scas add orb stos loop lods loop lods loop (bad) loop lods loop stos loop scas loop stos loop stos loop scas loop stos loop lods loop (bad) loop lods loop scas loop lods loop mov subb lods loop (bad) loop mov subl stos loop lods loop lods loop stos loop lods loop scas loop lods loop scas loop mov subl mov subb subb loop lods loop lods loop scas loop mov orb mov orb loop lods loop stos loop lods loop stos loop scas loop lods loop stos loop mov subl mov subl stos loop stos loop mov subl (bad) loop stos loop (bad) loop (bad) loop scas loop scas add subb lods loop (bad) loop lods loop stos loop mov subl (bad) loop scas loop mov subb stos loop stos loop lods loop stos loop stos loop stos loop scas loop stos loop scas loop lods loop mov subb lods loop lods loop stos loop lods loop mov subl lods loop mov subb scas add subb lods loop lods loop (bad) loop stos loop lods loop lods loop mov subb stos loop stos loop scas loop stos loop lods loop lods loop scas loop scas loop mov subl stos loop (bad) loop lods loop scas loop lods loop stos loop mov subl lods loop lods loop scas loop scas loop mov subl subb stos loop stos loop scas loop mov subb stos loop stos loop mov subl loop lods loop stos loop stos loop stos loop (bad) loop lods loop (bad) loop scas loop lods loop stos loop (bad) loop lods loop lods loop lods loop stos loop scas loop mov subl mov subl (bad) loop scas add subb mov subb lods loop mov subl mov subl scas loop lods loop stos loop (bad) loop scas loop stos loop mov subl stos loop (bad) loop scas loop scas loop lods loop scas loop (bad) loop lods loop mov subl loop stos loop scas loop stos loop scas add subl lods loop stos loop mov orb loop mov subl (bad) loop (bad) loop mov subb scas loop lods loop lods loop scas loop stos loop mov subb stos loop lods loop lods loop mov orb lods loop mov orb mov subl scas add subl stos loop (bad) loop mov subl mov subb stos loop lods loop lods loop lods loop stos loop scas loop lods loop lods loop mov subb loop scas loop mov subb loop lods loop lods loop stos loop (bad) loop scas loop stos loop mov subb lods loop stos loop scas add subl loop (bad) loop mov orb scas loop stos loop scas loop scas loop lods loop lods loop lods loop lods loop stos loop lods loop lods loop mov subb (bad) loop (bad) loop mov subl scas loop lods loop stos loop lods loop stos loop lods loop lods loop (bad) loop lods loop stos loop lods loop stos loop scas add subb mov subb (bad) loop lods loop (bad) loop (bad) loop lods loop scas loop stos loop lods loop (bad) loop (bad) loop lods loop stos loop stos loop stos loop scas loop mov orb mov subb lods loop lods loop scas loop lods loop lods loop stos loop (bad) loop mov orb scas loop lods loop stos loop mov subb subl mov subl loop (bad) loop lods loop lods loop scas loop (bad) loop (bad) loop (bad) loop lods loop lods loop stos loop stos loop lods loop lods loop lods loop lods loop lods loop mov subl lods loop scas loop (bad) loop stos loop scas loop scas loop stos loop scas loop stos loop (bad) loop (bad) loop scas add orb (bad) loop lods loop stos loop lods loop scas loop lods loop (bad) loop mov orb (bad) loop (bad) loop stos loop lods loop scas loop lods loop lods loop lods loop scas loop mov orb stos loop lods loop scas loop lods loop lods loop (bad) loop scas loop scas loop stos loop lods loop scas loop stos loop scas loop mov subb scas add subb stos loop lods loop stos loop (bad) loop scas loop lods loop lods loop stos loop scas loop lods loop (bad) loop scas loop stos loop (bad) loop (bad) loop lods loop (bad) loop stos loop lods loop (bad) loop (bad) loop (bad) loop lods loop (bad) loop lods loop (bad) loop lods loop scas loop mov orb mov subl mov subl subb loop stos loop stos loop scas loop stos loop stos loop lods loop stos loop lods loop lods loop lods loop lods loop scas loop scas loop lods loop lods loop mov orb lods loop (bad) loop stos loop stos loop scas loop lods loop scas loop scas loop (bad) loop mov subb lods loop mov orb lods loop stos loop stos loop scas add subl lods loop stos loop lods loop lods loop stos loop (bad) loop scas loop lods loop scas loop lods loop mov subl loop mov subb lods loop lods loop stos loop mov subl (bad) loop mov subl lods loop scas loop mov subl scas loop scas add subb scas loop mov orb lods loop lods loop stos loop mov orb lods loop stos loop (bad) loop stos loop mov orb stos loop scas loop mov subl scas loop scas loop lods loop mov subb lods loop (bad) loop lods loop mov orb loop scas loop lods loop scas add subl stos loop mov subb loop stos loop mov orb stos loop mov subl (bad) loop mov subb mov subl stos loop (bad) loop (bad) loop scas loop scas loop (bad) loop mov orb scas loop scas loop mov subl scas add subb mov subl mov orb lods loop (bad) loop (bad) loop (bad) loop lods loop lods loop lods loop scas loop mov orb loop scas loop lods loop mov subb stos loop scas loop (bad) loop (bad) loop (bad) loop scas loop stos loop scas loop (bad) loop scas loop lods loop stos loop stos loop stos loop scas add subb scas loop stos loop lods loop mov subb loop lods loop stos loop lods loop mov subb stos loop stos loop stos loop stos loop mov subb lods loop lods loop lods loop stos loop mov subl stos loop lods loop stos loop mov subl scas loop lods loop stos loop scas add orb loop lods loop stos loop stos loop mov subl lods loop (bad) loop lods loop mov orb mov orb scas loop stos loop lods loop stos loop lods loop scas loop stos loop scas loop stos loop lods loop stos loop (bad) loop lods loop (bad) loop lods loop mov orb (bad) loop (bad) loop (bad) loop scas add subl stos loop (bad) loop scas loop lods loop lods loop scas loop scas loop (bad) loop mov subl stos loop scas loop mov orb lods loop (bad) loop lods loop lods loop mov subl stos loop mov subb stos loop scas loop (bad) loop lods loop scas loop lods loop lods loop stos loop scas add subb lods loop mov orb loop mov orb loop lods loop lods loop stos loop lods loop stos loop (bad) loop stos loop scas loop stos loop stos loop mov orb scas loop stos loop stos loop stos loop mov subb scas loop (bad) loop lods loop stos loop stos loop lods loop stos loop stos loop scas loop scas add subb scas loop (bad) loop (bad) loop mov subb scas loop lods loop scas loop lods loop scas loop lods loop stos loop scas loop stos loop lods loop mov subb loop mov subb (bad) loop (bad) loop mov orb lods loop scas loop lods loop scas loop mov orb (bad) loop lods loop lods loop scas add subb lods loop (bad) loop scas loop (bad) loop (bad) loop lods loop mov orb stos loop lods loop lods loop lods loop scas loop lods loop stos loop stos loop lods loop mov orb stos loop mov subl (bad) loop lods loop scas loop mov orb scas loop lods loop mov subb lods loop scas add orb lods loop scas loop mov orb lods loop (bad) loop lods loop mov subb stos loop mov orb lods loop lods loop stos loop scas loop lods loop scas loop scas loop scas loop mov orb lods loop lods loop scas loop stos loop stos loop scas loop stos loop lods loop stos loop (bad) loop mov subb subb scas loop mov subl stos loop stos loop stos loop lods loop lods loop scas loop scas loop mov subl stos loop stos loop scas loop scas loop lods loop mov subl lods loop (bad) loop lods loop scas loop stos loop lods loop stos loop stos loop mov orb mov orb mov orb loop lods loop mov orb lods loop stos loop scas loop mov subb loop lods loop stos loop stos loop mov orb loop scas loop mov orb stos loop (bad) loop lods loop mov orb lods loop scas loop stos loop lods loop scas loop lods loop scas loop scas add subb stos loop lods loop lods loop lods loop (bad) loop scas loop scas loop lods loop mov subb loop lods loop stos loop stos loop stos loop mov subl scas loop lods loop scas loop (bad) loop stos loop mov subl mov orb lods loop scas loop mov orb scas loop scas add dec dec popa insb jbe dec dec inc popa jp push push js push insl push push dec push dec gs add gs jb push fs jae inc push dec inc push jns dec push inc fs push insl dec add inc push inc push je pop addr16 inc push dec push insl jp je push insl popa push dec outsb data16 inc jne push gs dec bound jbe insb dec inc imul add push push bound dec jae inc inc popa jno dec popa outsb bound insl push push push imul fs arpl jb inc pop inc je inc inc add jae gs cs imul inc outsl jb jae inc outsl jb add outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add jne push je inc inc inc pop insl fs jns push arpl jno jbe js add arpl gs outsl js inc imul imul addr16 (bad) mov loope movsl add and add and add (bad) movsb add (bad) mov loope test loope mov je jb inc outsl js imul add (bad) mov add addr16 pop dec inc inc inc je js dec push push push inc ja push inc push outsb add gs jb push jns push insb pop jne dec je gs popa push outsb pop dec inc jns imul jbe push jns insl inc inc push push dec push push jb pop js pop insb pop inc inc add jb inc insb outsl jae outsb addr16 jbe outsb je jb jae inc jbe outsb je jb jae inc jae gs bound push jns je insl cs gs arpl outsb add jae gs cs jb ja outsb add jp inc add (bad) mov push imul jbe dec push addr16 dec jbe pop dec inc inc dec insb push inc push dec jne push push push add jno inc gs fs push dec jne dec inc push gs outsl addr16 dec inc add jb jns insb dec dec pop inc inc inc jb addr16 dec dec inc arpl je push push pop dec inc push jno loope lods add jo outsl insl popa imul (bad) movsl add imul insb gs (bad) mov (bad) mov and xor loope mov (bad) mov loope mov loope mov loope mov (bad) movsb add (bad) mov (bad) test inc jne outsl push arpl gs outsl fs outsl arpl dec dec inc inc bound push push popa insb push push inc arpl push jbe add jns ja ja outsl ja dec push pop push imul arpl bound add jae jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add (bad) mov ja js inc bound dec jno push dec gs dec bound inc inc gs push inc fs add jae insb jbe inc jbe outsb je jb jae push jns gs (bad) movsb loope mov loope movsb add imul loope mov loope mov inc jbe fs arpl push jns je insl cs arpl imul arpl loope movsb loope lods add (bad) movsb loope mov push inc outsl dec jns push fs push inc push pop inc jns inc dec outsl jno gs imul push dec inc push jo je push inc dec inc push inc je imul dec insb jp add inc addr16 push insb dec jne jo jno push bound arpl dec inc push inc add inc outsl dec inc push jo jbe inc jb dec pushw push popa insb push dec add inc jns fs push ja jns inc dec push push inc imul dec inc push inc dec push add outsl inc insb dec dec insb imul imul arpl addr16 imul insb gs outsb popa jb add jae insl bound imul outsl outsb inc je jb bound add insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul imul jne add outsb je insl gs outsl insl jo je bound imul bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul jo jb jae dec insb fs jae inc je jb bound add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae insl bound imul imul jae gs bound gs jb jo imul imul je imul outsl jb push je gs insl add je outsl fs popa jae add outsb je imul je outsl insb add outsb je outsl insb add popa add inc push push inc je jb bound add imul jae bound je jb bound add imul jae bound je je add cmp cmp sub sub gs jne arpl jb,pn jae jne arpl add je add popa add popa fs jns add je dec outsb addr16 add outsb je xor push jne je insl gs gs jo jb add imul inc jb popa jns push jne je insl gs imul fs add arpl imul je insl cs gs add je push push inc cmp inc gs je imul gs add data16 inc insb outsl arpl outsl jo add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je insb gs outsb je jns add gs je dec outsb jae popa outsb arpl dec popa je add js push jb je add imul insb add insl jo outsb outsb je gs jne arpl popa outsb popa addr16 dec push jne jo jb dec outsb imul add imul jae je inc jne outsl push arpl gs outsl fs je inc insb imul add je inc outsl outsb je outsl insb jae inc outsl outsb je outsl insb inc outsl insb insb arpl outsb add add je dec popa insl add je push gs add fs outsb imul gs popa jns jne add je bound arpl outsl inc jb popa jns jae je push imul add je push popa bound outsl jo dec outsb jbe imul gs inc outsb je jns outsl imul push outsw add jb inc insb outsl jae outsb addr16 jbe outsb je popa outsb fs gs popa fs inc outsl jb inc insb outsl jae outsb add outsb je popa outsb fs gs popa fs dec outsl popa add outsb imul je insl cs push imul gs addr16 inc jne jb outsb je outsl insl popa imul insb jbe inc jbe outsb je popa outsb fs gs popa fs push gs jne arpl gs insb jbe add imul outsb arpl popa arpl jns push jns je insl cs arpl imul inc jae gs bound inc gs js arpl imul insl bound dec outsl popa add je inc jne outsl push arpl gs imul outsb jae inc jo insb imul add outsb add outsl insl jo jb bound xor dec push gs popa insb imul push jns je insl cs jne je insl gs gs popa insb imul add jb outsb addr16 jne insb fs inc jo outsb add je imul jo outsb fs popa jns jne add je inc outsl arpl push gs popa je add je dec insl popa add je push imul jae outsl insl inc je jb bound gs jb jbe fs jae je push popa bound fs inc push outsb popa bound imul jns gs pop inc jae gs bound dec inc outsl outsb jbe jb imul jb push push gs bound arpl inc jno popa je bound xor inc imul jb pusha xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl inc gs popa je push je gs insl add jae gs cs dec cs outsl insl jo gs imul jo gs imul add je dec je insl add je popa je add je dec popa insl add outsb je imul push gs outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je dec inc outsb jne gs bound xor inc outsl outsb arpl add je dec outsl arpl imul insb insb arpl outsb add jae gs cs outsl insb insb arpl outsb jae addr16 inc jbe fs arpl inc gs popa outsb imul jae jne arpl popa insl gs inc insb outsl jae add movsl sbb jns cs addb mov add sbb sub add add add sbb adc add add or xor mov push or and add adc sbb or add or add sbb adc add adc adc or push adc add adc push adc push sbb adc add add push adc and add add or and add or add adc add add or push adc push and or adc add sbb add or adc or adc or add add and add or add or add add or and add push adc add add add adc add push add add add add add add push or add or add or adc add add adc add push add sbb add push add push push or add add push sbb sbb inc push and add and and add and adc push add add add adc or or add sub add mov pop jg aad cmp adc add push add sub add push add xor add push adc or or add adc or or add add add push or add push add cmp add add add push or add push add add add adc add push add xor add sub add push or add push add add or add push add inc or add adc push adc add adc add add add adc add add dec add or add inc add add dec pop add adc sbb dec or add sbb push push add add push or adc add push add add push or add push add add push or add push add push or or add push add add add adc add pop push add push or add sbb add adc add push add push add add push or add xor xor xor xor add add add and data16 xor xor aaa bound sub sub bound xor arpl add add add push add push jb jo outsl outsb inc js gs imul ja add add add add or add add or gs outsb popa jb add push and add sbbb add add add add adc add addb add sbb and or and add add push pop adc sbb or sbb add add or add add add xor pop or push add or sbb or xor add mov and push sbb add push push or add adc add push adc adc add adc pop add add add add pop add or or pop push or or add add add add pop add or or or or add or add or or pop add or pop or or add add pop sbb sub or or or add add add add add or or add add pop pop or or or add pop add add add add pop add add or add add add pop and add pop push or add add add add add add or sbb pop add add add push add lea push pop or adc adc adc add sbb or or adc add inc add xor int and add orb or or push add add or pop or or or pop pop or or or pop pop or or or sbb or or or or or sbb or or sbb or or sbb or or and sbb sbb adc add pop add sbb or adc add roll add adc pop add or add push and add adc and add sbb pop pop sbb or or or add cmp and add and pop pop or and or sbb and adc add add sub and adc sbb add sub or or sbb add add adc pop adc or push adc or adc or sbb push and adc add or push or or and add cmp and add sbb and add adcb cmp or add adc sbb pop or pop or or sbb or push add add push push and add adc push or adc add or pop sbb addl add sbb or add orl orl add or or add push add cmp adc push push push or adc push sbb and add or add add or addb add add pop pop and add add add add add add pop or adc add or or add push push push or push or or sbb add push or push or or pop pop or andl sbb adc and sbb jmp stos (bad) push xor adc les adc fiadd adc add add rolb adc add pop inc outsl jb js dec popa imul jb gs insb add add add and 